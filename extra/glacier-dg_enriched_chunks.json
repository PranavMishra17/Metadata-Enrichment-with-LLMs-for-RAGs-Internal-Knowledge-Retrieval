{
  "document_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e",
  "document_name": "glacier-dg.txt",
  "chunks": [
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_0",
      "text": "Developer Guide\nAmazon S3 Glacier\nAPI Version 2012-06-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved. Amazon S3 Glacier Developer Guide\nAmazon S3 Glacier: Developer Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.",
      "start_idx": 0,
      "end_idx": 300,
      "metadata": {
        "num_sentences": 4,
        "num_words": 44,
        "breakpoint_idx": 3,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3988505999247233,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Developer Guide",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "API Version",
            "AWS",
            "Glacier",
            "Amazon Web Services",
            "cloud storage",
            "data archiving",
            "2012-06-01",
            "API documentation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "Amazon Web Services",
            "API Version 2012-06-01",
            "Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Developer Guides"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document serves as the Developer Guide for Amazon S3 Glacier, providing technical details and guidance for using the API (Version 2012-06-01).",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the Amazon S3 Glacier Developer Guide?",
            "Which API version does this guide cover?",
            "Who owns the copyright for the Amazon S3 Glacier Developer Guide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "API documentation",
          "AWS",
          "cloud storage",
          "2012-06-01",
          "API Version 2012-06-01",
          "Amazon Web Services",
          "Glacier",
          "Amazon S3 Glacier",
          "data archiving",
          "Developer Guide",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_1",
      "text": "Amazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon. Amazon S3 Glacier Developer Guide\nTable of Contents\n.......................................................................................................................................................... x\nWhat Is Amazon S3 Glacier? ........................................................................................................... 1\nDo You Currently Use S3 Glacier? ............................................................................................................. 1\nData Model ..................................................................................................................................................... 3\nVault........................................................................................................................................................... 3\nArchive....................................................................................................................................................... 4\nJob.............................................................................................................................................................. 4\nNotification Configuration ..................................................................................................................... 5\nSupported Operations................................................................................................................................. 6\nVault Operations..................................................................................................................................... 6\nArchive Operations .................................................................................................................................. 7\nJobs ............................................................................................................................................................ 7\nAccessing S3 Glacier .................................................................................................................................... 7\nRegions and Endpoints .......................................................................................................................... 8\nGetting Started................................................................................................................................ 9\nStep 1: Before You Begin ......................................................................................................................... 10\nSet Up an AWS account ...................................................................................................................... 10\nDownload the Appropriate AWS SDK ............................................................................................... 12\nStep 2: Create a Vault ............................................................................................................................... 13\nStep 3: Upload an Archive to a Vault .................................................................................................... 14\nUpload an Archive by Using Java ...................................................................................................... 15\nUpload an Archive by Using .NET ...................................................................................................... 20\nStep 4: Download an Archive from a Vault .......................................................................................... 22\nDownload an Archive by Using Java................................................................................................. 23\nDownload an Archive by Using .NET ................................................................................................ 25\nStep 5: Delete an Archive from a Vault ................................................................................................ 27\nRelated Sections .................................................................................................................................... 27\nDelete an Archive by Using Java....................................................................................................... 28\nDelete an Archive by Using .NET ....................................................................................................... 29\nDeleting an Archive by Using the AWS CLI ..................................................................................... 30\nStep 6: Delete a Vault ............................................................................................................................... 33\nWhere Do I Go From Here? ...................................................................................................................... 34\nWorking with Vaults ...................................................................................................................... 35\nVault Operations in S3 Glacier ................................................................................................................ 36\nAPI Version 2012-06-01 iii\n\nAmazon S3 Glacier Developer Guide\nCreating and Deleting Vaults ............................................................................................................. 36\nRetrieving Vault Metadata .................................................................................................................. 36\nDownloading a Vault Inventory ......................................................................................................... 36\nConfiguring Vault Notifications ......................................................................................................... 37\nCreating a Vault .......................................................................................................................................... 37\nCreating a Vault Using Java ............................................................................................................... 38\nCreating a Vault Using .NET ............................................................................................................... 41\nCreating a Vault Using REST .............................................................................................................. 46\nCreating a Vault Using the Console .................................................................................................. 46\nCreating a Vault Using the AWS CLI ................................................................................................. 46\nRetrieving Vault Metadata ....................................................................................................................... 48\nRetrieving Vault Metadata Using Java ............................................................................................. 48\nRetrieving Vault Metadata Using .NET ............................................................................................. 51\nRetrieving Vault Metadata Using REST ............................................................................................ 54\nRetrieving Vault Metadata Using the AWS CLI ............................................................................... 54\nDownloading a Vault Inventory .............................................................................................................. 55\nAbout the Inventory ............................................................................................................................. 57\nDownloading a Vault Inventory Using Java .................................................................................... 57\nDownloading a Vault Inventory Using .NET .................................................................................... 65\nDownloading a Vault Inventory Using REST ................................................................................... 72\nDownloading a Vault Inventory Using the AWS CLI ...................................................................... 73\nConfiguring Vault Notifications ............................................................................................................... 75\nGeneral Concepts .................................................................................................................................. 76\nConfiguring Vault Notifications Using Java ..................................................................................... 78\nConfiguring Vault Notifications Using .NET ..................................................................................... 81\nConfiguring Vault Notifications Using the REST API ..................................................................... 84\nConfiguring Vault Notifications by Using the Console .................................................................. 84\nConfiguring Vault Notifications Using the CLI ................................................................................ 86\nDeleting a Vault .......................................................................................................................................... 87\nDeleting a Vault Using Java ............................................................................................................... 88\nDeleting a Vault Using .NET ............................................................................................................... 89\nDeleting a Vault Using REST .............................................................................................................. 91\nDeleting an Empty Vault by Using the Console ............................................................................. 91\nDeleting a Vault Using the AWS CLI ................................................................................................. 92\nTagging Vaults............................................................................................................................................ 95\nTagging Vaults by Using the Amazon S3 Glacier Console ............................................................ 96\nAPI Version 2012-06-01 iv\n\nAmazon S3 Glacier Developer Guide\nTagging Vaults by Using the AWS CLI .............................................................................................. 97\nTagging Vaults by Using the Amazon S3 Glacier API .................................................................... 98\nRelated Sections .................................................................................................................................... 98\nVault Lock.................................................................................................................................................... 99\nVault Locking Overview ....................................................................................................................... 99\nVault Locking by Using the API ....................................................................................................... 100\nVault Locking Using the CLI ............................................................................................................. 101\nVault Locking by Using the Console .............................................................................................. 103\nWorking with Archives ................................................................................................................ 106\nArchive Operations.................................................................................................................................. 107\nUploading an Archive ........................................................................................................................ 107\nFinding an Archive .............................................................................................................................. 107\nDownloading an Archive ................................................................................................................... 107\nDeleting an Archive ............................................................................................................................ 108\nUpdating an Archive .......................................................................................................................... 108\nMaintaining Client-Side Archive Metadata ......................................................................................... 108\nUploading an Archive .............................................................................................................................. 108\nOptions for Uploading an Archive .................................................................................................. 109\nUploading an Archive in a Single Operation ................................................................................ 110\nUploading Large Archives in Parts .................................................................................................. 120\nDownloading an Archive ........................................................................................................................ 137\nRetrieving Archives in Console ........................................................................................................ 138\nDownloading an Archive Using Java .............................................................................................. 142\nDownloading an Archive Using .NET .............................................................................................. 159\nDownloading an Archive by Using REST ....................................................................................... 175\nDownloading an Archive Using the AWS CLI ................................................................................ 176\nDeleting an Archive ................................................................................................................................. 179\nDeleting an Archive Using Java ....................................................................................................... 180\nDeleting an Archive Using .NET ....................................................................................................... 182\nDeleting an Archive Using REST ...................................................................................................... 185\nDeleting an Archive Using the AWS CLI ........................................................................................ 185\nUsing the AWS SDKs ................................................................................................................... 189\nAWS SDK Libraries for Java and .NET .................................................................................................. 189\nWhat Is the Low-Level API?",
      "start_idx": 301,
      "end_idx": 15500,
      "metadata": {
        "num_sentences": 6,
        "num_words": 768,
        "breakpoint_idx": 9,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2357937494913737,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Archive",
            "AWS CLI",
            "SDK",
            "Java",
            ".NET",
            "REST API",
            "Vault Lock",
            "Inventory"
          ],
          "entities": [
            "Amazon",
            "AWS SDK",
            "S3 Glacier",
            "Vault Lock",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "Vault Management",
            "Archive Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            ".NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This document provides a comprehensive guide to using Amazon S3 Glacier, including setting up, managing vaults, performing archive operations, and leveraging AWS SDKs for Java and .NET. It covers step-by-step instructions, API usage, and CLI commands for various operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create and delete a vault in Amazon S3 Glacier?",
            "What are the steps to upload and download an archive using the AWS CLI?",
            "How do I configure vault notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS CLI",
          "Java",
          "Vault Lock",
          "SDK",
          "Inventory",
          "Amazon",
          "Vault",
          "AWS SDK",
          "REST API",
          "Archive",
          "API Version 2012-06-01",
          ".NET",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_2",
      "text": "............................................................................................................. 189\nWhat Is the High-Level API? ............................................................................................................ 190\nWhen to Use the High-Level and Low-Level API ......................................................................... 190\nAPI Version 2012-06-01 v\n\nAmazon S3 Glacier Developer Guide\nWorking with AWS SDKs ........................................................................................................................ 190\nUsing the AWS SDK for Java ................................................................................................................. 192\nUsing the Low-Level API ................................................................................................................... 192\nUsing the High-Level API .................................................................................................................. 193\nRunning Java Examples Using Eclipse ........................................................................................... 194\nSetting the Endpoint ......................................................................................................................... 194\nUsing the AWS SDK for .NET ................................................................................................................. 195\nUsing the Low-Level API ................................................................................................................... 196\nUsing the High-Level API .................................................................................................................. 197\nRunning .NET Examples ..................................................................................................................... 197\nSetting the Endpoint ......................................................................................................................... 198\nCode examples............................................................................................................................. 199\nBasics.......................................................................................................................................................... 201\nHello Amazon S3 Glacier .................................................................................................................. 202\nActions .................................................................................................................................................. 203\nScenarios.................................................................................................................................................... 266\nArchive a file, get notifications, and initiate a job ....................................................................... 266\nGet archive content and delete the archive .................................................................................. 272\nSecurity ........................................................................................................................................ 278\nData Protection ........................................................................................................................................ 278\nData Encryption.................................................................................................................................. 279\nKey Management................................................................................................................................ 280\nInternetwork Traffic Privacy ............................................................................................................. 280\nIdentity and Access Management ........................................................................................................ 280\nAudience............................................................................................................................................... 281\nAuthenticating with identities ......................................................................................................... 282\nManaging access using policies ....................................................................................................... 285\nHow Amazon S3 Glacier works with IAM ...................................................................................... 287\nIdentity-based policy examples ....................................................................................................... 295\nResource-based policy examples ..................................................................................................... 302\nTroubleshooting .................................................................................................................................. 308\nAmazon S3 Glacier API Permissions Reference ............................................................................ 310\nLogging and Monitoring ......................................................................................................................... 318\nCompliance Validation ............................................................................................................................ 319\nResilience ................................................................................................................................................... 321\nInfrastructure Security............................................................................................................................ 322\nAPI Version 2012-06-01 vi\n\nAmazon S3 Glacier Developer Guide\nVPC Endpoints..................................................................................................................................... 322\nData Retrieval Policies ................................................................................................................ 323\nChoosing an S3 Glacier Data Retrieval Policy .................................................................................... 323\nFree Tier Only Policy ......................................................................................................................... 324\nMax Retrieval Rate Policy ................................................................................................................. 324\nNo Retrieval Limit Policy .................................................................................................................. 325\nUsing the S3 Glacier Console to Set Up a Data Retrieval Policy .................................................... 325\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval Policy ............................................ 326\nUsing the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy ............................. 326\nUsing the AWS SDKs to Set Up a Data Retrieval Policy ............................................................. 326\nTagging Resources ....................................................................................................................... 327\nTagging Basics .......................................................................................................................................... 327\nTag Restrictions ........................................................................................................................................ 328\nTracking Costs Using Tagging ............................................................................................................... 328\nManaging Access Control with Tagging .............................................................................................. 328\nRelated Sections ....................................................................................................................................... 329\nAudit Logging with AWS CloudTrail ........................................................................................... 330\nAmazon S3 Glacier Information in CloudTrail ................................................................................... 330\nUnderstanding Amazon S3 Glacier Log File Entries ......................................................................... 331\nAPI Reference............................................................................................................................... 335\nCommon Request Headers .................................................................................................................... 336\nCommon Response Headers .................................................................................................................. 339\nSigning Requests...................................................................................................................................... 339\nExample Signature Calculation ........................................................................................................ 341\nCalculating Signatures for the Streaming Operations ................................................................ 342\nComputing Checksums ........................................................................................................................... 345\nTree Hash Example 1: Uploading an archive in a single request .............................................. 346\nTree Hash Example 2: Uploading an archive using a multipart upload ................................... 347\nComputing the Tree Hash of a File ................................................................................................ 348\nReceiving Checksums When Downloading Data .......................................................................... 358\nError Responses ........................................................................................................................................ 360\nExample 1: Describe Job request with a job ID that does not exist ......................................... 363\nExample 2: List Jobs request with an invalid value for the request parameter ...................... 364\nVault Operations...................................................................................................................................... 365\nAbort Vault Lock ................................................................................................................................. 366\nAdd Tags To Vault .............................................................................................................................. 369\nAPI Version 2012-06-01 vii\n\nAmazon S3 Glacier Developer Guide\nCreate Vault ......................................................................................................................................... 372\nComplete Vault Lock ......................................................................................................................... 375\nDelete Vault ......................................................................................................................................... 378\nDelete Vault Access Policy ................................................................................................................ 381\nDelete Vault Notifications ................................................................................................................. 384\nDescribe Vault..................................................................................................................................... 386\nGet Vault Access Policy ..................................................................................................................... 390\nGet Vault Lock ..................................................................................................................................... 394\nGet Vault Notifications ...................................................................................................................... 398\nInitiate Vault Lock .............................................................................................................................. 402\nList Tags For Vault ............................................................................................................................. 406\nList Vaults............................................................................................................................................. 409\nRemove Tags From Vault .................................................................................................................. 416\nSet Vault Access Policy ...................................................................................................................... 419\nSet Vault Notification Configuration .............................................................................................. 422\nArchive Operations.................................................................................................................................. 426\nDelete Archive ..................................................................................................................................... 426\nUpload Archive.................................................................................................................................... 429\nMultipart Upload Operations ................................................................................................................ 434\nAbort Multipart Upload .................................................................................................................... 435\nComplete Multipart Upload ............................................................................................................. 437\nInitiate Multipart Upload .................................................................................................................. 442\nList Parts ............................................................................................................................................... 447\nList Multipart Uploads ....................................................................................................................... 454\nUpload Part .......................................................................................................................................... 461\nJob Operations......................................................................................................................................... 467\nDescribe Job ........................................................................................................................................ 467\nGet Job Output ................................................................................................................................... 478\nInitiate Job ........................................................................................................................................... 489\nList Jobs ................................................................................................................................................ 500\nData Types Used in Job Operations .................................................................................................... 510\nCSVInput ............................................................................................................................................... 510\nCSVOutput............................................................................................................................................ 512\nEncryption............................................................................................................................................ 513\nGlacierJobDescription........................................................................................................................ 514\nGrant...................................................................................................................................................... 518\nAPI Version 2012-06-01 viii\n\nAmazon S3 Glacier Developer Guide\nGrantee ................................................................................................................................................. 518\nInputSerialization................................................................................................................................ 519\nInventoryRetrievalJobInput .............................................................................................................. 520\njobParameters ..................................................................................................................................... 521\nOutputLocation................................................................................................................................... 524\nOutputSerialization ............................................................................................................................ 525\nS3Location ............................................................................................................................................ 525\nSelectParameters ................................................................................................................................ 527\nData Retrieval Operations ...................................................................................................................... 528\nGet Data Retrieval Policy .................................................................................................................. 528\nList Provision Capacity ...................................................................................................................... 532\nPurchase Provisioned Capacity ........................................................................................................ 536\nSet Data Retrieval Policy .................................................................................................................. 539\nDocument History........................................................................................................................ 545\nEarlier Updates......................................................................................................................................... 546\nAWS Glossary ............................................................................................................................... 548\nAPI Version 2012-06-01 ix\n\nAmazon S3 Glacier Developer Guide\nThis page is only for existing customers of the S3 Glacier service using Vaults and the original\nREST API from 2012. If you're looking for archival storage solutions we suggest using the S3 Glacier storage classes\nin Amazon S3, S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive.",
      "start_idx": 15501,
      "end_idx": 34424,
      "metadata": {
        "num_sentences": 3,
        "num_words": 787,
        "breakpoint_idx": 12,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.38431493441263836,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Procedural Steps",
              "Conceptual Overview"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "API",
            "Vault Operations",
            "Data Retrieval Policy",
            "Multipart Upload",
            "IAM",
            "Encryption",
            "Logging",
            "Tagging",
            "Compliance"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier REST API",
            "CloudTrail",
            "Vault Lock"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API and Operations",
          "secondary_categories": [
            "Data Retrieval Policies",
            "Security and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This document provides a comprehensive guide to Amazon S3 Glacier, including API usage, SDK integrations, security, tagging, logging, and operations for managing vaults, archives, and jobs. It also offers examples, troubleshooting tips, and details on data retrieval policies and encryption methods.",
          "intents": [
            "How-To",
            "Debug",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "How do I use the High-Level and Low-Level APIs for Amazon S3 Glacier?",
            "What are the steps to set up a data retrieval policy using the S3 Glacier Console or API?",
            "How can I troubleshoot common errors in Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API and Operations]",
        "tf_idf_keywords": [
          "Compliance",
          "CloudTrail",
          "Encryption",
          "Tagging",
          "IAM",
          "Vault Lock",
          "Amazon S3 Glacier REST API",
          "Vault Operations",
          "Logging",
          "API",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "Data Retrieval Policy",
          "AWS SDK for Java",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_3",
      "text": "To learn more about these storage options, see S3 Glacier storage classes and Long-term\ndata storage using S3 Glacier storage classes in the Amazon S3 User Guide. These storage classes\nuse the Amazon S3 API, are available in all regions, and can be managed within the Amazon S3\nconsole. They offer features like Storage Cost Analysis, Storage Lens, advanced optional encryption\nfeatures, and more. API Version 2012-06-01 x\n\nAmazon S3 Glacier Developer Guide\nWhat Is Amazon S3 Glacier? If you're currently using the Amazon S3 Glacier (S3 Glacier) service and want to learn more, you'll\nfind the information that you need in this guide. S3 Glacier is a secure and durable service for low-\ncost data archiving and long-term backup using vaults. For more information about S3 Glacier\nservice pricing, see S3 Glacier pricing. Topics\n\u2022 Do You Currently Use S3 Glacier? \u2022 Amazon S3 Glacier Data Model\n\u2022 Supported Operations in S3 Glacier\n\u2022 Accessing Amazon S3 Glacier\nDo You Currently Use S3 Glacier?",
      "start_idx": 34425,
      "end_idx": 36766,
      "metadata": {
        "num_sentences": 9,
        "num_words": 165,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5917693773905436,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "storage classes",
            "Amazon S3 API",
            "encryption features",
            "Storage Cost Analysis",
            "Storage Lens",
            "data archiving",
            "long-term backup",
            "vaults",
            "pricing"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Glacier storage classes",
            "Amazon S3 User Guide",
            "Amazon S3 console",
            "S3 Glacier pricing"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "Encryption"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "Amazon S3 API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information about Amazon S3 Glacier storage classes, their features, and usage for low-cost data archiving and long-term backup. It includes details on supported operations, accessing the service, and pricing information.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What features do Amazon S3 Glacier storage classes offer?",
            "How can I access and manage Amazon S3 Glacier storage classes?",
            "What is the pricing structure for S3 Glacier services?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 console",
          "Storage Lens",
          "S3 Glacier",
          "Amazon S3",
          "Amazon S3 API",
          "long-term backup",
          "S3 Glacier storage classes",
          "Storage Cost Analysis",
          "encryption features",
          "Amazon S3 User Guide",
          "S3 Glacier pricing",
          "data archiving",
          "Amazon S3 Glacier",
          "vaults",
          "storage classes"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_4",
      "text": "Note\nThis section is about the S3 Glacier service. If you currently use the S3 Glacier storage\nclasses (S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive), see Storage classes for archiving objects in the Amazon S3 User Guide. If you currently use the S3 Glacier service and want to learn more, we recommend that you begin\nby reading the following sections:\n\u2022 What is Amazon S3 Glacier \u2013 The rest of this section describes the underlying data model, the\noperations it supports, and the AWS SDKs that you can use to interact with the service. \u2022 Getting Started \u2013 The Getting Started with Amazon S3 Glacier section walks you through the\nprocess of creating a vault, uploading archives, creating jobs to download archives, retrieving the\njob output, and deleting archives. Important\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI)\nDo You Currently Use S3 Glacier? API Version 2012-06-01 1\n\nAmazon S3 Glacier Developer Guide\nor write code. There is no console support for archive operations. For example, to upload\ndata, such as photos, videos, and other documents, you must either use the AWS CLI or\nwrite code to make requests, by using either the REST API directly or by using the AWS\nSDKs.",
      "start_idx": 34425,
      "end_idx": 36766,
      "metadata": {
        "num_sentences": 9,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5188386705186632,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Service Overview",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "storage classes",
            "AWS SDKs",
            "AWS CLI",
            "archives",
            "vault",
            "REST API",
            "Amazon S3",
            "console support",
            "data model"
          ],
          "entities": [
            "S3 Glacier Instant Retrieval",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "Amazon S3 Glacier",
            "AWS Command Line Interface"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "S3 Glacier Instant Retrieval",
            "S3 Glacier Flexible Retrieval"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This section explains the Amazon S3 Glacier service, its data model, operations, and how to interact with it using AWS CLI or SDKs, as there is no console support for archive operations. It also provides guidance for getting started with creating vaults, uploading, and managing archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 Glacier and how does it work?",
            "How can I upload or manage archives in Amazon S3 Glacier?",
            "Is there console support for archive operations in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "archives",
          "Amazon S3",
          "S3 Glacier",
          "AWS CLI",
          "AWS SDKs",
          "vault",
          "REST API",
          "S3 Glacier Deep Archive",
          "S3 Glacier Instant Retrieval",
          "data model",
          "Amazon S3 Glacier",
          "console support",
          "AWS Command Line Interface",
          "S3 Glacier Flexible Retrieval",
          "storage classes"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_5",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For\nexamples of using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with\nthe AWS Command Line Interface. Beyond the getting started section, you'll probably want to learn more about S3 Glacier\noperations. The following sections provide detailed information about working with S3 Glacier by\nusing the REST API and the AWS SDKs for Java and Microsoft .NET:\n\u2022 Using the AWS SDKs with Amazon S3 Glacier\nThis section provides an overview of the AWS SDKs used in various code examples in this guide. A review of this section will help when reading the following sections. It includes an overview\nof the high-level and the low-level APIs that these SDKs offer, when to use them, and common\nsteps for running the code examples provided in this guide. \u2022 Working with Vaults in Amazon S3 Glacier\nThis section provides details of various vault operations, such as creating a vault, retrieving vault\nmetadata, using jobs to retrieve vault inventory, and configuring vault notifications. In addition\nto using the S3 Glacier console, you can use the AWS SDKs for various vault operations. This\nsection describes the API and provides working samples by using the AWS SDK for Java and the\nAWS SDK for .NET.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 235,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40745552910698785,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "REST API",
            "AWS SDKs",
            "vault operations",
            "Java",
            ".NET",
            "vault notifications",
            "high-level APIs",
            "low-level APIs"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "vault inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS CLI",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "Vault operations"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on installing and using the AWS CLI with S3 Glacier, as well as detailed information on S3 Glacier operations through the REST API and AWS SDKs for Java and .NET. It includes examples and instructions for vault operations, API usage, and SDK implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I install and use the AWS CLI with S3 Glacier?",
            "What are the steps for performing vault operations in S3 Glacier?",
            "How can I use the AWS SDKs for Java and .NET to interact with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "vault inventory",
          "S3 Glacier",
          "low-level APIs",
          "AWS CLI",
          "Java",
          "vault notifications",
          "AWS SDKs",
          "REST API",
          "vault operations",
          ".NET",
          "high-level APIs",
          "AWS SDK for Java",
          "Vault operations",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_6",
      "text": "\u2022 Working with Archives in Amazon S3 Glacier\nThis section provides details of archive operations, such as uploading an archive in a single\nrequest or using a multipart upload operation to upload large archives in parts. The section also\nexplains how to create jobs to download archives asynchronously. The section provides examples\nby using the AWS SDK for Java and the AWS SDK for .NET. \u2022 API Reference for Amazon S3 Glacier\nDo You Currently Use S3 Glacier? API Version 2012-06-01 2\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier is a RESTful service. This section describes the REST operations, including the syntax,\nand example requests and responses for all the operations. The AWS SDK libraries wrap this API,\nsimplifying your programming tasks. Amazon S3 Glacier Data Model\nThe Amazon S3 Glacier data model core components include vaults and archives. S3 Glacier is\na REST-based web service. In terms of REST, vaults and archives are the resources.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 156,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42418348524305555,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive operations",
            "multipart upload",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "RESTful service",
            "API Version 2012-06-01",
            "vaults",
            "archives",
            "data model"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "API Version 2012-06-01",
            "REST"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDKs",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains archive operations in Amazon S3 Glacier, including uploading archives, downloading asynchronously, and using RESTful APIs with SDKs. It also describes the data model components like vaults and archives for S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier using multipart upload?",
            "What are the REST operations available in Amazon S3 Glacier?",
            "What is the data model structure of Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "archives",
          "archive operations",
          "REST",
          "API Version 2012-06-01",
          "data model",
          "Amazon S3 Glacier",
          "vaults",
          "AWS SDK for Java",
          "multipart upload",
          "AWS SDK for .NET",
          "RESTful service"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_7",
      "text": "In addition,\nthe S3 Glacier data model includes job and notification-configuration resources. These resources\ncomplement the core resources. Topics\n\u2022 Vault\n\u2022 Archive\n\u2022 Job\n\u2022 Notification Configuration\nVault\nIn S3 Glacier, a vault is a container for storing archives. A vault is similar to an Amazon S3 bucket. When you create a vault, you specify a name and choose an AWS Region where you want to create\nthe vault. Each vault resource has a unique address. The general form is:\nhttps://region-specific-endpoint/account-id/vaults/vault-name\nFor example, suppose that you create a vault (examplevault) in the US West (Oregon) Region in\nyour account with the ID 111122223333. You can address this vault by using the following URI:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault\nHere is what the various components of the URI mean:\n\u2022 glacier.us-west-2.amazonaws.com identifies the US West (Oregon) Region. \u2022 111122223333 is the AWS account ID that owns the vault. Data Model API Version 2012-06-01 3\n\nAmazon S3 Glacier Developer Guide\n\u2022 vaults refers to the collection of vaults that are owned by the AWS account.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45511275397406686,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Resource Description",
              "URI Explanation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "archive",
            "job",
            "notification configuration",
            "AWS Region",
            "URI",
            "account ID",
            "endpoint",
            "data model"
          ],
          "entities": [
            "S3 Glacier",
            "vault",
            "AWS Region",
            "Amazon S3",
            "US West (Oregon)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage",
          "secondary_categories": [
            "Cloud Computing",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains the S3 Glacier data model's vault resource, which is a container for storing archives, and provides details on vault creation, naming, and addressing via region-specific endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What is the structure of a vault URI in S3 Glacier?",
            "What does each component of the vault URI represent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Storage]",
        "tf_idf_keywords": [
          "notification configuration",
          "Amazon S3",
          "S3 Glacier",
          "AWS Region",
          "archive",
          "endpoint",
          "vault",
          "data model",
          "URI",
          "Amazon S3 Glacier",
          "account ID",
          "US West (Oregon)",
          "job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_8",
      "text": "\u2022 examplevault identifies a specific vault in the vaults collection. An AWS account can create vaults in any supported AWS Region. For list of supported AWS\nRegions, see Accessing Amazon S3 Glacier. Within a Region, an account must use unique vault\nnames. An AWS account can create same-named vaults in different Regions. You can store an unlimited number of archives in a vault. Depending on your business or\napplication needs, you can store these archives in one vault or multiple vaults. S3 Glacier supports various vault operations. Vault operations are Region-specific. For example,\nwhen you create a vault, you create it in a specific Region.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 105,
        "chunk_type": "semantic_split",
        "coherence_score": 0.48802303738064234,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "AWS Regions",
              "Vault Operations",
              "Storage"
            ]
          },
          "keywords": [
            "vault",
            "AWS account",
            "Region",
            "S3 Glacier",
            "archives",
            "vault operations",
            "vault names",
            "unlimited storage",
            "supported Regions",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "examplevault",
            "AWS account",
            "Amazon S3 Glacier",
            "vaults collection",
            "Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Storage Management",
          "secondary_categories": [
            "AWS Regions",
            "Vault Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains the concept of vaults in Amazon S3 Glacier, their region-specific nature, naming conventions, and the ability to store unlimited archives in vaults. It also highlights that vault operations are specific to AWS Regions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "Can I create vaults with the same name in different AWS Regions?",
            "What are the naming conventions for vaults in Amazon S3 Glacier?",
            "Are vault operations in S3 Glacier region-specific?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Storage Management]",
        "tf_idf_keywords": [
          "archives",
          "unlimited storage",
          "S3 Glacier",
          "vault names",
          "AWS account",
          "examplevault",
          "vaults collection",
          "vault",
          "vault operations",
          "Region",
          "Amazon S3 Glacier",
          "supported Regions"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_9",
      "text": "When you request a vault list, you\nrequest it from a specific AWS Region, and the resulting list includes only vaults created in that\nspecific Region. Archive\nAn archive can be any data, such as a photo, video, or document. An archive is similar to an Amazon\nS3 object, and is the base unit of storage in S3 Glacier. Each archive has a unique ID and an\noptional description. You can specify this optional description only during the upload of an archive. S3 Glacier assigns the archive an ID, which is unique in the AWS Region in which the archive is\nstored. Each archive has a unique address. The general form is as follows:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/archives/archive-id\nThe following is an example URI of an archive stored in the examplevault vault in the US West\n(Oregon) Region in account 111122223333:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/\nexamplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can store an unlimited number of archives in a vault. Job\nAn S3 Glacier job can retrieve an archive, or get an inventory of a vault. Archive API Version 2012-06-01 4\n\nAmazon S3 Glacier Developer Guide\nRetrieving archives and vault inventories (lists of archives) are asynchronous operations in S3\nGlacier, in which you first initiate a job, and then download the job output after S3 Glacier\ncompletes the job.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4858863830566406,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "vault",
            "AWS Region",
            "archive",
            "S3 Glacier",
            "unique ID",
            "endpoint",
            "URI",
            "job",
            "vault inventory",
            "asynchronous operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "archive ID",
            "examplevault",
            "US West (Oregon)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "Data Storage",
            "Asynchronous Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to request a list of vaults, manage archives in Amazon S3 Glacier, and initiate asynchronous jobs to retrieve archives or vault inventories. It includes details on archive storage, unique identifiers, and endpoint structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a list of vaults in a specific AWS Region?",
            "What is the format of an archive's unique address in S3 Glacier?",
            "How can I initiate a job to retrieve an archive or a vault inventory in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "vault inventory",
          "S3 Glacier",
          "unique ID",
          "AWS Region",
          "archive",
          "asynchronous operations",
          "examplevault",
          "Amazon S3",
          "archive ID",
          "vault",
          "job",
          "URI",
          "Amazon S3 Glacier",
          "US West (Oregon)",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_10",
      "text": "Note\nS3 Glacier offers a cold-storage data-archival solution. If your application needs a storage\nsolution that requires real-time data retrieval, you might consider using Amazon S3. For\nmore information, see Amazon Simple Storage Service (Amazon S3). To initiate a vault inventory job, you provide a vault name. Archive retrieval jobs require both the\nvault name and the archive ID. You can also provide an optional job description to help identify the\njobs. Archive retrieval and vault inventory jobs are associated with a vault. A vault can have multiple jobs\nin progress at any point in time. When you send a job request (initiate a job), S3 Glacier returns to\nyou a job ID to track the job. Each job is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/jobs/job-id\nThe following is an example of a job associated with an examplevault vault in the US West\n(Oregon) Region in account 111122223333.\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault/jobs/\nHkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nFor each job, S3 Glacier maintains information, such as the job type, description, creation date,\ncompletion date, and job status.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3871043735080295,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "cold-storage",
            "vault inventory job",
            "archive retrieval",
            "vault name",
            "archive ID",
            "job ID",
            "URI",
            "Amazon S3",
            "job status"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon S3",
            "US West (Oregon) Region",
            "vault",
            "job ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Archival and Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "S3 Glacier provides a cold-storage solution for data archival, with options for vault inventory and archive retrieval jobs, each tracked by a unique job ID and URI. Jobs are associated with vaults and include metadata like type, description, creation date, and status.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault inventory job in S3 Glacier?",
            "What information is required to retrieve an archive from S3 Glacier?",
            "What metadata does S3 Glacier maintain for each job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Archival and Retrieval]",
        "tf_idf_keywords": [
          "vault name",
          "S3 Glacier",
          "Amazon S3",
          "US West (Oregon) Region",
          "archive ID",
          "cold-storage",
          "vault",
          "job ID",
          "archive retrieval",
          "URI",
          "Amazon S3 Glacier",
          "job status",
          "vault inventory job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_11",
      "text": "You can obtain information about a specific job or obtain a list\nof all your jobs associated with a vault. The list of jobs that S3 Glacier returns includes all the in-\nprogress and recently finished jobs. Notification Configuration\nBecause jobs take time to run, S3 Glacier supports a notification mechanism to notify you when a\njob is completed. You can configure a vault to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when a job is completed. You can specify one Amazon SNS topic per\nvault in the notification configuration. Notification Configuration API Version 2012-06-01 5\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier stores the notification configuration as a JSON document. The following is an example\nvault notification configuration:\n{\n\"Topic\": \"arn:aws:sns:us-west-2:111122223333:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nNotification configurations are associated with vaults; you can have one for each vault. Each\nnotification configuration resource is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/notification-\nconfiguration\nS3 Glacier supports operations to set, get, and delete a notification configuration. When you delete\na notification configuration, no notifications are sent when any data retrieval operation on the\nvault is completed. Supported Operations in S3 Glacier\nTo work with vaults and archives (see Amazon S3 Glacier Data Model), Amazon S3 Glacier supports\na set of operations.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4568327162000868,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Notification Configuration",
              "API Details",
              "JSON Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "notification configuration",
            "Amazon SNS",
            "job",
            "JSON document",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "endpoint",
            "data retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "API Version 2012-06-01",
            "vault notification configuration",
            "region-specific endpoint"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Notification Configuration",
          "secondary_categories": [
            "Job Management",
            "Data Retrieval Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage job notifications in Amazon S3 Glacier, including configuring a vault to send notifications to an Amazon SNS topic when a job is completed and performing operations like set, get, and delete on notification configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure a vault to send notifications for completed jobs in Amazon S3 Glacier?",
            "What operations are supported for managing notification configurations in S3 Glacier?",
            "What is the format of a vault notification configuration in JSON?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Notification Configuration]",
        "tf_idf_keywords": [
          "notification configuration",
          "S3 Glacier",
          "vault notification configuration",
          "JSON document",
          "endpoint",
          "vault",
          "API Version 2012-06-01",
          "Amazon SNS",
          "data retrieval",
          "Amazon S3 Glacier",
          "ArchiveRetrievalCompleted",
          "region-specific endpoint",
          "job",
          "InventoryRetrievalCompleted"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_12",
      "text": "Among all the supported operations, only the following operations are\nasynchronous:\n\u2022 Retrieving an archive\n\u2022 Retrieving a vault inventory (list of archives)\nThese operations require you to first initiate a job and then download the job output. The following\nsections summarize the S3 Glacier operations. Vault Operations\nS3 Glacier provides operations to create and delete vaults. You can obtain a vault description for a\nspecific vault or for all vaults in an AWS Region. The vault description provides information, such\nas the creation date, the number of archives in the vault, the total size in bytes used by all the\narchives in the vault, and the date that S3 Glacier generated the vault inventory. S3 Glacier also\nprovides operations to set, retrieve, and delete a notification configuration on the vault. For more\ninformation, see Working with Vaults in Amazon S3 Glacier. Supported Operations API Version 2012-06-01 6\n\nAmazon S3 Glacier Developer Guide\nArchive Operations\nS3 Glacier provides operations for you to upload and delete archives. You cannot update an\nexisting archive; you must delete the existing archive and upload a new archive. Each time that you\nupload an archive, S3 Glacier generates a new archive ID.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4558289845784505,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Operations Overview",
              "Asynchronous Operations",
              "Vault Operations",
              "Archive Operations"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "asynchronous operations",
            "vault",
            "archive",
            "job output",
            "vault inventory",
            "notification configuration",
            "API Version 2012-06-01",
            "AWS Region",
            "archive ID"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Region",
            "vault inventory",
            "archive ID",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Asynchronous Operations",
            "Vault and Archive Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the asynchronous operations in Amazon S3 Glacier, including archive and vault inventory retrieval, and describes vault and archive operations such as creation, deletion, and notification configuration management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the asynchronous operations supported by S3 Glacier?",
            "How can I create or delete a vault in S3 Glacier?",
            "What information is included in a vault description in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "notification configuration",
          "vault inventory",
          "S3 Glacier",
          "AWS Region",
          "archive",
          "asynchronous operations",
          "archive ID",
          "vault",
          "job output",
          "API Version 2012-06-01",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_13",
      "text": "For more information, see Working with\nArchives in Amazon S3 Glacier. Jobs\nYou can initiate an S3 Glacier job to perform a retrieval on an archive or get an inventory of a vault. The following are the types of S3 Glacier jobs:\n\u2022 archive-retrieval \u2013 Retrieve an archive. For more information, see Downloading an Archive in S3 Glacier. \u2022 inventory-retrieval \u2013 Inventory a vault. For more information, see Downloading a Vault Inventory in Amazon S3 Glacier. Accessing Amazon S3 Glacier\nAmazon S3 Glacier is a RESTful web service that uses HTTP and HTTPS as a transport protocol and\nJavaScript Object Notation (JSON) as a message-serialization format. Your application code can\nmake requests directly to the S3 Glacier web service API. When using the REST API directly, you\nmust write the necessary code to sign and authenticate your requests. For more information about\nthe API, see API Reference for Amazon S3 Glacier.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 151,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5339633093939887,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive-retrieval",
            "inventory-retrieval",
            "vault inventory",
            "RESTful web service",
            "HTTP",
            "HTTPS",
            "JSON",
            "API",
            "authentication"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Glacier job",
            "archive-retrieval",
            "inventory-retrieval",
            "API Reference for Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "RESTful APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "JavaScript Object Notation (JSON)"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to work with Amazon S3 Glacier, including initiating jobs for archive retrieval or vault inventory, and accessing the service via its RESTful API using JSON for message serialization.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier?",
            "What are the types of jobs available in Amazon S3 Glacier?",
            "How do I access Amazon S3 Glacier using its REST API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "vault inventory",
          "authentication",
          "RESTful web service",
          "HTTPS",
          "archive-retrieval",
          "API",
          "API Reference for Amazon S3 Glacier",
          "HTTP",
          "Amazon S3 Glacier",
          "JSON",
          "S3 Glacier job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_14",
      "text": "Alternatively, you can simplify application development by using the AWS SDKs that wrap the S3\nGlacier REST API calls. You provide your credentials, and these libraries take care of authentication\nand request signing. For more information about using the AWS SDKs, see Using the AWS SDKs\nwith Amazon S3 Glacier. S3 Glacier also provides a console. However, all archive and job operations require you to write\ncode and make requests by using either the REST API directly or the AWS SDK wrapper libraries. To\naccess the S3 Glacier console, go to S3 Glacier Console. Archive Operations API Version 2012-06-01 7\n\nAmazon S3 Glacier Developer Guide\nRegions and Endpoints\nYou create a vault in a specific AWS Region. You always send your S3 Glacier requests to an\nendpoint specific to an AWS Region. For a list of the AWS Regions supported by S3 Glacier, see\nAmazon S3 Glacier endpoints and quotas in the AWS General Reference. Regions and Endpoints API Version 2012-06-01 8\n\nAmazon S3 Glacier Developer Guide\nGetting Started with Amazon S3 Glacier\nYou can get started with Amazon S3 Glacier (S3 Glacier) by working with vaults and archives.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5364340464274089,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDKs",
            "S3 Glacier",
            "REST API",
            "authentication",
            "request signing",
            "archive operations",
            "vault",
            "AWS Region",
            "endpoints",
            "console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "S3 Glacier Console",
            "API Version 2012-06-01",
            "AWS General Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Regions and Endpoints"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "REST API",
            "AWS SDK libraries"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to simplify application development with AWS SDKs for Amazon S3 Glacier, outlines the use of the S3 Glacier console, and provides information on regions, endpoints, and getting started with vaults and archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I simplify application development with AWS SDKs for S3 Glacier?",
            "What are the requirements for using the S3 Glacier console?",
            "Where can I find a list of supported AWS Regions and endpoints for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive operations",
          "request signing",
          "S3 Glacier",
          "AWS Region",
          "console",
          "AWS SDKs",
          "AWS SDK",
          "authentication",
          "vault",
          "REST API",
          "AWS General Reference",
          "API Version 2012-06-01",
          "endpoints",
          "Amazon S3 Glacier",
          "S3 Glacier Console"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_15",
      "text": "A\nvault is a container for storing archives, and an archive is any object, such as a photo, video, or\ndocument, that you store in a vault. An archive is the base unit of storage in S3 Glacier. This getting\nstarted exercise provides instructions for you to explore basic S3 Glacier operations on vaults and\narchives. For more information about these resources, see the Amazon S3 Glacier Data Model\nsection. In the getting started exercise, you will create a vault, upload and download an archive, and then\ndelete the archive and the vault. You can do all these operations programmatically. However, the\ngetting started exercise uses the S3 Glacier management console to create and delete a vault. For uploading and downloading an archive, this getting started section uses the high-level API\nfor the AWS SDK for Java and the AWS SDK for .NET. The high-level API provides a simplified\nprogramming experience when working with S3 Glacier. For more information about using the\nhigh-level API with the AWS SDKs, see Using the AWS SDKs with Amazon S3 Glacier. Important\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 14,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35976066170157966,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Getting Started",
              "Instructional",
              "Conceptual"
            ]
          },
          "keywords": [
            "vault",
            "archive",
            "S3 Glacier",
            "AWS SDK",
            "high-level API",
            "AWS CLI",
            "REST API",
            "management console",
            "upload",
            "download"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface",
            "S3 Glacier management console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the basic operations for managing vaults and archives in Amazon S3 Glacier, including creating and deleting vaults, and uploading and downloading archives using the AWS CLI or SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and delete a vault in Amazon S3 Glacier?",
            "What tools can I use to upload and download archives in S3 Glacier?",
            "Is there console support for archive operations in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "management console",
          "archive",
          "upload",
          "AWS CLI",
          "S3 Glacier management console",
          "AWS SDK",
          "vault",
          "REST API",
          "download",
          "high-level API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS Command Line Interface",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_16",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. This getting started exercise provides code examples in Java and C# for you to upload and\ndownload an archive. The last section of the getting started exercise provides steps where you can\nlearn more about the developer experience with S3 Glacier. Topics\n\u2022 Step 1: Before You Begin with S3 Glacier\nAPI Version 2012-06-01 9\n\nAmazon S3 Glacier Developer Guide\n\u2022 Step 2: Create a Vault in S3 Glacier\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Step 4: Download an Archive from a Vault in S3 Glacier\n\u2022 Step 5: Delete an Archive from a Vault in S3 Glacier\n\u2022 Step 6: Delete a Vault in S3 Glacier\n\u2022 Where Do I Go From Here? Step 1: Before You Begin with S3 Glacier\nBefore you can start with this exercise, you must sign up for an AWS account (if you don't already\nhave one), and then download one of the AWS SDKs. See the following sections for instructions. Topics\n\u2022 Set Up an AWS account and an Administrator User\n\u2022 Download the Appropriate AWS SDK\nSet Up an AWS account and an Administrator User\nIf you have not already done so, you must sign up for an AWS account and create an administrator\nuser in the account. To complete the setup, follow the instructions in the following topics. Set Up an AWS account and Create an Administrator User\nSign up for AWS\nWhen you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up\nfor all services in AWS, including S3 Glacier. You are charged only for the services that you use. For\nmore information about S3 Glacier usage rates, see the Amazon S3 Glacier pricing page. If you already have an AWS account, skip to Download the Appropriate AWS SDK.",
      "start_idx": 49942,
      "end_idx": 51851,
      "metadata": {
        "num_sentences": 14,
        "num_words": 353,
        "breakpoint_idx": 158,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3402470179966518,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Step-by-step",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "Vault",
            "Archive",
            "AWS SDK",
            "Administrator User",
            "AWS account",
            "Pricing",
            "Upload",
            "Download"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "AWS SDK",
            "Amazon Web Services",
            "Administrator User"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS CLI",
            "AWS SDK"
          ],
          "mentioned_services": [
            "AWS S3 Glacier",
            "AWS Account Management"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides steps for getting started with Amazon S3 Glacier using the AWS CLI and SDKs, including account setup, vault creation, archive management, and developer resources in Java and C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in S3 Glacier?",
            "What are the steps to upload and download archives in S3 Glacier?",
            "How do I set up an AWS account and administrator user for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Account Management",
          "AWS account",
          "AWS CLI",
          "Download",
          "AWS SDK",
          "Administrator User",
          "Vault",
          "Archive",
          "AWS S3 Glacier",
          "Amazon Web Services",
          "Pricing",
          "Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_17",
      "text": "If you don't have\nan AWS account, use the following procedure to create one. If you do not have an AWS account, complete the following steps to create one. Step 1: Before You Begin API Version 2012-06-01 10\n\nAmazon S3 Glacier Developer Guide\nTo sign up for an AWS account\n1. Open https://portal.aws.amazon.com/billing/signup. 2.",
      "start_idx": 51852,
      "end_idx": 52180,
      "metadata": {
        "num_sentences": 5,
        "num_words": 54,
        "breakpoint_idx": 163,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4143860340118408,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Account Creation",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "AWS account",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "Developer Guide",
            "signup",
            "billing portal",
            "AWS",
            "create account",
            "procedure",
            "steps"
          ],
          "entities": [
            "AWS account",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "https://portal.aws.amazon.com/billing/signup",
            "Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Account Setup",
          "secondary_categories": [
            "Cloud Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Billing"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section provides instructions on how to create an AWS account, including a link to the signup page and initial steps to get started.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an AWS account?",
            "What is the link to sign up for an AWS account?",
            "What are the initial steps to begin using AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Account Setup]",
        "tf_idf_keywords": [
          "AWS Billing",
          "AWS account",
          "AWS",
          "steps",
          "https://portal.aws.amazon.com/billing/signup",
          "API Version 2012-06-01",
          "signup",
          "Amazon S3 Glacier",
          "create account",
          "Developer Guide",
          "procedure",
          "billing portal"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_18",
      "text": "Follow the online instructions. Part of the sign-up procedure involves receiving a phone call and entering a verification code\non the phone keypad. When you sign up for an AWS account, an AWS account root user is created. The root user\nhas access to all AWS services and resources in the account. As a security best practice, assign\nadministrative access to a user, and use only the root user to perform tasks that require root\nuser access. To create an administrator user, choose one of the following options. Choose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\nIn IAM Use short-term Following the instructions Configure programmatic\nIdentity credentials to access in Getting started in the access by Configuring the\nCenter AWS. AWS IAM Identity Center AWS CLI to use AWS IAM\nUser Guide. Identity Center in the AWS\n(RecommenT his aligns with the\nCommand Line Interface User\nded) security best practices\nGuide. . For information\nabout best practices\n, see Security best\npractices in IAM in the\nIAM User Guide.",
      "start_idx": 52181,
      "end_idx": 55770,
      "metadata": {
        "num_sentences": 11,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2842241807417436,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Sign-up",
              "Security Best Practices",
              "IAM Configuration"
            ]
          },
          "keywords": [
            "AWS account",
            "root user",
            "administrative access",
            "IAM",
            "Identity Center",
            "programmatic access",
            "AWS CLI",
            "verification code",
            "security best practices",
            "short-term credentials"
          ],
          "entities": [
            "AWS",
            "IAM Identity Center",
            "AWS CLI",
            "IAM User Guide",
            "Security best practices"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Account Management",
          "secondary_categories": [
            "IAM (Identity and Access Management)",
            "Security Best Practices"
          ],
          "mentioned_services": [
            "AWS IAM Identity Center",
            "AWS CLI",
            "AWS Account Root User"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation provides instructions for signing up for an AWS account, creating an administrator user, and configuring programmatic access using AWS IAM Identity Center, following security best practices.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I sign up for an AWS account and verify my phone number?",
            "What are the security best practices for using the AWS root user?",
            "How can I configure programmatic access using AWS IAM Identity Center?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Account Management]",
        "tf_idf_keywords": [
          "AWS account",
          "verification code",
          "AWS CLI",
          "AWS",
          "IAM",
          "Identity Center",
          "IAM User Guide",
          "IAM Identity Center",
          "Security best practices",
          "AWS IAM Identity Center",
          "AWS Account Root User",
          "short-term credentials",
          "programmatic access",
          "security best practices",
          "root user"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_19",
      "text": "In IAM Use long-term Following the instructions Configure programmatic\ncredentials to access in Creating your first IAM access by Managing access\nAWS. Set Up an AWS account API Version 2012-06-01 11\n\nAmazon S3 Glacier Developer Guide\nChoose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\n(Not admin user and user group keys for IAM users in the IAM\nrecommend in the IAM User Guide. User Guide. ed)\nDownload the Appropriate AWS SDK\nTo try the getting started exercise, you must decide which programming language you want to use,\nand then download the appropriate AWS SDK for your development platform. The getting started exercise provides examples in Java and C#. Downloading the AWS SDK for Java\nTo test the Java examples in this developer guide, you need the AWS SDK for Java. You have the\nfollowing download options:\n\u2022 If you are using Eclipse, you can download and install the AWS Toolkit for Eclipse by using the\nupdate site http://aws.amazon.com/eclipse/. For more information, see AWS Toolkit for Eclipse. \u2022 If you are using any other IDE to create your application, download the AWS SDK for Java. Downloading the AWS SDK for .NET\nTo test the C# examples in this developer guide, you need the AWS SDK for .NET. You have the\nfollowing download options:\n\u2022 If you are using Visual Studio, you can install both the AWS SDK for .NET and the AWS Toolkit for\nVisual Studio.",
      "start_idx": 52181,
      "end_idx": 55770,
      "metadata": {
        "num_sentences": 11,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4267064874822443,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration",
              "Development"
            ]
          },
          "keywords": [
            "IAM",
            "AWS SDK",
            "programmatic credentials",
            "Java",
            "C#",
            "Eclipse",
            "Visual Studio",
            "AWS Toolkit",
            "API Version 2012-06-01",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Toolkit for Eclipse",
            "AWS Toolkit for Visual Studio",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDKs",
          "secondary_categories": [
            "IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Toolkit for Eclipse",
            "AWS Toolkit for Visual Studio",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on setting up programmatic access to AWS using IAM, downloading the appropriate AWS SDK for Java or .NET, and configuring development environments like Eclipse or Visual Studio for testing examples in the AWS Developer Guide.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure programmatic access to AWS using IAM?",
            "Where can I download the AWS SDK for Java or .NET?",
            "What tools can I use to set up a development environment for AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDKs]",
        "tf_idf_keywords": [
          "AWS Toolkit",
          "Amazon S3 Glacier Developer Guide",
          "Eclipse",
          "Visual Studio",
          "Java",
          "IAM",
          "AWS SDK",
          "AWS SDK for .NET",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS Toolkit for Eclipse",
          "programmatic credentials",
          "AWS SDK for Java",
          "AWS Toolkit for Visual Studio",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_20",
      "text": "The toolkit provides AWS Explorer for Visual Studio and project templates that you\ncan use for development. To download the AWS SDK for .NET, go to http://aws.amazon.com/\nsdkfornet. By default, the installation script installs both the AWS SDK and the AWS Toolkit for\nVisual Studio. To learn more about the toolkit, see the AWS Toolkit for Visual Studio User Guide. Download the Appropriate AWS SDK API Version 2012-06-01 12\n\nAmazon S3 Glacier Developer Guide\n\u2022 If you are using any other IDE to create your application, you can use the same link provided in\nthe preceding step and install only the AWS SDK for .NET. Step 2: Create a Vault in S3 Glacier\nA vault is a container for storing archives. Your first step is to create a vault in one of the supported\nAWS Regions. For a list of the AWS Regions that are supported by Amazon S3 Glacier, see Amazon\nS3 Glacier endpoints and quotas in the AWS General Reference. You can create vaults programmatically or by using the S3 Glacier console. This section uses the\nconsole to create a vault. To create a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 52181,
      "end_idx": 55770,
      "metadata": {
        "num_sentences": 13,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3315129891420022,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Installation",
              "Configuration",
              "Step-by-step"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "AWS Toolkit for Visual Studio",
            "Amazon S3 Glacier",
            "vault",
            "archives",
            "AWS Regions",
            "S3 Glacier console",
            "installation script",
            "endpoints",
            "quotas"
          ],
          "entities": [
            "AWS Explorer",
            "AWS Management Console",
            "S3 Glacier",
            "AWS Regions",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development Kits (SDKs)",
            "Integrated Development Environments (IDEs)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Regions"
          ],
          "mentioned_tools": [
            "AWS Toolkit for Visual Studio",
            "AWS Explorer"
          ]
        },
        "semantic": {
          "summary": "The documentation provides guidance on using the AWS Toolkit for Visual Studio, downloading the AWS SDK for .NET, and creating a vault in Amazon S3 Glacier via the console or programmatically.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download and install the AWS SDK for .NET?",
            "How can I create a vault in Amazon S3 Glacier?",
            "Which AWS Regions support Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archives",
          "quotas",
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "S3 Glacier console",
          "AWS Explorer",
          "vault",
          "endpoints",
          "Amazon S3 Glacier",
          "AWS Toolkit for Visual Studio",
          "installation script",
          "AWS Management Console",
          "AWS SDK for .NET",
          "AWS Regions"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_21",
      "text": "In the left navigation pane, choose Vaults. 3. Choose Create vault. The Create vault page opens. 4. Under Select a Region, select an AWS Region from the Region selector. Your vault will be\nlocated in the Region that you select. 5. For Vault name, enter a name for your vault. The following are the vault-naming requirements:\n\u2022 A vault name must be unique within an AWS account and the AWS Region in which the vault\nis created. \u2022 A vault name must be between 1 and 255 characters long. \u2022 A vault name can contain only the following characters: a\u2013z, A\u2013Z, 0\u20139, _ (underscore), -\n(hyphen), and . (period).",
      "start_idx": 55771,
      "end_idx": 56372,
      "metadata": {
        "num_sentences": 13,
        "num_words": 109,
        "breakpoint_idx": 211,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31462728060208833,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Vaults",
            "Create vault",
            "AWS Region",
            "Vault name",
            "vault-naming requirements",
            "Region selector",
            "AWS account",
            "characters",
            "underscore",
            "hyphen"
          ],
          "entities": [
            "Vaults",
            "AWS Region",
            "AWS account",
            "Region selector",
            "Create vault page"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Region Configuration",
            "Resource Naming Conventions"
          ],
          "mentioned_services": [
            "AWS Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide explains how to create a vault in AWS, including selecting a region and naming the vault according to specific requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in AWS?",
            "What are the naming requirements for an AWS vault?",
            "How do I select a region for my AWS vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Region selector",
          "AWS Region",
          "AWS account",
          "Create vault page",
          "underscore",
          "hyphen",
          "Vaults",
          "characters",
          "AWS Glacier",
          "vault-naming requirements",
          "Create vault",
          "Vault name"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_22",
      "text": "6. Under Event notifications, to turn on or off notifications on a vault for when a job is\ncompleted, choose one of the following settings:\n\u2022 Turn off notifications \u2013 Notifications are turned off, and notifications are not sent to an\nAmazon Simple Notification Service (Amazon SNS) topic when a specified job is completed. Step 2: Create a Vault API Version 2012-06-01 13\n\nAmazon S3 Glacier Developer Guide\n\u2022 Turn on notifications \u2013 Notifications are turned on, and notifications are sent to the\nprovided Amazon SNS topic when a specified job is completed. If you chose Turn on notifications, see Configuring Vault Notifications by Using the Amazon\nS3 Glacier Console. 7. If the AWS Region and vault name are correct, then choose Create vault. Your new vault is now listed on the Vaults page in the S3 Glacier console. Step 3: Upload an Archive to a Vault in S3 Glacier\nIn this step, you'll upload a sample archive to the vault that you created in the preceding step (see\nStep 2: Create a Vault in S3 Glacier). Depending on the development platform that you're using,\nchoose one of the links at the end of this section. Important\nAny archive operation, such as upload, download, or deletion, requires you to use the\nAWS Command Line Interface (CLI) or write code. There is no console support for archive\noperations. For example, to upload data, such as photos, videos, and other documents, you\nmust either use the AWS CLI or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs.",
      "start_idx": 56373,
      "end_idx": 57890,
      "metadata": {
        "num_sentences": 12,
        "num_words": 265,
        "breakpoint_idx": 223,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2590995557380445,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration",
              "Important Note"
            ]
          },
          "keywords": [
            "Event notifications",
            "Amazon SNS",
            "S3 Glacier",
            "Vault",
            "AWS CLI",
            "Archive operations",
            "REST API",
            "AWS SDKs",
            "Upload",
            "Vault notifications"
          ],
          "entities": [
            "Amazon Simple Notification Service",
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Vaults page",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Vault Management",
          "secondary_categories": [
            "Event Notifications",
            "Archive Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface (CLI)",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage event notifications for an Amazon S3 Glacier vault, create a vault, and upload archives using the AWS CLI or SDKs, as there is no console support for archive operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable or disable event notifications for an Amazon S3 Glacier vault?",
            "What tools are required to upload an archive to an S3 Glacier vault?",
            "Is there console support for archive operations in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Vault Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Vault notifications",
          "AWS CLI",
          "Event notifications",
          "AWS SDKs",
          "Amazon Simple Notification Service",
          "Vault",
          "REST API",
          "Amazon SNS",
          "Vaults page",
          "Amazon S3 Glacier",
          "Upload",
          "AWS Command Line Interface",
          "Archive operations"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_23",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. An archive is any object, such as a photo, video, or document, that you store in a vault. An archive\nis the base unit of storage in S3 Glacier. You can upload an archive in a single request. For large\narchives, S3 Glacier provides a multipart upload API operation that enables you to upload an\narchive in parts. In this getting started section, you upload a sample archive in a single request. For this exercise,\nyou specify a file that is smaller in size. For larger files, multipart upload is suitable.",
      "start_idx": 57891,
      "end_idx": 59990,
      "metadata": {
        "num_sentences": 10,
        "num_words": 142,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34231974283854166,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Installation",
              "Usage",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "archive",
            "vault",
            "multipart upload",
            "API operation",
            "single request",
            "large archives",
            "upload",
            "storage"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "archive",
            "vault",
            "multipart upload API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "File Upload Operations"
          ],
          "mentioned_services": [
            "AWS CLI",
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to install and use the AWS CLI to interact with S3 Glacier, including uploading archives and using multipart uploads for large files.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I install the AWS CLI to use with S3 Glacier?",
            "What is an archive in S3 Glacier and how is it stored?",
            "How can I upload large files to S3 Glacier using multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "archive",
          "upload",
          "AWS CLI",
          "storage",
          "large archives",
          "vault",
          "API operation",
          "single request",
          "multipart upload API",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_24",
      "text": "For more\ninformation, see Uploading Large Archives in Parts (Multipart Upload). Step 3: Upload an Archive to a Vault API Version 2012-06-01 14\n\nAmazon S3 Glacier Developer Guide\nTopics\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for .NET\nUpload an Archive to a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following Java code example uses the high-level API of the AWS SDK for Java to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class. \u2022 The example uses the upload API operation of the ArchiveTransferManager class from the\nhigh-level API of the AWS SDK for Java. \u2022 The example uses the US West (Oregon) Region (us-west-2). For step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the name of the archive file that\nyou want to upload. Note\nAmazon S3 Glacier keeps an inventory of all the archives in your vaults. When you upload\nthe archive in the following example, it will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday.",
      "start_idx": 57891,
      "end_idx": 59990,
      "metadata": {
        "num_sentences": 10,
        "num_words": 237,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27882999844021267,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "us-west-2",
            "vault inventory",
            "Eclipse",
            "API operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Multipart Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions and a Java code example for uploading an archive to an Amazon S3 Glacier vault using the AWS SDK for Java, including details about the required setup and considerations for vault inventory updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to an S3 Glacier vault using the AWS SDK for Java?",
            "What Java classes and methods are used to upload archives to S3 Glacier?",
            "Why doesn't my uploaded archive appear immediately in the S3 Glacier management console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "vault inventory",
          "US West (Oregon) Region",
          "Eclipse",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "API operation",
          "Amazon S3 Glacier",
          "us-west-2",
          "AWS SDK for Java",
          "Multipart Upload",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_25",
      "text": "SDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run in\nthe AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nUpload an Archive by Using Java API Version 2012-06-01 15\n\nAmazon S3 Glacier Developer Guide\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.io.File;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html\n*/\npublic class UploadArchive {\nstatic final int ONE_MB = 1024 * 1024;\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <strPath> <vaultName>\\s\nWhere:\nstrPath - The path to the archive to upload (for example, C:\\\\AWS\n\\\\test.pdf). vaultName - The name of the vault. \"\"\";\nif (args.length != 2) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString strPath = args[0];\nString vaultName = args[1];\nFile myFile = new File(strPath);\nPath path = Paths.get(strPath);\nUpload an Archive by Using Java API Version 2012-06-01 16\n\nAmazon S3 Glacier Developer Guide\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nString archiveId = uploadContent(glacier, path, vaultName, myFile);\nSystem.out.println(\"The ID of the archived item is \" + archiveId);\nglacier.close();\n}\npublic static String uploadContent(GlacierClient glacier, Path path, String\nvaultName, File myFile) {\n// Get an SHA-256 tree hash value. String checkVal = computeSHA256(myFile);\ntry {\nUploadArchiveRequest uploadRequest = UploadArchiveRequest.builder()\n.vaultName(vaultName)\n.checksum(checkVal)\n.build();\nUploadArchiveResponse res = glacier.uploadArchive(uploadRequest, path);\nreturn res.archiveId();\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\nreturn \"\";\n}\nprivate static String computeSHA256(File inputFile) {\ntry {\nbyte[] treeHash = computeSHA256TreeHash(inputFile);\nSystem.out.printf(\"SHA-256 tree hash = %s\\n\", toHex(treeHash));\nreturn toHex(treeHash);\n} catch (IOException ioe) {\nSystem.err.format(\"Exception when reading from file %s: %s\", inputFile,\nioe.getMessage());\nSystem.exit(-1);\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256:\n%s\", nsae.getMessage());\nSystem.exit(-1);\nUpload an Archive by Using Java API Version 2012-06-01 17\n\nAmazon S3 Glacier Developer Guide\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB. */\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\n}\nUpload an Archive by Using Java API Version 2012-06-01 18\n\nAmazon S3 Glacier Developer Guide\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums. */\npublic static byte[] computeSHA256TreeHash(byte[][] chunkSHA256Hashes)\nthrows NoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.length > 1) {\nint len = prevLvlHashes.length / 2;\nif (prevLvlHashes.length % 2 != 0) {\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.length; i = i + 2, j++) {\n// If there are at least two elements remaining.",
      "start_idx": 59991,
      "end_idx": 68979,
      "metadata": {
        "num_sentences": 10,
        "num_words": 592,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29998419019911027,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "UploadArchive",
            "SHA-256",
            "GlacierClient",
            "UploadArchiveRequest",
            "computeSHA256TreeHash",
            "AWS Code Examples Repository",
            "Region.US_EAST_1",
            "vaultName"
          ],
          "entities": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "GlacierClient",
            "UploadArchiveRequest",
            "Region.US_EAST_1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "File Hashing Algorithms"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Code Examples Repository"
          ],
          "mentioned_tools": [
            "Java",
            "SHA-256",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java SDK example for uploading an archive to Amazon S3 Glacier using the AWS Java SDK 2.x. It includes code for setting up the Glacier client, computing SHA-256 checksums, and handling file uploads with error handling.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS Java SDK?",
            "What is the process for computing SHA-256 tree hashes in Java?",
            "How can I handle errors when uploading to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "Region.US_EAST_1",
          "UploadArchive",
          "SHA-256",
          "AWS Code Examples Repository",
          "vaultName",
          "GlacierClient",
          "computeSHA256TreeHash",
          "UploadArchiveRequest",
          "Amazon S3 Glacier",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_26",
      "text": "if (prevLvlHashes.length - i > 1) {\n// Calculate a digest of the concatenated nodes. md.reset();\nmd.update(prevLvlHashes[i]);\nmd.update(prevLvlHashes[i + 1]);\ncurrLvlHashes[j] = md.digest();\n} else { // Take care of the remaining odd chunk\nUpload an Archive by Using Java API Version 2012-06-01 19\n\nAmazon S3 Glacier Developer Guide\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (byte datum : data) {\nString hex = Integer.toHexString(datum & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero. sb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for Java 2.x API Reference. Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint. \u2022 The code example uses the US West (Oregon) Region (us-west-2). Upload an Archive by Using .NET API Version 2012-06-01 20\n\nAmazon S3 Glacier Developer Guide\n\u2022 The example uses the Upload API operation of the ArchiveTransferManager class to upload\nyour archive. For small archives, this operation uploads the archive directly to S3 Glacier. For\nlarger archives, this operation uses the multipart upload API operation in S3 Glacier to split\nthe upload into multiple parts for better error recovery, if any errors are encountered while\nstreaming the data to S3 Glacier. For step-by-step instructions on how to run the following example, see Running Code Examples.",
      "start_idx": 59991,
      "end_idx": 68979,
      "metadata": {
        "num_sentences": 10,
        "num_words": 298,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34347941080729166,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "multipart upload",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "digest",
            "hexadecimal representation",
            "US West (Oregon) Region",
            "Upload API operation",
            "Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java 2.x",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "Java Development",
            ".NET Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to calculate hash digests in Java, convert byte arrays to hexadecimal, and upload archives to Amazon S3 Glacier using Java and .NET APIs, including handling small and large archives with multipart uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I calculate hash digests for concatenated nodes in Java?",
            "What is the process for uploading an archive to Amazon S3 Glacier using the AWS SDK for .NET?",
            "How does multipart upload work in S3 Glacier for large archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Upload API operation",
          "US West (Oregon) Region",
          "hexadecimal representation",
          "AWS SDK for Java 2.x",
          "ArchiveTransferManager",
          "Vault",
          "digest",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "multipart upload",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_27",
      "text": "You must update the code as shown with the name of your vault and the name of the archive file\nto upload. Note\nS3 Glacier keeps an inventory of all the archives in your vaults. When you upload the\narchive in the following example, the archive will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday. Example \u2014 Uploading an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to\nupload ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new\nArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive. Upload an Archive by Using .NET API Version 2012-06-01 21\n\nAmazon S3 Glacier Developer Guide\nstring archiveId = manager.Upload(vaultName, \"getting started archive\ntest\", archiveToUpload).ArchiveId;\nConsole.WriteLine(\"Copy and save the following Archive ID for the next\nstep. \");\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nStep 4: Download an Archive from a Vault in S3 Glacier\nIn this step, you'll download the sample archive that you uploaded previously in Step 3: Upload an\nArchive to a Vault in S3 Glacier. Important\nAmazon S3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.",
      "start_idx": 59991,
      "end_idx": 68979,
      "metadata": {
        "num_sentences": 11,
        "num_words": 320,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3964456384832209,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "archive upload",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "Amazon.RegionEndpoint",
            "Archive ID",
            "AWS CLI",
            "REST API",
            "archive operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "Amazon.RegionEndpoint.USWest2",
            "AmazonGlacierException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Development",
            "File Upload and Download"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "Amazon.Glacier.Transfer"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to an S3 Glacier vault using the AWS SDK for .NET and provides an example code snippet. It also highlights the lack of console support for archive operations and the need for CLI or custom code for tasks like uploading or downloading archives.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload an archive to an S3 Glacier vault using the AWS SDK for .NET?",
            "Why doesn't my uploaded archive appear immediately in the S3 Glacier management console?",
            "What tools or methods can I use to perform archive operations in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "archive operations",
          "vault inventory",
          "S3 Glacier",
          "Amazon.RegionEndpoint",
          "AWS CLI",
          "AmazonGlacierException",
          "ArchiveTransferManager",
          "REST API",
          "archive upload",
          "Archive ID",
          "Amazon.RegionEndpoint.USWest2",
          "Amazon S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_28",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. In general, retrieving your data from S3 Glacier is a two-step process:\n1. Initiate a retrieval job.",
      "start_idx": 68980,
      "end_idx": 69362,
      "metadata": {
        "num_sentences": 5,
        "num_words": 68,
        "breakpoint_idx": 279,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.37012834548950196,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Installation",
              "Usage",
              "Data Retrieval"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "retrieval job",
            "upload archives",
            "Command Line Interface",
            "AWS CLI Reference",
            "data retrieval"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "AWS Command Line Interface"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS CLI",
          "secondary_categories": [
            "S3 Glacier",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This text provides guidance on installing the AWS CLI and using it with S3 Glacier, including initiating data retrieval jobs and uploading archives. It references additional documentation for detailed examples and commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I install the AWS CLI?",
            "Where can I find examples of using AWS CLI with S3 Glacier?",
            "What are the steps to retrieve data from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS CLI",
          "AWS CLI Reference",
          "Command Line Interface",
          "upload archives",
          "data retrieval",
          "AWS Command Line Interface",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_29",
      "text": "2. After the job is completed, download the bytes of data. Step 4: Download an Archive from a Vault API Version 2012-06-01 22\n\nAmazon S3 Glacier Developer Guide\nTo retrieve an archive from S3 Glacier, you first initiate a job. After the job is completed, you\ndownload the data. For more information about archive retrievals, see Retrieving S3 Glacier\nArchives Using AWS Console. The access time of your request depends on the retrieval option that you choose: Expedited,\nStandard, or Bulk retrievals. For all but the largest archives (250 MB+), archives accessed by using\nExpedited retrievals are typically made available within 1\u20135 minutes. Archives retrieved by using\nStandard retrievals typically are available between 3\u20135 hours. Bulk retrievals typically are available\nwithin 5\u201312 hours. For more information about the various retrieval options, see the S3 Glacier\nFAQ. For information about data retrieval charges, see the S3 Glacier pricing page. The code examples shown in the following topics initiate the job, wait for it to be completed, and\nthen download the archive's data. Topics\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor Java\nThe following Java code example uses the high-level API of the AWS SDK for Java to download the\narchive that you uploaded in the previous step.",
      "start_idx": 69363,
      "end_idx": 74786,
      "metadata": {
        "num_sentences": 13,
        "num_words": 248,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3818311446752304,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Data Retrieval",
              "SDK Integration"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "Expedited retrieval",
            "Standard retrieval",
            "Bulk retrieval",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "retrieval options",
            "data retrieval charges",
            "Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "S3 Glacier FAQ",
            "S3 Glacier pricing page"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and download an archive from Amazon S3 Glacier using different retrieval options and provides code examples for Java and .NET SDKs.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the retrieval options available for accessing archives in S3 Glacier?",
            "How can I use the AWS SDK for Java to download an archive from S3 Glacier?",
            "What is the typical access time for different S3 Glacier retrieval options?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "S3 Glacier pricing page",
          "Standard retrieval",
          "Expedited retrieval",
          "Bulk retrieval",
          "Vault",
          "data retrieval charges",
          "S3 Glacier FAQ",
          "archive retrieval",
          "retrieval options",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_30",
      "text": "In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class. \u2022 The code uses the US West (Oregon) Region (us-west-2) to match the location where you\ncreated the vault in Step 2: Create a Vault in S3 Glacier. \u2022 The example uses the download API operation of the ArchiveTransferManager class from\nthe high-level API of the AWS SDK for Java. The example creates an Amazon Simple Notification\nService (Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. If you created an AWS Identity and Access Management (IAM) admin\nuser as instructed in Step 1: Before You Begin with S3 Glacier, your user has the necessary IAM\npermissions for the creation and use of the Amazon SNS topic and Amazon SQS queue. Download an Archive by Using Java API Version 2012-06-01 23\n\nAmazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier. Example \u2014 Downloading an Archive by Using the AWS SDK for Java\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class AmazonGlacierDownloadArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nDownload an Archive by Using Java API Version 2012-06-01 24\n\nAmazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to download the\narchive that you uploaded previously in Upload an Archive to a Vault in S3 Glacier by Using the\nAWS SDK for .NET. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint. \u2022 The code example uses the US West (Oregon) Region (us-west-2) to match the location where\nyou created the vault previously in Step 2: Create a Vault in S3 Glacier. \u2022 The example uses the Download API operation of the ArchiveTransferManager class to\ndownload your archive. The example creates an Amazon Simple Notification Service (Amazon\nSNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is subscribed to that\ntopic. If you created an AWS Identity and Access Management (IAM) admin user as instructed in\nStep 1: Before You Begin with S3 Glacier, your user has the necessary IAM permissions for the\ncreation and use of the Amazon SNS topic and Amazon SQS queue. \u2022 The example then initiates the archive retrieval job and polls the queue for the archive to be\navailable.",
      "start_idx": 69363,
      "end_idx": 74786,
      "metadata": {
        "num_sentences": 14,
        "num_words": 551,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43035469474373284,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "IAM permissions",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "S3 Glacier",
            "vault",
            "archive"
          ],
          "entities": [
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK Usage",
          "secondary_categories": [
            "Cloud Storage",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples in Java and C# for downloading an archive from an Amazon S3 Glacier vault using the AWS SDKs, including the setup of required resources like SNS topics and SQS queues, and necessary IAM permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from an S3 Glacier vault using the AWS SDK for Java?",
            "What are the required IAM permissions for setting up SNS and SQS in this process?",
            "How do I configure the endpoints for AWS services in the US West (Oregon) Region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK Usage]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "archive",
          "AmazonGlacierClient",
          "IAM",
          "ArchiveTransferManager",
          "IAM permissions",
          "Amazon SQS",
          "vault",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_31",
      "text": "When the archive is available, the download begins. For information about retrieval\ntimes, see Archive Retrieval Options. For step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier. Example \u2014 Download an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nDownload an Archive by Using .NET API Version 2012-06-01 25\n\nAmazon S3 Glacier Developer Guide\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string downloadFilePath = \"*** Provide the file name and path to where\nto store the download ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new\nArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nvar options = new DownloadOptions();\noptions.StreamTransferProgress +=\nArchiveDownloadHighLevel_GettingStarted.progress;\n// Download an archive. Console.WriteLine(\"Intiating the archive retrieval job and then polling\nSQS queue for the archive to be available. \");\nConsole.WriteLine(\"Once the archive is available, downloading will\nbegin. \");\nmanager.Download(vaultName, archiveId, downloadFilePath, options);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic int currentPercentage = -1;\nstatic void progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != currentPercentage)\n{\ncurrentPercentage = args.PercentDone;\nDownload an Archive by Using .NET API Version 2012-06-01 26\n\nAmazon S3 Glacier Developer Guide\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nStep 5: Delete an Archive from a Vault in S3 Glacier\nIn this step, you'll delete the sample archive that you uploaded in Step 3: Upload an Archive to a\nVault in S3 Glacier. Important\nYou cannot delete an archive by using the Amazon S3 Glacier console. Any archive\noperation, such as upload, download, or deletion, requires you to use the AWS Command\nLine Interface (CLI) or write code.",
      "start_idx": 74787,
      "end_idx": 82071,
      "metadata": {
        "num_sentences": 10,
        "num_words": 332,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4087279425726997,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "archive",
            "S3 Glacier",
            "vault",
            "AWS SDK for .NET",
            "DownloadOptions",
            "ArchiveTransferManager",
            "StreamTransferProgressArgs",
            "AmazonGlacierException",
            "AmazonServiceException",
            "CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "DownloadOptions",
            "StreamTransferProgressArgs"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Archive Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            ".NET",
            "AWS Command Line Interface (CLI)",
            "Amazon SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from an S3 Glacier vault using the AWS SDK for .NET High-Level API, and provides a code example for implementation. Additionally, it highlights the process for deleting an archive using the CLI or custom code.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from an S3 Glacier vault using the AWS SDK for .NET?",
            "What are the steps to implement archive downloading with the High-Level API in .NET?",
            "Can I delete an archive from an S3 Glacier vault using the AWS console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "DownloadOptions",
          "S3 Glacier",
          "StreamTransferProgressArgs",
          "archive",
          "AmazonGlacierException",
          "ArchiveTransferManager",
          "vault",
          "Amazon SQS",
          "CLI",
          "Amazon S3 Glacier",
          "AmazonServiceException",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_32",
      "text": "To upload data, such as photos, videos, and other\ndocuments, you must either use the AWS CLI or write code to make requests, by using\neither the REST API directly or by using the AWS SDKs. To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. Delete the sample archive by following one of these SDKs or the AWS CLI:\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\n\u2022 Delete an Archive in S3 Glacier by Using the AWS CLI\nRelated Sections\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nStep 5: Delete an Archive from a Vault API Version 2012-06-01 27\n\nAmazon S3 Glacier Developer Guide\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following code example uses the AWS SDK for Java to delete the archive. In the code, note the\nfollowing:\n\u2022 The DeleteArchiveRequest object describes the delete request, including the vault name\nwhere the archive is located and the archive ID. \u2022 The deleteArchive API operation sends the request to Amazon S3 Glacier to delete the\narchive. \u2022 The example uses the US West (Oregon) Region (us-west-2). For step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier.",
      "start_idx": 74787,
      "end_idx": 82071,
      "metadata": {
        "num_sentences": 10,
        "num_words": 317,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39097001817491317,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "AWS SDK",
            "DeleteArchiveRequest",
            "deleteArchive API",
            "vault name",
            "archive ID",
            "US West (Oregon)",
            "REST API",
            "Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Storage and Management",
          "secondary_categories": [
            "Cloud APIs",
            "Software Development Kits (SDKs)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload and delete archives in Amazon S3 Glacier using the AWS CLI or SDKs, with examples provided for Java and .NET SDKs. It also includes references to related guides and step-by-step instructions for specific operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload archives to Amazon S3 Glacier using the AWS CLI?",
            "What is the process for deleting an archive in S3 Glacier using the AWS SDK for Java?",
            "Where can I find examples for running Java code to interact with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage and Management]",
        "tf_idf_keywords": [
          "vault name",
          "S3 Glacier",
          "US West (Oregon) Region",
          "AWS CLI",
          "AWS SDK",
          "archive ID",
          "Command Line Interface",
          "REST API",
          "deleteArchive API",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "US West (Oregon)",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_33",
      "text": "Example \u2014 Deleting an Archive by Using the AWS SDK for Java\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class AmazonGlacierDeleteArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nDelete an Archive by Using Java API Version 2012-06-01 28\n\nAmazon S3 Glacier Developer Guide\n// Delete the archive. client.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully. \");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted. \");\nSystem.err.println(e);\n}\n}\n}\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete the\narchive that you uploaded in the previous step. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint. \u2022 The code example uses the US West (Oregon) Region (us-west-2). \u2022 The example uses the Delete API operation of the ArchiveTransferManager class that's\nprovided as part of the high-level API of the AWS SDK for .NET. For step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier. Example \u2014 Deleting an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nDelete an Archive by Using .NET API Version 2012-06-01 29\n\nAmazon S3 Glacier Developer Guide\nclass ArchiveDeleteHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDelete an Archive in S3 Glacier by Using the AWS CLI\nYou can delete archives in Amazon S3 Glacier by using the AWS Command Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1.",
      "start_idx": 74787,
      "end_idx": 82071,
      "metadata": {
        "num_sentences": 11,
        "num_words": 403,
        "chunk_type": "semantic_split",
        "coherence_score": 0.400349946455522,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Code"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "ArchiveTransferManager",
            "vaultName",
            "archiveId",
            "AmazonGlacierClient",
            "US West (Oregon)",
            "AWS CLI"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK Usage",
          "secondary_categories": [
            "S3 Glacier Operations",
            "Programming Language Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Region Endpoint"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of deleting an archive from Amazon S3 Glacier using the AWS SDK for Java, AWS SDK for .NET, and the AWS CLI, including code snippets and setup instructions.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the process for deleting an archive using the high-level API of the AWS SDK for .NET?",
            "How do I set up and use the AWS CLI to delete an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS SDK Usage]",
        "tf_idf_keywords": [
          "archiveId",
          "vaultName",
          "AWS CLI",
          "AmazonGlacierClient",
          "Amazon Region Endpoint",
          "ArchiveTransferManager",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "US West (Oregon)",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_34",
      "text": "Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. Deleting an Archive by Using the AWS CLI API Version 2012-06-01 30\n\nAmazon S3 Glacier Developer Guide\n\u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Deleting an Archive by Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. For more information on\nthe initiate-job command, see Initiate Job.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 11,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3775819258256392,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Verification",
              "Command Execution",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "list-vaults",
            "initiate-job",
            "configure list",
            "inventory retrieval",
            "default profile",
            "API Version 2012-06-01",
            "credentials",
            "vaults"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "123456789012",
            "Initiate Job",
            "AWS account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Command Line Interface",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS Configuration Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides steps to download, configure, and verify the AWS CLI, along with examples for using commands like listing S3 Glacier vaults and deleting archives. It also includes references to related topics in the AWS Command Line Interface User Guide.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I install and configure the AWS CLI?",
            "What commands can I use to verify my AWS CLI setup?",
            "How can I delete an archive using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Command Line Interface]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "configure list",
          "AWS CLI",
          "Initiate Job",
          "123456789012",
          "list-vaults",
          "AWS account ID",
          "API Version 2012-06-01",
          "initiate-job",
          "credentials",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "vaults",
          "default profile"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_35",
      "text": "aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters \"{\\\"Type\\\": \\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check the status of the previous retrieval job. For more\ninformation on the describe-job command, see Describe Job. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 31\n\nAmazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to be completed. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified Amazon SNS topic anytime the specific event occurs. 4.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 11,
        "num_words": 203,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27172050476074217,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "AWS CLI",
              "Job Management",
              "S3 Glacier"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Glacier",
            "inventory-retrieval",
            "describe-job",
            "VaultARN",
            "JobId",
            "Amazon SNS",
            "notification configuration",
            "InventoryRetrievalParameters",
            "StatusCode"
          ],
          "entities": [
            "awsexamplevault",
            "111122223333",
            "Amazon S3 Glacier",
            "VaultARN",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Job Management",
          "secondary_categories": [
            "AWS CLI Commands",
            "Amazon SNS Notifications"
          ],
          "mentioned_services": [
            "AWS S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on initiating and monitoring an inventory retrieval job in AWS Glacier using the AWS CLI, including checking job status and configuring notifications for job completion.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in AWS Glacier using the AWS CLI?",
            "How can I check the status of an AWS Glacier retrieval job?",
            "What are the steps to configure notifications for AWS Glacier job events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "notification configuration",
          "StatusCode",
          "AWS CLI",
          "VaultARN",
          "JobId",
          "111122223333",
          "AWS S3 Glacier",
          "Amazon SNS",
          "InventoryRetrievalParameters",
          "Glacier",
          "Amazon S3 Glacier",
          "describe-job",
          "awsexamplevault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_36",
      "text": "When the job is complete, use the get-job-output command to download the retrieval job\nto the file output.json. For more information on the get-job-output command, see Get\nJob Output. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"\"*** job completion date ***\"\",\n\"ArchiveList\":[{\n{\"ArchiveId\":\"\"*** archiveid ***\"\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"\"*** archive creation date ***\"\",\n\"Size\":\"\"*** archive size (in bytes) ***\"\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}],\n\"ArchiveId\": 123456789\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 32\n\nAmazon S3 Glacier Developer Guide\n}\n5. Use the delete-archive command to delete each archive from a vault until none remain. aws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nFor more information on the delete-archive command, see Delete Archive. Step 6: Delete a Vault in S3 Glacier\nA vault is a container for storing archives. To delete an Amazon S3 Glacier vault, you must first\ndelete all existing archives in the vault as of the last inventory that S3 Glacier computed. You can delete a vault programmatically or by using the S3 Glacier console. For information about\ndeleting a vault programmatically, see Deleting a Vault in Amazon S3 Glacier. Important\nIf you upload an archive to a vault or delete an archive from a vault within the recent\n24 hours, you must wait until the last vault inventory is updated to reflect the latest\ninformation.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 11,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47658871737393466,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Step-by-Step Instructions",
              "Important Notes"
            ]
          },
          "keywords": [
            "get-job-output",
            "delete-archive",
            "vault",
            "archive",
            "Amazon S3 Glacier",
            "AWS CLI",
            "VaultARN",
            "InventoryDate",
            "SHA256TreeHash",
            "job-id"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "VaultARN",
            "ArchiveId",
            "InventoryDate"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "Cloud Storage Management",
            "Command-Line Interface (CLI) Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve job outputs, delete archives, and delete vaults in Amazon S3 Glacier using AWS CLI commands, along with prerequisites and considerations for vault inventory updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the get-job-output command to retrieve a job output in Amazon S3 Glacier?",
            "What are the steps to delete an archive from a vault using AWS CLI?",
            "What are the prerequisites for deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "get-job-output",
          "archive",
          "AWS CLI",
          "SHA256TreeHash",
          "VaultARN",
          "vault",
          "job-id",
          "delete-archive",
          "Amazon S3 Glacier",
          "InventoryDate",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_37",
      "text": "S3 Glacier prepares an inventory for each vault periodically, every 24 hours. To delete an empty vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. From the Select a Region menu, choose the AWS Region for the vault that you want to delete. In this getting started exercise, your example vault is in the US West (Oregon) Region. 3. Select the option button next to the empty vault that you want to delete. If the vault is not\nempty, you must delete all archives before deleting the vault. For more information, see\nDeleting an Archive in Amazon S3 Glacier. Step 6: Delete a Vault API Version 2012-06-01 33\n\nAmazon S3 Glacier Developer Guide\nImportant\nDeleting a vault can't be undone. 4.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 12,
        "num_words": 131,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3250885876742276,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step instructions",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS Management Console",
            "Region",
            "delete",
            "archives",
            "inventory",
            "API Version 2012-06-01",
            "empty vault",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Management Console",
            "US West (Oregon) Region",
            "Amazon S3 Glacier Developer Guide",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Archiving",
            "AWS Console Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an empty vault in Amazon S3 Glacier, including the necessary steps and precautions for the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an empty vault in Amazon S3 Glacier?",
            "What should I do if the vault is not empty before deletion?",
            "Can a deleted vault in S3 Glacier be recovered?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "archives",
          "S3 Glacier",
          "US West (Oregon) Region",
          "Amazon S3 Glacier Developer Guide",
          "empty vault",
          "vault",
          "delete",
          "inventory",
          "API Version 2012-06-01",
          "Region",
          "Amazon S3 Glacier",
          "AWS Management Console"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_38",
      "text": "Choose Delete. 5. The Delete vault dialog box appears. Choose Delete. To delete a nonempty vault\n1. If you're deleting a nonempty vault, you must first delete all existing archives before deleting\nthe vault. You can do this by writing code to make a delete archive request by using either the\nREST API, the AWS SDK for Java, the AWS SDK for .NET or the AWS CLI. For information about\ndeleting archives, see Step 5: Delete an Archive from a Vault in S3 Glacier. 2. After the vault is empty, follow the steps to delete an empty vault in the preceding procedure.",
      "start_idx": 87051,
      "end_idx": 88767,
      "metadata": {
        "num_sentences": 10,
        "num_words": 102,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3741300370958116,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "Delete vault",
            "nonempty vault",
            "archives",
            "REST API",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "S3 Glacier",
            "delete archive",
            "empty vault"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "S3 Glacier",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Management",
          "secondary_categories": [
            "Archive Deletion",
            "API Integration"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API",
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in S3 Glacier, including steps for deleting nonempty vaults by first removing all archives using various tools like the REST API, AWS SDKs, or AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a nonempty vault in S3 Glacier?",
            "What steps are required to delete archives from a vault before deleting the vault?",
            "What tools can I use to delete archives in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Management]",
        "tf_idf_keywords": [
          "archives",
          "S3 Glacier",
          "AWS CLI",
          "empty vault",
          "delete archive",
          "Delete vault",
          "REST API",
          "nonempty vault",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_39",
      "text": "Where Do I Go From Here? Now that you have tried the getting started exercise, you can explore the following sections to\nlearn more about Amazon S3 Glacier. \u2022 Working with Vaults in Amazon S3 Glacier\n\u2022 Working with Archives in Amazon S3 Glacier\nWhere Do I Go From Here? API Version 2012-06-01 34\n\nAmazon S3 Glacier Developer Guide\nWorking with Vaults in Amazon S3 Glacier\nA vault is a container for storing archives. When you create a vault, you specify a vault name and\nthe AWS Region in which you want to create the vault. For a list of the AWS Regions supported by\nS3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General Reference. You can store an unlimited number of archives in a vault. Important\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI) or\nwrite code. There is no console support for archive operations. For example, to upload data,\nsuch as photos, videos, and other documents, you must either use the AWS CLI or write\ncode to make requests, by using either the REST API directly or by using the AWS SDKs.",
      "start_idx": 87051,
      "end_idx": 88767,
      "metadata": {
        "num_sentences": 11,
        "num_words": 207,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3296138416637074,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "AWS Region",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "console",
            "endpoints",
            "quotas"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "AWS General Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of working with vaults and archives in Amazon S3 Glacier, detailing the need for AWS CLI or code for archive operations as the console does not support these functions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is a vault in Amazon S3 Glacier and how do I create one?",
            "How can I perform archive operations in Amazon S3 Glacier?",
            "Which AWS Regions support vault creation in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "quotas",
          "AWS Region",
          "archive",
          "AWS CLI",
          "console",
          "AWS SDKs",
          "vault",
          "REST API",
          "AWS General Reference",
          "endpoints",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_40",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. Topics\n\u2022 Vault Operations in S3 Glacier\n\u2022 Creating a Vault in Amazon S3 Glacier\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier\n\u2022 Deleting a Vault in Amazon S3 Glacier\n\u2022 Tagging Your S3 Glacier Vaults\n\u2022 S3 Glacier Vault Lock\nAPI Version 2012-06-01 35\n\nAmazon S3 Glacier Developer Guide\nVault Operations in S3 Glacier\nS3 Glacier supports various vault operations. Vault operations are specific to particular AWS\nRegions. In other words, when you create a vault, you create it in a specific AWS Region. When you\nlist vaults, S3 Glacier returns the vault list from the AWS Region that you specified in the request. Creating and Deleting Vaults\nAn AWS account can create up to 1,000 vaults per AWS Region. For a list of the AWS Regions\nsupported by S3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General\nReference. You can delete a vault only if there are no archives in the vault as of the last inventory that S3\nGlacier computed and if there have been no writes to the vault since the last inventory. Note\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 264,
        "chunk_type": "semantic_split",
        "coherence_score": 0.500048134543679,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "Vault Operations",
            "Amazon S3 Glacier",
            "Vault Notifications",
            "Vault Lock",
            "Vault Inventory",
            "AWS Regions",
            "Vault Metadata",
            "Tagging"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "Amazon S3 Glacier",
            "AWS Regions",
            "Vault Lock"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Operations in S3 Glacier",
          "secondary_categories": [
            "AWS CLI Usage with S3 Glacier",
            "Vault Management in AWS Regions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information on installing and using the AWS CLI with S3 Glacier, including vault operations such as creating, deleting, tagging, and configuring vaults across specific AWS Regions. It also outlines constraints and periodic inventory updates for vault management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or delete a vault in Amazon S3 Glacier?",
            "What are the constraints for deleting a vault in S3 Glacier?",
            "Where can I find the list of supported AWS Regions for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Vault Operations in S3 Glacier]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Vault Metadata",
          "AWS CLI",
          "Tagging",
          "Vault Lock",
          "Vault Inventory",
          "Vault Operations",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "AWS Regions"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_41",
      "text": "Because the\ninventory might not reflect the latest information, S3 Glacier ensures that the vault is\nindeed empty by checking if there were any write operations since the last vault inventory. For more information, see Creating a Vault in Amazon S3 Glacier and Deleting a Vault in Amazon\nS3 Glacier. Retrieving Vault Metadata\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. S3 Glacier provides API calls for you to retrieve\nthis information for a specific vault or all the vaults in a specific AWS Region in your account. For\nmore information, see Retrieving Vault Metadata in Amazon S3 Glacier. Downloading a Vault Inventory\nA vault inventory refers to the list of archives in a vault. For each archive in the list, the inventory\nprovides archive information, such as the archive ID, creation date, and size. S3 Glacier updates\nthe vault inventory once a day, starting on the day that the first archive is uploaded to the vault. A\nvault inventory must exist for you to be able to download it. Vault Operations in S3 Glacier API Version 2012-06-01 36\n\nAmazon S3 Glacier Developer Guide\nDownloading a vault inventory is an asynchronous operation. You must first initiate a job to\ndownload the inventory.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5224516435102983,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "vault inventory",
            "S3 Glacier",
            "vault metadata",
            "archive ID",
            "AWS Region",
            "vault creation date",
            "API calls",
            "asynchronous operation",
            "vault operations",
            "inventory updates"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "AWS Region",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Operations",
          "secondary_categories": [
            "Metadata Retrieval",
            "Inventory Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "The document explains how Amazon S3 Glacier handles vault operations, including ensuring vault emptiness, retrieving vault metadata, and downloading a vault inventory. It highlights API calls and asynchronous processes for managing vaults and their contents.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How does S3 Glacier ensure a vault is empty before deletion?",
            "What metadata can be retrieved for a vault in S3 Glacier?",
            "How do I download a vault inventory in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Vault Operations]",
        "tf_idf_keywords": [
          "API calls",
          "vault inventory",
          "S3 Glacier",
          "AWS Region",
          "asynchronous operation",
          "archive",
          "vault creation date",
          "archive ID",
          "inventory updates",
          "vault",
          "vault operations",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "vault metadata"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_42",
      "text": "After receiving the job request, S3 Glacier prepares your inventory for\ndownload. After the job is completed, you can download the inventory data. Given the asynchronous nature of the job, you can use Amazon Simple Notification Service\n(Amazon SNS) notifications to notify you when the job is completed. You can specify an Amazon\nSNS topic for each individual job request or configure your vault to send a notification when\nspecific vault events occur. S3 Glacier prepares an inventory for each vault periodically, every 24 hours. If there have been\nno archive additions or deletions to the vault since the last inventory, the inventory date is not\nupdated. When you initiate a job for a vault inventory, S3 Glacier returns the last inventory that it generated,\nwhich is a point-in-time snapshot and not real-time data. You might not find it useful to retrieve\nvault inventory for each archive upload. However, suppose that you maintain a database on the\nclient-side that contains metadata associated with the archives that you upload to S3 Glacier. In\nthat case, you might find the vault inventory useful to reconcile information in your database with\nthe actual vault inventory. For more information about retrieving a vault inventory, see Downloading a Vault Inventory in\nAmazon S3 Glacier.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4524955749511719,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Asynchronous Operations",
              "Notifications",
              "Inventory Management"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "Amazon SNS",
            "asynchronous",
            "job request",
            "notification",
            "archive",
            "point-in-time snapshot",
            "metadata",
            "reconcile"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon SNS",
            "vault",
            "inventory",
            "archives"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage Management",
          "secondary_categories": [
            "Notification Systems",
            "Data Reconciliation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service (SNS)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "S3 Glacier provides asynchronous vault inventory preparation and retrieval, allowing users to reconcile their database metadata with point-in-time inventory snapshots. Notifications via Amazon SNS can be configured for job completion or specific vault events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure Amazon SNS notifications for S3 Glacier inventory jobs?",
            "What is the frequency of S3 Glacier vault inventory updates?",
            "How can vault inventory be used to reconcile client-side database metadata?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Storage Management]",
        "tf_idf_keywords": [
          "archives",
          "point-in-time snapshot",
          "vault inventory",
          "S3 Glacier",
          "asynchronous",
          "archive",
          "metadata",
          "Amazon Simple Notification Service (SNS)",
          "notification",
          "reconcile",
          "vault",
          "inventory",
          "Amazon SNS",
          "job request",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_43",
      "text": "Configuring Vault Notifications\nRetrieving anything from S3 Glacier, such as an archive from a vault or a vault inventory, is a two-\nstep process. First, you initiate a job. After the job is completed, you download the output. To\nlearn when your job is complete, you can use S3 Glacier notifications. S3 Glacier sends notification\nmessages to an Amazon Simple Notification Service (Amazon SNS) topic that you provide. You can configure notifications on a vault and identify vault events and the Amazon SNS topic to\nbe notified when the event occurs. Anytime the vault event occurs, S3 Glacier sends a notification\nto the specified Amazon SNS topic. For more information, see Configuring Vault Notifications in\nAmazon S3 Glacier. Creating a Vault in Amazon S3 Glacier\nCreating a vault adds a vault to the set of vaults in your account. An AWS account can create up to\n1,000 vaults per AWS Region. For a list of the AWS Regions supported by Amazon S3 Glacier (S3\nGlacier), see Regions and Endpoints in the AWS General Reference.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4289065274325284,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification",
              "Creation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "Amazon SNS",
            "notifications",
            "job",
            "archive",
            "inventory",
            "AWS Region",
            "Regions and Endpoints",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon SNS",
            "AWS Region",
            "Amazon S3 Glacier",
            "AWS General Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Notification Systems",
            "AWS Service Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure notifications for S3 Glacier vault events using Amazon SNS and provides an overview of creating vaults in S3 Glacier, including limits per AWS Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure notifications for S3 Glacier vault events?",
            "What is the process for retrieving data from an S3 Glacier vault?",
            "How many vaults can I create per AWS Region in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Region",
          "archive",
          "job",
          "vault",
          "inventory",
          "AWS General Reference",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Regions and Endpoints",
          "notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_44",
      "text": "Configuring Vault Notifications API Version 2012-06-01 37\n\nAmazon S3 Glacier Developer Guide\nWhen you create a vault, you must provide a vault name. The following are the vault naming\nrequirements:\n\u2022 Names can be between 1 and 255 characters long. \u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.' (period). Vault names must be unique within an account and the AWS Region in which the vault is being\ncreated. That is, an account can create vaults with the same name in different AWS Regions but not\nin the same AWS Region. Topics\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Creating a Vault in Amazon S3 Glacier Using the REST API\n\u2022 Creating a Vault Using the Amazon S3 Glacier Console\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nCreating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe low-level API provides methods for all the vault operations, including creating and deleting\nvaults, getting a vault description, and getting a list of vaults created in a specific AWS Region. The\nfollowing are the steps to create a vault using the AWS SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region. 2.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 13,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27649881900885165,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "SDK Usage"
            ]
          },
          "keywords": [
            "Vault",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS Region",
            "AmazonGlacierClient",
            "REST API",
            "Vault Operations",
            "AWS Command Line Interface",
            "Vault Naming Requirements",
            "AWS SDK for .NET"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface",
            "AmazonGlacierClient"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Configuration",
          "secondary_categories": [
            "AWS SDK Usage",
            "Amazon S3 Glacier Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and create vaults in Amazon S3 Glacier, detailing naming requirements, AWS Region constraints, and methods for creation using various tools like SDKs, REST API, and CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the naming requirements for creating a vault in Amazon S3 Glacier?",
            "How can I create a vault using the AWS SDK for Java?",
            "Can I create vaults with the same name in different AWS Regions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Configuration]",
        "tf_idf_keywords": [
          "AWS Region",
          "AmazonGlacierClient",
          "Vault",
          "Vault Operations",
          "REST API",
          "Amazon S3 Glacier",
          "Vault Naming Requirements",
          "AWS SDK for Java",
          "AWS Command Line Interface",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_45",
      "text": "Provide request information by creating an instance of the CreateVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide to\nsign the request is used. For more information, see Using the AWS SDK for Java with Amazon S3\nGlacier. 3. Run the createVault method by providing the request object as a parameter. Creating a Vault Using Java API Version 2012-06-01 38\n\nAmazon S3 Glacier Developer Guide\nThe response S3 Glacier returns is available in the CreateVaultResult object. The following Java code snippet illustrates the preceding steps. The snippet creates a vault in\nthe us-west-2 Region. The Location it prints is the relative URI of the vault that includes your\naccount ID, the AWS Region, and the vault name.",
      "start_idx": 95329,
      "end_idx": 103049,
      "metadata": {
        "num_sentences": 10,
        "num_words": 143,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2558360205756293,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Implementation"
            ]
          },
          "keywords": [
            "CreateVaultRequest",
            "Amazon S3 Glacier",
            "vault name",
            "account ID",
            "AWS SDK for Java",
            "createVault method",
            "CreateVaultResult",
            "Java API",
            "us-west-2 Region",
            "relative URI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CreateVaultRequest",
            "CreateVaultResult",
            "AWS SDK for Java",
            "us-west-2 Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDK for Java",
            "Java API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using the AWS SDK for Java by providing a vault name, account ID, and running the createVault method. The response is returned in the CreateVaultResult object, including the vault's relative URI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What information is required to create a vault in S3 Glacier?",
            "What is the structure of the response from the createVault method?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "Java API",
          "vault name",
          "CreateVaultRequest",
          "createVault method",
          "us-west-2 Region",
          "Amazon S3 Glacier",
          "account ID",
          "CreateVaultResult",
          "AWS SDK for Java",
          "relative URI"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_46",
      "text": "AmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nCreateVaultResult result = client.createVault(request);\nSystem.out.println(\"Created vault successfully: \" + result.getLocation());\nNote\nFor information about the underlying REST API, see Create Vault (PUT vault). Example: Creating a Vault Using the AWS SDK for Java\nThe following Java code example creates a vault in the us-west-2 Region (for more information\non AWS Regions, see Accessing Amazon S3 Glacier). In addition, the code example retrieves the\nvault information, lists all vaults in the same AWS Region, and then deletes the vault created. For step-by-step instructions on how to run the following example, see Running Java Examples for\nAmazon S3 Glacier Using Eclipse. Example\nimport java.io.IOException;\nimport java.util.List;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.CreateVaultRequest;\nimport com.amazonaws.services.glacier.model.CreateVaultResult;\nimport com.amazonaws.services.glacier.model.DeleteVaultRequest;\nimport com.amazonaws.services.glacier.model.DescribeVaultOutput;\nCreating a Vault Using Java API Version 2012-06-01 39\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.glacier.model.DescribeVaultRequest;\nimport com.amazonaws.services.glacier.model.DescribeVaultResult;\nimport com.amazonaws.services.glacier.model.ListVaultsRequest;\nimport com.amazonaws.services.glacier.model.ListVaultsResult;\npublic class AmazonGlacierVaultOperations {\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\nString vaultName = \"examplevaultfordelete\";\ntry {\ncreateVault(client, vaultName);\ndescribeVault(client, vaultName);\nlistVaults(client);\ndeleteVault(client, vaultName);\n} catch (Exception e) {\nSystem.err.println(\"Vault operation failed.\" + e.getMessage());\n}\n}\nprivate static void createVault(AmazonGlacierClient client, String vaultName) {\nCreateVaultRequest createVaultRequest = new CreateVaultRequest()\n.withVaultName(vaultName);\nCreateVaultResult createVaultResult = client.createVault(createVaultRequest);\nSystem.out.println(\"Created vault successfully: \" +\ncreateVaultResult.getLocation());\n}\nprivate static void describeVault(AmazonGlacierClient client, String vaultName) {\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n.withVaultName(vaultName);\nDescribeVaultResult describeVaultResult =\nclient.describeVault(describeVaultRequest);\nCreating a Vault Using Java API Version 2012-06-01 40\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Describing the vault: \" + vaultName);\nSystem.out.print(\n\"CreationDate: \" + describeVaultResult.getCreationDate() +\n\"\\nLastInventoryDate: \" + describeVaultResult.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + describeVaultResult.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + describeVaultResult.getSizeInBytes() +\n\"\\nVaultARN: \" + describeVaultResult.getVaultARN() +\n\"\\nVaultName: \" + describeVaultResult.getVaultName());\n}\nprivate static void listVaults(AmazonGlacierClient client) {\nListVaultsRequest listVaultsRequest = new ListVaultsRequest();\nListVaultsResult listVaultsResult = client.listVaults(listVaultsRequest);\nList<DescribeVaultOutput> vaultList = listVaultsResult.getVaultList();\nSystem.out.println(\"\\nDescribing all vaults (vault list):\");\nfor (DescribeVaultOutput vault : vaultList) {\nSystem.out.println(\n\"\\nCreationDate: \" + vault.getCreationDate() +\n\"\\nLastInventoryDate: \" + vault.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + vault.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + vault.getSizeInBytes() +\n\"\\nVaultARN: \" + vault.getVaultARN() +\n\"\\nVaultName: \" + vault.getVaultName());\n}\n}\nprivate static void deleteVault(AmazonGlacierClient client, String vaultName) {\nDeleteVaultRequest request = new DeleteVaultRequest()\n.withVaultName(vaultName);\nclient.deleteVault(request);\nSystem.out.println(\"Deleted vault: \" + vaultName);\n}\n}\nCreating a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ncreate a vault. Topics\nCreating a Vault Using .NET API Version 2012-06-01 41\n\nAmazon S3 Glacier Developer Guide\n\u2022 Creating a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Creating a Vault Using the Low-Level API of the AWS SDK for .NET\nCreating a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the CreateVault method\nyou can use to create a vault in an AWS Region. Example: Vault Operations Using the High-Level API of the AWS SDK for .NET\nThe following C# code example creates and delete a vault in the US West (Oregon) Region. For a\nlist of AWS Regions in which you can create vaults, see Accessing Amazon S3 Glacier. For step-by-step instructions on how to run the following example, see Running Code Examples.",
      "start_idx": 95329,
      "end_idx": 103049,
      "metadata": {
        "num_sentences": 10,
        "num_words": 554,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5115521748860677,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult",
            "DescribeVaultRequest",
            "DeleteVaultRequest",
            "ListVaultsRequest",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "Vault Operations"
          ],
          "entities": [
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "DescribeVaultRequest",
            "DeleteVaultRequest",
            "ListVaultsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Eclipse",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples and instructions for performing vault operations in Amazon S3 Glacier using the AWS SDK for Java and .NET. It includes methods for creating, describing, listing, and deleting vaults, along with references to relevant APIs and regions.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What are the steps to list all vaults in a specific AWS region?",
            "How do I delete a vault using the AWS SDK for Java or .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "AmazonGlacierClient",
          "DescribeVaultRequest",
          "Vault Operations",
          "DeleteVaultRequest",
          "Amazon S3 Glacier",
          "ListVaultsRequest",
          "CreateVaultResult",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_47",
      "text": "You need to update the code as shown with a vault name. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDeleteHighLevel\n{\nstatic string vaultName = \"*** Provide vault name ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.CreateVault(vaultName);\nConsole.WriteLine(\"Vault created. To delete the vault, press Enter\");\nConsole.ReadKey();\nmanager.DeleteVault(vaultName);\nConsole.WriteLine(\"\\nVault deleted. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nCreating a Vault Using .NET API Version 2012-06-01 42\n\nAmazon S3 Glacier Developer Guide\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nCreating a Vault Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the vault operations, including create and delete vaults,\nget a vault description, and get a list of vaults created in a specific AWS Region. The following are\nthe steps to create a vault using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region. 2.",
      "start_idx": 95329,
      "end_idx": 103049,
      "metadata": {
        "num_sentences": 10,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2848277621799045,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon Glacier",
            "Vault",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "AWS SDK for .NET",
            "CreateVault",
            "DeleteVault",
            "Amazon.RegionEndpoint",
            "AmazonGlacierException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "Amazon.RegionEndpoint.USWest2",
            "AmazonGlacierClient",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Vault Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for creating and deleting a vault using the AWS SDK for .NET, including both high-level and low-level API approaches. It also outlines error handling and region-specific operations for Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I create and delete a vault using the AWS SDK for .NET?",
            "What is the difference between high-level and low-level API methods for managing vaults in Amazon S3 Glacier?",
            "How can I handle errors when creating or deleting a vault with the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "Amazon.RegionEndpoint",
          "AmazonGlacierException",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "Vault",
          "CreateVault",
          "Amazon.RegionEndpoint.USWest2",
          "Amazon S3 Glacier",
          "AmazonServiceException",
          "Amazon Glacier",
          "DeleteVault",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_48",
      "text": "Provide request information by creating an instance of the CreateVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then account ID associated with the credentials you provide to sign\nthe request is assumed. For more information, see Using the AWS SDK for .NET with Amazon S3\nGlacier. 3. Run the CreateVault method by providing the request object as a parameter. The response S3 Glacier returns is available in the CreateVaultResponse object. Example: Vault Operations Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example creates a vault in the US\nWest (Oregon) Region. In addition, the code example retrieves the vault information, lists all vaults\nin the same AWS Region, and then deletes the vault created. The Location printed is the relative\nURI of the vault that includes your account ID, the AWS Region, and the vault name.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 11,
        "num_words": 164,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28074947703968395,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "CreateVaultRequest",
            "Amazon S3 Glacier",
            "vault name",
            "account ID",
            "AWS SDK for .NET",
            "CreateVault method",
            "CreateVaultResponse",
            "Low-Level API",
            "US West (Oregon) Region",
            "vault operations"
          ],
          "entities": [
            "CreateVaultRequest",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "CreateVaultResponse",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Cloud Storage Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the CreateVaultRequest class and CreateVault method in the AWS SDK for .NET to create, retrieve, list, and delete Amazon S3 Glacier vaults, along with providing account ID and vault name details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault using the AWS SDK for .NET?",
            "What information is required to create a vault in Amazon S3 Glacier?",
            "How can I list and delete vaults in a specific AWS Region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "CreateVaultResponse",
          "vault name",
          "CreateVaultRequest",
          "US West (Oregon) Region",
          "vault operations",
          "Low-Level API",
          "Amazon S3 Glacier",
          "account ID",
          "CreateVault method",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_49",
      "text": "Note\nFor information about the underlying REST API, see Create Vault (PUT vault). Creating a Vault Using .NET API Version 2012-06-01 43\n\nAmazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run the following example, see Running Code Examples. You need to update the code as shown with a vault name. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDelete\n{\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic AmazonGlacierClient client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Creating a vault. \");\nCreateAVault();\nDescribeVault();\nGetVaultsList();\nConsole.WriteLine(\"\\nVault created. Now press Enter to delete the vault...\");\nConsole.ReadKey();\nDeleteVault();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void CreateAVault()\n{\nCreateVaultRequest request = new CreateVaultRequest()\n{\nVaultName = vaultName\nCreating a Vault Using .NET API Version 2012-06-01 44\n\nAmazon S3 Glacier Developer Guide\n};\nCreateVaultResponse response = client.CreateVault(request);\nConsole.WriteLine(\"Vault created: {0}\\n\", response.Location);\n}\nstatic void DescribeVault()\n{\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n{\nVaultName = vaultName\n};\nDescribeVaultResponse describeVaultResponse =\nclient.DescribeVault(describeVaultRequest);\nConsole.WriteLine(\"\\nVault description...\");\nConsole.WriteLine(\n\"\\nVaultName: \" + describeVaultResponse.VaultName +\n\"\\nVaultARN: \" + describeVaultResponse.VaultARN +\n\"\\nVaultCreationDate: \" + describeVaultResponse.CreationDate +\n\"\\nNumberOfArchives: \" + describeVaultResponse.NumberOfArchives +\n\"\\nSizeInBytes: \" + describeVaultResponse.SizeInBytes +\n\"\\nLastInventoryDate: \" + describeVaultResponse.LastInventoryDate\n);\n}\nstatic void GetVaultsList()\n{\nstring lastMarker = null;\nConsole.WriteLine(\"\\n List of vaults in your account in the specific\nregion ...\");\ndo\n{\nListVaultsRequest request = new ListVaultsRequest()\n{\nMarker = lastMarker\n};\nListVaultsResponse response = client.ListVaults(request);\nforeach (DescribeVaultOutput output in response.VaultList)\n{\nConsole.WriteLine(\"Vault Name: {0} \\tCreation Date: {1} \\t #of archives:\n{2}\",\noutput.VaultName, output.CreationDate,\noutput.NumberOfArchives);\nCreating a Vault Using .NET API Version 2012-06-01 45\n\nAmazon S3 Glacier Developer Guide\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\n}\nstatic void DeleteVault()\n{\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = vaultName\n};\nDeleteVaultResponse response = client.DeleteVault(request);\n}\n}\n}\nCreating a Vault in Amazon S3 Glacier Using the REST API\nTo create a vault using the REST API, see Create Vault (PUT vault). Creating a Vault Using the Amazon S3 Glacier Console\nTo create a vault using the Amazon S3 Glacier (S3 Glacier) console, see Step 2: Create a Vault in S3\nGlacier in the Getting Started tutorial. Creating a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nFollow these steps to create a vault in Amazon S3 Glacier (S3 Glacier) using the AWS Command\nLine Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Creating a Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nCreating a Vault Using REST API Version 2012-06-01 46\n\nAmazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 11,
        "num_words": 491,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4942821849476207,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "DescribeVaultRequest",
            "AWS CLI",
            "REST API",
            "AmazonGlacierClient",
            "ListVaultsRequest",
            "DeleteVaultRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AmazonGlacierClient",
            "CreateVault",
            "DescribeVault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Vault Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "REST API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            ".NET API",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for creating, describing, listing, and deleting a vault in Amazon S3 Glacier using the .NET API, REST API, AWS CLI, and the S3 Glacier Console. It includes example code and prerequisites for setup.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the .NET API?",
            "What are the steps to list and describe vaults in Amazon S3 Glacier?",
            "How can I set up the AWS CLI to create a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Vault Management]",
        "tf_idf_keywords": [
          "CreateVaultResponse",
          "CreateVaultRequest",
          "AWS CLI",
          "AmazonGlacierClient",
          "Vault",
          "DescribeVaultRequest",
          "REST API",
          "DeleteVaultRequest",
          "CreateVault",
          "Amazon S3 Glacier",
          "ListVaultsRequest",
          "DescribeVault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_50",
      "text": "Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Creating a Vault Using the AWS CLI\n1. Use the create-vault command to create a vault named awsexamplevault under account\n111122223333.\naws glacier create-vault --vault-name awsexamplevault --account-id 111122223333\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault\"\n}\n2. Verify creation using the describe-vault command. Creating a Vault Using the AWS CLI API Version 2012-06-01 47\n\nAmazon S3 Glacier Developer Guide\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nRetrieving Vault Metadata in Amazon S3 Glacier\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. Amazon S3 Glacier (S3 Glacier) provides API calls\nfor you to retrieve this information for a specific vault or all the vaults in a specific AWS Region in\nyour account.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4060183438387784,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "list-vaults",
            "create-vault",
            "describe-vault",
            "account ID",
            "configuration",
            "metadata",
            "archives"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "Amazon S3 Glacier",
            "vaults",
            "account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to verify AWS CLI setup, perform basic operations with Amazon S3 Glacier, and retrieve vault metadata using specific AWS CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I verify my AWS CLI setup?",
            "What command is used to create a vault in Amazon S3 Glacier?",
            "How can I retrieve metadata for a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "archives",
          "S3 Glacier",
          "metadata",
          "AWS CLI",
          "vaults",
          "list-vaults",
          "vault",
          "Amazon S3 Glacier",
          "account ID",
          "configuration",
          "describe-vault",
          "create-vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_51",
      "text": "If you retrieve a vault list, S3 Glacier returns the list sorted by the ASCII values of the vault names. The list contains up to 1,000 vaults. You should always check the response for a marker at which\nto continue the list; if there are no more items the marker field is null. You can optionally limit\nthe number of vaults returned in the response. If there are more vaults than are returned in the\nresponse, the result is paginated. You need to send additional requests to fetch the next set of\nvaults. Topics\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Retrieving Vault Metadata Using the REST API\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS Command Line Interface\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for\nJava\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Amazon SDK for Java\nRetrieving Vault Metadata API Version 2012-06-01 48\n\nAmazon S3 Glacier Developer Guide\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAmazon SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region. 2.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 13,
        "num_words": 278,
        "chunk_type": "semantic_split",
        "coherence_score": 0.26144866454295623,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "SDK Instructions",
              "Pagination Handling"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault metadata",
            "AmazonGlacierClient",
            "AWS Region",
            "marker",
            "paginated response",
            "low-level API",
            "vault list",
            "ASCII sorting",
            "Amazon SDK for Java"
          ],
          "entities": [
            "S3 Glacier",
            "AmazonGlacierClient",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Vault Metadata Retrieval",
          "secondary_categories": [
            "AWS SDK Usage",
            "REST API and CLI Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for vaults in Amazon S3 Glacier, including sorting, pagination, and specific instructions for using various tools like the AWS SDK for Java, .NET, REST API, and CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific vault in Amazon S3 Glacier?",
            "What is the maximum number of vaults returned in a single response?",
            "How can I handle pagination when retrieving a list of vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Vault Metadata Retrieval]",
        "tf_idf_keywords": [
          "low-level API",
          "ASCII sorting",
          "S3 Glacier",
          "AWS Region",
          "vault list",
          "AmazonGlacierClient",
          "Amazon SDK for Java",
          "paginated response",
          "REST API",
          "Amazon S3 Glacier",
          "vault metadata",
          "marker",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_52",
      "text": "Provide request information by creating an instance of the DescribeVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for Java with\nAmazon S3 Glacier. 3. Run the describeVault method by providing the request object as a parameter. The vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object. The following Java code snippet illustrates the preceding steps. DescribeVaultRequest request = new DescribeVaultRequest()\n.withVaultName(\"*** provide vault name***\");\nDescribeVaultResult result = client.describeVault(request);\nSystem.out.print(\n\"\\nCreationDate: \" + result.getCreationDate() +\n\"\\nLastInventoryDate: \" + result.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + result.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + result.getSizeInBytes() +\n\"\\nVaultARN: \" + result.getVaultARN() +\n\"\\nVaultName: \" + result.getVaultName());\nRetrieving Vault Metadata Using Java API Version 2012-06-01 49\n\nAmazon S3 Glacier Developer Guide\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault). Retrieve Vault Metadata for All Vaults in a Region\nYou can also use the listVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion. The following Java code snippet retrieves list of vaults in the us-west-2 Region. The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nlistVaults calls to retrieve the entire vault list from the AWS Region.",
      "start_idx": 110945,
      "end_idx": 115034,
      "metadata": {
        "num_sentences": 13,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28710414201785356,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeSnippet",
              "APIUsage"
            ]
          },
          "keywords": [
            "DescribeVaultRequest",
            "DescribeVaultResult",
            "Vault Metadata",
            "Amazon S3 Glacier",
            "listVaults",
            "AWS Region",
            "Java API",
            "REST API",
            "VaultARN",
            "VaultName"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DescribeVaultRequest",
            "DescribeVaultResult",
            "listVaults",
            "us-west-2 Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier API",
          "secondary_categories": [
            "Java SDK",
            "Vault Metadata Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to retrieve metadata for a specific S3 Glacier vault or for all vaults in a region, using methods like describeVault and listVaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific S3 Glacier vault using Java?",
            "What is the process to list all vaults in a specific AWS region using the AWS SDK for Java?",
            "What information is included in the DescribeVaultResult object?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier API]",
        "tf_idf_keywords": [
          "Java API",
          "Vault Metadata",
          "AWS Region",
          "VaultARN",
          "DescribeVaultResult",
          "us-west-2 Region",
          "DescribeVaultRequest",
          "listVaults",
          "REST API",
          "Amazon S3 Glacier",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_53",
      "text": "AmazonGlacierClient client;\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nString marker = null;\ndo {\nListVaultsRequest request = new ListVaultsRequest()\n.withLimit(\"5\")\n.withMarker(marker);\nListVaultsResult listVaultsResult = client.listVaults(request);\nList<DescribeVaultOutput> vaultList = listVaultsResult.getVaultList();\nmarker = listVaultsResult.getMarker();\nfor (DescribeVaultOutput vault : vaultList) {\nSystem.out.println(\n\"\\nCreationDate: \" + vault.getCreationDate() +\n\"\\nLastInventoryDate: \" + vault.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + vault.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + vault.getSizeInBytes() +\n\"\\nVaultARN: \" + vault.getVaultARN() +\n\"\\nVaultName: \" + vault.getVaultName());\n}\n} while (marker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API. If there are more vaults to list, the response\nmarker field contains the vault Amazon Resource Name (ARN) at which to continue the list with a\nnew request; otherwise, the marker field is null. Retrieving Vault Metadata Using Java API Version 2012-06-01 50\n\nAmazon S3 Glacier Developer Guide\nNote that the information returned for each vault in the list is the same as the information you get\nby calling the describeVault method for a specific vault. Note\nThe listVaults method calls the underlying REST API (see List Vaults (GET vaults)). Example: Retrieving Vault Metadata Using the Amazon SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java. The Java\ncode example creates a vault and retrieves the vault metadata. Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK for .NET\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region. 2.",
      "start_idx": 110945,
      "end_idx": 115034,
      "metadata": {
        "num_sentences": 13,
        "num_words": 352,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3353559053861178,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "ListVaultsRequest",
            "ListVaultsResult",
            "DescribeVaultOutput",
            "VaultARN",
            "AWS SDK for Java",
            "S3 Glacier",
            "vault metadata",
            "REST API",
            "marker"
          ],
          "entities": [
            "AmazonGlacierClient",
            "ListVaultsRequest",
            "ListVaultsResult",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to retrieve metadata for Amazon S3 Glacier vaults, including details such as creation date, size, and number of archives. It also describes the use of markers for paginated results and references similar operations using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for all vaults in Amazon S3 Glacier using Java?",
            "What is the purpose of the marker field in the ListVaults API response?",
            "What information is returned for each vault when using the listVaults method?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AmazonGlacierClient",
          "VaultARN",
          "AWS SDK for .NET",
          "REST API",
          "ListVaultsResult",
          "DescribeVaultOutput",
          "ListVaultsRequest",
          "marker",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "vault metadata"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_54",
      "text": "Provide request information by creating an instance of the DescribeVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier. Retrieving Vault Metadata Using .NET API Version 2012-06-01 51\n\nAmazon S3 Glacier Developer Guide\n3. Run the DescribeVault method by providing the request object as a parameter. The vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object. The following C# code snippet illustrates the preceding steps. The snippet retrieves metadata\ninformation of an existing vault in the US West (Oregon) Region. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n{\nVaultName = \"*** Provide vault name ***\"\n};\nDescribeVaultResponse describeVaultResponse =\nclient.DescribeVault(describeVaultRequest);\nConsole.WriteLine(\"\\nVault description...\");\nConsole.WriteLine(\n\"\\nVaultName: \" + describeVaultResponse.VaultName +\n\"\\nVaultARN: \" + describeVaultResponse.VaultARN +\n\"\\nVaultCreationDate: \" + describeVaultResponse.CreationDate +\n\"\\nNumberOfArchives: \" + describeVaultResponse.NumberOfArchives +\n\"\\nSizeInBytes: \" + describeVaultResponse.SizeInBytes +\n\"\\nLastInventoryDate: \" + describeVaultResponse.LastInventoryDate\n);\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault). Retrieve Vault Metadata for All Vaults in a Region\nYou can also use the ListVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion. The following C# code snippet retrieves list of vaults in the US West (Oregon) Region.",
      "start_idx": 115035,
      "end_idx": 121032,
      "metadata": {
        "num_sentences": 12,
        "num_words": 242,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3512323552911932,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "DescribeVaultRequest",
            "Amazon S3 Glacier",
            "DescribeVaultResult",
            "AmazonGlacierClient",
            "DescribeVaultResponse",
            "ListVaults",
            "Vault metadata",
            "Region",
            "VaultName",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DescribeVaultRequest",
            "DescribeVaultResponse",
            "AmazonGlacierClient",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Vault Metadata Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Region Endpoint"
          ],
          "mentioned_tools": [
            ".NET",
            "C#",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the DescribeVaultRequest and DescribeVault methods in the AWS SDK for .NET to retrieve metadata for a specific Amazon S3 Glacier vault or all vaults in a region, with code examples in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific Amazon S3 Glacier vault using the AWS SDK for .NET?",
            "What is the purpose of the DescribeVaultRequest and DescribeVault methods in the AWS SDK for .NET?",
            "How can I list all vaults in a specific AWS region using C#?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "Vault metadata",
          "US West (Oregon) Region",
          "AmazonGlacierClient",
          "DescribeVaultResult",
          "ListVaults",
          "DescribeVaultRequest",
          "REST API",
          "Region",
          "Amazon S3 Glacier",
          "AWS Region Endpoint",
          "VaultName",
          "DescribeVaultResponse"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_55",
      "text": "The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nListVaults calls to retrieve the entire vault list from the AWS Region. Retrieving Vault Metadata Using .NET API Version 2012-06-01 52\n\nAmazon S3 Glacier Developer Guide\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nstring lastMarker = null;\nConsole.WriteLine(\"\\n List of vaults in your account in the specific AWS Region ...\");\ndo\n{\nListVaultsRequest request = new ListVaultsRequest()\n{\nLimit = 5,\nMarker = lastMarker\n};\nListVaultsResponse response = client.ListVaults(request);\nforeach (DescribeVaultOutput output in response.VaultList)\n{\nConsole.WriteLine(\"Vault Name: {0} \\tCreation Date: {1} \\t #of archives: {2}\",\noutput.VaultName, output.CreationDate, output.NumberOfArchives);\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API. Note that the information returned for each vault in the list is the same as the information you get\nby calling the DescribeVault method for a specific vault. Note\nThe ListVaults method calls the underlying REST API (see List Vaults (GET vaults)). Example: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK\nfor .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example creates a vault and retrieves the vault metadata. Retrieving Vault Metadata Using .NET API Version 2012-06-01 53\n\nAmazon S3 Glacier Developer Guide\nRetrieving Vault Metadata Using the REST API\nTo list vaults using the REST API, see List Vaults (GET vaults). To describe one vault, see Describe\nVault (GET vault). Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nThis example shows how to retrieve vault information and metadata in Amazon S3 Glacier (S3\nGlacier) using the AWS Command Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Retrieving Vault Metadata Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI.",
      "start_idx": 115035,
      "end_idx": 121032,
      "metadata": {
        "num_sentences": 12,
        "num_words": 342,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47704026193329785,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference",
              "CLI Instructions"
            ]
          },
          "keywords": [
            "vaults",
            "ListVaults",
            "DescribeVault",
            "AWS CLI",
            "Amazon S3 Glacier",
            "REST API",
            ".NET API",
            "metadata",
            "Limit",
            "Marker"
          ],
          "entities": [
            "AmazonGlacierClient",
            "ListVaultsRequest",
            "ListVaultsResponse",
            "DescribeVaultOutput",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Vault Metadata Retrieval",
          "secondary_categories": [
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AmazonGlacierClient",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault metadata in Amazon S3 Glacier using .NET API, REST API, and AWS CLI, including code examples and configuration steps.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a list of vaults using the AWS SDK for .NET?",
            "What is the default limit of vaults returned by the S3 Glacier API?",
            "How do I set up the AWS CLI to retrieve vault metadata?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Metadata Retrieval]",
        "tf_idf_keywords": [
          "metadata",
          "AWS Region",
          "AWS CLI",
          "ListVaultsResponse",
          "AmazonGlacierClient",
          ".NET API",
          "ListVaults",
          "Limit",
          "Marker",
          "REST API",
          "Amazon S3 Glacier",
          "ListVaultsRequest",
          "vaults",
          "DescribeVault",
          "DescribeVaultOutput"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_56",
      "text": "For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. Retrieving Vault Metadata Using REST API Version 2012-06-01 54\n\nAmazon S3 Glacier Developer Guide\naws configure list\nExample: Retrieving Vault Metadata Using the AWS CLI\n\u2022 Use the describe-vault command to describe a vault named awsexamplevault under\naccount 111122223333.\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nDownloading a Vault Inventory in Amazon S3 Glacier\nAfter you upload your first archive to your vault, Amazon S3 Glacier (S3 Glacier) automatically\ncreates a vault inventory and then updates it approximately once a day. After S3 Glacier creates\nthe first inventory, it typically takes half a day and up to a day before that inventory is available for\nretrieval. You can retrieve a vault inventory from S3 Glacier with the following two-step process:\n1. Initiate an inventory retrieval job by using the Initiate Job (POST jobs) operation. Important\nA data retrieval policy can cause your initiate retrieval job request to fail with a\nPolicyEnforcedException exception. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.",
      "start_idx": 115035,
      "end_idx": 121032,
      "metadata": {
        "num_sentences": 14,
        "num_words": 285,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27894215007404705,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault inventory",
            "list-vaults",
            "describe-vault",
            "Initiate Job",
            "PolicyEnforcedException",
            "data retrieval policy",
            "Error Responses",
            "REST API"
          ],
          "entities": [
            "AWS Command Line Interface",
            "Amazon S3 Glacier",
            "describe-vault",
            "list-vaults",
            "PolicyEnforcedException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Configuration and Usage",
          "secondary_categories": [
            "Amazon S3 Glacier Operations",
            "Data Retrieval Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for configuring and verifying the AWS Command Line Interface (CLI), retrieving Amazon S3 Glacier vault metadata, and downloading vault inventories using both CLI commands and REST API operations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I install and configure the AWS Command Line Interface?",
            "What commands can I use to retrieve metadata or list vaults in Amazon S3 Glacier?",
            "How do I initiate and retrieve a vault inventory in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Configuration and Usage]",
        "tf_idf_keywords": [
          "vault inventory",
          "S3 Glacier",
          "data retrieval policy",
          "AWS CLI",
          "Initiate Job",
          "list-vaults",
          "REST API",
          "PolicyEnforcedException",
          "Amazon S3 Glacier",
          "describe-vault",
          "AWS Command Line Interface",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_57",
      "text": "2. After the job completes, download the bytes using the Get Job Output (GET output) operation. For example, retrieving an archive or a vault inventory requires you to first initiate a retrieval job. The job request is run asynchronously. When you initiate a retrieval job, S3 Glacier creates a job and\nreturns a job ID in the response. When S3 Glacier completes the job, you can get the job output,\nthe archive bytes, or the vault inventory data. The job must complete before you can get its output. To determine the status of the job, you have\nthe following options:\nDownloading a Vault Inventory API Version 2012-06-01 55\n\nAmazon S3 Glacier Developer Guide\n\u2022 Wait for job completion notification\u2014You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. You\ncan specify Amazon SNS topic using the following methods:\n\u2022 Specify an Amazon SNS topic per job basis. When you initiate a job, you can optionally specify an Amazon SNS topic. \u2022 Set notification configuration on the vault. You can set notification configuration for specific events on the vault (see Configuring Vault\nNotifications in Amazon S3 Glacier). S3 Glacier sends a message to the specified SNS topic any\ntime the specific event occur.",
      "start_idx": 121033,
      "end_idx": 125507,
      "metadata": {
        "num_sentences": 13,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3136005401611328,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Notification Configuration"
            ]
          },
          "keywords": [
            "job completion",
            "Amazon SNS",
            "S3 Glacier",
            "vault inventory",
            "retrieval job",
            "job ID",
            "archive bytes",
            "notification configuration",
            "API Version 2012-06-01",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service",
            "SNS topic",
            "vault",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Asynchronous Job Processing",
            "Notification Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to retrieve job output, such as archive bytes or vault inventory, from Amazon S3 Glacier after a retrieval job completes. It also outlines methods for monitoring job completion using Amazon SNS notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve job output from Amazon S3 Glacier?",
            "What methods are available to monitor the completion of a retrieval job in S3 Glacier?",
            "How do I configure Amazon SNS notifications for S3 Glacier jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "archive bytes",
          "vault inventory",
          "S3 Glacier",
          "notification configuration",
          "SNS topic",
          "archive",
          "job completion",
          "vault",
          "API Version 2012-06-01",
          "Amazon SNS",
          "job ID",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_58",
      "text": "If you have notification configuration set on the vault and you also specify an Amazon SNS topic\nwhen you initiate a job, S3 Glacier sends job completion message to both the topics. You can configure the SNS topic to notify you via email or store the message in an Amazon\nSimple Queue Service (Amazon SQS) that your application can poll. When a message appears in\nthe queue, you can check if the job is completed successfully and then download the job output. \u2022 Request job information explicitly\u2014S3 Glacier also provides a describe job operation\n(Describe Job (GET JobID)) that enables you to poll for job information. You can periodically\nsend this request to obtain job information. However, using Amazon SNS notifications is the\nrecommended option. Note\nThe information you get via SNS notification is the same as what you get by calling\nDescribe Job. Topics\n\u2022 About the Inventory\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading a Vault Inventory Using the REST API\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS Command Line Interface\nDownloading a Vault Inventory API Version 2012-06-01 56\n\nAmazon S3 Glacier Developer Guide\nAbout the Inventory\nS3 Glacier updates a vault inventory at least once per day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata. Note that after S3 Glacier creates the first inventory for the vault, it typically takes half a day\nand up to a day before that inventory is available for retrieval. You might not find it useful to retrieve a vault inventory for each archive upload. However, suppose\nyou maintain a database on the client-side associating metadata about the archives you upload\nto S3 Glacier.",
      "start_idx": 121033,
      "end_idx": 125507,
      "metadata": {
        "num_sentences": 13,
        "num_words": 354,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36327401185647035,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon SNS",
            "S3 Glacier",
            "vault inventory",
            "Amazon SQS",
            "Describe Job",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API",
            "AWS Command Line Interface",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon SQS",
            "S3 Glacier",
            "AWS SDK",
            "Vault Inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Inventory Management",
          "secondary_categories": [
            "Job Notification Configuration",
            "Job Information Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon SNS notifications for S3 Glacier job completion, retrieve vault inventory using various methods, and describes the inventory update process and limitations in S3 Glacier.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I configure Amazon SNS notifications for S3 Glacier job completion?",
            "What are the methods to retrieve a vault inventory in S3 Glacier?",
            "How often does S3 Glacier update the vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Vault Inventory Management]",
        "tf_idf_keywords": [
          "Describe Job",
          "vault inventory",
          "S3 Glacier",
          "AWS SDK",
          "Vault Inventory",
          "Amazon SQS",
          "REST API",
          "API Version 2012-06-01",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS Command Line Interface",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_59",
      "text": "Then, you might find the vault inventory useful to reconcile information, as needed,\nin your database with the actual vault inventory. You can limit the number of inventory items\nretrieved by filtering on the archive creation date or by setting a quota. For more information\nabout limiting inventory retrieval, see Range Inventory Retrieval. The inventory can be returned in two formats, comma-separated values (CSV) or JSON. You can\noptionally specify the format when you initiate the inventory job. The default format is JSON. For\nmore information about the data fields returned in an inventory job output, see Response Body of\nthe Get Job Output API. Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK for\nJava. The high-level API does not support retrieving a vault inventory. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 121033,
      "end_idx": 125507,
      "metadata": {
        "num_sentences": 13,
        "num_words": 182,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25699757307003707,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Reference"
            ]
          },
          "keywords": [
            "vault inventory",
            "reconcile",
            "archive creation date",
            "quota",
            "Range Inventory Retrieval",
            "CSV",
            "JSON",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "Get Job Output API",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Vault Inventory Management",
          "secondary_categories": [
            "AWS SDK for Java",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and reconcile a vault inventory in Amazon S3 Glacier using the AWS SDK for Java, including filtering options, output formats, and step-by-step instructions for using the low-level API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory using the AWS SDK for Java?",
            "What are the available formats for vault inventory output?",
            "How can I filter inventory retrieval by archive creation date or quota?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Vault Inventory Management]",
        "tf_idf_keywords": [
          "vault inventory",
          "archive creation date",
          "AWS Region",
          "Get Job Output API",
          "AmazonGlacierClient",
          "reconcile",
          "CSV",
          "Range Inventory Retrieval",
          "Amazon S3 Glacier",
          "quota",
          "JSON",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_60",
      "text": "2. Initiate an inventory retrieval job by executing the initiateJob method. Run initiateJob by providing job information in an InitiateJobRequest object. About the Inventory API Version 2012-06-01 57\n\nAmazon S3 Glacier Developer Guide\nNote\nNote that if an inventory has not been completed for the vault an error is returned. Amazon S3 Glacier (S3 Glacier) prepares an inventory for each vault periodically, every\n24 hours. S3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobParameters(\nnew JobParameters()\n.withType(\"inventory-retrieval\")\n.withSNSTopic(\"*** provide SNS topic ARN ****\")\n);\nInitiateJobResult initJobResult = client.initiateJob(initJobRequest);\nString jobId = initJobResult.getJobId();\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault, or specified an Amazon Simple Notification Service\n(Amazon SNS) topic when you initiated the job, S3 Glacier sends a message to the topic after it\ncompletes the job. You can also poll S3 Glacier by calling the describeJob method to determine job completion\nstatus. However, using an Amazon SNS topic for notification is the recommended approach. The code example given in the following section uses Amazon SNS for S3 Glacier to publish a\nmessage. 4.",
      "start_idx": 125508,
      "end_idx": 126999,
      "metadata": {
        "num_sentences": 15,
        "num_words": 219,
        "breakpoint_idx": 654,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2621556599934896,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Job Execution",
              "Notification Configuration"
            ]
          },
          "keywords": [
            "inventory retrieval",
            "InitiateJobRequest",
            "InitiateJobResult",
            "Amazon SNS",
            "S3 Glacier",
            "vault",
            "job ID",
            "describeJob",
            "JobParameters",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Job Management",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters"
          ]
        },
        "semantic": {
          "summary": "This section explains how to initiate an inventory retrieval job in Amazon S3 Glacier, handle job responses, and monitor job completion using Amazon SNS notifications or polling methods.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in Amazon S3 Glacier?",
            "What happens if an inventory has not been completed for the vault?",
            "How can I monitor the completion status of an inventory retrieval job in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "notification configuration",
          "S3 Glacier",
          "vault",
          "Amazon SNS",
          "job ID",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "describeJob",
          "JobParameters",
          "InitiateJobResult"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_61",
      "text": "Download the job output (vault inventory data) by executing the getJobOutput method. You provide your account ID, job ID, and vault name by creating an instance of the\nGetJobOutputRequest class. If you don't provide an account ID, then the account ID\nDownloading a Vault Inventory Using Java API Version 2012-06-01 58\n\nAmazon S3 Glacier Developer Guide\nassociated with the credentials you provide to sign the request is used. For more information,\nsee Using the AWS SDK for Java with Amazon S3 Glacier. The output that S3 Glacier returns is available in the GetJobOutputResult object. GetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobId(\"*** provide job ID ***\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody(); provides the output stream. Note\nFor information about the job related underlying REST API, see Job Operations. Example: Retrieving a Vault Inventory Using the Amazon SDK for Java\nThe following Java code example retrieves the vault inventory for the specified vault. The example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic. S3 Glacier sends notification to this topic after it completes the job.",
      "start_idx": 127000,
      "end_idx": 132313,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36823048061794705,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Method Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "Vault Inventory",
            "Amazon SDK for Java",
            "Job Operations",
            "Amazon SNS",
            "REST API",
            "Java Code"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "Amazon SNS",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier API",
          "secondary_categories": [
            "Java SDK",
            "AWS SNS"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download a vault inventory from Amazon S3 Glacier using the Java SDK by calling the getJobOutput method and provides a code example for retrieving the inventory.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download a vault inventory using the Amazon S3 Glacier Java SDK?",
            "What is the purpose of the GetJobOutputRequest and GetJobOutputResult classes?",
            "How can I set up an Amazon SNS topic for job notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier API]",
        "tf_idf_keywords": [
          "AWS SDK for Java",
          "GetJobOutputRequest",
          "Amazon SDK for Java",
          "Vault Inventory",
          "GetJobOutput",
          "REST API",
          "Java Code",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Job Operations",
          "GetJobOutputResult"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_62",
      "text": "\u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue. \u2022 Initiates a job to download the specified archive. In the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job. \u2022 Checks the Amazon SQS queue for a message that contains the job ID. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. Downloading a Vault Inventory Using Java API Version 2012-06-01 59\n\nAmazon S3 Glacier Developer Guide\n\u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue that it created. import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.GetJobOutputRequest;\nimport com.amazonaws.services.glacier.model.GetJobOutputResult;\nimport com.amazonaws.services.glacier.model.InitiateJobRequest;\nimport com.amazonaws.services.glacier.model.InitiateJobResult;\nimport com.amazonaws.services.glacier.model.JobParameters;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sns.model.CreateTopicRequest;\nimport com.amazonaws.services.sns.model.CreateTopicResult;\nimport com.amazonaws.services.sns.model.DeleteTopicRequest;\nimport com.amazonaws.services.sns.model.SubscribeRequest;\nimport com.amazonaws.services.sns.model.SubscribeResult;\nimport com.amazonaws.services.sns.model.UnsubscribeRequest;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nimport com.amazonaws.services.sqs.model.CreateQueueResult;\nimport com.amazonaws.services.sqs.model.DeleteQueueRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesRequest;\nDownloading a Vault Inventory Using Java API Version 2012-06-01 60\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.sqs.model.GetQueueAttributesResult;\nimport com.amazonaws.services.sqs.model.Message;\nimport com.amazonaws.services.sqs.model.ReceiveMessageRequest;\nimport com.amazonaws.services.sqs.model.SetQueueAttributesRequest;\npublic class AmazonGlacierDownloadInventoryWithSQSPolling {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String snsTopicName = \"*** provide topic name ***\";\npublic static String sqsQueueName = \"*** provide queue name ***\";\npublic static String sqsQueueARN;\npublic static String sqsQueueURL;\npublic static String snsTopicARN;\npublic static String snsSubscriptionARN;\npublic static String fileName = \"*** provide file name ***\";\npublic static String region = \"*** region ***\";\npublic static long sleepTime = 600;\npublic static AmazonGlacierClient client;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.\" + region + \".amazonaws.com\");\nsqsClient = new AmazonSQSClient(credentials);\nsqsClient.setEndpoint(\"https://sqs.\"",
      "start_idx": 127000,
      "end_idx": 132313,
      "metadata": {
        "num_sentences": 10,
        "num_words": 349,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2998259650336372,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Integration"
            ]
          },
          "keywords": [
            "Amazon SQS",
            "Amazon SNS",
            "S3 Glacier",
            "Vault Inventory",
            "Java API",
            "Job Parameters",
            "Queue Policy",
            "Notification",
            "Archive Download",
            "AWS SDK"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "ProfileCredentialsProvider",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Messaging",
          "secondary_categories": [
            "AWS SDK Integration",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Jackson JSON Library",
            "AWS SDK for Java",
            "Java IO"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Java APIs to download a vault inventory from Amazon S3 Glacier by creating and managing Amazon SQS queues and Amazon SNS topics for job notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up an Amazon SQS queue and Amazon SNS topic for S3 Glacier notifications?",
            "What Java classes and methods are required to download a vault inventory from S3 Glacier?",
            "How can I clean up resources like Amazon SNS topics and SQS queues after completing a job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Messaging]",
        "tf_idf_keywords": [
          "Java API",
          "S3 Glacier",
          "AmazonGlacierClient",
          "AWS SDK",
          "ProfileCredentialsProvider",
          "Vault Inventory",
          "Job Parameters",
          "Amazon SQS",
          "Archive Download",
          "AmazonSNSClient",
          "Amazon SNS",
          "Queue Policy",
          "Amazon S3 Glacier",
          "AmazonSQSClient",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_63",
      "text": "+ region + \".amazonaws.com\");\nsnsClient = new AmazonSNSClient(credentials);\nsnsClient.setEndpoint(\"https://sns.\" + region + \".amazonaws.com\");\ntry {\nsetupSQS();\nsetupSNS();\nString jobId = initiateJobRequest();\nSystem.out.println(\"Jobid = \" + jobId);\nBoolean success = waitForJobToComplete(jobId, sqsQueueURL);\nif (!success) { throw new Exception(\"Job did not complete\nsuccessfully. \"); }\nDownloading a Vault Inventory Using Java API Version 2012-06-01 61\n\nAmazon S3 Glacier Developer Guide\ndownloadJobOutput(jobId);\ncleanUp();\n} catch (Exception e) {\nSystem.err.println(\"Inventory retrieval failed. \");\nSystem.err.println(e);\n}\n}\nprivate static void setupSQS() {\nCreateQueueRequest request = new CreateQueueRequest()\n.withQueueName(sqsQueueName);\nCreateQueueResult result = sqsClient.createQueue(request);\nsqsQueueURL = result.getQueueUrl();\nGetQueueAttributesRequest qRequest = new GetQueueAttributesRequest()\n.withQueueUrl(sqsQueueURL)\n.withAttributeNames(\"QueueArn\");\nGetQueueAttributesResult qResult = sqsClient.getQueueAttributes(qRequest);\nsqsQueueARN = qResult.getAttributes().get(\"QueueArn\");\nPolicy sqsPolicy =\nnew Policy().withStatements(\nnew Statement(Effect.Allow)\n.withPrincipals(Principal.AllUsers)\n.withActions(SQSActions.SendMessage)\n.withResources(new Resource(sqsQueueARN)));\nMap<String, String> queueAttributes = new HashMap<String, String>();\nqueueAttributes.put(\"Policy\", sqsPolicy.toJson());\nsqsClient.setQueueAttributes(new SetQueueAttributesRequest(sqsQueueURL,\nqueueAttributes));\n}\nprivate static void setupSNS() {\nCreateTopicRequest request = new CreateTopicRequest()\n.withName(snsTopicName);\nCreateTopicResult result = snsClient.createTopic(request);\nsnsTopicARN = result.getTopicArn();\nSubscribeRequest request2 = new SubscribeRequest()\n.withTopicArn(snsTopicARN)\nDownloading a Vault Inventory Using Java API Version 2012-06-01 62\n\nAmazon S3 Glacier Developer Guide\n.withEndpoint(sqsQueueARN)\n.withProtocol(\"sqs\");\nSubscribeResult result2 = snsClient.subscribe(request2);\nsnsSubscriptionARN = result2.getSubscriptionArn();\n}\nprivate static String initiateJobRequest() {\nJobParameters jobParameters = new JobParameters()\n.withType(\"inventory-retrieval\")\n.withSNSTopic(snsTopicARN);\nInitiateJobRequest request = new InitiateJobRequest()\n.withVaultName(vaultName)\n.withJobParameters(jobParameters);\nInitiateJobResult response = client.initiateJob(request);\nreturn response.getJobId();\n}\nprivate static Boolean waitForJobToComplete(String jobId, String sqsQueueUrl)\nthrows InterruptedException, JsonParseException, IOException {\nBoolean messageFound = false;\nBoolean jobSuccessful = false;\nObjectMapper mapper = new ObjectMapper();\nJsonFactory factory = mapper.getFactory();\nwhile (!messageFound) {\nList<Message> msgs = sqsClient.receiveMessage(\nnew\nReceiveMessageRequest(sqsQueueUrl).withMaxNumberOfMessages(10)).getMessages();\nif (msgs.size() > 0) {\nfor (Message m : msgs) {\nJsonParser jpMessage = factory.createJsonParser(m.getBody());\nJsonNode jobMessageNode = mapper.readTree(jpMessage);\nString jobMessage = jobMessageNode.get(\"Message\").textValue();\nJsonParser jpDesc = factory.createJsonParser(jobMessage);\nJsonNode jobDescNode = mapper.readTree(jpDesc);\nString retrievedJobId = jobDescNode.get(\"JobId\").textValue();\nString statusCode = jobDescNode.get(\"StatusCode\").textValue();\nDownloading a Vault Inventory Using Java API Version 2012-06-01 63\n\nAmazon S3 Glacier Developer Guide\nif (retrievedJobId.equals(jobId)) {\nmessageFound = true;\nif (statusCode.equals(\"Succeeded\")) {\njobSuccessful = true;\n}\n}\n}\n} else {\nThread.sleep(sleepTime * 1000);\n}\n}\nreturn (messageFound && jobSuccessful);\n}\nprivate static void downloadJobOutput(String jobId) throws IOException {\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n.withVaultName(vaultName)\n.withJobId(jobId);\nGetJobOutputResult getJobOutputResult =\nclient.getJobOutput(getJobOutputRequest);\nFileWriter fstream = new FileWriter(fileName);\nBufferedWriter out = new BufferedWriter(fstream);\nBufferedReader in = new BufferedReader(new\nInputStreamReader(getJobOutputResult.getBody()));\nString inputLine;\ntry {\nwhile ((inputLine = in.readLine()) != null) {\nout.write(inputLine);\n}\n}catch(IOException e) {\nthrow new AmazonClientException(\"Unable to save archive\", e);\n}finally{\ntry {in.close();} catch (Exception e) {}\ntry {out.close();} catch (Exception e) {}\n}\nSystem.out.println(\"Retrieved inventory to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nDownloading a Vault Inventory Using Java API Version 2012-06-01 64\n\nAmazon S3 Glacier Developer Guide\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK\nfor .NET.",
      "start_idx": 132314,
      "end_idx": 137237,
      "metadata": {
        "num_sentences": 4,
        "num_words": 464,
        "breakpoint_idx": 678,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.36606431007385254,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "AmazonSNSClient",
            "Amazon S3 Glacier",
            "AWS SDK",
            "SQS",
            "SNS",
            "JobId",
            "Vault Inventory",
            "QueueArn",
            "JobParameters",
            "InitiateJobRequest"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "SQS Queue",
            "Vault Inventory Retrieval"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS Messaging Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Jackson (ObjectMapper)",
            "AmazonClientException"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java implementation for retrieving a vault inventory from Amazon S3 Glacier using the AWS SDK, including setup of SQS and SNS, job initiation, monitoring, and cleanup processes.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory from Amazon S3 Glacier using Java?",
            "What are the steps to set up SQS and SNS for inventory retrieval in AWS?",
            "How can I handle errors and clean up resources after retrieving a vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "SQS",
          "SNS",
          "QueueArn",
          "AWS SDK",
          "JobId",
          "Vault Inventory",
          "Amazon SQS",
          "AmazonSNSClient",
          "Amazon SNS",
          "Vault Inventory Retrieval",
          "Amazon S3 Glacier",
          "SQS Queue",
          "JobParameters",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_64",
      "text": "The high-level API does not support retrieving a vault inventory. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 137238,
      "end_idx": 137502,
      "metadata": {
        "num_sentences": 5,
        "num_words": 43,
        "breakpoint_idx": 683,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.21620326042175292,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Client Initialization"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "AWS Region",
            "vault inventory",
            "client",
            "operations"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AWS Region",
            "vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "AWS Glacier",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "The high-level API does not support retrieving a vault inventory. Users must create an AmazonGlacierClient instance and specify the AWS Region of the vault for operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory using Amazon Glacier?",
            "What AWS Region should I specify when creating an AmazonGlacierClient instance?",
            "What operations can I perform with the AmazonGlacierClient in a specific region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "vault inventory",
          "AWS Region",
          "AmazonGlacierClient",
          "vault",
          "operations",
          "client",
          "Amazon Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_65",
      "text": "2. Initiate an inventory retrieval job by executing the InitiateJob method. You provide job information in an InitiateJobRequest object. Amazon S3 Glacier\n(S3 Glacier) returns a job ID in response. The response is available in an instance of the\nInitiateJobResponse class. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"inventory-retrieval\",\nSNSTopic = \"*** Provide Amazon SNS topic arn ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 65\n\nAmazon S3 Glacier Developer Guide\n(Amazon SNS) topic, or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message.",
      "start_idx": 137503,
      "end_idx": 140212,
      "metadata": {
        "num_sentences": 10,
        "num_words": 180,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29725070529513886,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "InitiateJob",
            "InitiateJobRequest",
            "InitiateJobResponse",
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "JobParameters",
            "SNS Topic",
            "Vault Inventory",
            "Amazon SNS",
            "inventory-retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "InitiateJobResponse",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Job Management",
            "Notification Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            ".NET API",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate and monitor an inventory retrieval job in Amazon S3 Glacier using the .NET API, including setting up notifications via Amazon SNS for job completion updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job using Amazon S3 Glacier and .NET?",
            "What is the process for monitoring the completion of an inventory retrieval job in S3 Glacier?",
            "How can I configure Amazon SNS notifications for S3 Glacier job updates?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "inventory-retrieval",
          "AmazonGlacierClient",
          "Vault Inventory",
          "Amazon SNS",
          "InitiateJobResponse",
          "Amazon S3 Glacier",
          "InitiateJob",
          "JobParameters",
          "SNS Topic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_66",
      "text": "You can also poll S3 Glacier by calling the DescribeJob method to determine job completion\nstatus. Although using Amazon SNS topic for notification is the recommended approach. 4. Download the job output (vault inventory data) by executing the GetJobOutput method. You provide your account ID, vault name, and the job ID information by creating an instance\nof the GetJobOutputRequest class. If you don't provide an account ID, then the account\nID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier. The output that S3 Glacier returns is available in the GetJobOutputResponse object. GetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nNote\nFor information about the job related underlying REST API, see Job Operations. Downloading a Vault Inventory Using .NET API Version 2012-06-01 66\n\nAmazon S3 Glacier Developer Guide\nExample: Retrieving a Vault Inventory Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example retrieves the vault inventory for the specified vault. The example performs the following tasks:\n\u2022 Set up an Amazon SNS topic.",
      "start_idx": 137503,
      "end_idx": 140212,
      "metadata": {
        "num_sentences": 11,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.255666767467152,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "DescribeJob",
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "Vault Inventory",
            "Amazon SNS",
            "AWS SDK for .NET",
            "REST API",
            "Stream"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "AWS SDK for .NET",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "Amazon SNS Integration",
            "AWS SDK for .NET"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to check the status of an S3 Glacier job using the DescribeJob method, download job output using the GetJobOutput method, and retrieve a vault inventory using the AWS SDK for .NET with example C# code provided.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I check the completion status of an S3 Glacier job?",
            "What is the process to download vault inventory data from S3 Glacier using .NET?",
            "How do I use the AWS SDK for .NET to retrieve a vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "GetJobOutputRequest",
          "DescribeJob",
          "Stream",
          "GetJobOutput",
          "Vault Inventory",
          "REST API",
          "Amazon SNS",
          "GetJobOutputResponse",
          "Amazon S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_67",
      "text": "S3 Glacier sends notification to this topic after it completes the job. \u2022 Set up an Amazon SQS queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages. \u2022 Initiate a job to download the specified archive. In the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job. \u2022 Periodically check the Amazon SQS queue for a message. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.",
      "start_idx": 140213,
      "end_idx": 140760,
      "metadata": {
        "num_sentences": 8,
        "num_words": 100,
        "breakpoint_idx": 712,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3355942113058908,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Workflow",
              "Integration"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Amazon SNS topic",
            "Amazon SQS queue",
            "job request",
            "archive download",
            "policy",
            "JSON parsing",
            "message notification",
            "job completion",
            "Amazon SQS"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Messaging",
          "secondary_categories": [
            "Job Processing",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to set up an Amazon SQS queue and an Amazon SNS topic to receive notifications from S3 Glacier after completing a job, and how to process the notification to download an archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up an Amazon SQS queue to work with Amazon SNS for S3 Glacier notifications?",
            "How can I check if a job in S3 Glacier completed successfully?",
            "What steps are involved in downloading an archive from S3 Glacier after job completion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Messaging]",
        "tf_idf_keywords": [
          "archive download",
          "message notification",
          "S3 Glacier",
          "policy",
          "JSON parsing",
          "archive",
          "job completion",
          "JSON",
          "Amazon SQS",
          "job request",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Amazon SQS queue",
          "Amazon SNS topic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_68",
      "text": "The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON. \u2022 Clean up by deleting the Amazon SNS topic and the Amazon SQS queue it created. Example\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 67\n\nAmazon S3 Glacier Developer Guide\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultInventoryJobLowLevelUsingSNSSQS\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string fileName = \"*** Provide file name and path where to store inventory\n***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"AWS\\\" : \\\"arn:aws:iam::123456789012:root\\\" },\"\n+\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QuernArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue. \");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 68\n\nAmazon S3 Glacier Developer Guide\nConsole.WriteLine(\"Retrieve Inventory List\");\nGetVaultInventory(client);\n}\nConsole.WriteLine(\"Operations successful. \");\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue. snsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nlong ticks = DateTime.Now.Ticks;\n// Setup SNS topic. snsClient = new\nAmazonSimpleNotificationServiceClient(Amazon.RegionEndpoint.USWest2);\nsqsClient = new AmazonSQSClient(Amazon.RegionEndpoint.USWest2);\ntopicArn = snsClient.CreateTopic(new CreateTopicRequest { Name =\n\"GlacierDownload-\" + ticks }).TopicArn;\nConsole.Write(\"topicArn: \"); Console.WriteLine(topicArn);\nCreateQueueRequest createQueueRequest = new CreateQueueRequest();\ncreateQueueRequest.QueueName = \"GlacierDownload-\" + ticks;\nCreateQueueResponse createQueueResponse =\nsqsClient.CreateQueue(createQueueRequest);\nqueueUrl = createQueueResponse.QueueUrl;\nConsole.Write(\"QueueURL: \"); Console.WriteLine(queueUrl);\nGetQueueAttributesRequest getQueueAttributesRequest = new\nGetQueueAttributesRequest();\ngetQueueAttributesRequest.AttributeNames = new List<string> { \"QueueArn\" };\ngetQueueAttributesRequest.QueueUrl = queueUrl;\nGetQueueAttributesResponse response =\nsqsClient.GetQueueAttributes(getQueueAttributesRequest);\nqueueArn = response.QueueARN;\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 69\n\nAmazon S3 Glacier Developer Guide\nConsole.Write(\"QueueArn: \");Console.WriteLine(queueArn);\n// Setup the Amazon SNS topic to publish to the SQS queue. snsClient.Subscribe(new SubscribeRequest()\n{\nProtocol = \"sqs\",\nEndpoint = queueArn,\nTopicArn = topicArn\n});\n// Add the policy to the queue so SNS can send messages to the queue. var policy = SQS_POLICY.Replace(\"{TopicArn}\", topicArn).Replace(\"{QuernArn}\",\nqueueArn);\nsqsClient.SetQueueAttributes(new SetQueueAttributesRequest()\n{\nQueueUrl = queueUrl,\nAttributes = new Dictionary<string, string>\n{\n{ QueueAttributeName.Policy, policy }\n}\n});\n}\nstatic void GetVaultInventory(AmazonGlacierClient client)\n{\n// Initiate job. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"inventory-retrieval\",\nDescription = \"This job is to download a vault inventory. \",\nSNSTopic = topicArn,\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n// Check queue for a message and if job completed successfully, download\ninventory. Downloading a Vault Inventory Using .NET API Version 2012-06-01 70\n\nAmazon S3 Glacier Developer Guide\nProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest()\n{ QueueUrl = queueUrl, MaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n} else if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the inventory. \");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 71\n\nAmazon S3 Glacier Developer Guide\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading a Vault Inventory Using the REST API\nTo download a vault inventory using the REST API\nDownloading a vault inventory is a two-step process. 1.",
      "start_idx": 140761,
      "end_idx": 147780,
      "metadata": {
        "num_sentences": 15,
        "num_words": 760,
        "breakpoint_idx": 727,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3834020705450149,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Inventory",
            "SNS topic",
            "SQS queue",
            "JSON.NET",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "JobParameters",
            "GetJobOutputRequest",
            "SetQueueAttributesRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Message Queuing",
            "Notification Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "JSON.NET",
            ".NET API",
            "Amazon SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a .NET code example for downloading a vault inventory from Amazon S3 Glacier using the Amazon SDKs, including setting up Amazon SNS topics and SQS queues, initiating jobs, and processing job outputs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download a vault inventory using Amazon S3 Glacier and .NET?",
            "What is the process for setting up Amazon SNS and SQS for inventory retrieval?",
            "How can I handle job completion and download the output in this example?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "SQS queue",
          "SNS topic",
          "GetJobOutputRequest",
          "AmazonGlacierClient",
          "Vault Inventory",
          "JSON.NET",
          "Amazon SQS",
          "Amazon SNS",
          "Amazon.RegionEndpoint.USWest2",
          "Amazon S3 Glacier",
          "JobParameters",
          "SetQueueAttributesRequest"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_69",
      "text": "Initiate a job of the inventory-retrieval type. For more information, see Initiate Job\n(POST jobs). 2. After the job completes, download the inventory data.",
      "start_idx": 147781,
      "end_idx": 147937,
      "metadata": {
        "num_sentences": 4,
        "num_words": 24,
        "breakpoint_idx": 731,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25172245502471924,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Step-by-step"
            ]
          },
          "keywords": [
            "job",
            "inventory-retrieval",
            "Initiate Job",
            "POST",
            "download",
            "inventory data"
          ],
          "entities": [
            "inventory-retrieval",
            "Initiate Job",
            "POST jobs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Inventory Management",
          "secondary_categories": [
            "Job Processing",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Initiate Job (POST jobs)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "Describes the process to initiate an inventory-retrieval job and download the inventory data after job completion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory-retrieval job?",
            "What should I do after the inventory-retrieval job completes?",
            "Where can I find more information about initiating jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Inventory Management]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "Initiate Job",
          "POST",
          "inventory data",
          "download",
          "Initiate Job (POST jobs)",
          "job",
          "POST jobs"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_70",
      "text": "For more information, see Get Job\nOutput (GET output). Downloading a Vault Inventory Using REST API Version 2012-06-01 72\n\nAmazon S3 Glacier Developer Guide\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nFollow these steps to download a vault inventory in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Downloading a Vault Inventory Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 73\n\nAmazon S3 Glacier Developer Guide\nExample: Downloading a Vault Inventory Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2.",
      "start_idx": 147938,
      "end_idx": 151743,
      "metadata": {
        "num_sentences": 14,
        "num_words": 264,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3663281032017299,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Command Usage",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault inventory",
            "initiate-job",
            "list-vaults",
            "inventory-retrieval",
            "AWS account ID",
            "job-parameters",
            "configure list",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS CLI",
            "Vault Inventory",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Command Line Interface (AWS CLI)",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download a vault inventory from Amazon S3 Glacier using the AWS Command Line Interface (CLI), including setup prerequisites and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI to work with Amazon S3 Glacier?",
            "What command is used to initiate an inventory retrieval job in S3 Glacier?",
            "How can I verify my AWS CLI configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Command Line Interface (AWS CLI)]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "vault inventory",
          "S3 Glacier",
          "configure list",
          "AWS CLI",
          "list-vaults",
          "Vault Inventory",
          "REST API",
          "AWS account ID",
          "API Version 2012-06-01",
          "initiate-job",
          "Amazon S3 Glacier",
          "AWS Command Line Interface",
          "job-parameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_71",
      "text": "Use the describe-job command to check status of the previous retrieval job. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. The job ID does not expire\nfor at least 24 hours after S3 Glacier completes the job. If you have either set a notification\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 74\n\nAmazon S3 Glacier Developer Guide\nconfiguration on the vault, or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set the notification configuration for specific events on the vault. For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a\nmessage to the specified SNS topic anytime the specific events occur. 4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nConfiguring Vault Notifications in Amazon S3 Glacier\nRetrieving anything from Amazon S3 Glacier, such as an archive from a vault or a vault inventory, is\na two-step process. 1.",
      "start_idx": 147938,
      "end_idx": 151743,
      "metadata": {
        "num_sentences": 14,
        "num_words": 288,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29116284716260304,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Job Status",
              "File Retrieval",
              "Notification Configuration"
            ]
          },
          "keywords": [
            "aws glacier",
            "describe-job",
            "get-job-output",
            "vault inventory",
            "Amazon SNS",
            "InventoryRetrieval",
            "VaultARN",
            "ArchiveList",
            "JobId",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "VaultARN",
            "InventoryRetrievalParameters"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "Vault Notifications",
            "Job Output Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI to check the status of an S3 Glacier retrieval job, wait for its completion, and download the job output. It also describes setting up vault notifications using Amazon SNS for job status updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I check the status of an S3 Glacier retrieval job using AWS CLI?",
            "How can I download the output of a completed S3 Glacier retrieval job?",
            "What is the purpose of configuring vault notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "vault inventory",
          "InventoryRetrieval",
          "S3 Glacier",
          "get-job-output",
          "AWS CLI",
          "VaultARN",
          "JobId",
          "Amazon SNS",
          "InventoryRetrievalParameters",
          "ArchiveList",
          "Amazon S3 Glacier",
          "describe-job",
          "aws glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_72",
      "text": "Initiate a retrieval job. 2. After the job is completed, download the job output. Configuring Vault Notifications API Version 2012-06-01 75\n\nAmazon S3 Glacier Developer Guide\nYou can set a notification configuration on a vault so that when a job is completed, a message is\nsent to an Amazon Simple Notification Service (Amazon SNS) topic. Topics\n\u2022 Configuring Vault Notifications in S3 Glacier: General Concepts\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Configuring Vault Notifications in S3 Glacier Using the REST API\n\u2022 Configuring Vault Notifications by Using the S3 Glacier Console\n\u2022 Configuring Vault Notifications Using the AWS Command Line Interface\nConfiguring Vault Notifications in S3 Glacier: General Concepts\nA S3 Glacier retrieval job request is run asynchronously. You must wait until S3 Glacier completes\nthe job before you can get its output. You can periodically poll S3 Glacier to determine the job\nstatus, but that is not an optimal approach. S3 Glacier also supports notifications. When a job\nis completed, the job can post a message to an Amazon Simple Notification Service (Amazon\nSNS) topic. Using this feature requires you to set a notification configuration on the vault. In the\nconfiguration, you identify one or more events and an Amazon SNS topic to which you want S3\nGlacier to send a message when the event occurs.",
      "start_idx": 151744,
      "end_idx": 155347,
      "metadata": {
        "num_sentences": 11,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34215972206809303,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification Setup"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "retrieval job",
            "Amazon SNS",
            "notification configuration",
            "vault",
            "AWS SDK",
            "REST API",
            "AWS CLI",
            "asynchronous",
            "job status"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "S3 Glacier Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Notifications Configuration",
          "secondary_categories": [
            "Amazon S3 Glacier Operations",
            "Amazon SNS Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier to send messages to an Amazon SNS topic when a retrieval job is completed. It outlines general concepts and various methods for setting up notifications using SDKs, REST API, console, and CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What methods are available to set up S3 Glacier notifications?",
            "How does S3 Glacier notify me when a retrieval job is completed?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Notifications Configuration]",
        "tf_idf_keywords": [
          "notification configuration",
          "asynchronous",
          "S3 Glacier",
          "AWS CLI",
          "AWS SDK",
          "vault",
          "REST API",
          "AWS SDK for .NET",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "S3 Glacier Console",
          "Amazon Simple Notification Service",
          "AWS SDK for Java",
          "job status",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_73",
      "text": "S3 Glacier defines events specifically related to job completion (ArchiveRetrievalCompleted,\nInventoryRetrievalCompleted) that you can add to the vault's notification configuration. When a specific job is completed, S3 Glacier publishes a notification message to the SNS topic. The notification configuration is a JSON document as shown in the following example. {\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nYou can configure only one Amazon SNS topic for a vault. General Concepts API Version 2012-06-01 76\n\nAmazon S3 Glacier Developer Guide\nNote\nAdding a notification configuration to a vault causes S3 Glacier to send a notification each\ntime the event specified in the notification configuration occurs. You can also optionally\nspecify an Amazon SNS topic in each job initiation request. If you add both the notification\nconfiguration on the vault and also specify an Amazon SNS topic in your initiate job\nrequest, S3 Glacier sends both notifications. The job completion message S3 Glacier sends include information such as the type of job\n(InventoryRetrieval, ArchiveRetrieval), job completion status, SNS topic name, job status\ncode, and the vault ARN. The following is an example notification S3 Glacier sent to an SNS topic\nafter an InventoryRetrieval job is completed. {\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2012-06-12T22:20:40.790Z\",\n\"CreationDate\": \"2012-06-12T22:20:36.814Z\",\n\"InventorySizeInBytes\":11693,\n\"JobDescription\": \"my retrieval job\",\n\"JobId\":\"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"SHA256TreeHash\":null,\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\":\"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nIf the Completed field is true, you must also check the StatusCode to check if the job completed\nsuccessfully or failed. Note\nThe Amazon SNS topic must allow the vault to publish a notification.",
      "start_idx": 151744,
      "end_idx": 155347,
      "metadata": {
        "num_sentences": 11,
        "num_words": 256,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5319095958362926,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "notification configuration",
            "SNS topic",
            "InventoryRetrieval",
            "ArchiveRetrieval",
            "VaultARN",
            "JobId",
            "StatusCode",
            "SHA256TreeHash",
            "Amazon SNS"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon SNS",
            "VaultARN",
            "JobId",
            "StatusCode"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Notification Configuration",
          "secondary_categories": [
            "Job Completion Events",
            "Amazon SNS Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "S3 Glacier allows configuring notifications for job completion events, such as ArchiveRetrievalCompleted and InventoryRetrievalCompleted, by linking a vault to an Amazon SNS topic. Notifications provide details about job status, type, and associated metadata upon completion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an Amazon SNS topic for S3 Glacier job completion notifications?",
            "What information is included in an S3 Glacier job completion notification?",
            "Can I specify multiple Amazon SNS topics for a single S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Notification Configuration]",
        "tf_idf_keywords": [
          "ArchiveRetrieval",
          "notification configuration",
          "InventoryRetrieval",
          "S3 Glacier",
          "SNS topic",
          "StatusCode",
          "SHA256TreeHash",
          "VaultARN",
          "JobId",
          "Amazon SNS",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_74",
      "text": "By default, only the\nAmazon SNS topic owner can publish a message to the topic. However, if the Amazon SNS\ntopic and the vault are owned by different AWS accounts, then you must configure the\nGeneral Concepts API Version 2012-06-01 77\n\nAmazon S3 Glacier Developer Guide\nAmazon SNS topic to accept publications from the vault. You can configure the Amazon\nSNS topic policy in the Amazon SNS console. For more information about Amazon SNS, see Getting Started with Amazon SNS. Configuring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 155348,
      "end_idx": 156216,
      "metadata": {
        "num_sentences": 9,
        "num_words": 147,
        "breakpoint_idx": 790,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3492574691772461,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Integration"
            ]
          },
          "keywords": [
            "Amazon SNS",
            "Amazon S3 Glacier",
            "vault notifications",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "AWS Region",
            "topic policy",
            "low-level API",
            "message publication",
            "notifications"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Notifications Configuration",
          "secondary_categories": [
            "AWS SDK for Java",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This section explains how to configure Amazon SNS topic policies to accept publications from an Amazon S3 Glacier vault owned by a different AWS account, and provides steps to set up vault notifications using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an Amazon SNS topic to accept publications from an Amazon S3 Glacier vault?",
            "What are the steps to set up vault notifications using the AWS SDK for Java?",
            "How do I specify the AWS Region for an AmazonGlacierClient instance?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Notifications Configuration]",
        "tf_idf_keywords": [
          "topic policy",
          "low-level API",
          "AWS Region",
          "AmazonGlacierClient",
          "vault notifications",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "message publication",
          "AWS SDK for Java",
          "notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_75",
      "text": "2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class. You need to provide the vault name, notification configuration information, and account ID. In\nspecifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)). 3. Run the setVaultNotifications method by providing the request object as a parameter. The following Java code snippet illustrates the preceding steps.",
      "start_idx": 156217,
      "end_idx": 156863,
      "metadata": {
        "num_sentences": 8,
        "num_words": 91,
        "breakpoint_idx": 798,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.21326259204319545,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification"
            ]
          },
          "keywords": [
            "SetVaultNotificationsRequest",
            "vault name",
            "notification configuration",
            "account ID",
            "Amazon Resource Name",
            "Amazon SNS topic",
            "events",
            "Set Vault Notification Configuration",
            "PUT notification-configuration",
            "setVaultNotifications"
          ],
          "entities": [
            "SetVaultNotificationsRequest",
            "Amazon SNS topic",
            "Amazon Resource Name (ARN)",
            "Set Vault Notification Configuration",
            "setVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Notification Configuration",
          "secondary_categories": [
            "Amazon SNS",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "This section explains how to configure notifications for a vault by using the SetVaultNotificationsRequest class and the setVaultNotifications method in Java, including specifying an Amazon SNS topic and event types.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure notifications for a vault using Java?",
            "What information is required to set up vault notifications?",
            "Which events can trigger notifications in the vault configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Notification Configuration]",
        "tf_idf_keywords": [
          "notification configuration",
          "vault name",
          "Amazon Resource Name",
          "events",
          "setVaultNotifications",
          "SetVaultNotificationsRequest",
          "Set Vault Notification Configuration",
          "Amazon Resource Name (ARN)",
          "Amazon SNS",
          "PUT notification-configuration",
          "account ID",
          "Amazon SNS topic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_76",
      "text": "The snippet sets a notification\nconfiguration on a vault. The configuration requests Amazon S3 Glacier (S3 Glacier) to send a\nnotification to the specified Amazon SNS topic when either the ArchiveRetrievalCompleted\nevent or the InventoryRetrievalCompleted event occurs. SetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n.withAccountId(\"-\")\n.withVaultName(\"*** provide vault name ***\")\n.withVaultNotificationConfig(\nnew VaultNotificationConfig()\n.withSNSTopic(\"*** provide SNS topic ARN ***\")\n.withEvents(\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\")\nConfiguring Vault Notifications Using Java API Version 2012-06-01 78\n\nAmazon S3 Glacier Developer Guide\n);\nclient.setVaultNotifications(request);\nNote\nFor information about the underlying REST API, see Vault Operations. Example: Setting the Notification Configuration on a Vault Using the AWS SDK for\nJava\nThe following Java code example sets a vault's notifications configuration, deletes the\nconfiguration, and then restores the configuration. For step-by-step instructions on how to run the\nfollowing example, see Using the AWS SDK for Java with Amazon S3 Glacier. Example\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsResult;\nimport com.amazonaws.services.glacier.model.SetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.VaultNotificationConfig;\npublic class AmazonGlacierVaultNotifications {\npublic static AmazonGlacierClient client;\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String snsTopicARN = \"*** provide sns topic ARN ***\";\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\nConfiguring Vault Notifications Using Java API Version 2012-06-01 79\n\nAmazon S3 Glacier Developer Guide\ntry {\nSystem.out.println(\"Adding notification configuration to the vault. \");\nsetVaultNotifications();\ngetVaultNotifications();\ndeleteVaultNotifications();\n} catch (Exception e) {\nSystem.err.println(\"Vault operations failed.\" + e.getMessage());\n}\n}\nprivate static void setVaultNotifications() {\nVaultNotificationConfig config = new VaultNotificationConfig()\n.withSNSTopic(snsTopicARN)\n.withEvents(\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\");\nSetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n.withVaultName(vaultName)\n.withVaultNotificationConfig(config);\nclient.setVaultNotifications(request);\nSystem.out.println(\"Notification configured for vault: \" + vaultName);\n}\nprivate static void getVaultNotifications() {\nVaultNotificationConfig notificationConfig = null;\nGetVaultNotificationsRequest request = new GetVaultNotificationsRequest()\n.withVaultName(vaultName);\nGetVaultNotificationsResult result = client.getVaultNotifications(request);\nnotificationConfig = result.getVaultNotificationConfig();\nSystem.out.println(\"Notifications configuration for vault: \"\n+ vaultName);\nSystem.out.println(\"Topic: \" + notificationConfig.getSNSTopic());\nSystem.out.println(\"Events: \" + notificationConfig.getEvents());\n}\nprivate static void deleteVaultNotifications() {\nDeleteVaultNotificationsRequest request = new\nDeleteVaultNotificationsRequest()\n.withVaultName(vaultName);\nclient.deleteVaultNotifications(request);\nConfiguring Vault Notifications Using Java API Version 2012-06-01 80\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Notifications configuration deleted for vault: \" +\nvaultName);\n}\n}\nConfiguring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for .NET. 1.",
      "start_idx": 156864,
      "end_idx": 160948,
      "metadata": {
        "num_sentences": 9,
        "num_words": 379,
        "breakpoint_idx": 807,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3688052495320638,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "SNS Topic",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "SetVaultNotificationsRequest",
            "VaultNotificationConfig",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "SNS Topic ARN",
            "VaultNotificationConfig",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Vault Notifications"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure, retrieve, and delete notification settings for an Amazon S3 Glacier vault using the AWS SDK for Java. It includes code examples and step-by-step instructions for setting up notifications for specific events, such as ArchiveRetrievalCompleted and InventoryRetrievalCompleted.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure notifications for an Amazon S3 Glacier vault using Java?",
            "What are the steps to retrieve and delete vault notification settings in AWS Glacier?",
            "Which events can trigger notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "VaultNotificationConfig",
          "SetVaultNotificationsRequest",
          "AmazonGlacierClient",
          "SNS Topic ARN",
          "REST API",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "ArchiveRetrievalCompleted",
          "AWS SDK for Java",
          "SNS Topic",
          "Vault Notifications",
          "InventoryRetrievalCompleted"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_77",
      "text": "Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 160949,
      "end_idx": 161144,
      "metadata": {
        "num_sentences": 3,
        "num_words": 32,
        "breakpoint_idx": 810,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.41779907544453937,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "AWS Region",
            "vault",
            "client",
            "operations"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Regions"
          ],
          "mentioned_services": [
            "Amazon Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "Describes how to create an instance of the AmazonGlacierClient class and specifies that operations are region-specific.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an instance of the AmazonGlacierClient class?",
            "Why do I need to specify an AWS Region when creating the client?",
            "Do operations performed by the AmazonGlacierClient apply to a specific AWS Region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK]",
        "tf_idf_keywords": [
          "AWS Region",
          "AmazonGlacierClient",
          "vault",
          "operations",
          "client",
          "Amazon Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_78",
      "text": "2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class. You need to provide the vault name, notification configuration information, and account ID. If\nyou don't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier. In specifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)). 3. Run the SetVaultNotifications method by providing the request object as a parameter. 4. After setting notification configuration on a vault, you can retrieve configuration\ninformation by calling the GetVaultNotifications method, and remove it by calling the\nDeleteVaultNotifications method provided by the client. Example: Setting the Notification Configuration on a Vault Using the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example sets the\nnotification configuration on the vault (\"examplevault\") in the US West (Oregon) Region,\nretrieves the configuration, and then deletes it.",
      "start_idx": 161145,
      "end_idx": 166505,
      "metadata": {
        "num_sentences": 13,
        "num_words": 195,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2709196041791867,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "SDK Usage"
            ]
          },
          "keywords": [
            "SetVaultNotificationsRequest",
            "vault name",
            "notification configuration",
            "account ID",
            "Amazon SNS topic",
            "events",
            "SetVaultNotifications",
            "GetVaultNotifications",
            "DeleteVaultNotifications",
            "AWS SDK for .NET"
          ],
          "entities": [
            "SetVaultNotificationsRequest",
            "Amazon S3 Glacier",
            "Amazon SNS",
            "US West (Oregon) Region",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure, retrieve, and delete notification settings for an Amazon S3 Glacier vault using the AWS SDK for .NET, including specifying an SNS topic and supported events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure notifications for an Amazon S3 Glacier vault using the AWS SDK for .NET?",
            "What methods are used to retrieve or delete vault notification configurations?",
            "What information is required to set up a vault notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "notification configuration",
          "vault name",
          "events",
          "US West (Oregon) Region",
          "examplevault",
          "SetVaultNotifications",
          "SetVaultNotificationsRequest",
          "GetVaultNotifications",
          "AWS SDK for .NET",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "account ID",
          "Amazon SNS topic",
          "DeleteVaultNotifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_79",
      "text": "The configuration requests Amazon S3\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 81\n\nAmazon S3 Glacier Developer Guide\nGlacier (S3 Glacier) to send a notification to the specified Amazon SNS topic when either the\nArchiveRetrievalCompleted event or the InventoryRetrievalCompleted event occurs. Note\nFor information about the underlying REST API, see Vault Operations. For step-by-step instructions to run the following example, see Running Code Examples. You need\nto update the code as shown and provide an existing vault name and an Amazon SNS topic. Example\nusing System;\nusing System.Collections.Generic;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultNotificationSetGetDelete\n{\nstatic string vaultName = \"examplevault\";\nstatic string snsTopicARN = \"*** Provide Amazon SNS topic ARN ***\";\nstatic IAmazonGlacier client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Adding notification configuration to the vault. \");\nSetVaultNotificationConfig();\nGetVaultNotificationConfig();\nConsole.WriteLine(\"To delete vault notification configuration, press Enter\");\nConsole.ReadKey();\nDeleteVaultNotificationConfig();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 82\n\nAmazon S3 Glacier Developer Guide\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void SetVaultNotificationConfig()\n{\nSetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n{\nVaultName = vaultName,\nVaultNotificationConfig = new VaultNotificationConfig()\n{\nEvents = new List<string>() { \"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\" },\nSNSTopic = snsTopicARN\n}\n};\nSetVaultNotificationsResponse response = client.SetVaultNotifications(request);\n}\nstatic void GetVaultNotificationConfig()\n{\nGetVaultNotificationsRequest request = new GetVaultNotificationsRequest()\n{\nVaultName = vaultName,\nAccountId = \"-\"\n};\nGetVaultNotificationsResponse response = client.GetVaultNotifications(request);\nConsole.WriteLine(\"SNS Topic ARN: {0}\",\nresponse.VaultNotificationConfig.SNSTopic);\nforeach (string s in response.VaultNotificationConfig.Events)\nConsole.WriteLine(\"Event : {0}\", s);\n}\nstatic void DeleteVaultNotificationConfig()\n{\nDeleteVaultNotificationsRequest request = new DeleteVaultNotificationsRequest()\n{\nVaultName = vaultName\n};\nDeleteVaultNotificationsResponse response =\nclient.DeleteVaultNotifications(request);\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 83\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\nConfiguring Vault Notifications in S3 Glacier Using the REST API\nTo configure vault notifications using the REST API, see Set Vault Notification Configuration\n(PUT notification-configuration). Additionally, you can also get vault notifications (Get Vault\nNotifications (GET notification-configuration)) and delete vault notifications (Delete Vault\nNotifications (DELETE notification-configuration)). Configuring Vault Notifications by Using the S3 Glacier Console\nThis section describes how to configure vault notifications by using the Amazon S3 Glacier console. When you configure notifications, you specify job-completion events that send a notification to an\nAmazon Simple Notification Service (Amazon SNS) topic. In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notifications to when you initiate a job. If your\nvault is configured to send a notification for a specific event and you also configure notifications in\nthe job-initiation request, then two notifications are sent. To configure a vault notification\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 161145,
      "end_idx": 166505,
      "metadata": {
        "num_sentences": 14,
        "num_words": 463,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38805020510495364,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "Amazon SNS",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "SetVaultNotificationsRequest",
            "Glacier",
            "REST API",
            "AmazonGlacierClient",
            "notification-configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "VaultNotificationConfig",
            "AmazonGlacierClient",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Vault Notifications Configuration",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Amazon SNS Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            ".NET API",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 Glacier vault notifications using the .NET API, REST API, and S3 Glacier Console, including setting, retrieving, and deleting notification configurations for job-completion events sent to Amazon SNS topics.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using the .NET API?",
            "What are the steps to set, get, and delete vault notification configurations in S3 Glacier?",
            "How can I use the S3 Glacier console to configure notifications for job-completion events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Notifications Configuration]",
        "tf_idf_keywords": [
          "VaultNotificationConfig",
          "SetVaultNotificationsRequest",
          "AmazonGlacierClient",
          "notification-configuration",
          "REST API",
          "Amazon SNS",
          "Glacier",
          "Amazon S3 Glacier",
          "ArchiveRetrievalCompleted",
          "AWS Management Console",
          "Vault Notifications",
          "InventoryRetrievalCompleted"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_80",
      "text": "In the left navigation pane, choose Vaults. 3. In the Vaults list, choose a vault. 4. In the Notifications section, choose Edit. 5. On the Event notifications page, choose Turn on notifications.",
      "start_idx": 166506,
      "end_idx": 166700,
      "metadata": {
        "num_sentences": 7,
        "num_words": 32,
        "breakpoint_idx": 844,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.255086308433896,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step"
            ]
          },
          "keywords": [
            "Vaults",
            "Notifications",
            "Event notifications",
            "Turn on notifications",
            "Edit"
          ],
          "entities": [
            "Vaults",
            "Notifications section",
            "Event notifications page"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Event Notifications",
          "secondary_categories": [
            "Vault Management",
            "User Interface Navigation"
          ],
          "mentioned_services": [
            "Vaults"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide explains how to enable event notifications for a selected vault in the navigation pane.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I enable event notifications for a vault?",
            "Where can I find the option to edit notifications for a vault?",
            "What steps are required to turn on notifications in the Vaults section?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Event Notifications]",
        "tf_idf_keywords": [
          "Notifications",
          "Edit",
          "Event notifications",
          "Vaults",
          "Notifications section",
          "Turn on notifications",
          "Event notifications page"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_81",
      "text": "6. In the Notifications section, choose one of the following Amazon Simple Notification Service\n(Amazon SNS) options, and then follow the corresponding steps:\nAmazon SNS options Action\nCreate new SNS topic\n1. Choose Create new SNS topic. 2.",
      "start_idx": 166701,
      "end_idx": 166941,
      "metadata": {
        "num_sentences": 4,
        "num_words": 38,
        "breakpoint_idx": 848,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25997241338094074,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification Setup"
            ]
          },
          "keywords": [
            "Amazon SNS",
            "Notifications",
            "SNS topic",
            "Create new SNS topic",
            "Amazon Simple Notification Service"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon Simple Notification Service"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Notification Management",
          "secondary_categories": [
            "Cloud Services",
            "Messaging Systems"
          ],
          "mentioned_services": [
            "Amazon Simple Notification Service (Amazon SNS)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section provides instructions for selecting and configuring Amazon SNS options, including creating a new SNS topic.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a new Amazon SNS topic?",
            "What are the available options in the Notifications section for Amazon SNS?",
            "What steps should I follow to configure a new SNS topic?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Notification Management]",
        "tf_idf_keywords": [
          "Notifications",
          "SNS topic",
          "Amazon Simple Notification Service (Amazon SNS)",
          "Amazon SNS",
          "Amazon Simple Notification Service",
          "Create new SNS topic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_82",
      "text": "For Topic name, enter the name of the new topic. Configuring Vault Notifications Using the REST API API Version 2012-06-01 84\n\nAmazon S3 Glacier Developer Guide\nAmazon SNS options Action\nTopic names can be up to 256 characters. Alphanumeric characters, hyphens (-), and und\nerscores (_) are allowed. Topic names must be\nunique within the account and AWS Region. 3. (Optional) If you want to subscribe to the topic by\nusing SMS messages, enter a name for Display\nname. A display name can have up to 100 characters. Choose an existing SNS topic\n1. Choose Choose an existing SNS topic. 2.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 101,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23390577104356552,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Instruction"
            ]
          },
          "keywords": [
            "Topic name",
            "Vault Notifications",
            "REST API",
            "Amazon S3 Glacier",
            "Amazon SNS",
            "API Version 2012-06-01",
            "Display name",
            "AWS Region",
            "SMS messages",
            "SNS topic"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notifications",
            "REST API",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SNS Configuration",
          "secondary_categories": [
            "AWS S3 Glacier",
            "REST API Integration"
          ],
          "mentioned_services": [
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon SNS topics for Vault Notifications using the REST API, including naming conventions and optional SMS subscription setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the naming conventions for Amazon SNS topics?",
            "How can I subscribe to an SNS topic using SMS messages?",
            "What is the maximum character limit for an SNS topic display name?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SNS Configuration]",
        "tf_idf_keywords": [
          "AWS Region",
          "SMS messages",
          "SNS topic",
          "REST API",
          "API Version 2012-06-01",
          "Amazon SNS",
          "Topic name",
          "Amazon S3 Glacier",
          "Display name",
          "Vault Notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_83",
      "text": "Under Specify SNS topic, choose one of the fol\nlowing options:\n\u2022\nChoose from your SNS topics\nAn SNS topic dropdown list appears. Choose an existing topic from the dropdown\nlist. \u2022\nEnter SNS topic ARN\nAn Amazon SNS topic ARN text box appears. Enter the Amazon Resource Name (ARN) for\nyour SNS topic. An SNS topic ARN has the\nfollowing format:\narn:aws:sns: region:account-i\nd :topic-name\nYou can find the SNS topic ARN in the Amazon\nSNS console. Configuring Vault Notifications by Using the Console API Version 2012-06-01 85\n\nAmazon S3 Glacier Developer Guide\n7. Under Events, select one or both events that you want to send notifications:\n\u2022 To send a notification only when archive retrieval jobs are complete, select Archive Retrieval\nJob Complete. \u2022 To send a notification only when vault inventory jobs are complete, select Vault Inventory\nRetrieval Job Complete. Configuring Vault Notifications Using the AWS Command Line Interface\nThis section describes how to configure vault notifications using the AWS Command Line Interface. When you configure notifications, you specify job completion events that trigger notification to an\nAmazon Simple Notification Service (Amazon SNS) topic.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 187,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32314588758680557,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification"
            ]
          },
          "keywords": [
            "SNS topic",
            "Amazon SNS",
            "ARN",
            "Vault Notifications",
            "AWS CLI",
            "Archive Retrieval Job",
            "Vault Inventory Retrieval Job",
            "Amazon S3 Glacier",
            "Console API",
            "Event triggers"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "ARN",
            "Vault Notifications"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Notifications Configuration",
          "secondary_categories": [
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the console and AWS CLI, including specifying SNS topics and selecting job completion events for notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I specify an SNS topic for vault notifications in Amazon S3 Glacier?",
            "What format does an SNS topic ARN follow?",
            "How can I configure vault notifications using the AWS Command Line Interface?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Notifications Configuration]",
        "tf_idf_keywords": [
          "Archive Retrieval Job",
          "SNS topic",
          "AWS CLI",
          "Vault Inventory Retrieval Job",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Event triggers",
          "Console API",
          "AWS Command Line Interface",
          "ARN",
          "Vault Notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_84",
      "text": "In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notification to when you initiate a job. If your\nvault is configured to notify for a specific event and you specify notification in the job initiation\nrequest, then two notifications are sent. Follow these steps to configure vault notification using the AWS CLI. Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Configure Vault Notifications Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\nConfiguring Vault Notifications Using the CLI API Version 2012-06-01 86\n\nAmazon S3 Glacier Developer Guide\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39136823018391925,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "vault",
            "notifications",
            "AWS CLI",
            "job initiation",
            "topic",
            "S3 Glacier",
            "list-vaults",
            "credentials",
            "command prompt",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "Amazon S3 Glacier Developer Guide",
            "API Version 2012-06-01",
            "list-vaults command"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Configuration",
          "secondary_categories": [
            "Vault Notifications",
            "S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the AWS CLI, including prerequisites such as setting up and verifying the AWS CLI installation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications using the AWS CLI?",
            "What are the prerequisites for setting up the AWS CLI?",
            "How can I verify my AWS CLI setup?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Configuration]",
        "tf_idf_keywords": [
          "job initiation",
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "AWS CLI",
          "command prompt",
          "list-vaults",
          "vault",
          "credentials",
          "API Version 2012-06-01",
          "list-vaults command",
          "Amazon S3 Glacier",
          "notifications",
          "topic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_85",
      "text": "Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Configure Vault Notifications Using the AWS CLI\n1. Use the set-vault-notifications command to configure notifications that will be sent\nwhen specific events happen to a vault. By default, you don't get any notifications. aws glacier set-vault-notifications --vault-name examplevault --account-\nid 111122223333 --vault-notification-config file://notificationconfig.json\n2. The notification configuration is a JSON document as shown in the following example. {\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nFor more information about using Amazon SNS topics for S3 Glacier see, Configuring Vault\nNotifications in S3 Glacier: General Concepts\nFor more information about Amazon SNS, see Getting Started with Amazon SNS. Deleting a Vault in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) deletes a vault only if there are no archives in the vault as of the\nlast inventory it computed and there have been no writes to the vault since the last inventory. For\ninformation about deleting archives, see Deleting an Archive in Amazon S3 Glacier.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.386848153008355,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault notifications",
            "set-vault-notifications",
            "SNS topic",
            "JSON document",
            "list-vaults",
            "inventory",
            "archives",
            "deleting vault"
          ],
          "entities": [
            "AWS",
            "S3 Glacier",
            "Amazon SNS",
            "account ID",
            "notification configuration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "AWS S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on configuring vault notifications, listing vaults, and deleting a vault in Amazon S3 Glacier using the AWS CLI. It includes examples of commands and JSON configurations for notifications and references to related topics.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using the AWS CLI?",
            "What is the JSON format for setting up vault notifications in S3 Glacier?",
            "What are the conditions for deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "archives",
          "notification configuration",
          "S3 Glacier",
          "SNS topic",
          "JSON document",
          "AWS CLI",
          "AWS",
          "vault notifications",
          "list-vaults",
          "inventory",
          "Amazon SNS",
          "deleting vault",
          "Amazon S3 Glacier",
          "account ID",
          "set-vault-notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_86",
      "text": "For information\nabout downloading a vault inventory, Downloading a Vault Inventory in Amazon S3 Glacier. Deleting a Vault API Version 2012-06-01 87\n\nAmazon S3 Glacier Developer Guide\nNote\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. Because the\ninventory might not reflect the latest information, S3 Glacier ensures the vault is indeed\nempty by checking if there were any write operations since the last vault inventory. Topics\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting a Vault in S3 Glacier Using the REST API\n\u2022 Deleting an Empty Vault by Using the S3 Glacier Console\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nDeleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete a vault using the low-level API of the AWS SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region. 2. Provide request information by creating an instance of the DeleteVaultRequest class.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28106469048394095,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "SDK Instructions"
            ]
          },
          "keywords": [
            "vault inventory",
            "Amazon S3 Glacier",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API",
            "AWS Command Line Interface",
            "S3 Glacier Console",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "DeleteVaultRequest",
            "AWS SDK for Java",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Management in Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDK Usage",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using various methods, including SDKs, REST API, and the AWS CLI, while noting that vault inventories are updated every 24 hours and may not reflect the latest data. It also provides a step-by-step guide for using the AWS SDK for Java to delete a vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What precautions does S3 Glacier take before deleting a vault?",
            "What are the different methods for deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Management in Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "vault inventory",
          "AmazonGlacierClient",
          "REST API",
          "DeleteVaultRequest",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "S3 Glacier Console",
          "AWS SDK for Java",
          "AWS Command Line Interface",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_87",
      "text": "You need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for Java with Amazon S3 Glacier. 3. Run the deleteVault method by providing the request object as a parameter. Amazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault). The following Java code snippet illustrates the preceding steps. try {\nDeleting a Vault Using Java API Version 2012-06-01 88\n\nAmazon S3 Glacier Developer Guide\nDeleteVaultRequest request = new DeleteVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nclient.deleteVault(request);\nSystem.out.println(\"Deleted vault: \" + vaultName);\n} catch (Exception e) {\nSystem.err.println(e.getMessage());\n}\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault). Example: Deleting a Vault Using the AWS SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27433976067437066,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "vault name",
            "account ID",
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "deleteVault method",
            "DeleteVaultRequest",
            "REST API",
            "DELETE vault",
            "Java code snippet",
            "request object"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteVaultRequest",
            "deleteVault",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This section explains how to delete a vault in Amazon S3 Glacier using the AWS SDK for Java, including the required parameters and a sample Java code snippet.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What happens if I don't provide an account ID when deleting a vault?",
            "What are the prerequisites for deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "vault name",
          "Java code snippet",
          "deleteVault",
          "request object",
          "REST API",
          "deleteVault method",
          "DeleteVaultRequest",
          "DELETE vault",
          "Amazon S3 Glacier",
          "account ID",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_88",
      "text": "The Java\ncode example shows basic vault operations including create and delete vault. Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete a vault. Topics\n\u2022 Deleting a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nDeleting a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteVault method\nyou can use to delete a vault. Example: Deleting a Vault Using the High-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the High-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault. Deleting a Vault Using .NET API Version 2012-06-01 89\n\nAmazon S3 Glacier Developer Guide\nDeleting a Vault Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps to delete a vault using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 231,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4149469163682726,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "High-Level API",
              "Low-Level API",
              "SDK Operations"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "DeleteVault",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "vault operations",
            "AWS Region",
            "high-level API",
            "low-level API",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Operations in AWS S3 Glacier",
          "secondary_categories": [
            "High-Level API Usage",
            "Low-Level API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform basic vault operations, such as creating and deleting a vault, using both high-level and low-level APIs of the AWS SDK for .NET in Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault using the high-level API of the AWS SDK for .NET?",
            "What are the steps to delete a vault using the low-level API of the AWS SDK for .NET?",
            "What class and method are used to delete a vault with the high-level API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Operations in AWS S3 Glacier]",
        "tf_idf_keywords": [
          "low-level API",
          "AWS Region",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "vault operations",
          "API Version 2012-06-01",
          "high-level API",
          "Amazon S3 Glacier",
          "DeleteVault",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_89",
      "text": "2. Provide request information by creating an instance of the DeleteVaultRequest class. You need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier. 3. Run the DeleteVault method by providing the request object as a parameter. Amazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault). The following C# code snippet illustrates the preceding steps.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 101,
        "chunk_type": "semantic_split",
        "coherence_score": 0.20631720225016276,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Code Integration"
            ]
          },
          "keywords": [
            "DeleteVaultRequest",
            "vault name",
            "account ID",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "DeleteVault method",
            "request object",
            "C# code snippet",
            "DELETE vault",
            "empty vault"
          ],
          "entities": [
            "DeleteVaultRequest class",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "DeleteVault method",
            "DELETE vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK for .NET",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using the AWS SDK for .NET by creating a DeleteVaultRequest instance and running the DeleteVault method, ensuring the vault is empty beforehand.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What happens if the vault is not empty when attempting to delete it in S3 Glacier?",
            "What account ID is used if I don't provide one in the DeleteVaultRequest?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "vault name",
          "empty vault",
          "C# code snippet",
          "request object",
          "DeleteVault method",
          "DeleteVaultRequest class",
          "DeleteVaultRequest",
          "DELETE vault",
          "Amazon S3 Glacier",
          "account ID",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_90",
      "text": "The snippet retrieves metadata\ninformation of a vault that exists in the default AWS Region. AmazonGlacier client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = \"*** provide vault name ***\"\n};\nDeleteVaultResponse response = client.DeleteVault(request);\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault). Deleting a Vault Using .NET API Version 2012-06-01 90\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault. Deleting a Vault in S3 Glacier Using the REST API\nTo delete a vault using the REST API, see Delete Vault (DELETE vault). Deleting an Empty Vault by Using the S3 Glacier Console\nNote\nBefore deleting a vault, you must delete all existing archives within the vault. You can do\nthis by writing code to make a delete archive request by using either the REST API, the AWS\nSDK for Java, the AWS SDK for .NET, or by using the AWS Command Line Interface (AWS\nCLI). For information about deleting archives, see Step 5: Delete an Archive from a Vault in\nS3 Glacier. After your vault is empty, you can delete it by using the following steps. To delete an empty vault by using the Amazon S3 Glacier console\n1. Sign into the AWS Management Console and open the S3 Glacier console at S3 Glacier\nConsole. 2. Under Select a Region, choose the AWS Region where the vault exists. 3.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 14,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40783179985297907,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "AWS Region",
            "AmazonGlacier",
            "DeleteVaultRequest",
            "DeleteVaultResponse",
            "REST API",
            "S3 Glacier",
            "AWS SDK for .NET",
            "vault operations",
            "delete archive",
            "AWS CLI"
          ],
          "entities": [
            "AmazonGlacierClient",
            "DeleteVaultRequest",
            "AWS SDK for .NET",
            "S3 Glacier Console",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Vault Management in AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for .NET",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using various methods, including the AWS SDK for .NET, REST API, and the AWS Management Console, while noting the prerequisite of deleting all archives within the vault first.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What steps are required to delete an empty vault using the S3 Glacier console?",
            "What prerequisites must be met before deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Management in AWS S3 Glacier]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Region",
          "AWS Management Console",
          "AWS CLI",
          "AmazonGlacierClient",
          "delete archive",
          "AWS SDK for .NET",
          "REST API",
          "DeleteVaultRequest",
          "vault operations",
          "Amazon S3 Glacier",
          "S3 Glacier Console",
          "AmazonGlacier",
          "DeleteVaultResponse"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_91",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, select the option button next to the name of the vault that you want to\ndelete, and then choose Delete at the top of the page. 5. In the Delete vault dialog box, confirm that you want to delete the vault by choosing Delete. Important\nDeleting a vault can't be undone. 6. To verify that you've deleted the vault, open the Vaults list and enter the name of the vault\nthat you deleted. If the vault can't be found, your deletion was successful. Deleting a Vault Using REST API Version 2012-06-01 91\n\nAmazon S3 Glacier Developer Guide\nDeleting a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nYou can delete empty and nonempty vaults in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Empty Vault Using the AWS CLI\n\u2022 Example: Deleting a Nonempty Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1.",
      "start_idx": 177080,
      "end_idx": 179511,
      "metadata": {
        "num_sentences": 11,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3451347004283558,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Warning"
            ]
          },
          "keywords": [
            "Vaults",
            "Delete",
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "Vault deletion",
            "Command Line Interface",
            "Empty vault",
            "Nonempty vault",
            "2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vaults",
            "AWS CLI",
            "REST API",
            "Delete vault dialog box"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Management",
          "secondary_categories": [
            "AWS Command Line Interface",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete vaults in Amazon S3 Glacier using the web interface, REST API, and AWS CLI, including steps for setup and examples for empty and nonempty vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using the web interface?",
            "What steps are required to delete a vault using the AWS CLI?",
            "How can I confirm that a vault has been successfully deleted?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Management]",
        "tf_idf_keywords": [
          "2012-06-01",
          "AWS CLI",
          "Vault deletion",
          "Delete vault dialog box",
          "Vaults",
          "Command Line Interface",
          "REST API",
          "Empty vault",
          "Amazon S3 Glacier",
          "Delete",
          "Nonempty vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_92",
      "text": "Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 92\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting an Empty Vault Using the AWS CLI\n\u2022 Use the delete-vault command to delete a vault that contains no archives. \u2022\naws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nExample: Deleting a Nonempty Vault Using the AWS CLI\nS3 Glacier deletes a vault only if there are no archives in the vault as of the last inventory\nit computed, and there have been no writes to the vault since the last inventory. Deleting a\nnonempty vault is a three-step process: retrieving archive IDs from a vault's inventory report,\ndeleting each archive, and then deleting the vault. 1.",
      "start_idx": 177080,
      "end_idx": 179511,
      "metadata": {
        "num_sentences": 12,
        "num_words": 233,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3311671054724491,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Verification",
              "Deletion"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "delete-vault",
            "list-vaults",
            "configure",
            "inventory",
            "archives",
            "account ID",
            "command prompt"
          ],
          "entities": [
            "AWS Command Line Interface",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "aws glacier",
            "aws configure"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Command Line Interface (CLI)",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for configuring and verifying the AWS CLI, listing S3 Glacier vaults, and deleting empty or nonempty vaults using specific commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I install and configure the AWS CLI?",
            "What commands can I use to list S3 Glacier vaults?",
            "How can I delete a nonempty S3 Glacier vault using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Command Line Interface (CLI)]",
        "tf_idf_keywords": [
          "archives",
          "S3 Glacier",
          "AWS CLI",
          "configure",
          "aws configure",
          "command prompt",
          "list-vaults",
          "vault",
          "inventory",
          "API Version 2012-06-01",
          "delete-vault",
          "Amazon S3 Glacier",
          "account ID",
          "AWS Command Line Interface",
          "aws glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_93",
      "text": "Use the initiate-job command to start an inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 93\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.",
      "start_idx": 179512,
      "end_idx": 183394,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3274059295654297,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Job Management",
              "Notification Configuration"
            ]
          },
          "keywords": [
            "inventory retrieval",
            "aws glacier",
            "initiate-job",
            "describe-job",
            "vault",
            "SNS topic",
            "JobId",
            "VaultARN",
            "job status",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SNS topic",
            "VaultARN",
            "JobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "Job Management",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate and monitor an inventory retrieval job in Amazon S3 Glacier using the AWS CLI, and describes how to set up notifications for job completion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I start an inventory retrieval job in Amazon S3 Glacier using the AWS CLI?",
            "How can I check the status of an inventory retrieval job in Amazon S3 Glacier?",
            "What happens when a job in Amazon S3 Glacier is completed?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "notification configuration",
          "SNS topic",
          "AWS CLI",
          "VaultARN",
          "JobId",
          "vault",
          "initiate-job",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "describe-job",
          "aws glacier",
          "job status"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_94",
      "text": "4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 94\n\nAmazon S3 Glacier Developer Guide\n5. Use the delete-archive command to delete each archive from a vault until none remain. aws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nNote\nIf your Archive ID starts with a hyphen or another special character you will need to put\nit in quotes in order to run this command. 6. Use the initiate-job command to start a new inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\n7. When it's complete, use the delete-vault command to delete a vault with no archives.",
      "start_idx": 179512,
      "end_idx": 183394,
      "metadata": {
        "num_sentences": 10,
        "num_words": 179,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29593285454644097,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Glacier",
            "get-job-output",
            "delete-archive",
            "initiate-job",
            "delete-vault",
            "vault",
            "archive",
            "inventory-retrieval",
            "job-parameters"
          ],
          "entities": [
            "awsexamplevault",
            "account-id 111122223333",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "Cloud Storage Management",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve job outputs, delete archives, and delete a vault using AWS CLI commands for Amazon S3 Glacier. It includes specific commands and considerations for handling special characters in Archive IDs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download a retrieval job output using AWS CLI for Amazon S3 Glacier?",
            "What is the process for deleting all archives from a vault in Amazon S3 Glacier?",
            "How do I delete a vault with no archives in Amazon S3 Glacier using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "get-job-output",
          "archive",
          "AWS CLI",
          "account-id 111122223333",
          "VaultARN",
          "SHA256TreeHash",
          "vault",
          "initiate-job",
          "delete-archive",
          "Glacier",
          "delete-vault",
          "Amazon S3 Glacier",
          "awsexamplevault",
          "job-parameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_95",
      "text": "aws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nTagging Your S3 Glacier Vaults\nYou can assign your own metadata to Amazon S3 Glacier vaults in the form of tags. A tag is a key-\nvalue pair that you define for a vault. For basic information about tagging, including restrictions on\ntags, see Tagging Amazon S3 Glacier Resources. The following topics describe how you can add, list, and remove tags for vaults. Topics\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier Console\n\u2022 Tagging Vaults by Using the AWS CLI\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier API\n\u2022 Related Sections\nTagging Vaults API Version 2012-06-01 95\n\nAmazon S3 Glacier Developer Guide\nTagging Vaults by Using the Amazon S3 Glacier Console\nYou can add, list, and remove tags using the S3 Glacier console, as described in the following\nprocedures. To view the tags for a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 179512,
      "end_idx": 183394,
      "metadata": {
        "num_sentences": 10,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3214568667941623,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Tagging",
              "Vault Management",
              "AWS CLI",
              "API Usage",
              "Console Usage"
            ]
          },
          "keywords": [
            "AWS Glacier",
            "delete-vault",
            "S3 Glacier",
            "tags",
            "vaults",
            "metadata",
            "key-value pair",
            "AWS CLI",
            "API Version",
            "Region selector"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "AWS Region",
            "Tagging Vaults",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Tagging",
          "secondary_categories": [
            "AWS CLI",
            "Amazon S3 Glacier API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon S3 Glacier Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage tags for Amazon S3 Glacier vaults using the AWS Management Console, CLI, and API. It includes steps for adding, listing, and removing tags, along with links to related resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add, list, or remove tags for an Amazon S3 Glacier vault?",
            "What are the steps to view tags for a vault in the S3 Glacier console?",
            "Where can I find information about tagging restrictions for S3 Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Tagging]",
        "tf_idf_keywords": [
          "Tagging Vaults",
          "S3 Glacier",
          "metadata",
          "key-value pair",
          "Region selector",
          "AWS CLI",
          "AWS Region",
          "tags",
          "AWS Glacier",
          "API Version 2012-06-01",
          "delete-vault",
          "Amazon S3 Glacier",
          "vaults",
          "AWS Management Console",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_96",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose a vault. 5. Choose the Vaults properties tab. Scroll to the Tags section to view the tags associated with\nthe vault. To add a tag to a vault\nYou can associate up to 50 tags to a vault. Tags that are associated with a vault must have unique\ntag keys. For more information about tag restrictions, see Tagging Amazon S3 Glacier Resources. 1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 183395,
      "end_idx": 184002,
      "metadata": {
        "num_sentences": 14,
        "num_words": 106,
        "breakpoint_idx": 1009,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2722005948915586,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step Instructions",
              "Configuration Guidance"
            ]
          },
          "keywords": [
            "Vaults",
            "Tags",
            "AWS Management Console",
            "S3 Glacier",
            "Region selector",
            "Tag keys",
            "Tag restrictions",
            "Vault properties",
            "Amazon S3 Glacier Resources",
            "AWS Region"
          ],
          "entities": [
            "Vaults",
            "AWS Management Console",
            "S3 Glacier",
            "Amazon S3 Glacier Resources",
            "Region selector"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Tagging Resources",
            "AWS Console Navigation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view and add tags to a vault in Amazon S3 Glacier using the AWS Management Console, including tag restrictions and region selection.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I view tags associated with a vault in Amazon S3 Glacier?",
            "What are the restrictions for tagging a vault in Amazon S3 Glacier?",
            "How can I add tags to a vault in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Region",
          "Vault properties",
          "Tag restrictions",
          "Tag keys",
          "Vaults",
          "Amazon S3 Glacier Resources",
          "Tags",
          "Amazon S3 Glacier",
          "Region selector",
          "AWS Management Console"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_97",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose the name of the vault that you want to add tags to. 5. Choose the Vault properties tab. 6. In the Tags section, choose Add. The Add tags page appears. 7. On the Add tags page, specify the tag key in the Key field, and optionally specify a tag value\nin the Value field. 8.",
      "start_idx": 184003,
      "end_idx": 184348,
      "metadata": {
        "num_sentences": 11,
        "num_words": 68,
        "breakpoint_idx": 1020,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3240986217151989,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "User Interface Interaction"
            ]
          },
          "keywords": [
            "Vaults",
            "Tags",
            "Vault properties",
            "Key field",
            "Value field",
            "Add tags",
            "Navigation pane"
          ],
          "entities": [
            "Vaults",
            "Tags section",
            "Add tags page",
            "Key field",
            "Value field"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tag Management",
          "secondary_categories": [
            "Cloud Storage",
            "Resource Management"
          ],
          "mentioned_services": [
            "Vaults"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to add tags to a vault by navigating through the Vault properties tab and specifying a tag key and optional value on the Add tags page.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to a vault?",
            "Where can I find the Add tags option in the vault settings?",
            "What fields do I need to fill out when adding a tag to a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Tag Management]",
        "tf_idf_keywords": [
          "Tags section",
          "Vault properties",
          "Vaults",
          "Tags",
          "Add tags page",
          "Key field",
          "Add tags",
          "Navigation pane",
          "Value field"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_98",
      "text": "Choose Save changes. Tagging Vaults by Using the Amazon S3 Glacier Console API Version 2012-06-01 96\n\nAmazon S3 Glacier Developer Guide\nTo edit a tag\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 184349,
      "end_idx": 184696,
      "metadata": {
        "num_sentences": 6,
        "num_words": 56,
        "breakpoint_idx": 1026,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1976705551147461,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Step-by-step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "tagging",
            "AWS Management Console",
            "AWS Region",
            "edit tag",
            "S3 Glacier console",
            "Region selector",
            "Save changes",
            "API Version 2012-06-01",
            "Developer Guide"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "AWS Region",
            "S3 Glacier console",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Management Console",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Tagging and Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to edit tags for Amazon S3 Glacier vaults using the AWS Management Console, including selecting a region and accessing the Glacier console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I edit a tag for an Amazon S3 Glacier vault?",
            "Where do I find the Region selector in the AWS Management Console?",
            "What steps are required to access the S3 Glacier console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Management Console]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "AWS Region",
          "S3 Glacier console",
          "Save changes",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "tagging",
          "Region selector",
          "Developer Guide",
          "edit tag"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_99",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose a vault name. 5. Choose the Vault properties tab, and then scroll down to the Tags section. 6. Under Tags, select the check box next to the tags that you want to change, then choose Edit. The Edit tags page appears. 7. Update the tag key in the Key field, and optionally update the tag value in the Value field. 8.",
      "start_idx": 184697,
      "end_idx": 185085,
      "metadata": {
        "num_sentences": 11,
        "num_words": 74,
        "breakpoint_idx": 1037,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2932796131480824,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "User Interface Interaction"
            ]
          },
          "keywords": [
            "Vaults",
            "Vault properties",
            "Tags",
            "Edit tags",
            "Key field",
            "Value field",
            "check box",
            "navigation pane",
            "update",
            "Vaults list"
          ],
          "entities": [
            "Vaults",
            "Tags section",
            "Edit tags page",
            "Key field",
            "Value field"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tag Management",
          "secondary_categories": [
            "Vault Configuration",
            "Resource Management"
          ],
          "mentioned_services": [
            "Vaults"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to edit tags for a vault by navigating through the Vault properties tab and updating the tag key and value fields.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I edit tags for a vault?",
            "Where can I find the Tags section in the Vault properties?",
            "What fields can I update when editing a tag?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Tag Management]",
        "tf_idf_keywords": [
          "Tags section",
          "Vault properties",
          "Edit tags page",
          "Vaults list",
          "Vaults",
          "Edit tags",
          "Tags",
          "navigation pane",
          "check box",
          "Key field",
          "update",
          "Value field"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_100",
      "text": "Choose Save changes. To remove a tag from a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 185086,
      "end_idx": 185333,
      "metadata": {
        "num_sentences": 6,
        "num_words": 41,
        "breakpoint_idx": 1043,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.15249964396158855,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instruction"
            ]
          },
          "keywords": [
            "Save changes",
            "vault",
            "tag",
            "AWS Management Console",
            "S3 Glacier",
            "Region selector",
            "AWS Region"
          ],
          "entities": [
            "AWS Management Console",
            "S3 Glacier",
            "Region selector"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Console Usage",
            "Tag Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to save changes and remove a tag from an S3 Glacier vault using the AWS Management Console.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I remove a tag from an S3 Glacier vault?",
            "How can I select a specific AWS Region in the S3 Glacier console?",
            "What steps are required to save changes in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Region",
          "vault",
          "Save changes",
          "Amazon S3 Glacier",
          "Region selector",
          "AWS Management Console",
          "tag"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_101",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose the name of the vault that you want to remove tags from. 5. Choose the Vault properties tab. Scroll down to the Tags section.",
      "start_idx": 185334,
      "end_idx": 185533,
      "metadata": {
        "num_sentences": 6,
        "num_words": 37,
        "breakpoint_idx": 1049,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28024543126424156,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Navigation",
              "Configuration"
            ]
          },
          "keywords": [
            "Vaults",
            "Tags",
            "Vault properties",
            "Navigation pane",
            "Vaults list"
          ],
          "entities": [
            "Vaults",
            "Tags",
            "Vault properties"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Tag Management",
            "User Interface Navigation"
          ],
          "mentioned_services": [
            "Vaults"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This text provides instructions on navigating to a specific vault and accessing its properties to manage tags in the AWS interface.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I navigate to the Vault properties tab in AWS?",
            "Where can I find the Tags section for a specific vault?",
            "How can I remove tags from a vault in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Vault properties",
          "Vaults list",
          "Vaults",
          "Tags",
          "Navigation pane"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_102",
      "text": "6. Under Tags, select the check box next to the tags that you want to remove, then choose\nDelete. 7. The Delete tags dialog box opens. To confirm that you want to delete the selected tags,\nchoose Delete. Tagging Vaults by Using the AWS CLI\nFollow these steps to add, list, or remove tags by using the AWS Command Line Interface (AWS\nCLI). Each tag is composed of a key and a value. Each vault can have up to 50 tags. 1. To add tags to a vault, use the add-tags-to-vault command.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 92,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30171271430121527,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "CLI Instructions"
            ]
          },
          "keywords": [
            "Tags",
            "AWS CLI",
            "Vaults",
            "Delete",
            "Add-tags-to-vault",
            "Command Line Interface",
            "Key",
            "Value",
            "Tagging",
            "Dialog Box"
          ],
          "entities": [
            "AWS CLI",
            "Delete tags dialog box",
            "Vaults",
            "add-tags-to-vault command"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tagging",
          "secondary_categories": [
            "AWS CLI Usage",
            "Vault Management"
          ],
          "mentioned_services": [
            "AWS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This section explains how to manage tags for AWS Vaults, including adding, listing, and removing tags using the AWS CLI. It also highlights the limit of 50 tags per vault and provides instructions for deleting tags via the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete tags from a vault using the AWS Management Console?",
            "What is the maximum number of tags allowed per AWS Vault?",
            "How can I add tags to a vault using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Tagging]",
        "tf_idf_keywords": [
          "Value",
          "AWS CLI",
          "Tagging",
          "AWS",
          "Vaults",
          "Command Line Interface",
          "Add-tags-to-vault",
          "Key",
          "Tags",
          "Delete tags dialog box",
          "Delete",
          "add-tags-to-vault command",
          "Dialog Box"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_103",
      "text": "Tagging Vaults by Using the AWS CLI API Version 2012-06-01 97\n\nAmazon S3 Glacier Developer Guide\naws glacier add-tags-to-vault --vault-name examplevault --account-id 111122223333\n--tags id=1234,date=2020\nFor more information on this vault operation, see Add Tags To Vault . 2. To list all the tags attached to a vault, use the list-tags-for-vault command. aws glacier list-tags-for-vault --vault-name examplevault --account-id 111122223333\nFor more information on this vault operation, see List Tags For Vault. 3. To remove one or more tags from the set of tags attached to a vault, use the remove-tags-\nfrom-vault command. aws glacier remove-tags-from-vault --vault-name examplevault --account-\nid 111122223333 --tag-keys date\nFor more information on this vault operation, see Remove Tags From Vault. Tagging Vaults by Using the Amazon S3 Glacier API\nYou can add, list, and remove tags by using the S3 Glacier API. For examples, see the following\ndocumentation:\nAdd Tags To Vault (POST tags add)\nAdds or updates tags for the specified vault. List Tags For Vault (GET tags)\nLists the tags for the specified vault.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4836990780300564,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Line Usage",
              "API Operations"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Glacier",
            "vault",
            "tags",
            "add-tags-to-vault",
            "list-tags-for-vault",
            "remove-tags-from-vault",
            "API",
            "Amazon S3 Glacier",
            "tag-keys"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "examplevault",
            "111122223333",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Vault Tagging",
          "secondary_categories": [
            "AWS CLI Operations",
            "API Operations for Vault Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage tags for Amazon S3 Glacier vaults using the AWS CLI and API, including adding, listing, and removing tags. It provides specific commands and references for each operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 Glacier vault using the AWS CLI?",
            "What command lists all tags attached to a specific vault?",
            "How do I remove a tag from an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Vault Tagging]",
        "tf_idf_keywords": [
          "tag-keys",
          "list-tags-for-vault",
          "examplevault",
          "AWS CLI",
          "remove-tags-from-vault",
          "tags",
          "111122223333",
          "vault",
          "API Version 2012-06-01",
          "API",
          "Glacier",
          "Amazon S3 Glacier",
          "add-tags-to-vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_104",
      "text": "Remove Tags From Vault (POST tags remove)\nRemoves tags from the specified vault. Related Sections\n\u2022 Tagging Amazon S3 Glacier Resources\nTagging Vaults by Using the Amazon S3 Glacier API API Version 2012-06-01 98\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Vault Lock\nThe following topics describe how to lock a vault in Amazon S3 Glacier and how to use Vault Lock\npolicies. Topics\n\u2022 Vault Locking Overview\n\u2022 Locking a Vault by Using the S3 Glacier API\n\u2022 Locking a Vault using the AWS Command Line Interface\n\u2022 Locking a Vault by Using the S3 Glacier Console\nVault Locking Overview\nS3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a Vault Lock policy. You can specify controls such as \"write once read\nmany\" (WORM) in a Vault Lock policy and lock the policy from future edits. Important\nAfter a Vault Lock policy is locked, the policy can no longer be changed or deleted. S3 Glacier enforces the controls set in the Vault Lock policy to help achieve your compliance\nobjectives. For example, you can use Vault Lock policies to enforce data retention. You can deploy\na variety of compliance controls in a Vault Lock policy by using the AWS Identity and Access\nManagement (IAM) policy language. For more information about Vault Lock policies, see Vault Lock\nPolicies. A Vault Lock policy is different from a vault access policy.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 239,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5477564917670356,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Tagging",
              "Vault Locking",
              "Compliance"
            ]
          },
          "keywords": [
            "Vault Lock",
            "S3 Glacier",
            "Vault Lock policy",
            "WORM",
            "IAM policy language",
            "data retention",
            "AWS Command Line Interface",
            "Vault access policy",
            "Tagging",
            "Amazon S3 Glacier API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS Identity and Access Management",
            "Vault Lock policy",
            "S3 Glacier Vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Management",
          "secondary_categories": [
            "Tagging",
            "Compliance Controls"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface",
            "S3 Glacier API",
            "S3 Glacier Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to remove tags from an Amazon S3 Glacier vault and provides an overview of Vault Lock policies, which enforce compliance controls like WORM and data retention using IAM policy language.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I remove tags from an Amazon S3 Glacier vault?",
            "What is the purpose of a Vault Lock policy in S3 Glacier?",
            "How can Vault Lock policies help enforce compliance controls?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Management]",
        "tf_idf_keywords": [
          "AWS Identity and Access Management",
          "S3 Glacier",
          "WORM",
          "S3 Glacier Vault",
          "Tagging",
          "Vault Lock",
          "IAM policy language",
          "Amazon S3 Glacier API",
          "Vault Lock policy",
          "Amazon S3 Glacier",
          "AWS Command Line Interface",
          "data retention",
          "Vault access policy"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_105",
      "text": "Both policies govern access controls to\nyour vault. However, a Vault Lock policy can be locked to prevent future changes, which provides\nstrong enforcement for your compliance controls. You can use the Vault Lock policy to deploy\nregulatory and compliance controls, which typically require tight controls on data access. Important\nWe recommend that you first create a vault, complete a Vault Lock policy, and then upload\nyour archives to the vault so that the policy will be applied to them. Vault Lock API Version 2012-06-01 99\n\nAmazon S3 Glacier Developer Guide\nIn contrast, you use a vault access policy to implement access controls that are not compliance\nrelated, temporary, and subject to frequent modification. You can use Vault lock and vault access\npolicies together. For example, you can implement time-based data-retention rules in the Vault\nLock policy (deny deletes), and grant read access to designated third parties or your business\npartners (allow reads) in your vault access policy. Locking a vault takes two steps:\n1. Initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24\nhours to validate your Vault Lock policy before the lock ID expires.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 214,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6151906331380208,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Compliance",
              "Access Control",
              "Policy Management"
            ]
          },
          "keywords": [
            "Vault Lock policy",
            "vault access policy",
            "compliance controls",
            "data access",
            "Vault Lock API",
            "time-based data-retention",
            "lock ID",
            "Amazon S3 Glacier",
            "archives",
            "regulatory controls"
          ],
          "entities": [
            "Vault Lock",
            "Vault Lock API Version 2012-06-01",
            "Amazon S3 Glacier",
            "vault access policy",
            "lock ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "Compliance Management",
            "Data Retention"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Vault Lock API"
          ]
        },
        "semantic": {
          "summary": "The document explains the use of Vault Lock policies and vault access policies in Amazon S3 Glacier for implementing data access controls, with Vault Lock providing strong compliance enforcement and vault access policies offering flexibility for non-compliance-related access needs.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "What is the difference between a Vault Lock policy and a vault access policy?",
            "How do you lock a vault using a Vault Lock policy?",
            "What are the steps to validate a Vault Lock policy within the 24-hour in-progress state?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Control Policies]",
        "tf_idf_keywords": [
          "archives",
          "data access",
          "lock ID",
          "vault access policy",
          "Vault Lock",
          "Vault Lock API Version 2012-06-01",
          "Vault Lock API",
          "compliance controls",
          "regulatory controls",
          "Vault Lock policy",
          "time-based data-retention",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_106",
      "text": "To prevent your vault from\nexiting the in-progress state, you must complete the Vault Lock process within these 24 hours. Otherwise, your Vault Lock policy will be deleted. 2. Use the lock ID to complete the lock process. If the Vault Lock policy doesn't work as expected,\nyou can stop the Vault Lock process and restart from the beginning. For information about how\nto use the S3 Glacier API to lock a vault, see Locking a Vault by Using the S3 Glacier API. Locking a Vault by Using the S3 Glacier API\nTo lock your vault with the Amazon S3 Glacier API, you first call Initiate Vault Lock (POST lock-\npolicy) with a Vault Lock policy that specifies the controls that you want to deploy. The Initiate\nVault Lock operation attaches the policy to your vault, transitions the Vault Lock to the in-\nprogress state, and returns a unique lock ID. After the Vault Lock enters the in-progress state, you\nhave 24 hours to complete the lock by calling Complete Vault Lock (POST lockId) with the lock ID\nthat was returned from the Initiate Vault Lock call. Important\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 219,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45116742451985675,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning"
            ]
          },
          "keywords": [
            "Vault Lock",
            "S3 Glacier API",
            "lock ID",
            "Vault Lock policy",
            "Initiate Vault Lock",
            "Complete Vault Lock",
            "in-progress state",
            "Amazon S3 Glacier",
            "POST lock-policy",
            "archives"
          ],
          "entities": [
            "Vault Lock",
            "S3 Glacier API",
            "Amazon S3 Glacier",
            "lock ID",
            "Vault Lock policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Lock Management",
          "secondary_categories": [
            "S3 Glacier API Usage",
            "Data Protection Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to lock a vault using the Amazon S3 Glacier API, including steps to initiate, complete, or restart the Vault Lock process within a 24-hour timeframe to prevent policy deletion.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I lock a vault using the Amazon S3 Glacier API?",
            "What happens if I don't complete the Vault Lock process within 24 hours?",
            "How can I restart the Vault Lock process if it doesn't work as expected?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Lock Management]",
        "tf_idf_keywords": [
          "archives",
          "Complete Vault Lock",
          "lock ID",
          "Vault Lock",
          "Initiate Vault Lock",
          "Vault Lock policy",
          "S3 Glacier API",
          "Amazon S3 Glacier",
          "POST lock-policy",
          "in-progress state"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_107",
      "text": "\u2022 After the Vault Lock policy is locked, it cannot be changed or deleted. If you don't complete the Vault Lock process within 24 hours after entering the in-progress state,\nyour vault automatically exits the in-progress state, and the Vault Lock policy is removed. You can\ncall Initiate Vault Lock again to install a new Vault Lock policy and transition into the in-\nprogress state. Vault Locking by Using the API API Version 2012-06-01 100\n\nAmazon S3 Glacier Developer Guide\nThe in-progress state provides the opportunity to test your Vault Lock policy before you lock it. Your Vault Lock policy takes full effect during the in-progress state just as if the vault has been\nlocked, except that you can remove the policy by calling Abort Vault Lock (DELETE lock-policy). To fine-tune your policy, you can repeat the Abort Vault Lock/Initiate Vault Lock\ncombination as many times as necessary to validate your Vault Lock policy changes. After you validate the Vault Lock policy, you can call Complete Vault Lock (POST lockId) with the\nmost recent lock ID to complete the vault locking process. Your vault transitions to a locked state,\nwhere the Vault Lock policy is unchangeable and can no longer be removed by calling Abort\nVault Lock. Related Sections\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault using the AWS Command Line Interface\nYou can lock your vault using the AWS Command Line Interface. This will install a vault lock policy\non the specified vault and return the lock ID. You must complete the vault locking process within\n24 hours else the vault lock policy is removed from the vault. (Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 15,
        "num_words": 347,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4438433329264323,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "Vault Lock",
            "in-progress state",
            "Abort Vault Lock",
            "Initiate Vault Lock",
            "Complete Vault Lock",
            "lock ID",
            "AWS CLI",
            "Vault Lock policy",
            "API Version 2012-06-01",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Vault Lock policy",
            "AWS Command Line Interface",
            "Amazon S3 Glacier",
            "lock ID",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Lock Management",
          "secondary_categories": [
            "AWS Command Line Interface",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of locking a vault in Amazon S3 Glacier using the Vault Lock feature, including steps for initiating, testing, aborting, and completing the Vault Lock policy, as well as using the AWS CLI for the process.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I initiate and complete the Vault Lock process in Amazon S3 Glacier?",
            "What happens if I don't complete the Vault Lock process within 24 hours?",
            "How can I use the AWS CLI to lock a vault and verify the setup?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Lock Management]",
        "tf_idf_keywords": [
          "Complete Vault Lock",
          "lock ID",
          "AWS CLI",
          "Vault Lock",
          "Initiate Vault Lock",
          "Vault Lock policy",
          "API Version 2012-06-01",
          "Abort Vault Lock",
          "Amazon S3 Glacier",
          "AWS Command Line Interface",
          "in-progress state"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_108",
      "text": "These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. Vault Locking Using the CLI API Version 2012-06-01 101\n\nAmazon S3 Glacier Developer Guide\n\u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\n1. Use the initiate-vault-lock to install a vault lock policy and sets the lock state of the\nvault lock to InProgress. aws glacier initiate-vault-lock --vault-name examplevault --account-id 111122223333\n--policy file://lockconfig.json\n2. The lock configuration is a JSON document as shown in the following example. Before using\nthis command, replace the VAULT_ARN and Principal with the appropriate values for your\nuse case. To find the ARN of the vault you wish to lock, you can use the list-vaults command. {\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-lock\n\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::111122223333:root\\\"},\n\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"VAULT_ARN\\\",\\\"Condition\\\":\n{\\\"NumericLessThanEquals\\\":{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\n3.",
      "start_idx": 193117,
      "end_idx": 196437,
      "metadata": {
        "num_sentences": 12,
        "num_words": 169,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3920040419607451,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault lock",
            "list-vaults",
            "initiate-vault-lock",
            "lock configuration",
            "JSON document",
            "ARN",
            "Principal",
            "glacier:DeleteArchive"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "Vault Lock",
            "ARN",
            "Principal"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "S3 Glacier",
            "Vault Locking"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS CLI commands for managing S3 Glacier vaults, including listing vaults, configuring the CLI, and initiating a vault lock with a JSON policy.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list all S3 Glacier vaults in my AWS account using the CLI?",
            "What is the process for initiating a vault lock in S3 Glacier?",
            "How do I configure and view the current settings of the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "JSON document",
          "AWS CLI",
          "Vault Lock",
          "Principal",
          "list-vaults",
          "vault lock",
          "lock configuration",
          "initiate-vault-lock",
          "Amazon S3 Glacier",
          "glacier:DeleteArchive",
          "ARN"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_109",
      "text": "After initiating the vault lock you should see the lockId returned. {\n\"lockId\": \"LOCK_ID\"\n}\nVault Locking Using the CLI API Version 2012-06-01 102\n\nAmazon S3 Glacier Developer Guide\nTo complete the vault lock You must run complete-vault-lock within 24 hours else the vault\nlock policy is removed from the vault. aws glacier complete-vault-lock --vault-name examplevault --account-id 111122223333 --\nlock-id LOCK_ID\nRelated Sections\n\u2022 initiate-vault-lock in the AWS CLI Command Reference\n\u2022 list-vaults in the AWS CLI Command Reference\n\u2022 complete-vault-lock in the AWS CLI Command Reference\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault by Using the S3 Glacier Console\nAmazon S3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for\nindividual S3 Glacier vaults with a Vault Lock policy. For more information about S3 Glacier Vault\nLock, see Amazon S3 Glacier Access Control with Vault Lock Policies. Important\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them. \u2022 After the Vault Lock policy is locked, it cannot be changed or deleted. To initiate a Vault Lock policy on your vault by using the S3 Glacier console\nYou initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24 hours\nto validate your Vault Lock policy before the lock ID expires. Vault Locking by Using the Console API Version 2012-06-01 103\n\nAmazon S3 Glacier Developer Guide\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 193117,
      "end_idx": 196437,
      "metadata": {
        "num_sentences": 13,
        "num_words": 323,
        "chunk_type": "semantic_split",
        "coherence_score": 0.371092038276868,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Instructions",
              "Console Instructions",
              "API References"
            ]
          },
          "keywords": [
            "vault lock",
            "lockId",
            "S3 Glacier",
            "Vault Lock policy",
            "AWS CLI",
            "complete-vault-lock",
            "initiate-vault-lock",
            "GET lock-policy",
            "POST lock-policy",
            "AWS Management Console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Vault Lock policy",
            "lockId",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Vault Lock Management",
          "secondary_categories": [
            "AWS CLI Commands",
            "S3 Glacier Compliance Controls"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Glacier Console"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to initiate, complete, and manage Vault Lock policies in Amazon S3 Glacier using both the CLI and the console. It emphasizes compliance control, time constraints, and the immutability of locked policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a Vault Lock in Amazon S3 Glacier using the CLI?",
            "What happens if I do not complete the Vault Lock within 24 hours?",
            "Can a Vault Lock policy be modified after it is locked?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Lock Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "POST lock-policy",
          "AWS CLI",
          "GET lock-policy",
          "vault lock",
          "Vault Lock policy",
          "initiate-vault-lock",
          "Amazon S3 Glacier",
          "lockId",
          "complete-vault-lock",
          "AWS Management Console"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_110",
      "text": "In the left navigation pane, choose Vaults. 4. On the Vaults page, choose Create vault. 5. Create a new vault. Important\nWe recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them. 6.",
      "start_idx": 196438,
      "end_idx": 196722,
      "metadata": {
        "num_sentences": 7,
        "num_words": 52,
        "breakpoint_idx": 1146,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3250454948061988,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Recommendation",
              "Warning"
            ]
          },
          "keywords": [
            "Vaults",
            "Create vault",
            "Vault Lock policy",
            "archives",
            "navigation pane"
          ],
          "entities": [
            "Vaults",
            "Vault Lock policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage Management",
          "secondary_categories": [
            "Access Control",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Vaults",
            "Vault Lock"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section provides instructions on creating a new vault, emphasizes completing a Vault Lock policy, and uploading archives to ensure the policy is applied.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a new vault?",
            "What is the recommended process for applying a Vault Lock policy?",
            "When should I upload archives to a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage Management]",
        "tf_idf_keywords": [
          "archives",
          "Vault Lock",
          "Vaults",
          "Vault Lock policy",
          "navigation pane",
          "Create vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_111",
      "text": "Choose your new vault from the Vaults list. 7. Choose the Vault policies tab. 8. In the Vault Lock policy section, choose Initiate Vault Lock policy. 9. On the Initiate Vault Lock policy page, specify the record retention controls in your Vault Lock\npolicy in text format in the standard text box. Note\nYou can specify the record retention controls in a Vault Lock policy in text format\nand initiate the Vault Lock by calling the Initiate Vault Lock API operation or\nthrough the interactive UI in the S3 Glacier console. For information about formatting\nyour Vault Lock policy, see Amazon S3 Glacier Vault Lock Policy Examples. 10.",
      "start_idx": 196723,
      "end_idx": 197354,
      "metadata": {
        "num_sentences": 10,
        "num_words": 108,
        "breakpoint_idx": 1156,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3205615997314453,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "UI Interaction"
            ]
          },
          "keywords": [
            "Vault",
            "Vault Lock policy",
            "record retention controls",
            "Initiate Vault Lock API",
            "S3 Glacier console",
            "Vault policies",
            "Vault Lock",
            "Amazon S3 Glacier",
            "Vault Lock policy examples",
            "Initiate Vault Lock"
          ],
          "entities": [
            "Vaults list",
            "Vault Lock policy",
            "S3 Glacier console",
            "Amazon S3 Glacier",
            "Initiate Vault Lock API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retention Management",
          "secondary_categories": [
            "Cloud Storage",
            "Access Control Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Initiate Vault Lock API"
          ]
        },
        "semantic": {
          "summary": "This section explains how to initiate a Vault Lock policy in Amazon S3 Glacier by specifying record retention controls either through the API or the S3 Glacier console interface.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a Vault Lock policy in Amazon S3 Glacier?",
            "What are the steps for specifying record retention controls in a Vault Lock policy?",
            "Where can I find examples of Amazon S3 Glacier Vault Lock policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retention Management]",
        "tf_idf_keywords": [
          "Vault Lock policy examples",
          "Initiate Vault Lock API",
          "S3 Glacier console",
          "Vault policies",
          "Vaults list",
          "Vault Lock",
          "Initiate Vault Lock",
          "Vault",
          "Vault Lock policy",
          "Amazon S3 Glacier",
          "record retention controls"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_112",
      "text": "Choose Save changes. 11. In the Record Vault Lock ID dialog box, copy your Lock ID and save it in a safe place. Important\nAfter the Vault Lock policy has been initiated, you have 24 hours to validate the policy\nand complete the lock process. To complete the lock process, you must provide the\nlock ID. If it's not provided within 24 hours, the lock ID expires and your in-progress\npolicy is deleted. 12.",
      "start_idx": 197355,
      "end_idx": 197758,
      "metadata": {
        "num_sentences": 7,
        "num_words": 74,
        "breakpoint_idx": 1163,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.24844987051827566,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Warning"
            ]
          },
          "keywords": [
            "Vault Lock",
            "Lock ID",
            "policy",
            "validate",
            "expire",
            "Record Vault",
            "save",
            "24 hours",
            "lock process",
            "deleted"
          ],
          "entities": [
            "Vault Lock",
            "Lock ID",
            "Record Vault Lock ID dialog box"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Security",
          "secondary_categories": [
            "Access Management",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Record Vault"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to save the Lock ID during the Vault Lock process and emphasizes the importance of completing the lock process within 24 hours to avoid policy expiration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I save the Lock ID during the Vault Lock process?",
            "What happens if I don't provide the Lock ID within 24 hours?",
            "How can I validate and complete the Vault Lock policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Security]",
        "tf_idf_keywords": [
          "expire",
          "policy",
          "Vault Lock",
          "validate",
          "save",
          "deleted",
          "24 hours",
          "Record Vault Lock ID dialog box",
          "Lock ID",
          "Record Vault",
          "lock process"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_113",
      "text": "After saving your lock ID in a safe place, choose Close. Vault Locking by Using the Console API Version 2012-06-01 104\n\nAmazon S3 Glacier Developer Guide\n13. Test your Vault Lock policy within the next 24 hours. If the policy is working as intended,\nchoose Complete Vault Lock policy. 14. In the Complete Vault Lock dialog box, select the check box to acknowledge that completing\nthe Vault Lock policy process is irreversible. 15.",
      "start_idx": 197759,
      "end_idx": 198189,
      "metadata": {
        "num_sentences": 7,
        "num_words": 73,
        "breakpoint_idx": 1170,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3226220721290225,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "Vault Lock",
            "policy",
            "Amazon S3 Glacier",
            "Console API",
            "Complete Vault Lock",
            "Vault Locking",
            "lock ID",
            "irreversible",
            "dialog box",
            "test"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock policy",
            "Console API Version 2012-06-01",
            "Complete Vault Lock dialog box",
            "Vault Lock ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Lock Configuration",
          "secondary_categories": [
            "Policy Management",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Console API"
          ]
        },
        "semantic": {
          "summary": "This section provides instructions for saving a lock ID, testing a Vault Lock policy, and completing the Vault Lock process using the Amazon S3 Glacier Console API. It emphasizes that completing the Vault Lock process is irreversible.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I save and test a Vault Lock policy in Amazon S3 Glacier?",
            "What steps are involved in completing the Vault Lock process?",
            "Is the Vault Lock process reversible?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Lock Configuration]",
        "tf_idf_keywords": [
          "irreversible",
          "Vault Locking",
          "policy",
          "Complete Vault Lock",
          "lock ID",
          "Vault Lock",
          "Vault Lock ID",
          "test",
          "Vault Lock policy",
          "Console API Version 2012-06-01",
          "Complete Vault Lock dialog box",
          "Amazon S3 Glacier",
          "Console API",
          "dialog box"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_114",
      "text": "Enter your provided Lock ID in the text box. 16. Choose Complete Vault Lock. Vault Locking by Using the Console API Version 2012-06-01 105\n\nAmazon S3 Glacier Developer Guide\nWorking with Archives in Amazon S3 Glacier\nAn archive is any object, such as a photo, video, or document, that you store in a vault. It is a base\nunit of storage in Amazon S3 Glacier (S3 Glacier). Each archive has a unique ID and an optional\ndescription. When you upload an archive, S3 Glacier returns a response that includes an archive\nID. This archive ID is unique in the AWS Region in which the archive is stored. The following is an\nexample archive ID. TJgHcrOSfAkV6hdPqOATYfp_0ZaxL1pIBOc02iZ0gDPMr2ig-\nnhwd_PafstsdIf6HSrjHnP-3p6LCJClYytFT_CBhT9CwNxbRaM5MetS3I-\nGqwxI3Y8QtgbJbhEQPs0mJ3KExample\nArchive IDs are 138 bytes long.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 123,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29239281548394097,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "Lock ID",
            "Vault Lock",
            "S3 Glacier",
            "archive",
            "AWS Region",
            "archive ID",
            "storage",
            "console API",
            "vault",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "archive ID",
            "AWS Region",
            "console API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Console API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information on working with archives in Amazon S3 Glacier, including how to store objects in a vault, the uniqueness of archive IDs, and an example of an archive ID format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is an archive in Amazon S3 Glacier?",
            "How are archive IDs generated and what makes them unique?",
            "What is the format and length of an archive ID in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Region",
          "archive",
          "console API",
          "console API Version 2012-06-01",
          "Vault Lock",
          "archive ID",
          "storage",
          "vault",
          "Lock ID",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_115",
      "text": "When you upload an archive, you can provide an optional\ndescription. You can retrieve an archive using its ID but not its description. Important\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface. Topics\n\u2022 Archive Operations in Amazon S3 Glacier\n\u2022 Maintaining Client-Side Archive Metadata\n\u2022 Uploading an Archive in Amazon S3 Glacier\n\u2022 Downloading an Archive in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nAPI Version 2012-06-01 106\n\nAmazon S3 Glacier Developer Guide\nArchive Operations in Amazon S3 Glacier\nS3 Glacier supports the following basic archive operations: upload, download, and delete. Downloading an archive is an asynchronous operation.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31274460686577693,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "vaults",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "management console",
            "upload",
            "download",
            "asynchronous operation"
          ],
          "entities": [
            "S3 Glacier",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Archive Operations",
          "secondary_categories": [
            "AWS Command Line Interface (CLI)",
            "Amazon S3 Glacier API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to manage archives in Amazon S3 Glacier, including uploading, downloading, and deleting archives, primarily using the AWS CLI or SDKs. It also highlights the use of the management console for vault operations and provides references for further information.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier?",
            "What tools are required to interact with Amazon S3 Glacier beyond the management console?",
            "Where can I find the AWS CLI Reference for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Archive Operations]",
        "tf_idf_keywords": [
          "asynchronous operation",
          "S3 Glacier",
          "management console",
          "archive",
          "upload",
          "AWS CLI",
          "REST API",
          "API Version 2012-06-01",
          "download",
          "Amazon S3 Glacier",
          "vaults",
          "Amazon SDKs"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_116",
      "text": "Uploading an Archive in Amazon S3 Glacier\nYou can upload an archive in a single operation or upload it in parts. The API call you use to upload\nan archive in parts is referred as Multipart Upload. For more information, see Uploading an Archive\nin Amazon S3 Glacier. Important\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface. Finding an Archive ID in Amazon S3 Glacier\nYou can get the archive ID by downloading the vault inventory for the vault that contains the\narchive.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4131844414605035,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "AWS CLI",
            "vault",
            "archive ID",
            "REST API",
            "Amazon SDKs",
            "vault inventory",
            "management console",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "vault inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage",
          "secondary_categories": [
            "Cloud Computing",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface",
            "Amazon SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier, either in a single operation or using Multipart Upload, and highlights the need to use AWS CLI or code for most interactions. It also describes how to find an archive ID by downloading the vault inventory.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier?",
            "What tools are required to interact with Amazon S3 Glacier beyond creating and deleting vaults?",
            "How do I find an archive ID in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage]",
        "tf_idf_keywords": [
          "vault inventory",
          "management console",
          "archive",
          "AWS CLI",
          "archive ID",
          "vault",
          "REST API",
          "Amazon S3 Glacier",
          "Multipart Upload",
          "Amazon SDKs"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_117",
      "text": "For more information about downloading the vault inventory, see Downloading a Vault\nInventory in Amazon S3 Glacier. Downloading an Archive in Amazon S3 Glacier\nDownloading an archive is an asynchronous operation. You must first initiate a job to download\na specific archive. After receiving the job request, S3 Glacier prepares your archive for download. After the job completes, you can download your archive data. Because of the asynchronous nature\nof the job, you can request S3 Glacier to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when the job completes. You can specify an SNS topic for each\nindividual job request or configure your vault to send a notification when specific events occur. For\nmore information about downloading an archive, see Downloading an Archive in S3 Glacier. Archive Operations API Version 2012-06-01 107\n\nAmazon S3 Glacier Developer Guide\nDeleting an Archive in Amazon S3 Glacier\nS3 Glacier provides an API call that you can use to delete one archive at a time. For more\ninformation, see Deleting an Archive in Amazon S3 Glacier.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5474928961859808,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Asynchronous Operation",
              "Notification Configuration",
              "API Call"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "archive",
            "Amazon SNS",
            "API call",
            "notification",
            "job request",
            "Vault",
            "Archive Operations",
            "asynchronous"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Inventory",
            "Archive Operations API",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Operations",
          "secondary_categories": [
            "Archive Management",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service (SNS)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to download and delete archives in Amazon S3 Glacier, including initiating jobs, receiving notifications via Amazon SNS, and using the API for archive operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier?",
            "What is the process for receiving notifications when an archive download job completes?",
            "How can I delete an archive in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Operations]",
        "tf_idf_keywords": [
          "vault inventory",
          "S3 Glacier",
          "asynchronous",
          "archive",
          "Amazon S3 Glacier Developer Guide",
          "Amazon Simple Notification Service (SNS)",
          "notification",
          "Vault",
          "Vault Inventory",
          "Archive Operations",
          "Amazon SNS",
          "job request",
          "Amazon S3 Glacier",
          "Archive Operations API",
          "API call"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_118",
      "text": "Updating an Archive in S3 Glacier\nAfter you upload an archive, you cannot update its content or its description. The only way you\ncan update the archive content or its description is by deleting the archive and uploading another\narchive. Note that each time you upload an archive, S3 Glacier returns to you a unique archive ID. Maintaining Client-Side Archive Metadata\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. When you upload an archive S3 Glacier assigns an ID, an opaque sequence of\ncharacters, from which you cannot infer any meaning about the archive. You might maintain\nmetadata about the archives on the client-side. The metadata can include archive name and some\nother meaningful information about the archive. Note\nIf you are an Amazon Simple Storage Service (Amazon S3) customer, you know that\nwhen you upload an object to a bucket, you can assign the object an object key such as\nMyDocument.txt or SomePhoto.jpg. In S3 Glacier, you cannot assign a object key to the\narchives you upload. If you maintain client-side archive metadata, note that S3 Glacier maintains a vault inventory\nthat includes archive IDs and any descriptions you provided during the archive upload.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5579257541232638,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "metadata",
            "archive ID",
            "vault inventory",
            "client-side metadata",
            "archive description",
            "Amazon S3",
            "bucket",
            "object key"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon Simple Storage Service",
            "archive ID",
            "vault inventory",
            "object key"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage",
          "secondary_categories": [
            "Metadata Management",
            "Cloud Storage Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Storage Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "S3 Glacier archives cannot be updated after upload; instead, they must be deleted and re-uploaded. Metadata for archives is not supported server-side, so users must manage it client-side, and S3 Glacier provides only a unique archive ID and optional descriptions in its vault inventory.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I update the content or description of an archive in S3 Glacier?",
            "What metadata does S3 Glacier support for archives?",
            "How can I manage additional metadata for S3 Glacier archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Storage]",
        "tf_idf_keywords": [
          "vault inventory",
          "S3 Glacier",
          "metadata",
          "archive",
          "Amazon S3",
          "object key",
          "archive ID",
          "archive description",
          "Amazon Simple Storage Service",
          "Amazon S3 Glacier",
          "client-side metadata",
          "bucket"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_119",
      "text": "You might\noccasionally download the vault inventory to reconcile any issues in your client-side database you\nmaintain for the archive metadata. However, S3 Glacier takes vault inventory approximately daily. When you request a vault inventory, S3 Glacier returns the last inventory it prepared, a point in\ntime snapshot. Uploading an Archive in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides a management console, which you can use to create\nand delete vaults. However, you cannot upload archives to S3 Glacier by using the management\nDeleting an Archive API Version 2012-06-01 108\n\nAmazon S3 Glacier Developer Guide\nconsole. To upload data, such as photos, videos, and other documents, you must either use the\nAWS CLI or write code to make requests, by using either the REST API directly or by using the\nAmazon SDKs. For information about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3 Glacier. To install the AWS CLI, go to AWS Command Line Interface. The following Uploading topics\ndescribe how to upload archives to S3 Glacier by using the Amazon SDK for Java, the Amazon SDK\nfor .NET, and the REST API. Topics\n\u2022 Options for Uploading an Archive to Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\nOptions for Uploading an Archive to Amazon S3 Glacier\nDepending on the size of the data you are uploading, S3 Glacier offers the following options:\n\u2022 Upload archives in a single operation \u2013 In a single operation, you can upload archives from 1\nbyte to up to 4 GB in size.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 269,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47015351189507376,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Data Upload",
              "API Usage",
              "Tool Installation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "AWS CLI",
            "REST API",
            "Amazon SDK",
            "Multipart Upload",
            "archive",
            "management console",
            "point in time snapshot",
            "data upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SDK for Java",
            "Amazon SDK for .NET",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage and Management",
          "secondary_categories": [
            "File Upload Methods",
            "API and SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Amazon SDK for Java",
            "Amazon SDK for .NET",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage and upload archives to Amazon S3 Glacier, including options for single and multipart uploads, and provides references for using the AWS CLI, SDKs, and REST API for these operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload archives to Amazon S3 Glacier?",
            "What are the size limits for uploading archives in a single operation?",
            "What tools or APIs can be used to interact with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage and Management]",
        "tf_idf_keywords": [
          "point in time snapshot",
          "vault inventory",
          "S3 Glacier",
          "management console",
          "archive",
          "AWS CLI",
          "Amazon SDK for Java",
          "Amazon SDK",
          "REST API",
          "data upload",
          "Amazon SDK for .NET",
          "Amazon S3 Glacier",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_120",
      "text": "However, we encourage S3 Glacier customers to use multipart upload\nto upload archives greater than 100 MB. For more information, see Uploading an Archive in a\nSingle Operation. \u2022 Upload archives in parts \u2013 Using the multipart upload API, you can upload large archives, up to\nabout 40,000 GB (10,000 * 4 GB). The multipart upload API call is designed to improve the upload experience for larger archives. You can upload archives in parts. These parts can be uploaded independently, in any order, and\nin parallel. If a part upload fails, you only need to upload that part again and not the entire\narchive. You can use multipart upload for archives from 1 byte to about 40,000 GB in size. For\nmore information, see Uploading Large Archives in Parts (Multipart Upload). Important\nThe S3 Glacier vault inventory is only updated once a day.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 143,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5432814280192058,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Recommendation",
              "API Usage"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "multipart upload",
            "archives",
            "API call",
            "vault inventory",
            "upload experience",
            "large archives",
            "parallel upload",
            "40,000 GB",
            "part upload"
          ],
          "entities": [
            "S3 Glacier",
            "multipart upload API",
            "vault inventory",
            "Uploading an Archive in a Single Operation",
            "Uploading Large Archives in Parts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage and Transfer",
          "secondary_categories": [
            "Cloud Storage",
            "File Upload Mechanisms"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "Multipart Upload API"
          ]
        },
        "semantic": {
          "summary": "The multipart upload API in S3 Glacier allows users to upload large archives (up to 40,000 GB) in parts, improving the upload process for larger files. Parts can be uploaded independently, in any order, and in parallel, with failed parts requiring only a re-upload of the specific part.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives to S3 Glacier?",
            "What is the size limit for archives when using multipart upload in S3 Glacier?",
            "What happens if a part upload fails during a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage and Transfer]",
        "tf_idf_keywords": [
          "archives",
          "parallel upload",
          "vault inventory",
          "S3 Glacier",
          "Uploading Large Archives in Parts",
          "multipart upload API",
          "large archives",
          "part upload",
          "Uploading an Archive in a Single Operation",
          "upload experience",
          "multipart upload",
          "40,000 GB",
          "API call"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_121",
      "text": "When you upload an archive,\nyou will not immediately see the new archive added to your vault (in the console or in your\ndownloaded vault inventory list) until the vault inventory has been updated. Options for Uploading an Archive API Version 2012-06-01 109\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS Snowball Service\nAWS Snowball accelerates moving large amounts of data into and out of AWS using Amazon-\nowned devices, bypassing the internet. For more information, see AWS Snowball detail page. To upload existing data to Amazon S3 Glacier (S3 Glacier), you might consider using one of the\nAWS Snowball device types to import data into Amazon S3, and then move it to the S3 Glacier\nstorage class for archival using lifecycle rules. When you transition Amazon S3 objects to the\nS3 Glacier storage class, Amazon S3 internally uses S3 Glacier for durable storage at lower cost. Although the objects are stored in S3 Glacier, they remain Amazon S3 objects that you manage in\nAmazon S3, and you cannot access them directly through S3 Glacier. For more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. Uploading an Archive in a Single Operation\nAs described in Uploading an Archive in Amazon S3 Glacier, you can upload smaller archives\nin a single operation. However, we encourage Amazon S3 Glacier (S3 Glacier) customers to use\nMultipart Upload to upload archives greater than 100 MB. Topics\n\u2022 Uploading an Archive in a Single Operation Using the AWS Command Line Interface\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for .NET in Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation Using the REST API\nUploading an Archive in a Single Operation Using the AWS Command Line\nInterface\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI).",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 344,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5541934119330512,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Data Upload",
              "Storage Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "vault inventory",
            "lifecycle rules",
            "Multipart Upload",
            "AWS Command Line Interface",
            "AWS SDK",
            "REST API",
            "S3 Glacier storage class",
            "Object Lifecycle Management"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Archival and Storage",
          "secondary_categories": [
            "AWS Data Transfer",
            "Lifecycle Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier, including using AWS Snowball for data migration and various methods for single-operation uploads such as AWS CLI, SDKs, and REST API. It also highlights the importance of lifecycle rules for transitioning data to S3 Glacier storage class.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using the AWS CLI?",
            "What is the recommended method for uploading archives larger than 100 MB to S3 Glacier?",
            "How can I use AWS Snowball to migrate data into Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Archival and Storage]",
        "tf_idf_keywords": [
          "AWS Snowball",
          "vault inventory",
          "AWS SDK for Java",
          "Amazon S3",
          "AWS CLI",
          "Object Lifecycle Management",
          "AWS SDK",
          "S3 Glacier storage class",
          "REST API",
          "Amazon S3 Glacier",
          "AWS Command Line Interface",
          "lifecycle rules",
          "Multipart Upload",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_122",
      "text": "Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Upload an Archive Using the AWS CLI\nUploading an Archive in a Single Operation API Version 2012-06-01 110\n\nAmazon S3 Glacier Developer Guide\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Upload an Archive Using the AWS CLI\nIn order to upload an archive you must have a vault created. For more information about creating\nvaults, see Creating a Vault in Amazon S3 Glacier. 1. Use the upload-archive command to add an archive to an existing vault. In the below\nexample replace the vault name and account ID. For the body parameter specify a path to\nthe file you wish to upload. aws glacier upload-archive --vault-name awsexamplevault --account-id 123456789012\n--body archive.zip\n2. Expected output:\nUploading an Archive in a Single Operation API Version 2012-06-01 111\n\nAmazon S3 Glacier Developer Guide\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\": \"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/123456789012/vaults/awsexamplevault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nWhen finished the command will output the archive ID, checksum, and location in S3 Glacier. For more information about the upload-archive command, see upload-archive in the AWS CLI\nCommand Reference.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 18,
        "num_words": 301,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3378291410558364,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Prerequisite",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "upload-archive",
            "vault",
            "archive",
            "list-vaults",
            "AWS account ID",
            "checksum",
            "location",
            "configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "upload-archive",
            "list-vaults",
            "archiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Usage",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "File Upload Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up the AWS CLI and use it to upload an archive to Amazon S3 Glacier, including prerequisite steps, commands, and expected output.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI for use with Amazon S3 Glacier?",
            "What command is used to upload an archive to an S3 Glacier vault?",
            "What is the expected output when uploading an archive using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Usage]",
        "tf_idf_keywords": [
          "checksum",
          "S3 Glacier",
          "archive",
          "archiveId",
          "upload-archive",
          "AWS CLI",
          "list-vaults",
          "vault",
          "AWS account ID",
          "Amazon S3 Glacier",
          "configuration",
          "location"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_123",
      "text": "Uploading an Archive in a Single Operation Using the AWS SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload an archive. Topics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nUploading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the upload method, which\nyou can use to upload an archive to a vault. Note\nYou can use the upload method to upload small or large archives. Depending on the\narchive size you are uploading, this method determines whether to upload it in a single\noperation or use the multipart upload API to upload the archive in parts. Uploading an Archive in a Single Operation API Version 2012-06-01 112\n\nAmazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region (us-west-2). For a list of supported AWS Regions and endpoints, see Accessing\nAmazon S3 Glacier. For step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You need to update the code as shown with the name of the vault you\nwant to upload to and the name of the file you want to upload. Example\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.glacier.transfer.UploadResult;\npublic class ArchiveUploadHighLevel {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String archiveToUpload = \"*** provide name of file to upload ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(client,\ncredentials);\nUploadResult result = atm.upload(vaultName, \"my archive \" + (new Date()),\nnew File(archiveToUpload));\nSystem.out.println(\"Archive ID: \" + result.getArchiveId());\nUploading an Archive in a Single Operation API Version 2012-06-01 113\n\nAmazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for Java. 1.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 11,
        "num_words": 413,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4118870475075462,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "upload method",
            "multipart upload API",
            "Amazon S3 Glacier",
            "vault",
            "Region",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "UploadResult"
          ],
          "entities": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "ProfileCredentialsProvider"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Archive Upload Methods"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "Eclipse",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using both high-level and low-level APIs of the AWS SDK for Java, including a code example for the high-level API. It also provides guidance on handling different archive sizes and links to related resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the difference between high-level and low-level APIs for uploading archives in AWS SDK for Java?",
            "How do I use the ArchiveTransferManager class to upload an archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "UploadResult",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "ProfileCredentialsProvider",
          "vault",
          "Region",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "multipart upload API",
          "upload method"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_124",
      "text": "Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region. 2. Provide request information by creating an instance of the UploadArchiveRequest class. In addition to the data you want to upload, you need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, the content length of the data, and your account ID. If you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for Java\nwith Amazon S3 Glacier. 3. Run the uploadArchive method by providing the request object as a parameter. In response, Amazon S3 Glacier (S3 Glacier) returns an archive ID of the newly uploaded archive.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 11,
        "num_words": 147,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22944835316051138,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Client Initialization",
              "Request Creation",
              "Method Execution"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "AWS Region",
            "UploadArchiveRequest",
            "SHA-256 tree hash",
            "vault name",
            "content length",
            "account ID",
            "uploadArchive method",
            "archive ID",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "AmazonGlacierClient",
            "UploadArchiveRequest",
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "SHA-256"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS Region Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Region"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the AWS SDK for Java, including creating a client, preparing a request, and executing the upload method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS SDK for Java?",
            "What information do I need to include in an UploadArchiveRequest for Amazon S3 Glacier?",
            "What is the purpose of the checksum in the archive upload process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "vault name",
          "AWS Region",
          "AmazonGlacierClient",
          "SHA-256",
          "SHA-256 tree hash",
          "archive ID",
          "content length",
          "UploadArchiveRequest",
          "Amazon S3 Glacier",
          "account ID",
          "AWS SDK for Java",
          "uploadArchive method"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_125",
      "text": "The following Java code snippet illustrates the preceding steps. AmazonGlacierClient client;\nUploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withChecksum(checksum)\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nUploading an Archive in a Single Operation API Version 2012-06-01 114\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Location (includes ArchiveID): \" +\nuploadArchiveResult.getLocation());\nExample: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the vault you want to upload to and the name of the file you want to upload. import java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.UploadArchiveRequest;\nimport com.amazonaws.services.glacier.model.UploadArchiveResult;\npublic class ArchiveUploadLowLevel {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveFilePath = \"*** provide to file upload ****\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\n// First open file and read. File file = new File(archiveFilePath);\nInputStream is = new FileInputStream(file);\nbyte[] body = new byte[(int) file.length()];\nis.read(body);\nUploading an Archive in a Single Operation API Version 2012-06-01 115\n\nAmazon S3 Glacier Developer Guide\n// Send request. UploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(vaultName)\n.withChecksum(TreeHashGenerator.calculateTreeHash(new\nFile(archiveFilePath)))\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nSystem.out.println(\"ArchiveID: \" + uploadArchiveResult.getArchiveId());\n} catch (Exception e)\n{\nSystem.err.println(\"Archive not uploaded. \");\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the AWS SDK for .NET in\nAmazon S3 Glacier\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload an archive in a single operation. Topics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nUploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Upload method that you\ncan use to upload an archive to a vault. Note\nYou can use the Upload method to upload small or large files. Depending on the file size\nyou are uploading, this method determines whether to upload it in a single operation or\nuse the multipart upload API to upload the file in parts.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 11,
        "num_words": 432,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4360647721724077,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadArchiveRequest",
            "UploadArchiveResult",
            "AWS SDK for Java",
            "TreeHashGenerator",
            "ArchiveTransferManager",
            "vault",
            "single operation",
            "high-level API",
            "low-level API"
          ],
          "entities": [
            "AmazonGlacierClient",
            "ProfileCredentialsProvider",
            "ArchiveTransferManager",
            "AWS SDK for .NET",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Eclipse",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of how to upload an archive to Amazon S3 Glacier using both the low-level API for Java and the high-level API for .NET. It includes code snippets, required imports, and instructions for setting up the necessary configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the difference between the high-level and low-level APIs for uploading archives in .NET?",
            "What configurations are required to upload an archive using the AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "low-level API",
          "UploadArchiveResult",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "single operation",
          "ProfileCredentialsProvider",
          "vault",
          "UploadArchiveRequest",
          "API Version 2012-06-01",
          "high-level API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "TreeHashGenerator",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_126",
      "text": "Uploading an Archive in a Single Operation API Version 2012-06-01 116\n\nAmazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region. For step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive. string archiveId = manager.Upload(vaultName, \"upload archive test\",\narchiveToUpload).ArchiveId;\nConsole.WriteLine(\"Archive ID: (Copy and save this ID for use in other\nexamples.) : {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\nUploading an Archive in a Single Operation API Version 2012-06-01 117\n\nAmazon S3 Glacier Developer Guide\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region. 2.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 12,
        "num_words": 280,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2819227160829486,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "StepByStep"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "vault",
            "archive",
            "US West (Oregon) Region",
            "API Version 2012-06-01",
            "AmazonGlacierException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Archive Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and instructions for uploading archives to Amazon S3 Glacier using both high-level and low-level APIs of the AWS SDK for .NET. It includes code snippets and steps for implementation in the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using the high-level API in C#?",
            "What are the steps to upload an archive using the low-level API of AWS SDK for .NET?",
            "How do I specify the AWS Region when uploading archives to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "archive",
          "AmazonGlacierException",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "vault",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AmazonServiceException",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_127",
      "text": "Provide request information by creating an instance of the UploadArchiveRequest class. In addition to the data you want to upload, You need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, and your account ID. If you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier. 3. Run the UploadArchive method by providing the request object as a parameter. In response, S3 Glacier returns an archive ID of the newly uploaded archive. Example: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example uses the AWS SDK\nfor .NET to upload an archive to a vault (examplevault). Note\nFor information about the underlying REST API to upload an archive in a single request, see\nUpload Archive (POST archive).",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3070319281684028,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "UploadArchiveRequest",
            "SHA-256 tree hash",
            "vault name",
            "account ID",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "UploadArchive method",
            "archive ID",
            "Low-Level API",
            "REST API"
          ],
          "entities": [
            "UploadArchiveRequest",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "examplevault",
            "Upload Archive (POST archive)"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "File Upload APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the AWS SDK for .NET, including creating a request object, providing necessary parameters, and executing the UploadArchive method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS SDK for .NET?",
            "What parameters are required to create an UploadArchiveRequest object?",
            "Where can I find information about the REST API for uploading archives to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "vault name",
          "examplevault",
          "UploadArchive method",
          "SHA-256 tree hash",
          "archive ID",
          "REST API",
          "Upload Archive (POST archive)",
          "UploadArchiveRequest",
          "Low-Level API",
          "Amazon S3 Glacier",
          "account ID",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_128",
      "text": "For step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload. Uploading an Archive in a Single Operation API Version 2012-06-01 118\n\nAmazon S3 Glacier Developer Guide\nExample\nusing System;\nusing System.IO;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadSingleOpLowLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Uploading an archive. \");\nstring archiveId = UploadAnArchive(client);\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic string UploadAnArchive(AmazonGlacierClient client)\n{\nusing (FileStream fileStream = new FileStream(archiveToUpload, FileMode.Open,\nFileAccess.Read))\n{\nstring treeHash = TreeHashGenerator.CalculateTreeHash(fileStream);\nUploadArchiveRequest request = new UploadArchiveRequest()\n{\nVaultName = vaultName,\nUploading an Archive in a Single Operation API Version 2012-06-01 119\n\nAmazon S3 Glacier Developer Guide\nBody = fileStream,\nChecksum = treeHash\n};\nUploadArchiveResponse response = client.UploadArchive(request);\nstring archiveID = response.ArchiveId;\nreturn archiveID;\n}\n}\n}\n}\nUploading an Archive in a Single Operation Using the REST API\nYou can use the Upload Archive API call to upload an archive in a single operation. For more\ninformation, see Upload Archive (POST archive). Uploading Large Archives in Parts (Multipart Upload)\nTopics\n\u2022 Multipart Upload Process\n\u2022 Quick Facts\n\u2022 Uploading Large Archives by Using the AWS CLI\n\u2022 Uploading Large Archives in Parts Using the Amazon SDK for Java\n\u2022 Uploading Large Archives Using the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the REST API\nMultipart Upload Process\nAs described in Uploading an Archive in Amazon S3 Glacier, we encourage Amazon S3 Glacier (S3\nGlacier) customers to use Multipart Upload to upload archives greater than 100 mebibytes (MiB). 1. Initiate Multipart Upload\nWhen you send a request to initiate a multipart upload, S3 Glacier returns a multipart\nupload ID, which is a unique identifier for your multipart upload. Any subsequent multipart\nupload operations require this ID. This ID doesn't expire for at least 24 hours after S3 Glacier\ncompletes the job.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 378,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2840948740641276,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Upload Archive",
            "Multipart Upload",
            "AWS SDK for .NET",
            "TreeHashGenerator",
            "UploadArchiveRequest",
            "AmazonGlacierClient",
            "REST API",
            "archive ID",
            "multipart upload ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "TreeHashGenerator",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Archive Upload",
          "secondary_categories": [
            "Multipart Upload Process",
            "AWS SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for uploading archives to Amazon S3 Glacier using the .NET SDK and REST API, including single operations and multipart uploads for large files exceeding 100 MiB.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using the .NET SDK?",
            "What is the process for initiating a multipart upload in Amazon S3 Glacier?",
            "What are the advantages of using multipart upload for large archives in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Archive Upload]",
        "tf_idf_keywords": [
          "multipart upload ID",
          "AWS CLI",
          "AmazonGlacierClient",
          "archive ID",
          "REST API",
          "UploadArchiveRequest",
          "Upload Archive",
          "Amazon S3 Glacier",
          "Multipart Upload",
          "TreeHashGenerator",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_129",
      "text": "Uploading Large Archives in Parts API Version 2012-06-01 120\n\nAmazon S3 Glacier Developer Guide\nIn your request to start a multipart upload, specify the part size in number of bytes. Each part\nyou upload, except the last part, must be this size. Note\nYou don't need to know the overall archive size when using multipart uploads. This\nmeans that you can use multipart uploads in cases where you don't know the archive\nsize when you start uploading the archive. You only need to decide the part size at the\ntime you start the multipart upload. In the initiate multipart upload request, you can also provide an optional archive description. 2. Upload Parts\nFor each part upload request, you must include the multipart upload ID you obtained in step\n1. In the request, you must also specify the content range, in bytes, identifying the position of\nthe part in the final archive. S3 Glacier later uses the content range information to assemble\nthe archive in proper sequence.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44465607537163626,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Multipart Upload",
              "API Usage"
            ]
          },
          "keywords": [
            "multipart upload",
            "part size",
            "archive",
            "upload ID",
            "content range",
            "S3 Glacier",
            "archive description",
            "initiate request",
            "final archive",
            "bytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "multipart upload ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "Data Storage",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives in parts using Amazon S3 Glacier's multipart upload API, including specifying part sizes, uploading parts with content ranges, and initiating uploads with optional archive descriptions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I start a multipart upload in Amazon S3 Glacier?",
            "What is the significance of the content range in multipart uploads?",
            "Can I use multipart uploads if I don't know the overall archive size?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "multipart upload ID",
          "S3 Glacier",
          "initiate request",
          "archive",
          "archive description",
          "part size",
          "final archive",
          "bytes",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "content range",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_130",
      "text": "Because you provide the content range for each part that you\nupload, it determines the part's position in the final assembly of the archive, and therefore you\ncan upload parts in any order. You can also upload parts in parallel. If you upload a new part\nusing the same content range as a previously uploaded part, the previously uploaded part is\noverwritten. 3. Complete (or stop) Multipart Upload\nAfter uploading all the archive parts, you use the complete operation. Again, you must\nspecify the upload ID in your request. S3 Glacier creates an archive by concatenating parts in\nascending order based on the content range you provided. S3 Glacier response to a Complete\nMultipart Upload request includes an archive ID for the newly created archive. If you provided\nan optional archive description in the Initiate Multipart Upload request, S3 Glacier associates\nit with the assembled archive. After you successfully complete a multipart upload, you cannot\nrefer to the multipart upload ID.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 161,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3702603234185113,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Multipart Upload",
              "S3 Glacier"
            ]
          },
          "keywords": [
            "content range",
            "multipart upload",
            "archive",
            "upload ID",
            "S3 Glacier",
            "archive ID",
            "complete operation",
            "parallel upload",
            "concatenating parts",
            "archive description"
          ],
          "entities": [
            "S3 Glacier",
            "Multipart Upload",
            "archive ID",
            "upload ID",
            "content range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "Data Storage",
            "File Management"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to upload parts for a multipart archive in S3 Glacier, including specifying content ranges, overwriting parts, completing the upload, and receiving an archive ID for the assembled archive. It also mentions the inability to reference the upload ID after completion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How does S3 Glacier determine the order of archive parts during assembly?",
            "Can I upload parts in parallel during a multipart upload in S3 Glacier?",
            "What happens if I upload a new part with the same content range as a previously uploaded part?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "parallel upload",
          "S3 Glacier",
          "archive",
          "complete operation",
          "archive ID",
          "archive description",
          "concatenating parts",
          "content range",
          "multipart upload",
          "Multipart Upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_131",
      "text": "That means you cannot access parts associated with the\nmultipart upload ID. If you stop a multipart upload, you cannot upload any more parts using that multipart upload\nID. All storage consumed by any parts associated with the stopped multipart upload is freed. If\nany part uploads were in-progress, they can still succeed or fail even after stopped. Uploading Large Archives in Parts API Version 2012-06-01 121\n\nAmazon S3 Glacier Developer Guide\nAdditional Multipart Upload Operations\nAmazon S3 Glacier (S3 Glacier) provides the following additional multipart upload API calls. \u2022 List Parts\u2014Using this operation, you can list the parts of a specific multipart upload. It returns\ninformation about the parts that you have uploaded for a multipart upload. For each list parts\nrequest, S3 Glacier returns information for up to 1,000 parts. If there are more parts to list for\nthe multipart upload, the result is paginated and a marker is returned in the response at which\nto continue the list. You need to send additional requests to retrieve subsequent parts.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47616132100423175,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Operations",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "multipart upload",
            "upload ID",
            "parts",
            "storage",
            "Amazon S3 Glacier",
            "List Parts",
            "pagination",
            "marker",
            "archives",
            "API calls"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Parts",
            "multipart upload ID",
            "API Version 2012-06-01",
            "S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Cloud Storage",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the behavior of stopping a multipart upload in Amazon S3 Glacier and describes additional multipart upload operations, including the List Parts API call for listing uploaded parts of a specific multipart upload.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What happens when a multipart upload is stopped in Amazon S3 Glacier?",
            "How can I list the parts of a specific multipart upload in S3 Glacier?",
            "What is the pagination behavior of the List Parts API in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "archives",
          "API calls",
          "multipart upload ID",
          "S3 Glacier",
          "storage",
          "parts",
          "List Parts",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "marker",
          "pagination",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_132",
      "text": "Note that\nthe returned list of parts doesn't include parts that haven't completed uploading. \u2022 List Multipart Uploads\u2014Using this operation, you can obtain a list of multipart uploads in\nprogress. An in-progress multipart upload is an upload that you have initiated, but have not yet\ncompleted or stopped. For each list multipart uploads request, S3 Glacier returns up to 1,000\nmultipart uploads. If there are more multipart uploads to list, then the result is paginated and\na marker is returned in the response at which to continue the list. You need to send additional\nrequests to retrieve the remaining multipart uploads. Quick Facts\nThe following table provides multipart upload core specifications. Item Specification\nMaximum archive size 10,000 x 4 gibibytes (GiB)\nMaximum number of parts per 10,000\nupload\nPart size 1 MiB to 4 GiB, last part can be < 1 MiB. You specify the\nsize value in bytes. The part size must be a mebibyte (1024 kibibytes [KiB])\nmultiplied by a power of 2.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 165,
        "chunk_type": "semantic_split",
        "coherence_score": 0.418439695570204,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specifications",
              "Operations",
              "Limits"
            ]
          },
          "keywords": [
            "multipart upload",
            "S3 Glacier",
            "archive size",
            "part size",
            "marker",
            "paginated",
            "in-progress upload",
            "multipart uploads request",
            "mebibyte",
            "gibibytes"
          ],
          "entities": [
            "S3 Glacier",
            "multipart uploads",
            "archive",
            "marker",
            "part size"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload Management",
          "secondary_categories": [
            "Cloud Storage",
            "Data Transfer"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list multipart uploads in progress and provides specifications for multipart upload parameters, including archive size, part size, and pagination details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list multipart uploads in progress in S3 Glacier?",
            "What is the maximum archive size and part size for multipart uploads?",
            "How does pagination work for listing multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Multipart Upload Management]",
        "tf_idf_keywords": [
          "paginated",
          "S3 Glacier",
          "archive",
          "gibibytes",
          "part size",
          "archive size",
          "mebibyte",
          "in-progress upload",
          "marker",
          "multipart uploads request",
          "multipart upload",
          "multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_133",
      "text": "For example, 1 048576 (1\nMiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8\nMiB). Maximum number of parts returned 1,000\nfor a list parts request\nUploading Large Archives in Parts API Version 2012-06-01 122\n\nAmazon S3 Glacier Developer Guide\nItem Specification\nMaximum number of multipart 1,000\nuploads returned in a list multipart\nuploads request\nUploading Large Archives by Using the AWS CLI\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) by using the AWS Command Line\nInterface (AWS CLI). To improve the upload experience for larger archives, S3 Glacier provides\nseveral API operations to support multipart uploads. By using these API operations, you can upload\narchives in parts. These parts can be uploaded independently, in any order, and in parallel. If a part\nupload fails, you need to upload only that part again, not the entire archive. You can use multipart\nuploads for archives from 1 byte to about 40,000 gibibytes (GiB) in size. For more information about S3 Glacier multipart uploads, see Uploading Large Archives in Parts\n(Multipart Upload). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 (Prerequisite) Install Python\n\u2022 (Prerequisite) Create an S3 Glacier Vault\n\u2022 Example: Uploading Large Archives in Parts by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used.",
      "start_idx": 227337,
      "end_idx": 229039,
      "metadata": {
        "num_sentences": 13,
        "num_words": 274,
        "breakpoint_idx": 1386,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2920453487298427,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example",
              "Prerequisite"
            ]
          },
          "keywords": [
            "multipart uploads",
            "S3 Glacier",
            "AWS CLI",
            "archives",
            "API operations",
            "parts",
            "upload",
            "gibibytes",
            "vault",
            "Python"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Python",
            "AWS Command Line Interface User Guide",
            "S3 Glacier Vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Multipart Uploads",
          "secondary_categories": [
            "AWS CLI Configuration",
            "Large File Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using the AWS CLI, leveraging multipart uploads for efficiency and fault tolerance. It includes prerequisites such as setting up the AWS CLI, installing Python, and creating an S3 Glacier Vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier using the AWS CLI?",
            "What are the prerequisites for using multipart uploads with S3 Glacier?",
            "What is the maximum size of an archive that can be uploaded using multipart uploads in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Multipart Uploads]",
        "tf_idf_keywords": [
          "archives",
          "AWS Command Line Interface User Guide",
          "S3 Glacier",
          "S3 Glacier Vault",
          "upload",
          "AWS CLI",
          "gibibytes",
          "vault",
          "parts",
          "Amazon S3 Glacier",
          "API operations",
          "multipart uploads",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_134",
      "text": "\u2022 Try using the help command. Uploading Large Archives in Parts API Version 2012-06-01 123\n\nAmazon S3 Glacier Developer Guide\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\n(Prerequisite) Install Python\nTo complete a multipart upload, you must calculate the SHA256 tree hash of the archive that\nyou're uploading. Doing so is different than calculating the SHA256 tree hash of the file that you\nwant to upload. To calculate the SHA256 tree hash of the archive that you're uploading, you can\nuse Java, C# (with .NET), or Python. In this example, you will use Python.",
      "start_idx": 229040,
      "end_idx": 229868,
      "metadata": {
        "num_sentences": 8,
        "num_words": 138,
        "breakpoint_idx": 1394,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.26610268865312847,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Commands",
              "Python",
              "API Interaction"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vaults",
            "AWS CLI",
            "list-vaults",
            "aws configure",
            "SHA256 tree hash",
            "multipart upload",
            "Python",
            "Java",
            "C#"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Python",
            "Java",
            "C#"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "Multipart Upload",
            "SHA256 Tree Hash Calculation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Python",
            "Java",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS CLI commands for managing S3 Glacier vaults, configuring AWS CLI, and completing multipart uploads by calculating the SHA256 tree hash using Python.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list S3 Glacier vaults using the AWS CLI?",
            "What command shows the current AWS CLI configuration?",
            "How do I calculate the SHA256 tree hash for a multipart upload in Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS CLI",
          "Java",
          "aws configure",
          "list-vaults",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "vaults",
          "multipart upload",
          "C#",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_135",
      "text": "For instructions on using\nJava or C#, see Computing Checksums. For more information about installing Python, see Install or update Python in the Boto3 Developer\nGuide. (Prerequisite) Create an S3 Glacier Vault\nTo use the following example, you must have at least one S3 Glacier vault created. For more\ninformation about creating vaults, see Creating a Vault in Amazon S3 Glacier. Example: Uploading Large Archives in Parts by Using the AWS CLI\nIn this example, you will create a file and use multipart upload API operations to upload this file, in\nparts, to Amazon S3 Glacier. Important\nBefore starting this procedure, make sure that you've performed all of the prerequisite\nsteps. To upload an archive, you must have a vault created, the AWS CLI configured, and be\nprepared to use Java, C#, or Python to calculate a SHA256 tree hash. Uploading Large Archives in Parts API Version 2012-06-01 124\n\nAmazon S3 Glacier Developer Guide\nThe following procedure uses the initiate-multipart-upload, upload-multipart-part,\nand complete-multipart-upload AWS CLI commands. For more detailed information about each of these commands, see initiate-multipart-upload,\nupload-multipart-part, and complete-multipart-upload in the AWS CLI Command Reference. 1.",
      "start_idx": 229869,
      "end_idx": 232192,
      "metadata": {
        "num_sentences": 10,
        "num_words": 187,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22983148362901476,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Prerequisite",
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "multipart upload",
            "AWS CLI",
            "SHA256 tree hash",
            "Java",
            "C#",
            "Python",
            "archive",
            "upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3 Developer Guide",
            "AWS CLI",
            "API Version 2012-06-01",
            "Creating a Vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming Languages",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for creating an S3 Glacier vault, uploading large archives using multipart upload API operations via the AWS CLI, and calculating SHA256 tree hashes with Java, C#, or Python. It also references related guides for additional details on prerequisites and command usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 Glacier vault?",
            "What are the steps to upload large archives in parts using the AWS CLI?",
            "How can I calculate a SHA256 tree hash using Java, C#, or Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Creating a Vault",
          "archive",
          "upload",
          "AWS CLI",
          "Java",
          "Boto3 Developer Guide",
          "vault",
          "SHA256 tree hash",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "multipart upload",
          "C#",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_136",
      "text": "Use the initiate-multipart-upload command to create a multipart upload resource. In your\nrequest, specify the part size in number of bytes. Each part that you upload, except the last\npart, will be this size. You don't need to know the overall archive size when initiating an\nupload. However, you will need the total size, in bytes, of each part when completing the\nupload on the final step. In the following command, replace the values for the --vault-name and --account-ID\nparameters with your own information. This command specifies that you will upload an archive\nwith a part size of 1 mebibyte (MiB) (1024 x 1024 bytes) per file. Replace this --part-size\nparameter value if needed. aws glacier initiate-multipart-upload --vault-name awsexamplevault --part-\nsize 1048576 --account-id 123456789012\nExpected output:\n{\n\"location\": \"/123456789012/vaults/awsexamplevault/multipart-uploads/uploadId\",\n\"uploadId\": \"uploadId\"\n}\nWhen finished, the command will output the multipart upload resource's upload ID and\nlocation in S3 Glacier. You will use this upload ID in subsequent steps.",
      "start_idx": 229869,
      "end_idx": 232192,
      "metadata": {
        "num_sentences": 10,
        "num_words": 158,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3806256612141927,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command",
              "Parameter Explanation",
              "Output Description"
            ]
          },
          "keywords": [
            "multipart upload",
            "part size",
            "archive size",
            "upload ID",
            "aws glacier",
            "vault-name",
            "account-ID",
            "mebibyte",
            "S3 Glacier",
            "initiate-multipart-upload"
          ],
          "entities": [
            "aws glacier",
            "multipart upload",
            "vault-name",
            "account-ID",
            "S3 Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS Command Line Interface"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the 'initiate-multipart-upload' command in AWS Glacier to create a multipart upload resource, including specifying part sizes and retrieving the upload ID for subsequent steps.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in AWS Glacier?",
            "What is the purpose of the --part-size parameter in the initiate-multipart-upload command?",
            "What information is returned after initiating a multipart upload in AWS Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "initiate-multipart-upload",
          "multipart upload",
          "part size",
          "archive size",
          "mebibyte",
          "vault-name",
          "aws glacier",
          "account-ID",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_137",
      "text": "2. For this example, you can use the following commands to create a 4.4 MiB file, split it into\n1 MiB chunks, and upload each chunk. To upload your own files, you can follow a similar\nprocedure of splitting your data into chunks and uploading each part. Linux or macOS\nThe following command creates a 4.4 MiB file, named file_to_upload, on Linux or macOS. mkfile -n 9000b file_to_upload\nUploading Large Archives in Parts API Version 2012-06-01 125\n\nAmazon S3 Glacier Developer Guide\nWindows\nThe following command creates a 4.4 MiB file, named file_to_upload, on Windows. fsutil file createnew file_to_upload 4608000\n3. Next, you will split this file into 1 MiB chunks. split -b 1048576 file_to_upload chunk\nYou now have the following five chunks. The first four are 1 MiB, and the last is approximately\n400 kibibytes (KiB). chunkaa\nchunkab\nchunkac\nchunkad\nchunkae\n4. Use the upload-multipart-part command to upload a part of an archive. You can upload\narchive parts in any order. You can also upload them in parallel.",
      "start_idx": 232193,
      "end_idx": 235174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 169,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36678416912372297,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "upload-multipart-part",
            "archive",
            "Linux",
            "macOS",
            "Windows",
            "file splitting",
            "chunks",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "parallel upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "mkfile",
            "fsutil",
            "split"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "File Management and Uploading",
          "secondary_categories": [
            "Data Chunking",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "mkfile",
            "fsutil",
            "split"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a 4.4 MiB file, split it into 1 MiB chunks, and upload each chunk to Amazon S3 Glacier using platform-specific commands for Linux, macOS, and Windows.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and split a file into 1 MiB chunks for uploading?",
            "What commands are used to create a file on Linux, macOS, or Windows?",
            "How can I upload file chunks to Amazon S3 Glacier in parallel?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [File Management and Uploading]",
        "tf_idf_keywords": [
          "parallel upload",
          "archive",
          "chunks",
          "mkfile",
          "file splitting",
          "fsutil",
          "Linux",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Windows",
          "upload-multipart-part",
          "split",
          "macOS"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_138",
      "text": "You can upload up to 10,000\nparts for a multipart upload. In the following command, replace the values for the --vault-name, --account-ID, and --\nupload-id parameters. The upload ID must match the ID given as output of the initiate-\nmultipart-upload command. The --range parameter specifies that you will upload a\npart with a size of 1 MiB (1024 x 1024 bytes). This size must match what you specified in the\ninitiate-multipart-upload command. Adjust this size value if needed. The --body\nparameter specifies the name of the part that you're uploading. aws glacier upload-multipart-part --body chunkaa --range='bytes 0-1048575/*' --\nvault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nIf successful, the command will produce output that contains the checksum for the uploaded\npart. 5. Run the upload-multipart-part command again to upload the remaining parts of your\nmultipart upload. Update the --range and \u2013-body parameter values for each command to\nmatch the part that you're uploading. Uploading Large Archives in Parts API Version 2012-06-01 126\n\nAmazon S3 Glacier Developer Guide\naws glacier upload-multipart-part --body chunkab --range='bytes 1048576-2097151/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkac --range='bytes 2097152-3145727/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkad --range='bytes 3145728-4194303/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkae --range='bytes 4194304-4607999/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nNote\nThe final command's --range parameter value is smaller because the final part of\nour upload is less than 1 MiB. If successful, each command will produce output that\ncontains the checksum for each uploaded part.",
      "start_idx": 232193,
      "end_idx": 235174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3654101934188452,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command",
              "Parameter",
              "Note"
            ]
          },
          "keywords": [
            "multipart upload",
            "upload-multipart-part",
            "checksum",
            "range parameter",
            "body parameter",
            "vault-name",
            "account-id",
            "upload-id",
            "Amazon S3 Glacier",
            "API Version 2012-06-01"
          ],
          "entities": [
            "aws glacier",
            "multipart upload",
            "Amazon S3 Glacier",
            "checksum",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart File Upload",
          "secondary_categories": [
            "Cloud Storage",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload parts of a large archive to Amazon S3 Glacier using the multipart upload API, including commands and parameter adjustments for individual parts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload parts of a large archive to Amazon S3 Glacier?",
            "What parameters are required for the aws glacier upload-multipart-part command?",
            "How do I adjust the --range parameter for different parts in a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart File Upload]",
        "tf_idf_keywords": [
          "checksum",
          "account-id",
          "body parameter",
          "multipart upload",
          "upload-id",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "range parameter",
          "aws glacier",
          "upload-multipart-part",
          "vault-name"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_139",
      "text": "6. Next, you will assemble the archive and finish the upload. You must include the total size and\nSHA256 tree hash of the archive. To calculate the SHA256 tree hash of the archive, you can use Java, C#, or Python. In this\nexample, you will use Python.",
      "start_idx": 235175,
      "end_idx": 235426,
      "metadata": {
        "num_sentences": 5,
        "num_words": 47,
        "breakpoint_idx": 1445,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25478472709655764,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "archive",
            "upload",
            "SHA256",
            "tree hash",
            "Python",
            "Java",
            "C#",
            "calculate",
            "size"
          ],
          "entities": [
            "SHA256 tree hash",
            "Python",
            "Java",
            "C#",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity",
          "secondary_categories": [
            "File Management",
            "Programming Languages"
          ],
          "mentioned_services": [],
          "mentioned_tools": [
            "Python",
            "Java",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This section explains how to assemble an archive, calculate its total size, and compute its SHA256 tree hash using Python.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate the SHA256 tree hash of an archive?",
            "What programming languages can be used to compute the SHA256 tree hash?",
            "What steps are required to assemble and upload an archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity]",
        "tf_idf_keywords": [
          "upload",
          "archive",
          "tree hash",
          "Java",
          "size",
          "calculate",
          "SHA256 tree hash",
          "SHA256",
          "C#",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_140",
      "text": "For instructions on using Java or C#, see Computing Checksums. Create the Python file checksum.py and insert the following code. If needed, replace the\nname of the original file. from botocore.utils import calculate_tree_hash\nchecksum = calculate_tree_hash(open('file_to_upload', 'rb'))\nprint(checksum)\n7. Run checksum.py to calculate the SHA256 tree hash. The following hash may not match your\noutput. $ python3 checksum.py\n$ 3d760edb291bfc9d90d35809243de092aea4c47b308290ad12d084f69988ae0c\nUploading Large Archives in Parts API Version 2012-06-01 127\n\nAmazon S3 Glacier Developer Guide\n8. Use the complete-multipart-upload command to finish the archive upload. Replace the values\nfor the --vault-name, --account-ID, --upload-ID, and --checksum parameters. The --\narchive parameter value specifies the total size, in bytes, of the archive. This value must be\nthe sum of all the sizes of the individual parts that you uploaded. Replace this value if needed. aws glacier complete-multipart-upload --archive-size 4608000 --vault-\nname awsexamplevault --account-id 123456789012 --upload-id upload_ID --\nchecksum checksum\nWhen finished, the command will output the archive's ID, checksum, and location in S3 Glacier. Uploading Large Archives in Parts Using the Amazon SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload a large archive (see Uploading an Archive in Amazon S3 Glacier).",
      "start_idx": 235427,
      "end_idx": 238787,
      "metadata": {
        "num_sentences": 14,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2640920576158461,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Command Line Instructions"
            ]
          },
          "keywords": [
            "checksum",
            "SHA256 tree hash",
            "multipart upload",
            "Amazon S3 Glacier",
            "archive upload",
            "botocore.utils",
            "calculate_tree_hash",
            "complete-multipart-upload",
            "Python",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "botocore.utils",
            "SHA256",
            "Amazon SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "File Upload and Checksums",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Programming Languages"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Botocore"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for calculating a SHA256 tree hash in Python using the botocore library and completing a multipart archive upload to Amazon S3 Glacier using the AWS CLI and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a SHA256 tree hash for a file in Python?",
            "What is the process for completing a multipart archive upload to Amazon S3 Glacier?",
            "How do I use the AWS CLI to finalize an archive upload with specific parameters?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [File Upload and Checksums]",
        "tf_idf_keywords": [
          "checksum",
          "complete-multipart-upload",
          "botocore.utils",
          "AWS CLI",
          "Amazon SDK for Java",
          "calculate_tree_hash",
          "archive upload",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "SHA256",
          "multipart upload",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_141",
      "text": "\u2022 The high-level API provides a method that you can use to upload archives of any size. Depending\non the file you are uploading, the method either uploads an archive in a single operation or uses\nthe multipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts. \u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API. For more information about the high-level and low-level APIs, see Using the AWS SDK for Java with\nAmazon S3 Glacier. Topics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\n\u2022 Upload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nUploading Large Archives in Parts API Version 2012-06-01 128\n\nAmazon S3 Glacier Developer Guide\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for Java. Upload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nFor granular control of the upload you can use the low-level API where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.",
      "start_idx": 235427,
      "end_idx": 238787,
      "metadata": {
        "num_sentences": 15,
        "num_words": 332,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41458703903924854,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Multipart Upload",
              "AWS SDK for Java"
            ]
          },
          "keywords": [
            "high-level API",
            "low-level API",
            "multipart upload",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "archive upload",
            "REST implementation",
            "AWS Region",
            "upload archives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "AWS Region",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Multipart Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the high-level and low-level APIs of the AWS SDK for Java to upload archives to Amazon S3 Glacier, including support for multipart uploads for large archives and configuration options for granular control.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives using the high-level API of the AWS SDK for Java?",
            "What are the steps to upload large archives in parts using the low-level API?",
            "When should I use the multipart upload feature in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "low-level API",
          "AWS Region",
          "AmazonGlacierClient",
          "REST implementation",
          "upload archives",
          "archive upload",
          "API Version 2012-06-01",
          "high-level API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_142",
      "text": "2. Initiate multipart upload by calling the initiateMultipartUpload method. You need to provide vault name in which you want to upload the archive, part size you want\nto use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID. 3.",
      "start_idx": 238788,
      "end_idx": 239162,
      "metadata": {
        "num_sentences": 6,
        "num_words": 58,
        "breakpoint_idx": 1480,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2320008595784505,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "multipart upload",
            "initiateMultipartUpload",
            "vault name",
            "archive parts",
            "description",
            "InitiateMultipartUploadRequest",
            "upload ID",
            "S3 Glacier",
            "part size",
            "archive"
          ],
          "entities": [
            "InitiateMultipartUploadRequest",
            "S3 Glacier",
            "upload ID",
            "vault name",
            "archive parts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "Cloud Storage",
            "API Usage"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "InitiateMultipartUploadRequest"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to initiate a multipart upload to an S3 Glacier vault by using the initiateMultipartUpload method and creating an InitiateMultipartUploadRequest instance, which returns an upload ID.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in S3 Glacier?",
            "What information is required to initiate a multipart upload?",
            "What is the purpose of the upload ID returned by S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "vault name",
          "S3 Glacier",
          "archive",
          "part size",
          "initiateMultipartUpload",
          "InitiateMultipartUploadRequest",
          "archive parts",
          "description",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_143",
      "text": "Upload parts by calling the uploadMultipartPart method. For each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID. 4. Complete multipart upload by calling the completeMultipartUpload method. You need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID. Example: Uploading a Large Archive in a Parts Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the file you want to upload.",
      "start_idx": 239163,
      "end_idx": 245188,
      "metadata": {
        "num_sentences": 9,
        "num_words": 164,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31456730100843644,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "uploadMultipartPart",
            "completeMultipartUpload",
            "vault name",
            "byte range",
            "checksum",
            "upload ID",
            "archive ID",
            "S3 Glacier",
            "AWS SDK for Java",
            "multipart upload"
          ],
          "entities": [
            "S3 Glacier",
            "AWS SDK for Java",
            "Eclipse",
            "Amazon S3 Glacier",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "AWS SDK for Java",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload a large archive in parts to Amazon S3 Glacier using the AWS SDK for Java, detailing the steps for uploading parts, completing the multipart upload, and constructing the archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a large archive to Amazon S3 Glacier in parts?",
            "What parameters are required for the uploadMultipartPart and completeMultipartUpload methods?",
            "How can I use the AWS SDK for Java to upload an archive to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "checksum",
          "vault name",
          "byte range",
          "uploadMultipartPart",
          "S3 Glacier",
          "Eclipse",
          "examplevault",
          "completeMultipartUpload",
          "archive ID",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_144",
      "text": "Uploading Large Archives in Parts API Version 2012-06-01 129\n\nAmazon S3 Glacier Developer Guide\nNote\nThis example is valid for part sizes from 1 MB to 1 GB. However, S3 Glacier supports part\nsizes up to 4 GB. Example\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.LinkedList;\nimport java.util.List;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartRequest;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartResult;\nimport com.amazonaws.util.BinaryUtils;\npublic class ArchiveMPU {\npublic static String vaultName = \"examplevault\";\n// This example works for part sizes up to 1 GB. public static String partSize = \"1048576\"; // 1 MB. public static String archiveFilePath = \"*** provide archive file path ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nUploading Large Archives in Parts API Version 2012-06-01 130\n\nAmazon S3 Glacier Developer Guide\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nSystem.out.println(\"Uploading an archive. \");\nString uploadId = initiateMultipartUpload();\nString checksum = uploadParts(uploadId);\nString archiveId = CompleteMultiPartUpload(uploadId, checksum);\nSystem.out.println(\"Completed an archive. ArchiveId: \" + archiveId);\n} catch (Exception e) {\nSystem.err.println(e);\n}\n}\nprivate static String initiateMultipartUpload() {\n// Initiate\nInitiateMultipartUploadRequest request = new InitiateMultipartUploadRequest()\n.withVaultName(vaultName)\n.withArchiveDescription(\"my archive \" + (new Date()))\n.withPartSize(partSize);\nInitiateMultipartUploadResult result = client.initiateMultipartUpload(request);\nSystem.out.println(\"ArchiveID: \" + result.getUploadId());\nreturn result.getUploadId();\n}\nprivate static String uploadParts(String uploadId) throws AmazonServiceException,\nNoSuchAlgorithmException, AmazonClientException, IOException {\nint filePosition = 0;\nlong currentPosition = 0;\nbyte[] buffer = new byte[Integer.valueOf(partSize)];\nList<byte[]> binaryChecksums = new LinkedList<byte[]>();\nFile file = new File(archiveFilePath);\nFileInputStream fileToUpload = new FileInputStream(file);\nString contentRange;\nint read = 0;\nwhile (currentPosition < file.length())\n{\nread = fileToUpload.read(buffer, filePosition, buffer.length);\nUploading Large Archives in Parts API Version 2012-06-01 131\n\nAmazon S3 Glacier Developer Guide\nif (read == -1) { break; }\nbyte[] bytesRead = Arrays.copyOf(buffer, read);\ncontentRange = String.format(\"bytes %s-%s/*\", currentPosition,\ncurrentPosition + read - 1);\nString checksum = TreeHashGenerator.calculateTreeHash(new\nByteArrayInputStream(bytesRead));\nbyte[] binaryChecksum = BinaryUtils.fromHex(checksum);\nbinaryChecksums.add(binaryChecksum);\nSystem.out.println(contentRange);\n//Upload part. UploadMultipartPartRequest partRequest = new UploadMultipartPartRequest()\n.withVaultName(vaultName)\n.withBody(new ByteArrayInputStream(bytesRead))\n.withChecksum(checksum)\n.withRange(contentRange)\n.withUploadId(uploadId);\nUploadMultipartPartResult partResult =\nclient.uploadMultipartPart(partRequest);\nSystem.out.println(\"Part uploaded, checksum: \" + partResult.getChecksum());\ncurrentPosition = currentPosition + read;\n}\nfileToUpload.close();\nString checksum = TreeHashGenerator.calculateTreeHash(binaryChecksums);\nreturn checksum;\n}\nprivate static String CompleteMultiPartUpload(String uploadId, String checksum)\nthrows NoSuchAlgorithmException, IOException {\nFile file = new File(archiveFilePath);\nCompleteMultipartUploadRequest compRequest = new\nCompleteMultipartUploadRequest()\n.withVaultName(vaultName)\n.withUploadId(uploadId)\n.withChecksum(checksum)\n.withArchiveSize(String.valueOf(file.length()));\nCompleteMultipartUploadResult compResult =\nclient.completeMultipartUpload(compRequest);\nUploading Large Archives in Parts API Version 2012-06-01 132\n\nAmazon S3 Glacier Developer Guide\nreturn compResult.getLocation();\n}\n}\nUploading Large Archives Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload large archives in parts (see Uploading an Archive in Amazon S3 Glacier). \u2022 The high-level API provides a method that you can use to upload archives of any size.",
      "start_idx": 239163,
      "end_idx": 245188,
      "metadata": {
        "num_sentences": 9,
        "num_words": 465,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4247606065538194,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "TreeHashGenerator",
            "AWS SDK",
            "UploadMultipartPartRequest",
            "CompleteMultipartUploadRequest",
            "ProfileCredentialsProvider",
            "archive",
            "checksum",
            "part size"
          ],
          "entities": [
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "UploadMultipartPartResult",
            "CompleteMultipartUploadResult",
            "BinaryUtils"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "Cloud Storage",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java-based example for uploading large archives to Amazon S3 Glacier in parts using the AWS SDK. It includes detailed steps for initiating, uploading, and completing a multipart upload, along with code snippets and explanations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier using Java?",
            "What is the process for initiating and completing a multipart upload in Amazon S3 Glacier?",
            "What part sizes are supported for multipart uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "checksum",
          "CompleteMultipartUploadResult",
          "archive",
          "AmazonGlacierClient",
          "UploadMultipartPartResult",
          "AWS SDK",
          "ProfileCredentialsProvider",
          "part size",
          "CompleteMultipartUploadRequest",
          "InitiateMultipartUploadRequest",
          "Amazon S3 Glacier",
          "UploadMultipartPartRequest",
          "Multipart Upload",
          "TreeHashGenerator",
          "BinaryUtils"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_145",
      "text": "Depending\non the file you are uploading, the method either uploads archive in a single operation or uses the\nmultipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts. \u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API. For more information about the high-level and low-level APIs, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier. Topics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for .NET. Uploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nFor granular control of the upload, you can use the low-level API, where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for .NET. Uploading Large Archives in Parts API Version 2012-06-01 133\n\nAmazon S3 Glacier Developer Guide\n1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.",
      "start_idx": 245189,
      "end_idx": 247022,
      "metadata": {
        "num_sentences": 14,
        "num_words": 314,
        "breakpoint_idx": 1512,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4754545610029619,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "multipart upload",
            "archive",
            "high-level API",
            "low-level API",
            "AmazonGlacierClient",
            "AWS Region",
            "REST implementation",
            "upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "AWS Region",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Multipart Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using the AWS SDK for .NET, covering both high-level and low-level APIs for single or multipart uploads based on archive size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives to Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs for uploading archives?",
            "How can I configure multipart uploads using the low-level API in AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "low-level API",
          "AWS Region",
          "archive",
          "upload",
          "AmazonGlacierClient",
          "REST implementation",
          "API Version 2012-06-01",
          "high-level API",
          "Amazon S3 Glacier",
          "multipart upload",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_146",
      "text": "2. Initiate multipart upload by calling the InitiateMultipartUpload method. You need to provide the vault name to which you want to upload the archive, the part size you\nwant to use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID. 3.",
      "start_idx": 247023,
      "end_idx": 247405,
      "metadata": {
        "num_sentences": 6,
        "num_words": 60,
        "breakpoint_idx": 1518,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23195390701293944,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Method Invocation"
            ]
          },
          "keywords": [
            "InitiateMultipartUpload",
            "vault name",
            "archive",
            "part size",
            "description",
            "InitiateMultipartUploadRequest",
            "upload ID",
            "S3 Glacier",
            "multipart upload",
            "archive parts"
          ],
          "entities": [
            "InitiateMultipartUpload",
            "InitiateMultipartUploadRequest",
            "S3 Glacier",
            "upload ID",
            "vault name"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "Cloud Storage",
            "API Methods"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "InitiateMultipartUploadRequest"
          ]
        },
        "semantic": {
          "summary": "The InitiateMultipartUpload method is used to start a multipart upload in S3 Glacier by specifying the vault name, part size, and an optional description, resulting in an upload ID being returned.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I start a multipart upload in S3 Glacier?",
            "What information is required to initiate a multipart upload?",
            "What does the InitiateMultipartUpload method return?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "vault name",
          "S3 Glacier",
          "archive",
          "InitiateMultipartUpload",
          "part size",
          "InitiateMultipartUploadRequest",
          "archive parts",
          "description",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_147",
      "text": "Upload parts by calling the UploadMultipartPart method. For each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID. 4. Complete the multipart upload by calling the CompleteMultipartUpload method. You need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID. Example: Uploading a Large Archive in Parts Using the Amazon SDK for .NET\nThe following C# code example uses the AWS SDK for .NET to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Code\nExamples. You need to update the code as shown with the name of a file you want to upload. Example\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadMPU\n{\nUploading Large Archives in Parts API Version 2012-06-01 134\n\nAmazon S3 Glacier Developer Guide\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\nstatic long partSize = 4194304; // 4 MB.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 218,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31696260240342883,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "UploadMultipartPart",
            "CompleteMultipartUpload",
            "vault name",
            "byte range",
            "checksum",
            "upload ID",
            "archive ID",
            "multipart upload",
            "Amazon SDK for .NET",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "examplevault",
            "ArchiveUploadMPU",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives in parts to Amazon S3 Glacier using the AWS SDK for .NET, detailing the steps and required parameters for multipart uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the required parameters for uploading parts to Amazon S3 Glacier?",
            "How can I use the AWS SDK for .NET to upload a large archive in parts?",
            "What is the process for completing a multipart upload in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "checksum",
          "vault name",
          "CompleteMultipartUpload",
          "byte range",
          "S3 Glacier",
          "examplevault",
          "archive ID",
          "AWS SDK for .NET",
          "API Version 2012-06-01",
          "UploadMultipartPart",
          "Amazon S3 Glacier",
          "ArchiveUploadMPU",
          "multipart upload",
          "Amazon SDK for .NET",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_148",
      "text": "public static void Main(string[] args)\n{\nAmazonGlacierClient client;\nList<string> partChecksumList = new List<string>();\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Uploading an archive. \");\nstring uploadId = InitiateMultipartUpload(client);\npartChecksumList = UploadParts(uploadId, client);\nstring archiveId = CompleteMPU(uploadId, client, partChecksumList);\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic string InitiateMultipartUpload(AmazonGlacierClient client)\n{\nInitiateMultipartUploadRequest initiateMPUrequest = new\nInitiateMultipartUploadRequest()\n{\nVaultName = vaultName,\nPartSize = partSize,\nArchiveDescription = \"Test doc uploaded using MPU.\" };\nInitiateMultipartUploadResponse initiateMPUresponse =\nclient.InitiateMultipartUpload(initiateMPUrequest);\nreturn initiateMPUresponse.UploadId;\nUploading Large Archives in Parts API Version 2012-06-01 135\n\nAmazon S3 Glacier Developer Guide\n}\nstatic List<string> UploadParts(string uploadID, AmazonGlacierClient client)\n{\nList<string> partChecksumList = new List<string>();\nlong currentPosition = 0;\nvar buffer = new byte[Convert.ToInt32(partSize)];\nlong fileLength = new FileInfo(archiveToUpload).Length;\nusing (FileStream fileToUpload = new FileStream(archiveToUpload, FileMode.Open,\nFileAccess.Read))\n{\nwhile (fileToUpload.Position < fileLength)\n{\nStream uploadPartStream = GlacierUtils.CreatePartStream(fileToUpload,\npartSize);\nstring checksum = TreeHashGenerator.CalculateTreeHash(uploadPartStream);\npartChecksumList.Add(checksum);\n// Upload part. UploadMultipartPartRequest uploadMPUrequest = new\nUploadMultipartPartRequest()\n{\nVaultName = vaultName,\nBody = uploadPartStream,\nChecksum = checksum,\nUploadId = uploadID\n};\nuploadMPUrequest.SetRange(currentPosition, currentPosition +\nuploadPartStream.Length - 1);\nclient.UploadMultipartPart(uploadMPUrequest);\ncurrentPosition = currentPosition + uploadPartStream.Length;\n}\n}\nreturn partChecksumList;\n}\nstatic string CompleteMPU(string uploadID, AmazonGlacierClient client, List<string>\npartChecksumList)\n{\nlong fileLength = new FileInfo(archiveToUpload).Length;\nCompleteMultipartUploadRequest completeMPUrequest = new\nCompleteMultipartUploadRequest()\nUploading Large Archives in Parts API Version 2012-06-01 136\n\nAmazon S3 Glacier Developer Guide\n{\nUploadId = uploadID,\nArchiveSize = fileLength.ToString(),\nChecksum = TreeHashGenerator.CalculateTreeHash(partChecksumList),\nVaultName = vaultName\n};\nCompleteMultipartUploadResponse completeMPUresponse =\nclient.CompleteMultipartUpload(completeMPUrequest);\nreturn completeMPUresponse.ArchiveId;\n}\n}\n}\nUploading Large Archives in Parts Using the REST API\nAs described in Uploading Large Archives in Parts (Multipart Upload), multipart upload refers to a\nset of operations that enable you to upload an archive in parts and perform related operations. For\nmore information about these operations, see the following API reference topics:\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\nDownloading an Archive in S3 Glacier\nAmazon S3 Glacier provides a management console, which you can use to create and delete vaults. However, you cannot download archives from S3 Glacier by using the management console. To download data, such as photos, videos, and other documents, you must either use the AWS\nCommand Line Interface (AWS CLI) or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs. For information about using S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. To install the AWS CLI, see AWS Command Line Interface.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 456,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4214466518825955,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Multipart Upload",
              "REST API",
              "AWS SDKs",
              "AWS CLI"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "archive",
            "InitiateMultipartUpload",
            "UploadMultipartPartRequest",
            "CompleteMultipartUploadRequest",
            "TreeHashGenerator",
            "vaultName",
            "partSize",
            "AWS CLI"
          ],
          "entities": [
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "CompleteMultipartUploadResponse",
            "AWS Command Line Interface",
            "TreeHashGenerator"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload in Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDK for .NET",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives in parts using Amazon S3 Glacier's multipart upload process, including initiating uploads, uploading parts, and completing the process. It also briefly mentions downloading archives and related API operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload in Amazon S3 Glacier?",
            "What are the API operations involved in uploading large archives in parts?",
            "How can I download archives from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload in Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "archive",
          "vaultName",
          "AWS CLI",
          "AmazonGlacierClient",
          "InitiateMultipartUpload",
          "partSize",
          "CompleteMultipartUploadRequest",
          "CompleteMultipartUploadResponse",
          "InitiateMultipartUploadRequest",
          "Amazon S3 Glacier",
          "UploadMultipartPartRequest",
          "AWS Command Line Interface",
          "multipart upload",
          "TreeHashGenerator"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_149",
      "text": "The following topics describe how to\nDownloading an Archive API Version 2012-06-01 137\n\nAmazon S3 Glacier Developer Guide\ndownload archives to S3 Glacier by using the AWS SDK for Java, the AWS SDK for .NET, and the\nAmazon S3 Glacier REST API. Topics\n\u2022 Retrieving S3 Glacier Archives Using AWS Console\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading an Archive by Using the REST API\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS CLI\nRetrieving S3 Glacier Archives Using AWS Console\nRetrieving an archive from Amazon S3 Glacier is an asynchronous operation in which you first\ninitiate a job, and then download the output after the job is completed. To initiate an archive\nretrieval job, you use the Initiate Job (POST jobs) REST API operation or the equivalent in the AWS\nCLI, or the AWS SDKs. Topics\n\u2022 Archive Retrieval Options\n\u2022 Ranged Archive Retrievals\nRetrieving an archive from S3 Glacier is a two-step process. To retrieve an archive\n1. Initiate an archive retrieval job. a. Get the ID of the archive that you want to retrieve. You can get the archive ID from an\ninventory of the vault. You can get the archive ID with the REST API, AWS CLI, or AWS\nSDKs.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 230,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43176485697428385,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Archive Retrieval",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API",
            "Initiate Job",
            "archive ID",
            "Ranged Archive Retrievals",
            "vault inventory"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Archive Retrieval in Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDK Usage",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download archives from Amazon S3 Glacier using various tools such as the AWS SDKs, REST API, and AWS CLI, and describes the steps for initiating and retrieving archive jobs asynchronously.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using the AWS SDK for Java?",
            "What are the steps to retrieve an archive from S3 Glacier using the REST API?",
            "What is the process for initiating an archive retrieval job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Archive Retrieval in Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "vault inventory",
          "AWS CLI",
          "Initiate Job",
          "AWS SDK",
          "archive ID",
          "REST API",
          "Amazon S3 Glacier",
          "Ranged Archive Retrievals",
          "AWS SDK for Java",
          "AWS SDK for .NET",
          "Archive Retrieval"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_150",
      "text": "For more information, see Downloading a Vault Inventory in Amazon S3 Glacier. b. Initiate a job that requests S3 Glacier to prepare an entire archive or a portion of the\narchive for subsequent download by using the Initiate Job (POST jobs) operation. When you initiate a job, S3 Glacier returns a job ID in the response and runs the job\nasynchronously. (You cannot download the job output until after the job is completed, as\ndescribed in Step 2.) Retrieving Archives in Console API Version 2012-06-01 138\n\nAmazon S3 Glacier Developer Guide\nImportant\nFor Standard retrievals only, a data retrieval policy can cause your Initiate Job\nrequest to fail with a PolicyEnforcedException exception. For more information\nabout data retrieval policies, see S3 Glacier Data Retrieval Policies. For more\ninformation about the PolicyEnforcedException exception, see Error Responses. When required, you can restore large segments of the data stored in S3 Glacier. For more\ninformation about restoring data from the S3 Glacier storage classes, see Storage Classes for\nArchiving Objects in the Amazon Simple Storage Service User Guide. 2.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 176,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3546342213948568,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Vault Inventory",
            "Initiate Job",
            "PolicyEnforcedException",
            "data retrieval policy",
            "Error Responses",
            "Standard retrievals",
            "restore data",
            "storage classes",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Inventory",
            "PolicyEnforcedException",
            "Storage Classes",
            "Amazon Simple Storage Service"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Storage Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Initiate Job (POST jobs)"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate a job in Amazon S3 Glacier to retrieve archives and highlights potential issues with data retrieval policies that may cause a PolicyEnforcedException. It also references related resources for restoring data and understanding storage classes.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a job to retrieve data from Amazon S3 Glacier?",
            "What causes a PolicyEnforcedException during a data retrieval request?",
            "Where can I learn more about S3 Glacier data retrieval policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "Standard retrievals",
          "S3 Glacier",
          "data retrieval policy",
          "archive",
          "restore data",
          "Initiate Job",
          "Storage Classes",
          "Vault Inventory",
          "Amazon Simple Storage Service",
          "PolicyEnforcedException",
          "Amazon S3 Glacier",
          "storage classes",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_151",
      "text": "After the job is completed, download the bytes by using the Get Job Output (GET output)\noperation. You can download all bytes or specify a byte range to download only a portion of the job\noutput. For larger output, downloading the output in chunks helps in the event of a download\nfailure, such as a network failure. If you get job output in a single request and there is a\nnetwork failure, you have to restart downloading the output from the beginning. However,\nif you download the output in chunks, in the event of any failure, you need only restart the\ndownload of the smaller portion and not the entire output. S3 Glacier must complete a job before you can get its output. After completion, a job does not\nexpire for at least 24 hours, which means that you can download the output within the 24-hour\nperiod after the job is completed. To determine if your job is complete, check its status by using\none of the following options:\n\u2022 Wait for a job-completion notification \u2013 You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. S3\nGlacier sends a notification only after it completes the job. You can specify an Amazon SNS topic for a job when you initiate the job. In addition to\nspecifying an Amazon SNS topic in your job request, if your vault has notifications set for\narchive retrieval events, then S3 Glacier also publishes a notification to that SNS topic.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 259,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38968426097523085,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Download",
              "Error Handling",
              "Notification"
            ]
          },
          "keywords": [
            "Get Job Output",
            "byte range",
            "S3 Glacier",
            "job completion",
            "Amazon SNS",
            "notification",
            "vault",
            "archive retrieval",
            "network failure",
            "output chunks"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon SNS",
            "job output",
            "archive retrieval events",
            "vault notifications"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to download job output from S3 Glacier, including options for downloading in chunks to handle network failures, and methods to check job completion using Amazon SNS notifications.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download job output from S3 Glacier?",
            "What are the benefits of downloading job output in chunks?",
            "How can I check if an S3 Glacier job is complete?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "network failure",
          "Get Job Output",
          "byte range",
          "S3 Glacier",
          "output chunks",
          "job completion",
          "archive retrieval events",
          "notification",
          "vault notifications",
          "vault",
          "job output",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_152",
      "text": "For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier. Retrieving Archives in Console API Version 2012-06-01 139\n\nAmazon S3 Glacier Developer Guide\n\u2022 Request job information explicitly \u2013 You can also use the S3 Glacier Describe Job API\noperation (Describe Job (GET JobID)) to periodically poll for job information. However, we\nrecommend using Amazon SNS notifications. Note\nThe information that you get by using an Amazon SNS notification is the same as what you\nget by calling the Describe Job API operation. Archive Retrieval Options\nWhen initiating a job to retrieve an archive, you can specify one of the following retrieval options,\nbased on your access time and cost requirements. For information about retrieval pricing, see\nAmazon S3 Glacier Pricing. \u2022 Expedited \u2013 Expedited retrievals allow you to quickly access your data that's stored in the S3\nGlacier Flexible Retrieval storage class or the S3 Intelligent-Tiering Archive Access tier when\noccasional urgent requests for restoring archives are required. For all but the largest archives\n(more than 250 MB), data accessed by using Expedited retrievals is typically made available\nwithin 1\u20135 minutes. Provisioned capacity ensures that retrieval capacity for Expedited retrievals\nis available when you need it. For more information, see Provisioned Capacity. \u2022 Standard \u2013 Standard retrievals allow you to access any of your archives within several hours.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 220,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3518979852849787,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Operation",
              "Retrieval Options",
              "Pricing Information"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "Describe Job API",
            "Amazon SNS",
            "Archive Retrieval",
            "Expedited retrievals",
            "Standard retrievals",
            "Provisioned Capacity",
            "Retrieval pricing",
            "Flexible Retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Job API",
            "Amazon SNS",
            "Expedited retrievals",
            "Provisioned Capacity"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Options",
          "secondary_categories": [
            "Cloud Storage",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "S3 Glacier Describe Job API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Vault Notifications in Amazon S3 Glacier, retrieve archives using various options like Expedited and Standard, and highlights the use of Amazon SNS notifications for job updates over the Describe Job API operation.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the retrieval options available in Amazon S3 Glacier?",
            "How does Expedited retrieval differ from Standard retrieval in Amazon S3 Glacier?",
            "What is the recommended method to get job information in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval Options]",
        "tf_idf_keywords": [
          "Standard retrievals",
          "Retrieval pricing",
          "Expedited retrievals",
          "Provisioned Capacity",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Flexible Retrieval",
          "Describe Job API",
          "Vault Notifications",
          "Archive Retrieval"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_153",
      "text": "Standard retrievals are typically completed within 3\u20135 hours. Standard is the default option for\nretrieval requests that do not specify the retrieval option. \u2022 Bulk \u2013 Bulk retrievals are the lowest-cost S3 Glacier retrieval option, which you can use to\nretrieve large amounts, even petabytes, of data inexpensively in a day. Bulk retrievals are\ntypically completed within 5\u201312 hours. The following table summarizes the archive retrieval options. For information about pricing, see\nAmazon S3 Glacier pricing. To make an Expedited, Standard, or Bulk retrieval, set the Tier request element in the\nRestoreObject REST API operation request to the option that you want, or the equivalent in the\nAWS Command Line Interface (AWS CLI) or AWS SDKs. If you purchased provisioned capacity, all\nExpedited retrievals are automatically served through your provisioned capacity. Retrieving Archives in Console API Version 2012-06-01 140\n\nAmazon S3 Glacier Developer Guide\nProvisioned Capacity\nProvisioned capacity helps ensure that your retrieval capacity for Expedited retrievals is available\nwhen you need it. Each unit of capacity provides that at least three Expedited retrievals can be\nperformed every 5 minutes and provides up to 150 megabytes per second (MBps) of retrieval\nthroughput. If your workload requires highly reliable and predictable access to a subset of your data in minutes,\nwe recommend that you purchase provisioned retrieval capacity.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4272873965176669,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Retrieval Options",
              "Pricing Information",
              "API Usage",
              "Performance Recommendations"
            ]
          },
          "keywords": [
            "Standard retrievals",
            "Bulk retrievals",
            "Expedited retrievals",
            "Provisioned capacity",
            "RestoreObject REST API",
            "AWS CLI",
            "AWS SDKs",
            "retrieval throughput",
            "S3 Glacier pricing",
            "megabytes per second"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "RestoreObject REST API",
            "AWS Command Line Interface",
            "AWS SDKs",
            "Provisioned Capacity"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Options",
          "secondary_categories": [
            "Cloud Storage",
            "Performance Optimization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the retrieval options available in Amazon S3 Glacier, including Expedited, Standard, and Bulk, as well as the benefits of using Provisioned Capacity for predictable and reliable access to data.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the differences between Expedited, Standard, and Bulk retrieval options in Amazon S3 Glacier?",
            "How does Provisioned Capacity enhance retrieval performance for Expedited requests?",
            "What is the typical completion time for Bulk retrievals in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval Options]",
        "tf_idf_keywords": [
          "Standard retrievals",
          "Provisioned capacity",
          "RestoreObject REST API",
          "AWS CLI",
          "Bulk retrievals",
          "Expedited retrievals",
          "AWS SDKs",
          "Provisioned Capacity",
          "S3 Glacier pricing",
          "retrieval throughput",
          "Amazon S3 Glacier",
          "megabytes per second",
          "AWS Command Line Interface"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_154",
      "text": "Without provisioned capacity,\nExpedited retrievals are typically accepted, except for rare situations of unusually high demand. However, if you require access to Expedited retrievals under all circumstances, you must purchase\nprovisioned retrieval capacity. Purchasing Provisioned Capacity\nYou can purchase provisioned capacity units by using the S3 Glacier console, the Purchase\nProvisioned Capacity (POST provisioned-capacity) REST API operation, the AWS SDKs, or the AWS\nCLI. For provisioned capacity pricing information, see Amazon S3 Glacier Pricing. A provisioned capacity unit lasts for one month, starting at the date and time of purchase. If the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28. To purchase provisioned capacity by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24631833163174716,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Pricing Information"
            ]
          },
          "keywords": [
            "provisioned capacity",
            "Expedited retrievals",
            "S3 Glacier",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "provisioned-capacity",
            "pricing",
            "expiration date",
            "AWS Management Console"
          ],
          "entities": [
            "S3 Glacier console",
            "Amazon S3 Glacier Pricing",
            "AWS CLI",
            "AWS SDKs",
            "Provisioned Capacity"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Provisioned Capacity Management",
          "secondary_categories": [
            "AWS S3 Glacier",
            "Data Retrieval Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process and benefits of purchasing provisioned retrieval capacity for Amazon S3 Glacier to ensure expedited retrievals under all circumstances, including pricing details and expiration rules.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I purchase provisioned capacity for Amazon S3 Glacier?",
            "What is the duration and expiration policy for a provisioned capacity unit?",
            "Where can I find pricing information for provisioned capacity in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Provisioned Capacity Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "S3 Glacier console",
          "AWS CLI",
          "Expedited retrievals",
          "AWS SDKs",
          "expiration date",
          "Provisioned Capacity",
          "REST API",
          "Amazon S3 Glacier Pricing",
          "provisioned capacity",
          "Amazon S3 Glacier",
          "pricing",
          "AWS Management Console",
          "provisioned-capacity"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_155",
      "text": "In the left navigation pane, choose Data retrieval settings. 3. Under Provisioned capacity units (PCUs), choose Purchase PCU. The Purchase PCU dialog\nbox appears. 4. If you want to purchase provisioned capacity, enter confirm in the To confirm purchase box. 5.",
      "start_idx": 260786,
      "end_idx": 261046,
      "metadata": {
        "num_sentences": 7,
        "num_words": 41,
        "breakpoint_idx": 1609,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2250340779622396,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step instructions",
              "Configuration"
            ]
          },
          "keywords": [
            "Data retrieval settings",
            "Provisioned capacity units",
            "PCU",
            "Purchase PCU",
            "dialog box",
            "confirm purchase"
          ],
          "entities": [
            "Data retrieval settings",
            "Provisioned capacity units",
            "PCU"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Provisioned Capacity Management",
          "secondary_categories": [
            "Data Retrieval Settings",
            "Capacity Units Configuration"
          ],
          "mentioned_services": [
            "Provisioned capacity units (PCUs)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to purchase provisioned capacity units (PCUs) in the Data retrieval settings using the Purchase PCU dialog box.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I purchase provisioned capacity units (PCUs)?",
            "What steps are involved in confirming a PCU purchase?",
            "Where can I find the Purchase PCU option in the navigation pane?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Provisioned Capacity Management]",
        "tf_idf_keywords": [
          "confirm purchase",
          "Data retrieval settings",
          "PCU",
          "Purchase PCU",
          "Provisioned capacity units (PCUs)",
          "dialog box",
          "Provisioned capacity units"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_156",
      "text": "Choose Purchase PCU. Retrieving Archives in Console API Version 2012-06-01 141\n\nAmazon S3 Glacier Developer Guide\nRanged Archive Retrievals\nWhen you retrieve an archive from S3 Glacier, you can optionally specify a range, or portion, of the\narchive to retrieve. The default is to retrieve the whole archive. Specifying a range of bytes can be\nhelpful when you want to do the following:\n\u2022 Manage your data downloads \u2013 S3 Glacier allows retrieved data to be downloaded for 24 hours\nafter the retrieval request is completed. Therefore, you might want to retrieve only portions\nof the archive so that you can manage the schedule of downloads within the given download\nwindow. \u2022 Retrieve a targeted part of a large archive \u2013 For example, suppose you have previously\naggregated many files and uploaded them as a single archive, and now you want to retrieve a\nfew of the files. In this case, you can specify a range of the archive that contains the files that you\nare interested in by using one retrieval request. Or, you can initiate multiple retrieval requests,\neach with a range for one or more files. When initiating a retrieval job using range retrievals, you must provide a range that is megabyte\naligned. In other words, the byte range can start at zero (the beginning of your archive), or at any\n1-MB interval thereafter (1 MB, 2 MB, 3 MB, and so on). The end of the range can either be the end of your archive or any 1 MB interval greater than the\nbeginning of your range. Furthermore, if you want to get checksum values when you download\nthe data (after the retrieval job is completed), the range that you request in the job initiation must\nalso be tree-hash aligned.",
      "start_idx": 261047,
      "end_idx": 268101,
      "metadata": {
        "num_sentences": 12,
        "num_words": 294,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3575388590494792,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "range retrievals",
            "megabyte aligned",
            "tree-hash aligned",
            "retrieval job",
            "byte range",
            "download window",
            "checksum values",
            "Console API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Console API Version 2012-06-01",
            "archive",
            "retrieval request",
            "range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Console API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to perform ranged archive retrievals in Amazon S3 Glacier, allowing users to retrieve specific portions of an archive instead of the entire file, with details on byte range alignment and checksum requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a specific portion of an archive in Amazon S3 Glacier?",
            "What are the byte range alignment requirements for ranged archive retrievals?",
            "How can I manage data downloads for large archives in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Retrieval]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "megabyte aligned",
          "byte range",
          "archive",
          "range",
          "retrieval request",
          "Console API Version 2012-06-01",
          "download window",
          "checksum values",
          "archive retrieval",
          "Amazon S3 Glacier",
          "tree-hash aligned",
          "Console API",
          "range retrievals",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_157",
      "text": "You can use checksums to help ensure that your data was not corrupted\nduring transmission. For more information about megabyte alignment and tree-hash alignment,\nsee Receiving Checksums When Downloading Data. Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for\nJava\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\ndownload an archive. Topics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for Java\nDownloading an Archive Using Java API Version 2012-06-01 142\n\nAmazon S3 Glacier Developer Guide\nDownloading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the download method you\ncan use to download an archive. Important\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options. Example: Downloading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region (us-west-2). For step-by-step instructions to run this sample, see Running Java Examples for Amazon S3 Glacier\nUsing Eclipse. You need to update the code as shown with an existing archive ID and the local file\npath where you want to save the downloaded archive. Example\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class ArchiveDownloadHighLevel {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\nDownloading an Archive Using Java API Version 2012-06-01 143\n\nAmazon S3 Glacier Developer Guide\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nSystem.out.println(\"Downloaded file to \" + downloadFilePath);\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for Java\nThe following are the steps to retrieve a vault inventory using the AWS SDK for Java low-level API.",
      "start_idx": 261047,
      "end_idx": 268101,
      "metadata": {
        "num_sentences": 12,
        "num_words": 434,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3586653218124852,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "checksums",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "archive retrieval",
            "vault inventory",
            "Java API",
            "megabyte alignment"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "AWS SDK for Java",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "Java",
            "Eclipse",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to download an archive from Amazon S3 Glacier, including both high-level and low-level APIs, with example code for implementation. It also highlights the use of Amazon SNS and SQS for managing archive retrieval and polling processes.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the role of Amazon SNS and SQS in the archive retrieval process?",
            "What are the steps to implement archive downloading using the high-level API in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "Java API",
          "vault inventory",
          "ArchiveTransferManager",
          "Amazon SQS",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier",
          "checksums",
          "AWS SDK for Java",
          "megabyte alignment"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_158",
      "text": "1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region. 2. Initiate an archive-retrieval job by executing the initiateJob method. You provide job information, such as the archive ID of the archive you want to download\nand the optional Amazon SNS topic to which you want Amazon S3 Glacier (S3 Glacier) to\nDownloading an Archive Using Java API Version 2012-06-01 144\n\nAmazon S3 Glacier Developer Guide\npost a job completion message, by creating an instance of the InitiateJobRequest\nclass. S3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class. JobParameters jobParameters = new JobParameters()\n.withArchiveId(\"*** provide an archive id ***\")\n.withDescription(\"archive retrieval\")\n.withRetrievalByteRange(\"*** provide a retrieval range***\") // optional\n.withType(\"archive-retrieval\");\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive. For example, you can update the preceding request by adding the following statement\nto request S3 Glacier to prepare only the 1 MB to 2 MB portion of the archive. int ONE_MEG = 1048576;\nString retrievalByteRange = String.format(\"%s-%s\", ONE_MEG, 2*ONE_MEG -1);\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withRetrievalByteRange(retrievalByteRange)\n.withSNSTopic(snsTopicARN);\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\n3. Wait for the job to complete.",
      "start_idx": 261047,
      "end_idx": 268101,
      "metadata": {
        "num_sentences": 13,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2432528764773638,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "AWS Region",
            "archive-retrieval",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "Amazon SNS",
            "byte range",
            "S3 Glacier",
            "vaultName"
          ],
          "entities": [
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "Amazon S3 Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "AWS SDK for Java",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "InitiateJobResult"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to use the Amazon S3 Glacier Java API to retrieve an archive by creating a client, initiating a retrieval job, and optionally specifying a byte range for partial retrieval.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive-retrieval job using the Amazon S3 Glacier Java API?",
            "How can I specify a byte range for partial archive retrieval in S3 Glacier?",
            "What is the purpose of the InitiateJobRequest and JobParameters classes in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "byte range",
          "AWS Region",
          "S3 Glacier",
          "vaultName",
          "AmazonGlacierClient",
          "archive-retrieval",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "JobParameters",
          "InitiateJobResult"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_159",
      "text": "You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading an Archive Using Java API Version 2012-06-01 145\n\nAmazon S3 Glacier Developer Guide\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job. You can also poll S3 Glacier by calling the describeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach. 4.",
      "start_idx": 268102,
      "end_idx": 268712,
      "metadata": {
        "num_sentences": 5,
        "num_words": 101,
        "breakpoint_idx": 1651,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.24130043983459473,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Notification",
              "Polling"
            ]
          },
          "keywords": [
            "job output",
            "Amazon SNS",
            "S3 Glacier",
            "describeJob",
            "notification configuration",
            "vault",
            "Java API",
            "job completion",
            "Amazon Simple Notification Service",
            "archive"
          ],
          "entities": [
            "Amazon SNS",
            "S3 Glacier",
            "describeJob",
            "Amazon S3 Glacier Developer Guide",
            "Java API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Notifications",
          "secondary_categories": [
            "Job Management",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java API"
          ]
        },
        "semantic": {
          "summary": "This section explains how to determine when a job output is ready for download in Amazon S3 Glacier, either by setting up an Amazon SNS topic for notifications or by polling the job status using the describeJob method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I get notified when a job in S3 Glacier is complete?",
            "What is the recommended method for tracking job completion in S3 Glacier?",
            "How do I use the describeJob method to check job status in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Notifications]",
        "tf_idf_keywords": [
          "Java API",
          "notification configuration",
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "archive",
          "Java API Version 2012-06-01",
          "job completion",
          "Amazon Simple Notification Service",
          "vault",
          "job output",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "describeJob"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_160",
      "text": "Download the job output (archive data) by executing the getJobOutput method. You provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResult object. GetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withVaultName(\"*** provide a vault name ****\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody() // Provides the input stream. The preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest. GetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withRange(\"bytes=0-1048575\") // Download only the first 1 MB of the\noutput. .withVaultName(\"*** provide a vault name ****\");\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data. To verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response. For an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash).",
      "start_idx": 268713,
      "end_idx": 281075,
      "metadata": {
        "num_sentences": 11,
        "num_words": 226,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3983306884765625,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeSnippet",
              "DataRetrieval",
              "ChecksumValidation"
            ]
          },
          "keywords": [
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "S3 Glacier",
            "archive data",
            "byte range",
            "checksum",
            "SHA256TreeHash",
            "job ID",
            "vault name"
          ],
          "entities": [
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "S3 Glacier",
            "SHA256TreeHash",
            "client.getJobOutput"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "Checksum Verification"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "GetJobOutputRequest",
            "GetJobOutputResult"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the GetJobOutput method to download job output from S3 Glacier, either entirely or in specific byte ranges, and verify the integrity of the downloaded data using checksums.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I download job output from S3 Glacier?",
            "How do I specify a byte range when downloading data from S3 Glacier?",
            "How can I verify the integrity of downloaded data using checksums?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "checksum",
          "vault name",
          "S3 Glacier",
          "byte range",
          "SHA256TreeHash",
          "GetJobOutputRequest",
          "archive data",
          "GetJobOutput",
          "job ID",
          "client.getJobOutput",
          "GetJobOutputResult"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_161",
      "text": "You can use this value\nDownloading an Archive Using Java API Version 2012-06-01 146\n\nAmazon S3 Glacier Developer Guide\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier. For a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for Java\u2014Download Output in Chunks . Example 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single getJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for Java\u2014Download Output in Chunks . The example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic. S3 Glacier sends a notification to this topic after it completes the job. \u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue.",
      "start_idx": 268713,
      "end_idx": 281075,
      "metadata": {
        "num_sentences": 11,
        "num_words": 276,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3744385459206321,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "tree-hash",
            "checksum",
            "GetJobOutput",
            "AWS SDK for Java",
            "archive",
            "Amazon SNS",
            "Amazon SQS",
            "byte range",
            "job request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "GetJobOutput"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "Checksum Verification"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to verify the accuracy of downloaded byte ranges from Amazon S3 Glacier using checksums and provides Java API examples for retrieving archives, including downloading output in chunks or as a single request.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify the accuracy of a downloaded byte range from Amazon S3 Glacier?",
            "What is an example of downloading an archive using the AWS SDK for Java?",
            "How do I set up Amazon SNS and SQS for S3 Glacier job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "checksum",
          "byte range",
          "archive",
          "GetJobOutput",
          "Amazon SQS",
          "Amazon SNS",
          "job request",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "tree-hash"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_162",
      "text": "\u2022 Initiates a job to download the specified archive. In the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job. \u2022 Periodically checks the Amazon SQS queue for a message that contains the job ID. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. \u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue that it created. Downloading an Archive Using Java API Version 2012-06-01 147\n\nAmazon S3 Glacier Developer Guide\nimport java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileOutputStream;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.codehaus.jackson.JsonFactory;\nimport org.codehaus.jackson.JsonNode;\nimport org.codehaus.jackson.JsonParseException;\nimport org.codehaus.jackson.JsonParser;\nimport org.codehaus.jackson.map.ObjectMapper;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.GetJobOutputRequest;\nimport com.amazonaws.services.glacier.model.GetJobOutputResult;\nimport com.amazonaws.services.glacier.model.InitiateJobRequest;\nimport com.amazonaws.services.glacier.model.InitiateJobResult;\nimport com.amazonaws.services.glacier.model.JobParameters;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sns.model.CreateTopicRequest;\nimport com.amazonaws.services.sns.model.CreateTopicResult;\nimport com.amazonaws.services.sns.model.DeleteTopicRequest;\nimport com.amazonaws.services.sns.model.SubscribeRequest;\nimport com.amazonaws.services.sns.model.SubscribeResult;\nimport com.amazonaws.services.sns.model.UnsubscribeRequest;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nDownloading an Archive Using Java API Version 2012-06-01 148\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.sqs.model.CreateQueueResult;\nimport com.amazonaws.services.sqs.model.DeleteQueueRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesResult;\nimport com.amazonaws.services.sqs.model.Message;\nimport com.amazonaws.services.sqs.model.ReceiveMessageRequest;\nimport com.amazonaws.services.sqs.model.SetQueueAttributesRequest;\npublic class AmazonGlacierDownloadArchiveWithSQSPolling {\npublic static String archiveId = \"*** provide archive ID ****\";\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String snsTopicName = \"*** provide topic name ***\";\npublic static String sqsQueueName = \"*** provide queue name ***\";\npublic static String sqsQueueARN;\npublic static String sqsQueueURL;\npublic static String snsTopicARN;\npublic static String snsSubscriptionARN;\npublic static String fileName = \"*** provide file name ***\";\npublic static String region = \"*** region ***\";\npublic static long sleepTime = 600;\npublic static AmazonGlacierClient client;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.\" + region + \".amazonaws.com\");\nsqsClient = new AmazonSQSClient(credentials);\nsqsClient.setEndpoint(\"https://sqs.\" + region + \".amazonaws.com\");\nsnsClient = new AmazonSNSClient(credentials);\nsnsClient.setEndpoint(\"https://sns.\" + region + \".amazonaws.com\");\ntry {\nsetupSQS();\nsetupSNS();\nString jobId = initiateJobRequest();\nSystem.out.println(\"Jobid = \" + jobId);\nDownloading an Archive Using Java API Version 2012-06-01 149\n\nAmazon S3 Glacier Developer Guide\nBoolean success = waitForJobToComplete(jobId, sqsQueueURL);\nif (!success) { throw new Exception(\"Job did not complete\nsuccessfully. \"); }\ndownloadJobOutput(jobId);\ncleanUp();\n} catch (Exception e) {\nSystem.err.println(\"Archive retrieval failed. \");\nSystem.err.println(e);\n}\n}\nprivate static void setupSQS() {\nCreateQueueRequest request = new CreateQueueRequest()\n.withQueueName(sqsQueueName);\nCreateQueueResult result = sqsClient.createQueue(request);\nsqsQueueURL = result.getQueueUrl();\nGetQueueAttributesRequest qRequest = new GetQueueAttributesRequest()\n.withQueueUrl(sqsQueueURL)\n.withAttributeNames(\"QueueArn\");\nGetQueueAttributesResult qResult = sqsClient.getQueueAttributes(qRequest);\nsqsQueueARN = qResult.getAttributes().get(\"QueueArn\");\nPolicy sqsPolicy =\nnew Policy().withStatements(\nnew Statement(Effect.Allow)\n.withPrincipals(Principal.AllUsers)\n.withActions(SQSActions.SendMessage)\n.withResources(new Resource(sqsQueueARN)));\nMap<String, String> queueAttributes = new HashMap<String, String>();\nqueueAttributes.put(\"Policy\", sqsPolicy.toJson());\nsqsClient.setQueueAttributes(new SetQueueAttributesRequest(sqsQueueURL,\nqueueAttributes));\n}\nprivate static void setupSNS() {\nCreateTopicRequest request = new CreateTopicRequest()\n.withName(snsTopicName);\nCreateTopicResult result = snsClient.createTopic(request);\nDownloading an Archive Using Java API Version 2012-06-01 150\n\nAmazon S3 Glacier Developer Guide\nsnsTopicARN = result.getTopicArn();\nSubscribeRequest request2 = new SubscribeRequest()\n.withTopicArn(snsTopicARN)\n.withEndpoint(sqsQueueARN)\n.withProtocol(\"sqs\");\nSubscribeResult result2 = snsClient.subscribe(request2);\nsnsSubscriptionARN = result2.getSubscriptionArn();\n}\nprivate static String initiateJobRequest() {\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withSNSTopic(snsTopicARN);\nInitiateJobRequest request = new InitiateJobRequest()\n.withVaultName(vaultName)\n.withJobParameters(jobParameters);\nInitiateJobResult response = client.initiateJob(request);\nreturn response.getJobId();\n}\nprivate static Boolean waitForJobToComplete(String jobId, String sqsQueueUrl)\nthrows InterruptedException, JsonParseException, IOException {\nBoolean messageFound = false;\nBoolean jobSuccessful = false;\nObjectMapper mapper = new ObjectMapper();\nJsonFactory factory = mapper.getJsonFactory();\nwhile (!messageFound) {\nList<Message> msgs = sqsClient.receiveMessage(\nnew\nReceiveMessageRequest(sqsQueueUrl).withMaxNumberOfMessages(10)).getMessages();\nif (msgs.size() > 0) {\nfor (Message m : msgs) {\nJsonParser jpMessage = factory.createJsonParser(m.getBody());\nJsonNode jobMessageNode = mapper.readTree(jpMessage);\nString jobMessage = jobMessageNode.get(\"Message\").getTextValue();\nDownloading an Archive Using Java API Version 2012-06-01 151\n\nAmazon S3 Glacier Developer Guide\nJsonParser jpDesc = factory.createJsonParser(jobMessage);\nJsonNode jobDescNode = mapper.readTree(jpDesc);\nString retrievedJobId = jobDescNode.get(\"JobId\").getTextValue();\nString statusCode = jobDescNode.get(\"StatusCode\").getTextValue();\nif (retrievedJobId.equals(jobId)) {\nmessageFound = true;\nif (statusCode.equals(\"Succeeded\")) {\njobSuccessful = true;\n}\n}\n}\n} else {\nThread.sleep(sleepTime * 1000);\n}\n}\nreturn (messageFound && jobSuccessful);\n}\nprivate static void downloadJobOutput(String jobId) throws IOException {\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n.withVaultName(vaultName)\n.withJobId(jobId);\nGetJobOutputResult getJobOutputResult =\nclient.getJobOutput(getJobOutputRequest);\nInputStream input = new BufferedInputStream(getJobOutputResult.getBody());\nOutputStream output = null;\ntry {\noutput = new BufferedOutputStream(new FileOutputStream(fileName));\nbyte[] buffer = new byte[1024 * 1024];\nint bytesRead = 0;\ndo {\nbytesRead = input.read(buffer);\nif (bytesRead <= 0) break;\noutput.write(buffer, 0, bytesRead);\n} while (bytesRead > 0);\n} catch (IOException e) {\nthrow new AmazonClientException(\"Unable to save archive\", e);\n} finally {\nDownloading an Archive Using Java API Version 2012-06-01 152\n\nAmazon S3 Glacier Developer Guide\ntry {input.close();} catch (Exception e) {}\ntry {output.close();} catch (Exception e) {}\n}\nSystem.out.println(\"Retrieved archive to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\u2014Download\nOutput in Chunks\nThe following Java code example retrieves an archive from S3 Glacier. The code example\ndownloads the job output in chunks by specifying byte range in a GetJobOutputRequest object.",
      "start_idx": 268713,
      "end_idx": 281075,
      "metadata": {
        "num_sentences": 13,
        "num_words": 831,
        "chunk_type": "semantic_split",
        "coherence_score": 0.315335444914989,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Interaction",
              "AWS SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Java API",
            "archive retrieval",
            "Amazon SNS",
            "Amazon SQS",
            "JobParameters",
            "GetJobOutputRequest",
            "InitiateJobRequest",
            "ProfileCredentialsProvider",
            "AWS SDK"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "JobId",
            "SNS Topic ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Cloud Storage",
            "Messaging Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "Java",
            "Jackson Library",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java example for downloading an archive from Amazon S3 Glacier using the AWS SDK. It includes steps for setting up Amazon SNS and SQS, initiating a retrieval job, polling for job completion, downloading the archive, and cleaning up resources.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using the Java SDK?",
            "What are the steps to set up Amazon SNS and SQS for archive retrieval in Java?",
            "How do I handle job completion and download output in an S3 Glacier retrieval process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "Java API",
          "InitiateJobRequest",
          "GetJobOutputRequest",
          "AmazonGlacierClient",
          "AWS SDK",
          "JobId",
          "ProfileCredentialsProvider",
          "Amazon SQS",
          "AmazonSNSClient",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier",
          "AmazonSQSClient",
          "JobParameters",
          "SNS Topic ARN"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_163",
      "text": "import java.io.BufferedInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nDownloading an Archive Using Java API Version 2012-06-01 153\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.glacier.model.GetJobOutputRequest;\nimport com.amazonaws.services.glacier.model.GetJobOutputResult;\nimport com.amazonaws.services.glacier.model.InitiateJobRequest;\nimport com.amazonaws.services.glacier.model.InitiateJobResult;\nimport com.amazonaws.services.glacier.model.JobParameters;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sns.model.CreateTopicRequest;\nimport com.amazonaws.services.sns.model.CreateTopicResult;\nimport com.amazonaws.services.sns.model.DeleteTopicRequest;\nimport com.amazonaws.services.sns.model.SubscribeRequest;\nimport com.amazonaws.services.sns.model.SubscribeResult;\nimport com.amazonaws.services.sns.model.UnsubscribeRequest;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nimport com.amazonaws.services.sqs.model.CreateQueueResult;\nimport com.amazonaws.services.sqs.model.DeleteQueueRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesResult;\nimport com.amazonaws.services.sqs.model.Message;\nimport com.amazonaws.services.sqs.model.ReceiveMessageRequest;\nimport com.amazonaws.services.sqs.model.SetQueueAttributesRequest;\npublic class ArchiveDownloadLowLevelWithRange {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String archiveId = \"*** provide archive id ***\";\npublic static String snsTopicName = \"glacier-temp-sns-topic\";\npublic static String sqsQueueName = \"glacier-temp-sqs-queue\";\npublic static long downloadChunkSize = 4194304; // 4 MB\npublic static String sqsQueueARN;\npublic static String sqsQueueURL;\npublic static String snsTopicARN;\npublic static String snsSubscriptionARN;\npublic static String fileName = \"*** provide file name to save archive to ***\";\npublic static String region = \"*** region ***\";\npublic static long sleepTime = 600;\npublic static AmazonGlacierClient client;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nDownloading an Archive Using Java API Version 2012-06-01 154\n\nAmazon S3 Glacier Developer Guide\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.\" + region + \".amazonaws.com\");\nsqsClient = new AmazonSQSClient(credentials);\nsqsClient.setEndpoint(\"https://sqs.\" + region + \".amazonaws.com\");\nsnsClient = new AmazonSNSClient(credentials);\nsnsClient.setEndpoint(\"https://sns.\" + region + \".amazonaws.com\");\ntry {\nsetupSQS();\nsetupSNS();\nString jobId = initiateJobRequest();\nSystem.out.println(\"Jobid = \" + jobId);\nlong archiveSizeInBytes = waitForJobToComplete(jobId, sqsQueueURL);\nif (archiveSizeInBytes==-1) { throw new Exception(\"Job did not complete\nsuccessfully. \"); }\ndownloadJobOutput(jobId, archiveSizeInBytes);\ncleanUp();\n} catch (Exception e) {\nSystem.err.println(\"Archive retrieval failed. \");\nSystem.err.println(e);\n}\n}\nprivate static void setupSQS() {\nCreateQueueRequest request = new CreateQueueRequest()\n.withQueueName(sqsQueueName);\nCreateQueueResult result = sqsClient.createQueue(request);\nsqsQueueURL = result.getQueueUrl();\nGetQueueAttributesRequest qRequest = new GetQueueAttributesRequest()\n.withQueueUrl(sqsQueueURL)\n.withAttributeNames(\"QueueArn\");\nGetQueueAttributesResult qResult = sqsClient.getQueueAttributes(qRequest);\nsqsQueueARN = qResult.getAttributes().get(\"QueueArn\");\nDownloading an Archive Using Java API Version 2012-06-01 155\n\nAmazon S3 Glacier Developer Guide\nPolicy sqsPolicy =\nnew Policy().withStatements(\nnew Statement(Effect.Allow)\n.withPrincipals(Principal.AllUsers)\n.withActions(SQSActions.SendMessage)\n.withResources(new Resource(sqsQueueARN)));\nMap<String, String> queueAttributes = new HashMap<String, String>();\nqueueAttributes.put(\"Policy\", sqsPolicy.toJson());\nsqsClient.setQueueAttributes(new SetQueueAttributesRequest(sqsQueueURL,\nqueueAttributes));\n}\nprivate static void setupSNS() {\nCreateTopicRequest request = new CreateTopicRequest()\n.withName(snsTopicName);\nCreateTopicResult result = snsClient.createTopic(request);\nsnsTopicARN = result.getTopicArn();\nSubscribeRequest request2 = new SubscribeRequest()\n.withTopicArn(snsTopicARN)\n.withEndpoint(sqsQueueARN)\n.withProtocol(\"sqs\");\nSubscribeResult result2 = snsClient.subscribe(request2);\nsnsSubscriptionARN = result2.getSubscriptionArn();\n}\nprivate static String initiateJobRequest() {\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withSNSTopic(snsTopicARN);\nInitiateJobRequest request = new InitiateJobRequest()\n.withVaultName(vaultName)\n.withJobParameters(jobParameters);\nInitiateJobResult response = client.initiateJob(request);\nreturn response.getJobId();\n}\nprivate static long waitForJobToComplete(String jobId, String sqsQueueUrl) throws\nInterruptedException, JsonParseException, IOException {\nDownloading an Archive Using Java API Version 2012-06-01 156\n\nAmazon S3 Glacier Developer Guide\nBoolean messageFound = false;\nBoolean jobSuccessful = false;\nlong archiveSizeInBytes = -1;\nObjectMapper mapper = new ObjectMapper();\nJsonFactory factory = mapper.getFactory();\nwhile (!messageFound) {\nList<Message> msgs = sqsClient.receiveMessage(\nnew\nReceiveMessageRequest(sqsQueueUrl).withMaxNumberOfMessages(10)).getMessages();\nif (msgs.size() > 0) {\nfor (Message m : msgs) {\nJsonParser jpMessage = factory.createJsonParser(m.getBody());\nJsonNode jobMessageNode = mapper.readTree(jpMessage);\nString jobMessage = jobMessageNode.get(\"Message\").textValue();\nJsonParser jpDesc = factory.createJsonParser(jobMessage);\nJsonNode jobDescNode = mapper.readTree(jpDesc);\nString retrievedJobId = jobDescNode.get(\"JobId\").textValue();\nString statusCode = jobDescNode.get(\"StatusCode\").textValue();\narchiveSizeInBytes =\njobDescNode.get(\"ArchiveSizeInBytes\").longValue();\nif (retrievedJobId.equals(jobId)) {\nmessageFound = true;\nif (statusCode.equals(\"Succeeded\")) {\njobSuccessful = true;\n}\n}\n}\n} else {\nThread.sleep(sleepTime * 1000);\n}\n}\nreturn (messageFound && jobSuccessful) ? archiveSizeInBytes : -1;\n}\nprivate static void downloadJobOutput(String jobId, long archiveSizeInBytes) throws\nIOException {\nif (archiveSizeInBytes < 0) {\nSystem.err.println(\"Nothing to download. \");\nDownloading an Archive Using Java API Version 2012-06-01 157\n\nAmazon S3 Glacier Developer Guide\nreturn;\n}\nSystem.out.println(\"archiveSizeInBytes: \" + archiveSizeInBytes);\nFileOutputStream fstream = new FileOutputStream(fileName);\nlong startRange = 0;\nlong endRange = (downloadChunkSize > archiveSizeInBytes) ? archiveSizeInBytes\n-1 : downloadChunkSize - 1;\ndo {\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n.withVaultName(vaultName)\n.withRange(\"bytes=\" + startRange + \"-\" + endRange)\n.withJobId(jobId);\nGetJobOutputResult getJobOutputResult =\nclient.getJobOutput(getJobOutputRequest);\nBufferedInputStream is = new\nBufferedInputStream(getJobOutputResult.getBody());\nbyte[] buffer = new byte[(int)(endRange - startRange + 1)];\nSystem.out.println(\"Checksum received: \" +\ngetJobOutputResult.getChecksum());\nSystem.out.println(\"Content range \" +\ngetJobOutputResult.getContentRange());\nint totalRead = 0;\nwhile (totalRead < buffer.length) {\nint bytesRemaining = buffer.length - totalRead;\nint read = is.read(buffer, totalRead, bytesRemaining);\nif (read > 0) {\ntotalRead = totalRead + read;\n} else {\nbreak;\n}\n}\nSystem.out.println(\"Calculated checksum: \" +\nTreeHashGenerator.calculateTreeHash(new ByteArrayInputStream(buffer)));\nSystem.out.println(\"read = \" + totalRead);\nfstream.write(buffer);\nDownloading an Archive Using Java API Version 2012-06-01 158\n\nAmazon S3 Glacier Developer Guide\nstartRange = startRange + (long)totalRead;\nendRange = ((endRange + downloadChunkSize) > archiveSizeInBytes) ? archiveSizeInBytes : (endRange + downloadChunkSize);\nis.close();\n} while (endRange <= archiveSizeInBytes && startRange < archiveSizeInBytes);\nfstream.close();\nSystem.out.println(\"Retrieved file to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading an Archive in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndownload an archive.",
      "start_idx": 281076,
      "end_idx": 290561,
      "metadata": {
        "num_sentences": 10,
        "num_words": 809,
        "breakpoint_idx": 1696,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4493208991156684,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Step-by-Step Guide",
              "AWS SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "Java API",
            "AmazonGlacierClient",
            "JobParameters",
            "SNS",
            "SQS",
            "TreeHashGenerator",
            "archive retrieval",
            "GetJobOutputRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "ProfileCredentialsProvider"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Retrieval",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Jackson ObjectMapper",
            "TreeHashGenerator"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java-based implementation for downloading an archive from Amazon S3 Glacier using AWS SDK. It outlines the setup of SQS and SNS, initiating a job request, waiting for job completion, downloading the archive in chunks, and cleaning up resources.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using Java?",
            "What are the steps to set up SQS and SNS for archive retrieval in AWS Glacier?",
            "How do I handle chunked downloads and verify checksums in AWS Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Retrieval]",
        "tf_idf_keywords": [
          "Java API",
          "SQS",
          "SNS",
          "GetJobOutputRequest",
          "AmazonGlacierClient",
          "AWS SDK",
          "ProfileCredentialsProvider",
          "Amazon SQS",
          "AmazonSNSClient",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier",
          "AmazonSQSClient",
          "JobParameters",
          "TreeHashGenerator"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_164",
      "text": "Topics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for .NET\nDownloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Download method you\ncan use to download an archive. Important\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nDownloading an Archive Using .NET API Version 2012-06-01 159\n\nAmazon S3 Glacier Developer Guide\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options\nExample: Downloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region. For step-by-step instructions on how to run this example, see Running Code Examples. You need\nto update the code as shown with an existing archive ID and the local file path where you want to\nsave the downloaded archive. using System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string downloadFilePath = \"*** Provide the file name and path to where to\nstore the download ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nvar options = new DownloadOptions();\noptions.StreamTransferProgress += ArchiveDownloadHighLevel.progress;\n// Download an archive. Console.WriteLine(\"Intiating the archive retrieval job and then polling SQS\nqueue for the archive to be available. \");\nConsole.WriteLine(\"Once the archive is available, downloading will begin. \");\nmanager.Download(vaultName, archiveId, downloadFilePath, options);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\nDownloading an Archive Using .NET API Version 2012-06-01 160\n\nAmazon S3 Glacier Developer Guide\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic int currentPercentage = -1;\nstatic void progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != currentPercentage)\n{\ncurrentPercentage = args.PercentDone;\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps for downloading an Amazon S3 Glacier (S3 Glacier) archive using the\nlow-level API of the AWS SDK for .NET. 1.",
      "start_idx": 290562,
      "end_idx": 295651,
      "metadata": {
        "num_sentences": 12,
        "num_words": 416,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3649535323634292,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET",
            "DownloadOptions",
            "StreamTransferProgressArgs",
            "AmazonGlacierException",
            "archive retrieval job",
            "vaultName",
            "archiveId"
          ],
          "entities": [
            "Amazon Simple Notification Service",
            "Amazon Simple Queue Service",
            "Amazon S3 Glacier",
            "US West (Oregon) Region",
            "C#"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Archive Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "ArchiveTransferManager",
            "C#",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using both the high-level and low-level APIs of the AWS SDK for .NET, including example code and step-by-step instructions.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using the high-level API in .NET?",
            "What is the role of Amazon SNS and SQS in the archive retrieval process?",
            "How can I handle errors when downloading an archive using the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "DownloadOptions",
          "StreamTransferProgressArgs",
          "archive retrieval job",
          "archiveId",
          "vaultName",
          "AmazonGlacierException",
          "Amazon Simple Queue Service",
          "US West (Oregon) Region",
          "ArchiveTransferManager",
          "Amazon SQS",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service",
          "C#",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_165",
      "text": "Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region. 2. Initiate an archive-retrieval job by executing the InitiateJob method. You provide job information, such as the archive ID of the archive you want to download and the\noptional Amazon SNS topic to which you want S3 Glacier to post a job completion message, by\ncreating an instance of the InitiateJobRequest class. S3 Glacier returns a job ID in response. The response is available in an instance of the InitiateJobResponse class. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nDownloading an Archive Using .NET API Version 2012-06-01 161\n\nAmazon S3 Glacier Developer Guide\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive as shown in the following request. The request specifies S3 Glacier to prepare only the 1\nMB to 2 MB portion of the archive. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\n// Specify byte range. int ONE_MEG = 1048576;\ninitJobRequest.JobParameters.RetrievalByteRange = string.Format(\"{0}-{1}\", ONE_MEG, 2\n* ONE_MEG -1);\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete.",
      "start_idx": 290562,
      "end_idx": 295651,
      "metadata": {
        "num_sentences": 13,
        "num_words": 285,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29480704283102965,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "InitiateJob",
            "InitiateJobRequest",
            "InitiateJobResponse",
            "JobParameters",
            "archive-retrieval",
            "ArchiveId",
            "SNSTopic",
            "RetrievalByteRange",
            "AWS Region"
          ],
          "entities": [
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "InitiateJobResponse",
            "Amazon S3 Glacier",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            ".NET API",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AmazonGlacierClient class in .NET to initiate an archive retrieval job, specify job parameters, and optionally request a byte range of the archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job using AmazonGlacierClient in .NET?",
            "What parameters are required to create an InitiateJobRequest for archive retrieval?",
            "How can I specify a byte range for partial archive retrieval in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "RetrievalByteRange",
          "AWS Region",
          "AmazonGlacierClient",
          "archive-retrieval",
          "Amazon SNS",
          "InitiateJobResponse",
          "Amazon S3 Glacier",
          "InitiateJob",
          "JobParameters",
          "SNSTopic",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_166",
      "text": "You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\nDownloading an Archive Using .NET API Version 2012-06-01 162\n\nAmazon S3 Glacier Developer Guide\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message. You can also poll S3 Glacier by calling the DescribeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach . 4.",
      "start_idx": 295652,
      "end_idx": 296364,
      "metadata": {
        "num_sentences": 6,
        "num_words": 120,
        "breakpoint_idx": 1727,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28657185236612953,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Notification",
              "Polling",
              "Job Completion"
            ]
          },
          "keywords": [
            "Amazon SNS",
            "S3 Glacier",
            "DescribeJob",
            "notification configuration",
            "job output",
            "archive",
            "Developer Guide",
            "API Version 2012-06-01",
            "polling",
            "code example"
          ],
          "entities": [
            "Amazon SNS",
            "S3 Glacier",
            "DescribeJob method",
            "vault",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Notifications",
          "secondary_categories": [
            "Job Management",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This section explains how to determine when a job output is ready in S3 Glacier, recommending the use of Amazon SNS for notifications or alternatively polling with the DescribeJob method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I get notified when a job in S3 Glacier is complete?",
            "What method can I use to check the status of a job in S3 Glacier?",
            "Is using Amazon SNS the recommended approach for job notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Notifications]",
        "tf_idf_keywords": [
          "code example",
          "notification configuration",
          "S3 Glacier",
          "polling",
          "archive",
          "Amazon S3 Glacier Developer Guide",
          "DescribeJob",
          "vault",
          "job output",
          "Amazon SNS",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Developer Guide",
          "DescribeJob method"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_167",
      "text": "Download the job output (archive data) by executing the GetJobOutput method. You provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResponse object. GetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse = client.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nThe preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest. GetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\ngetJobOutputRequest.SetRange(0, 1048575); // Download only the first 1 MB chunk of\nthe output. Downloading an Archive Using .NET API Version 2012-06-01 163\n\nAmazon S3 Glacier Developer Guide\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data.",
      "start_idx": 296365,
      "end_idx": 299417,
      "metadata": {
        "num_sentences": 8,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4692303793770926,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "S3 Glacier",
            "job ID",
            "vault name",
            "byte range",
            "checksum",
            "archive data",
            ".NET API"
          ],
          "entities": [
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "Amazon S3 Glacier",
            ".NET API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download job output from Amazon S3 Glacier using the GetJobOutput method in .NET, including options for downloading data in chunks and receiving checksums.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download job output from Amazon S3 Glacier using .NET?",
            "How can I download a specific byte range of archive data in S3 Glacier?",
            "What is the purpose of the checksum returned by S3 Glacier when downloading data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "checksum",
          "vault name",
          "S3 Glacier",
          "byte range",
          "GetJobOutputRequest",
          ".NET API",
          "archive data",
          "GetJobOutput",
          ".NET API Version 2012-06-01",
          "job ID",
          "GetJobOutputResponse",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_168",
      "text": "To verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response. For an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash).You can use this value\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier. For a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for .NET\u2014Download Output in Chunks. Example 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single GetJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for .NET\u2014Download Output in Chunks. The example performs the following tasks:\n\u2022 Sets up an Amazon Simple Notification Service (Amazon SNS) topic\nS3 Glacier sends a notification to this topic after it completes the job.",
      "start_idx": 296365,
      "end_idx": 299417,
      "metadata": {
        "num_sentences": 9,
        "num_words": 288,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4203955332438151,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Verification",
              "Checksum Calculation",
              "Data Integrity"
            ]
          },
          "keywords": [
            "checksum",
            "SHA256TreeHash",
            "archive retrieval",
            "GetJobOutput",
            "Amazon SNS",
            "S3 Glacier",
            "byte range",
            "Low-Level API",
            "AWS SDK for .NET",
            "tree hash"
          ],
          "entities": [
            "Amazon SNS",
            "S3 Glacier",
            "AWS SDK for .NET",
            "GetJobOutput",
            "SHA256TreeHash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity Verification",
          "secondary_categories": [
            "Cloud Storage",
            "API Usage"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to verify the integrity of downloaded data from S3 Glacier by computing and comparing checksums, and provides examples using the AWS SDK for .NET to retrieve archives either in a single call or in chunks.",
          "intents": [
            "How-To",
            "Debug",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify the accuracy of data downloaded from S3 Glacier?",
            "What is the process for retrieving an archive using the AWS SDK for .NET?",
            "How do I compute and compare checksums for data integrity verification in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity Verification]",
        "tf_idf_keywords": [
          "checksum",
          "S3 Glacier",
          "byte range",
          "SHA256TreeHash",
          "tree hash",
          "GetJobOutput",
          "Amazon SNS",
          "archive retrieval",
          "Low-Level API",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_169",
      "text": "\u2022 Sets up an Amazon Simple Queue Service (Amazon SQS) queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages. \u2022 Initiates a job to download the specified archive. Downloading an Archive Using .NET API Version 2012-06-01 164\n\nAmazon S3 Glacier Developer Guide\nIn the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job. \u2022 Periodically checks the Amazon SQS queue for a message. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.",
      "start_idx": 299418,
      "end_idx": 300022,
      "metadata": {
        "num_sentences": 7,
        "num_words": 106,
        "breakpoint_idx": 1751,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3288653237479074,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "Amazon SQS",
            "Amazon SNS",
            "S3 Glacier",
            "queue",
            "policy",
            "job request",
            "archive",
            "message",
            "JSON",
            "download"
          ],
          "entities": [
            "Amazon Simple Queue Service",
            "Amazon SNS topic",
            "Amazon S3 Glacier",
            ".NET API",
            "Archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Messaging",
          "secondary_categories": [
            "Job Processing",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon SQS",
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up an Amazon SQS queue, attach a policy for Amazon SNS topic integration, initiate an archive download job, and periodically check the SQS queue for job completion messages to download the archive using the .NET API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up an Amazon SQS queue and integrate it with an Amazon SNS topic?",
            "How can I initiate and monitor an archive download job using the .NET API?",
            "What steps are involved in parsing and checking job completion messages in Amazon SQS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Messaging]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "policy",
          "archive",
          ".NET API",
          "Amazon SQS",
          "Archive",
          "Amazon SNS",
          "job request",
          "download",
          "queue",
          "Amazon SNS topic",
          "JSON",
          "Amazon Simple Queue Service",
          "Amazon S3 Glacier",
          "message"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_170",
      "text": "The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON. \u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue it created. using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSNSSQS\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveID = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\nDownloading an Archive Using .NET API Version 2012-06-01 165\n\nAmazon S3 Glacier Developer Guide\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"Service\\\" : \\\"sns.amazonaws.com\\\" },\" +\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QueueArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue. \");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Retrieving...\");\nRetrieveArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue. snsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nDownloading an Archive Using .NET API Version 2012-06-01 166\n\nAmazon S3 Glacier Developer Guide\nsnsClient = new\nAmazonSimpleNotificationServiceClient(Amazon.RegionEndpoint.USWest2);\nsqsClient = new AmazonSQSClient(Amazon.RegionEndpoint.USWest2);\nlong ticks = DateTime.Now.Ticks;\ntopicArn = snsClient.CreateTopic(new CreateTopicRequest { Name =\n\"GlacierDownload-\" + ticks }).TopicArn;\nConsole.Write(\"topicArn: \"); Console.WriteLine(topicArn);\nCreateQueueRequest createQueueRequest = new CreateQueueRequest();\ncreateQueueRequest.QueueName = \"GlacierDownload-\" + ticks;\nCreateQueueResponse createQueueResponse =\nsqsClient.CreateQueue(createQueueRequest);\nqueueUrl = createQueueResponse.QueueUrl;\nConsole.Write(\"QueueURL: \"); Console.WriteLine(queueUrl);\nGetQueueAttributesRequest getQueueAttributesRequest = new\nGetQueueAttributesRequest();\ngetQueueAttributesRequest.AttributeNames = new List<string> { \"QueueArn\" };\ngetQueueAttributesRequest.QueueUrl = queueUrl;\nGetQueueAttributesResponse response =\nsqsClient.GetQueueAttributes(getQueueAttributesRequest);\nqueueArn = response.QueueARN;\nConsole.Write(\"QueueArn: \"); Console.WriteLine(queueArn);\n// Setup the Amazon SNS topic to publish to the SQS queue. snsClient.Subscribe(new SubscribeRequest()\n{\nProtocol = \"sqs\",\nEndpoint = queueArn,\nTopicArn = topicArn\n});\n// Add policy to the queue so SNS can send messages to the queue. var policy = SQS_POLICY.Replace(\"{TopicArn}\", topicArn).Replace(\"{QueueArn}\",\nqueueArn);\nsqsClient.SetQueueAttributes(new SetQueueAttributesRequest()\n{\nQueueUrl = queueUrl,\nAttributes = new Dictionary<string, string>\n{\n{ QueueAttributeName.Policy, policy }\n}\nDownloading an Archive Using .NET API Version 2012-06-01 167\n\nAmazon S3 Glacier Developer Guide\n});\n}\nstatic void RetrieveArchive(AmazonGlacierClient client)\n{\n// Initiate job. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = archiveID,\nDescription = \"This job is to download archive. \",\nSNSTopic = topicArn,\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n// Check queue for a message and if job completed successfully, download archive. ProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest()\n{ QueueUrl = queueUrl, MaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDownloading an Archive Using .NET API Version 2012-06-01 168\n\nAmazon S3 Glacier Developer Guide\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n} else if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive. \");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nDownloading an Archive Using .NET API Version 2012-06-01 169\n\nAmazon S3 Glacier Developer Guide\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\u2014Download\nOutput in Chunks\nThe following C# code example retrieves an archive from S3 Glacier. The code example downloads\nthe job output in chunks by specifying the byte range in a GetJobOutputRequest object.",
      "start_idx": 300023,
      "end_idx": 314513,
      "metadata": {
        "num_sentences": 14,
        "num_words": 779,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4125548561850747,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "AWS SDK Usage",
              "Low-Level API"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JSON.NET",
            "SNS",
            "SQS",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "GetJobOutputRequest",
            "archive-retrieval",
            "AWS SDK for .NET",
            "queue policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "JSON.NET",
            "Amazon Simple Notification Service",
            "Amazon SQS",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Message Queueing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "JSON.NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This C# code example demonstrates how to use the AWS SDK for .NET to retrieve an archive from Amazon S3 Glacier, leveraging Amazon SNS and Amazon SQS for notifications and queueing. It includes setup, archive retrieval, and cleanup processes.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using the AWS SDK for .NET?",
            "How do I set up Amazon SNS and Amazon SQS for notifications and queueing in a .NET application?",
            "What is the process for downloading archive output in chunks using the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "queue policy",
          "SQS",
          "SNS",
          "GetJobOutputRequest",
          "AmazonGlacierClient",
          "JSON.NET",
          "Amazon SQS",
          "archive-retrieval",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_171",
      "text": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nusing System.Collections.Specialized;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSQLSNSOutputUsingRange\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\nDownloading an Archive Using .NET API Version 2012-06-01 170\n\nAmazon S3 Glacier Developer Guide\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"AWS\\\" : \\\"arn:aws:iam::123456789012:root\\\" },\"\n+\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QuernArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue. \");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Download archive\");\nDownloadAnArchive(archiveId, client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue. snsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nDownloading an Archive Using .NET API Version 2012-06-01 171\n\nAmazon S3 Glacier Developer Guide\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nlong ticks = DateTime.Now.Ticks;\n// Setup SNS topic. snsClient = new\nAmazonSimpleNotificationServiceClient(Amazon.RegionEndpoint.USWest2);\nsqsClient = new AmazonSQSClient(Amazon.RegionEndpoint.USWest2);\ntopicArn = snsClient.CreateTopic(new CreateTopicRequest { Name =\n\"GlacierDownload-\" + ticks }).TopicArn;\nConsole.Write(\"topicArn: \"); Console.WriteLine(topicArn);\nCreateQueueRequest createQueueRequest = new CreateQueueRequest();\ncreateQueueRequest.QueueName = \"GlacierDownload-\" + ticks;\nCreateQueueResponse createQueueResponse =\nsqsClient.CreateQueue(createQueueRequest);\nqueueUrl = createQueueResponse.QueueUrl;\nConsole.Write(\"QueueURL: \"); Console.WriteLine(queueUrl);\nGetQueueAttributesRequest getQueueAttributesRequest = new\nGetQueueAttributesRequest();\ngetQueueAttributesRequest.AttributeNames = new List<string> { \"QueueArn\" };\ngetQueueAttributesRequest.QueueUrl = queueUrl;\nGetQueueAttributesResponse response =\nsqsClient.GetQueueAttributes(getQueueAttributesRequest);\nqueueArn = response.QueueARN;\nConsole.Write(\"QueueArn: \"); Console.WriteLine(queueArn);\n// Setup the Amazon SNS topic to publish to the SQS queue. snsClient.Subscribe(new SubscribeRequest()\n{\nProtocol = \"sqs\",\nEndpoint = queueArn,\nTopicArn = topicArn\n});\n// Add the policy to the queue so SNS can send messages to the queue. var policy = SQS_POLICY.Replace(\"{TopicArn}\", topicArn).Replace(\"{QuernArn}\",\nqueueArn);\nDownloading an Archive Using .NET API Version 2012-06-01 172\n\nAmazon S3 Glacier Developer Guide\nsqsClient.SetQueueAttributes(new SetQueueAttributesRequest()\n{\nQueueUrl = queueUrl,\nAttributes = new Dictionary<string, string>\n{\n{ QueueAttributeName.Policy, policy }\n}\n});\n}\nstatic void DownloadAnArchive(string archiveId, AmazonGlacierClient client)\n{\n// Initiate job. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = archiveId,\nDescription = \"This job is to download the archive. \",\nSNSTopic = topicArn,\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n// Check queue for a message and if job completed successfully, download archive. ProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nvar receiveMessageRequest = new ReceiveMessageRequest() { QueueUrl = queueUrl,\nMaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\nDownloading an Archive Using .NET API Version 2012-06-01 173\n\nAmazon S3 Glacier Developer Guide\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nlong archiveSize = Convert.ToInt64(fields[\"ArchiveSizeInBytes\"]);\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, archiveSize, client); // This where we save job\noutput to the specified file location.\n} else if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive. \");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, long archiveSize,\nAmazonGlacierClient client)\n{\nlong partSize = 4 * (long)Math.Pow(2, 20); // 4 MB. using (Stream fileToSave = new FileStream(fileName, FileMode.Create,\nFileAccess.Write))\n{\nlong currentPosition = 0;\ndo\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nDownloading an Archive Using .NET API Version 2012-06-01 174\n\nAmazon S3 Glacier Developer Guide\nlong endPosition = currentPosition + partSize - 1;\nif (endPosition > archiveSize)\nendPosition = archiveSize;\ngetJobOutputRequest.SetRange(currentPosition, endPosition);\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nCopyStream(webStream, fileToSave);\n}\ncurrentPosition += partSize;\n} while (currentPosition < archiveSize);\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading an Archive by Using the REST API\nTo download an archive by using the REST API\nDownloading an archive is a two-step process. 1.",
      "start_idx": 300023,
      "end_idx": 314513,
      "metadata": {
        "num_sentences": 14,
        "num_words": 796,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45032132326901614,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "AWS API Usage",
              "File Handling"
            ]
          },
          "keywords": [
            "Amazon Glacier",
            "SNS",
            "SQS",
            "archive retrieval",
            "job output",
            "policy",
            "vault name",
            "archive ID",
            "file stream",
            "REST API"
          ],
          "entities": [
            "Amazon.Glacier",
            "Amazon.SimpleNotificationService",
            "Amazon.SQS",
            "AmazonGlacierClient",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Retrieval",
          "secondary_categories": [
            "Message Queueing",
            "Notification Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "Newtonsoft.Json",
            ".NET Framework"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a .NET example for downloading an archive from Amazon S3 Glacier using Amazon SNS and Amazon SQS for job notifications and polling, along with handling large archive downloads in chunks.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using .NET?",
            "How do I set up SNS and SQS for Amazon Glacier archive retrieval notifications?",
            "What is the process for handling large archive downloads in chunks using .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Retrieval]",
        "tf_idf_keywords": [
          "vault name",
          "Amazon.SQS",
          "policy",
          "SQS",
          "SNS",
          "AmazonGlacierClient",
          "archive ID",
          "REST API",
          "Amazon.Glacier",
          "job output",
          "Amazon SQS",
          "Amazon SNS",
          "archive retrieval",
          "Amazon.SimpleNotificationService",
          "Amazon.RegionEndpoint.USWest2"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_172",
      "text": "Initiate a job of the archive-retrieval type. For more information, see Initiate Job (POST\njobs). 2. After the job is completed, download the archive data. For more information, see Get Job\nOutput (GET output). Downloading an Archive by Using REST API Version 2012-06-01 175\n\nAmazon S3 Glacier Developer Guide\nDownloading an Archive in Amazon S3 Glacier Using the AWS CLI\nYou can download archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Download an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1.",
      "start_idx": 314514,
      "end_idx": 315130,
      "metadata": {
        "num_sentences": 7,
        "num_words": 102,
        "breakpoint_idx": 1786,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.22453062874930246,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Execution"
            ]
          },
          "keywords": [
            "archive-retrieval",
            "AWS CLI",
            "Amazon S3 Glacier",
            "REST API",
            "Initiate Job",
            "Get Job Output",
            "archive data",
            "download",
            "job completion",
            "Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "Initiate Job",
            "Get Job Output"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate and complete an archive retrieval job in Amazon S3 Glacier using the REST API or AWS CLI, including prerequisites and example usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in Amazon S3 Glacier?",
            "What are the steps to download an archive using the AWS CLI?",
            "What prerequisites are needed to set up the AWS CLI for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval]",
        "tf_idf_keywords": [
          "Get Job Output",
          "AWS CLI",
          "Initiate Job",
          "job completion",
          "Version 2012-06-01",
          "archive data",
          "REST API",
          "archive-retrieval",
          "download",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_173",
      "text": "Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 176\n\nAmazon S3 Glacier Developer Guide\nExample: Download an Archive Using the AWS CLI\nNote\nIn order to download your archives you must know your archive ids. Steps 1-4 will retrieve\nyour archive ids. If you already know the archive ids you wish to download skip to step 5. 1.",
      "start_idx": 315131,
      "end_idx": 317684,
      "metadata": {
        "num_sentences": 12,
        "num_words": 179,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30841575969349255,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Verification",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "list-vaults",
            "configure",
            "archive ids",
            "command prompt",
            "help command",
            "account ID",
            "default profile",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "Amazon",
            "archive ids",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Configuration",
          "secondary_categories": [
            "AWS S3 Glacier Operations",
            "AWS CLI Commands"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download and configure the AWS CLI, verify its setup, and use it to interact with Amazon S3 Glacier, including listing vaults and downloading archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I install and configure the AWS CLI?",
            "What commands can I use to verify my AWS CLI setup?",
            "How can I download an archive from Amazon S3 Glacier using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Configuration]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS CLI",
          "help command",
          "configure",
          "Amazon",
          "command prompt",
          "list-vaults",
          "API Version 2012-06-01",
          "archive ids",
          "account ID",
          "Amazon S3 Glacier",
          "default profile"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_174",
      "text": "Use the initiate-job command to start an inventory-retrieval job. The inventory report will\nlist your archive ids. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous job command. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 177\n\nAmazon S3 Glacier Developer Guide\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs. 4.",
      "start_idx": 315131,
      "end_idx": 317684,
      "metadata": {
        "num_sentences": 12,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2579170284849225,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Job Management",
              "Notification Configuration"
            ]
          },
          "keywords": [
            "initiate-job",
            "inventory-retrieval",
            "aws glacier",
            "describe-job",
            "vault-name",
            "account-id",
            "job-id",
            "SNS topic",
            "notification configuration",
            "InventoryRetrievalParameters"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "Amazon SNS",
            "VaultARN",
            "JobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Commands",
          "secondary_categories": [
            "Job Management",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate and monitor an inventory-retrieval job in AWS Glacier using the CLI, including commands for job initiation, status checking, and notification configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I start an inventory-retrieval job in AWS Glacier?",
            "How can I check the status of an inventory-retrieval job in AWS Glacier?",
            "What happens after an AWS Glacier job completes?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Commands]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "account-id",
          "notification configuration",
          "S3 Glacier",
          "SNS topic",
          "AWS CLI",
          "VaultARN",
          "JobId",
          "job-id",
          "initiate-job",
          "InventoryRetrievalParameters",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "describe-job",
          "vault-name"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_175",
      "text": "When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. This file will contain your archive ids. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the initiate-job command to start the retrieval process each archive from a vault. You\nwill need to specify the job parameter as archive-retrieval as seen below. Downloading an Archive Using the AWS CLI API Version 2012-06-01 178\n\nAmazon S3 Glacier Developer Guide\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333\n--job-parameters=\"{\\\"Type\\\":\\\"archive-retrieval\\\",\\\"ArchiveId\\\":\\\"*** archiveId\n***\\\"}\"\n6. Wait for the archive-retrieval job to complete. Use the describe-job command to\ncheck status of the previous command. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\n7.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45373187594943576,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "CLI Instructions"
            ]
          },
          "keywords": [
            "get-job-output",
            "initiate-job",
            "describe-job",
            "archive-retrieval",
            "AWS CLI",
            "Amazon S3 Glacier",
            "vault-name",
            "account-id",
            "job-id",
            "ArchiveId"
          ],
          "entities": [
            "aws glacier",
            "awsexamplevault",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Glacier Operations",
          "secondary_categories": [
            "Cloud Storage Management",
            "Data Retrieval Processes"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archive data from an Amazon S3 Glacier vault using AWS CLI commands, including initiating and monitoring retrieval jobs, and downloading the output file containing archive details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archive data from an Amazon S3 Glacier vault using AWS CLI?",
            "What information is included in the output file generated by the get-job-output command?",
            "How can I check the status of an archive-retrieval job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Glacier Operations]",
        "tf_idf_keywords": [
          "account-id",
          "awsexamplevault",
          "get-job-output",
          "SHA256TreeHash",
          "AWS CLI",
          "VaultARN",
          "job-id",
          "archive-retrieval",
          "initiate-job",
          "Amazon S3 Glacier",
          "describe-job",
          "vault-name",
          "aws glacier",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_176",
      "text": "When the above job is complete use the get-job-output command to download your\narchive. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output_file_name\nDeleting an Archive in Amazon S3 Glacier\nYou cannot delete an archive using the Amazon S3 Glacier (S3 Glacier) management console. To delete an archive you must use the AWS Command Line Interface (CLI) or write code to make\na delete request using either the REST API directly or the AWS SDK for Java and .NET wrapper\nlibraries. The following topics explain how to use the AWS SDK for Java and .NET wrapper libraries,\nthe REST API, and the AWS CLI. Topics\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting an Amazon S3 Glacier Archive Using the REST API\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS Command Line Interface\nYou can delete one archive at a time from a vault. To delete the archive you must provide its\narchive ID in your delete request. You can get the archive ID by downloading the vault inventory for\nthe vault that contains the archive. For more information about downloading the vault inventory,\nsee Downloading a Vault Inventory in Amazon S3 Glacier. Deleting an Archive API Version 2012-06-01 179\n\nAmazon S3 Glacier Developer Guide\nAfter you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail. Archive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\n\u2022 If the archive retrieval job is actively preparing the data for download when S3 Glacier receives\nthe delete archive request, then the archival retrieval operation might fail.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 317,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4635370890299479,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Line Usage",
              "API Interaction",
              "SDK Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "archive deletion",
            "vault inventory",
            "delete request",
            "REST API",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "archive ID",
            "job output"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Archive Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface (CLI)",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for downloading and deleting archives in Amazon S3 Glacier using AWS CLI, REST API, and SDKs for Java and .NET, along with considerations for archive retrieval jobs after deletion.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using AWS CLI?",
            "What happens to archive retrieval jobs after an archive is deleted in S3 Glacier?",
            "How can I obtain the archive ID for deletion in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Archive Management]",
        "tf_idf_keywords": [
          "vault inventory",
          "AWS CLI",
          "archive ID",
          "archive deletion",
          "delete request",
          "REST API",
          "job output",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_177",
      "text": "\u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, then you will be able to download the output. For more information about archive retrieval, see Downloading an Archive in S3 Glacier. This operation is idempotent. Deleting an already-deleted archive does not result in an error. After you delete an archive, if you immediately download the vault inventory, it might include the\ndeleted archive in the list because S3 Glacier prepares vault inventory only about once a day. Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete an archive using the AWS SDK for Java low-level API. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 157,
        "chunk_type": "semantic_split",
        "coherence_score": 0.263182618882921,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Idempotent Operation",
              "AWS SDK for Java"
            ]
          },
          "keywords": [
            "archive retrieval",
            "S3 Glacier",
            "delete archive",
            "vault inventory",
            "AmazonGlacierClient",
            "AWS Region",
            "low-level API",
            "idempotent",
            "output download",
            "vault inventory preparation"
          ],
          "entities": [
            "S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "archive",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK",
            "Data Deletion Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the AWS SDK for Java, including idempotency behavior and considerations for vault inventory updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using the AWS SDK for Java?",
            "What happens if I delete an already-deleted archive in S3 Glacier?",
            "Why might a deleted archive still appear in the vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "low-level API",
          "vault inventory",
          "S3 Glacier",
          "AWS Region",
          "idempotent",
          "output download",
          "archive",
          "AmazonGlacierClient",
          "delete archive",
          "archive retrieval",
          "Amazon S3 Glacier",
          "vault inventory preparation",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_178",
      "text": "2. Provide request information by creating an instance of the DeleteArchiveRequest class. You need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDK for Java with Amazon S3 Glacier. 3. Run the deleteArchive method by providing the request object as a parameter. The following Java code snippet illustrates the preceding steps. AmazonGlacierClient client;\nDeleting an Archive Using Java API Version 2012-06-01 180\n\nAmazon S3 Glacier Developer Guide\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n.withVaultName(\"*** provide a vault name ***\")\n.withArchiveId(\"*** provide an archive ID ***\");\nclient.deleteArchive(request);\nNote\nFor information about the underlying REST API, see Delete Archive (DELETE archive). Example: Deleting an Archive Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to delete an archive.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 156,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2149372312757704,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "DeleteArchiveRequest",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "deleteArchive",
            "archive ID",
            "vault name",
            "account ID",
            "AmazonGlacierClient",
            "REST API",
            "DELETE archive"
          ],
          "entities": [
            "DeleteArchiveRequest",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Java API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the AWS SDK for Java, including creating a DeleteArchiveRequest instance and invoking the deleteArchive method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using Java?",
            "What parameters are required to create a DeleteArchiveRequest object?",
            "Where can I find information about the underlying REST API for deleting archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "vault name",
          "AmazonGlacierClient",
          "deleteArchive",
          "archive ID",
          "REST API",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "account ID",
          "AWS SDK for Java",
          "DELETE archive"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_179",
      "text": "For step-by-step\ninstructions on how to run this example, see Running Java Examples for Amazon S3 Glacier Using\nEclipse. You need to update the code as shown with a vault name and the archive ID of the archive\nyou want to delete. Example\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class ArchiveDelete {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\nDeleting an Archive Using Java API Version 2012-06-01 181\n\nAmazon S3 Glacier Developer Guide\n// Delete the archive. client.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully. \");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted. \");\nSystem.err.println(e);\n}\n}\n}\nDeleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete an archive. Topics\n\u2022 Deleting an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting an Archive Using the Low-Level API AWS SDK for .NET\nDeleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteArchive method\nyou can use to delete an archive. Example: Deleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete an\narchive. For step-by-step instructions on how to run this example, see Running Code Examples. You\nneed to update the code as shown with the archive ID of the archive you want to delete.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 293,
        "chunk_type": "semantic_split",
        "coherence_score": 0.443881352742513,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "vault name",
            "archive ID",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "high-level API",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "DeleteArchiveRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Archive Management",
          "secondary_categories": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Eclipse",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions and code examples for deleting an archive in Amazon S3 Glacier using the AWS SDKs for Java and .NET, including both high-level and low-level APIs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the process for deleting an archive using the high-level API of the AWS SDK for .NET?",
            "What code changes are required to specify a vault name and archive ID for deletion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Archive Management]",
        "tf_idf_keywords": [
          "low-level API",
          "vault name",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "archive ID",
          "ProfileCredentialsProvider",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "high-level API",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_180",
      "text": "Example\nusing System;\nusing Amazon.Glacier;\nDeleting an Archive Using .NET API Version 2012-06-01 182\n\nAmazon S3 Glacier Developer Guide\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDeleting an Archive Using the Low-Level API AWS SDK for .NET\nThe following are the steps to delete an using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region. 2. Provide request information by creating an instance of the DeleteArchiveRequest class. You need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDKs with Amazon S3 Glacier.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.20578214857313368,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon Glacier",
            "DeleteArchiveRequest",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "AWS SDK for .NET",
            "vault name",
            "archive ID",
            "AWS Region",
            "AmazonGlacierException",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon.Glacier",
            "Amazon.Glacier.Transfer",
            "Amazon.Runtime",
            "ArchiveTransferManager",
            "DeleteArchiveRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "Exception Handling in .NET"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon RegionEndpoint"
          ],
          "mentioned_tools": [
            ".NET",
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using both high-level and low-level .NET APIs, including code examples and necessary steps.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using the .NET API?",
            "What are the steps to use the low-level API for deleting an archive in Amazon Glacier?",
            "What exceptions should I handle when deleting an archive using the .NET API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Amazon.Glacier.Transfer",
          "vault name",
          "AWS Region",
          "Amazon.Runtime",
          "AmazonGlacierException",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "archive ID",
          "Amazon.Glacier",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "Amazon RegionEndpoint",
          "Amazon Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_181",
      "text": "3. Run the DeleteArchive method by providing the request object as a parameter. Deleting an Archive Using .NET API Version 2012-06-01 183\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example uses the low-level API of\nthe AWS SDK for .NET to delete an archive. Note\nFor information about the underlying REST API, see Delete Archive (DELETE archive). For step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the archive ID of the archive you want to delete. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteLowLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Deleting the archive\");\nDeleteAnArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\nDeleting an Archive Using .NET API Version 2012-06-01 184\n\nAmazon S3 Glacier Developer Guide\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void DeleteAnArchive(AmazonGlacierClient client)\n{\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n{\nVaultName = vaultName,\nArchiveId = archiveId\n};\nDeleteArchiveResponse response = client.DeleteArchive(request);\n}\n}\n}\nDeleting an Amazon S3 Glacier Archive Using the REST API\nYou can use the Delete Archive API to delete an archive. \u2022 For information about the Delete Archive API, see Delete Archive (DELETE archive).",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 265,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4138108147515191,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "DeleteArchive",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "REST API",
            "DeleteArchiveRequest",
            "DeleteArchiveResponse",
            "AmazonGlacierClient",
            "vaultName",
            "archiveId",
            "AmazonGlacierException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Delete Archive API",
            "AmazonGlacierClient",
            "DeleteArchiveRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Glacier"
          ],
          "mentioned_tools": [
            ".NET",
            "C#",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a C# example for deleting an Amazon S3 Glacier archive using the low-level API of the AWS SDK for .NET. It includes step-by-step instructions and references the Delete Archive REST API for additional details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Amazon S3 Glacier archive using the AWS SDK for .NET?",
            "What is the C# code example for deleting an archive with the low-level API?",
            "Where can I find information about the Delete Archive REST API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "archiveId",
          "vaultName",
          "AmazonGlacierException",
          "AmazonGlacierClient",
          "REST API",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "DeleteArchiveResponse",
          "Delete Archive API",
          "Amazon Glacier",
          "AWS SDK for .NET",
          "DeleteArchive"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_182",
      "text": "\u2022 For information about using the REST API, see API Reference for Amazon S3 Glacier. Deleting an Archive in Amazon S3 Glacier Using the AWS Command\nLine Interface\nYou can delete archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line Interface\n(AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nDeleting an Archive Using REST API Version 2012-06-01 185\n\nAmazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3931549072265625,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "delete archives",
            "list-vaults",
            "default profile",
            "credentials",
            "command prompt",
            "API Reference",
            "Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS Command Line Interface User Guide",
            "REST API Version 2012-06-01",
            "123456789012"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "AWS Command Line Interface",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete archives in Amazon S3 Glacier using the AWS Command Line Interface (CLI) and provides setup instructions for the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using the AWS CLI?",
            "What are the prerequisites for setting up the AWS CLI?",
            "How can I verify my AWS CLI setup for S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "AWS Command Line Interface User Guide",
          "delete archives",
          "AWS CLI",
          "API Reference",
          "command prompt",
          "Command Line Interface",
          "list-vaults",
          "123456789012",
          "REST API",
          "credentials",
          "Amazon S3 Glacier",
          "REST API Version 2012-06-01",
          "default profile"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_183",
      "text": "aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Deleting an Archive Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job. Deleting an Archive Using the AWS CLI API Version 2012-06-01 186\n\nAmazon S3 Glacier Developer Guide\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3012557135687934,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "AWS CLI",
              "Inventory Retrieval",
              "Job Management"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Glacier",
            "list-vaults",
            "initiate-job",
            "describe-job",
            "inventory-retrieval",
            "Amazon SNS",
            "VaultARN",
            "JobId",
            "notification configuration"
          ],
          "entities": [
            "AWS Glacier",
            "Amazon S3",
            "VaultARN",
            "Amazon SNS",
            "AWS CLI API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS CLI Operations",
          "secondary_categories": [
            "AWS Glacier",
            "Cloud Storage Management"
          ],
          "mentioned_services": [
            "AWS Glacier",
            "Amazon SNS",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on using AWS CLI commands to manage AWS Glacier vaults, including listing vaults, retrieving inventory, and deleting archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in AWS Glacier using the AWS CLI?",
            "What are the steps to delete an archive in AWS Glacier using the CLI?",
            "How can I check the status of an inventory retrieval job in AWS Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CLI Operations]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "notification configuration",
          "Amazon S3",
          "AWS CLI",
          "VaultARN",
          "JobId",
          "list-vaults",
          "AWS Glacier",
          "initiate-job",
          "Amazon SNS",
          "Glacier",
          "describe-job",
          "AWS CLI API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_184",
      "text": "For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs. 4. When it's complete, use the get-job-output command to download the retrieval job to the file\noutput.json. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 187\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the delete-archive command to delete each archive from a vault until none remain. aws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id *** archiveid ***\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 188\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS SDKs with Amazon S3 Glacier\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. The SDK libraries wrap\nthe underlying S3 Glacier API, simplifying your programming tasks. For example, for each request\nsent to S3 Glacier, you must include a signature to authenticate your requests.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33273192511664496,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command",
              "SDK Usage",
              "API Interaction"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "SNS topic",
            "get-job-output",
            "delete-archive",
            "AWS CLI",
            "SDK",
            "VaultARN",
            "ArchiveList",
            "SHA256TreeHash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SNS topic",
            "VaultARN",
            "AWS SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "AWS CLI",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Vault notifications in Amazon S3 Glacier, retrieve job outputs, delete archives using the AWS CLI, and utilize AWS SDKs for application development with S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Vault notifications in Amazon S3 Glacier?",
            "What is the command to retrieve a job output from Amazon S3 Glacier?",
            "How can I delete archives from a vault using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "SNS topic",
          "get-job-output",
          "SHA256TreeHash",
          "AWS CLI",
          "VaultARN",
          "SDK",
          "AWS SDK",
          "Amazon SNS",
          "delete-archive",
          "Amazon S3 Glacier",
          "ArchiveList",
          "Vault Notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_185",
      "text": "When you use the\nSDK libraries, you need to provide only your AWS security credentials in your code and the libraries\ncompute the necessary signature and include it in the request sent to S3 Glacier. The AWS SDKs\nprovide libraries that map to the underlying REST API and provide objects that you can use to\neasily construct requests and process responses. Topics\n\u2022 AWS SDK Libraries for Java and .NET\n\u2022 Using S3 Glacier with an AWS SDK\n\u2022 Using the AWS SDK for Java with Amazon S3 Glacier\n\u2022 Using the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS Command Line Interface (AWS CLI) is a unified tool to manage your AWS services,\nincluding S3 Glacier. For information about downloading the AWS CLI, see AWS Command Line\nInterface. For a list of the S3 Glacier CLI commands, see the AWS CLI Command Reference. AWS SDK Libraries for Java and .NET\nThe AWS SDKs for Java and .NET offer high-level and low-level wrapper libraries. You can find examples of working with Amazon S3 Glacier by using the AWS SDK for Java and the\nAWS SDK for .NET throughout this developer guide. What Is the Low-Level API? The low-level wrapper libraries map closely the underlying REST API (API Reference for Amazon\nS3 Glacier) supported by S3 Glacier. For each S3 Glacier REST operations, the low-level API\nprovides a corresponding method, a request object for you to provide request information and\na response object for you to process S3 Glacier response.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 251,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5280767228868273,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS SDK",
            "S3 Glacier",
            "REST API",
            "AWS CLI",
            "Java",
            ".NET",
            "Low-Level API",
            "High-Level API",
            "Command Reference",
            "Security Credentials"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "API Reference for Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK Libraries",
          "secondary_categories": [
            "REST API",
            "AWS Command Line Interface (CLI)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS SDK libraries and AWS CLI for interacting with Amazon S3 Glacier, including details on high-level and low-level APIs, signature computation, and command references for Java and .NET SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use AWS SDK libraries to interact with Amazon S3 Glacier?",
            "What is the difference between high-level and low-level APIs in AWS SDKs?",
            "Where can I find a list of S3 Glacier CLI commands?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS SDK Libraries]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS CLI",
          "Java",
          "AWS SDK",
          "REST API",
          "Command Reference",
          "Security Credentials",
          ".NET",
          "API Reference for Amazon S3 Glacier",
          "Amazon S3 Glacier",
          "Low-Level API",
          "High-Level API",
          "AWS SDK for Java",
          "AWS Command Line Interface",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_186",
      "text": "The low-level wrapper libraries are the\nmost complete implementation of the underlying S3 Glacier operations. For information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier. AWS SDK Libraries for Java and .NET API Version 2012-06-01 189\n\nAmazon S3 Glacier Developer Guide\nWhat Is the High-Level API? To further simplify application development, these libraries offer a higher-level abstraction for\nsome of the operations. For example:\n\u2022 Uploading an archive\u2014To upload an archive using the low-level API in addition to the file\nname and the vault name where you want to save the archive, You need to provide a checksum\n(SHA-256 tree hash) of the payload. However, the high-level API computes the checksum for you. \u2022 Downloading an archive or vault inventory\u2014To download an archive using the low-level API\nyou first initiate a job, wait for the job to complete, and then get the job output. You need to\nwrite additional code to set up an Amazon Simple Notification Service (Amazon SNS) topic for S3\nGlacier to notify you when the job is complete. You also need some polling mechanism to check\nif a job completion message was posted to the topic. The high-level API provides a method to\ndownload an archive that takes care of all these steps.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 225,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30122803582085506,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Comparison"
            ]
          },
          "keywords": [
            "low-level API",
            "high-level API",
            "Amazon S3 Glacier",
            "AWS SDK",
            "checksum",
            "SHA-256 tree hash",
            "vault inventory",
            "Amazon SNS",
            "archive upload",
            "job completion"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDKs and APIs",
          "secondary_categories": [
            "Cloud Storage",
            "Application Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service (SNS)"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the differences between low-level and high-level APIs in AWS SDK libraries for Amazon S3 Glacier, highlighting simplifications provided by the high-level API for operations like uploading and downloading archives.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "What are the benefits of using the high-level API over the low-level API in Amazon S3 Glacier?",
            "How does the high-level API simplify archive uploading in Amazon S3 Glacier?",
            "What steps are automated by the high-level API when downloading an archive or vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS SDKs and APIs]",
        "tf_idf_keywords": [
          "checksum",
          "low-level API",
          "vault inventory",
          "Amazon Simple Notification Service (SNS)",
          "job completion",
          "AWS SDK",
          "SHA-256 tree hash",
          "archive upload",
          "Amazon SNS",
          "API Version 2012-06-01",
          "high-level API",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_187",
      "text": "You only specify an archive ID and a folder\npath where you want to save the downloaded data. For information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier. When to Use the High-Level and Low-Level API\nIn general, if the high-level API provides methods you need to perform an operation, you should\nuse the high-level API because of the simplicity it provides.",
      "start_idx": 335436,
      "end_idx": 335883,
      "metadata": {
        "num_sentences": 3,
        "num_words": 80,
        "breakpoint_idx": 1933,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.11184978485107422,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "SDK Libraries",
              "API Usage"
            ]
          },
          "keywords": [
            "archive ID",
            "folder path",
            "AWS SDK",
            "Java",
            "Amazon S3 Glacier",
            ".NET",
            "High-Level API",
            "Low-Level API",
            "operation",
            "simplicity"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "High-Level API",
            "Low-Level API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK Usage",
          "secondary_categories": [
            "API Levels",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to specify an archive ID and folder path for downloading data, and discusses the use of high-level and low-level APIs with AWS SDK libraries for Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "How do I specify an archive ID and folder path for downloading data?",
            "What are the differences between high-level and low-level APIs in AWS SDKs?",
            "Where can I find information about using the AWS SDK for Java or .NET with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS SDK Usage]",
        "tf_idf_keywords": [
          "Java",
          "folder path",
          "archive ID",
          "AWS SDK",
          "operation",
          "simplicity",
          ".NET",
          "Amazon S3 Glacier",
          "Low-Level API",
          "High-Level API",
          "AWS SDK for Java",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_188",
      "text": "However, if the high-level API does\nnot offer the functionality, you can use the low-level API. Additionally, the low-level API allows\ngranular control of the operation such as retry logic in the event of a failure. For example, when\nuploading an archive the high-level API uses the file size to determine whether to upload the\narchive in a single operation or use the multipart upload API. The API also has built-in retry logic in\ncase an upload fails. However, your application might need granular control over these decisions, in\nwhich case you can use the low-level API. Using S3 Glacier with an AWS SDK\nAWS software development kits (SDKs) are available for many popular programming languages. Each SDK provides an API, code examples, and documentation that make it easier for developers to\nbuild applications in their preferred language. What Is the High-Level API? API Version 2012-06-01 190\n\nAmazon S3 Glacier Developer Guide\nSDK documentation Code examples\nAWS SDK for C++ AWS SDK for C++ code examples\nAWS CLI AWS CLI code examples\nAWS SDK for Go AWS SDK for Go code examples\nAWS SDK for Java AWS SDK for Java code examples\nAWS SDK for JavaScript AWS SDK for JavaScript code examples\nAWS SDK for Kotlin AWS SDK for Kotlin code examples\nAWS SDK for .NET AWS SDK for .NET code examples\nAWS SDK for PHP AWS SDK for PHP code examples\nAWS Tools for PowerShell Tools for PowerShell code examples\nAWS SDK for Python (Boto3) AWS SDK for Python (Boto3) code examples\nAWS SDK for Ruby AWS SDK for Ruby code examples\nAWS SDK for Rust AWS SDK for Rust code examples\nAWS SDK for SAP ABAP AWS SDK for SAP ABAP code examples\nAWS SDK for Swift AWS SDK for Swift code examples\nFor examples specific to S3 Glacier, see Code examples for S3 Glacier using AWS SDKs. Example availability\nCan't find what you need?",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 10,
        "num_words": 317,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3385164472791884,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Overview",
              "SDK Documentation",
              "Code Examples"
            ]
          },
          "keywords": [
            "high-level API",
            "low-level API",
            "AWS SDK",
            "S3 Glacier",
            "multipart upload",
            "retry logic",
            "archive upload",
            "programming languages",
            "code examples",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "AWS SDK for Java",
            "AWS CLI",
            "AWS Tools for PowerShell"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDKs",
          "secondary_categories": [
            "API Functionality",
            "Granular Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Tools for PowerShell",
            "AWS SDK for Python (Boto3)"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the use of high-level and low-level APIs for S3 Glacier, highlighting the granular control offered by the low-level API and providing a list of AWS SDKs with code examples for various programming languages.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the difference between the high-level and low-level APIs for S3 Glacier?",
            "Which AWS SDKs are available for S3 Glacier and where can I find code examples?",
            "How can I implement granular control for retry logic when using S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS SDKs]",
        "tf_idf_keywords": [
          "code examples",
          "low-level API",
          "S3 Glacier",
          "AWS SDK for Python (Boto3)",
          "AWS CLI",
          "AWS Tools for PowerShell",
          "AWS SDK",
          "retry logic",
          "programming languages",
          "archive upload",
          "API Version 2012-06-01",
          "high-level API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_189",
      "text": "Request a code example by using the Provide feedback link at\nthe bottom of this page. Working with AWS SDKs API Version 2012-06-01 191\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS SDK for Java with Amazon S3 Glacier\nThe AWS SDK for Java provides both high-level and low-level APIs for Amazon S3 Glacier (S3\nGlacier) as described in Using the AWS SDKs with Amazon S3 Glacier. For information about\ndownloading the AWS SDK for Java, see Amazon SDK for Java. Note\nThe AWS SDK for Java provides thread-safe clients for accessing S3 Glacier. As a best\npractice, your applications should create one client and reuse the client between threads. Topics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\n\u2022 Running Java Examples for Amazon S3 Glacier Using Eclipse\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of S3 Glacier ( API Reference for Amazon S3 Glacier). When calling any of these\nmethods, you must create a corresponding request object and provide a response object in which\nthe method can return the S3 Glacier response to the operation. For example, the AmazonGlacierClient class provides the createVault method to create a\nvault. This method maps to the underlying Create Vault REST operation (see Create Vault (PUT\nvault)). To use this method, you must create instances of the CreateVaultResult object that\nreceives the S3 Glacier response as shown in the following Java code snippet:\nAmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withAccountId(\"-\")\n.withVaultName(vaultName);\nUsing the AWS SDK for Java API Version 2012-06-01 192\n\nAmazon S3 Glacier Developer Guide\nCreateVaultResult result = client.createVault(createVaultRequest);\nAll the low-level samples in the guide use this pattern.",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 10,
        "num_words": 291,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32050454881456164,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Implementation",
              "Best Practices"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "Low-Level API",
            "High-Level API",
            "AmazonGlacierClient",
            "Create Vault",
            "CreateVaultRequest",
            "CreateVaultResult",
            "REST operations",
            "Endpoint"
          ],
          "entities": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to interact with Amazon S3 Glacier, detailing both high-level and low-level APIs, including sample code for creating a vault using the low-level API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the best practice for using thread-safe clients with S3 Glacier?",
            "What are the differences between the high-level and low-level APIs in the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "AmazonGlacierClient",
          "CreateVaultResult",
          "REST operations",
          "Amazon S3 Glacier",
          "Low-Level API",
          "High-Level API",
          "AWS SDK for Java",
          "Endpoint",
          "Create Vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_190",
      "text": "Note\nThe preceding code segment specifies AccountID when creating the request. However,\nwhen using the AWS SDK for Java, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request. You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor Java, if you don't provide the account ID, the library sets the account ID to '-'. Using the High-Level API\nTo further simplify your application development, the AWS SDK for Java provides the\nArchiveTransferManager class that implements a higher-level abstraction for the some of\nthe methods in the low-level API. It provides useful methods, such as the upload and download\nmethods for archive operations. For example, the following Java code snippet uses the upload high-level method to upload an\narchive.",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 10,
        "num_words": 191,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3449430677625868,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "AccountID",
            "AWS SDK for Java",
            "AWS account ID",
            "S3 Glacier",
            "ArchiveTransferManager",
            "upload method",
            "download method",
            "credentials",
            "high-level API",
            "low-level API"
          ],
          "entities": [
            "AWS SDK for Java",
            "S3 Glacier",
            "ArchiveTransferManager",
            "AWS account ID",
            "High-Level API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "AWS S3 Glacier",
            "High-Level API"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the usage of AccountID in AWS SDK for Java requests, highlights its optional nature, and introduces the ArchiveTransferManager class for high-level archive operations like upload and download.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "When is the AccountID optional in AWS SDK for Java requests?",
            "What is the purpose of the ArchiveTransferManager class in AWS SDK for Java?",
            "How do you upload an archive using the high-level API in AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "low-level API",
          "download method",
          "S3 Glacier",
          "ArchiveTransferManager",
          "AWS account ID",
          "credentials",
          "high-level API",
          "AccountID",
          "High-Level API",
          "AWS SDK for Java",
          "upload method"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_191",
      "text": "String vaultName = \"examplevault\";\nString archiveToUpload = \"c:/folder/exampleArchive.zip\";\nArchiveTransferManager atm = new ArchiveTransferManager(client, credentials);\nString archiveId = atm.upload(vaultName, \"Tax 2012 documents\", new\nFile(archiveToUpload)).getArchiveId();\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. If you don't specify any AWS Region, the AWS SDK for Java\nsets us-east-1 as the default AWS Region. All the high-level examples in this guide use this pattern. Using the High-Level API API Version 2012-06-01 193\n\nAmazon S3 Glacier Developer Guide\nNote\nThe high-level ArchiveTransferManager class can be constructed with an\nAmazonGlacierClient instance or an AWSCredentials instance. Running Java Examples for Amazon S3 Glacier Using Eclipse\nThe easiest way to get started with the Java code examples is to install the latest AWS Toolkit\nfor Eclipse. For information on installing or updating to the latest toolkit, go to http://\naws.amazon.com/eclipse. The following tasks guide you through the creation and testing of the\nJava code examples provided in this section. General Process of Creating Java Code Examples\n1 Create a default credentials profile for your AWS credentials as described in the AWS\nSDK for Java topic Providing AWS Credentials in the Amazon SDK for Java. 2 Create a new AWS Java project in Eclipse. The project is pre-configured with the AWS\nSDK for Java. 3 Copy the code from the section you are reading to your project.",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 11,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34582321860573506,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "ArchiveTransferManager",
            "AWS Region",
            "Amazon S3 Glacier",
            "AWS Toolkit for Eclipse",
            "AmazonGlacierClient",
            "AWSCredentials",
            "Java code examples",
            "High-Level API",
            "upload",
            "credentials profile"
          ],
          "entities": [
            "ArchiveTransferManager",
            "Amazon S3 Glacier",
            "AWS Toolkit for Eclipse",
            "AmazonGlacierClient",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Region"
          ],
          "mentioned_tools": [
            "AWS Toolkit for Eclipse",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the ArchiveTransferManager class in the AWS SDK for Java to upload an archive to Amazon S3 Glacier, along with setup instructions for running Java code examples in Eclipse using the AWS Toolkit.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the ArchiveTransferManager class to upload an archive to Amazon S3 Glacier?",
            "What is the default AWS Region used by the AWS SDK for Java if none is specified?",
            "How can I set up Eclipse to run AWS Java code examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "Java code examples",
          "AWS Region",
          "upload",
          "AWSCredentials",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "credentials profile",
          "Amazon S3 Glacier",
          "High-Level API",
          "AWS SDK for Java",
          "AWS Toolkit for Eclipse"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_192",
      "text": "4 Update the code by providing any required data. For example, if uploading a file,\nprovide the file path and the bucket name. 5 Run the code. Verify that the object is created by using the AWS Management\nConsole. For more information about the AWS Management Console, go to http://a\nws.amazon.com/console/. Setting the Endpoint\nBy default, the AWS SDK for Java uses the endpoint https://glacier.us-\neast-1.amazonaws.com. You can set the endpoint explicitly as shown in the following Java code\nsnippets. The following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API. Running Java Examples Using Eclipse API Version 2012-06-01 194\n\nAmazon S3 Glacier Developer Guide\nExample\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API. glacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient, sqsClient,\nsnsClient);\nFor a list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier. Using the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS SDK for .NET API is available in AWSSDK.dll. For information about downloading the\nAWS SDK for .NET, go to Sample Code Libraries.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2815604932380445,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Java",
            "Amazon S3 Glacier",
            "endpoint",
            "credentials",
            "low-level API",
            "high-level API",
            "ArchiveTransferManager",
            "AWS Management Console",
            "AWS Regions"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "ArchiveTransferManager",
            "AWSSDK.dll"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK Usage",
          "secondary_categories": [
            "AWS Region Configuration",
            "Code Examples"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to update code for AWS services, set endpoints for different AWS regions using the AWS SDK for Java, and provides information about using the AWS SDK for .NET with Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set the endpoint for the AWS SDK for Java to a specific region?",
            "What is the default endpoint for Amazon S3 Glacier in the AWS SDK for Java?",
            "Where can I download the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK Usage]",
        "tf_idf_keywords": [
          "low-level API",
          "Java",
          "AmazonGlacierClient",
          "AWS SDK",
          "ArchiveTransferManager",
          "Amazon SQS",
          "AWSSDK.dll",
          "credentials",
          "AmazonSNSClient",
          "Amazon SNS",
          "high-level API",
          "Amazon S3 Glacier",
          "AmazonSQSClient",
          "endpoint",
          "AWS Management Console"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_193",
      "text": "As described in Using the AWS SDKs with Amazon\nS3 Glacier, the AWS SDK for .NET provides both the high-level and low-level APIs. Note\nThe low-level API and high-level API provide thread-safe clients for accessing S3 Glacier. As a best practice, your applications should create one client and reuse the client between\nthreads. Topics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\nUsing the AWS SDK for .NET API Version 2012-06-01 195\n\nAmazon S3 Glacier Developer Guide\n\u2022 Running Code Examples\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of Amazon S3 Glacier (S3 Glacier) ( API Reference for Amazon S3 Glacier). When\ncalling any of these methods, you must create a corresponding request object and provide a\nresponse object in which the method can return a S3 Glacier response to the operation. For example, the AmazonGlacierClient class provides the CreateVault method to create\na vault. This method maps to the underlying Create Vault REST operation (see Create Vault\n(PUT vault)). To use this method, you must create instances of the CreateVaultRequest and\nCreateVaultResponse classes to provide request information and receive a S3 Glacier response\nas shown in the following C# code snippet:\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nCreateVaultRequest request = new CreateVaultRequest()\n{\nAccountId = \"-\",\nVaultName = \"*** Provide vault name ***\"\n};\nCreateVaultResponse response = client.CreateVault(request);\nAll the low-level samples in the guide use this pattern. Note\nThe preceding code segment specifies AccountId when creating the request. However,\nwhen using the AWS SDK for .NET, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 12,
        "num_words": 310,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33227088234641333,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Reference",
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Amazon S3 Glacier",
            "low-level API",
            "high-level API",
            "AmazonGlacierClient",
            "CreateVault",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "AccountId",
            "REST operations"
          ],
          "entities": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVault",
            "Amazon.RegionEndpoint.USEast1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the use of the AWS SDK for .NET with Amazon S3 Glacier, detailing both low-level and high-level APIs, with a focus on thread-safe client reuse and creating vaults using the low-level API methods.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a vault using the AWS SDK for .NET with Amazon S3 Glacier?",
            "What is the difference between the low-level and high-level APIs in AWS SDK for .NET?",
            "Is the AccountId required when creating a request with the AmazonGlacierClient class?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "low-level API",
          "CreateVaultResponse",
          "Amazon.RegionEndpoint.USEast1",
          "CreateVaultRequest",
          "AmazonGlacierClient",
          "AccountId",
          "AWS SDK",
          "REST operations",
          "CreateVault",
          "high-level API",
          "Amazon S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_194",
      "text": "You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nUsing the Low-Level API API Version 2012-06-01 196\n\nAmazon S3 Glacier Developer Guide\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor .NET, if you don't provide the account ID, the library sets the account ID to '-'. Using the High-Level API\nTo further simplify your application development, the AWS SDK for .NET provides the\nArchiveTransferManager class that implements a higher-level abstraction for some of the\nmethods in the low-level API. It provides useful methods, such as Upload and Download, for the\narchive operations. For example, the following C# code snippet uses the Upload high-level method to upload an\narchive. string vaultName = \"examplevault\";\nstring archiveToUpload = \"c:\\folder\\exampleArchive.zip\";\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USEast1);\nstring archiveId = manager.Upload(vaultName, \"archive description\",\narchiveToUpload).ArchiveId;\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. All the high-level examples in this guide use this pattern. Note\nThe high-level ArchiveTransferManager class still needs the low-level\nAmazonGlacierClient client, which you can pass either explicitly or the\nArchiveTransferManager creates the client. Running Code Examples\nThe easiest way to get started with the .NET code examples is to install the AWS SDK for .NET. For\nmore information, go to Amazon SDK for .NET. The following procedure outlines steps for you to test the code examples provided in this guide.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 12,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24364000378233014,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS account ID",
            "S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "Low-Level API",
            "High-Level API",
            "Upload method",
            "archive operations",
            "AWS Region"
          ],
          "entities": [
            "AWS",
            "S3 Glacier",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "Amazon.RegionEndpoint.USEast1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "High-Level vs Low-Level API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for .NET to interact with Amazon S3 Glacier, including both low-level and high-level APIs, with examples for uploading archives using the ArchiveTransferManager class.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the purpose of the ArchiveTransferManager class in the AWS SDK for .NET?",
            "What account ID should I use when interacting with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "archive operations",
          "Amazon.RegionEndpoint.USEast1",
          "S3 Glacier",
          "AWS Region",
          "AWS",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "AWS account ID",
          "Upload method",
          "Low-Level API",
          "Amazon S3 Glacier",
          "High-Level API",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_195",
      "text": "Using the High-Level API API Version 2012-06-01 197\n\nAmazon S3 Glacier Developer Guide\nGeneral Process of Creating .NET Code Examples (Using Visual Studio)\n1 Create a credentials profile for your AWS credentials as described in the Amazon SDK\nfor .NET topic Configuring AWS Credentials. 2 Create a new Visual Studio project using the AWS Empty Project template. 3 Replace the code in the project file, Program.cs , with the code in the section you\nare reading. 4 Run the code. Verify that the object is created using the AWS Management Console. For more information about AWS Management Console, go to http://aws.amazon\n.com/console/. Setting the Endpoint\nBy default, the AWS SDK for .NET sets the endpoint to the US West (Oregon) Region (https://\nglacier.us-west-2.amazonaws.com). You can set the endpoint to other AWS Regions as\nshown in the following C# snippets. The following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API. Example\nAmazonGlacierClient client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API. var manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nFor a current list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier. Setting the Endpoint API Version 2012-06-01 198\n\nAmazon S3 Glacier Developer Guide\nCode examples for S3 Glacier using AWS SDKs\nThe following code examples show how to use S3 Glacier with an AWS software development kit\n(SDK). Basics are code examples that show you how to perform the essential operations within a service.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 13,
        "num_words": 259,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3044291765261919,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Code Example"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "Visual Studio",
            "credentials profile",
            "endpoint",
            "US West (Oregon)",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "AWS Management Console",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for .NET",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Endpoint Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Visual Studio",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for .NET to interact with Amazon S3 Glacier, including setting endpoints and running code examples in Visual Studio using the High-Level and Low-Level APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set the endpoint for Amazon S3 Glacier in the AWS SDK for .NET?",
            "What are the steps to create a .NET project for Amazon S3 Glacier using Visual Studio?",
            "Where can I find a list of supported AWS Regions and endpoints for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for .NET]",
        "tf_idf_keywords": [
          "Visual Studio",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "API Version 2012-06-01",
          "credentials profile",
          "Amazon S3 Glacier",
          "US West (Oregon)",
          "endpoint",
          "AWS Management Console",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_196",
      "text": "Actions are code excerpts from larger programs and must be run in context. While actions show you\nhow to call individual service functions, you can see actions in context in their related scenarios. Scenarios are code examples that show you how to accomplish specific tasks by calling multiple\nfunctions within a service or combined with other AWS services. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Get started\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. using Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nAPI Version 2012-06-01 199\n\nAmazon S3 Glacier Developer Guide\nstatic async Task Main()\n{\nvar glacierService = new AmazonGlacierClient();\nConsole.WriteLine(\"Hello Amazon Glacier! \");\nConsole.WriteLine(\"Let's list your Glacier vaults:\");\n// You can use await and any of the async methods to get a response. // Let's get the vaults using a paginator. var glacierVaultPaginator = glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nConsole.WriteLine($\"{vault.CreationDate}:{vault.VaultName}, ARN:\n{vault.VaultARN}\");\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference. Code examples\n\u2022 Basic examples for S3 Glacier using AWS SDKs\n\u2022 Hello Amazon S3 Glacier\n\u2022 Actions for S3 Glacier using AWS SDKs\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\nAPI Version 2012-06-01 200\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\n\u2022 Use ListVaults with an AWS SDK or CLI\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\n\u2022 Scenarios for S3 Glacier using AWS SDKs\n\u2022 Archive a file to Amazon S3 Glacier, get notifications, and initiate a job using an AWS SDK\n\u2022 Get Amazon S3 Glacier archive content and delete the archive using an AWS SDK\nBasic examples for S3 Glacier using AWS SDKs\nThe following code examples show how to use the basics of Amazon S3 Glacier with AWS SDKs. Examples\n\u2022 Hello Amazon S3 Glacier\n\u2022 Actions for S3 Glacier using AWS SDKs\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\n\u2022 Use ListVaults with an AWS SDK or CLI\nBasics API Version 2012-06-01 201\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub.",
      "start_idx": 349359,
      "end_idx": 353224,
      "metadata": {
        "num_sentences": 15,
        "num_words": 676,
        "breakpoint_idx": 2038,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.29995792933872767,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "ListVaults",
            "API Version 2012-06-01",
            "Vault",
            "Paginator",
            "CLI",
            "Archive",
            "Notifications",
            "Multipart Upload"
          ],
          "entities": [
            "Amazon.Glacier",
            "Amazon.Glacier.Model",
            "AmazonGlacierClient",
            "HelloGlacier",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK Code Examples",
          "secondary_categories": [
            "Amazon S3 Glacier API Usage",
            "AWS SDK for .NET"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples and guidance for using Amazon S3 Glacier with AWS SDKs, including actions, scenarios, and basic operations such as creating, listing, and managing vaults and archives. It highlights how to get started with the AWS SDK for .NET and references additional resources on GitHub.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list Amazon S3 Glacier vaults using the AWS SDK for .NET?",
            "What are the basic operations available for Amazon S3 Glacier using AWS SDKs?",
            "Where can I find complete code examples for Amazon S3 Glacier on GitHub?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS SDK Code Examples]",
        "tf_idf_keywords": [
          "Notifications",
          "AmazonGlacierClient",
          "ListVaults",
          "AWS SDK",
          "HelloGlacier",
          "Vault",
          "Paginator",
          "CLI",
          "API Version 2012-06-01",
          "Archive",
          "Amazon.Glacier",
          "Amazon.Glacier.Model",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_197",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. using Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nstatic async Task Main()\n{\nvar glacierService = new AmazonGlacierClient();\nConsole.WriteLine(\"Hello Amazon Glacier! \");\nConsole.WriteLine(\"Let's list your Glacier vaults:\");\n// You can use await and any of the async methods to get a response. // Let's get the vaults using a paginator. var glacierVaultPaginator = glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nConsole.WriteLine($\"{vault.CreationDate}:{vault.VaultName}, ARN:\n{vault.VaultARN}\");\nHello Amazon S3 Glacier API Version 2012-06-01 202\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions for S3 Glacier using AWS SDKs\nThe following code examples demonstrate how to perform individual S3 Glacier actions with AWS\nSDKs. Each example includes a link to GitHub, where you can find instructions for setting up and\nrunning the code. These excerpts call the S3 Glacier API and are code excerpts from larger programs that must be run\nin context. You can see actions in context in Scenarios for S3 Glacier using AWS SDKs . The following examples include only the most commonly used actions. For a complete list, see the\nAmazon S3 Glacier API Reference. Examples\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\nActions API Version 2012-06-01 203\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use ListVaults with an AWS SDK or CLI\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nUse AddTagsToVault with an AWS SDK or CLI\nThe following code examples show how to use AddTagsToVault. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub.",
      "start_idx": 353225,
      "end_idx": 355843,
      "metadata": {
        "num_sentences": 15,
        "num_words": 434,
        "breakpoint_idx": 2053,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3219091506231399,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "ListVaults",
            "AmazonGlacierClient",
            "Paginator",
            "Vault",
            "API Reference",
            "AddTagsToVault",
            "CreateVault",
            "DeleteVault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListVaultsRequest",
            "AmazonGlacierClient",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for .NET",
            "Cloud Storage APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET"
          ],
          "mentioned_tools": [
            "GitHub",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples and instructions for performing various actions with Amazon S3 Glacier using AWS SDKs, including listing vaults, adding tags, and managing vaults via API calls or CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list Glacier vaults using AWS SDK for .NET?",
            "What are the most commonly used actions for Amazon S3 Glacier?",
            "Where can I find code examples for S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "AddTagsToVault",
          "API Reference",
          "AmazonGlacierClient",
          "ListVaults",
          "AWS SDK",
          "Vault",
          "Paginator",
          "GitHub",
          "CreateVault",
          "Amazon S3 Glacier",
          "ListVaultsRequest",
          "DeleteVault",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_198",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// Add tags to the items in an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to add tags to.</param>\n/// <param name=\"key\">The name of the object to tag.</param>\n/// <param name=\"value\">The tag value to add.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> AddTagsToVaultAsync(string vaultName, string key,\nstring value)\n{\nvar request = new AddTagsToVaultRequest\n{\nTags = new Dictionary<string, string>\n{\n{ key, value },\n},\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.AddTagsToVaultAsync(request);\nActions API Version 2012-06-01 204\n\nAmazon S3 Glacier Developer Guide\nreturn response.HttpStatusCode == HttpStatusCode.NoContent;\n}\n\u2022 For API details, see AddTagsToVault in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command adds two tags to a vault named my-vault:\naws glacier add-tags-to-vault --account-id - --vault-name my-vault --\ntags id=1234,date=july2015\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see AddTagsToVault in AWS CLI Command Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use CreateVault with an AWS SDK or CLI\nThe following code examples show how to use CreateVault. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 205\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 301,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34659016927083336,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Reference",
              "Code Example",
              "CLI Command"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AddTagsToVault",
            "AWS SDK",
            "AWS CLI",
            "CreateVault",
            "tags",
            "vault",
            "account ID",
            "HttpStatusCode",
            "AddTagsToVaultRequest"
          ],
          "entities": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI",
            "AddTagsToVault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Code Examples Repository"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add tags to an Amazon S3 Glacier vault using the AWS SDK for .NET and AWS CLI, providing code examples and references for further details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Amazon S3 Glacier vault using the AWS SDK for .NET?",
            "What is the AWS CLI command for adding tags to a Glacier vault?",
            "Where can I find more examples for using Amazon S3 Glacier with an AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "AddTagsToVault",
          "AWS CLI",
          "AddTagsToVaultRequest",
          "AWS SDK",
          "tags",
          "vault",
          "HttpStatusCode",
          "CreateVault",
          "Amazon S3 Glacier",
          "account ID",
          "AWS Code Examples Repository",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_199",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// Create an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to create.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> CreateVaultAsync(string vaultName)\n{\nvar request = new CreateVaultRequest\n{\n// Setting the AccountId to \"-\" means that\n// the account associated with the current\n// account will be used. AccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.CreateVaultAsync(request);\nConsole.WriteLine($\"Created {vaultName} at: {response.Location}\");\nreturn response.HttpStatusCode == HttpStatusCode.Created;\n}\n\u2022 For API details, see CreateVault in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command creates a new vault named my-vault:\nActions API Version 2012-06-01 206\n\nAmazon S3 Glacier Developer Guide\naws glacier create-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see CreateVault in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class CreateVault {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName>\nWhere:\nvaultName - The name of the vault to create.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 273,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41025462680392794,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Command Line Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVault",
            "AWS SDK",
            "Java SDK",
            "AWS CLI",
            "GlacierClient",
            "CreateVaultRequest",
            "vaultName",
            "HttpStatusCode",
            "Region"
          ],
          "entities": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI",
            "Java SDK for Java 2.x"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AWS Code Examples Repository",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples and instructions for creating an Amazon S3 Glacier vault using AWS SDKs for .NET and Java, as well as the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Amazon S3 Glacier vault using the AWS SDK for .NET?",
            "What is the command to create a Glacier vault using the AWS CLI?",
            "What are the prerequisites for running the Java SDK example to create a Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "AWS CLI",
          "Java SDK",
          "vaultName",
          "AWS SDK",
          "GlacierClient",
          "Java SDK for Java 2.x",
          "HttpStatusCode",
          "CreateVault",
          "Region",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_200",
      "text": "Actions API Version 2012-06-01 207\n\nAmazon S3 Glacier Developer Guide\n\"\"\";\nif (args.length != 1) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString vaultName = args[0];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ncreateGlacierVault(glacier, vaultName);\nglacier.close();\n}\npublic static void createGlacierVault(GlacierClient glacier, String\nvaultName) {\ntry {\nCreateVaultRequest vaultRequest = CreateVaultRequest.builder()\n.vaultName(vaultName)\n.build();\nCreateVaultResponse createVaultResult =\nglacier.createVault(vaultRequest);\nSystem.out.println(\"The URI of the new vault is \" +\ncreateVaultResult.location());\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see CreateVault in AWS SDK for Java 2.x API Reference. Actions API Version 2012-06-01 208\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create the client. const { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region. const REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nCreate the vault. // Load the SDK for JavaScript\nimport { CreateVaultCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\nconst params = { vaultName: vaultname };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new CreateVaultCommand(params));\nconsole.log(\"Success, vault created! \");\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error\");\n}\n};\nrun();\nActions API Version 2012-06-01 209\n\nAmazon S3 Glacier Developer Guide\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 265,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36327493455674914,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "CreateVault",
            "AWS SDK for Java",
            "AWS SDK for JavaScript",
            "CreateVaultCommand",
            "vaultName",
            "Region",
            "CreateVaultRequest",
            "GlacierException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "AWS SDK for Java",
            "AWS SDK for JavaScript",
            "CreateVaultCommand"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for Java",
            "AWS SDK for JavaScript"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Redshift"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for JavaScript",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of how to create an Amazon S3 Glacier vault using both the AWS SDK for Java 2.x and the AWS SDK for JavaScript (v3), including setup, API usage, and error handling.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for Java 2.x?",
            "What is the process for creating a vault using the AWS SDK for JavaScript (v3)?",
            "How can I handle errors when creating an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "GlacierException",
          "AWS SDK for JavaScript",
          "CreateVaultRequest",
          "AWS Redshift",
          "vaultName",
          "GlacierClient",
          "CreateVault",
          "Region",
          "Amazon S3 Glacier",
          "CreateVaultCommand",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_201",
      "text": "SDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. // Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\n// Call Glacier to create the vault\nglacier.createVault({ vaultName: \"YOUR_VAULT_NAME\" }, function (err) {\nif (!err) {\nconsole.log(\"Created vault! \");\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference. PowerShell\nTools for PowerShell\nExample 1: Creates a new vault for the user's account. As no value was supplied to the -\nAccountId parameter the cmdlets uses a default of \"-\" indicating the current account. New-GLCVault -VaultName myvault\nOutput:\nActions API Version 2012-06-01 210\n\nAmazon S3 Glacier Developer Guide\n/01234567812/vaults/myvault\n\u2022 For API details, see CreateVault in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 196,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2969732920328776,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "SDK for JavaScript",
            "AWS Glacier",
            "CreateVault",
            "PowerShell",
            "Boto3",
            "API Version",
            "vault",
            "AWS Code Examples Repository",
            "cmdlet",
            "region"
          ],
          "entities": [
            "AWS SDK for JavaScript",
            "AWS Glacier",
            "CreateVault",
            "Boto3",
            "AWS Tools for PowerShell"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDKs",
          "secondary_categories": [
            "AWS Tools for PowerShell",
            "AWS Developer Guides"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "AWS Tools for PowerShell",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for creating a new Amazon S3 Glacier vault using SDKs for JavaScript, PowerShell, and Python, along with links to additional resources and API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a new vault in Amazon S3 Glacier using the JavaScript SDK?",
            "What is the default behavior of the AccountId parameter in PowerShell when creating a vault?",
            "Where can I find detailed API documentation for CreateVault in AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDKs]",
        "tf_idf_keywords": [
          "Boto3",
          "AWS SDK for JavaScript",
          "PowerShell",
          "region",
          "cmdlet",
          "AWS Tools for PowerShell",
          "vault",
          "AWS Glacier",
          "CreateVault",
          "Amazon S3 Glacier",
          "SDK for JavaScript",
          "AWS Code Examples Repository",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_202",
      "text": "class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef create_vault(self, vault_name):\n\"\"\"\nCreates a vault. :param vault_name: The name to give the vault. :return: The newly created vault.\n\"\"\" try:\nvault = self.glacier_resource.create_vault(vaultName=vault_name)\nlogger.info(\"Created vault %s. \", vault_name)\nexcept ClientError:\nlogger.exception(\"Couldn't create vault %s. \", vault_name)\nraise\nelse:\nreturn vault\nActions API Version 2012-06-01 211\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see CreateVault in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 124,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3967906528049045,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeSnippet",
              "APIUsage"
            ]
          },
          "keywords": [
            "GlacierWrapper",
            "Amazon S3 Glacier",
            "create_vault",
            "vault_name",
            "Boto3",
            "AWS SDK",
            "ClientError",
            "logger",
            "CreateVault",
            "API Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK",
            "CreateVault",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "AWS SDK for Python (Boto3)",
            "Cloud Storage Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The GlacierWrapper class encapsulates Amazon S3 Glacier API operations, including creating vaults using the Boto3 SDK.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using Boto3?",
            "What is the purpose of the GlacierWrapper class?",
            "What happens if the vault creation fails in GlacierWrapper?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "create_vault",
          "logger",
          "vault_name",
          "GlacierWrapper",
          "ClientError",
          "API Reference",
          "AWS SDK",
          "CreateVault",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_203",
      "text": "Use DeleteArchive with an AWS SDK or CLI\nThe following code examples show how to use DeleteArchive. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nTo delete an archive from a vault\nThe following delete-archive example removes the specified archive from\nexample_vault. aws glacier delete-archive \\\n--account-id 111122223333 \\\n--vault-name example_vault \\\n--archive-id Sc0u9ZP8yaWkmh-XGlIvAVprtLhaLCGnNwNl5I5x9HqPIkX5mjc0DrId3Ln-\nGi_k2HzmlIDZUz117KSdVMdMXLuFWi9PJUitxWO73edQ43eTlMWkH0pd9zVSAuV_XXZBVhKhyGhJ7w\nThis command produces no output. \u2022 For API details, see DeleteArchive in AWS CLI Command Reference. Actions API Version 2012-06-01 212\n\nAmazon S3 Glacier Developer Guide\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class DeleteArchive {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName> <accountId> <archiveId>\nWhere:\nvaultName - The name of the vault that contains the archive to\ndelete. accountId - The account ID value.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 218,
        "chunk_type": "semantic_split",
        "coherence_score": 0.343485344780816,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "DeleteArchive",
            "AWS SDK",
            "AWS CLI",
            "GlacierClient",
            "DeleteArchiveRequest",
            "GlacierException",
            "archive",
            "vault",
            "Java SDK",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "AWS SDK",
            "AWS CLI",
            "Amazon S3 Glacier",
            "DeleteArchive",
            "Java SDK for AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "Command Line Interface (CLI) Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java 2.x"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the DeleteArchive action in AWS Glacier via AWS SDK for Java and AWS CLI to remove an archive from a specified vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from a vault using AWS CLI?",
            "What is the Java SDK code example for using the DeleteArchive action?",
            "Where can I find more resources for setting up the AWS Java SDK environment?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "archive",
          "AWS CLI",
          "Java SDK",
          "AWS SDK",
          "GlacierClient",
          "vault",
          "Java SDK for AWS",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS Code Examples Repository",
          "DeleteArchive"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_204",
      "text": "archiveId - The archive ID value. \"\"\";\nif (args.length != 3) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nActions API Version 2012-06-01 213\n\nAmazon S3 Glacier Developer Guide\nString vaultName = args[0];\nString accountId = args[1];\nString archiveId = args[2];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ndeleteGlacierArchive(glacier, vaultName, accountId, archiveId);\nglacier.close();\n}\npublic static void deleteGlacierArchive(GlacierClient glacier, String\nvaultName, String accountId,\nString archiveId) {\ntry {\nDeleteArchiveRequest delArcRequest = DeleteArchiveRequest.builder()\n.vaultName(vaultName)\n.accountId(accountId)\n.archiveId(archiveId)\n.build();\nglacier.deleteArchive(delArcRequest);\nSystem.out.println(\"The archive was deleted. \");\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see DeleteArchive in AWS SDK for Java 2.x API Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Actions API Version 2012-06-01 214\n\nAmazon S3 Glacier Developer Guide\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef delete_archive(archive):\n\"\"\"\nDeletes an archive from a vault. :param archive: The archive to delete.\n\"\"\" try:\narchive.delete()\nlogger.info(\n\"Deleted archive %s from vault %s.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3136295318603516,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Error Handling"
            ]
          },
          "keywords": [
            "archiveId",
            "vaultName",
            "accountId",
            "GlacierClient",
            "DeleteArchiveRequest",
            "AWS SDK for Java",
            "Boto3",
            "Amazon S3 Glacier",
            "deleteGlacierArchive",
            "GlacierException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Boto3",
            "DeleteArchiveRequest",
            "Region.US_EAST_1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for Java",
            "AWS SDK for Python (Boto3)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for Python (Boto3)"
          ],
          "mentioned_tools": [
            "Java",
            "Python",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive from an Amazon S3 Glacier vault using both the AWS SDK for Java and Python (Boto3). It includes code examples and references to additional resources for implementation.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I delete an archive from an Amazon S3 Glacier vault using Java?",
            "What is the process for deleting an archive with Python's Boto3 library?",
            "What errors might occur when deleting an archive in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "deleteGlacierArchive",
          "AWS SDK for Python (Boto3)",
          "archiveId",
          "vaultName",
          "Region.US_EAST_1",
          "GlacierClient",
          "accountId",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_205",
      "text": "\", archive.id,\narchive.vault_name\n)\nexcept ClientError:\nlogger.exception(\"Couldn't delete archive %s. \", archive.id)\nraise\n\u2022 For API details, see DeleteArchive in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use DeleteVault with an AWS SDK or CLI\nThe following code examples show how to use DeleteVault. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\nActions API Version 2012-06-01 215\n\nAmazon S3 Glacier Developer Guide\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command deletes a vault named my-vault:\naws glacier delete-vault --vault-name my-vault --account-id -\nThis command does not produce any output. Amazon Glacier requires an account ID\nargument when performing operations, but you can use a hyphen to specify the in-use\naccount. \u2022 For API details, see DeleteVault in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25969395107693144,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "CLI Command",
              "API Reference"
            ]
          },
          "keywords": [
            "DeleteArchive",
            "DeleteVault",
            "AWS SDK",
            "Boto3",
            "Amazon S3 Glacier",
            "CLI Command",
            "Account ID",
            "API Version 2012-06-01",
            "Java SDK",
            "GitHub"
          ],
          "entities": [
            "AWS SDK for Python",
            "AWS CLI",
            "Amazon S3 Glacier",
            "Boto3",
            "Java SDK for Java 2.x"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details and examples on how to delete archives and vaults in Amazon S3 Glacier using AWS SDKs, CLI, and API references.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using Boto3?",
            "What is the AWS CLI command to delete a vault in Amazon S3 Glacier?",
            "Where can I find API details for DeleteVault in AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "AWS SDK for Python (Boto3)",
          "AWS CLI",
          "Java SDK",
          "CLI Command",
          "AWS SDK",
          "Java SDK for Java 2.x",
          "Account ID",
          "API Version 2012-06-01",
          "GitHub",
          "AWS SDK for Python",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "DeleteVault",
          "DeleteArchive"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_206",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\nActions API Version 2012-06-01 216\n\nAmazon S3 Glacier Developer Guide\npublic class DeleteVault {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName>\nWhere:\nvaultName - The name of the vault to delete.\\s\n\"\"\";\nif (args.length != 1) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString vaultName = args[0];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ndeleteGlacierVault(glacier, vaultName);\nglacier.close();\n}\npublic static void deleteGlacierVault(GlacierClient glacier, String\nvaultName) {\ntry {\nDeleteVaultRequest delVaultRequest = DeleteVaultRequest.builder()\n.vaultName(vaultName)\n.build();\nglacier.deleteVault(delVaultRequest);\nSystem.out.println(\"The vault was deleted! \");\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see DeleteVault in AWS SDK for Java 2.x API Reference. Actions API Version 2012-06-01 217\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef delete_vault(vault):\n\"\"\"\nDeletes a vault. :param vault: The vault to delete.\n\"\"\"",
      "start_idx": 368682,
      "end_idx": 371876,
      "metadata": {
        "num_sentences": 10,
        "num_words": 241,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4333958943684896,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "DeleteVaultRequest",
            "GlacierClient",
            "Region.US_EAST_1",
            "Boto3",
            "GlacierException",
            "deleteGlacierVault",
            "AWS Code Examples Repository",
            "API Reference"
          ],
          "entities": [
            "AWS SDK for Java 2.x",
            "Amazon S3 Glacier",
            "DeleteVault",
            "GlacierClient",
            "Boto3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Boto3"
          ],
          "mentioned_tools": [
            "Java",
            "Python",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of how to delete an Amazon S3 Glacier vault using both the AWS SDK for Java (V2) and Python (Boto3), including setup instructions and code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Amazon S3 Glacier vault using the AWS SDK for Java?",
            "What is the Python (Boto3) implementation for deleting an Amazon S3 Glacier vault?",
            "Where can I find the complete example and setup instructions for these code snippets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Boto3",
          "Region.US_EAST_1",
          "API Reference",
          "AWS SDK for Java 2.x",
          "AWS Code Examples Repository",
          "GlacierClient",
          "DeleteVaultRequest",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS SDK for Java",
          "deleteGlacierVault",
          "DeleteVault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_207",
      "text": "try:\nvault.delete()\nlogger.info(\"Deleted vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't delete vault %s. \", vault.name)\nraise\n\u2022 For API details, see DeleteVault in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 218\n\nAmazon S3 Glacier Developer Guide\nUse DeleteVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use DeleteVaultNotifications. CLI\nAWS CLI\nTo remove the SNS notifications for a vault\nThe following delete-vault-notifications example removes notifications sent by\nAmazon Simple Notification Service (Amazon SNS) for the specified vault. aws glacier delete-vault-notifications \\\n--account-id 111122223333 \\\n--vault-name example_vault\nThis command produces no output. \u2022 For API details, see DeleteVaultNotifications in AWS CLI Command Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 368682,
      "end_idx": 371876,
      "metadata": {
        "num_sentences": 10,
        "num_words": 155,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3775567372639974,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "DeleteVault",
            "AWS SDK for Python",
            "Boto3",
            "DeleteVaultNotifications",
            "Amazon S3 Glacier",
            "SNS notifications",
            "AWS CLI",
            "Amazon Simple Notification Service",
            "vault",
            "ClientError"
          ],
          "entities": [
            "AWS SDK for Python",
            "Boto3",
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and details on using AWS SDKs and CLI to delete a vault and remove SNS notifications for an Amazon S3 Glacier vault, including error handling and references to relevant API documentation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault using Boto3 in Python?",
            "How can I remove SNS notifications for an S3 Glacier vault using the AWS CLI?",
            "What happens if a ClientError occurs during vault deletion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "AWS CLI",
          "ClientError",
          "vault",
          "SNS notifications",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service",
          "DeleteVault",
          "DeleteVaultNotifications",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_208",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 219\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef stop_notifications(notification):\n\"\"\"\nStops notifications to the configured Amazon SNS topic. :param notification: The notification configuration to remove.\n\"\"\" try:\nnotification.delete()\nlogger.info(\"Notifications stopped.\") except ClientError:\nlogger.exception(\"Couldn't stop notifications.\") raise\n\u2022 For API details, see DeleteVaultNotifications in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK.",
      "start_idx": 371877,
      "end_idx": 375094,
      "metadata": {
        "num_sentences": 9,
        "num_words": 116,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3058239354027642,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK",
            "API operations",
            "DeleteVaultNotifications",
            "SNS topic",
            "ClientError",
            "notification",
            "logger",
            "glacier_resource"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "SNS topic",
            "DeleteVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Notification Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK for Python"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of setting up and running Amazon S3 Glacier operations using the AWS SDK for Python (Boto3), including stopping notifications to an SNS topic.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop notifications for an Amazon S3 Glacier resource?",
            "What is the purpose of the stop_notifications method in the GlacierWrapper class?",
            "Where can I find more examples for using Amazon S3 Glacier with Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "Boto3",
          "SNS topic",
          "logger",
          "ClientError",
          "AWS SDK",
          "notification",
          "Amazon SNS",
          "glacier_resource",
          "Amazon S3 Glacier",
          "API operations",
          "DeleteVaultNotifications",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_209",
      "text": "This topic also includes information about getting started and details about previous\nSDK versions. Use DescribeJob with an AWS SDK or CLI\nThe following code examples show how to use DescribeJob. CLI\nAWS CLI\nThe following command retrieves information about an inventory retrieval job on a vault\nnamed my-vault:\naws glacier describe-job --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\nOutput:\n{\nActions API Version 2012-06-01 220\n\nAmazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-vault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"InProgress\"\n}\nThe job ID can be found in the output of aws glacier initiate-job and aws glacier\nlist-jobs. Amazon Glacier requires an account ID argument when performing operations,\nbut you can use a hyphen to specify the in-use account. \u2022 For API details, see DescribeJob in AWS CLI Command Reference. PowerShell\nTools for PowerShell\nExample 1: Returns details of the specified job. When the job completes successfully the\nRead-GCJobOutput cmdlet can be used to retrieve the contents of the job (an archive or\ninventory list) to the local file system. Get-GLCJob -VaultName myvault -JobId \"op1x...JSbthM\"\nOutput:\nAction : ArchiveRetrieval\nArchiveId : o9O9j...X-TpIhQJw\nArchiveSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nArchiveSizeInBytes : 38034480\nCompleted : False\nCompletionDate : 1/1/0001 12:00:00 AM\nCreationDate : 12/13/2018 11:00:14 AM\nInventoryRetrievalParameters :\nInventorySizeInBytes : 0\nJobDescription :\nJobId : op1x...JSbthM\nJobOutputPath :\nActions API Version 2012-06-01 221\n\nAmazon S3 Glacier Developer Guide\nOutputLocation :\nRetrievalByteRange : 0-38034479\nSelectParameters :\nSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nSNSTopic :\nStatusCode : InProgress\nStatusMessage :\nTier : Standard\nVaultARN : arn:aws:glacier:us-west-2:012345678912:vaults/test\n\u2022 For API details, see DescribeJob in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 371877,
      "end_idx": 375094,
      "metadata": {
        "num_sentences": 9,
        "num_words": 279,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2968928549024794,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "DescribeJob",
            "AWS CLI",
            "Amazon S3 Glacier",
            "InventoryRetrieval",
            "VaultARN",
            "JobId",
            "PowerShell",
            "Boto3",
            "SDK",
            "ArchiveRetrieval"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "PowerShell",
            "Boto3",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Job Management",
          "secondary_categories": [
            "AWS CLI Commands",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS Tools for PowerShell"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "PowerShell",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information on using the DescribeJob operation in AWS Glacier through various tools like AWS CLI, PowerShell, and Python SDK, including examples and output details for inventory and archive retrieval jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve information about an inventory retrieval job using AWS CLI?",
            "What is the output structure of the DescribeJob command in PowerShell?",
            "How do I use the DescribeJob operation with the Python SDK (Boto3)?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "Boto3",
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "PowerShell",
          "AWS CLI",
          "DescribeJob",
          "VaultARN",
          "JobId",
          "SDK",
          "AWS Tools for PowerShell",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_210",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef get_job_status(job):\n\"\"\"\nGets the status of a job. :param job: The job to query. :return: The current status of the job.\n\"\"\" try:\njob.load()\nActions API Version 2012-06-01 222\n\nAmazon S3 Glacier Developer Guide\nlogger.info(\n\"Job %s is performing action %s and has status %s. \",\njob.id,\njob.action,\njob.status_code,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get status for job %s. \", job.id)\nraise\nelse:\nreturn job.status_code\n\u2022 For API details, see DescribeJob in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use DescribeVault with an AWS SDK or CLI\nThe following code examples show how to use DescribeVault. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 375095,
      "end_idx": 379759,
      "metadata": {
        "num_sentences": 14,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2891741742144574,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "DescribeJob",
            "DescribeVault",
            "AWS SDK",
            "ClientError",
            "job.status_code",
            "glacier_resource",
            "API Reference",
            "logger"
          ],
          "entities": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK for Python",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Python (Boto3)",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Python (Boto3) to interact with Amazon S3 Glacier, including retrieving job statuses and using the DescribeVault API. It also provides links to code examples and setup instructions in the AWS Code Examples Repository.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve the status of a job in Amazon S3 Glacier using Boto3?",
            "What is the purpose of the DescribeVault API in Amazon S3 Glacier?",
            "Where can I find complete examples for using Amazon S3 Glacier with AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Python (Boto3)]",
        "tf_idf_keywords": [
          "Boto3",
          "logger",
          "API Reference",
          "ClientError",
          "DescribeJob",
          "AWS SDK",
          "job.status_code",
          "glacier_resource",
          "Amazon S3 Glacier",
          "DescribeVault",
          "AWS Code Examples Repository",
          "AWS SDK for .NET",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_211",
      "text": "/// <summary>\n/// Describe an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to describe.</param>\n/// <returns>The Amazon Resource Name (ARN) of the vault.</returns>\npublic async Task<string> DescribeVaultAsync(string vaultName)\n{\nActions API Version 2012-06-01 223\n\nAmazon S3 Glacier Developer Guide\nvar request = new DescribeVaultRequest\n{\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.DescribeVaultAsync(request);\n// Display the information about the vault. Console.WriteLine($\"{response.VaultName}\\tARN: {response.VaultARN}\");\nConsole.WriteLine($\"Created on: {response.CreationDate}\\tNumber\nof Archives: {response.NumberOfArchives}\\tSize (in bytes):\n{response.SizeInBytes}\");\nif (response.LastInventoryDate != DateTime.MinValue)\n{\nConsole.WriteLine($\"Last inventory: {response.LastInventoryDate}\");\n}\nreturn response.VaultARN;\n}\n\u2022 For API details, see DescribeVault in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command retrieves data about a vault named my-vault:\naws glacier describe-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see DescribeVault in AWS CLI Command Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 224\n\nAmazon S3 Glacier Developer Guide\nUse GetJobOutput with an AWS SDK or CLI\nThe following code examples show how to use GetJobOutput. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command saves the output from a vault inventory job to a file in the current\ndirectory named output.json:\naws glacier get-job-output --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW output.json\nThe job-id is available in the output of aws glacier list-jobs. Note that the output\nfile name is a positional argument that is not prefixed by an option name. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account. Output:\n{\n\"status\": 200,\n\"acceptRanges\": \"bytes\",\n\"contentType\": \"application/json\"\n}\noutput.json:\n{\"VaultARN\":\"arn:aws:glacier:us-west-2:0123456789012:vaults/\nmy-vault\",\"InventoryDate\":\"2015-04-07T00:26:18Z\",\"ArchiveList\":\n[{\"ArchiveId\":\"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\"ArchiveDescription\":\"multipart\nActions API Version 2012-06-01 225\n\nAmazon S3 Glacier Developer Guide\nupload\ntest\",\"CreationDate\":\"2015-04-06T22:24:34Z\",\"Size\":3145728,\"SHA256TreeHash\":\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\"}]}\n\u2022 For API details, see GetJobOutput in AWS CLI Command Reference. PowerShell\nTools for PowerShell\nExample 1: Downloads the archive content that was scheduled for retrieval in the\nspecified job and stores the contents into a file on disk.",
      "start_idx": 375095,
      "end_idx": 379759,
      "metadata": {
        "num_sentences": 14,
        "num_words": 404,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3176225096314818,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference",
              "CLI Command"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeVaultAsync",
            "VaultARN",
            "DescribeVaultRequest",
            "AWS SDK",
            "AWS CLI",
            "GetJobOutput",
            "InventoryDate",
            "ArchiveList",
            "SHA256TreeHash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "DescribeVault",
            "AWS CLI",
            "GetJobOutput"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDK",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to describe an Amazon S3 Glacier vault using the AWS SDK for .NET and AWS CLI, as well as how to retrieve job output and save it to a file. It includes code examples and details for both methods.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I describe an Amazon S3 Glacier vault using AWS SDK for .NET?",
            "What command retrieves data about a specific vault using AWS CLI?",
            "How do I save the output of a vault inventory job to a file using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "SHA256TreeHash",
          "AWS CLI",
          "VaultARN",
          "DescribeVaultAsync",
          "AWS SDK",
          "GetJobOutput",
          "DescribeVaultRequest",
          "ArchiveList",
          "Amazon S3 Glacier",
          "DescribeVault",
          "InventoryDate"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_212",
      "text": "The download validates the\nchecksum for you, if one is available. If desired the entire response including the\nchecksum can be returned by specifying -Select '*'. Read-GLCJobOutput -VaultName myvault -JobId \"HSWjArc...Zq2XLiW\" -FilePath \"c:\n\\temp\\blue.bin\"\n\u2022 For API details, see GetJobOutput in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 379760,
      "end_idx": 380157,
      "metadata": {
        "num_sentences": 4,
        "num_words": 57,
        "breakpoint_idx": 2203,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.14625410238901773,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Validation",
              "API Usage",
              "Command Example"
            ]
          },
          "keywords": [
            "checksum",
            "response",
            "AWS Tools",
            "PowerShell",
            "Cmdlet",
            "GetJobOutput",
            "VaultName",
            "JobId",
            "FilePath",
            "Boto3"
          ],
          "entities": [
            "Read-GLCJobOutput",
            "VaultName",
            "JobId",
            "AWS Tools for PowerShell",
            "Python SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Data Management",
          "secondary_categories": [
            "API Interaction",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "AWS Tools for PowerShell",
            "AWS SDK for Python (Boto3)"
          ],
          "mentioned_tools": [
            "PowerShell",
            "Python"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to validate a checksum during a download and retrieve the entire response, including the checksum, using specific commands. It also references additional details in AWS Tools for PowerShell and Python SDK (Boto3).",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I validate a checksum during a download in AWS Tools for PowerShell?",
            "How can I retrieve the entire response, including the checksum, using the -Select '*' option?",
            "Where can I find API details for GetJobOutput in AWS Tools for PowerShell?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Data Management]",
        "tf_idf_keywords": [
          "checksum",
          "FilePath",
          "Boto3",
          "AWS SDK for Python (Boto3)",
          "PowerShell",
          "AWS Tools for PowerShell",
          "JobId",
          "AWS Tools",
          "GetJobOutput",
          "Python SDK",
          "Cmdlet",
          "response",
          "Read-GLCJobOutput",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_213",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 226\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef get_job_output(job):\n\"\"\"\nGets the output of a job, such as a vault inventory or the contents of an\narchive. :param job: The job to get output from.",
      "start_idx": 380158,
      "end_idx": 380711,
      "metadata": {
        "num_sentences": 5,
        "num_words": 81,
        "breakpoint_idx": 2208,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3535146713256836,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "CodeSnippet",
              "APIUsage"
            ]
          },
          "keywords": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "Boto3",
            "glacier_resource",
            "job output",
            "vault inventory",
            "archive",
            "API operations",
            "Developer Guide",
            "Actions API Version 2012-06-01"
          ],
          "entities": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "Boto3",
            "Actions API Version 2012-06-01",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example and instructions for using the Amazon S3 Glacier API, including a class to encapsulate operations and a method to retrieve job outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up and run the Amazon S3 Glacier API example?",
            "What is the purpose of the GlacierWrapper class?",
            "How can I retrieve the output of a job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Boto3",
          "Developer Guide",
          "vault inventory",
          "Amazon S3 Glacier Developer Guide",
          "archive",
          "Actions API Version 2012-06-01",
          "job output",
          "glacier_resource",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "API operations"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_214",
      "text": ":return: The job output, in bytes.\n\"\"\" try:\nresponse = job.get_output()\nout_bytes = response[\"body\"].read()\nlogger.info(\"Read %s bytes from job %s. \", len(out_bytes), job.id)\nif \"archiveDescription\" in response:\nlogger.info(\n\"These bytes are described as '%s'\",\nresponse[\"archiveDescription\"]\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get output for job %s. \", job.id)\nraise\nelse:\nreturn out_bytes\n\u2022 For API details, see GetJobOutput in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use GetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use GetVaultNotifications. CLI\nAWS CLI\nThe following command gets a description of the notification configuration for a vault\nnamed my-vault:\nActions API Version 2012-06-01 227\n\nAmazon S3 Glacier Developer Guide\naws glacier get-vault-notifications --account-id - --vault-name my-vault\nOutput:\n{\n\"vaultNotificationConfig\": {\n\"Events\": [\n\"InventoryRetrievalCompleted\",\n\"ArchiveRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\"\n}\n}\nIf no notifications have been configured for the vault, an error is returned. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account. \u2022 For API details, see GetVaultNotifications in AWS CLI Command Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 380712,
      "end_idx": 382293,
      "metadata": {
        "num_sentences": 11,
        "num_words": 218,
        "breakpoint_idx": 2219,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2505073547363281,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Code Example",
              "Command Reference"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Boto3",
            "GetJobOutput",
            "GetVaultNotifications",
            "S3 Glacier",
            "ClientError",
            "AWS CLI",
            "vaultNotificationConfig",
            "SNSTopic",
            "InventoryRetrievalCompleted"
          ],
          "entities": [
            "AWS SDK for Python",
            "Amazon S3 Glacier",
            "Boto3",
            "AWS CLI",
            "GetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve job output in bytes using AWS S3 Glacier and provides examples for using GetVaultNotifications with AWS SDK for Python (Boto3) and AWS CLI.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve job output using AWS S3 Glacier?",
            "What is the command to get vault notifications in AWS CLI?",
            "What happens if no notifications are configured for a vault in Amazon Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "S3 Glacier",
          "SNS",
          "AWS CLI",
          "ClientError",
          "AWS SDK",
          "GetJobOutput",
          "GetVaultNotifications",
          "AWS SDK for Python",
          "Amazon S3 Glacier",
          "vaultNotificationConfig",
          "SNSTopic",
          "InventoryRetrievalCompleted"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_215",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 228\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef get_notification(vault):\n\"\"\"\nGets the currently notification configuration for a vault. :param vault: The vault to query. :return: The notification configuration for the specified vault.\n\"\"\" try:\nnotification = vault.Notification()\nlogger.info(\n\"Vault %s notifies %s on %s events. \",\nvault.name,\nnotification.sns_topic,\nnotification.events,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get notification data for %s. \",\nvault.name)\nraise\nelse:\nreturn notification\n\u2022 For API details, see GetVaultNotifications in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use InitiateJob with an AWS SDK or CLI\nThe following code examples show how to use InitiateJob. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 229\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 382294,
      "end_idx": 383976,
      "metadata": {
        "num_sentences": 15,
        "num_words": 249,
        "breakpoint_idx": 2234,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3080812000093006,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "Boto3",
            "InitiateJob",
            "Vault Notifications",
            "API Version 2012-06-01",
            "ClientError",
            "SNS Topic",
            "AWS Code Examples Repository",
            "Archive File"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "AWS Code Examples Repository",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "AWS SDK Integration",
            "Cloud Storage Notifications"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "AWS SDK for .NET"
          ],
          "mentioned_tools": [
            "Boto3",
            ".NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of Amazon S3 Glacier API operations, including methods for retrieving vault notification configurations and initiating jobs, with references to AWS SDKs and code examples for implementation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve the notification configuration for an Amazon S3 Glacier vault?",
            "Where can I find complete examples for using Amazon S3 Glacier with AWS SDKs?",
            "How do I initiate a job using the Amazon S3 Glacier API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "AWS SDK for Python (Boto3)",
          "Archive File",
          "ClientError",
          "AWS Code Examples Repository",
          "AWS SDK",
          "AWS SDK for .NET",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "InitiateJob",
          "SNS Topic",
          "Vault Notifications",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_216",
      "text": "Retrieve an archive from a vault. This example uses the ArchiveTransferManager class. For\nAPI details see ArchiveTransferManager. /// <summary>\n/// Download an archive from an Amazon S3 Glacier vault using the Archive\n/// Transfer Manager. /// </summary>\n/// <param name=\"vaultName\">The name of the vault containing the object.</\nparam>\n/// <param name=\"archiveId\">The Id of the archive to download.</param>\n/// <param name=\"localFilePath\">The local directory where the file will\n/// be stored after download.</param>\n/// <returns>Async Task.</returns>\npublic async Task<bool> DownloadArchiveWithArchiveManagerAsync(string\nvaultName, string archiveId, string localFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\nvar options = new DownloadOptions\n{\nStreamTransferProgress = Progress!,\n};\n// Download an archive. Console.WriteLine(\"Initiating the archive retrieval job and then\npolling SQS queue for the archive to be available. \");\nConsole.WriteLine(\"When the archive is available, downloading will\nbegin. \");\nawait manager.DownloadAsync(vaultName, archiveId, localFilePath,\noptions);\nActions API Version 2012-06-01 230\n\nAmazon S3 Glacier Developer Guide\nreturn true;\n}\ncatch (AmazonGlacierException ex)\n{\nConsole.WriteLine(ex.Message);\nreturn false;\n}\n}\n/// <summary>\n/// Event handler to track the progress of the Archive Transfer Manager. /// </summary>\n/// <param name=\"sender\">The object that raised the event.</param>\n/// <param name=\"args\">The argument values from the object that raised the\n/// event.</param>\nstatic void Progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != _currentPercentage)\n{\n_currentPercentage = args.PercentDone;\nConsole.WriteLine($\"Downloaded {_currentPercentage}%\");\n}\n}\n\u2022 For API details, see InitiateJob in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command initiates a job to get an inventory of the vault my-vault:\naws glacier initiate-job --account-id - --vault-name my-vault --job-parameters\n'{\"Type\": \"inventory-retrieval\"}'\nOutput:\n{\nActions API Version 2012-06-01 231\n\nAmazon S3 Glacier Developer Guide\n\"location\": \"/0123456789012/vaults/my-vault/jobs/\nzbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"jobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\"\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. The following command initiates a job to retrieve an archive from the vault my-vault:\naws glacier initiate-job --account-id - --vault-name my-vault --job-\nparameters file://job-archive-retrieval.json\njob-archive-retrieval.json is a JSON file in the local folder that specifies the type of\njob, archive ID, and some optional parameters:\n{\n\"Type\": \"archive-retrieval\",\n\"ArchiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"Description\": \"Retrieve archive on 2015-07-17\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-topic\"\n}\nArchive IDs are available in the output of aws glacier upload-archive and aws\nglacier get-job-output. Output:\n{\n\"location\": \"/011685312445/vaults/mwunderl/jobs/l7IL5-\nEkXyEY9Ws95fClzIbk2O5uLYaFdAYOi-\nazsX_Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59-8N9aHWav\",\n\"jobId\": \"l7IL5-EkXy2O5uLYaFdAYOiEY9Ws95fClzIbk-\nazsX_Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59-8N9aHWav\"\n}\nSee Initiate Job in the Amazon Glacier API Reference for details on the job parameters\nformat. Actions API Version 2012-06-01 232\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub.",
      "start_idx": 383977,
      "end_idx": 387755,
      "metadata": {
        "num_sentences": 14,
        "num_words": 427,
        "breakpoint_idx": 2248,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3789084717467591,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "ArchiveTransferManager",
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "DownloadOptions",
            "StreamTransferProgress",
            "AWS CLI",
            "InitiateJob",
            "job-parameters",
            "SNSTopic"
          ],
          "entities": [
            "ArchiveTransferManager",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI",
            "JSON"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Archive Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "AWS CLI Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "AWS SDK for Java 2.x"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve an archive from an Amazon S3 Glacier vault using the ArchiveTransferManager class, including API details, CLI commands, and job parameter formats.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from an Amazon S3 Glacier vault?",
            "What are the required parameters for initiating an archive retrieval job?",
            "How can I track the progress of an archive transfer in Amazon Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier Archive Management]",
        "tf_idf_keywords": [
          "StreamTransferProgress",
          "DownloadOptions",
          "archive",
          "AWS CLI",
          "ArchiveTransferManager",
          "vault",
          "AWS SDK for .NET",
          "SNSTopic",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "JSON",
          "InitiateJob",
          "job-parameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_217",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Retrieve a vault inventory. import software.amazon.awssdk.core.ResponseBytes;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.JobParameters;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputRequest;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputResponse;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class ArchiveDownload {\npublic static void main(String[] args) {\nActions API Version 2012-06-01 233\n\nAmazon S3 Glacier Developer Guide\nfinal String usage = \"\"\"\nUsage: <vaultName> <accountId> <path>\nWhere:\nvaultName - The name of the vault.",
      "start_idx": 387756,
      "end_idx": 389245,
      "metadata": {
        "num_sentences": 4,
        "num_words": 122,
        "breakpoint_idx": 2252,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3673543930053711,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "AWS Code Examples Repository",
            "vault inventory",
            "GlacierClient",
            "InitiateJobRequest",
            "DescribeJobResponse",
            "GetJobOutputRequest",
            "ResponseBytes",
            "Amazon S3 Glacier",
            "Java V2",
            "SDK for Java"
          ],
          "entities": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "GlacierClient",
            "JobParameters",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java example for retrieving a vault inventory from Amazon S3 Glacier using the AWS SDK for Java V2. It includes setup instructions, required imports, and code structure for initiating and describing jobs, as well as retrieving job output.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory from Amazon S3 Glacier using Java?",
            "What are the required imports and setup steps for using the AWS SDK for Java V2 with Amazon S3 Glacier?",
            "What is the process for initiating and describing jobs in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "vault inventory",
          "DescribeJobResponse",
          "GetJobOutputRequest",
          "GlacierClient",
          "SDK for Java",
          "Region",
          "Amazon S3 Glacier",
          "Java V2",
          "AWS Code Examples Repository",
          "JobParameters",
          "ResponseBytes"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_218",
      "text": "accountId - The account ID value. path - The path where the file is written to. \"\"\";\nif (args.length != 3) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString vaultName = args[0];\nString accountId = args[1];\nString path = args[2];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nString jobNum = createJob(glacier, vaultName, accountId);\ncheckJob(glacier, jobNum, vaultName, accountId, path);\nglacier.close();\n}\npublic static String createJob(GlacierClient glacier, String vaultName,\nString accountId) {\ntry {\nJobParameters job = JobParameters.builder()\n.type(\"inventory-retrieval\")\n.build();\nInitiateJobRequest initJob = InitiateJobRequest.builder()\n.jobParameters(job)\n.accountId(accountId)\n.vaultName(vaultName)\n.build();\nInitiateJobResponse response = glacier.initiateJob(initJob);\nSystem.out.println(\"The job ID is: \" + response.jobId());\nSystem.out.println(\"The relative URI path of the job is: \" +\nresponse.location());\nActions API Version 2012-06-01 234\n\nAmazon S3 Glacier Developer Guide\nreturn response.jobId();\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\nreturn \"\";\n}\n// Poll S3 Glacier = Polling a Job may take 4-6 hours according to the\n// Documentation. public static void checkJob(GlacierClient glacier, String jobId, String name,\nString account, String path) {\ntry {\nboolean finished = false;\nString jobStatus;\nint yy = 0;\nwhile (!finished) {\nDescribeJobRequest jobRequest = DescribeJobRequest.builder()\n.jobId(jobId)\n.accountId(account)\n.vaultName(name)\n.build();\nDescribeJobResponse response = glacier.describeJob(jobRequest);\njobStatus = response.statusCodeAsString();\nif (jobStatus.compareTo(\"Succeeded\") == 0)\nfinished = true;\nelse {\nSystem.out.println(yy + \" status is: \" + jobStatus);\nThread.sleep(1000);\n}\nyy++;\n}\nSystem.out.println(\"Job has Succeeded\");\nGetJobOutputRequest jobOutputRequest = GetJobOutputRequest.builder()\n.jobId(jobId)\n.vaultName(name)\n.accountId(account)\n.build();\nActions API Version 2012-06-01 235\n\nAmazon S3 Glacier Developer Guide\nResponseBytes<GetJobOutputResponse> objectBytes =\nglacier.getJobOutputAsBytes(jobOutputRequest);\n// Write the data to a local file. byte[] data = objectBytes.asByteArray();\nFile myFile = new File(path);\nOutputStream os = new FileOutputStream(myFile);\nos.write(data);\nSystem.out.println(\"Successfully obtained bytes from a Glacier\nvault\");\nos.close();\n} catch (GlacierException | InterruptedException | IOException e) {\nSystem.out.println(e.getMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see InitiateJob in AWS SDK for Java 2.x API Reference.",
      "start_idx": 389246,
      "end_idx": 391873,
      "metadata": {
        "num_sentences": 5,
        "num_words": 293,
        "breakpoint_idx": 2257,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2738674163818359,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "AWS SDK Usage"
            ]
          },
          "keywords": [
            "GlacierClient",
            "accountId",
            "vaultName",
            "InitiateJobRequest",
            "DescribeJobRequest",
            "GetJobOutputRequest",
            "AWS SDK for Java",
            "inventory-retrieval",
            "S3 Glacier",
            "jobId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "Region.US_EAST_1",
            "JobParameters",
            "AWS SDK for Java 2.x"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Job Management",
          "secondary_categories": [
            "Cloud Storage Operations",
            "Java SDK Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK for Java 2.x"
          ]
        },
        "semantic": {
          "summary": "This documentation provides Java code for initiating and monitoring an inventory-retrieval job in Amazon S3 Glacier, including handling job output and potential errors.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I initiate an inventory-retrieval job in Amazon S3 Glacier using Java?",
            "What is the process to check the status of a job in Amazon S3 Glacier?",
            "How can I write the output of a Glacier job to a local file in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "InitiateJobRequest",
          "inventory-retrieval",
          "jobId",
          "S3 Glacier",
          "vaultName",
          "GetJobOutputRequest",
          "Region.US_EAST_1",
          "DescribeJobRequest",
          "AWS SDK for Java 2.x",
          "GlacierClient",
          "accountId",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "JobParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_219",
      "text": "PowerShell\nTools for PowerShell\nExample 1: Starts a job to retrieve an archive from the specified vault owned by the\nuser. The status of the job can be checked using the Get-GLCJob cmdlet. When the\njob completes successfully the Read-GCJobOutput cmdlet can be used to retrieve the\ncontents of the archive to the local file system. Start-GLCJob -VaultName myvault -JobType \"archive-retrieval\" -JobDescription\n\"archive retrieval\" -ArchiveId \"o9O9j...TX-TpIhQJw\"\nOutput:\nJobId JobOutputPath Location\n----- ------------- --------\nop1x...JSbthM /012345678912/vaults/test/jobs/\nop1xe...I4HqCHkSJSbthM\nActions API Version 2012-06-01 236\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Retrieve a vault inventory. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_inventory_retrieval(vault):\n\"\"\"\nInitiates an inventory retrieval job. The inventory describes the\ncontents\nof the vault. Standard retrievals typically complete within 3\u20145 hours. When the job completes, you can get the inventory by calling\nget_output().",
      "start_idx": 391874,
      "end_idx": 397646,
      "metadata": {
        "num_sentences": 13,
        "num_words": 191,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25958736126239484,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "PowerShell",
            "Start-GLCJob",
            "Get-GLCJob",
            "Read-GCJobOutput",
            "AWS Tools for PowerShell",
            "Boto3",
            "Amazon S3 Glacier",
            "Vault inventory",
            "JobId",
            "Archive retrieval"
          ],
          "entities": [
            "PowerShell",
            "AWS Tools for PowerShell",
            "Boto3",
            "Amazon S3 Glacier",
            "InitiateJob"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "PowerShell",
            "Python SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Tools for PowerShell",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and details on using PowerShell and Python to interact with Amazon S3 Glacier for archive retrieval and vault inventory operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I start an archive retrieval job using PowerShell?",
            "What is the process to retrieve a vault inventory using Python?",
            "Where can I find more examples for AWS S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "PowerShell",
          "Start-GLCJob",
          "Get-GLCJob",
          "AWS Tools for PowerShell",
          "JobId",
          "Archive retrieval",
          "Read-GCJobOutput",
          "Amazon S3 Glacier",
          "Vault inventory",
          "InitiateJob"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_220",
      "text": ":param vault: The vault to inventory. :return: The inventory retrieval job.\n\"\"\" try:\njob = vault.initiate_inventory_retrieval()\nlogger.info(\"Started %s job with ID %s. \", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on vault %s. \", vault.name)\nraise\nActions API Version 2012-06-01 237\n\nAmazon S3 Glacier Developer Guide\nelse:\nreturn job\nRetrieve an archive from a vault. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output(). :param archive: The archive to retrieve. :return: The archive retrieval job.\n\"\"\" try:\njob = archive.initiate_archive_retrieval()\nlogger.info(\"Started %s job with ID %s.",
      "start_idx": 391874,
      "end_idx": 397646,
      "metadata": {
        "num_sentences": 13,
        "num_words": 130,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3387254568246695,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "vault",
            "inventory retrieval",
            "archive retrieval",
            "GlacierWrapper",
            "Amazon S3 Glacier",
            "Boto3",
            "job",
            "ClientError",
            "logger",
            "initiate_archive_retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierWrapper",
            "Boto3",
            "ClientError",
            "logger"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on initiating inventory and archive retrieval jobs in Amazon S3 Glacier using Boto3, as well as handling errors and logging job information.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in Amazon S3 Glacier?",
            "What is the process for retrieving an archive from a vault in Amazon S3 Glacier?",
            "How can I handle errors when starting a job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "logger",
          "GlacierWrapper",
          "ClientError",
          "initiate_archive_retrieval",
          "vault",
          "archive retrieval",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_221",
      "text": "\", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on archive %s. \", archive.id)\nraise\nelse:\nreturn job\n\u2022 For API details, see InitiateJob in AWS SDK for Python (Boto3) API Reference. Actions API Version 2012-06-01 238\n\nAmazon S3 Glacier Developer Guide\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use ListJobs with an AWS SDK or CLI\nThe following code examples show how to use ListJobs. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code examples:\n\u2022 Archive a file, get notifications, and initiate a job\n\u2022 Get archive content and delete the archive\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// List Amazon S3 Glacier jobs. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to list jobs for.</param>\n/// <returns>A list of Amazon S3 Glacier jobs.</returns>\npublic async Task<List<GlacierJobDescription>> ListJobsAsync(string\nvaultName)\n{\nvar request = new ListJobsRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the current account. AccountId = \"-\",\nVaultName = vaultName,\n};\nActions API Version 2012-06-01 239\n\nAmazon S3 Glacier Developer Guide\nvar response = await _glacierService.ListJobsAsync(request);\nreturn response.JobList;\n}\n\u2022 For API details, see ListJobs in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command lists in-progress and recently completed jobs for a vault named my-\nvault:\naws glacier list-jobs --account-id - --vault-name my-vault\nOutput:\n{\n\"JobList\": [\n{\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"RetrievalByteRange\": \"0-3145727\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\",\n\"Completed\": false,\n\"SHA256TreeHash\":\n\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\",\n\"JobId\": \"l7IL5-EkXyEY9Ws95fClzIbk2O5uLYaFdAYOi-\nazsX_Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59-8N9aHWav\",\n\"ArchiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--\nzM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"JobDescription\": \"Retrieve archive on 2015-07-17\",\n\"ArchiveSizeInBytes\": 3145728,\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveSHA256TreeHash\":\n\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\",\n\"CreationDate\": \"2015-07-17T21:16:13.840Z\",\nActions API Version 2012-06-01 240\n\nAmazon S3 Glacier Developer Guide\n\"StatusCode\": \"InProgress\"\n},\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"\"InProgress\"\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see ListJobs in AWS CLI Command Reference.",
      "start_idx": 391874,
      "end_idx": 397646,
      "metadata": {
        "num_sentences": 13,
        "num_words": 397,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36728756244365984,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Code Example",
              "Command Reference"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Amazon S3 Glacier",
            "ListJobs",
            "InitiateJob",
            "VaultARN",
            "JobId",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "AWS CLI",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "AWS SDK for .NET",
            "AWS CLI",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Job Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "AWS CLI Commands"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on how to list and manage Amazon S3 Glacier jobs using AWS SDKs (Python, .NET) and AWS CLI, including code examples, API references, and command outputs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I list jobs for a specific vault in Amazon S3 Glacier using AWS CLI?",
            "What is the code example for listing Amazon S3 Glacier jobs with AWS SDK for .NET?",
            "How do I initiate and debug a job on Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "AWS SDK for Python (Boto3)",
          "AWS SNS",
          "AWS CLI",
          "VaultARN",
          "AccountId",
          "AWS SDK",
          "JobId",
          "AWS Code Examples Repository",
          "ListJobs",
          "Amazon S3 Glacier",
          "InitiateJob",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_222",
      "text": "Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 241\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault. :param vault: The vault to query. :param job_type: The type of job to list. :return: The list of jobs of the requested type.\n\"\"\" job_list = []\ntry:\nif job_type == \"all\":\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get. \", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3053018781873915,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Code Example"
            ]
          },
          "keywords": [
            "Python",
            "SDK",
            "Boto3",
            "Amazon S3 Glacier",
            "glacier_resource",
            "list_jobs",
            "vault",
            "job_type",
            "jobs",
            "AWS"
          ],
          "entities": [
            "Boto3",
            "Amazon S3 Glacier",
            "GlacierWrapper",
            "AWS Code Examples Repository",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDKs",
          "secondary_categories": [
            "Cloud Storage",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information on using the Python SDK (Boto3) for interacting with Amazon S3 Glacier, including a class that encapsulates API operations and a method to list jobs by type for a specified vault.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list jobs by type in an Amazon S3 Glacier vault using Boto3?",
            "What are the different job types available in Amazon S3 Glacier?",
            "How do I handle unsupported job types in Amazon S3 Glacier using Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS SDKs]",
        "tf_idf_keywords": [
          "Boto3",
          "AWS",
          "list_jobs",
          "GlacierWrapper",
          "SDK",
          "jobs",
          "vault",
          "API Version 2012-06-01",
          "glacier_resource",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "job_type",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_223",
      "text": "\", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s. \", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\n\u2022 For API details, see ListJobs in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 242\n\nAmazon S3 Glacier Developer Guide\nUse ListTagsForVault with an AWS SDK or CLI\nThe following code examples show how to use ListTagsForVault. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// List tags for an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to list tags for.</param>\n/// <returns>A dictionary listing the tags attached to each object in the\n/// vault and its tags.</returns>\npublic async Task<Dictionary<string, string>> ListTagsForVaultAsync(string\nvaultName)\n{\nvar request = new ListTagsForVaultRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the default user. AccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.ListTagsForVaultAsync(request);\nreturn response.Tags;\n}\n\u2022 For API details, see ListTagsForVault in AWS SDK for .NET API Reference.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 229,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3193201276991102,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Code Example"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Boto3",
            "S3 Glacier",
            "ListJobs",
            "ListTagsForVault",
            "API Reference",
            "Vault",
            "ClientError",
            "Tags",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "AWS SDK for .NET",
            "ListTagsForVaultRequest",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK Usage",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "API Reference"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples and details for using the ListJobs and ListTagsForVault APIs in AWS SDKs, including Python (Boto3) and .NET, to interact with Amazon S3 Glacier vaults.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I list jobs in an Amazon S3 Glacier vault using AWS SDK for Python?",
            "How do I retrieve tags for an Amazon S3 Glacier vault using AWS SDK for .NET?",
            "What are the API details for ListTagsForVault and ListJobs in AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS SDK Usage]",
        "tf_idf_keywords": [
          "Boto3",
          "S3 Glacier",
          "ListTagsForVault",
          "API Reference",
          "ClientError",
          "AccountId",
          "AWS SDK",
          "ListTagsForVaultRequest",
          "Vault",
          "Tags",
          "ListJobs",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "AWS SDK for .NET",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_224",
      "text": "Actions API Version 2012-06-01 243\n\nAmazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command lists the tags applied to a vault named my-vault:\naws glacier list-tags-for-vault --account-id - --vault-name my-vault\nOutput:\n{\n\"Tags\": {\n\"date\": \"july2015\",\n\"id\": \"1234\"\n}\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see ListTagsForVault in AWS CLI Command Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use ListVaults with an AWS SDK or CLI\nThe following code examples show how to use ListVaults. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 244\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// List the Amazon S3 Glacier vaults associated with the current account. /// </summary>\n/// <returns>A list containing information about each vault.</returns>\npublic async Task<List<DescribeVaultOutput>> ListVaultsAsync()\n{\nvar glacierVaultPaginator = _glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nvar vaultList = new List<DescribeVaultOutput>();\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nvaultList.Add(vault);\n}\nreturn vaultList;\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 269,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3669173770480686,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command",
              "API Reference",
              "Code Example",
              "SDK Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "ListTagsForVault",
            "ListVaults",
            "Vault",
            "Account ID",
            "Tags",
            "AWS SDK",
            "Paginator",
            "DescribeVaultOutput"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for .NET",
            "ListTagsForVault",
            "ListVaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier API",
          "secondary_categories": [
            "AWS SDK",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and details on using the AWS CLI and AWS SDK for .NET to list tags for a Glacier vault and retrieve a list of vaults associated with an account. It includes sample commands, code snippets, and references to API documentation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list the tags applied to an Amazon S3 Glacier vault using the AWS CLI?",
            "What is the method for listing Glacier vaults with the AWS SDK for .NET?",
            "Where can I find additional examples and setup instructions for AWS Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier API]",
        "tf_idf_keywords": [
          "ListTagsForVault",
          "AWS CLI",
          "ListVaults",
          "AWS SDK",
          "Vault",
          "Paginator",
          "Account ID",
          "Tags",
          "Amazon S3 Glacier",
          "DescribeVaultOutput",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_225",
      "text": "CLI\nAWS CLI\nThe following command lists the vaults in the default account and region:\naws glacier list-vaults --account-id -\nOutput:\nActions API Version 2012-06-01 245\n\nAmazon S3 Glacier Developer Guide\n{\n\"VaultList\": [\n{\n\"SizeInBytes\": 3178496,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"LastInventoryDate\": \"2015-04-07T00:26:19.028Z\",\n\"VaultName\": \"my-vault\",\n\"NumberOfArchives\": 1,\n\"CreationDate\": \"2015-04-06T21:23:45.708Z\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see ListVaults in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsRequest;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsResponse;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DescribeVaultOutput;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.util.List;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\nActions API Version 2012-06-01 246\n\nAmazon S3 Glacier Developer Guide\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class ListVaults {\npublic static void main(String[] args) {\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nlistAllVault(glacier);\nglacier.close();\n}\npublic static void listAllVault(GlacierClient glacier) {\nboolean listComplete = false;\nString newMarker = null;\nint totalVaults = 0;\nSystem.out.println(\"Your Amazon Glacier vaults:\");\ntry {\nwhile (!listComplete) {\nListVaultsResponse response = null;\nif (newMarker != null) {\nListVaultsRequest request = ListVaultsRequest.builder()\n.marker(newMarker)\n.build();\nresponse = glacier.listVaults(request);\n} else {\nListVaultsRequest request = ListVaultsRequest.builder()\n.build();\nresponse = glacier.listVaults(request);\n}\nList<DescribeVaultOutput> vaultList = response.vaultList();\nfor (DescribeVaultOutput v : vaultList) {\ntotalVaults += 1;\nSystem.out.println(\"* \" + v.vaultName());\n}\n// Check for further results. newMarker = response.marker();\nif (newMarker == null) {\nActions API Version 2012-06-01 247\n\nAmazon S3 Glacier Developer Guide\nlistComplete = true;\n}\n}\nif (totalVaults == 0) {\nSystem.out.println(\"No vaults found. \");\n}\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for Java 2.x API Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 352,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3620492723253038,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Usage",
              "Java Example",
              "Python Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "ListVaults",
            "VaultARN",
            "GlacierClient",
            "ListVaultsRequest",
            "ListVaultsResponse",
            "DescribeVaultOutput",
            "Boto3",
            "Region"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "Java SDK",
            "Python SDK (Boto3)",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Glacier Operations",
          "secondary_categories": [
            "AWS SDKs",
            "Command Line Interfaces"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java 2.x"
          ],
          "mentioned_tools": [
            "Java",
            "Python (Boto3)"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions and code examples for listing Amazon S3 Glacier vaults using AWS CLI, Java SDK, and Python SDK (Boto3), including details on required parameters and handling responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list Amazon S3 Glacier vaults using AWS CLI?",
            "What is the Java SDK code example for listing Glacier vaults?",
            "How can I handle responses and errors when listing Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Glacier Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "AWS CLI",
          "ListVaultsResponse",
          "VaultARN",
          "Java SDK",
          "ListVaults",
          "GlacierClient",
          "AWS SDK for Java 2.x",
          "Region",
          "Python SDK (Boto3)",
          "Amazon S3 Glacier",
          "ListVaultsRequest",
          "DescribeVaultOutput",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_226",
      "text": "class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef list_vaults(self):\n\"\"\"\nLists vaults for the current account.\n\"\"\" Actions API Version 2012-06-01 248\n\nAmazon S3 Glacier Developer Guide\ntry:\nfor vault in self.glacier_resource.vaults.all():\nlogger.info(\"Got vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't list vaults.\") raise\n\u2022 For API details, see ListVaults in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use SetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use SetVaultNotifications. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nCLI\nAWS CLI\nThe following command configures SNS notifications for a vault named my-vault:\naws glacier set-vault-notifications --account-id - --vault-name my-vault --vault-\nnotification-config file://notificationconfig.json\nnotificationconfig.json is a JSON file in the current folder that specifies an SNS topic\nand the events to publish:\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nActions API Version 2012-06-01 249\n\nAmazon S3 Glacier Developer Guide\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see SetVaultNotifications in AWS CLI Command Reference.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 12,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3202999577377782,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIReference",
              "CLICommand"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "vaults",
            "SetVaultNotifications",
            "SNS notifications",
            "AWS CLI",
            "JSON file",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "SNS Topic",
            "AWS CLI",
            "notificationconfig.json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of the GlacierWrapper class, which encapsulates Amazon S3 Glacier API operations, and includes examples of listing vaults and setting vault notifications using Boto3 and the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier using Boto3?",
            "What is the process for setting vault notifications in Amazon S3 Glacier?",
            "What JSON configuration is required for setting SNS notifications for a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "InventoryRetrievalCompleted",
          "SetVaultNotifications",
          "AWS CLI",
          "notificationconfig.json",
          "SNS notifications",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "account ID",
          "vaults",
          "ArchiveRetrievalCompleted",
          "SNS Topic",
          "JSON file"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_227",
      "text": "Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications. Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events. :param vault: The vault to set up to publish notifications. :param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications. :return: Data about the new notification configuration.\n\"\"\" try:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\nActions API Version 2012-06-01 250\n\nAmazon S3 Glacier Developer Guide\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s. \",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s. \", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\n\u2022 For API details, see SetVaultNotifications in AWS SDK for Python (Boto3) API Reference.",
      "start_idx": 406943,
      "end_idx": 416671,
      "metadata": {
        "num_sentences": 12,
        "num_words": 191,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37692861845999054,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Python",
            "Boto3",
            "Amazon S3 Glacier",
            "SNS topic",
            "vault",
            "notification configuration",
            "Amazon Resource Name",
            "API Reference",
            "SetVaultNotifications",
            "ClientError"
          ],
          "entities": [
            "Boto3",
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS Code Examples Repository",
            "SetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Python (Boto3)",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the GlacierWrapper class in the AWS SDK for Python (Boto3) to set up Amazon S3 Glacier notifications with an Amazon SNS topic for specific events.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I configure Amazon S3 Glacier to send notifications to an Amazon SNS topic?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "Where can I find the API details for SetVaultNotifications in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Python (Boto3)]",
        "tf_idf_keywords": [
          "Boto3",
          "notification configuration",
          "Amazon Resource Name",
          "SNS topic",
          "SetVaultNotifications",
          "API Reference",
          "ClientError",
          "vault",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_228",
      "text": "For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use UploadArchive with an AWS SDK or CLI\nThe following code examples show how to use UploadArchive. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 251\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// Upload an object to an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the Amazon S3 Glacier vault to upload\n/// the archive to.</param>\n/// <param name=\"archiveFilePath\">The file path of the archive to upload to\nthe vault.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<string> UploadArchiveWithArchiveManager(string vaultName,\nstring archiveFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\n// Upload an archive. var response = await manager.UploadAsync(vaultName, \"upload archive\ntest\", archiveFilePath);\nreturn response.ArchiveId;\n}\ncatch (AmazonGlacierException ex)\n{\nConsole.WriteLine(ex.Message);\nreturn string.Empty;\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for .NET API Reference. Actions API Version 2012-06-01 252\n\nAmazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command uploads an archive in the current folder named archive.zip to a\nvault named my-vault:\naws glacier upload-archive --account-id - --vault-name my-vault --\nbody archive.zip\nOutput:\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--\nzM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\":\n\"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/0123456789012/vaults/my-vault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. To retrieve an uploaded archive, initiate a retrieval job with the aws glacier initiate-job\ncommand. \u2022 For API details, see UploadArchive in AWS CLI Command Reference.",
      "start_idx": 406943,
      "end_idx": 416671,
      "metadata": {
        "num_sentences": 12,
        "num_words": 332,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4060678193063447,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIReference",
              "CommandUsage"
            ]
          },
          "keywords": [
            "AWS SDK",
            "S3 Glacier",
            "UploadArchive",
            "ArchiveTransferManager",
            "vault",
            "archive",
            "CLI",
            "AmazonGlacierException",
            "checksum",
            "initiate-job"
          ],
          "entities": [
            "AWS SDK for .NET",
            "AWS CLI",
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "UploadArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information on using the AWS SDK and CLI to upload archives to Amazon S3 Glacier, including code examples, API references, and command details for UploadArchive operations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload an archive to an Amazon S3 Glacier vault using AWS SDK for .NET?",
            "What is the CLI command to upload an archive to an Amazon S3 Glacier vault?",
            "Where can I find API details for the UploadArchive operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "checksum",
          "S3 Glacier",
          "archive",
          "AWS CLI",
          "UploadArchive",
          "AmazonGlacierException",
          "ArchiveTransferManager",
          "AWS SDK",
          "vault",
          "CLI",
          "initiate-job",
          "Amazon S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_229",
      "text": "Java\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Actions API Version 2012-06-01 253\n\nAmazon S3 Glacier Developer Guide\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.io.File;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class UploadArchive {\nstatic final int ONE_MB = 1024 * 1024;\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <strPath> <vaultName>\\s\nWhere:\nstrPath - The path to the archive to upload (for example, C:\\\n\\AWS\\\\test.pdf). vaultName - The name of the vault. \"\"\";\nif (args.length != 2) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString strPath = args[0];\nActions API Version 2012-06-01 254\n\nAmazon S3 Glacier Developer Guide\nString vaultName = args[1];\nFile myFile = new File(strPath);\nPath path = Paths.get(strPath);\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nString archiveId = uploadContent(glacier, path, vaultName, myFile);\nSystem.out.println(\"The ID of the archived item is \" + archiveId);\nglacier.close();\n}\npublic static String uploadContent(GlacierClient glacier, Path path, String\nvaultName, File myFile) {\n// Get an SHA-256 tree hash value. String checkVal = computeSHA256(myFile);\ntry {\nUploadArchiveRequest uploadRequest = UploadArchiveRequest.builder()\n.vaultName(vaultName)\n.checksum(checkVal)\n.build();\nUploadArchiveResponse res = glacier.uploadArchive(uploadRequest,\npath);\nreturn res.archiveId();\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\nreturn \"\";\n}\nprivate static String computeSHA256(File inputFile) {\ntry {\nbyte[] treeHash = computeSHA256TreeHash(inputFile);\nSystem.out.printf(\"SHA-256 tree hash = %s\\n\", toHex(treeHash));\nreturn toHex(treeHash);\n} catch (IOException ioe) {\nSystem.err.format(\"Exception when reading from file %s: %s\",\ninputFile, ioe.getMessage());\nSystem.exit(-1);\nActions API Version 2012-06-01 255\n\nAmazon S3 Glacier Developer Guide\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256:\n%s\", nsae.getMessage());\nSystem.exit(-1);\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws\nIOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB. */\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nActions API Version 2012-06-01 256\n\nAmazon S3 Glacier Developer Guide\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\n}\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums. */\npublic static byte[] computeSHA256TreeHash(byte[][] chunkSHA256Hashes)\nthrows NoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.length > 1) {\nint len = prevLvlHashes.length / 2;\nif (prevLvlHashes.length % 2 != 0) {\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.length; i = i + 2, j++) {\n// If there are at least two elements remaining. if (prevLvlHashes.length - i > 1) {\n// Calculate a digest of the concatenated nodes. md.reset();\nActions API Version 2012-06-01 257\n\nAmazon S3 Glacier Developer Guide\nmd.update(prevLvlHashes[i]);\nmd.update(prevLvlHashes[i + 1]);\ncurrLvlHashes[j] = md.digest();\n} else { // Take care of the remaining odd chunk\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (byte datum : data) {\nString hex = Integer.toHexString(datum & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero. sb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for Java 2.x API Reference.",
      "start_idx": 406943,
      "end_idx": 416671,
      "metadata": {
        "num_sentences": 13,
        "num_words": 698,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3037449763371394,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Java",
            "AWS SDK",
            "Amazon S3 Glacier",
            "UploadArchive",
            "SHA-256",
            "GlacierClient",
            "UploadArchiveRequest",
            "Tree Hash",
            "Vault",
            "Checksum"
          ],
          "entities": [
            "AWS SDK for Java 2.x",
            "Amazon S3 Glacier",
            "GlacierClient",
            "UploadArchiveRequest",
            "Region.US_EAST_1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for Java",
          "secondary_categories": [
            "Java Development",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java 2.x",
            "GitHub",
            "MessageDigest"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java example for uploading archives to Amazon S3 Glacier using the AWS SDK for Java 2.x, including code to compute SHA-256 checksums and handle file chunks for secure uploads.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using Java?",
            "How do I compute a SHA-256 tree hash for file chunks in Java?",
            "What is the correct setup for using AWS SDK for Java 2.x with GlacierClient?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for Java]",
        "tf_idf_keywords": [
          "Checksum",
          "Region.US_EAST_1",
          "UploadArchive",
          "Java",
          "SHA-256",
          "AWS SDK",
          "GlacierClient",
          "AWS SDK for Java 2.x",
          "Vault",
          "UploadArchiveRequest",
          "Tree Hash",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_230",
      "text": "Actions API Version 2012-06-01 258\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create the client. const { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region. const REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nUpload the archive. // Load the SDK for JavaScript\nimport { UploadArchiveCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\n// Create a new service object and buffer\nconst buffer = new Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nconst params = { vaultName: vaultname, body: buffer };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new UploadArchiveCommand(params));\nconsole.log(\"Archive ID\", data.archiveId);\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error uploading archive! \", err);\n}\n};\nActions API Version 2012-06-01 259\n\nAmazon S3 Glacier Developer Guide\nrun();\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference. SDK for JavaScript (v2)\nNote\nThere's more on GitHub.",
      "start_idx": 416672,
      "end_idx": 420160,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35048696729871964,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Actions API",
            "GlacierClient",
            "AWS SDK",
            "UploadArchiveCommand",
            "vaultName",
            "buffer",
            "AWS Region",
            "archiveId",
            "JavaScript",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "GlacierClient",
            "UploadArchiveCommand",
            "AWS SDK for JavaScript",
            "Amazon S3 Glacier",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDK for JavaScript",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript"
          ],
          "mentioned_tools": [
            "JavaScript",
            "Node.js",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a guide for using the AWS SDK for JavaScript (v3) to upload archives to Amazon S3 Glacier, including code examples for creating a Glacier client, setting parameters, and handling responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a Glacier client using the AWS SDK for JavaScript?",
            "What are the steps to upload an archive to Amazon S3 Glacier?",
            "Where can I find more examples or API details for the AWS SDK for JavaScript?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK for JavaScript]",
        "tf_idf_keywords": [
          "AWS SDK for JavaScript",
          "AWS Region",
          "archiveId",
          "vaultName",
          "JavaScript",
          "Actions API",
          "AWS SDK",
          "GlacierClient",
          "UploadArchiveCommand",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "buffer"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_231",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. // Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object and buffer\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\nbuffer = Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nvar params = { vaultName: \"YOUR_VAULT_NAME\", body: buffer };\n// Call Glacier to upload the archive. glacier.uploadArchive(params, function (err, data) {\nif (err) {\nconsole.log(\"Error uploading archive! \", err);\n} else {\nconsole.log(\"Archive ID\", data.archiveId);\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference. Actions API Version 2012-06-01 260\n\nAmazon S3 Glacier Developer Guide\nPowerShell\nTools for PowerShell\nExample 1: Uploads a single file to the specified vault, returning the archive ID and\ncomputed checksum. Write-GLCArchive -VaultName myvault -FilePath c:\\temp\\blue.bin\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nExample 2: Uploads the contents of a folder hierarchy to the specified vault in the user's\naccount. For each file uploaded the cmdlet emits the filename, corresponding archive ID\nand the computed checksum of the archive. Write-GLCArchive -VaultName myvault -FolderPath . -Recurse\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nC:\\temp\\green.bin qXAfOdSG...czo729UHXrw d50a1...9184b9\nC:\\temp\\lum.bin 39aNifP3...q9nb8nZkFIg 28886...5c3e27\nC:\\temp\\red.bin vp7E6rU_...Ejk_HhjAxKA e05f7...4e34f5\nC:\\temp\\Folder1\\file1.txt _eRINlip...5Sxy7dD2BaA d0d2a...c8a3ba\nC:\\temp\\Folder2\\file2.iso -Ix3jlmu...iXiDh-XfOPA 7469e...3e86f1\n\u2022 For API details, see UploadArchive in AWS Tools for PowerShell Cmdlet Reference. Actions API Version 2012-06-01 261\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 416672,
      "end_idx": 420160,
      "metadata": {
        "num_sentences": 11,
        "num_words": 269,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31724888194691053,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Glacier",
            "Buffer",
            "UploadArchive",
            "Vault",
            "Checksum",
            "PowerShell",
            "Boto3",
            "API Version 2012-06-01",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "AWS.Glacier",
            "Write-GLCArchive",
            "AWS SDK for JavaScript",
            "AWS Tools for PowerShell",
            "Amazon S3 Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS SDKs and Tools",
          "secondary_categories": [
            "AWS Glacier",
            "Programming Examples"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "AWS Tools for PowerShell",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and instructions for uploading files to Amazon S3 Glacier using the AWS SDK for JavaScript, PowerShell, and Python (Boto3). It includes code snippets, API references, and links to developer guides for further details.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS SDK for JavaScript?",
            "What parameters are required for the Glacier uploadArchive method?",
            "How can I upload a folder hierarchy to a Glacier vault using PowerShell?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDKs and Tools]",
        "tf_idf_keywords": [
          "Boto3",
          "Checksum",
          "PowerShell",
          "AWS SDK for JavaScript",
          "UploadArchive",
          "AWS Code Examples Repository",
          "AWS SDK",
          "AWS Tools for PowerShell",
          "Vault",
          "AWS.Glacier",
          "API Version 2012-06-01",
          "Glacier",
          "Amazon S3 Glacier",
          "Buffer",
          "Write-GLCArchive"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_232",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault. :param vault: The vault where the archive is put. :param archive_description: A description of the archive. :param archive_file: The archive file to put in the vault. :return: The uploaded archive.\n\"\"\" try:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s. \",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\nActions API Version 2012-06-01 262\n\nAmazon S3 Glacier Developer Guide\n\"Couldn't upload %s to %s.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 124,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40264002482096356,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Operation"
            ]
          },
          "keywords": [
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "GlacierWrapper",
            "Boto3",
            "upload_archive",
            "vault",
            "archive_description",
            "archive_file",
            "ClientError",
            "logger"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierWrapper",
            "Boto3",
            "ClientError",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example and explanation of how to use the GlacierWrapper class to interact with Amazon S3 Glacier, focusing on uploading archives to a vault using the `upload_archive` method.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload an archive to an Amazon S3 Glacier vault?",
            "What parameters are required for the `upload_archive` method?",
            "What happens if the archive upload fails?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Boto3",
          "archive_file",
          "upload_archive",
          "logger",
          "GlacierWrapper",
          "ClientError",
          "archive_description",
          "vault",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_233",
      "text": "\", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n\u2022 For API details, see UploadArchive in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use UploadMultipartPart with an AWS SDK or CLI\nThe following code examples show how to use UploadMultipartPart. CLI\nAWS CLI\nThe following command uploads the first 1 MiB (1024 x 1024 bytes) part of an archive:\naws glacier upload-multipart-part --body part1 --range 'bytes\n0-1048575/*' --account-id - --vault-name my-vault --upload-\nid 19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-\nOssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. The body parameter takes a path to a part file on the local filesystem. The range parameter\ntakes an HTTP content range indicating the bytes that the part occupies in the completed\narchive. The upload ID is returned by the aws glacier initiate-multipart-upload\ncommand and can also be obtained by using aws glacier list-multipart-uploads. For more information on multipart uploads to Amazon Glacier using the AWS CLI, see Using\nAmazon Glacier in the AWS CLI User Guide. \u2022 For API details, see UploadMultipartPart in AWS CLI Command Reference.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35615492926703557,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Boto3",
            "UploadArchive",
            "UploadMultipartPart",
            "Amazon Glacier",
            "AWS CLI",
            "multipart uploads",
            "archive",
            "HTTP content range",
            "account ID"
          ],
          "entities": [
            "AWS SDK for Python",
            "Boto3",
            "Amazon Glacier",
            "AWS CLI",
            "UploadMultipartPart"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Multipart Upload",
          "secondary_categories": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon Glacier",
            "AWS S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on using the UploadMultipartPart API in AWS SDKs and CLI for uploading parts of an archive to Amazon Glacier, including examples and references to additional guides.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload a part of an archive to Amazon Glacier using AWS CLI?",
            "What parameters are required for the UploadMultipartPart API?",
            "Where can I find more information on multipart uploads to Amazon Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Multipart Upload]",
        "tf_idf_keywords": [
          "Boto3",
          "archive",
          "AWS CLI",
          "UploadArchive",
          "AWS SDK",
          "AWS S3 Glacier",
          "UploadMultipartPart",
          "account ID",
          "HTTP content range",
          "Amazon Glacier",
          "multipart uploads",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_234",
      "text": "Actions API Version 2012-06-01 263\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create a multipart upload of 1 megabyte chunks of a Buffer object. // Create a new service object and some supporting variables\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" }),\nvaultName = \"YOUR_VAULT_NAME\",\nbuffer = new Buffer(2.5 * 1024 * 1024), // 2.5MB buffer\npartSize = 1024 * 1024, // 1MB chunks,\nnumPartsLeft = Math.ceil(buffer.length / partSize),\nstartTime = new Date(),\nparams = { vaultName: vaultName, partSize: partSize.toString() };\n// Compute the complete SHA-256 tree hash so we can pass it\n// to completeMultipartUpload request at the end\nvar treeHash = glacier.computeChecksums(buffer).treeHash;\n// Initiate the multipart upload\nconsole.log(\"Initiating upload to\", vaultName);\n// Call Glacier to initiate the upload. glacier.initiateMultipartUpload(params, function (mpErr, multipart) {\nif (mpErr) {\nconsole.log(\"Error! \", mpErr.stack);\nreturn;\n}\nconsole.log(\"Got upload ID\", multipart.uploadId);\n// Grab each partSize chunk and upload it as a part\nfor (var i = 0; i < buffer.length; i += partSize) {\nvar end = Math.min(i + partSize, buffer.length),\npartParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\nrange: \"bytes \" + i + \"-\" + (end - 1) + \"/*\",\nbody: buffer.slice(i, end),\nActions API Version 2012-06-01 264\n\nAmazon S3 Glacier Developer Guide\n};\n// Send a single part\nconsole.log(\"Uploading part\", i, \"=\", partParams.range);\nglacier.uploadMultipartPart(partParams, function (multiErr, mData) {\nif (multiErr) return;\nconsole.log(\"Completed part\", this.request.params.range);\nif (--numPartsLeft > 0) return; // complete only when all parts uploaded\nvar doneParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\narchiveSize: buffer.length.toString(),\nchecksum: treeHash, // the computed tree hash\n};\nconsole.log(\"Completing upload...\");\nglacier.completeMultipartUpload(doneParams, function (err, data) {\nif (err) {\nconsole.log(\"An error occurred while uploading the archive\");\nconsole.log(err);\n} else {\nvar delta = (new Date() - startTime) / 1000;\nconsole.log(\"Completed upload in\", delta, \"seconds\");\nconsole.log(\"Archive ID:\", data.archiveId);\nconsole.log(\"Checksum: \", data.checksum);\n}\n});\n});\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see UploadMultipartPart in AWS SDK for JavaScript API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 265\n\nAmazon S3 Glacier Developer Guide\nScenarios for S3 Glacier using AWS SDKs\nThe following code examples show you how to implement common scenarios in S3 Glacier with\nAWS SDKs.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 416,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3930359310574002,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Multipart Upload",
              "Error Handling"
            ]
          },
          "keywords": [
            "AWS SDK",
            "JavaScript",
            "S3 Glacier",
            "Multipart Upload",
            "Buffer Object",
            "SHA-256 Tree Hash",
            "UploadMultipartPart",
            "CompleteMultipartUpload",
            "Vault Name",
            "Checksum"
          ],
          "entities": [
            "AWS.Glacier",
            "Actions API Version 2012-06-01",
            "AWS Code Examples Repository",
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload in Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDK for JavaScript",
            "Amazon S3 Glacier API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript"
          ],
          "mentioned_tools": [
            "GitHub",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide on using the AWS SDK for JavaScript to perform a multipart upload to Amazon S3 Glacier, including initializing the upload, uploading parts, and completing the process with checksum validation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload to Amazon S3 Glacier using the AWS SDK for JavaScript?",
            "What is the process for computing a SHA-256 tree hash for a multipart upload in S3 Glacier?",
            "How do I handle errors during a multipart upload with AWS SDK for JavaScript?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload in Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "CompleteMultipartUpload",
          "Checksum",
          "AWS SDK for JavaScript",
          "JavaScript",
          "Actions API Version 2012-06-01",
          "AWS Code Examples Repository",
          "AWS SDK",
          "Vault Name",
          "AWS.Glacier",
          "UploadMultipartPart",
          "Amazon S3 Glacier",
          "SHA-256 Tree Hash",
          "Multipart Upload",
          "Buffer Object"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_235",
      "text": "These scenarios show you how to accomplish specific tasks by calling multiple functions\nwithin S3 Glacier or combined with other AWS services. Each scenario includes a link to the\ncomplete source code, where you can find instructions on how to set up and run the code. Scenarios target an intermediate level of experience to help you understand service actions in\ncontext. Examples\n\u2022 Archive a file to Amazon S3 Glacier, get notifications, and initiate a job using an AWS SDK\n\u2022 Get Amazon S3 Glacier archive content and delete the archive using an AWS SDK\nArchive a file to Amazon S3 Glacier, get notifications, and initiate a job\nusing an AWS SDK\nThe following code example shows how to:\n\u2022 Create an Amazon S3 Glacier vault. \u2022 Configure the vault to publish notifications to an Amazon SNS topic. \u2022 Upload an archive file to the vault. \u2022 Initiate an archive retrieval job. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create a class that wraps S3 Glacier operations.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 188,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27908689710828993,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Scenario",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "archive retrieval job",
            "Amazon SNS topic",
            "Python",
            "Boto3",
            "vault",
            "notifications",
            "GitHub",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "Amazon SNS",
            "Python SDK",
            "Boto3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "AWS SDK Integration",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides scenarios for performing tasks with Amazon S3 Glacier, including archiving files, setting up notifications, and initiating retrieval jobs using AWS SDKs like Boto3, with links to complete source code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I archive a file to Amazon S3 Glacier and set up notifications?",
            "What are the steps to retrieve and delete an archive from Amazon S3 Glacier using Boto3?",
            "Where can I find the complete source code for S3 Glacier operations examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "archive retrieval job",
          "AWS SDK",
          "vault",
          "Python SDK",
          "GitHub",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "notifications",
          "Amazon SNS topic",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_236",
      "text": "import argparse\nScenarios API Version 2012-06-01 266\n\nAmazon S3 Glacier Developer Guide\nimport logging\nimport os\nimport boto3\nfrom botocore.exceptions import ClientError\nlogger = logging.getLogger(__name__)\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef create_vault(self, vault_name):\n\"\"\"\nCreates a vault. :param vault_name: The name to give the vault. :return: The newly created vault.\n\"\"\" try:\nvault = self.glacier_resource.create_vault(vaultName=vault_name)\nlogger.info(\"Created vault %s. \", vault_name)\nexcept ClientError:\nlogger.exception(\"Couldn't create vault %s. \", vault_name)\nraise\nelse:\nreturn vault\ndef list_vaults(self):\n\"\"\"\nLists vaults for the current account.\n\"\"\" try:\nfor vault in self.glacier_resource.vaults.all():\nlogger.info(\"Got vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't list vaults.\") Archive a file, get notifications, and initiate a job API Version 2012-06-01 267\n\nAmazon S3 Glacier Developer Guide\nraise\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault. :param vault: The vault where the archive is put.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 12,
        "num_words": 156,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4817407781427557,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "create_vault",
            "list_vaults",
            "upload_archive",
            "vault",
            "archive",
            "GlacierWrapper",
            "ClientError",
            "logger"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "GlacierWrapper",
            "ClientError",
            "vault_name"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "argparse",
            "logging"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of a Python class, GlacierWrapper, which encapsulates Amazon S3 Glacier API operations, including creating vaults, listing vaults, and uploading archives using Boto3.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using Boto3?",
            "What is the process to list all vaults for the current account in Amazon S3 Glacier?",
            "How can I upload an archive to a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Boto3",
          "create_vault",
          "upload_archive",
          "archive",
          "GlacierWrapper",
          "ClientError",
          "logger",
          "vault_name",
          "vault",
          "Amazon S3 Glacier",
          "list_vaults"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_237",
      "text": ":param archive_description: A description of the archive. :param archive_file: The archive file to put in the vault. :return: The uploaded archive.\n\"\"\" try:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s. \",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't upload %s to %s. \", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output(). :param archive: The archive to retrieve. :return: The archive retrieval job.\n\"\"\"",
      "start_idx": 427899,
      "end_idx": 431397,
      "metadata": {
        "num_sentences": 10,
        "num_words": 100,
        "chunk_type": "semantic_split",
        "coherence_score": 0.494318856133355,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Error Handling"
            ]
          },
          "keywords": [
            "archive_description",
            "archive_file",
            "vault",
            "upload_archive",
            "ClientError",
            "initiate_archive_retrieval",
            "archive retrieval job",
            "get_output",
            "logger",
            "body"
          ],
          "entities": [
            "archive",
            "vault",
            "ClientError",
            "logger",
            "archive retrieval job"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python Logging"
          ]
        },
        "semantic": {
          "summary": "This documentation provides methods for uploading an archive to a vault and initiating an archive retrieval job, including handling errors and logging outcomes.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to a vault?",
            "What steps are involved in initiating an archive retrieval job?",
            "How are errors handled during the archive upload process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive_file",
          "upload_archive",
          "archive retrieval job",
          "logger",
          "initiate_archive_retrieval",
          "ClientError",
          "archive_description",
          "get_output",
          "archive",
          "vault",
          "Amazon S3 Glacier",
          "body"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_238",
      "text": "Archive a file, get notifications, and initiate a job API Version 2012-06-01 268\n\nAmazon S3 Glacier Developer Guide\ntry:\njob = archive.initiate_archive_retrieval()\nlogger.info(\"Started %s job with ID %s. \", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on archive %s. \", archive.id)\nraise\nelse:\nreturn job\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault. :param vault: The vault to query. :param job_type: The type of job to list. :return: The list of jobs of the requested type.\n\"\"\" job_list = []\ntry:\nif job_type == \"all\":\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get. \", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s. \", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s. \", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 269\n\nAmazon S3 Glacier Developer Guide\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications.",
      "start_idx": 427899,
      "end_idx": 431397,
      "metadata": {
        "num_sentences": 10,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44998033311631946,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Error Handling",
              "Job Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "job initiation",
            "vault",
            "SNS topic",
            "notifications",
            "job types",
            "ClientError",
            "job list",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ClientError",
            "SNS topic",
            "API Version 2012-06-01",
            "vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Job Management",
          "secondary_categories": [
            "File Archiving",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Python SDK (Boto3)",
            "Logging"
          ]
        },
        "semantic": {
          "summary": "This documentation provides methods to initiate an archive retrieval job, list jobs by type for a specified vault, and set Amazon SNS notifications for a vault in Amazon S3 Glacier using the API version 2012-06-01.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in Amazon S3 Glacier?",
            "What are the different job types I can list for a vault in Amazon S3 Glacier?",
            "How can I set up Amazon SNS notifications for a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Job Management]",
        "tf_idf_keywords": [
          "job initiation",
          "SNS topic",
          "ClientError",
          "vault",
          "API Version 2012-06-01",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier",
          "job types",
          "job list",
          "notifications"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_239",
      "text": "Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events. :param vault: The vault to set up to publish notifications. :param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications. :return: Data about the new notification configuration.\n\"\"\" try:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s. \",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s. \", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\nCall functions on the wrapper class to create a vault and upload a file, then configure the\nvault to publish notifications and initiate a job to retrieve the archive. Archive a file, get notifications, and initiate a job API Version 2012-06-01 270\n\nAmazon S3 Glacier Developer Guide\ndef upload_demo(glacier, vault_name, topic_arn):\n\"\"\"\nShows how to:\n* Create a vault. * Configure the vault to publish notifications to an Amazon SNS topic. * Upload an archive.",
      "start_idx": 427899,
      "end_idx": 431397,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4228054470486111,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "notifications",
            "SNS topic",
            "archive",
            "ClientError",
            "notification configuration",
            "ARN",
            "events",
            "upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS Topic ARN",
            "API Version 2012-06-01",
            "Notification",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "File Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Logger"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure an Amazon S3 Glacier vault to publish notifications to an SNS topic, upload an archive, and initiate a job to retrieve the archive.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an Amazon S3 Glacier vault to send notifications to an SNS topic?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "How can I upload an archive and retrieve it using Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "notification configuration",
          "events",
          "SNS topic",
          "archive",
          "upload",
          "ClientError",
          "vault",
          "API Version 2012-06-01",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "notifications",
          "ARN",
          "Notification",
          "SNS Topic ARN"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_240",
      "text": "* Start a job to retrieve the archive. :param glacier: A Boto3 Amazon S3 Glacier resource. :param vault_name: The name of the vault to create. :param topic_arn: The ARN of an Amazon SNS topic that receives notification\nof\nAmazon S3 Glacier events.\n\"\"\" print(f\"\\nCreating vault {vault_name}.\") vault = glacier.create_vault(vault_name)\nprint(\"\\nList of vaults in your account:\")\nglacier.list_vaults()\nprint(f\"\\nUploading glacier_basics.py to {vault.name}.\") with open(\"glacier_basics.py\", \"rb\") as upload_file:\narchive = glacier.upload_archive(vault, \"glacier_basics.py\", upload_file)\nprint(\n\"\\nStarting an archive retrieval request to get the file back from the \"\n\"vault.\" )\nglacier.initiate_archive_retrieval(archive)\nprint(\"\\nListing in progress jobs:\")\nglacier.list_jobs(vault, \"in_progress\")\nprint(\n\"\\nBecause Amazon S3 Glacier is intended for infrequent retrieval, an \"\n\"archive request with Standard retrieval typically completes within 3\u20135 \"\n\"hours.\"",
      "start_idx": 431398,
      "end_idx": 433640,
      "metadata": {
        "num_sentences": 8,
        "num_words": 116,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3698928015572684,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "vault",
            "archive",
            "SNS topic",
            "retrieval",
            "job",
            "upload",
            "list_jobs",
            "create_vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "SNS topic",
            "vault_name",
            "archive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier, upload a file to it, start an archive retrieval job, and list in-progress jobs using Boto3.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using Boto3?",
            "What are the steps to upload a file to an Amazon S3 Glacier vault?",
            "How long does a standard archive retrieval request take in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Boto3",
          "SNS topic",
          "archive",
          "upload",
          "list_jobs",
          "create_vault",
          "vault_name",
          "vault",
          "retrieval",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_241",
      "text": ")\nif topic_arn:\nnotification = glacier.set_notifications(vault, topic_arn)\nprint(\nf\"\\nVault {vault.name} is configured to notify the \"\nf\"{notification.sns_topic} topic when {notification.events} \"\nf\"events occur. You can subscribe to this topic to receive \"\nf\"a message when the archive retrieval completes.\\n\"\n)\nelse:\nprint(\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 271\n\nAmazon S3 Glacier Developer Guide\nf\"\\nVault {vault.name} is not configured to notify an Amazon SNS\ntopic \"\nf\"when the archive retrieval completes so wait a few hours.\" )\nprint(\"\\nRetrieve your job output by running this script with the --retrieve\nflag.\") \u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference. \u2022 CreateVault\n\u2022 InitiateJob\n\u2022 ListJobs\n\u2022 ListVaults\n\u2022 SetVaultNotifications\n\u2022 UploadArchive\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Get Amazon S3 Glacier archive content and delete the archive using an\nAWS SDK\nThe following code example shows how to:\n\u2022 List jobs for an Amazon S3 Glacier vault and get job status. \u2022 Get the output of a completed archive retrieval job.",
      "start_idx": 431398,
      "end_idx": 433640,
      "metadata": {
        "num_sentences": 8,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3300096648080008,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Notification Configuration",
              "Job Output Retrieval",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive retrieval",
            "notification",
            "SNS topic",
            "API Version 2012-06-01",
            "Boto3",
            "CreateVault",
            "InitiateJob",
            "SetVaultNotifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "SNS topic",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK for Python (Boto3)",
            "Amazon SNS"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 Glacier vault notifications, retrieve job outputs, and provides references to relevant AWS SDK for Python (Boto3) API operations for managing Glacier archives and jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon S3 Glacier vault notifications?",
            "What API operations are available in Boto3 for managing S3 Glacier archives?",
            "How can I retrieve the output of a completed archive retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "SNS topic",
          "SetVaultNotifications",
          "notification",
          "vault",
          "API Version 2012-06-01",
          "Amazon SNS",
          "CreateVault",
          "archive retrieval",
          "Amazon S3 Glacier",
          "InitiateJob",
          "AWS SDK for Python"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_242",
      "text": "\u2022 Delete an archive. \u2022 Delete a vault. Get archive content and delete the archive API Version 2012-06-01 272\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create a class that wraps S3 Glacier operations. import argparse\nimport logging\nimport os\nimport boto3\nfrom botocore.exceptions import ClientError\nlogger = logging.getLogger(__name__)\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault. :param vault: The vault to query. :param job_type: The type of job to list.",
      "start_idx": 433641,
      "end_idx": 436895,
      "metadata": {
        "num_sentences": 10,
        "num_words": 126,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28899578518337676,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "Python SDK",
            "delete archive",
            "delete vault",
            "list jobs",
            "API operations",
            "AWS Code Examples Repository",
            "ClientError",
            "logging"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Code Examples Repository",
            "GlacierWrapper",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "AWS SDKs",
            "Python Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on using the Amazon S3 Glacier API, including operations like deleting archives and vaults, listing jobs, and wrapping S3 Glacier operations in a Python class using Boto3.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive or vault in Amazon S3 Glacier?",
            "How do I list jobs by type for a specific vault using Boto3?",
            "What is the purpose of the GlacierWrapper class in this example?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "Boto3",
          "GlacierWrapper",
          "ClientError",
          "delete vault",
          "delete archive",
          "logging",
          "Python SDK",
          "list jobs",
          "Amazon S3 Glacier",
          "AWS Code Examples Repository",
          "API operations"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_243",
      "text": ":return: The list of jobs of the requested type.\n\"\"\" job_list = []\ntry:\nif job_type == \"all\":\nGet archive content and delete the archive API Version 2012-06-01 273\n\nAmazon S3 Glacier Developer Guide\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get. \", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s. \", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s. \", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\n@staticmethod\ndef get_job_output(job):\n\"\"\"\nGets the output of a job, such as a vault inventory or the contents of an\narchive. :param job: The job to get output from. :return: The job output, in bytes.\n\"\"\" try:\nresponse = job.get_output()\nout_bytes = response[\"body\"].read()\nlogger.info(\"Read %s bytes from job %s. \", len(out_bytes), job.id)\nif \"archiveDescription\" in response:\nlogger.info(\n\"These bytes are described as '%s'\",\nresponse[\"archiveDescription\"]\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get output for job %s. \", job.id)\nraise\nGet archive content and delete the archive API Version 2012-06-01 274\n\nAmazon S3 Glacier Developer Guide\nelse:\nreturn out_bytes\n@staticmethod\ndef delete_archive(archive):\n\"\"\"\nDeletes an archive from a vault.",
      "start_idx": 433641,
      "end_idx": 436895,
      "metadata": {
        "num_sentences": 10,
        "num_words": 214,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47821731567382814,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIUsage"
            ]
          },
          "keywords": [
            "job_type",
            "vault",
            "job_list",
            "ClientError",
            "job_output",
            "archive",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "logger",
            "get_output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ClientError",
            "job",
            "vault",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "Job Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python Logging"
          ]
        },
        "semantic": {
          "summary": "This documentation provides methods to retrieve different types of jobs from an Amazon S3 Glacier vault, get the output of a specific job, and delete an archive from the vault.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve jobs of a specific type from an Amazon S3 Glacier vault?",
            "What is the process to get the output of a job in Amazon S3 Glacier?",
            "How do I delete an archive from an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "archive",
          "logger",
          "get_output",
          "ClientError",
          "vault",
          "API Version 2012-06-01",
          "job_list",
          "Amazon S3 Glacier",
          "job",
          "job_type",
          "job_output"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_244",
      "text": ":param archive: The archive to delete.\n\"\"\" try:\narchive.delete()\nlogger.info(\n\"Deleted archive %s from vault %s. \", archive.id,\narchive.vault_name\n)\nexcept ClientError:\nlogger.exception(\"Couldn't delete archive %s. \", archive.id)\nraise\n@staticmethod\ndef delete_vault(vault):\n\"\"\"\nDeletes a vault. :param vault: The vault to delete.\n\"\"\" try:\nvault.delete()\nlogger.info(\"Deleted vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't delete vault %s. \", vault.name)\nraise\nCall functions on the wrapper class to get archive content from a completed job, then delete\nthe archive. def retrieve_demo(glacier, vault_name):\n\"\"\"\nGet archive content and delete the archive API Version 2012-06-01 275\n\nAmazon S3 Glacier Developer Guide\nShows how to:\n* List jobs for a vault and get job status. * Get the output of a completed archive retrieval job.",
      "start_idx": 433641,
      "end_idx": 436895,
      "metadata": {
        "num_sentences": 10,
        "num_words": 120,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5653612772623698,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "archive",
            "vault",
            "delete",
            "ClientError",
            "logger",
            "retrieve_demo",
            "Amazon S3 Glacier",
            "job status",
            "archive retrieval",
            "API Version 2012-06-01"
          ],
          "entities": [
            "archive",
            "vault",
            "Amazon S3 Glacier",
            "ClientError",
            "logger"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Error Handling",
            "Logging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation provides methods to delete archives and vaults in Amazon S3 Glacier, retrieve archive content from completed jobs, and manage job statuses.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What happens if there's an error while deleting a vault?",
            "How can I retrieve archive content from a completed job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "logger",
          "archive",
          "ClientError",
          "retrieve_demo",
          "vault",
          "delete",
          "API Version 2012-06-01",
          "archive retrieval",
          "Amazon S3 Glacier",
          "job status"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_245",
      "text": "* Delete an archive. * Delete a vault. :param glacier: A Boto3 Amazon S3 Glacier resource. :param vault_name: The name of the vault to query for jobs.\n\"\"\" vault = glacier.glacier_resource.Vault(\"-\", vault_name)\ntry:\nvault.load()\nexcept ClientError as err:\nif err.response[\"Error\"][\"Code\"] == \"ResourceNotFoundException\":\nprint(\nf\"\\nVault {vault_name} doesn't exist. You must first run this\nscript \"\nf\"with the --upload flag to create the vault.\" )\nreturn\nelse:\nraise\nprint(f\"\\nGetting completed jobs for {vault.name}.\") jobs = glacier.list_jobs(vault, \"completed\")\nif not jobs:\nprint(\"\\nNo completed jobs found. Give it some time and try again\nlater.\") return\nretrieval_job = None\nfor job in jobs:\nif job.action == \"ArchiveRetrieval\" and job.status_code == \"Succeeded\":\nretrieval_job = job\nbreak\nif retrieval_job is None:\nprint(\n\"\\nNo ArchiveRetrieval jobs found. Give it some time and try again \"\n\"later.\" )\nreturn\nprint(f\"\\nGetting output from job {retrieval_job.id}.\")",
      "start_idx": 436896,
      "end_idx": 441320,
      "metadata": {
        "num_sentences": 12,
        "num_words": 135,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2637634855328184,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "ErrorHandling",
              "JobManagement"
            ]
          },
          "keywords": [
            "archive",
            "vault",
            "Boto3",
            "Amazon S3 Glacier",
            "ClientError",
            "ResourceNotFoundException",
            "ArchiveRetrieval",
            "completed jobs",
            "retrieval job",
            "list_jobs"
          ],
          "entities": [
            "glacier",
            "vault_name",
            "Vault",
            "ClientError",
            "ResourceNotFoundException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Error Handling",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for checking and retrieving completed archive retrieval jobs from an Amazon S3 Glacier vault using the Boto3 library.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive or vault in Amazon S3 Glacier?",
            "What should I do if a vault does not exist in Amazon S3 Glacier?",
            "How can I retrieve the output of a completed ArchiveRetrieval job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "ArchiveRetrieval",
          "completed jobs",
          "ResourceNotFoundException",
          "archive",
          "vault_name",
          "list_jobs",
          "ClientError",
          "glacier",
          "Vault",
          "vault",
          "Amazon S3 Glacier",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_246",
      "text": "archive_bytes = glacier.get_job_output(retrieval_job)\nGet archive content and delete the archive API Version 2012-06-01 276\n\nAmazon S3 Glacier Developer Guide\narchive_str = archive_bytes.decode(\"utf-8\")\nprint(\"\\nGot archive data. Printing the first 10 lines.\") print(os.linesep.join(archive_str.split(os.linesep)[:10]))\nprint(f\"\\nDeleting the archive from {vault.name}.\") archive = glacier.glacier_resource.Archive(\n\"-\", vault.name, retrieval_job.archive_id\n)\nglacier.delete_archive(archive)\nprint(f\"\\nDeleting {vault.name}.\") glacier.delete_vault(vault)\n\u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference. \u2022 DeleteArchive\n\u2022 DeleteVault\n\u2022 GetJobOutput\n\u2022 ListJobs\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Get archive content and delete the archive API Version 2012-06-01 277\n\nAmazon S3 Glacier Developer Guide\nSecurity in Amazon S3 Glacier\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from a data center\nand network architecture that are built to meet the requirements of the most security-sensitive\norganizations. Security is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely.",
      "start_idx": 436896,
      "end_idx": 441320,
      "metadata": {
        "num_sentences": 12,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2844795458244555,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIReference",
              "Security"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "retrieval_job",
            "delete_archive",
            "delete_vault",
            "GetJobOutput",
            "ListJobs",
            "AWS SDK",
            "Boto3",
            "shared responsibility model"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "API Version 2012-06-01",
            "AWS Cloud",
            "vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Operations",
          "secondary_categories": [
            "Cloud Security",
            "AWS SDK for Python (Boto3)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Cloud"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve, decode, and delete an archive in Amazon S3 Glacier using the AWS SDK for Python (Boto3). It also highlights the shared responsibility model for cloud security in AWS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve and decode archive data from Amazon S3 Glacier?",
            "What are the steps to delete an archive and vault in Amazon S3 Glacier?",
            "What is the shared responsibility model for security in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier Operations]",
        "tf_idf_keywords": [
          "Boto3",
          "delete_vault",
          "AWS SDK for Python (Boto3)",
          "delete_archive",
          "archive",
          "AWS Cloud",
          "AWS SDK",
          "GetJobOutput",
          "retrieval_job",
          "vault",
          "ListJobs",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "shared responsibility model"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_247",
      "text": "The\neffectiveness of our security is regularly tested and verified by third-party auditors as part of the\nAWS compliance programs. To learn about the compliance programs that apply to Amazon S3\nGlacier (S3 Glacier), see AWS Services in Scope by Compliance Program. \u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your organization\u2019s\nrequirements, and applicable laws and regulations. This documentation will help you understand how to apply the shared responsibility model when\nusing S3 Glacier. The following topics show you how to configure S3 Glacier to meet your security\nand compliance objectives. You'll also learn how to use other AWS services that can help you to\nmonitor and secure your S3 Glacier resources. Topics\n\u2022 Data Protection in Amazon S3 Glacier\n\u2022 Identity and Access Management for Amazon S3 Glacier\n\u2022 Logging and Monitoring in Amazon S3 Glacier\n\u2022 Compliance Validation for Amazon S3 Glacier\n\u2022 Resilience in Amazon S3 Glacier\n\u2022 Infrastructure Security in Amazon S3 Glacier\nData Protection in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides highly durable cloud storage for data archiving and long-\nterm backup. S3 Glacier is designed to deliver 99.999999999 percent durability and provides\nData Protection API Version 2012-06-01 278\n\nAmazon S3 Glacier Developer Guide\ncomprehensive security and compliance capabilities that can help you meet stringent regulatory\nrequirements. S3 Glacier redundantly stores data in multiple AWS Availability Zones (AZ) and on\nmultiple devices within each AZ. To increase durability, S3 Glacier synchronously stores your data\nacross multiple AZs before confirming a successful upload. For more information about the AWS global cloud infrastructure, see Global Infrastructure.",
      "start_idx": 436896,
      "end_idx": 441320,
      "metadata": {
        "num_sentences": 12,
        "num_words": 285,
        "chunk_type": "semantic_split",
        "coherence_score": 0.510114149613814,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Compliance",
              "Configuration"
            ]
          },
          "keywords": [
            "AWS compliance programs",
            "Amazon S3 Glacier",
            "shared responsibility model",
            "data protection",
            "identity and access management",
            "logging and monitoring",
            "compliance validation",
            "resilience",
            "infrastructure security",
            "AWS Availability Zones"
          ],
          "entities": [
            "AWS compliance programs",
            "Amazon S3 Glacier",
            "AWS Services in Scope by Compliance Program",
            "AWS global cloud infrastructure",
            "Data Protection API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Security and Compliance",
          "secondary_categories": [
            "Data Protection",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Compliance Programs",
            "AWS Availability Zones"
          ],
          "mentioned_tools": [
            "Data Protection API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to apply the shared responsibility model to Amazon S3 Glacier, covering topics such as data protection, identity and access management, logging, compliance validation, resilience, and infrastructure security. It highlights S3 Glacier's durability, security, and compliance capabilities for data archiving and backup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure Amazon S3 Glacier to meet security and compliance objectives?",
            "What are the data protection capabilities of Amazon S3 Glacier?",
            "How does S3 Glacier ensure durability and redundancy for stored data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Security and Compliance]",
        "tf_idf_keywords": [
          "AWS compliance programs",
          "logging and monitoring",
          "identity and access management",
          "infrastructure security",
          "AWS Availability Zones",
          "AWS Compliance Programs",
          "compliance validation",
          "AWS Services in Scope by Compliance Program",
          "Amazon S3 Glacier",
          "shared responsibility model",
          "data protection",
          "AWS global cloud infrastructure",
          "resilience",
          "Data Protection API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_248",
      "text": "For data protection purposes, we recommend that you protect AWS account credentials and give\nindividual users, groups, or roles only the permissions necessary to fulfill their job duties. If you require FIPS 140-2 validated cryptographic modules when accessing AWS through a\ncommand line interface or an API, use a FIPS endpoint. For more information about the available\nFIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2. Topics\n\u2022 Data Encryption\n\u2022 Key Management\n\u2022 Internetwork Traffic Privacy\nData Encryption\nData protection refers to protecting data while in-transit (as it travels to and from Amazon S3\nGlacier) and at rest (while it is stored in AWS data centers). You can protect data in transit that is\nuploaded directly to S3 Glacier using Secure Sockets Layer (SSL) or client-side encryption. You can also access S3 Glacier through Amazon S3. Amazon S3 supports lifecycle configuration on\nan Amazon S3 bucket, which enables you to transition objects to the S3 Glacier storage class for\narchival. Data in transit between Amazon S3 and S3 Glacier via lifecycle policies is encrypted using\nSSL.",
      "start_idx": 441321,
      "end_idx": 443672,
      "metadata": {
        "num_sentences": 8,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3847863333565848,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Data Protection",
              "Encryption",
              "Key Management",
              "Privacy"
            ]
          },
          "keywords": [
            "AWS account credentials",
            "FIPS 140-2",
            "cryptographic modules",
            "FIPS endpoint",
            "Data Encryption",
            "Key Management",
            "Amazon S3 Glacier",
            "SSL",
            "client-side encryption",
            "lifecycle configuration"
          ],
          "entities": [
            "AWS",
            "FIPS 140-2",
            "Amazon S3",
            "S3 Glacier",
            "Secure Sockets Layer (SSL)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Encryption",
          "secondary_categories": [
            "Key Management",
            "Internetwork Traffic Privacy"
          ],
          "mentioned_services": [
            "AWS",
            "Amazon S3",
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "Secure Sockets Layer (SSL)"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on data protection in AWS, emphasizing credential security, permissions management, and encryption methods for data in transit and at rest, including the use of FIPS endpoints and SSL encryption for secure data transfer to S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I protect data in transit and at rest within AWS services?",
            "What is the role of SSL encryption in transferring data to S3 Glacier?",
            "Where can I find information about FIPS 140-2 validated cryptographic modules?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Encryption]",
        "tf_idf_keywords": [
          "Amazon S3",
          "S3 Glacier",
          "AWS",
          "Secure Sockets Layer (SSL)",
          "FIPS endpoint",
          "cryptographic modules",
          "SSL",
          "AWS account credentials",
          "Amazon S3 Glacier",
          "Key Management",
          "FIPS 140-2",
          "Data Encryption",
          "client-side encryption",
          "lifecycle configuration"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_249",
      "text": "Data at rest stored in S3 Glacier is automatically server-side encrypted using 256-bit Advanced\nEncryption Standard (AES-256) with keys maintained by AWS. If you prefer to manage your\nown keys, you can also use client-side encryption before storing data in S3 Glacier. For more\ninformation about how to setup default encryption for Amazon S3, see Amazon S3 Default\nEncryption in the Amazon Simple Storage Service User Guide. Data Encryption API Version 2012-06-01 279\n\nAmazon S3 Glacier Developer Guide\nKey Management\nServer-side encryption addresses data encryption at rest\u2014that is, Amazon S3 Glacier encrypts your\ndata as it writes it to its data centers and decrypts it for you when you access it. As long as you\nauthenticate your request and you have access permissions, there is no difference in the way you\naccess encrypted or unencrypted data. Data at rest stored in S3 Glacier is automatically server-side encrypted using AES-256, using keys\nmaintained by AWS. As an additional safeguard, AWS encrypts the key itself with a root key that we\nregularly rotate. Internetwork Traffic Privacy\nAccess to Amazon S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2.",
      "start_idx": 441321,
      "end_idx": 443672,
      "metadata": {
        "num_sentences": 9,
        "num_words": 195,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49302323659261066,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Encryption",
              "Security",
              "Key Management"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AES-256",
            "server-side encryption",
            "client-side encryption",
            "root key",
            "key rotation",
            "Transport Layer Security",
            "TLS 1.2",
            "data at rest",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "Advanced Encryption Standard",
            "Data Encryption API",
            "Amazon Simple Storage Service User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Encryption",
          "secondary_categories": [
            "Key Management",
            "Network Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Key Management Service (KMS)",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "Data Encryption API"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 Glacier automatically encrypts data at rest using AES-256 with keys managed by AWS, and also supports client-side encryption for user-managed keys. Network access requires TLS 1.2, and AWS employs additional safeguards like key rotation and root key encryption.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier handle data encryption at rest?",
            "Can I use my own encryption keys with Amazon S3 Glacier?",
            "What security protocols are required for accessing Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Encryption]",
        "tf_idf_keywords": [
          "key rotation",
          "Amazon S3",
          "S3 Glacier",
          "AWS",
          "AES-256",
          "root key",
          "Advanced Encryption Standard",
          "Amazon Simple Storage Service User Guide",
          "server-side encryption",
          "TLS 1.2",
          "AWS Key Management Service (KMS)",
          "Transport Layer Security",
          "Amazon S3 Glacier",
          "Data Encryption API",
          "data at rest"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_250",
      "text": "We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS), such as Ephemeral Diffie-Hellman (DHE) or\nElliptic Curve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later\nsupport these modes. Additionally, you must sign requests using an access key ID and a secret\naccess key that are associated with an IAM principal, or you can use the AWS Security Token Service\n(AWS STS) to generate temporary security credentials to sign requests. VPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon Simple Storage Service\n(Amazon S3) VPC endpoints if you access S3 Glacier as a storage tier integrated with Amazon S3. For more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide. Identity and Access Management for Amazon S3 Glacier\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nKey Management API Version 2012-06-01 280\n\nAmazon S3 Glacier Developer Guide\nand authorized (have permissions) to use S3 Glacier resources.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 261,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28115666707356773,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Networking",
              "Storage",
              "Access Management"
            ]
          },
          "keywords": [
            "TLS 1.3",
            "Perfect Forward Secrecy",
            "Ephemeral Diffie-Hellman",
            "Elliptic Curve Diffie-Hellman",
            "IAM",
            "AWS Security Token Service",
            "VPC Endpoints",
            "Amazon S3",
            "S3 Glacier",
            "Object Lifecycle Management"
          ],
          "entities": [
            "AWS STS",
            "Amazon S3 Glacier",
            "IAM",
            "Amazon VPC",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Security and Access Management",
          "secondary_categories": [
            "Networking",
            "Storage"
          ],
          "mentioned_services": [
            "AWS Security Token Service (AWS STS)",
            "Amazon S3 Glacier",
            "Amazon VPC"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines recommendations for secure communications using TLS 1.3, IAM-based authentication, and temporary credentials, as well as guidance on using VPC endpoints for accessing AWS services like S3 Glacier. It also provides details on lifecycle management and access control for S3 Glacier resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What cipher suites are recommended for Perfect Forward Secrecy in TLS connections?",
            "How can I securely authenticate requests to AWS services using IAM or AWS STS?",
            "How can I access S3 Glacier using VPC endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Security and Access Management]",
        "tf_idf_keywords": [
          "AWS PrivateLink",
          "Amazon S3",
          "S3 Glacier",
          "Ephemeral Diffie-Hellman",
          "IAM",
          "Object Lifecycle Management",
          "TLS 1.3",
          "Elliptic Curve Diffie-Hellman",
          "Amazon VPC",
          "AWS Security Token Service (AWS STS)",
          "Amazon S3 Glacier",
          "Perfect Forward Secrecy",
          "AWS Security Token Service",
          "AWS STS",
          "VPC Endpoints"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_251",
      "text": "IAM is an AWS service that you can\nuse with no additional charge. Topics\n\u2022 Audience\n\u2022 Authenticating with identities\n\u2022 Managing access using policies\n\u2022 How Amazon S3 Glacier works with IAM\n\u2022 Identity-based policy examples for Amazon S3 Glacier\n\u2022 Resource-based policy examples for Amazon S3 Glacier\n\u2022 Troubleshooting Amazon S3 Glacier identity and access\n\u2022 API Permissions Reference\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you\ndo in S3 Glacier. Service user \u2013 If you use the S3 Glacier service to do your job, then your administrator provides you\nwith the credentials and permissions that you need. As you use more S3 Glacier features to do your\nwork, you might need additional permissions. Understanding how access is managed can help you\nrequest the right permissions from your administrator. If you cannot access a feature in S3 Glacier,\nsee Troubleshooting Amazon S3 Glacier identity and access. Service administrator \u2013 If you're in charge of S3 Glacier resources at your company, you probably\nhave full access to S3 Glacier. It's your job to determine which S3 Glacier features and resources\nyour service users should access. You must then submit requests to your IAM administrator to\nchange the permissions of your service users. Review the information on this page to understand\nthe basic concepts of IAM.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 225,
        "chunk_type": "semantic_split",
        "coherence_score": 0.46407508850097656,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Guidance",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "IAM",
            "AWS",
            "S3 Glacier",
            "policies",
            "permissions",
            "identity-based policies",
            "resource-based policies",
            "API Permissions",
            "authentication",
            "access management"
          ],
          "entities": [
            "AWS Identity and Access Management",
            "Amazon S3 Glacier",
            "IAM administrator",
            "service user",
            "service administrator"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Policy Management",
            "Access Troubleshooting"
          ],
          "mentioned_services": [
            "AWS IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how AWS Identity and Access Management (IAM) integrates with Amazon S3 Glacier, detailing roles, permissions, and troubleshooting access issues for service users and administrators.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I manage access to Amazon S3 Glacier using IAM?",
            "What are some examples of identity-based and resource-based policies for Amazon S3 Glacier?",
            "What should I do if I cannot access a feature in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "service user",
          "resource-based policies",
          "AWS Identity and Access Management",
          "S3 Glacier",
          "identity-based policies",
          "AWS",
          "IAM",
          "authentication",
          "IAM administrator",
          "API Permissions",
          "AWS IAM",
          "permissions",
          "access management",
          "policies",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_252",
      "text": "To learn more about how your company can use IAM with S3 Glacier, see\nHow Amazon S3 Glacier works with IAM. IAM administrator \u2013 If you're an IAM administrator, you might want to learn details about how\nyou can write policies to manage access to S3 Glacier. To view example S3 Glacier identity-based\npolicies that you can use in IAM, see Identity-based policy examples for Amazon S3 Glacier. Audience API Version 2012-06-01 281\n\nAmazon S3 Glacier Developer Guide\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated (signed in to AWS) as the AWS account root user, as an IAM user, or by assuming an\nIAM role. You can sign in to AWS as a federated identity by using credentials provided through an identity\nsource. AWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on\nauthentication, and your Google or Facebook credentials are examples of federated identities. When you sign in as a federated identity, your administrator previously set up identity federation\nusing IAM roles. When you access AWS by using federation, you are indirectly assuming a role. Depending on the type of user you are, you can sign in to the AWS Management Console or the\nAWS access portal.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49974598354763455,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "IAM Policies",
              "Federated Identities"
            ]
          },
          "keywords": [
            "IAM",
            "S3 Glacier",
            "Identity-based policies",
            "Authentication",
            "Federated identity",
            "IAM roles",
            "AWS Management Console",
            "AWS access portal",
            "Identity federation",
            "IAM Identity Center"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Management Console",
            "IAM Identity Center",
            "Identity federation"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Storage",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM",
            "AWS IAM Identity Center"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier integrates with IAM for authentication and access management, including identity-based policies and federated identities for signing into AWS services.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can IAM administrators write policies to manage access to Amazon S3 Glacier?",
            "What are examples of identity-based policies for Amazon S3 Glacier?",
            "How does authentication work with federated identities in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Management Console",
          "Identity-based policies",
          "Identity federation",
          "IAM",
          "AWS access portal",
          "Authentication",
          "Federated identity",
          "IAM Identity Center",
          "AWS IAM",
          "Amazon S3 Glacier",
          "AWS IAM Identity Center",
          "IAM roles"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_253",
      "text": "For more information about signing in to AWS, see How to sign in to your AWS\naccount in the AWS Sign-In User Guide. If you access AWS programmatically, AWS provides a software development kit (SDK) and a\ncommand line interface (CLI) to cryptographically sign your requests by using your credentials. If\nyou don't use AWS tools, you must sign requests yourself. For more information about using the\nrecommended method to sign requests yourself, see AWS Signature Version 4 for API requests in\nthe IAM User Guide. Regardless of the authentication method that you use, you might be required to provide additional\nsecurity information. For example, AWS recommends that you use multi-factor authentication\n(MFA) to increase the security of your account. To learn more, see Multi-factor authentication in\nthe AWS IAM Identity Center User Guide and AWS Multi-factor authentication in IAM in the IAM User\nGuide. AWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to\nall AWS services and resources in the account. This identity is called the AWS account root user and\nis accessed by signing in with the email address and password that you used to create the account. We strongly recommend that you don't use the root user for your everyday tasks.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4673772599962023,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "Security",
              "Account Management"
            ]
          },
          "keywords": [
            "AWS",
            "SDK",
            "CLI",
            "IAM",
            "AWS Signature Version 4",
            "multi-factor authentication",
            "root user",
            "credentials",
            "API requests",
            "security"
          ],
          "entities": [
            "AWS Sign-In User Guide",
            "IAM User Guide",
            "AWS IAM Identity Center User Guide",
            "AWS Multi-factor authentication in IAM",
            "AWS account root user"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Authentication and Security",
          "secondary_categories": [
            "Identity and Access Management",
            "API Request Signing"
          ],
          "mentioned_services": [
            "AWS IAM",
            "AWS IAM Identity Center",
            "AWS Signature Version 4"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains AWS authentication methods, including signing requests programmatically, using multi-factor authentication (MFA), and the role of the AWS account root user. It emphasizes security best practices and provides references to related guides.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I sign in to my AWS account?",
            "What is the recommended method to sign AWS API requests?",
            "Why should I avoid using the AWS root user for everyday tasks?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Authentication and Security]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "AWS",
          "AWS IAM Identity Center User Guide",
          "IAM",
          "AWS Sign-In User Guide",
          "SDK",
          "AWS Multi-factor authentication in IAM",
          "AWS account root user",
          "security",
          "CLI",
          "credentials",
          "multi-factor authentication",
          "API requests",
          "AWS IAM",
          "AWS IAM Identity Center"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_254",
      "text": "Safeguard your\nroot user credentials and use them to perform the tasks that only the root user can perform. For\nthe complete list of tasks that require you to sign in as the root user, see Tasks that require root\nuser credentials in the IAM User Guide. Authenticating with identities API Version 2012-06-01 282\n\nAmazon S3 Glacier Developer Guide\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use\nfederation with an identity provider to access AWS services by using temporary credentials. A federated identity is a user from your enterprise user directory, a web identity provider, the AWS\nDirectory Service, the Identity Center directory, or any user that accesses AWS services by using\ncredentials provided through an identity source. When federated identities access AWS accounts,\nthey assume roles, and the roles provide temporary credentials. For centralized access management, we recommend that you use AWS IAM Identity Center. You can\ncreate users and groups in IAM Identity Center, or you can connect and synchronize to a set of users\nand groups in your own identity source for use across all your AWS accounts and applications. For\ninformation about IAM Identity Center, see What is IAM Identity Center?",
      "start_idx": 449317,
      "end_idx": 451368,
      "metadata": {
        "num_sentences": 8,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4493286269051688,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Best Practice",
              "Security Guidance",
              "Identity Management"
            ]
          },
          "keywords": [
            "root user credentials",
            "IAM",
            "federated identity",
            "AWS services",
            "temporary credentials",
            "identity provider",
            "IAM Identity Center",
            "roles",
            "access management",
            "AWS accounts"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "AWS Directory Service",
            "Identity Center",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Authentication",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM Identity Center",
            "AWS Directory Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document emphasizes safeguarding root user credentials, using federated identities for temporary AWS access, and leveraging IAM Identity Center for centralized access management across AWS accounts and applications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What tasks require root user credentials in AWS?",
            "How can federated identities access AWS services?",
            "What is IAM Identity Center and how does it help with centralized access management?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "AWS accounts",
          "IAM",
          "AWS services",
          "identity provider",
          "Identity Center",
          "IAM Identity Center",
          "root user credentials",
          "temporary credentials",
          "access management",
          "AWS Directory Service",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS IAM Identity Center",
          "federated identity",
          "IAM User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_255",
      "text": "in the AWS IAM Identity\nCenter User Guide. IAM users and groups\nAn IAM user is an identity within your AWS account that has specific permissions for a single person\nor application. Where possible, we recommend relying on temporary credentials instead of creating\nIAM users who have long-term credentials such as passwords and access keys. However, if you have\nspecific use cases that require long-term credentials with IAM users, we recommend that you rotate\naccess keys. For more information, see Rotate access keys regularly for use cases that require long-\nterm credentials in the IAM User Guide. An IAM group is an identity that specifies a collection of IAM users. You can't sign in as a group. You\ncan use groups to specify permissions for multiple users at a time.",
      "start_idx": 449317,
      "end_idx": 451368,
      "metadata": {
        "num_sentences": 8,
        "num_words": 130,
        "chunk_type": "semantic_split",
        "coherence_score": 0.46283033915928434,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Best Practices",
              "Definitions"
            ]
          },
          "keywords": [
            "AWS IAM",
            "Identity Center",
            "IAM user",
            "IAM group",
            "permissions",
            "temporary credentials",
            "long-term credentials",
            "access keys",
            "rotate access keys",
            "User Guide"
          ],
          "entities": [
            "AWS IAM Identity Center",
            "IAM User Guide",
            "IAM users",
            "IAM groups",
            "access keys"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Security",
            "User Management"
          ],
          "mentioned_services": [
            "AWS IAM",
            "AWS IAM Identity Center"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The text explains IAM users and groups in AWS, emphasizing the use of temporary credentials over long-term credentials and recommending access key rotation for specific use cases. It also describes IAM groups as a way to manage permissions for multiple users collectively.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are IAM users and how are they used in AWS?",
            "Why is it recommended to use temporary credentials instead of long-term credentials?",
            "How can IAM groups be used to manage permissions for multiple users?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "IAM group",
          "Identity Center",
          "rotate access keys",
          "AWS IAM",
          "IAM user",
          "permissions",
          "temporary credentials",
          "long-term credentials",
          "AWS IAM Identity Center",
          "User Guide",
          "access keys",
          "IAM users",
          "IAM User Guide",
          "IAM groups"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_256",
      "text": "Groups make permissions easier\nto manage for large sets of users. For example, you could have a group named IAMAdmins and give\nthat group permissions to administer IAM resources. Users are different from roles. A user is uniquely associated with one person or application, but\na role is intended to be assumable by anyone who needs it. Users have permanent long-term\ncredentials, but roles provide temporary credentials. To learn more, see Use cases for IAM users in\nthe IAM User Guide. IAM roles\nAn IAM role is an identity within your AWS account that has specific permissions. It is similar to an\nIAM user, but is not associated with a specific person. To temporarily assume an IAM role in the\nAWS Management Console, you can switch from a user to an IAM role (console). You can assume a\nAuthenticating with identities API Version 2012-06-01 283\n\nAmazon S3 Glacier Developer Guide\nrole by calling an AWS CLI or AWS API operation or by using a custom URL.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4016880035400391,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Permissions",
              "IAM Users",
              "IAM Roles",
              "AWS Management Console"
            ]
          },
          "keywords": [
            "IAM",
            "permissions",
            "users",
            "roles",
            "AWS Management Console",
            "temporary credentials",
            "long-term credentials",
            "assume role",
            "AWS CLI",
            "AWS API"
          ],
          "entities": [
            "IAMAdmins",
            "IAM User Guide",
            "AWS Management Console",
            "Amazon S3 Glacier Developer Guide",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM (Identity and Access Management)",
          "secondary_categories": [
            "AWS Roles",
            "AWS Users"
          ],
          "mentioned_services": [
            "IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the differences between IAM users and roles, highlighting their use cases, credential types, and how to assume roles temporarily in AWS using various methods.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What is the difference between an IAM user and an IAM role?",
            "How can I assume an IAM role temporarily in AWS?",
            "What are the use cases for IAM users versus IAM roles?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM (Identity and Access Management)]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Amazon S3 Glacier Developer Guide",
          "AWS CLI",
          "IAM",
          "users",
          "temporary credentials",
          "permissions",
          "assume role",
          "IAMAdmins",
          "long-term credentials",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "IAM User Guide",
          "roles",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_257",
      "text": "For more information\nabout methods for using roles, see Methods to assume a role in the IAM User Guide. IAM roles with temporary credentials are useful in the following situations:\n\u2022 Federated user access \u2013 To assign permissions to a federated identity, you create a role\nand define permissions for the role. When a federated identity authenticates, the identity\nis associated with the role and is granted the permissions that are defined by the role. For\ninformation about roles for federation, see Creating a role for a third-party Identity Provider\nin the IAM User Guide. If you use IAM Identity Center, you configure a permission set. To control\nwhat your identities can access after they authenticate, IAM Identity Center correlates the\npermission set to a role in IAM. For information about permissions sets, see Permission sets in\nthe AWS IAM Identity Center User Guide. \u2022 Temporary IAM user permissions \u2013 An IAM user or role can assume an IAM role to temporarily\ntake on different permissions for a specific task. \u2022 Cross-account access \u2013 You can use an IAM role to allow someone (a trusted principal) in a\ndifferent account to access resources in your account. Roles are the primary way to grant cross-\naccount access.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 206,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5406920539008246,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Federated user access",
              "Temporary permissions",
              "Cross-account access"
            ]
          },
          "keywords": [
            "IAM roles",
            "temporary credentials",
            "federated identity",
            "permissions",
            "Identity Provider",
            "IAM Identity Center",
            "permission sets",
            "cross-account access",
            "trusted principal",
            "authentication"
          ],
          "entities": [
            "IAM User Guide",
            "AWS IAM Identity Center User Guide",
            "IAM roles",
            "Identity Provider",
            "IAM Identity Center"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Roles",
          "secondary_categories": [
            "Federated Access",
            "Cross-Account Access"
          ],
          "mentioned_services": [
            "IAM",
            "IAM Identity Center"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of IAM roles with temporary credentials for federated access, temporary user permissions, and cross-account access, providing links to relevant IAM User Guide sections for detailed information.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I assign permissions to a federated identity using IAM roles?",
            "What are permission sets in AWS IAM Identity Center?",
            "How do IAM roles enable cross-account access?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Roles]",
        "tf_idf_keywords": [
          "trusted principal",
          "AWS IAM Identity Center User Guide",
          "IAM",
          "authentication",
          "IAM Identity Center",
          "cross-account access",
          "Identity Provider",
          "temporary credentials",
          "permissions",
          "federated identity",
          "IAM User Guide",
          "IAM roles",
          "permission sets"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_258",
      "text": "However, with some AWS services, you can attach a policy directly to a resource\n(instead of using a role as a proxy). To learn the difference between roles and resource-based\npolicies for cross-account access, see Cross account resource access in IAM in the IAM User Guide. \u2022 Cross-service access \u2013 Some AWS services use features in other AWS services. For example, when\nyou make a call in a service, it's common for that service to run applications in Amazon EC2 or\nstore objects in Amazon S3. A service might do this using the calling principal's permissions,\nusing a service role, or using a service-linked role. \u2022 Forward access sessions (FAS) \u2013 When you use an IAM user or role to perform actions in\nAWS, you are considered a principal. When you use some services, you might perform an\naction that then initiates another action in a different service. FAS uses the permissions of the\nprincipal calling an AWS service, combined with the requesting AWS service to make requests\nto downstream services. FAS requests are only made when a service receives a request that\nrequires interactions with other AWS services or resources to complete. In this case, you must\nhave permissions to perform both actions.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.387647459242079,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Access Control",
              "Cross-Service Interaction",
              "Permission Management"
            ]
          },
          "keywords": [
            "AWS services",
            "IAM",
            "policy",
            "resource-based policies",
            "cross-account access",
            "service role",
            "service-linked role",
            "Forward access sessions",
            "permissions",
            "principal"
          ],
          "entities": [
            "AWS",
            "IAM",
            "Amazon EC2",
            "Amazon S3",
            "FAS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Policies and Permissions",
          "secondary_categories": [
            "Cross-Service Access",
            "Forward Access Sessions (FAS)"
          ],
          "mentioned_services": [
            "Amazon EC2",
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of resource-based policies, cross-service access, and forward access sessions (FAS) in AWS, highlighting how permissions and roles are used for cross-account and cross-service interactions.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What is the difference between roles and resource-based policies in AWS?",
            "How do AWS services use cross-service access to interact with other services?",
            "What permissions are required for Forward Access Sessions (FAS) in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Policies and Permissions]",
        "tf_idf_keywords": [
          "resource-based policies",
          "principal",
          "Amazon S3",
          "policy",
          "Forward access sessions",
          "AWS",
          "AWS services",
          "IAM",
          "Amazon EC2",
          "FAS",
          "cross-account access",
          "permissions",
          "service role",
          "service-linked role"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_259",
      "text": "For policy details when making FAS requests, see\nForward access sessions. \u2022 Service role \u2013 A service role is an IAM role that a service assumes to perform actions on your\nbehalf. An IAM administrator can create, modify, and delete a service role from within IAM. For\nmore information, see Creating a role to delegate permissions to an AWS service in the IAM\nUser Guide. Authenticating with identities API Version 2012-06-01 284\n\nAmazon S3 Glacier Developer Guide\n\u2022 Service-linked role \u2013 A service-linked role is a type of service role that is linked to an AWS\nservice. The service can assume the role to perform an action on your behalf. Service-linked\nroles appear in your AWS account and are owned by the service. An IAM administrator can\nview, but not edit the permissions for service-linked roles. \u2022 Applications running on Amazon EC2 \u2013 You can use an IAM role to manage temporary\ncredentials for applications that are running on an EC2 instance and making AWS CLI or AWS API\nrequests. This is preferable to storing access keys within the EC2 instance.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 181,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4489407009548611,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM roles",
              "Service roles",
              "Service-linked roles",
              "Temporary credentials"
            ]
          },
          "keywords": [
            "IAM role",
            "service role",
            "service-linked role",
            "Amazon S3 Glacier",
            "EC2 instance",
            "temporary credentials",
            "AWS CLI",
            "AWS API",
            "access keys",
            "IAM administrator"
          ],
          "entities": [
            "IAM",
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS API",
            "EC2"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Roles",
          "secondary_categories": [
            "AWS Services",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon EC2",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the use of IAM roles, including service roles, service-linked roles, and roles for applications running on Amazon EC2, for managing permissions and temporary credentials in AWS services.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is a service role in AWS IAM and how can it be managed?",
            "What is the difference between a service role and a service-linked role?",
            "How can IAM roles be used to manage temporary credentials for applications on Amazon EC2?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Roles]",
        "tf_idf_keywords": [
          "EC2",
          "AWS CLI",
          "IAM",
          "Amazon EC2",
          "IAM administrator",
          "temporary credentials",
          "EC2 instance",
          "IAM role",
          "Amazon S3 Glacier",
          "service-linked role",
          "service role",
          "access keys",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_260",
      "text": "To assign an AWS role\nto an EC2 instance and make it available to all of its applications, you create an instance profile\nthat is attached to the instance. An instance profile contains the role and enables programs that\nare running on the EC2 instance to get temporary credentials. For more information, see Using\nan IAM role to grant permissions to applications running on Amazon EC2 instances in the IAM\nUser Guide. Managing access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources. A policy is an object in AWS that, when associated with an identity or resource, defines their\npermissions. AWS evaluates these policies when a principal (user, root user, or role session) makes\na request. Permissions in the policies determine whether the request is allowed or denied. Most\npolicies are stored in AWS as JSON documents. For more information about the structure and\ncontents of JSON policy documents, see Overview of JSON policies in the IAM User Guide. Administrators can use AWS JSON policies to specify who has access to what.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 182,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5050034417046441,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Access Management"
            ]
          },
          "keywords": [
            "AWS role",
            "EC2 instance",
            "instance profile",
            "temporary credentials",
            "IAM role",
            "permissions",
            "policies",
            "JSON documents",
            "AWS identities",
            "AWS resources"
          ],
          "entities": [
            "AWS",
            "EC2",
            "IAM User Guide",
            "JSON policies",
            "AWS JSON policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "IAM Roles",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon EC2",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "JSON"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to assign an AWS role to an EC2 instance using an instance profile and manage access through policies in AWS, which are defined in JSON documents to control permissions for identities and resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I assign an AWS role to an EC2 instance?",
            "What is an instance profile and how does it work?",
            "How are permissions managed in AWS using JSON policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Access Management]",
        "tf_idf_keywords": [
          "AWS JSON policies",
          "EC2",
          "AWS identities",
          "AWS",
          "Amazon EC2",
          "JSON policies",
          "IAM User Guide",
          "AWS resources",
          "temporary credentials",
          "EC2 instance",
          "IAM role",
          "permissions",
          "policies",
          "AWS IAM",
          "AWS role"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_261",
      "text": "That is, which\nprincipal can perform actions on what resources, and under what conditions. By default, users and roles have no permissions. To grant users permission to perform actions on\nthe resources that they need, an IAM administrator can create IAM policies. The administrator can\nthen add the IAM policies to roles, and users can assume the roles. IAM policies define permissions for an action regardless of the method that you use to perform the\noperation. For example, suppose that you have a policy that allows the iam:GetRole action. A\nuser with that policy can get role information from the AWS Management Console, the AWS CLI, or\nthe AWS API. Identity-based policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role. These policies control what actions users and roles can\nManaging access using policies API Version 2012-06-01 285\n\nAmazon S3 Glacier Developer Guide\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 188,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47896673414442276,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM policies",
              "Identity-based policies",
              "Access management"
            ]
          },
          "keywords": [
            "IAM policies",
            "permissions",
            "roles",
            "identity-based policies",
            "resources",
            "actions",
            "conditions",
            "AWS Management Console",
            "AWS CLI",
            "JSON"
          ],
          "entities": [
            "IAM",
            "AWS Management Console",
            "AWS CLI",
            "AWS API",
            "Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Policies",
          "secondary_categories": [
            "Access Management",
            "Identity-based Policies"
          ],
          "mentioned_services": [
            "AWS Management Console",
            "AWS CLI",
            "AWS API"
          ],
          "mentioned_tools": [
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how IAM policies define permissions for actions on resources, detailing identity-based policies and their role in managing access through JSON policy documents attached to users, groups, or roles.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can IAM administrators grant users permission to perform actions on resources?",
            "What is the purpose of identity-based policies in AWS IAM?",
            "How do IAM policies define permissions regardless of the method used to perform actions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Policies]",
        "tf_idf_keywords": [
          "resources",
          "AWS Management Console",
          "identity-based policies",
          "actions",
          "AWS CLI",
          "IAM",
          "permissions",
          "conditions",
          "IAM policies",
          "Amazon S3 Glacier",
          "JSON",
          "roles",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_262",
      "text": "Identity-based policies can be further categorized as inline policies or managed policies. Inline\npolicies are embedded directly into a single user, group, or role. Managed policies are standalone\npolicies that you can attach to multiple users, groups, and roles in your AWS account. Managed\npolicies include AWS managed policies and customer managed policies. To learn how to choose\nbetween a managed policy or an inline policy, see Choose between managed policies and inline\npolicies in the IAM User Guide. Resource-based policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions. You must specify a principal\nin a resource-based policy.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 159,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5128263685438368,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Types",
              "Access Control"
            ]
          },
          "keywords": [
            "Identity-based policies",
            "inline policies",
            "managed policies",
            "AWS managed policies",
            "customer managed policies",
            "resource-based policies",
            "IAM role trust policies",
            "Amazon S3 bucket policies",
            "principal",
            "JSON policy documents"
          ],
          "entities": [
            "AWS",
            "IAM User Guide",
            "Amazon S3",
            "IAM role",
            "JSON"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "Identity-based Policies",
            "Resource-based Policies"
          ],
          "mentioned_services": [
            "IAM",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This text explains the differences between identity-based policies (inline and managed) and resource-based policies in AWS IAM, including their purposes and usage scenarios.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "What is the difference between inline policies and managed policies in AWS IAM?",
            "How do resource-based policies control access to specific resources?",
            "When should I choose a managed policy over an inline policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Control Policies]",
        "tf_idf_keywords": [
          "resource-based policies",
          "principal",
          "Amazon S3 bucket policies",
          "Amazon S3",
          "JSON policy documents",
          "AWS",
          "Identity-based policies",
          "IAM",
          "customer managed policies",
          "IAM role trust policies",
          "AWS managed policies",
          "inline policies",
          "IAM role",
          "JSON",
          "managed policies"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_263",
      "text": "Principals can include accounts, users, roles, federated users, or AWS\nservices. Resource-based policies are inline policies that are located in that service. You can't use AWS\nmanaged policies from IAM in a resource-based policy. Access control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format. Amazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. To learn more\nabout ACLs, see Access control list (ACL) overview in the Amazon Simple Storage Service Developer\nGuide. Other policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum\npermissions granted to you by the more common policy types. \u2022 Permissions boundaries \u2013 A permissions boundary is an advanced feature in which you set\nthe maximum permissions that an identity-based policy can grant to an IAM entity (IAM user\nor role).",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4452062818739149,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Access Control",
              "Policy Types",
              "Permissions Management"
            ]
          },
          "keywords": [
            "Principals",
            "Resource-based policies",
            "Access control lists",
            "ACLs",
            "AWS managed policies",
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC",
            "Permissions boundaries",
            "IAM entity"
          ],
          "entities": [
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC",
            "IAM",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control",
          "secondary_categories": [
            "IAM Policies",
            "Permissions Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the concepts of principals, resource-based policies, access control lists (ACLs), and other advanced policy types like permissions boundaries in AWS. It highlights their differences, use cases, and supported services.",
          "intents": [
            "Reference",
            "Compare",
            "How-To"
          ],
          "potential_questions": [
            "What are resource-based policies and how do they differ from ACLs?",
            "Which AWS services support access control lists (ACLs)?",
            "What is a permissions boundary and how is it used in IAM?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Control]",
        "tf_idf_keywords": [
          "Amazon S3",
          "AWS",
          "AWS WAF",
          "Permissions boundaries",
          "IAM",
          "Amazon VPC",
          "Resource-based policies",
          "AWS managed policies",
          "ACLs",
          "IAM entity",
          "Principals",
          "Access control lists"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_264",
      "text": "You can set a permissions boundary for an entity. The resulting permissions are the\nManaging access using policies API Version 2012-06-01 286\n\nAmazon S3 Glacier Developer Guide\nintersection of an entity's identity-based policies and its permissions boundaries. Resource-based\npolicies that specify the user or role in the Principal field are not limited by the permissions\nboundary. An explicit deny in any of these policies overrides the allow. For more information\nabout permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide. \u2022 Service control policies (SCPs) \u2013 SCPs are JSON policies that specify the maximum permissions\nfor an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a\nservice for grouping and centrally managing multiple AWS accounts that your business owns. If\nyou enable all features in an organization, then you can apply service control policies (SCPs) to\nany or all of your accounts. The SCP limits permissions for entities in member accounts, including\neach AWS account root user. For more information about Organizations and SCPs, see Service\ncontrol policies in the AWS Organizations User Guide.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 181,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40606892903645836,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM Permissions Boundaries",
              "Service Control Policies (SCPs)",
              "AWS Organizations"
            ]
          },
          "keywords": [
            "permissions boundary",
            "IAM entities",
            "resource-based policies",
            "explicit deny",
            "service control policies",
            "AWS Organizations",
            "identity-based policies",
            "organizational unit",
            "JSON policies",
            "AWS accounts"
          ],
          "entities": [
            "Amazon S3 Glacier Developer Guide",
            "IAM User Guide",
            "AWS Organizations User Guide",
            "IAM entities",
            "AWS accounts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "IAM Policies",
            "AWS Organizations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Organizations",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to set permissions boundaries for IAM entities and describes the role of service control policies (SCPs) in managing permissions across AWS Organizations. It also highlights how resource-based policies and explicit denies interact with these boundaries.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are permissions boundaries for IAM entities?",
            "How do service control policies (SCPs) work in AWS Organizations?",
            "Do resource-based policies override permissions boundaries?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Management]",
        "tf_idf_keywords": [
          "IAM entities",
          "resource-based policies",
          "AWS Organizations",
          "Amazon S3 Glacier Developer Guide",
          "identity-based policies",
          "AWS accounts",
          "organizational unit",
          "IAM",
          "permissions boundary",
          "JSON policies",
          "service control policies",
          "explicit deny",
          "Amazon S3 Glacier",
          "IAM User Guide",
          "AWS Organizations User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_265",
      "text": "\u2022 Session policies \u2013 Session policies are advanced policies that you pass as a parameter when you\nprogrammatically create a temporary session for a role or federated user. The resulting session's\npermissions are the intersection of the user or role's identity-based policies and the session\npolicies. Permissions can also come from a resource-based policy. An explicit deny in any of these\npolicies overrides the allow. For more information, see Session policies in the IAM User Guide. Multiple policy types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated\nto understand. To learn how AWS determines whether to allow a request when multiple policy\ntypes are involved, see Policy evaluation logic in the IAM User Guide. How Amazon S3 Glacier works with IAM\nBefore you use IAM to manage access to S3 Glacier, learn what IAM features are available to use\nwith S3 Glacier. IAM features you can use with Amazon S3 Glacier\nIAM feature S3 Glacier support\nIdentity-based policies Yes\nResource-based policies Yes\nPolicy actions Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 287\n\nAmazon S3 Glacier Developer Guide\nIAM feature S3 Glacier support\nPolicy resources Yes\nPolicy condition keys (service-specific) Yes\nACLs No\nABAC (tags in policies) No\nTemporary credentials Yes\nPrincipal permissions No\nService roles No\nService-linked roles No\nTo get a high-level view of how S3 Glacier and other AWS services work with most IAM features,\nsee AWS services that work with IAM in the IAM User Guide. Identity-based policies for S3 Glacier\nSupports identity-based policies: Yes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 283,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4091651916503906,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "IAM",
              "Permissions"
            ]
          },
          "keywords": [
            "Session policies",
            "IAM",
            "S3 Glacier",
            "resource-based policies",
            "identity-based policies",
            "temporary credentials",
            "policy evaluation",
            "explicit deny",
            "policy condition keys",
            "ABAC"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "Policy actions",
            "ACLs",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Policy Evaluation",
            "IAM Features"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains session policies and how they interact with identity-based, resource-based, and other IAM policy types to manage permissions for AWS services like Amazon S3 Glacier. It also outlines the IAM features supported by S3 Glacier, such as identity-based policies, resource-based policies, and temporary credentials.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What are session policies and how do they affect permissions?",
            "Which IAM features are supported by Amazon S3 Glacier?",
            "How does AWS evaluate permissions when multiple policy types apply?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "Session policies",
          "resource-based policies",
          "policy evaluation",
          "S3 Glacier",
          "identity-based policies",
          "IAM",
          "Policy actions",
          "ACLs",
          "temporary credentials",
          "ABAC",
          "explicit deny",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "IAM User Guide",
          "policy condition keys"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_266",
      "text": "These policies control what actions users and roles can\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide. With IAM identity-based policies, you can specify allowed or denied actions and resources as well\nas the conditions under which actions are allowed or denied. You can't specify the principal in an\nidentity-based policy because it applies to the user or role to which it is attached. To learn about all\nof the elements that you can use in a JSON policy, see IAM JSON policy elements reference in the\nIAM User Guide. Identity-based policy examples for S3 Glacier\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier. How Amazon S3 Glacier works with IAM API Version 2012-06-01 288\n\nAmazon S3 Glacier Developer Guide\nResource-based policies within S3 Glacier\nSupports resource-based policies: Yes\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4945045895046658,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "IAM",
            "identity-based policies",
            "resource-based policies",
            "JSON policy",
            "Amazon S3 Glacier",
            "conditions",
            "principal",
            "permissions",
            "actions",
            "resources"
          ],
          "entities": [
            "IAM User Guide",
            "Amazon S3 Glacier",
            "IAM JSON policy elements",
            "API Version 2012-06-01",
            "Amazon S3 bucket policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Policies",
          "secondary_categories": [
            "Identity-based Policies",
            "Resource-based Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM JSON Policy Elements"
          ]
        },
        "semantic": {
          "summary": "This documentation explains IAM policies for controlling actions, resources, and conditions, including identity-based and resource-based policies, with examples and references for Amazon S3 Glacier integration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an identity-based policy in IAM?",
            "What are examples of identity-based policies for Amazon S3 Glacier?",
            "What is the difference between identity-based and resource-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [IAM Policies]",
        "tf_idf_keywords": [
          "resources",
          "resource-based policies",
          "principal",
          "Amazon S3 bucket policies",
          "identity-based policies",
          "actions",
          "IAM",
          "IAM JSON policy elements",
          "API Version 2012-06-01",
          "permissions",
          "conditions",
          "Amazon S3 Glacier",
          "JSON policy",
          "IAM User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_267",
      "text": "You must specify a principal\nin a resource-based policy. Principals can include accounts, users, roles, federated users, or AWS\nservices. To enable cross-account access, you can specify an entire account or IAM entities in another\naccount as the principal in a resource-based policy. Adding a cross-account principal to a resource-\nbased policy is only half of establishing the trust relationship. When the principal and the resource\nare in different AWS accounts, an IAM administrator in the trusted account must also grant\nthe principal entity (user or role) permission to access the resource. They grant permission by\nattaching an identity-based policy to the entity. However, if a resource-based policy grants access\nto a principal in the same account, no additional identity-based policy is required. For more\ninformation, see Cross account resource access in IAM in the IAM User Guide. The S3 Glacier service supports only one type of resource-based policy called a vault policy, which\nis attached to a vault. This policy defines which principals can perform actions on the vault.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4657352023654514,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy",
              "Access Control"
            ]
          },
          "keywords": [
            "principal",
            "resource-based policy",
            "IAM",
            "cross-account access",
            "identity-based policy",
            "trust relationship",
            "S3 Glacier",
            "vault policy",
            "AWS accounts",
            "permissions"
          ],
          "entities": [
            "S3 Glacier",
            "IAM User Guide",
            "AWS services",
            "vault",
            "IAM administrator"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "IAM Policies",
            "Cross-Account Access"
          ],
          "mentioned_services": [
            "AWS IAM",
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to specify a principal in a resource-based policy, including cross-account access and the use of identity-based policies, with a specific mention of S3 Glacier vault policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I specify a principal in a resource-based policy?",
            "What is required to establish a trust relationship for cross-account access?",
            "What type of resource-based policy does S3 Glacier support?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Management]",
        "tf_idf_keywords": [
          "principal",
          "vault policy",
          "S3 Glacier",
          "identity-based policy",
          "AWS accounts",
          "IAM",
          "AWS services",
          "trust relationship",
          "IAM administrator",
          "cross-account access",
          "vault",
          "AWS IAM",
          "permissions",
          "resource-based policy",
          "IAM User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_268",
      "text": "S3 Glacier vault policies manage permissions in the following ways:\n\u2022 Manage user permissions in an account using a single vault policy, instead of more than one\nindividual user policies. \u2022 Manage cross-account permissions as an alternative to using IAM roles. Resource-based policy examples within S3 Glacier\nTo view examples of S3 Glacier resource-based policies, see Resource-based policy examples for\nAmazon S3 Glacier. Policy actions for S3 Glacier\nSupports policy actions: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 289\n\nAmazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions. The Action element of a JSON policy describes the actions that you can use to allow or deny\naccess in a policy. Policy actions usually have the same name as the associated AWS API operation. There are some exceptions, such as permission-only actions that don't have a matching API\noperation. There are also some operations that require multiple actions in a policy. These\nadditional actions are called dependent actions. Include actions in a policy to grant permissions to perform the associated operation. To see a list of S3 Glacier actions, see Actions defined by Amazon S3 Glacier in the Service\nAuthorization Reference. Policy actions in S3 Glacier use the following prefix before the action:\nglacier\nTo specify multiple actions in a single statement, separate them with commas. \"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all actions that begin\nwith the word Describe, include the following action:\n\"Action\": \"glacier:GetVault*\"\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier. Policy resources for S3 Glacier\nSupports policy resources: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 290\n\nAmazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 17,
        "num_words": 342,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41988686954273896,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Management",
              "Resource-based Policies",
              "Identity-based Policies"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault policies",
            "IAM roles",
            "JSON policies",
            "policy actions",
            "resource-based policies",
            "identity-based policies",
            "dependent actions",
            "wildcards",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS JSON policies",
            "Service Authorization Reference",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Policy Configuration",
            "Identity and Access Management (IAM)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS JSON Policies"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage permissions in Amazon S3 Glacier using vault policies and AWS JSON policies, detailing actions, resources, and examples of policy configurations for both identity-based and resource-based policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I manage permissions for S3 Glacier vaults using a single policy?",
            "What are the supported policy actions for Amazon S3 Glacier?",
            "How can I specify multiple actions in a single policy statement for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "vault policies",
          "resource-based policies",
          "AWS JSON policies",
          "S3 Glacier",
          "policy actions",
          "identity-based policies",
          "Service Authorization Reference",
          "dependent actions",
          "IAM",
          "JSON policies",
          "API Version 2012-06-01",
          "wildcards",
          "permissions",
          "AWS IAM",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_269",
      "text": "The Resource JSON policy element specifies the object or objects to which the action applies. Statements must include either a Resource or a NotResource element. As a best practice,\nspecify a resource using its Amazon Resource Name (ARN). You can do this for actions that support\na specific resource type, known as resource-level permissions. For actions that don't support resource-level permissions, such as listing operations, use a wildcard\n(*) to indicate that the statement applies to all resources. \"Resource\": \"*\"\nTo see a list of S3 Glacier resource types and their ARNs, see Resources defined by Amazon S3\nGlacier in the Service Authorization Reference. To learn which actions you can specify the ARN of\neach resource, see Actions defined by Amazon S3 Glacier. In S3 Glacier, the primary resource is a vault. S3 Glacier supports policies only at the vault level. That is, in an IAM policy, the Resource value that you specify can be a specific vault or a set of\nvaults in a specific AWS Region.",
      "start_idx": 467930,
      "end_idx": 470255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.378079096476237,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Best Practice",
              "Reference"
            ]
          },
          "keywords": [
            "Resource",
            "NotResource",
            "Amazon Resource Name",
            "ARN",
            "resource-level permissions",
            "wildcard",
            "S3 Glacier",
            "vault",
            "IAM policy",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ARN",
            "IAM policy",
            "AWS Region",
            "vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "IAM Policies",
          "secondary_categories": [
            "Resource-Level Permissions",
            "Amazon Resource Names (ARNs)"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The Resource JSON policy element defines the object(s) to which actions apply, using Amazon Resource Names (ARNs) for resource-level permissions or wildcards for actions without specific resource types. In Amazon S3 Glacier, policies are supported only at the vault level within a specific AWS Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the Resource JSON policy element?",
            "How can I specify resources in an IAM policy for S3 Glacier?",
            "What types of permissions does S3 Glacier support at the vault level?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Policies]",
        "tf_idf_keywords": [
          "IAM policy",
          "Amazon Resource Name",
          "NotResource",
          "resource-level permissions",
          "S3 Glacier",
          "AWS Region",
          "Resource",
          "wildcard",
          "vault",
          "Amazon S3 Glacier",
          "ARN"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_270",
      "text": "S3 Glacier doesn't support archive-level permissions. For all S3 Glacier actions, Resource specifies the vault on which you want to grant the\npermissions. These resources have unique Amazon Resource Names (ARNs) associated with them\nas shown in the following table, and you can use a wildcard character (*) in the ARN to match vault\nnames that start with the same prefix. S3 Glacier provides a set of operations to work with the S3 Glacier resources. For information on\nthe available operations, see API Reference for Amazon S3 Glacier. Some S3 Glacier API actions support multiple resources. For example, glacier:AddTagsToVault\naccesses examplevault1 and examplevault2, so a principal must have permissions to access both\nresources. To specify multiple resources in a single statement, separate the ARNs with commas. \"Resource\": [\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault1\",\",\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault2\",\"\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 291\n\nAmazon S3 Glacier Developer Guide\n]\nPolicy condition keys for S3 Glacier\nSupports service-specific policy condition keys: Yes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.",
      "start_idx": 467930,
      "end_idx": 470255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42617501152886283,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Permissions",
              "IAM Policies",
              "Resource Management"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive-level permissions",
            "Amazon Resource Names",
            "ARN",
            "wildcard character",
            "API actions",
            "IAM",
            "policy condition keys",
            "vaults",
            "AWS JSON policies"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ARN",
            "IAM",
            "API Reference for Amazon S3 Glacier",
            "AWS JSON policies"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "IAM Policies",
            "Resource Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS JSON Policies"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 Glacier does not support archive-level permissions but allows resource-level permissions for vaults using ARNs, including wildcard characters. Administrators can use AWS JSON policies to manage access control with service-specific policy condition keys.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I specify multiple S3 Glacier vaults in a single policy statement?",
            "What type of permissions does S3 Glacier support for vault resources?",
            "Can wildcard characters be used in S3 Glacier ARNs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Management]",
        "tf_idf_keywords": [
          "AWS JSON policies",
          "S3 Glacier",
          "API actions",
          "IAM",
          "wildcard character",
          "AWS IAM",
          "API Reference for Amazon S3 Glacier",
          "archive-level permissions",
          "Amazon S3 Glacier",
          "vaults",
          "Amazon Resource Names",
          "ARN",
          "policy condition keys"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_271",
      "text": "The Condition element (or Condition block) lets you specify conditions in which a statement\nis in effect. The Condition element is optional. You can create conditional expressions that use\ncondition operators, such as equals or less than, to match the condition in the policy with values in\nthe request. If you specify multiple Condition elements in a statement, or multiple keys in a single\nCondition element, AWS evaluates them using a logical AND operation. If you specify multiple\nvalues for a single condition key, AWS evaluates the condition using a logical OR operation. All of\nthe conditions must be met before the statement's permissions are granted. You can also use placeholder variables when you specify conditions. For example, you can grant\nan IAM user permission to access a resource only if it is tagged with their IAM user name. For more\ninformation, see IAM policy elements: variables and tags in the IAM User Guide. AWS supports global condition keys and service-specific condition keys. To see all AWS global\ncondition keys, see AWS global condition context keys in the IAM User Guide. To see a list of S3 Glacier condition keys, see Condition keys for Amazon S3 Glacier in the Service\nAuthorization Reference. To learn with which actions and resources you can use a condition key, see\nActions defined by Amazon S3 Glacier.",
      "start_idx": 470256,
      "end_idx": 473174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36245067302997297,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy",
              "Condition",
              "Logical Operations",
              "IAM"
            ]
          },
          "keywords": [
            "Condition element",
            "Condition block",
            "condition operators",
            "IAM user",
            "AWS global condition keys",
            "service-specific condition keys",
            "logical AND operation",
            "logical OR operation",
            "IAM policy",
            "placeholder variables"
          ],
          "entities": [
            "AWS",
            "IAM User Guide",
            "Amazon S3 Glacier",
            "Service Authorization Reference",
            "AWS global condition context keys"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Policy Conditions",
          "secondary_categories": [
            "Access Control",
            "Policy Evaluation"
          ],
          "mentioned_services": [
            "IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The Condition element in AWS policies allows specifying conditions under which a statement is in effect, using logical operators and condition keys. It supports global and service-specific condition keys and can utilize placeholder variables for dynamic permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How does the Condition element work in AWS policies?",
            "What logical operations are used when evaluating multiple Condition elements or keys?",
            "Where can I find a list of AWS global condition keys?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Policy Conditions]",
        "tf_idf_keywords": [
          "Service Authorization Reference",
          "IAM policy",
          "Condition block",
          "AWS",
          "AWS global condition context keys",
          "IAM",
          "condition operators",
          "logical OR operation",
          "AWS global condition keys",
          "IAM user",
          "service-specific condition keys",
          "placeholder variables",
          "Amazon S3 Glacier",
          "Condition element",
          "logical AND operation"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_272",
      "text": "For examples of using the glacier\u2013specific condition keys, see Vault Lock Policies. ACLs in S3 Glacier\nSupports ACLs: No\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format. How Amazon S3 Glacier works with IAM API Version 2012-06-01 292\n\nAmazon S3 Glacier Developer Guide\nABAC with S3 Glacier\nSupports ABAC (tags in policies): No\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions based\non attributes. In AWS, these attributes are called tags. You can attach tags to IAM entities (users or\nroles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then\nyou design ABAC policies to allow operations when the principal's tag matches the tag on the\nresource that they are trying to access. ABAC is helpful in environments that are growing rapidly and helps with situations where policy\nmanagement becomes cumbersome. To control access based on tags, you provide tag information in the condition element of a policy\nusing the aws:ResourceTag/key-name, aws:RequestTag/key-name, or aws:TagKeys\ncondition keys. If a service supports all three condition keys for every resource type, then the value is Yes for the\nservice. If a service supports all three condition keys for only some resource types, then the value is\nPartial. For more information about ABAC, see Define permissions with ABAC authorization in the IAM User\nGuide.",
      "start_idx": 470256,
      "end_idx": 473174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 246,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3285477467072316,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Access Control",
              "IAM Policies",
              "ABAC",
              "ACLs"
            ]
          },
          "keywords": [
            "Glacier-specific condition keys",
            "Vault Lock Policies",
            "Access control lists (ACLs)",
            "Amazon S3 Glacier",
            "IAM",
            "API Version 2012-06-01",
            "ABAC",
            "tags in policies",
            "aws:ResourceTag",
            "aws:RequestTag"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "Vault Lock Policies",
            "ABAC",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control",
          "secondary_categories": [
            "IAM Policies",
            "Tag-based Authorization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of condition keys in Amazon S3 Glacier, highlighting that it does not support ACLs or ABAC for access control. It provides an overview of ABAC and its use in designing policies based on tags to manage access permissions effectively.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the access control limitations of Amazon S3 Glacier?",
            "How does ABAC work with AWS services?",
            "What condition keys are used for tag-based access control in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control]",
        "tf_idf_keywords": [
          "tags in policies",
          "Access control lists (ACLs)",
          "AWS",
          "IAM",
          "Vault Lock Policies",
          "aws:ResourceTag",
          "API Version 2012-06-01",
          "ABAC",
          "Amazon S3 Glacier",
          "Glacier-specific condition keys",
          "aws:RequestTag"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_273",
      "text": "To view a tutorial with steps for setting up ABAC, see Use attribute-based access control\n(ABAC) in the IAM User Guide. Using temporary credentials with S3 Glacier\nSupports temporary credentials: Yes\nSome AWS services don't work when you sign in using temporary credentials. For additional\ninformation, including which AWS services work with temporary credentials, see AWS services that\nwork with IAM in the IAM User Guide. You are using temporary credentials if you sign in to the AWS Management Console using\nany method except a user name and password. For example, when you access AWS using your\ncompany's single sign-on (SSO) link, that process automatically creates temporary credentials. You\nalso automatically create temporary credentials when you sign in to the console as a user and then\nswitch roles. For more information about switching roles, see Switch from a user to an IAM role\n(console) in the IAM User Guide. How Amazon S3 Glacier works with IAM API Version 2012-06-01 293\n\nAmazon S3 Glacier Developer Guide\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can then use\nthose temporary credentials to access AWS. AWS recommends that you dynamically generate\ntemporary credentials instead of using long-term access keys.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5062185499403212,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Tutorial",
              "Guidance",
              "Information"
            ]
          },
          "keywords": [
            "ABAC",
            "IAM",
            "temporary credentials",
            "AWS Management Console",
            "single sign-on",
            "S3 Glacier",
            "IAM role",
            "AWS CLI",
            "AWS API",
            "access keys"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "AWS Management Console",
            "AWS CLI",
            "AWS API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control",
          "secondary_categories": [
            "IAM (Identity and Access Management)",
            "Temporary Credentials"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use attribute-based access control (ABAC) and temporary credentials in AWS, including their compatibility with services like S3 Glacier and methods for generating temporary credentials dynamically using AWS CLI or API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up attribute-based access control (ABAC) in AWS?",
            "Which AWS services work with temporary credentials?",
            "How can I manually create temporary credentials using the AWS CLI or API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "single sign-on",
          "AWS CLI",
          "IAM",
          "ABAC",
          "temporary credentials",
          "IAM role",
          "Amazon S3 Glacier",
          "access keys",
          "IAM User Guide",
          "AWS Management Console",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_274",
      "text": "For more information, see\nTemporary security credentials in IAM. Cross-service principal permissions for S3 Glacier\nSupports forward access sessions (FAS): No\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal. When you use some services, you might perform an action that then initiates another action in a\ndifferent service. FAS uses the permissions of the principal calling an AWS service, combined with\nthe requesting AWS service to make requests to downstream services. FAS requests are only made\nwhen a service receives a request that requires interactions with other AWS services or resources to\ncomplete. In this case, you must have permissions to perform both actions. For policy details when\nmaking FAS requests, see Forward access sessions. Service roles for S3 Glacier\nSupports service roles: No\nA service role is an IAM role that a service assumes to perform actions on your behalf. An IAM\nadministrator can create, modify, and delete a service role from within IAM. For more information,\nsee Creating a role to delegate permissions to an AWS service in the IAM User Guide.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37512711418999567,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM",
              "Permissions",
              "AWS Services"
            ]
          },
          "keywords": [
            "IAM",
            "Temporary security credentials",
            "Cross-service principal permissions",
            "Forward access sessions",
            "Service roles",
            "AWS services",
            "Principal",
            "Permissions",
            "Policy",
            "S3 Glacier"
          ],
          "entities": [
            "IAM",
            "S3 Glacier",
            "Forward access sessions",
            "Service roles",
            "AWS User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Permissions and Roles",
          "secondary_categories": [
            "AWS Service Interactions",
            "Security Credentials"
          ],
          "mentioned_services": [
            "IAM",
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of temporary security credentials, cross-service principal permissions, forward access sessions (FAS), and service roles in the context of AWS IAM and S3 Glacier. It provides details on permissions required for FAS and the creation of service roles in IAM.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are forward access sessions (FAS) and how do they work in AWS?",
            "Does S3 Glacier support service roles or forward access sessions?",
            "How can I create a service role in IAM for delegating permissions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM Permissions and Roles]",
        "tf_idf_keywords": [
          "AWS User Guide",
          "S3 Glacier",
          "Service roles",
          "Forward access sessions",
          "IAM",
          "AWS services",
          "Principal",
          "Cross-service principal permissions",
          "Temporary security credentials",
          "Policy",
          "Permissions"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_275",
      "text": "Warning\nChanging the permissions for a service role might break S3 Glacier functionality. Edit\nservice roles only when S3 Glacier provides guidance to do so. Service-linked roles for S3 Glacier\nSupports service-linked roles: No\nA service-linked role is a type of service role that is linked to an AWS service. The service can\nassume the role to perform an action on your behalf. Service-linked roles appear in your AWS\naccount and are owned by the service. An IAM administrator can view, but not edit the permissions\nfor service-linked roles. How Amazon S3 Glacier works with IAM API Version 2012-06-01 294\n\nAmazon S3 Glacier Developer Guide\nFor details about creating or managing service-linked roles, see AWS services that work with IAM. Find a service in the table that includes a Yes in the Service-linked role column. Choose the Yes\nlink to view the service-linked role documentation for that service. Identity-based policy examples for Amazon S3 Glacier\nBy default, users and roles don't have permission to create or modify S3 Glacier resources.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5127794477674696,
        "content": {
          "content_type": {
            "primary": "Warning",
            "subtypes": [
              "Conceptual",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "service role",
            "service-linked role",
            "IAM",
            "permissions",
            "AWS",
            "API Version 2012-06-01",
            "identity-based policy",
            "resources",
            "roles"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS services",
            "IAM administrator",
            "API Version 2012-06-01",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "AWS Service Roles",
            "S3 Glacier Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the implications of changing permissions for service roles in Amazon S3 Glacier, emphasizing that service-linked roles are not supported and providing guidance on managing roles and permissions with IAM.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the risks of changing permissions for a service role in Amazon S3 Glacier?",
            "Does Amazon S3 Glacier support service-linked roles?",
            "Where can I find documentation on creating or managing service-linked roles for AWS services?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Warning] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "resources",
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "AWS",
          "identity-based policy",
          "IAM",
          "AWS services",
          "IAM administrator",
          "API Version 2012-06-01",
          "permissions",
          "AWS IAM",
          "service-linked role",
          "service role",
          "Amazon S3 Glacier",
          "roles"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_276",
      "text": "They\nalso can't perform tasks by using the AWS Management Console, AWS Command Line Interface\n(AWS CLI), or AWS API. To grant users permission to perform actions on the resources that they\nneed, an IAM administrator can create IAM policies. The administrator can then add the IAM\npolicies to roles, and users can assume the roles. To learn how to create an IAM identity-based policy by using these example JSON policy\ndocuments, see Create IAM policies (console) in the IAM User Guide. For details about actions and resource types defined by S3 Glacier, including the format of the\nARNs for each of the resource types, see Actions, resources, and condition keys for Amazon S3\nGlacier in the Service Authorization Reference. The following is an example policy that grants permissions for three S3 Glacier vault-related\nactions (glacier:CreateVault, glacier:DescribeVault and glacier:ListVaults) on\na resource, using the Amazon Resource Name (ARN) that identifies all of the vaults in the us-\nwest-2 AWS Region. ARNs uniquely identify AWS resources. For more information about ARNs\nused with S3 Glacier, see Policy resources for S3 Glacier. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n],\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\"\n}\n]\n}\nIdentity-based policy examples API Version 2012-06-01 295\n\nAmazon S3 Glacier Developer Guide\nThe policy grants permissions to create, list, and obtain descriptions of vaults in the us-west-2\nRegion. The wildcard character (*) at the end of the ARN means that this statement can match any\nvault name.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 246,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4059257083468967,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "IAM policy",
              "JSON policy document",
              "S3 Glacier permissions"
            ]
          },
          "keywords": [
            "IAM policies",
            "AWS Management Console",
            "AWS CLI",
            "AWS API",
            "S3 Glacier",
            "Amazon Resource Name (ARN)",
            "vaults",
            "us-west-2 Region",
            "identity-based policy",
            "permissions"
          ],
          "entities": [
            "IAM",
            "AWS Management Console",
            "Amazon S3 Glacier",
            "ARN",
            "us-west-2 Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "IAM Policies",
          "secondary_categories": [
            "Access Management",
            "Resource Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create IAM policies for granting permissions to perform specific actions on Amazon S3 Glacier resources, including an example policy for managing vaults in the us-west-2 region using ARNs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create an IAM policy to manage S3 Glacier vaults?",
            "What actions can be performed on S3 Glacier vaults using IAM policies?",
            "What is the format of an ARN for S3 Glacier resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [IAM Policies]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS CLI",
          "identity-based policy",
          "IAM",
          "us-west-2 Region",
          "AWS IAM",
          "permissions",
          "IAM policies",
          "Amazon Resource Name (ARN)",
          "vaults",
          "Amazon S3 Glacier",
          "ARN",
          "AWS Management Console",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_277",
      "text": "Important\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) because you don't know the vault name\nuntil after you create the vault. Topics\n\u2022 Policy best practices\n\u2022 Using the S3 Glacier console\n\u2022 Allow users to view their own permissions\n\u2022 Customer Managed Policy Examples\nPolicy best practices\nIdentity-based policies determine whether someone can create, access, or delete S3 Glacier\nresources in your account. These actions can incur costs for your AWS account. When you create or\nedit identity-based policies, follow these guidelines and recommendations:\n\u2022 Get started with AWS managed policies and move toward least-privilege permissions \u2013 To\nget started granting permissions to your users and workloads, use the AWS managed policies\nthat grant permissions for many common use cases. They are available in your AWS account. We\nrecommend that you reduce permissions further by defining AWS customer managed policies\nthat are specific to your use cases. For more information, see AWS managed policies or AWS\nmanaged policies for job functions in the IAM User Guide. \u2022 Apply least-privilege permissions \u2013 When you set permissions with IAM policies, grant only the\npermissions required to perform a task. You do this by defining the actions that can be taken on\nspecific resources under specific conditions, also known as least-privilege permissions. For more\ninformation about using IAM to apply permissions, see Policies and permissions in IAM in the\nIAM User Guide.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 242,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4171532524956597,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Best Practices",
              "Permissions",
              "Policy Guidelines"
            ]
          },
          "keywords": [
            "vault",
            "glacier:CreateVault",
            "wildcard character",
            "identity-based policies",
            "least-privilege permissions",
            "AWS managed policies",
            "IAM policies",
            "S3 Glacier",
            "permissions",
            "resources"
          ],
          "entities": [
            "AWS",
            "S3 Glacier",
            "IAM User Guide",
            "AWS managed policies",
            "glacier:CreateVault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Policy Management",
            "IAM Permissions"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage permissions for creating and accessing S3 Glacier resources, emphasizing least-privilege principles and the use of AWS managed policies. It provides best practices for defining identity-based policies to minimize costs and enhance security.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up permissions for creating an S3 Glacier vault?",
            "What are the best practices for defining identity-based policies in AWS?",
            "What is the importance of least-privilege permissions in AWS IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Management]",
        "tf_idf_keywords": [
          "resources",
          "least-privilege permissions",
          "S3 Glacier",
          "identity-based policies",
          "AWS",
          "IAM",
          "wildcard character",
          "glacier:CreateVault",
          "vault",
          "AWS managed policies",
          "permissions",
          "IAM policies",
          "IAM User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_278",
      "text": "\u2022 Use conditions in IAM policies to further restrict access \u2013 You can add a condition to your\npolicies to limit access to actions and resources. For example, you can write a policy condition to\nIdentity-based policy examples API Version 2012-06-01 296\n\nAmazon S3 Glacier Developer Guide\nspecify that all requests must be sent using SSL. You can also use conditions to grant access to\nservice actions if they are used through a specific AWS service, such as AWS CloudFormation. For\nmore information, see IAM JSON policy elements: Condition in the IAM User Guide. \u2022 Use IAM Access Analyzer to validate your IAM policies to ensure secure and functional\npermissions \u2013 IAM Access Analyzer validates new and existing policies so that the policies\nadhere to the IAM policy language (JSON) and IAM best practices. IAM Access Analyzer provides\nmore than 100 policy checks and actionable recommendations to help you author secure and\nfunctional policies. For more information, see Validate policies with IAM Access Analyzer in the\nIAM User Guide. \u2022 Require multi-factor authentication (MFA) \u2013 If you have a scenario that requires IAM users or\na root user in your AWS account, turn on MFA for additional security. To require MFA when API\noperations are called, add MFA conditions to your policies. For more information, see Secure API\naccess with MFA in the IAM User Guide.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 226,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5040521409776476,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Security",
              "IAM Policies",
              "Access Control"
            ]
          },
          "keywords": [
            "IAM policies",
            "conditions",
            "SSL",
            "IAM Access Analyzer",
            "multi-factor authentication",
            "MFA",
            "policy validation",
            "JSON policy elements",
            "permissions",
            "AWS CloudFormation"
          ],
          "entities": [
            "IAM Access Analyzer",
            "Amazon S3 Glacier",
            "AWS CloudFormation",
            "IAM User Guide",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Policy Management",
          "secondary_categories": [
            "Security Best Practices",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudFormation",
            "IAM Access Analyzer"
          ],
          "mentioned_tools": [
            "IAM JSON Policy Elements",
            "IAM Access Analyzer"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enhance security in AWS IAM policies by using conditions, validating policies with IAM Access Analyzer, and enforcing multi-factor authentication (MFA). It includes examples and references to IAM User Guide for further details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use conditions in IAM policies to restrict access?",
            "What is IAM Access Analyzer and how does it validate policies?",
            "How do I enforce multi-factor authentication (MFA) for API operations in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [IAM Policy Management]",
        "tf_idf_keywords": [
          "JSON policy elements",
          "AWS",
          "IAM Access Analyzer",
          "MFA",
          "policy validation",
          "SSL",
          "multi-factor authentication",
          "permissions",
          "conditions",
          "IAM policies",
          "Amazon S3 Glacier",
          "AWS CloudFormation",
          "IAM User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_279",
      "text": "For more information about best practices in IAM, see Security best practices in IAM in the IAM User\nGuide. Using the S3 Glacier console\nTo access the Amazon S3 Glacier console, you must have a minimum set of permissions. These\npermissions must allow you to list and view details about the S3 Glacier resources in your AWS\naccount. If you create an identity-based policy that is more restrictive than the minimum required\npermissions, the console won't function as intended for entities (users or roles) with that policy. You don't need to allow minimum console permissions for users that are making calls only to the\nAWS CLI or the AWS API. Instead, allow access to only the actions that match the API operation\nthat they're trying to perform. The S3 Glacier console provides an integrated environment for you to create and manage S3\nGlacier vaults. At a minimum IAM identities that you create must be granted permissions for the\nglacier:ListVaults action to view the S3 Glacier console as shown in the following example. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Action\": [\nIdentity-based policy examples API Version 2012-06-01 297\n\nAmazon S3 Glacier Developer Guide\n\"glacier:ListVaults\"\n],\n\"Effect\": \"Allow\",\n\"Resource\": \"*\"\n}\n]\n}\nAWS addresses many common use cases by providing standalone IAM policies that are created\nand administered by AWS. Managed policies grant necessary permissions for common use cases so\nyou can avoid having to investigate what permissions are needed.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 239,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39457715352376305,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "IAM Policies",
              "AWS Console",
              "Code Example"
            ]
          },
          "keywords": [
            "IAM",
            "S3 Glacier",
            "permissions",
            "identity-based policy",
            "AWS CLI",
            "AWS API",
            "glacier:ListVaults",
            "IAM User Guide",
            "managed policies",
            "AWS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS CLI",
            "AWS API",
            "glacier:ListVaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Storage",
            "Access Control Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the minimum IAM permissions required to access and manage S3 Glacier resources via the console, and provides an example policy for granting such permissions. It also highlights the use of AWS-managed IAM policies for common use cases.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the minimum IAM permissions required to use the S3 Glacier console?",
            "How can I create an identity-based policy for accessing S3 Glacier resources?",
            "What is the purpose of AWS-managed IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "glacier:ListVaults",
          "AWS",
          "AWS CLI",
          "identity-based policy",
          "IAM",
          "AWS IAM",
          "permissions",
          "Amazon S3 Glacier",
          "managed policies",
          "IAM User Guide",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_280",
      "text": "For more information, see AWS\nManaged Policies in the IAM User Guide. The following AWS managed policies, which you can attach to users in your account, are specific to\nS3 Glacier:\n\u2022 AmazonGlacierReadOnlyAccess \u2013 Grants read only access to S3 Glacier through the AWS\nManagement Console. \u2022 AmazonGlacierFullAccess \u2013 Grants full access to S3 Glacier through the AWS Management\nConsole. You can also create your own custom IAM policies to allow permissions for S3 Glacier API actions\nand resources. You can attach these custom policies to the custom IAM roles that you create for\nyour S3 Glacier vaults. Both of the S3 Glacier AWS Managed policies discussed in the next section grant permissions for\nglacier:ListVaults. For more information, see Adding permissions to a user in the IAM User Guide. Allow users to view their own permissions\nThis example shows how you might create a policy that allows IAM users to view the inline and\nmanaged policies that are attached to their user identity. This policy includes permissions to\ncomplete this action on the console or programmatically using the AWS CLI or AWS API. {\nIdentity-based policy examples API Version 2012-06-01 298\n\nAmazon S3 Glacier Developer Guide\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ViewOwnUserInfo\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetUserPolicy\",\n\"iam:ListGroupsForUser\",\n\"iam:ListAttachedUserPolicies\",\n\"iam:ListUserPolicies\",\n\"iam:GetUser\"\n],\n\"Resource\": [\"arn:aws:iam::*:user/${aws:username}\"]\n},\n{\n\"Sid\": \"NavigateInConsole\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetGroupPolicy\",\n\"iam:GetPolicyVersion\",\n\"iam:GetPolicy\",\n\"iam:ListAttachedGroupPolicies\",\n\"iam:ListGroupPolicies\",\n\"iam:ListPolicyVersions\",\n\"iam:ListPolicies\",\n\"iam:ListUsers\"\n],\n\"Resource\": \"*\"\n}\n]\n}\nCustomer Managed Policy Examples\nIn this section, you can find example user policies that grant permissions for various S3 Glacier\nactions.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 258,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5843570709228516,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "IAM Policies",
              "Permissions",
              "S3 Glacier"
            ]
          },
          "keywords": [
            "AWS Managed Policies",
            "IAM User Guide",
            "S3 Glacier",
            "AmazonGlacierReadOnlyAccess",
            "AmazonGlacierFullAccess",
            "IAM policies",
            "glacier:ListVaults",
            "AWS CLI",
            "AWS API",
            "Identity-based policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "AmazonGlacierReadOnlyAccess",
            "AmazonGlacierFullAccess",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "IAM Policies",
          "secondary_categories": [
            "Access Management",
            "S3 Glacier Permissions"
          ],
          "mentioned_services": [
            "AWS IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains AWS managed and custom IAM policies for S3 Glacier, including examples of policies for granting read-only or full access, and how to allow users to view their own permissions. It also provides example user policies for S3 Glacier actions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the AWS managed policies specific to S3 Glacier?",
            "How can I create a custom IAM policy for S3 Glacier?",
            "How can IAM users view their own permissions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [IAM Policies]",
        "tf_idf_keywords": [
          "AmazonGlacierReadOnlyAccess",
          "S3 Glacier",
          "Identity-based policy",
          "glacier:ListVaults",
          "AWS CLI",
          "AmazonGlacierFullAccess",
          "AWS Managed Policies",
          "AWS IAM",
          "IAM policies",
          "Amazon S3 Glacier",
          "IAM User Guide",
          "AWS API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_281",
      "text": "These policies work when you are using S3 Glacier REST API, the Amazon SDKs, the AWS\nCLI, or, if applicable, the S3 Glacier management console. Note\nAll examples use the US West (Oregon) Region (us-west-2) and contain fictitious account\nIDs. Identity-based policy examples API Version 2012-06-01 299\n\nAmazon S3 Glacier Developer Guide\nExamples\n\u2022 Example 1: Allow a User to Download Archives from a Vault\n\u2022 Example 2: Allow a User to Create a Vault and Configure Notifications\n\u2022 Example 3: Allow a User to Upload Archives to a Specific Vault\n\u2022 Example 4: Allow a User Full Permissions on a Specific Vault\nExample 1: Allow a User to Download Archives from a Vault\nTo download an archive, you first initiate a job to retrieve the archive. After the retrieval job\nis complete, you can download the data. The following example policy grants permissions\nfor the glacier:InitiateJob action to initiate a job (which allows the user to retrieve an\narchive or a vault inventory from the vault), and permissions for the glacier:GetJobOutput\naction to download the retrieved data. The policy also grants permissions to perform the\nglacier:DescribeJob action so that the user can get the job status. For more information, see\nInitiate Job (POST jobs). The policy grants these permissions on a vault named examplevault. You can get the vault ARN\nfrom the Amazon S3 Glacier console, or programmatically by calling either the Describe Vault (GET\nvault) or the List Vaults (GET vaults) API actions. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:InitiateJob\",\n\"glacier:GetJobOutput\",\n\"glacier:DescribeJob\"]\n}\n]\n}\nExample 2: Allow a User to Create a Vault and Configure Notifications\nThe following example policy grants permissions to create a vault in the us-west-2 Region as\nspecified in the Resource element and configure notifications.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 296,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36016345553927953,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy",
              "Permissions",
              "AWS S3 Glacier"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "policy",
            "permissions",
            "InitiateJob",
            "GetJobOutput",
            "DescribeJob",
            "ARN",
            "notifications",
            "Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "us-west-2",
            "examplevault",
            "123456789012",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "AWS Identity and Access Management (IAM)",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SDKs"
          ],
          "mentioned_tools": [
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides example identity-based policies for Amazon S3 Glacier, including actions for downloading archives, creating vaults, and configuring notifications using the AWS CLI, SDKs, or REST API in the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can a user download archives from a specific vault in Amazon S3 Glacier?",
            "What permissions are required to create a vault and configure notifications in Amazon S3 Glacier?",
            "What actions are included in the example policy for retrieving archive data from a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Access Control Policies]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "policy",
          "examplevault",
          "AWS CLI",
          "DescribeJob",
          "123456789012",
          "GetJobOutput",
          "vault",
          "permissions",
          "Region",
          "Amazon S3 Glacier",
          "us-west-2",
          "InitiateJob",
          "notifications",
          "ARN"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_282",
      "text": "For more information about\nIdentity-based policy examples API Version 2012-06-01 300\n\nAmazon S3 Glacier Developer Guide\nworking with notifications, see Configuring Vault Notifications in Amazon S3 Glacier. The policy\nalso grants permissions to list vaults in the AWS Region and get a specific vault description. Important\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) in the Resource value because you\ndon't know the vault name until after you create the vault. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\",\n\"Action\":[\"glacier:CreateVault\",\n\"glacier:SetVaultNotifications\",\n\"glacier:GetVaultNotifications\",\n\"glacier:DeleteVaultNotifications\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"]\n}\n]\n}\nExample 3: Allow a User to Upload Archives to a Specific Vault\nThe following example policy grants permissions to upload archives to a specific vault in the\nus-west-2 Region. These permissions allow a user to upload an archive all at once using the\nUpload Archive (POST archive) API operation or in parts using the Initiate Multipart Upload (POST\nmultipart-uploads) API operation. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\nIdentity-based policy examples API Version 2012-06-01 301\n\nAmazon S3 Glacier Developer Guide\n\"Action\":[\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:UploadMultipartPart\",\n\"glacier:ListParts\",\n\"glacier:ListMultipartUploads\",\n\"glacier:CompleteMultipartUpload\"]\n}\n]\n}\nExample 4: Allow a User Full Permissions on a Specific Vault\nThe following example policy grants permissions for all S3 Glacier actions on a vault named\nexamplevault. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:*\"]\n}\n]\n}\nResource-based policy examples for Amazon S3 Glacier\nA S3 Glacier vault can have one vault access policy and one Vault Lock policy associated with it. A Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault. A Vault Lock policy is vault access policy that can be locked. After you\nlock a Vault Lock policy, the policy can't be changed.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 303,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5506034003363716,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Examples",
              "API Operations",
              "Permissions",
              "Vault Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "policy",
            "permissions",
            "glacier:CreateVault",
            "vault access policy",
            "Vault Lock policy",
            "multipart upload",
            "API operation",
            "resource-based policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "glacier:CreateVault",
            "Vault Lock policy",
            "arn:aws:glacier",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM) Policies",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Resource-based Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of identity-based and resource-based policies for Amazon S3 Glacier, including permissions for creating, managing, and locking vaults, as well as uploading archives and granting full access to specific vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure permissions to create or manage an Amazon S3 Glacier vault?",
            "What actions can be performed on a specific vault using identity-based policies?",
            "What is the difference between a vault access policy and a Vault Lock policy in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Identity and Access Management (IAM) Policies]",
        "tf_idf_keywords": [
          "policy",
          "examplevault",
          "vault access policy",
          "glacier:CreateVault",
          "arn:aws:glacier",
          "vault",
          "Vault Lock policy",
          "API operation",
          "AWS IAM",
          "permissions",
          "Amazon S3 Glacier",
          "resource-based policy",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_283",
      "text": "You can use a Vault Lock Policy to enforce\ncompliance controls. Topics\n\u2022 Vault Access Policies\n\u2022 Vault Lock Policies\nResource-based policy examples API Version 2012-06-01 302\n\nAmazon S3 Glacier Developer Guide\nVault Access Policies\nAn Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault. You can create one vault access policy for each vault to manage permissions. You can modify\npermissions in a vault access policy at any time. S3 Glacier also supports a Vault Lock policy on\neach vault that, after you lock it, cannot be altered. For more information about working with Vault\nLock policies, see Vault Lock Policies. Examples\n\u2022 Example 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\n\u2022 Example 2: Grant Cross-Account Permissions for MFA Delete Operations\nExample 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\nThe following example policy grants cross-account permissions to two AWS accounts for a set of S3\nGlacier operations on a vault named examplevault. Note\nThe account that owns the vault is billed for all costs associated with the vault. All requests,\ndata transfer, and retrieval costs made by allowed external accounts are billed to the\naccount that owns the vault. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\":\"cross-account-upload\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\",\n\"arn:aws:iam::444455556666:root\"\n]\n},\n\"Effect\":\"Allow\",\n\"Action\": [\nResource-based policy examples API Version 2012-06-01 303\n\nAmazon S3 Glacier Developer Guide\n\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:AbortMultipartUpload\",\n\"glacier:CompleteMultipartUpload\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n]\n}\n]\n}\nExample 2: Grant Cross-Account Permissions for MFA Delete Operations\nYou can use multi-factor authentication (MFA) to protect your S3 Glacier resources.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 268,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5325771331787109,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "Example",
              "Permissions"
            ]
          },
          "keywords": [
            "Vault Lock Policy",
            "Vault Access Policy",
            "Amazon S3 Glacier",
            "Cross-Account Permissions",
            "MFA Delete Operations",
            "Resource-based policy",
            "glacier:UploadArchive",
            "IAM",
            "API Version 2012-06-01",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock Policy",
            "Vault Access Policy",
            "MFA Delete",
            "IAM Principal"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "Compliance Controls",
            "Cross-Account Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Vault Lock Policy",
            "Vault Access Policy"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 Glacier Vault Access and Vault Lock Policies to manage permissions and enforce compliance controls, including examples of cross-account permissions and MFA delete operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create and manage a Vault Access Policy in Amazon S3 Glacier?",
            "What is an example of granting cross-account permissions for specific S3 Glacier actions?",
            "How does MFA protect S3 Glacier resources and enable delete operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control Policies]",
        "tf_idf_keywords": [
          "Vault Lock Policy",
          "IAM",
          "Cross-Account Permissions",
          "IAM Principal",
          "vault",
          "Resource-based policy",
          "API Version 2012-06-01",
          "MFA Delete Operations",
          "glacier:UploadArchive",
          "Amazon S3 Glacier",
          "Vault Access Policy",
          "MFA Delete"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_284",
      "text": "To provide\nan extra level of security, MFA requires users to prove physical possession of an MFA device by\nproviding a valid MFA code. For more information about configuring MFA access, see Configuring\nMFA-Protected API Access in the IAM User Guide. The example policy grants an AWS account with temporary credentials permission to delete\narchives from a vault named examplevault, provided the request is authenticated with an MFA\ndevice. The policy uses the aws:MultiFactorAuthPresent condition key to specify this\nadditional requirement. For more information, see Available Keys for Conditions in the IAM User\nGuide. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"add-mfa-delete-requirement\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\"\n]\n},\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:Delete*\"\n],\nResource-based policy examples API Version 2012-06-01 304\n\nAmazon S3 Glacier Developer Guide\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/\nexamplevault\"\n],\n\"Condition\": {\n\"Bool\": {\n\"aws:MultiFactorAuthPresent\": true\n}\n}\n}\n]\n}\nVault Lock Policies\nAn Amazon S3 Glacier (S3 Glacier) vault can have one resource-based vault access policy and one\nVault Lock policy attached to it. A Vault Lock policy is a vault access policy that you can lock. Using\na Vault Lock policy can help you enforce regulatory and compliance requirements. Amazon S3\nGlacier provides a set of API operations for you to manage the Vault Lock policies, see Locking a\nVault by Using the S3 Glacier API. As an example of a Vault Lock policy, suppose that you are required to retain archives for one\nyear before you can delete them.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 245,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43419121636284724,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Security",
              "Policy",
              "Condition",
              "Compliance"
            ]
          },
          "keywords": [
            "MFA",
            "IAM",
            "aws:MultiFactorAuthPresent",
            "Vault Lock",
            "S3 Glacier",
            "API operations",
            "resource-based policy",
            "temporary credentials",
            "compliance requirements",
            "archives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "IAM User Guide",
            "examplevault",
            "Vault Lock policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Security Policies",
            "Regulatory Compliance"
          ],
          "mentioned_services": [
            "IAM",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to use Multi-Factor Authentication (MFA) for securing API requests and configuring resource-based policies in Amazon S3 Glacier, including Vault Lock policies for compliance and retention purposes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure MFA-protected API access in AWS?",
            "What is the purpose of the aws:MultiFactorAuthPresent condition key?",
            "How can I enforce compliance using Vault Lock policies in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "resource-based policy",
          "archives",
          "S3 Glacier",
          "examplevault",
          "AWS",
          "IAM",
          "MFA",
          "Vault Lock",
          "IAM User Guide",
          "Vault Lock policy",
          "temporary credentials",
          "Amazon S3 Glacier",
          "aws:MultiFactorAuthPresent",
          "API operations",
          "compliance requirements"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_285",
      "text": "To implement this requirement, you can create a Vault Lock\npolicy that denies users permissions to delete an archive until the archive has existed for one\nyear. You can test this policy before locking it down. After you lock the policy, the policy becomes\nimmutable. For more information about the locking process, see Vault Lock Policies. If you want to\nmanage other user permissions that can be changed, you can use the vault access policy (see Vault\nAccess Policies). You can use the S3 Glacier API, Amazon SDKs, AWS CLI, or the S3 Glacier console to create and\nmanage Vault Lock policies. For a list of S3 Glacier actions allowed for vault resource-based\npolicies, see API Permissions Reference. Examples\n\u2022 Example 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\n\u2022 Example 2: Deny Deletion Permissions Based on a Tag\nResource-based policy examples API Version 2012-06-01 305\n\nAmazon S3 Glacier Developer Guide\nExample 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\nSuppose that you have a regulatory requirement to retain archives for up to one year before you\ncan delete them. You can enforce that requirement by implementing the following Vault Lock\npolicy. The policy denies the glacier:DeleteArchive action on the examplevault vault if the\narchive being deleted is less than one year old.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 219,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4916849348280165,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Policy Implementation",
              "Regulatory Compliance"
            ]
          },
          "keywords": [
            "Vault Lock",
            "policy",
            "archive",
            "S3 Glacier",
            "permissions",
            "API",
            "AWS CLI",
            "Amazon SDKs",
            "Vault Access Policies",
            "DeleteArchive"
          ],
          "entities": [
            "Vault Lock Policies",
            "Vault Access Policies",
            "S3 Glacier API",
            "Amazon S3 Glacier",
            "API Permissions Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "Data Retention",
            "API Management"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "AWS CLI",
            "Amazon SDKs"
          ],
          "mentioned_tools": [
            "S3 Glacier API",
            "S3 Glacier Console",
            "Vault Lock Policies"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to implement a Vault Lock policy in Amazon S3 Glacier to prevent archive deletion for up to one year, and provides examples and tools for managing such policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a Vault Lock policy to enforce a one-year archive retention requirement?",
            "What tools can I use to manage Vault Lock policies in Amazon S3 Glacier?",
            "What is an example of a Vault Lock policy that denies deletion permissions based on archive age?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Access Control Policies]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "policy",
          "archive",
          "AWS CLI",
          "Vault Lock",
          "Vault Lock Policies",
          "S3 Glacier API",
          "permissions",
          "API",
          "API Permissions Reference",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "Vault Access Policies",
          "Amazon SDKs"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_286",
      "text": "The policy uses the S3 Glacier-specific condition key\nArchiveAgeInDays to enforce the one-year retention requirement. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\": \"deny-based-on-archive-age\",\n\"Principal\": \"*\",\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThan\" : {\n\"glacier:ArchiveAgeInDays\" : \"365\"\n}\n}\n}\n]\n}\nExample 2: Deny Deletion Permissions Based on a Tag\nSuppose that you have a time-based retention rule that an archive can be deleted if it is less than a\nyear old. At the same time, suppose that you need to place a legal hold on your archives to prevent\ndeletion or modification for an indefinite duration during a legal investigation. In this case, the\nlegal hold takes precedence over the time-based retention rule specified in the Vault Lock policy. To put these two rules in place, the following example policy has two statements:\n\u2022 The first statement denies deletion permissions for everyone, locking the vault. This lock is\nperformed by using the LegalHold tag. Resource-based policy examples API Version 2012-06-01 306\n\nAmazon S3 Glacier Developer Guide\n\u2022 The second statement grants deletion permissions when the archive is less than 365 days old. But even when archives are less than 365 days old, no one can delete them when the condition\nin the first statement is met. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\": \"lock-vault\",\n\"Principal\": \"*\",\n\"Effect\": \"Deny\",\n\"Action\": [\n\"glacier:DeleteArchive\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"StringLike\": {\n\"glacier:ResourceTag/LegalHold\": [\n\"true\",\n\"\"\n]\n}\n}\n},\n{\n\"Sid\": \"you-can-delete-archive-less-than-1-year-old\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::123456789012:root\"\n},\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:DeleteArchive\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThan\": {\n\"glacier:ArchiveAgeInDays\": \"365\"\nResource-based policy examples API Version 2012-06-01 307\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\n]\n}\nTroubleshooting Amazon S3 Glacier identity and access\nUse the following information to help you diagnose and fix common issues that you might\nencounter when working with S3 Glacier and IAM. Topics\n\u2022 I am not authorized to perform an action in S3 Glacier\n\u2022 I am not authorized to perform iam:PassRole\n\u2022 I want to allow people outside of my AWS account to access my S3 Glacier resources\nI am not authorized to perform an action in S3 Glacier\nIf you receive an error that you're not authorized to perform an action, your policies must be\nupdated to allow you to perform the action.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 385,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42607782151963974,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "IAM",
              "Condition",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "ArchiveAgeInDays",
            "LegalHold",
            "Vault Lock",
            "IAM",
            "Resource-based policy",
            "DeleteArchive",
            "Condition key",
            "Retention",
            "Principal"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "glacier:ArchiveAgeInDays",
            "arn:aws:glacier:us-west-2:123456789012:vaults/examplevault",
            "LegalHold tag",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "IAM Troubleshooting",
            "Data Retention Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of resource-based policies for Amazon S3 Glacier to enforce retention rules and legal holds, along with troubleshooting steps for common IAM authorization issues.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I enforce a one-year retention requirement in S3 Glacier?",
            "How do I implement a legal hold to prevent deletion or modification of archives?",
            "What should I do if I'm not authorized to perform an action in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control Policies]",
        "tf_idf_keywords": [
          "LegalHold tag",
          "S3 Glacier",
          "Retention",
          "Condition key",
          "LegalHold",
          "IAM",
          "Vault Lock",
          "Principal",
          "Resource-based policy",
          "ArchiveAgeInDays",
          "arn:aws:glacier:us-west-2:123456789012:vaults/examplevault",
          "AWS IAM",
          "Amazon S3 Glacier",
          "glacier:ArchiveAgeInDays",
          "DeleteArchive"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_287",
      "text": "The following example error occurs when the mateojackson IAM user tries to use the console\nto view details about a fictional my-example-widget resource but doesn't have the fictional\nglacier:GetWidget permissions. User: arn:aws:iam::123456789012:user/mateojackson is not authorized to perform:\nglacier:GetWidget on resource: my-example-widget\nIn this case, the policy for the mateojackson user must be updated to allow access to the my-\nexample-widget resource by using the glacier:GetWidget action. If you need help, contact your AWS administrator. Your administrator is the person who provided\nyou with your sign-in credentials. I am not authorized to perform iam:PassRole\nIf you receive an error that you're not authorized to perform the iam:PassRole action, your\npolicies must be updated to allow you to pass a role to S3 Glacier. Troubleshooting API Version 2012-06-01 308\n\nAmazon S3 Glacier Developer Guide\nSome AWS services allow you to pass an existing role to that service instead of creating a new\nservice role or service-linked role. To do this, you must have permissions to pass the role to the\nservice. The following example error occurs when an IAM user named marymajor tries to use the console\nto perform an action in S3 Glacier. However, the action requires the service to have permissions\nthat are granted by a service role. Mary does not have permissions to pass the role to the service. User: arn:aws:iam::123456789012:user/marymajor is not authorized to perform:\niam:PassRole\nIn this case, Mary's policies must be updated to allow her to perform the iam:PassRole action. If you need help, contact your AWS administrator.",
      "start_idx": 496513,
      "end_idx": 498153,
      "metadata": {
        "num_sentences": 12,
        "num_words": 252,
        "breakpoint_idx": 2978,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3909401749119614,
        "content": {
          "content_type": {
            "primary": "Warning",
            "subtypes": [
              "Error",
              "Troubleshooting",
              "Permissions"
            ]
          },
          "keywords": [
            "IAM user",
            "glacier:GetWidget",
            "iam:PassRole",
            "permissions",
            "AWS administrator",
            "service role",
            "S3 Glacier",
            "policy",
            "credentials",
            "API Version 2012-06-01"
          ],
          "entities": [
            "mateojackson",
            "marymajor",
            "arn:aws:iam::123456789012:user/mateojackson",
            "arn:aws:iam::123456789012:user/marymajor",
            "Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM Permissions",
          "secondary_categories": [
            "Policy Management",
            "Error Troubleshooting"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to troubleshoot permission errors in AWS, such as insufficient permissions for actions like glacier:GetWidget and iam:PassRole, and how to resolve them by updating IAM user policies or contacting an AWS administrator.",
          "intents": [
            "Debug",
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I resolve the 'not authorized to perform glacier:GetWidget' error?",
            "What should I do if I receive an 'iam:PassRole' permission error?",
            "Who should I contact if I need help with AWS permissions issues?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Warning] [IAM Permissions]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "policy",
          "arn:aws:iam::123456789012:user/mateojackson",
          "glacier:GetWidget",
          "AWS administrator",
          "arn:aws:iam::123456789012:user/marymajor",
          "credentials",
          "IAM user",
          "permissions",
          "API Version 2012-06-01",
          "iam:PassRole",
          "service role",
          "mateojackson",
          "Amazon S3 Glacier",
          "AWS IAM"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_288",
      "text": "Your administrator is the person who provided\nyou with your sign-in credentials. I want to allow people outside of my AWS account to access my S3 Glacier\nresources\nYou can create a role that users in other accounts or people outside of your organization can use to\naccess your resources. You can specify who is trusted to assume the role. For services that support\nresource-based policies or access control lists (ACLs), you can use those policies to grant people\naccess to your resources. To learn more, consult the following:\n\u2022 To learn whether S3 Glacier supports these features, see How Amazon S3 Glacier works with IAM. \u2022 To learn how to provide access to your resources across AWS accounts that you own, see\nProviding access to an IAM user in another AWS account that you own in the IAM User Guide. \u2022 To learn how to provide access to your resources to third-party AWS accounts, see Providing\naccess to AWS accounts owned by third parties in the IAM User Guide. \u2022 To learn how to provide access through identity federation, see Providing access to externally\nauthenticated users (identity federation) in the IAM User Guide. \u2022 To learn the difference between using roles and resource-based policies for cross-account access,\nsee Cross account resource access in IAM in the IAM User Guide. Troubleshooting API Version 2012-06-01 309\n\nAmazon S3 Glacier Developer Guide\nAPI Permissions Reference\nWhen you are setting up How Amazon S3 Glacier works with IAM and writing a permissions policy\nthat you can attach to an IAM identity (identity-based policies) or a resource (resource-based\npolicies), you can use the following table as a reference.",
      "start_idx": 498154,
      "end_idx": 500804,
      "metadata": {
        "num_sentences": 10,
        "num_words": 274,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4508933597140842,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Cross-account Access",
              "IAM Policies",
              "Identity Federation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "IAM",
            "roles",
            "resource-based policies",
            "access control lists (ACLs)",
            "identity federation",
            "permissions policy",
            "cross-account access",
            "third-party AWS accounts",
            "API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "API Version 2012-06-01",
            "AWS accounts",
            "identity-based policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cross-Account Access",
            "Identity Federation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to grant access to Amazon S3 Glacier resources across AWS accounts or to third parties using roles, resource-based policies, or identity federation. It includes references to IAM User Guide sections for detailed guidance and troubleshooting API permissions.",
          "intents": [
            "How-To",
            "Reference",
            "Compare",
            "Debug"
          ],
          "potential_questions": [
            "How can I allow people outside of my AWS account to access my S3 Glacier resources?",
            "What is the difference between roles and resource-based policies for cross-account access?",
            "How do I provide access to AWS accounts owned by third parties?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "identity federation",
          "resource-based policies",
          "third-party AWS accounts",
          "S3 Glacier",
          "identity-based policies",
          "AWS accounts",
          "IAM",
          "access control lists (ACLs)",
          "cross-account access",
          "API Version 2012-06-01",
          "API",
          "permissions policy",
          "Amazon S3 Glacier",
          "IAM User Guide",
          "roles"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_289",
      "text": "The list includes each S3 Glacier API\noperation, the corresponding actions for which you can grant permissions to perform the action,\nand the AWS resource for which you can grant the permissions. You specify the actions in the policy's Action element, and you specify the resource value in the\npolicy's Resource element. Also, you can use the IAM policy language Condition element to\nspecify when a policy should take effect. To specify an action, use the glacier: prefix followed by the API operation name (for example,\nglacier:CreateVault). For most S3 Glacier actions, Resource is the vault on which you want\nto grant the permissions. You specify a vault as the Resource value by using the vault ARN. To\nexpress conditions, you use predefined condition keys. For more information, see Resource-based\npolicies within S3 Glacier. The following table lists actions that can be used with identity-based policies and resource-based\npolicies. Note\nSome actions can only be used with identity-based policies.",
      "start_idx": 498154,
      "end_idx": 500804,
      "metadata": {
        "num_sentences": 10,
        "num_words": 159,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3582699245876736,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM Policy",
              "S3 Glacier",
              "Permissions",
              "Actions",
              "Resources"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "API operation",
            "IAM policy",
            "Condition element",
            "Action element",
            "Resource element",
            "vault ARN",
            "identity-based policies",
            "resource-based policies",
            "permissions"
          ],
          "entities": [
            "S3 Glacier",
            "IAM",
            "glacier:CreateVault",
            "vault ARN",
            "Resource-based policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS IAM Policy Management",
          "secondary_categories": [
            "AWS S3 Glacier",
            "Access Control"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to grant permissions for S3 Glacier API operations using IAM policies, including specifying actions, resources, and conditions in the policy elements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I specify actions and resources in an IAM policy for S3 Glacier?",
            "What is the correct format for using glacier:CreateVault in a policy?",
            "Which actions can be used with identity-based versus resource-based policies in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS IAM Policy Management]",
        "tf_idf_keywords": [
          "IAM policy",
          "resource-based policies",
          "S3 Glacier",
          "identity-based policies",
          "IAM",
          "glacier:CreateVault",
          "Resource-based policies",
          "vault ARN",
          "API operation",
          "permissions",
          "Action element",
          "Condition element",
          "Resource element"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_290",
      "text": "These actions are marked by an\nasterisk (*) after the name of the API operation in the first column. S3 Glacier API and Required Permissions for Actions\nAbort Multipart Upload (DELETE uploadID)\nRequired Permissions (API Actions): glacier:AbortMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 310\n\nAmazon S3 Glacier Developer Guide\nAbort Vault Lock (DELETE lock-policy)\nRequired Permissions (API Actions): glacier:AbortVaultLock\nResources:\nS3 Glacier Condition Keys:\nAdd Tags To Vault (POST tags add)\nRequired Permissions (API Actions):glacier:AddTagsToVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nComplete Multipart Upload (POST uploadID)\nRequired Permissions (API Actions):glacier:CompleteMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nComplete Vault Lock (POST lockId)\nRequired Permissions (API Actions):glacier:CompleteVaultLock\nResources:\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nCreate Vault (PUT vault) *\nRequired Permissions (API Actions):glacier:CreateVault\nResources:\nS3 Glacier Condition Keys:\nDelete Archive (DELETE archive)\nRequired Permissions (API Actions):glacier:DeleteArchive\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 311\n\nAmazon S3 Glacier Developer Guide\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ArchiveAgeInDays, glacier:ResourceTag/TagKey\nDelete Vault (DELETE vault)\nRequired Permissions (API Actions):glacier:DeleteVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nDelete Vault Access Policy (DELETE access-policy)\nRequired Permissions (API Actions):glacier:DeleteVaultAccessPolicy\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nDelete Vault Notifications (DELETE notification-configuration)\nRequired Permissions (API Actions):glacier:DeleteVaultNotifications\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nDescribe Job (GET JobID)\nRequired Permissions (API Actions):glacier:DescribeJob\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 312\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Condition Keys:\nDescribe Vault (GET vault)\nRequired Permissions (API Actions):glacier:DescribeVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Data Retrieval Policy (GET policy) *\nRequired Permissions (API Actions):glacier:GetDataRetrievalPolicy\nResources: arn:aws:glacier:region:account-id:policies/retrieval-limit-\npolicy\nS3 Glacier Condition Keys:\nGet Job Output (GET output)\nRequired Permissions (API Actions):glacier:GetJobOutput\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Vault Access Policy (GET access-policy)\nRequired Permissions (API Actions):glacier:GetVaultAccessPolicy\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Vault Lock (GET lock-policy)\nRequired Permissions (API Actions):glacier:GetVaultLock\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 313\n\nAmazon S3 Glacier Developer Guide\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Vault Notifications (GET notification-configuration)\nRequired Permissions (API Actions):glacier:GetVaultNotifications\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nInitiate Job (POST jobs)\nRequired Permissions (API Actions):glacier:InitiateJob\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ArchiveAgeInDays, glacier:ResourceTag/TagKey\nInitiate Multipart Upload (POST multipart-uploads)\nRequired Permissions (API Actions):glacier:InitiateMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nInitiate Vault Lock (POST lock-policy)\nRequired Permissions (API Actions):glacier:InitiateVaultLock\nResources:\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 314\n\nAmazon S3 Glacier Developer Guide\nList Jobs (GET jobs)\nRequired Permissions (API Actions):glacier:ListJobs\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Multipart Uploads (GET multipart-uploads)\nRequired Permissions (API Actions):glacier:ListMultipartUploads\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Parts (GET uploadID)\nRequired Permissions (API Actions):glacier:ListParts\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Tags For Vault (GET tags)\nRequired Permissions (API Actions):glacier:ListTagsForVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Vaults (GET vaults)\nRequired Permissions (API Actions):glacier:ListVaults\nResources:\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 315\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Condition Keys:\nRemove Tags From Vault (POST tags remove)\nRequired Permissions (API Actions):glacier:RemoveTagsFromVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nSet Data Retrieval Policy (PUT policy) *\nRequired Permissions (API Actions):glacier:SetDataRetrievalPolicy\nResources:arn:aws:glacier:region:account-id:policies/retrieval-limit-\npolicy\nS3 Glacier Condition Keys:\nSet Vault Access Policy (PUT access-policy)\nRequired Permissions (API Actions):glacier:SetVaultAccessPolicy\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nSet Vault Notification Configuration (PUT notification-configuration)\nRequired Permissions (API Actions):glacier:SetVaultNotifications\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nUpload Archive (POST archive)\nRequired Permissions (API Actions):glacier:UploadArchive\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 316\n\nAmazon S3 Glacier Developer Guide\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nUpload Part (PUT uploadID)\nRequired Permissions (API Actions):glacier:UploadMultipartPart\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 317\n\nAmazon S3 Glacier Developer Guide\nLogging and Monitoring in Amazon S3 Glacier\nMonitoring is an important part of maintaining the reliability, availability, and performance of\nAmazon S3 Glacier (S3 Glacier) and your AWS solutions. You should collect monitoring data from\nall of the parts of your AWS solution so that you can more easily identify and debug the source of a\nfailure if one occurs.",
      "start_idx": 500805,
      "end_idx": 510523,
      "metadata": {
        "num_sentences": 3,
        "num_words": 762,
        "breakpoint_idx": 3001,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1482248306274414,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Permissions",
              "Condition Keys",
              "Resource ARNs"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "API Permissions",
            "Condition Keys",
            "Resources",
            "vaults",
            "ARN",
            "Multipart Upload",
            "Vault Lock",
            "Data Retrieval Policy",
            "Monitoring"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "glacier:AbortMultipartUpload",
            "glacier:CompleteVaultLock",
            "arn:aws:glacier:region:account-id:vaults/*",
            "glacier:ResourceTag/TagKey"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "AWS Permissions Management",
            "AWS Resource Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "Amazon S3 Glacier Developer Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a detailed reference for Amazon S3 Glacier API operations, including required permissions, resource specifications, and condition keys for various actions. It also emphasizes the importance of monitoring and logging for reliability and performance in AWS solutions.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What permissions are required for specific Amazon S3 Glacier API actions?",
            "What are the resource specifications and condition keys for S3 Glacier operations?",
            "How can monitoring and logging improve the reliability of Amazon S3 Glacier solutions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Monitoring",
          "Vault Lock",
          "glacier:CompleteVaultLock",
          "glacier:ResourceTag/TagKey",
          "arn:aws:glacier:region:account-id:vaults/*",
          "Resources",
          "API Permissions",
          "AWS IAM",
          "Condition Keys",
          "Amazon S3 Glacier",
          "vaults",
          "Data Retrieval Policy",
          "glacier:AbortMultipartUpload",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_291",
      "text": "AWS provides the following tools for monitoring your S3 Glacier resources and\nresponding to potential incidents:\nAmazon CloudWatch Alarms\nWhen using S3 Glacier via Amazon S3, you can use Amazon CloudWatch alarms to watch a\nsingle metric over a time period that you specify. If the metric exceeds a given threshold, a\nnotification is sent to an Amazon SNS topic or AWS Auto Scaling policy. CloudWatch alarms do\nnot invoke actions because they are in a particular state. Rather the state must have changed\nand been maintained for a specified number of periods. For more information, see Monitoring\nMetrics with Amazon CloudWatch. AWS CloudTrail Logs\nCloudTrail provides a record of actions taken by a user, role, or an AWS service in S3 Glacier. CloudTrail captures all API calls for S3 Glacier as events, including calls from the S3 Glacier\nconsole and from code calls to the S3 Glacier APIs. For more information, see Logging Amazon\nS3 Glacier API Calls with AWS CloudTrail. AWS Trusted Advisor\nTrusted Advisor draws upon best practices learned from serving hundreds of thousands of AWS\ncustomers. Trusted Advisor inspects your AWS environment and then makes recommendations\nwhen opportunities exist to save money, improve system availability and performance, or help\nclose security gaps. All AWS customers have access to five Trusted Advisor checks. Customers\nwith a Business or Enterprise support plan can view all Trusted Advisor checks. For more information, see AWS Trusted Advisor in the AWS Support User Guide.",
      "start_idx": 510524,
      "end_idx": 516176,
      "metadata": {
        "num_sentences": 13,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3804357479780148,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Monitoring",
              "Best Practices",
              "Logging"
            ]
          },
          "keywords": [
            "Amazon CloudWatch Alarms",
            "AWS CloudTrail",
            "S3 Glacier",
            "Amazon SNS",
            "AWS Auto Scaling",
            "Trusted Advisor",
            "API calls",
            "metrics",
            "AWS environment",
            "security gaps"
          ],
          "entities": [
            "Amazon CloudWatch",
            "AWS CloudTrail",
            "S3 Glacier",
            "AWS Trusted Advisor",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Monitoring and Incident Response",
          "secondary_categories": [
            "Logging and Auditing",
            "Best Practices and Optimization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS Trusted Advisor"
          ]
        },
        "semantic": {
          "summary": "AWS offers tools like CloudWatch Alarms, CloudTrail Logs, and Trusted Advisor to monitor and optimize S3 Glacier resources, enabling notifications, activity logging, and best-practice recommendations for improved security, performance, and cost-efficiency.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I monitor S3 Glacier metrics using Amazon CloudWatch?",
            "What information does AWS CloudTrail log for S3 Glacier?",
            "What recommendations does AWS Trusted Advisor provide for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Monitoring and Incident Response]",
        "tf_idf_keywords": [
          "API calls",
          "AWS Trusted Advisor",
          "S3 Glacier",
          "Amazon CloudWatch",
          "AWS Auto Scaling",
          "Trusted Advisor",
          "Amazon SNS",
          "AWS CloudTrail",
          "metrics",
          "security gaps",
          "Amazon S3 Glacier",
          "Amazon CloudWatch Alarms",
          "AWS environment"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_292",
      "text": "Logging and Monitoring API Version 2012-06-01 318\n\nAmazon S3 Glacier Developer Guide\nCompliance Validation for Amazon S3 Glacier\nThe security and compliance of Amazon S3 Glacier (S3 Glacier) is assessed by third-party auditors\nas part of multiple AWS compliance programs, including the following:\n\u2022 System and Organization Controls (SOC)\n\u2022 Payment Card Industry Data Security Standard (PCI DSS)\n\u2022 Federal Risk and Authorization Management Program (FedRAMP)\n\u2022 Health Insurance Portability and Accountability Act (HIPAA)\nAWS provides a frequently updated list of AWS services in scope of specific compliance programs at\nAWS Services in Scope by Compliance Program. Third-party audit reports are available for you to download using AWS Artifact. For more\ninformation, see Downloading Reports in AWS Artifact in the AWS Artifact User Guide. For more information about AWS compliance programs, see AWS Compliance Programs. Your compliance responsibility when using S3 Glacier is determined by the sensitivity of your\ndata, your organization\u2019s compliance objectives, and applicable laws and regulations. If your use\nof S3 Glacier is subject to compliance with standards like HIPAA, PCI, or FedRAMP, AWS provides\nresources to help:\n\u2022 S3 Glacier Vault Lock allows you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a vault lock policy. You can specify controls such as \u201cwrite once read\nmany\u201d (WORM) in a vault lock policy and lock the policy from future edits. After the policy is\nlocked, it can no longer be changed. Vault lock policies can help you comply with regulatory\nframeworks such as SEC17a-4 and HIPAA. \u2022 Security and Compliance Quick Start Guides discuss architectural considerations and steps for\ndeploying security- and compliance-focused baseline environments on AWS. \u2022 Architecting for HIPAA Security and Compliance outlines how companies use AWS to help them\nmeet HIPAA requirements. \u2022 The AWS Well-Architected Tool (AWS WA Tool) is a service in the cloud that provides a consistent\nprocess for you to review and measure your architecture using AWS best practices. The AWS WA\nTool provides recommendations for making your workloads more reliable, secure, efficient, and\ncost-effective.",
      "start_idx": 510524,
      "end_idx": 516176,
      "metadata": {
        "num_sentences": 13,
        "num_words": 340,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3681612748366136,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Compliance",
              "Security",
              "Regulatory Frameworks"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Compliance Validation",
            "Vault Lock",
            "HIPAA",
            "PCI DSS",
            "FedRAMP",
            "AWS Artifact",
            "SOC",
            "AWS Well-Architected Tool",
            "WORM"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Compliance Programs",
            "AWS Artifact",
            "Vault Lock",
            "AWS Well-Architected Tool"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Compliance and Security",
          "secondary_categories": [
            "Data Governance",
            "Cloud Architecture"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Artifact",
            "AWS Well-Architected Tool"
          ],
          "mentioned_tools": [
            "S3 Glacier Vault Lock",
            "Security and Compliance Quick Start Guides",
            "Architecting for HIPAA Security and Compliance"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the compliance and security features of Amazon S3 Glacier, detailing third-party audit programs, compliance tools like Vault Lock, and resources for meeting standards such as HIPAA and PCI DSS. It also introduces AWS tools like the Well-Architected Tool for building secure and compliant architectures.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What compliance standards does Amazon S3 Glacier support?",
            "How can I use S3 Glacier Vault Lock to enforce compliance controls?",
            "What tools does AWS provide for building HIPAA-compliant architectures?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Compliance and Security]",
        "tf_idf_keywords": [
          "HIPAA",
          "FedRAMP",
          "WORM",
          "AWS Well-Architected Tool",
          "Vault Lock",
          "AWS Artifact",
          "SOC",
          "AWS Compliance Programs",
          "PCI DSS",
          "Amazon S3 Glacier",
          "Compliance Validation"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_293",
      "text": "Compliance Validation API Version 2012-06-01 319\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Compliance Resources provide several different workbooks and guides that might apply to\nyour industry and location. \u2022 AWS Config can help you assess how well your resource configurations comply with internal\npractices, industry guidelines, and regulations. \u2022 AWS Security Hub provides you with a comprehensive view of your security state within AWS and\nhelps you check your compliance with security industry standards and best practices. Compliance Validation API Version 2012-06-01 320\n\nAmazon S3 Glacier Developer Guide\nResilience in Amazon S3 Glacier\nThe AWS global infrastructure is built around Regions and Availability Zones. AWS Regions provide\nmultiple, physically separated and isolated Availability Zones that are connected with low latency,\nhigh throughput, and highly redundant networking. These Availability Zones offer you an effective\nway to design and operate applications and databases. They are more highly available, fault\ntolerant, and scalable than traditional single data center infrastructures or multi-data center\ninfrastructures. S3 Glacier redundantly stores data in multiple devices spanning a minimum of\nthree Availability Zones. To increase durability, S3 Glacier synchronously stores your data across\nmultiple AZs before confirming a successful upload. For more information about AWS Regions and Availability Zones, see AWS Global Infrastructure. Resilience API Version 2012-06-01 321\n\nAmazon S3 Glacier Developer Guide\nInfrastructure Security in Amazon S3 Glacier\nAs a managed service, Amazon S3 Glacier (S3 Glacier) is protected by the AWS global network\nsecurity procedures that are described in the Amazon Web Services: Overview of Security\nProcesses. Access to S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2.",
      "start_idx": 510524,
      "end_idx": 516176,
      "metadata": {
        "num_sentences": 13,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40952486869616384,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Compliance",
              "Resilience",
              "Infrastructure Security"
            ]
          },
          "keywords": [
            "Compliance Validation",
            "AWS Config",
            "AWS Security Hub",
            "S3 Glacier",
            "Availability Zones",
            "AWS Regions",
            "durability",
            "Transport Layer Security",
            "network security",
            "AWS Global Infrastructure"
          ],
          "entities": [
            "Compliance Validation API",
            "Amazon S3 Glacier",
            "AWS Config",
            "AWS Security Hub",
            "AWS Global Infrastructure"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Compliance and Security",
          "secondary_categories": [
            "Resilience and Infrastructure",
            "Data Storage"
          ],
          "mentioned_services": [
            "AWS Config",
            "AWS Security Hub",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Compliance Validation API",
            "Resilience API"
          ]
        },
        "semantic": {
          "summary": "The documentation outlines compliance validation, resilience, and infrastructure security features of Amazon S3 Glacier, including tools like AWS Config and Security Hub, and details on AWS global infrastructure and security protocols.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can AWS Config help with compliance validation?",
            "What measures does Amazon S3 Glacier take to ensure data resilience?",
            "What security protocols are required to access Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Compliance and Security]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Availability Zones",
          "Compliance Validation API",
          "AWS Security Hub",
          "durability",
          "Transport Layer Security",
          "Amazon S3 Glacier",
          "AWS Regions",
          "AWS Global Infrastructure",
          "network security",
          "AWS Config",
          "Compliance Validation"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_294",
      "text": "We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic\nCurve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later support\nthese modes. Additionally, requests must be signed using an access key ID and a secret access key\nthat is associated with an IAM principal, or you can use the AWS Security Token Service (AWS STS)\nto generate temporary security credentials to sign requests. VPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon S3 VPC endpoints if you\naccess S3 Glacier as a storage tier integrated with Amazon S3. For more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide. Infrastructure Security API Version 2012-06-01 322\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Data Retrieval Policies\nWith Amazon S3 Glacier data retrieval policies, you can easily set data retrieval quotas and manage\nthe data retrieval activities across your AWS account in each AWS Region. For more information\nabout S3 Glacier data retrieval charges, see S3 Glacier pricing. Important\nA data retrieval policy applies only to Standard retrievals and manages retrieval requests\nmade directly to S3 Glacier. For more information about the S3 Glacier storage classes, see Storage classes for archiving\nobjects and Transitioning objects in the Amazon Simple Storage Service User Guide.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 302,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29429447289669153,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Security",
              "Networking"
            ]
          },
          "keywords": [
            "TLS 1.3",
            "Perfect Forward Secrecy",
            "Ephemeral Diffie-Hellman",
            "Elliptic Curve Diffie-Hellman",
            "IAM principal",
            "AWS Security Token Service",
            "VPC endpoint",
            "Amazon S3 Glacier",
            "Object Lifecycle Management",
            "Data retrieval policy"
          ],
          "entities": [
            "TLS 1.3",
            "AWS STS",
            "Amazon S3",
            "S3 Glacier",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Security",
            "Storage Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier",
            "AWS Security Token Service"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "The documentation discusses recommended security protocols like TLS 1.3 and Perfect Forward Secrecy cipher suites, signing requests with IAM credentials, and using VPC endpoints for private connections. It also explains S3 Glacier data retrieval policies and transitioning objects between storage classes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What security protocols and cipher suites are recommended for clients?",
            "How can I use VPC endpoints to access AWS services privately?",
            "What are S3 Glacier data retrieval policies and how do they work?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "Data retrieval policy",
          "IAM principal",
          "Amazon S3",
          "S3 Glacier",
          "AWS PrivateLink",
          "Ephemeral Diffie-Hellman",
          "Object Lifecycle Management",
          "TLS 1.3",
          "Elliptic Curve Diffie-Hellman",
          "VPC endpoint",
          "Amazon S3 Glacier",
          "Perfect Forward Secrecy",
          "AWS Security Token Service",
          "AWS STS"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_295",
      "text": "Topics\n\u2022 Choosing an S3 Glacier Data Retrieval Policy\n\u2022 Using the S3 Glacier Console to Set Up a Data Retrieval Policy\n\u2022 Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy\nChoosing an S3 Glacier Data Retrieval Policy\nYou can choose from three types of S3 Glacier data retrieval policies: No Retrieval Limit, Free Tier\nOnly, and Max Retrieval Rate. No Retrieval Limit is the default data retrieval policy that's used for retrievals. If you use the No\nRetrieval Limit policy, no retrieval quota is set, and all valid data retrieval requests are accepted. By using a Free Tier Only policy, you can keep your retrievals within your daily AWS Free Tier\nallowance and not incur any data retrieval costs. If you want to retrieve more data than is in your\nAWS Free Tier allowance, you can use a Max Retrieval Rate policy to set a bytes-per-hour retrieval-\nrate quota. The Max Retrieval Rate policy ensures that the peak retrieval rate from all retrieval jobs\nacross your account in an AWS Region does not exceed the bytes-per-hour quota that you set. With both the Free Tier Only and Max Retrieval Rate policies, data retrieval requests that exceed\nthe retrieval quotas that you specified are not accepted. If you use a Free Tier Only policy, S3\nGlacier synchronously rejects retrieval requests that exceed your AWS Free Tier allowance. If you\nChoosing an S3 Glacier Data Retrieval Policy API Version 2012-06-01 323\n\nAmazon S3 Glacier Developer Guide\nuse a Max Retrieval Rate policy, S3 Glacier rejects retrieval requests that cause the peak retrieval\nrate of the in-progress jobs to exceed the bytes-per-hour quota set by the policy. These policies\nhelp you simplify data retrieval cost management. The following are some useful facts about data retrieval policies:\n\u2022 Data retrieval policy settings do not change the 3- to 5-hour period that it takes to retrieve data\nfrom S3 Glacier by using Standard retrievals. \u2022 Setting a new data retrieval policy does not affect previously accepted retrieval jobs that are\nalready in progress.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 344,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5955483407685251,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Data Retrieval Policy",
            "No Retrieval Limit",
            "Free Tier Only",
            "Max Retrieval Rate",
            "AWS Free Tier",
            "retrieval quota",
            "bytes-per-hour",
            "retrieval cost management",
            "Standard retrievals"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "No Retrieval Limit",
            "Free Tier Only",
            "Max Retrieval Rate"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "S3 Glacier Data Retrieval Policies",
          "secondary_categories": [
            "Data Retrieval Cost Management",
            "AWS Free Tier Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "S3 Glacier Console",
            "Amazon S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the types of S3 Glacier data retrieval policies (No Retrieval Limit, Free Tier Only, and Max Retrieval Rate) and how they help manage data retrieval costs and quotas effectively. It also provides details about policy behavior and retrieval limitations.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the different types of S3 Glacier data retrieval policies?",
            "How does the Max Retrieval Rate policy manage data retrieval quotas?",
            "What happens to retrieval jobs already in progress when a new policy is set?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [S3 Glacier Data Retrieval Policies]",
        "tf_idf_keywords": [
          "Standard retrievals",
          "S3 Glacier",
          "AWS Free Tier",
          "No Retrieval Limit",
          "retrieval cost management",
          "Free Tier Only",
          "retrieval quota",
          "bytes-per-hour",
          "Max Retrieval Rate",
          "Amazon S3 Glacier",
          "Data Retrieval Policy"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_296",
      "text": "\u2022 If a retrieval job request is rejected because of a data retrieval policy, you are not charged for the\njob or the request. \u2022 You can set one data retrieval policy for each AWS Region, which will govern all data retrieval\nactivities in the AWS Region under your account. A data retrieval policy is specific to a particular\nAWS Region because data retrieval costs vary across AWS Regions. For more information, see\nAmazon S3 Glacier pricing. Free Tier Only Policy\nYou can set a data retrieval policy to Free Tier Only to ensure that your retrievals always stay within\nyour AWS Free Tier allowance, so that you don't incur data retrieval charges. If a retrieval request is\nrejected, you receive an error message stating that the request has been denied by the current data\nretrieval policy. You can set the data retrieval policy to Free Tier Only on a per-Region basis. After the policy is set,\nyou cannot retrieve more data in a day than your prorated daily AWS Free Tier retrieval allowance\nfor that AWS Region. You also do not incur data retrieval fees. You can also switch to a Free Tier Only policy after you have incurred data retrieval charges within\na month. In that case, the Free Tier Only policy takes effect for new retrieval requests, but does not\naffect past requests. You will be billed for the previously incurred charges.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 235,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4472564928459399,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Cost Management",
              "Error Handling"
            ]
          },
          "keywords": [
            "data retrieval policy",
            "AWS Region",
            "Free Tier Only",
            "retrieval charges",
            "prorated daily allowance",
            "retrieval request",
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "data retrieval costs",
            "error message"
          ],
          "entities": [
            "AWS Region",
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "Free Tier Only",
            "data retrieval policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Policies",
          "secondary_categories": [
            "AWS Free Tier",
            "AWS Region Specific Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the AWS S3 Glacier data retrieval policy, including the Free Tier Only policy, which ensures retrievals stay within the AWS Free Tier allowance and avoid charges. It also describes policy settings on a per-region basis and handling rejected requests.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I set a Free Tier Only data retrieval policy in AWS S3 Glacier?",
            "What happens if a retrieval job request is rejected due to a data retrieval policy?",
            "Can I switch to a Free Tier Only policy after incurring data retrieval charges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Retrieval Policies]",
        "tf_idf_keywords": [
          "AWS Free Tier",
          "AWS Region",
          "data retrieval policy",
          "retrieval charges",
          "error message",
          "retrieval request",
          "Free Tier Only",
          "Amazon S3 Glacier",
          "data retrieval costs",
          "prorated daily allowance"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_297",
      "text": "Max Retrieval Rate Policy\nYou can set your data retrieval policy to Max Retrieval Rate to control the peak retrieval rate by\nspecifying a data retrieval quota that has a bytes-per-hour maximum. When you set the data\nretrieval policy to Max Retrieval Rate, a new retrieval request is rejected if it would cause the peak\nFree Tier Only Policy API Version 2012-06-01 324\n\nAmazon S3 Glacier Developer Guide\nretrieval rate of the in-progress jobs to exceed the bytes-per-hour quota that's specified by the\npolicy. If a retrieval job request is rejected, you receive an error message stating that the request\nhas been denied by the current data retrieval policy. Setting your data retrieval policy to the Max Retrieval Rate policy can affect how much of your\nAWS Free Tier allowance that you can use in a day. For example, suppose you set Max Retrieval Rate\nto 1 MB per hour. This is less than the AWS Free Tier policy rate. To ensure that you make good use\nof the daily AWS Free Tier allowance, you can first set your policy to Free Tier Only, and then switch\nto the Max Retrieval Rate policy later if you need to. For more information about how your retrieval\nallowance is calculated, go to Amazon S3 Glacier FAQs. No Retrieval Limit Policy\nIf your data retrieval policy is set to No Retrieval Limit, all valid data retrieval requests are accepted\nand your data retrieval costs will vary based on your usage. Using the S3 Glacier Console to Set Up a Data Retrieval Policy\nTo create a data retrieval policy by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 290,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41220855712890625,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Description",
              "Usage Guidance",
              "Error Handling"
            ]
          },
          "keywords": [
            "Max Retrieval Rate",
            "data retrieval policy",
            "AWS Free Tier",
            "bytes-per-hour quota",
            "retrieval job request",
            "No Retrieval Limit",
            "S3 Glacier Console",
            "retrieval allowance",
            "Amazon S3 Glacier",
            "retrieval costs"
          ],
          "entities": [
            "Max Retrieval Rate Policy",
            "AWS Free Tier",
            "Amazon S3 Glacier",
            "S3 Glacier Console",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Policy",
          "secondary_categories": [
            "AWS Free Tier",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set and manage data retrieval policies in Amazon S3 Glacier, including Max Retrieval Rate, No Retrieval Limit, and Free Tier Only policies, along with their implications on retrieval rates and costs.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "How do I set a Max Retrieval Rate policy in Amazon S3 Glacier?",
            "What happens if a retrieval job exceeds the specified Max Retrieval Rate quota?",
            "What are the differences between Max Retrieval Rate and No Retrieval Limit policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Retrieval Policy]",
        "tf_idf_keywords": [
          "AWS Free Tier",
          "Max Retrieval Rate Policy",
          "data retrieval policy",
          "No Retrieval Limit",
          "retrieval allowance",
          "bytes-per-hour quota",
          "retrieval costs",
          "API Version 2012-06-01",
          "Max Retrieval Rate",
          "S3 Glacier Console",
          "Amazon S3 Glacier",
          "retrieval job request"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_298",
      "text": "Under Select a Region, choose an AWS Region from the dropdown menu. You can configure a\ndata retrieval policy for each AWS Region. 3.",
      "start_idx": 523189,
      "end_idx": 523322,
      "metadata": {
        "num_sentences": 3,
        "num_words": 24,
        "breakpoint_idx": 3091,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.20566630363464355,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": []
          },
          "keywords": [
            "AWS Region",
            "data retrieval policy",
            "dropdown menu",
            "configure",
            "Region"
          ],
          "entities": [
            "AWS Region",
            "data retrieval policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Configuration",
          "secondary_categories": [
            "Cloud Computing",
            "Data Management"
          ],
          "mentioned_services": [
            "AWS Region"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to select an AWS Region and configure a data retrieval policy specific to that region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I select an AWS Region?",
            "Can I configure a data retrieval policy for each AWS Region?",
            "Where can I find the dropdown menu to select an AWS Region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Configuration]",
        "tf_idf_keywords": [
          "AWS Region",
          "data retrieval policy",
          "configure",
          "Region",
          "dropdown menu"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_299",
      "text": "In the left navigation pane, choose Data retrieval settings. 4. Choose Edit. The Edit data retrieval policies page appears. 5. Under Data retrieval policies, choose a policy. You can select one of the three data retrieval policies: No retrieval limit, Free Tier only, or\nSpecify a max retrieval rate. \u2022 If you choose No retrieval limit, all valid data retrieval requests are accepted. \u2022 If you choose Free Tier only, data retrieval requests that exceed the AWS Free Tier are not\naccepted. \u2022 If you choose Specify a max retrieval rate, data retrieval requests are rejected if they would\ncause the peak retrieval rate of the in-progress jobs to exceed the max retrieval rate that\nyou specify. You must specify a gigabytes (GB) per hour value in the GB/hour box under Max\nNo Retrieval Limit Policy API Version 2012-06-01 325\n\nAmazon S3 Glacier Developer Guide\nretrieval rate. When you enter a value for GB/hour, the console calculates an estimated cost\nfor you.",
      "start_idx": 523323,
      "end_idx": 524281,
      "metadata": {
        "num_sentences": 12,
        "num_words": 162,
        "breakpoint_idx": 3103,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.27463259841456555,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Selection"
            ]
          },
          "keywords": [
            "Data retrieval settings",
            "Edit data retrieval policies",
            "No retrieval limit",
            "Free Tier",
            "Max retrieval rate",
            "GB/hour",
            "AWS Free Tier",
            "S3 Glacier",
            "retrieval requests",
            "estimated cost"
          ],
          "entities": [
            "AWS Free Tier",
            "Amazon S3 Glacier",
            "No retrieval limit",
            "Free Tier only",
            "Specify a max retrieval rate"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Policies",
          "secondary_categories": [
            "Cloud Storage Management",
            "AWS Cost Optimization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to edit data retrieval policies in Amazon S3 Glacier, including options for no retrieval limit, Free Tier only, or specifying a maximum retrieval rate in gigabytes per hour.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit data retrieval policies in Amazon S3 Glacier?",
            "What are the differences between the data retrieval policies in Amazon S3 Glacier?",
            "How can I specify a maximum retrieval rate for data in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval Policies]",
        "tf_idf_keywords": [
          "Free Tier",
          "Data retrieval settings",
          "AWS Free Tier",
          "S3 Glacier",
          "estimated cost",
          "Specify a max retrieval rate",
          "Free Tier only",
          "GB/hour",
          "retrieval requests",
          "Amazon S3 Glacier",
          "No retrieval limit",
          "Max retrieval rate",
          "Edit data retrieval policies"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_300",
      "text": "6. Choose Save changes. Using the Amazon S3 Glacier API to Set Up a Data Retrieval\nPolicy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API or by using\nthe AWS SDKs. Using the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API. You can view\nan existing data retrieval policy by using the Get Data Retrieval Policy (GET policy) operation. You\nset a data retrieval policy by using the Set Data Retrieval Policy (PUT policy) operation. When using the PUT policy operation, you select the data retrieval policy type by setting the JSON\nStrategy field value to BytesPerHour, FreeTier, or None. BytesPerHour is equivalent to\nchoosing Specify a max retrieval rate in the console, FreeTier to choosing Free Tier only, and\nNone to choosing No retrieval limit. When you use the Initiate Job (POST jobs) operation to initiate a data retrieval job that will exceed\nthe maximum retrieval rate set in your data retrieval policy, the Initiate Job operation stops\nand throws an exception. Using the AWS SDKs to Set Up a Data Retrieval Policy\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. These SDKs provide\nlibraries that map to the underlying REST API and provide objects that enable you to easily\nconstruct requests and process responses.",
      "start_idx": 524282,
      "end_idx": 528205,
      "metadata": {
        "num_sentences": 11,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2813490780917081,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "REST API",
            "AWS SDKs",
            "Initiate Job",
            "PUT policy",
            "GET policy",
            "BytesPerHour",
            "FreeTier",
            "None"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "Get Data Retrieval Policy",
            "Set Data Retrieval Policy",
            "Initiate Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Policy Management",
          "secondary_categories": [
            "Amazon S3 Glacier API",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up and manage data retrieval policies in Amazon S3 Glacier using the REST API or AWS SDKs. It covers operations for viewing, setting, and enforcing data retrieval limits based on specified strategies.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I set a data retrieval policy using the Amazon S3 Glacier REST API?",
            "What are the available data retrieval policy types in Amazon S3 Glacier?",
            "How can I use AWS SDKs to manage data retrieval policies in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval Policy Management]",
        "tf_idf_keywords": [
          "PUT policy",
          "data retrieval policy",
          "Initiate Job",
          "BytesPerHour",
          "AWS SDKs",
          "GET policy",
          "Set Data Retrieval Policy",
          "Get Data Retrieval Policy",
          "REST API",
          "FreeTier",
          "Amazon S3 Glacier",
          "None"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_301",
      "text": "For more information, see Using the AWS SDKs with\nAmazon S3 Glacier. Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy API Version 2012-06-01 326\n\nAmazon S3 Glacier Developer Guide\nTagging Amazon S3 Glacier Resources\nA tag is a label that you assign to an AWS resource. Each tag consists of a key and a value, both of\nwhich you define. You can assign the tags that you define to Amazon S3 Glacier (S3 Glacier) vault\nresources. Using tags is a simple yet powerful way to manage AWS resources and organize data,\nincluding billing data. Topics\n\u2022 Tagging Basics\n\u2022 Tag Restrictions\n\u2022 Tracking Costs Using Tagging\n\u2022 Managing Access Control with Tagging\n\u2022 Related Sections\nTagging Basics\nYou use the S3 Glacier console, AWS Command Line Interface (AWS CLI), or S3 Glacier API to\ncomplete the following tasks:\n\u2022 Adding tags to a vault\n\u2022 Listing the tags for a vault\n\u2022 Removing tags from a vault\nFor information about how to add, list, and remove tags, see Tagging Your S3 Glacier Vaults. You can use tags to categorize your vaults. For example, you can categorize vaults by purpose,\nowner, or environment. Because you define the key and value for each tag, you can create a custom\nset of categories to meet your specific needs. For example, you might define a set of tags that\nhelps you track vaults by owner and purpose for the vault. Following are a few examples of tags:\n\u2022 Owner: Name\n\u2022 Purpose: Video archives\n\u2022 Environment: Production\nTagging Basics API Version 2012-06-01 327\n\nAmazon S3 Glacier Developer Guide\nTag Restrictions\nBasic tag restrictions are as follows:\n\u2022 The maximum number of tags for a resource (vault) is 50.",
      "start_idx": 524282,
      "end_idx": 528205,
      "metadata": {
        "num_sentences": 11,
        "num_words": 289,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45384247519753196,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Tagging",
              "Resource Management",
              "Cost Tracking",
              "Access Control"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "tags",
            "vault",
            "AWS CLI",
            "API",
            "resource management",
            "billing data",
            "access control",
            "tag restrictions",
            "data categorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "AWS CLI",
            "Tagging Basics",
            "Tag Restrictions"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tagging and Resource Management",
          "secondary_categories": [
            "Access Control",
            "Cost Tracking"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI",
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use tags to manage and organize Amazon S3 Glacier vault resources, including adding, listing, and removing tags via the S3 Glacier console, AWS CLI, or API. It also outlines basic tag restrictions and provides examples of tagging use cases.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add, list, or remove tags from an Amazon S3 Glacier vault?",
            "What are the basic restrictions on tagging Amazon S3 Glacier resources?",
            "How can I use tags to categorize and track costs for Amazon S3 Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Tagging and Resource Management]",
        "tf_idf_keywords": [
          "billing data",
          "resource management",
          "AWS CLI",
          "data categorization",
          "AWS SDKs",
          "Tagging Basics",
          "tags",
          "vault",
          "API",
          "Tag Restrictions",
          "tag restrictions",
          "Amazon S3 Glacier",
          "access control"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_302",
      "text": "\u2022 Tag keys and values are case-sensitive. Tag key restrictions are as follows:\n\u2022 Within a set of tags for a vault, each tag key must be unique. If you add a tag with a key that's\nalready in use, your new tag overwrites the existing key-value pair. \u2022 Tag keys cannot start with aws: because this prefix is reserved for use by AWS. AWS can create\ntags that begin with this prefix on your behalf, but you can't edit or delete them. \u2022 Tag keys must be from 1 to 128 Unicode characters in length. \u2022 Tag keys must consist of the following characters: Unicode letters, digits, spaces, and the\nfollowing special characters: _ . / = + - @. Tag value restrictions are as follows:\n\u2022 Tag values must be from 0 to 255 Unicode characters in length. \u2022 Tag values can be blank. Otherwise, they must consist of the following characters: Unicode\nletters, digits, spaces, and any of the following special characters: _ .",
      "start_idx": 524282,
      "end_idx": 528205,
      "metadata": {
        "num_sentences": 11,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4308772000399503,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Restrictions",
              "Tagging"
            ]
          },
          "keywords": [
            "Tag keys",
            "Tag values",
            "case-sensitive",
            "AWS",
            "Unicode characters",
            "special characters",
            "key-value pair",
            "vault",
            "prefix",
            "reserved"
          ],
          "entities": [
            "AWS",
            "Unicode",
            "vault",
            "key-value pair",
            "aws:"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tagging Restrictions",
          "secondary_categories": [
            "AWS Resource Management",
            "Unicode Character Support"
          ],
          "mentioned_services": [
            "AWS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the restrictions and rules for tag keys and values used in vault tagging, including character limits, allowed characters, and reserved prefixes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the character restrictions for tag keys in vaults?",
            "Can tag values be blank, and what characters are allowed?",
            "Why can't tag keys start with 'aws:'?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Tagging Restrictions]",
        "tf_idf_keywords": [
          "aws:",
          "reserved",
          "key-value pair",
          "AWS",
          "Tag keys",
          "case-sensitive",
          "prefix",
          "Unicode",
          "Tag values",
          "vault",
          "Unicode characters",
          "special characters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_303",
      "text": "/ = + - @. Tracking Costs Using Tagging\nYou can use tags to categorize and track your AWS costs. When you apply tags to any AWS\nresources, including vaults, your AWS cost allocation report includes usage and costs aggregated\nby tags. You can apply tags that represent business categories (such as cost centers, application\nnames, and owners) to organize your costs across multiple services. For more information, see Use\nCost Allocation Tags for Custom Billing Reports in the AWS Billing User Guide. Managing Access Control with Tagging\nYou can use tags as a condition in an access policy statement. For example, you can set up a legal\nhold tag and include it as a condition in a data retention policy that states that \u201carchive deletion\nTag Restrictions API Version 2012-06-01 328\n\nAmazon S3 Glacier Developer Guide\nfrom everyone will be denied if the legal hold tag value is set to True.\u201d You can deploy the data\nretention policy and set the legal hold tag to False under normal conditions. If your data must be\nput on hold to assist an investigation, you can easily turn on the legal hold by setting the tag value\nto True and removing the hold in a similar way later on. For more information, see Controlling\nAccess Using Tags in the IAM User Guide. Related Sections\n\u2022 Tagging Your S3 Glacier Vaults\nRelated Sections API Version 2012-06-01 329\n\nAmazon S3 Glacier Developer Guide\nLogging Amazon S3 Glacier API Calls with AWS\nCloudTrail\nAmazon S3 Glacier (S3 Glacier) is integrated with AWS CloudTrail, a service that provides a record\nof actions taken by a user, role, or an AWS service in S3 Glacier.",
      "start_idx": 528206,
      "end_idx": 532430,
      "metadata": {
        "num_sentences": 10,
        "num_words": 278,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2917459699842665,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Cost Tracking",
              "Access Control",
              "Tagging",
              "Logging"
            ]
          },
          "keywords": [
            "AWS",
            "tags",
            "cost allocation",
            "access policy",
            "legal hold",
            "data retention",
            "S3 Glacier",
            "CloudTrail",
            "IAM",
            "billing"
          ],
          "entities": [
            "AWS",
            "Amazon S3 Glacier",
            "CloudTrail",
            "IAM User Guide",
            "AWS Billing User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tagging and Cost Management",
          "secondary_categories": [
            "Access Control",
            "Logging and Monitoring"
          ],
          "mentioned_services": [
            "AWS S3 Glacier",
            "AWS CloudTrail",
            "AWS Billing"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use tagging in AWS to track costs, manage access control, and implement data retention policies. It also highlights the integration of Amazon S3 Glacier with AWS CloudTrail for logging API calls.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use tags to track AWS costs?",
            "How can tags be used to manage access control in AWS?",
            "What is the role of AWS CloudTrail in logging Amazon S3 Glacier API calls?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Tagging and Cost Management]",
        "tf_idf_keywords": [
          "legal hold",
          "S3 Glacier",
          "CloudTrail",
          "AWS Billing",
          "AWS",
          "AWS Billing User Guide",
          "IAM",
          "billing",
          "tags",
          "access policy",
          "cost allocation",
          "AWS S3 Glacier",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "IAM User Guide"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_304",
      "text": "CloudTrail captures all API calls\nfor S3 Glacier as events, including calls from the S3 Glacier console and from code calls to the S3\nGlacier APIs. If you create a trail, you can enable continuous delivery of CloudTrail events to an\nAmazon S3 bucket, including events for S3 Glacier. If you don't configure a trail, you can still view\nthe most recent events in the CloudTrail console in Event history. Using the information collected\nby CloudTrail, you can determine the request that was made to S3 Glacier, the IP address from\nwhich the request was made, who made the request, when it was made, and additional details. To learn more about CloudTrail, see the AWS CloudTrail User Guide. Amazon S3 Glacier Information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs in\nS3 Glacier, that activity is recorded in a CloudTrail event along with other AWS service events in\nEvent history. You can view, search, and download recent events in your AWS account. For more\ninformation, see Viewing Events with CloudTrail Event History. For an ongoing record of events in your AWS account, including events for S3 Glacier, create a\ntrail.",
      "start_idx": 528206,
      "end_idx": 532430,
      "metadata": {
        "num_sentences": 10,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6121731228298611,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "ServiceDescription",
              "UsageGuidance"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 Glacier",
            "API calls",
            "events",
            "Amazon S3 bucket",
            "Event history",
            "AWS account",
            "trail",
            "CloudTrail User Guide",
            "Viewing Events"
          ],
          "entities": [
            "CloudTrail",
            "S3 Glacier",
            "Amazon S3 bucket",
            "AWS account",
            "CloudTrail User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Monitoring and Logging",
          "secondary_categories": [
            "Cloud Storage",
            "API Management"
          ],
          "mentioned_services": [
            "AWS CloudTrail",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "CloudTrail captures all API calls for S3 Glacier as events, allowing users to view and analyze activity logs. By creating a trail, users can enable continuous delivery of these events to an S3 bucket for long-term tracking and analysis.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enable continuous delivery of S3 Glacier events using CloudTrail?",
            "What details can I learn from CloudTrail about S3 Glacier API calls?",
            "How do I view recent S3 Glacier events in the CloudTrail console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Monitoring and Logging]",
        "tf_idf_keywords": [
          "API calls",
          "events",
          "CloudTrail",
          "S3 Glacier",
          "AWS account",
          "trail",
          "CloudTrail User Guide",
          "Event history",
          "Viewing Events",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "Amazon S3 bucket"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_305",
      "text": "A trail enables CloudTrail to deliver log files to an Amazon S3 bucket. By default, when you\ncreate a trail in the console, the trail applies to all AWS Regions. The trail logs events from all AWS\nRegions in the AWS partition and delivers the log files to the Amazon S3 bucket that you specify. Additionally, you can configure other AWS services to further analyze and act upon the event data\ncollected in CloudTrail logs. For more information, see:\n\u2022 Overview for Creating a Trail\n\u2022 CloudTrail Supported Services and Integrations\n\u2022 Configuring Amazon SNS Notifications for CloudTrail\n\u2022 Receiving CloudTrail Log Files from Multiple Regions and Receiving CloudTrail Log Files from\nMultiple Accounts\nAmazon S3 Glacier Information in CloudTrail API Version 2012-06-01 330\n\nAmazon S3 Glacier Developer Guide\nAll S3 Glacier actions are logged by CloudTrail and are documented in the API Reference for\nAmazon S3 Glacier. For example, calls to the Create Vault (PUT vault), Delete Vault (DELETE vault),\nand List Vaults (GET vaults) actions generate entries in the CloudTrail log files. Every event or log entry contains information about who generated the request. The identity\ninformation helps you determine the following:\n\u2022 Whether the request was made with root user or other credentials. \u2022 Whether the request was made with temporary security credentials for a role or federated user. \u2022 Whether the request was made by another AWS service.",
      "start_idx": 528206,
      "end_idx": 532430,
      "metadata": {
        "num_sentences": 10,
        "num_words": 232,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3940140618218316,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Integration",
              "Logging"
            ]
          },
          "keywords": [
            "CloudTrail",
            "Amazon S3",
            "AWS Regions",
            "Amazon SNS Notifications",
            "S3 Glacier",
            "log files",
            "API Reference",
            "Create Vault",
            "temporary security credentials",
            "federated user"
          ],
          "entities": [
            "CloudTrail",
            "Amazon S3",
            "Amazon S3 Glacier",
            "AWS Regions",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "CloudTrail Logging",
          "secondary_categories": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "CloudTrail",
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how CloudTrail delivers log files to Amazon S3 buckets, applies to all AWS Regions by default, and integrates with other AWS services for event analysis. It also details how S3 Glacier actions are logged by CloudTrail, including identity information for requests.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure CloudTrail to deliver logs to an Amazon S3 bucket?",
            "What types of S3 Glacier actions are logged by CloudTrail?",
            "How can I identify the credentials used to make a request in CloudTrail logs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [CloudTrail Logging]",
        "tf_idf_keywords": [
          "CloudTrail",
          "S3 Glacier",
          "Amazon SNS Notifications",
          "Amazon S3",
          "Create Vault",
          "API Reference",
          "log files",
          "temporary security credentials",
          "federated user",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "AWS Regions"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_306",
      "text": "For more information, see the CloudTrail userIdentity Element. Understanding Amazon S3 Glacier Log File Entries\nA trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket that\nyou specify. CloudTrail log files contain one or more log entries. An event represents a single\nrequest from any source and includes information about the requested action, the date and time of\nthe action, request parameters, and so on. CloudTrail log files are not an ordered stack trace of the\npublic API calls, so they do not appear in any specific order. The following example shows a CloudTrail log entry that demonstrates the Create Vault (PUT\nvault), Delete Vault (DELETE vault), List Vaults (GET vaults), and Describe Vault (GET vault) actions. {\n\"Records\": [\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"52f8c821-002e-4549-857f-8193a15246fa\",\n\"eventName\": \"CreateVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"HJiLgvfXCY88QJAC6rRoexS9ThvI21Q1Nqukfly02hcUPPo\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 331\n\nAmazon S3 Glacier Developer Guide\n\"responseElements\": {\n\"location\": \"/999999999999/vaults/myVaultName\"\n},\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n},\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"cdd33060-4758-416a-b7b9-dafd3afcec90\",\n\"eventName\": \"DeleteVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"GGdw-VfhVfLCFwAM6iVUvMQ6-fMwSqSO9FmRd0eRSa_Fc7c\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\n\"responseElements\": null,\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n},\n{\n\"awsRegion\": \"us-east-1\",\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 332\n\nAmazon S3 Glacier Developer Guide\n\"eventID\": \"355750b4-e8b0-46be-9676-e786b1442470\",\n\"eventName\": \"ListVaults\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"yPTs22ghTsWprFivb-2u30FAaDALIZP17t4jM_xL9QJQyVA\",\n\"requestParameters\": {\n\"accountId\": \"-\"\n},\n\"responseElements\": null,\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n},\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"569e830e-b075-4444-a826-aa8b0acad6c7\",\n\"eventName\": \"DescribeVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"QRt1ZdFLGn0TCm784HmKafBmcB2lVaV81UU3fsOR3PtoIiM\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\n\"responseElements\": null,\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 333\n\nAmazon S3 Glacier Developer Guide\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n}\n]\n}\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 334\n\nAmazon S3 Glacier Developer Guide\nAPI Reference for Amazon S3 Glacier\nAmazon S3 Glacier supports a set of operations\u2014specifically, a set of RESTful API calls\u2014that\nenable you to interact with the service. You can use any programming library that can send HTTP requests to send your REST requests\nto S3 Glacier. When sending a REST request, S3 Glacier requires that you authenticate every\nrequest by signing the request. Additionally, when uploading an archive, you must also compute\nthe checksum of the payload and include it in your request. For more information, see Signing\nRequests. If an error occurs, you need to know what S3 Glacier sends in an error response so that you\ncan process it. This section provides all this information, in addition to documenting the REST\noperations, so that you can make REST API calls directly.",
      "start_idx": 532431,
      "end_idx": 537666,
      "metadata": {
        "num_sentences": 13,
        "num_words": 532,
        "breakpoint_idx": 3179,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32859518589117587,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "CloudTrail",
            "Amazon S3 Glacier",
            "Log File",
            "API Call",
            "RESTful API",
            "Signing Requests",
            "Checksum",
            "Error Response",
            "IAMUser",
            "vaultName"
          ],
          "entities": [
            "CloudTrail",
            "Amazon S3",
            "Amazon S3 Glacier",
            "IAMUser",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "CloudTrail Log Analysis",
          "secondary_categories": [
            "Amazon S3 Glacier API",
            "RESTful API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "CloudTrail"
          ],
          "mentioned_tools": [
            "aws-sdk-java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interpret Amazon CloudTrail log file entries for S3 Glacier, including examples of API calls like CreateVault, DeleteVault, ListVaults, and DescribeVault, along with details on REST API interaction and error handling for S3 Glacier operations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What information is included in CloudTrail log entries for S3 Glacier?",
            "How can I interpret specific API calls like CreateVault or DeleteVault in the logs?",
            "What steps are required to authenticate and handle errors when making REST API calls to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [CloudTrail Log Analysis]",
        "tf_idf_keywords": [
          "CloudTrail",
          "Checksum",
          "Amazon S3",
          "vaultName",
          "RESTful API",
          "Signing Requests",
          "Error Response",
          "Log File",
          "API Version 2012-06-01",
          "API Call",
          "Amazon S3 Glacier",
          "IAMUser"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_307",
      "text": "You can either use the REST API calls directly or use the Amazon SDKs that provide wrapper\nlibraries. These libraries sign each request you send and compute the checksum of the payload in\nyour request. Therefore, using the Amazon SDKs simplifies your coding task. This developer guide\nprovides working examples of basic S3 Glacier operations using the AWS SDK for Java and .NET. For\nmore information see, Using the AWS SDKs with Amazon S3 Glacier. Topics\n\u2022 Common Request Headers\n\u2022 Common Response Headers\n\u2022 Signing Requests\n\u2022 Computing Checksums\n\u2022 Error Responses\n\u2022 Vault Operations\n\u2022 Archive Operations\n\u2022 Multipart Upload Operations\n\u2022 Job Operations\n\u2022 Data Types Used in Job Operations\n\u2022 Data Retrieval Operations\nAPI Version 2012-06-01 335\n\nAmazon S3 Glacier Developer Guide\nCommon Request Headers\nAmazon S3 Glacier (S3 Glacier) REST requests include headers that contain basic information about\nthe request. The following table describes headers that can be used by all S3 Glacier REST requests. Header Name Description Required\nAuthorization The header that is required to sign requests. S3 Yes\nGlacier requires Signature Version 4. For more\ninformation, see Signing Requests. Type: String\nContent-Length The length of the request body (without the Conditional\nheaders). Type: String\nCondition: Required only for the Upload Archive\n(POST archive) API.",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32680262941302674,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "REST API",
            "Amazon SDKs",
            "S3 Glacier",
            "checksum",
            "request headers",
            "response headers",
            "Signing Requests",
            "Multipart Upload",
            "Vault Operations",
            "Job Operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Signature Version 4",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Operations",
          "secondary_categories": [
            "REST API Integration",
            "AWS SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use REST API calls or Amazon SDKs for S3 Glacier operations, highlighting request headers, checksum computation, and signing requirements for secure interactions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the common headers required for S3 Glacier REST API requests?",
            "How does using Amazon SDKs simplify S3 Glacier operations?",
            "What is the purpose of the Authorization header in S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier Operations]",
        "tf_idf_keywords": [
          "checksum",
          "AWS SDK for Java",
          "S3 Glacier",
          "response headers",
          "REST API",
          "Signing Requests",
          "Vault Operations",
          "Signature Version 4",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "request headers",
          "Job Operations",
          "Multipart Upload",
          "AWS SDK for .NET",
          "Amazon SDKs"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_308",
      "text": "Date The date that can be used to create the signature Conditional\ncontained in the Authorization header. If the\nDate header is to be used for signing it must be\nspecified in the ISO 8601 basic format. In this\ncase, the x-amz-date header is not needed. Note that when x-amz-date is present, it\nalways overrides the value of the Date header. If the Date header is not used for signing, it can\nbe one of the full date formats specified by RFC\n2616, section 3.3. For example, the following\ndate/time W ed, 10 Feb 2017 12:00:00\nGMT is a valid date/time header for use with S3\nGlacier. If you are using the Date header for signing, then\nit must be in the ISO 8601 basic YYYYMMDD'\nT'HHMMSS'Z' format. Common Request Headers API Version 2012-06-01 336\n\nAmazon S3 Glacier Developer Guide\nHeader Name Description Required\nType: String\nCondition: If Date is specified but is not in ISO\n8601 basic format, then you must also include\nthe x-amz-date header. If D ate is specified\nin ISO 8601 basic format, then this is sufficien\nt for signing requests and you do not need the\nx-amz-date header. For more information,\nsee Handling Dates in Signature Version 4 in the\nAmazon Web Services Glossary. Host This header specifies the service endpoint to Yes\nwhich you send your requests. The value must\nbe of the form \"glacier.region.amazonaw\ns.com \", where region is replaced with an AWS\nRegion designation such as u s-west-2 .",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 247,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45929371226917615,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Header Description",
              "Date Handling",
              "API Version"
            ]
          },
          "keywords": [
            "ISO 8601",
            "x-amz-date",
            "Date header",
            "RFC 2616",
            "S3 Glacier",
            "Signature Version 4",
            "Request Headers",
            "Host header",
            "AWS Region",
            "service endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ISO 8601 basic format",
            "RFC 2616 section 3.3",
            "Signature Version 4",
            "AWS Region designation"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Request Headers",
          "secondary_categories": [
            "Date and Time Formats",
            "AWS Signature Version 4"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the required formats and conditions for using the 'Date' and 'x-amz-date' headers when signing requests to Amazon S3 Glacier, including ISO 8601 and RFC 2616 formats. It also specifies the structure of the 'Host' header for service endpoints.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What date formats are valid for signing requests in Amazon S3 Glacier?",
            "When should the 'x-amz-date' header be included in a request?",
            "What is the correct format for the 'Host' header in Amazon S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Request Headers]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Host header",
          "x-amz-date",
          "Date header",
          "AWS Region",
          "AWS Region designation",
          "service endpoint",
          "RFC 2616 section 3.3",
          "RFC 2616",
          "Signature Version 4",
          "ISO 8601 basic format",
          "Amazon S3 Glacier",
          "Request Headers",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_309",
      "text": "Type: String\nx-amz-content-sha2 The computed SHA256 checksum of an entire Conditional\n56 payload that is uploaded with either Upload\nArchive (POST archive) or Upload Part (PUT\nuploadID). This header is not the same as the x-\namz-sha256-tree-hash header, though,\nfor some small payloads the values are the same. When x -amz-content-sha256 is required,\nboth x-amz-content-sha256 and x -amz-\nsha256-tree-hash must be specified. Type: String\nCondition: Required for streaming API, Upload\nArchive (POST archive) and Upload Part (PUT\nuploadID). Common Request Headers API Version 2012-06-01 337\n\nAmazon S3 Glacier Developer Guide\nHeader Name Description Required\nx-amz-date The date used to create the signature in the Conditional\nAuthorization header. The format must be ISO\n8601 basic in the YYYYMMDD'T'HHMMSS'Z'\nformat. For example, the following date/time\n20170210T120000Z is a valid x -amz-date\nfor use with S3 Glacier. Type: String\nCondition: x-amz-date is optional for all\nrequests; it can be used to override the date\nused for signing requests. If the Date header is\nspecified in the ISO 8601 basic format, then x -\namz-date is not needed. When x-amz-date\nis present, it always overrides the value of the\nDate header. For more information, see Handling\nDates in Signature Version 4 in the Amazon Web\nServices Glossary. x-amz-glacier-vers The S3 Glacier API version to use.",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35200327092950995,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Header Description",
              "API Versioning",
              "Checksum Explanation"
            ]
          },
          "keywords": [
            "x-amz-content-sha256",
            "x-amz-sha256-tree-hash",
            "ISO 8601",
            "Upload Archive",
            "Upload Part",
            "x-amz-date",
            "S3 Glacier",
            "Signature Version 4",
            "Checksum",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-content-sha256",
            "x-amz-date",
            "x-amz-sha256-tree-hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "HTTP Headers",
          "secondary_categories": [
            "API Authentication",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the x-amz-content-sha256 and x-amz-date headers used in Amazon S3 Glacier requests, including their formats, conditions, and differences from other headers.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What is the purpose of the x-amz-content-sha256 header in S3 Glacier?",
            "When is the x-amz-date header required in S3 Glacier API requests?",
            "How does x-amz-content-sha256 differ from x-amz-sha256-tree-hash?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [HTTP Headers]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Checksum",
          "x-amz-date",
          "Upload Part",
          "x-amz-sha256-tree-hash",
          "Signature Version 4",
          "x-amz-content-sha256",
          "API Version 2012-06-01",
          "Upload Archive",
          "Amazon S3 Glacier",
          "API Version",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_310",
      "text": "The current Yes\nion version is 2012-06-01 . Type: String\nx-amz-sha256-tree- The computed SHA256 tree-hash checksum for an Conditional\nhash uploaded archive (Upload Archive (POST archive))\nor archive part (Upload Part (PUT uploadID)\n). For more information about calculating this\nchecksum, see Computing Checksums. Type: String\nDefault: None\nCondition: Required for Upload Archive (POST\narchive) and Upload Part (PUT uploadID). Common Request Headers API Version 2012-06-01 338\n\nAmazon S3 Glacier Developer Guide\nCommon Response Headers\nThe following table describes response headers that are common to most API responses. Name Description\nContent-L The length in bytes of the response body. ength\nType: String\nDate The date and time Amazon S3 Glacier (S3 Glacier) responded, for example,\nWed, 10 Feb 2017 12:00:00 GMT. The format of the date must be\none of the full date formats specified by RFC 2616, section 3.3. Note that\nDate returned may drift slightly from other dates, so for example, the date\nreturned from an Upload Archive (POST archive) request may not match\nthe date shown for the archive in an inventory list for the vault. Type: String\nx-amzn-Re A value created by S3 Glacier that uniquely identifies your request. In the\nquestId event that you have a problem with S3 Glacier, AWS can use this value to\ntroubleshoot the problem. It is recommended that you log these values.",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23161995049678918,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Headers",
              "Checksum Calculation",
              "Date Formats"
            ]
          },
          "keywords": [
            "x-amz-sha256-tree-hash",
            "Upload Archive",
            "Upload Part",
            "RFC 2616",
            "Common Request Headers",
            "Common Response Headers",
            "Content-Length",
            "Checksum",
            "API Version",
            "x-amzn-RequestId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "RFC 2616",
            "Upload Archive (POST archive)",
            "Upload Part (PUT uploadID)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Checksum Calculation",
            "HTTP Headers"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the Amazon S3 Glacier API, including versioning, required headers, checksum calculations, and common request and response headers for various operations.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What is the required condition for using the x-amz-sha256-tree-hash header?",
            "How is the 'Date' header formatted in Amazon S3 Glacier responses?",
            "What is the purpose of the x-amzn-RequestId header in troubleshooting?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Checksum",
          "Common Request Headers",
          "Upload Part",
          "x-amzn-RequestId",
          "Upload Part (PUT uploadID)",
          "x-amz-sha256-tree-hash",
          "Upload Archive (POST archive)",
          "RFC 2616",
          "Common Response Headers",
          "Upload Archive",
          "Content-Length",
          "Amazon S3 Glacier",
          "SHA256",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_311",
      "text": "Type: String\nx-amz-sha The SHA256 tree-hash checksum of the archive or inventory body. For\n256-tree- more information about calculating this checksum, see Computing\nhash Checksums. Type: String\nSigning Requests\nS3 Glacier requires that you authenticate every request you send by signing the request. To sign a\nrequest, you calculate a digital signature using a cryptographic hash function. A cryptographic hash\nis a function that returns a unique hash value based on the input. The input to the hash function\nincludes the text of your request and your secret access key. The hash function returns a hash value\nCommon Response Headers API Version 2012-06-01 339\n\nAmazon S3 Glacier Developer Guide\nthat you include in the request as your signature. The signature is part of the Authorization\nheader of your request. After receiving your request, S3 Glacier recalculates the signature using the same hash function\nand input that you used to sign the request. If the resulting signature matches the signature in the\nrequest, S3 Glacier processes the request. Otherwise, the request is rejected. S3 Glacier supports authentication using AWS Signature Version 4.",
      "start_idx": 543196,
      "end_idx": 546138,
      "metadata": {
        "num_sentences": 12,
        "num_words": 181,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39010261766838306,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "Checksum",
              "Cryptographic Hash",
              "Request Signing"
            ]
          },
          "keywords": [
            "SHA256",
            "tree-hash checksum",
            "S3 Glacier",
            "digital signature",
            "cryptographic hash",
            "Authorization header",
            "AWS Signature Version 4",
            "secret access key",
            "request signing",
            "API Version 2012-06-01"
          ],
          "entities": [
            "x-amz-sha256-tree-hash",
            "S3 Glacier",
            "AWS Signature Version 4",
            "Authorization header",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Authentication",
          "secondary_categories": [
            "Cryptographic Hashing",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to calculate and use SHA256 tree-hash checksums for archives and inventory bodies in Amazon S3 Glacier, and details the authentication process using AWS Signature Version 4 for signing requests.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a SHA256 tree-hash checksum for S3 Glacier archives?",
            "What is the process for signing requests to authenticate with S3 Glacier?",
            "How does S3 Glacier validate the signature in a request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Authentication]",
        "tf_idf_keywords": [
          "digital signature",
          "Authorization header",
          "request signing",
          "S3 Glacier",
          "tree-hash checksum",
          "secret access key",
          "AWS Signature Version 4",
          "cryptographic hash",
          "x-amz-sha256-tree-hash",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "SHA256"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_312",
      "text": "The process for calculating a\nsignature can be broken into three tasks:\n\u2022 Task 1: Create a Canonical Request\nRearrange your HTTP request into a canonical format. Using a canonical form is necessary\nbecause S3 Glacier uses the same canonical form when it recalculates a signature to compare\nwith the one you sent. \u2022 Task 2: Create a String to Sign\nCreate a string that you will use as one of the input values to your cryptographic hash function. The string, called the string to sign, is a concatenation of the name of the hash algorithm, the\nrequest date, a credential scope string, and the canonicalized request from the previous task. The\ncredential scope string itself is a concatenation of date, AWS Region, and service information. \u2022 Task 3: Create a Signature\nCreate a signature for your request by using a cryptographic hash function that accepts two\ninput strings: your string to sign and a derived key. The derived key is calculated by starting with\nyour secret access key and using the credential scope string to create a series of hash-based\nmessage authentication codes (HMACs). Note that the hash function used in this signing step is\nnot the tree-hash algorithm used in S3 Glacier APIs that upload data. Topics\n\u2022 Example Signature Calculation\n\u2022 Calculating Signatures for the Streaming Operations\nSigning Requests API Version 2012-06-01 340\n\nAmazon S3 Glacier Developer Guide\nExample Signature Calculation\nThe following example walks you through the details of creating a signature for Create Vault (PUT\nvault). The example could be used as a reference to check your signature calculation method. For\nmore information, see Signing AWS API requests in the IAM User Guide. The example assumes the following:\n\u2022 The time stamp of the request is Fri, 25 May 2012 00:24:53 GMT.",
      "start_idx": 543196,
      "end_idx": 546138,
      "metadata": {
        "num_sentences": 12,
        "num_words": 297,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3646410450790868,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Example"
            ]
          },
          "keywords": [
            "signature",
            "canonical request",
            "string to sign",
            "cryptographic hash function",
            "HMAC",
            "credential scope string",
            "derived key",
            "S3 Glacier",
            "tree-hash algorithm",
            "API requests"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Region",
            "IAM User Guide",
            "Create Vault",
            "PUT vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Signature Calculation",
          "secondary_categories": [
            "Cryptographic Hash Functions",
            "AWS API Request Signing"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of calculating a signature for AWS S3 Glacier requests, detailing three key tasks: creating a canonical request, generating a string to sign, and producing a cryptographic signature using HMACs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a signature for an AWS S3 Glacier request?",
            "What is the process for creating a canonical request in AWS S3 Glacier?",
            "What inputs are required to generate a cryptographic signature for AWS API requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Signature Calculation]",
        "tf_idf_keywords": [
          "string to sign",
          "tree-hash algorithm",
          "S3 Glacier",
          "AWS Region",
          "Create Vault",
          "cryptographic hash function",
          "IAM",
          "derived key",
          "PUT vault",
          "HMAC",
          "signature",
          "API requests",
          "canonical request",
          "IAM User Guide",
          "credential scope string"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_313",
      "text": "\u2022 The endpoint is US East (N. Virginia) Region us-east-1. The general request syntax (including the JSON body) is:\nPUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Fri, 25 May 2012 00:24:53 GMT\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is:\nPUT\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-date:20120525T002453Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-date;x-amz-glacier-version\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nThe last line of the canonical request is the hash of the request body. Also, note the empty third\nline in the canonical request. This is because there are no query parameters for this API. The string to sign for Task 2: Create a String to Sign is:\nAWS4-HMAC-SHA256\n20120525T002453Z\nExample Signature Calculation API Version 2012-06-01 341\n\nAmazon S3 Glacier Developer Guide\n20120525/us-east-1/glacier/aws4_request\n5f1da1a2d0feb614dd03d71e87928b8e449ac87614479332aced3a701f916743\nThe first line of the string to sign is the algorithm, the second line is the time stamp, the third line\nis the credential scope, and the last line is a hash of the canonical request from Task 1: Create a\nCanonical Request. The service name to use in the credential scope is glacier. For Task 3: Create a Signature, the derived key can be represented as:\nderived key = HMAC(HMAC(HMAC(HMAC(\"AWS4\" + YourSecretAccessKey,\"20120525\"),\"us-\neast-1\"),\"glacier\"),\"aws4_request\")\nIf the secret access key, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY, is used, then the\ncalculated signature is:\n3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nThe final step is to construct the Authorization header. For the demonstration access key\nAKIAIOSFODNN7EXAMPLE, the header (with line breaks added for readability) is:\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/us-east-1/\nglacier/aws4_request,\nSignedHeaders=host;x-amz-date;x-amz-glacier-version,\nSignature=3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nCalculating Signatures for the Streaming Operations\nUpload Archive (POST archive) and Upload Part (PUT uploadID) are streaming operations that\nrequire you to include an additional header x-amz-content-sha256 when signing and sending\nyour request. The signing steps for the streaming operations are exactly the same as those for\nother operations, with the addition of the streaming header. The calculation of the streaming header x-amz-content-sha256 is based on the SHA256 hash\nof the entire content (payload) that is to be uploaded.",
      "start_idx": 546139,
      "end_idx": 550705,
      "metadata": {
        "num_sentences": 10,
        "num_words": 318,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3237065209282769,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request Signing",
              "Authorization Header Construction",
              "Streaming Operations"
            ]
          },
          "keywords": [
            "AWS4-HMAC-SHA256",
            "canonical request",
            "string to sign",
            "signature calculation",
            "x-amz-glacier-version",
            "x-amz-content-sha256",
            "credential scope",
            "derived key",
            "Authorization header",
            "SHA256 hash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "us-east-1",
            "AWS4",
            "AKIAIOSFODNN7EXAMPLE",
            "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Signature Calculation",
          "secondary_categories": [
            "API Request Signing",
            "Cloud Storage Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to calculate and construct AWS Signature Version 4 for Amazon S3 Glacier API requests, including canonical requests, string-to-sign, derived keys, and authorization headers, with additional details for streaming operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate the AWS Signature Version 4 for Amazon S3 Glacier API requests?",
            "What is the structure of the canonical request and string-to-sign for Glacier API?",
            "How is the x-amz-content-sha256 header calculated for streaming operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Signature Calculation]",
        "tf_idf_keywords": [
          "signature calculation",
          "string to sign",
          "credential scope",
          "Authorization header",
          "us-east-1",
          "AKIAIOSFODNN7EXAMPLE",
          "x-amz-glacier-version",
          "derived key",
          "SHA256 hash",
          "x-amz-content-sha256",
          "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
          "canonical request",
          "AWS4-HMAC-SHA256",
          "Amazon S3 Glacier",
          "AWS4"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_314",
      "text": "Note that this calculation is different from\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 342\n\nAmazon S3 Glacier Developer Guide\nthe SHA256 tree hash (Computing Checksums). Besides trivial cases, the SHA 256 hash value of the\npayload data will be different from the SHA256 tree hash of the payload data. If the payload data is specified as a byte array, you can use the following Java code snippet to\ncalculate the SHA256 hash. public static byte[] computePayloadSHA256Hash2(byte[] payload) throws\nNoSuchAlgorithmException, IOException {\nBufferedInputStream bis =\nnew BufferedInputStream(new ByteArrayInputStream(payload));\nMessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\nbyte[] buffer = new byte[4096];\nint bytesRead = -1;\nwhile ( (bytesRead = bis.read(buffer, 0, buffer.length)) != -1 ) {\nmessageDigest.update(buffer, 0, bytesRead);\n}\nreturn messageDigest.digest();\n}\nSimilarly, in C# you can calculate the SHA256 hash of the payload data as shown in the following\ncode snippet. public static byte[] CalculateSHA256Hash(byte[] payload)\n{\nSHA256 sha256 = System.Security.Cryptography.SHA256.Create();\nbyte[] hash = sha256.ComputeHash(payload);\nreturn hash;\n}\nExample Signature Calculation for Streaming API\nThe following example walks you through the details of creating a signature for Upload Archive\n(POST archive), one of the two streaming APIs in S3 Glacier. The example assumes the following:\n\u2022 The time stamp of the request is Mon, 07 May 2012 00:00:00 GMT. \u2022 The endpoint is the US East (N. Virginia) Region, us-east-1. \u2022 The content payload is a string \"Welcome to S3 Glacier.\" Calculating Signatures for the Streaming Operations API Version 2012-06-01 343\n\nAmazon S3 Glacier Developer Guide\nThe general request syntax (including the JSON body) is shown in the example below. Note that\nthe x-amz-content-sha256 header is included.",
      "start_idx": 546139,
      "end_idx": 550705,
      "metadata": {
        "num_sentences": 10,
        "num_words": 267,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37216199239095055,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Hash Calculation",
              "Signature Generation",
              "Code Snippets"
            ]
          },
          "keywords": [
            "SHA256",
            "tree hash",
            "payload data",
            "signature calculation",
            "streaming API",
            "S3 Glacier",
            "POST archive",
            "x-amz-content-sha256",
            "Java",
            "C#"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "Streaming Operations API",
            "US East (N. Virginia) Region",
            "MessageDigest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cryptographic Hashing",
          "secondary_categories": [
            "API Signature Calculation",
            "Programming Code Examples"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute the SHA256 hash of payload data in Java and C#, and provides an example of creating a signature for the S3 Glacier Streaming API's Upload Archive operation.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I calculate the SHA256 hash of payload data in Java?",
            "How can I calculate the SHA256 hash of payload data in C#?",
            "What is the process for creating a signature for the S3 Glacier Streaming API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cryptographic Hashing]",
        "tf_idf_keywords": [
          "signature calculation",
          "S3 Glacier",
          "payload data",
          "tree hash",
          "Streaming Operations API",
          "streaming API",
          "Java",
          "x-amz-content-sha256",
          "POST archive",
          "MessageDigest",
          "Amazon S3 Glacier",
          "US East (N. Virginia) Region",
          "SHA256",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_315",
      "text": "In this simplified example, the x-amz-sha256-\ntree-hash and x-amz-content-sha256 are the same value. However, for archive uploads\ngreater than 1 MB, this is not the case. POST /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Mon, 07 May 2012 00:00:00 GMT\nx-amz-archive-description: my archive\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 payload hash\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is shown\nbelow. Note that the streaming header x-amz-content-sha256 is included with its value. This\nmeans you must read the payload and calculate the SHA256 hash first and then compute the\nsignature. POST\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-date:20120507T000000Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-content-sha256;x-amz-date;x-amz-glacier-version\n726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nThe remainder of the signature calculation follows the steps outlined in Example Signature\nCalculation. The Authorization header using the secret access key wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY and the access key AKIAIOSFODNN7EXAMPLE is shown below (with line\nbreaks added for readability):\nAuthorization=AWS4-HMAC-SHA256\nCredential=AKIAIOSFODNN7EXAMPLE/20120507/us-east-1/glacier/aws4_request,\nSignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-glacier-version,\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 344\n\nAmazon S3 Glacier Developer Guide\nSignature=b092397439375d59119072764a1e9a144677c43d9906fd98a5742c57a2855de6\nComputing Checksums\nWhen uploading an archive, you must include both the x-amz-sha256-tree-hash and x-\namz-content-sha256 headers. The x-amz-sha256-tree-hash header is a checksum of the\npayload in your request body.",
      "start_idx": 550706,
      "end_idx": 552681,
      "metadata": {
        "num_sentences": 8,
        "num_words": 193,
        "breakpoint_idx": 3279,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4273219789777483,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "Authorization",
            "SHA256",
            "Canonical Request",
            "AWS4-HMAC-SHA256",
            "SignedHeaders",
            "Checksum",
            "Streaming Operations",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "AWS4-HMAC-SHA256",
            "Amazon S3 Glacier",
            "Authorization header"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Signature Calculation",
          "secondary_categories": [
            "Checksum Computation",
            "API Request Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to compute and include SHA256 checksums for archive uploads to Amazon S3 Glacier, detailing the use of x-amz-sha256-tree-hash and x-amz-content-sha256 headers, and the process for creating a canonical request and signature for authentication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate the x-amz-sha256-tree-hash and x-amz-content-sha256 headers for an Amazon S3 Glacier archive upload?",
            "What steps are involved in creating a canonical request for Amazon S3 Glacier?",
            "How is the Authorization header computed for streaming operations in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Signature Calculation]",
        "tf_idf_keywords": [
          "Authorization header",
          "SignedHeaders",
          "Checksum",
          "x-amz-sha256-tree-hash",
          "Canonical Request",
          "x-amz-content-sha256",
          "AWS4-HMAC-SHA256",
          "Streaming Operations",
          "SHA256",
          "Amazon S3 Glacier",
          "Authorization"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_316",
      "text": "This topic describes how to calculate the x-amz-sha256-tree-\nhash header. The x-amz-content-sha256 header is a hash of the entire payload and is required\nfor authorization. For more information, see Example Signature Calculation for Streaming API. The payload of your request can be an:\n\u2022 Entire archive\u2014 When uploading an archive in a single request using the Upload Archive API,\nyou send the entire archive in the request body. In this case, you must include the checksum of\nthe entire archive. \u2022 Archive part\u2014 When uploading an archive in parts using the multipart upload API, you send\nonly a part of the archive in the request body. In this case, you include the checksum of the\narchive part. And after you upload all the parts, you send a Complete Multipart Upload request,\nwhich must include the checksum of the entire archive. The checksum of the payload is a SHA-256 tree hash. It is called a tree hash because in the process\nof computing the checksum you compute a tree of SHA-256 hash values. The hash value at the\nroot is the checksum for the entire archive. Note\nThis section describes a way to compute the SHA-256 tree hash.",
      "start_idx": 552682,
      "end_idx": 554734,
      "metadata": {
        "num_sentences": 12,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4247576395670573,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Authorization",
              "Checksum Calculation",
              "Tree Hash"
            ]
          },
          "keywords": [
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "SHA-256",
            "tree hash",
            "checksum",
            "archive",
            "multipart upload",
            "Complete Multipart Upload",
            "Streaming API",
            "Upload Archive API"
          ],
          "entities": [
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "Upload Archive API",
            "multipart upload API",
            "Complete Multipart Upload"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Checksum Calculation",
          "secondary_categories": [
            "API Authorization",
            "Multipart Uploads"
          ],
          "mentioned_services": [
            "Upload Archive API",
            "Multipart Upload API",
            "Streaming API"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to calculate the x-amz-sha256-tree-hash header and details the use of SHA-256 tree hash for payload checksums in single and multipart archive uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate the x-amz-sha256-tree-hash header for my request?",
            "What is the difference between checksums for single and multipart archive uploads?",
            "What is a SHA-256 tree hash and how is it computed?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity and Checksum Calculation]",
        "tf_idf_keywords": [
          "checksum",
          "Complete Multipart Upload",
          "archive",
          "tree hash",
          "Multipart Upload API",
          "SHA-256",
          "x-amz-sha256-tree-hash",
          "x-amz-content-sha256",
          "Upload Archive API",
          "Streaming API",
          "multipart upload API",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_317",
      "text": "However, you may use any\nprocedure as long as it produces the same result. You compute the SHA-256 tree hash as follows:\n1. For each 1 MB chunk of payload data, compute the SHA-256 hash. The last chunk of data can be\nless than 1 MB. For example, if you are uploading a 3.2 MB archive, you compute the SHA-256\nComputing Checksums API Version 2012-06-01 345\n\nAmazon S3 Glacier Developer Guide\nhash values for each of the first three 1 MB chunks of data, and then compute the SHA-256 hash\nof the remaining 0.2 MB data. These hash values form the leaf nodes of the tree. 2. Build the next level of the tree. a. Concatenate two consecutive child node hash values and compute the SHA-256 hash of the\nconcatenated hash values. This concatenation and generation of the SHA-256 hash produces\na parent node for the two child nodes. b. If only one child node remains, promote that hash value to the next level in the tree. 3.",
      "start_idx": 552682,
      "end_idx": 554734,
      "metadata": {
        "num_sentences": 13,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2439900422707582,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Hash Computation",
              "Tree Structure"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "payload data",
            "1 MB chunk",
            "leaf nodes",
            "parent nodes",
            "child nodes",
            "hash values",
            "concatenation",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Computing Checksums API",
            "SHA-256 tree hash",
            "Developer Guide",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Hashing Algorithms",
          "secondary_categories": [
            "Data Integrity",
            "Tree Structures"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to compute a SHA-256 tree hash by processing 1 MB chunks of data, forming leaf nodes, and recursively building parent nodes through hash concatenation until a single root hash is produced.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a SHA-256 tree hash for data chunks?",
            "What happens if a data chunk is smaller than 1 MB?",
            "How are parent nodes created in a SHA-256 tree hash?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Hashing Algorithms]",
        "tf_idf_keywords": [
          "Computing Checksums API",
          "leaf nodes",
          "payload data",
          "archive",
          "tree hash",
          "SHA-256",
          "hash values",
          "SHA-256 tree hash",
          "concatenation",
          "API Version 2012-06-01",
          "child nodes",
          "parent nodes",
          "Amazon S3 Glacier",
          "Developer Guide",
          "1 MB chunk"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_318",
      "text": "Repeat step 2 until the resulting tree has a root. The root of the tree provides a hash of the\nentire archive and a root of the appropriate subtree provides the hash for the part in a multipart\nupload. Topics\n\u2022 Tree Hash Example 1: Uploading an archive in a single request\n\u2022 Tree Hash Example 2: Uploading an archive using a multipart upload\n\u2022 Computing the Tree Hash of a File\n\u2022 Receiving Checksums When Downloading Data\nTree Hash Example 1: Uploading an archive in a single request\nWhen you upload an archive in a single request using the Upload Archive API (see Upload Archive\n(POST archive)), the request payload includes the entire archive. Accordingly, you must include\nthe tree hash of the entire archive in the x-amz-sha256-tree-hash request header. Suppose\nyou want to upload a 6.5 MB archive. The following diagram illustrates the process of creating\nthe SHA-256 hash of the archive. You read the archive and compute the SHA-256 hash for each\n1 MB chunk. You also compute the hash for the remaining 0.5 MB data and then build the tree as\noutlined in the preceding procedure. Tree Hash Example 1: Uploading an archive in a single request API Version 2012-06-01 346\n\nAmazon S3 Glacier Developer Guide\nTree Hash Example 2: Uploading an archive using a multipart upload\nThe process of computing the tree hash when uploading an archive using multipart upload is the\nsame when uploading the archive in a single request. The only difference is that in a multipart\nupload you upload only a part of the archive in each request (using the Upload Part (PUT uploadID)\nAPI), and therefore you provide the checksum of only the part in the x-amz-sha256-tree-hash\nrequest header.",
      "start_idx": 554735,
      "end_idx": 560683,
      "metadata": {
        "num_sentences": 10,
        "num_words": 288,
        "chunk_type": "semantic_split",
        "coherence_score": 0.48318570454915366,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Tree Hash",
            "SHA-256",
            "archive",
            "multipart upload",
            "checksum",
            "x-amz-sha256-tree-hash",
            "Upload Archive API",
            "Upload Part API",
            "hash computation",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Tree Hash",
            "SHA-256",
            "Amazon S3 Glacier",
            "Upload Archive API",
            "Upload Part API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Checksums",
          "secondary_categories": [
            "File Upload Processes",
            "Hashing Algorithms"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA-256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute and use tree hashes for verifying data integrity during single or multipart uploads in Amazon S3 Glacier. It includes examples and procedures for generating SHA-256 hashes for archives and their parts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute the tree hash for a single archive upload in Amazon S3 Glacier?",
            "What is the process for generating tree hashes in multipart uploads?",
            "What header should include the tree hash during an archive upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity and Checksums]",
        "tf_idf_keywords": [
          "checksum",
          "archive",
          "hash computation",
          "SHA-256",
          "Upload Part API",
          "x-amz-sha256-tree-hash",
          "Tree Hash",
          "Upload Archive API",
          "Amazon S3 Glacier",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_319",
      "text": "However, after you upload all parts, you must send the Complete Multipart Upload\n(see Complete Multipart Upload (POST uploadID)) request with a tree hash of the entire archive in\nthe x-amz-sha256-tree-hash request header. Tree Hash Example 2: Uploading an archive using a multipart upload API Version 2012-06-01 347\n\nAmazon S3 Glacier Developer Guide\nComputing the Tree Hash of a File\nThe algorithms shown here are selected for demonstration purposes. You can optimize the code\nas needed for your implementation scenario. If you are using an Amazon SDK to program against\nAmazon S3 Glacier (S3 Glacier), the tree hash calculation is done for you and you only need to\nprovide the file reference. Example 1: Java Example\nThe following example shows how to calculate the SHA256 tree hash of a file using Java. You\ncan run this example by either supplying a file location as an argument or you can use the\nTreeHashExample.computeSHA256TreeHash method directly from your code. import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nComputing the Tree Hash of a File API Version 2012-06-01 348\n\nAmazon S3 Glacier Developer Guide\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\npublic class TreeHashExample {\nstatic final int ONE_MB = 1024 * 1024;\n/**\n* Compute the Hex representation of the SHA-256 tree hash for the specified\n* File\n*\n* @param args\n* args[0]: a file to compute a SHA-256 tree hash for\n*/\npublic static void main(String[] args) {\nif (args.length < 1) {\nSystem.err.println(\"Missing required filename argument\");\nSystem.exit(-1);\n}\nFile inputFile = new File(args[0]);\ntry {\nbyte[] treeHash = computeSHA256TreeHash(inputFile);\nSystem.out.printf(\"SHA-256 Tree Hash = %s\\n\", toHex(treeHash));\n} catch (IOException ioe) {\nSystem.err.format(\"Exception when reading from file %s: %s\", inputFile,\nioe.getMessage());\nSystem.exit(-1);\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256: %s\",\nnsae.getMessage());\nSystem.exit(-1);\n}\n}\n/**\n* Computes the SHA-256 tree hash for the given file\n*\n* @param inputFile\n* a File to compute the SHA-256 tree hash for\nComputing the Tree Hash of a File API Version 2012-06-01 349\n\nAmazon S3 Glacier Developer Guide\n* @return a byte[] containing the SHA-256 tree hash\n* @throws IOException\n* Thrown if there's an issue reading the input file\n* @throws NoSuchAlgorithmException\n*/\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB. *\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1 MB chunk\n* @throws IOException\n* Thrown if there's an IOException when reading the file\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nComputing the Tree Hash of a File API Version 2012-06-01 350\n\nAmazon S3 Glacier Developer Guide\nint bytesRead;\nint idx = 0;\nint offset = 0;\nwhile ((bytesRead = fileStream.read(buff, offset, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\noffset += bytesRead;\n}\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums. *\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level.",
      "start_idx": 554735,
      "end_idx": 560683,
      "metadata": {
        "num_sentences": 10,
        "num_words": 627,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40199305216471354,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "multipart upload",
            "Amazon S3 Glacier",
            "MessageDigest",
            "Java",
            "checksum",
            "file chunks",
            "API Version 2012-06-01",
            "x-amz-sha256-tree-hash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "TreeHashExample",
            "MessageDigest",
            "SHA-256",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Hashing and Cryptographic Algorithms",
          "secondary_categories": [
            "File Processing",
            "Cloud Storage APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "MessageDigest"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute the SHA-256 tree hash of a file, particularly in the context of Amazon S3 Glacier multipart uploads, using a Java example implementation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute the SHA-256 tree hash for a file in Java?",
            "What is the purpose of the SHA-256 tree hash in Amazon S3 Glacier multipart uploads?",
            "How can I handle exceptions when calculating a SHA-256 tree hash in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Hashing and Cryptographic Algorithms]",
        "tf_idf_keywords": [
          "checksum",
          "TreeHashExample",
          "tree hash",
          "SHA-256",
          "Java",
          "file chunks",
          "x-amz-sha256-tree-hash",
          "API Version 2012-06-01",
          "MessageDigest",
          "Amazon S3 Glacier",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_320",
      "text": "Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level. *\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\nComputing the Tree Hash of a File API Version 2012-06-01 351\n\nAmazon S3 Glacier Developer Guide\npublic static byte[] computeSHA256TreeHash(byte[][] chunkSHA256Hashes)\nthrows NoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.length > 1) {\nint len = prevLvlHashes.length / 2;\nif (prevLvlHashes.length % 2 != 0) {\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.length; i = i + 2, j++) {\n// If there are at least two elements remaining\nif (prevLvlHashes.length - i > 1) {\n// Calculate a digest of the concatenated nodes\nmd.reset();\nmd.update(prevLvlHashes[i]);\nmd.update(prevLvlHashes[i + 1]);\ncurrLvlHashes[j] = md.digest();\n} else { // Take care of remaining odd chunk\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*\n* @param data\n* a byte[] to convert to Hex characters\nComputing the Tree Hash of a File API Version 2012-06-01 352\n\nAmazon S3 Glacier Developer Guide\n* @return A String containing Hex characters\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (int i = 0; i < data.length; i++) {\nString hex = Integer.toHexString(data[i] & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero. sb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\nExample 2: C# .NET Example\nThe following example shows how to calculate the SHA256 tree hash of a file. You can run this\nexample by supplying a file location as an argument. using System;\nusing System.IO;\nusing System.Security.Cryptography;\nnamespace ExampleTreeHash\n{\nclass Program\n{\nstatic int ONE_MB = 1024 * 1024;\n/**\n* Compute the Hex representation of the SHA-256 tree hash for the\n* specified file\n*\n* @param args\n* args[0]: a file to compute a SHA-256 tree hash for\n*/\npublic static void Main(string[] args)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 353\n\nAmazon S3 Glacier Developer Guide\nif (args.Length < 1)\n{\nConsole.WriteLine(\"Missing required filename argument\");\nEnvironment.Exit(-1);\n}\nFileStream inputFile = File.Open(args[0], FileMode.Open, FileAccess.Read);\ntry\n{\nbyte[] treeHash = ComputeSHA256TreeHash(inputFile);\nConsole.WriteLine(\"SHA-256 Tree Hash = {0}\",\nBitConverter.ToString(treeHash).Replace(\"-\", \"\").ToLower());\nConsole.ReadLine();\nEnvironment.Exit(-1);\n}\ncatch (IOException ioe)\n{\nConsole.WriteLine(\"Exception when reading from file {0}: {1}\",\ninputFile, ioe.Message);\nConsole.ReadLine();\nEnvironment.Exit(-1);\n}\ncatch (Exception e)\n{\nConsole.WriteLine(\"Cannot locate MessageDigest algorithm for SHA-256:\n{0}\",\ne.Message);\nConsole.WriteLine(e.GetType());\nConsole.ReadLine();\nEnvironment.Exit(-1);\n}\nConsole.ReadLine();\n}\n/**\n* Computes the SHA-256 tree hash for the given file\n*\n* @param inputFile\n* A file to compute the SHA-256 tree hash for\n* @return a byte[] containing the SHA-256 tree hash\n*/\npublic static byte[] ComputeSHA256TreeHash(FileStream inputFile)\n{\nbyte[][] chunkSHA256Hashes = GetChunkSHA256Hashes(inputFile);\nComputing the Tree Hash of a File API Version 2012-06-01 354\n\nAmazon S3 Glacier Developer Guide\nreturn ComputeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB.",
      "start_idx": 560684,
      "end_idx": 564674,
      "metadata": {
        "num_sentences": 7,
        "num_words": 577,
        "breakpoint_idx": 3331,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2926035381498791,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "SHA-256",
            "Tree Hash",
            "MessageDigest",
            "byte[]",
            "hexadecimal",
            "FileStream",
            "checksum",
            "hash computation",
            "chunk",
            "C# .NET"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MessageDigest",
            "SHA-256",
            "FileStream",
            "System.Security.Cryptography"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cryptographic Hashing",
          "secondary_categories": [
            "File Processing",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "C# .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute the SHA-256 tree hash for a file, including Java and C# examples, and provides helper methods for processing chunk hashes and converting them to hexadecimal format.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute the SHA-256 tree hash of a file in Java?",
            "What is the process for handling odd chunks when computing a tree hash?",
            "How can I calculate the SHA-256 tree hash using C#?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cryptographic Hashing]",
        "tf_idf_keywords": [
          "checksum",
          "hexadecimal",
          "C# .NET",
          "chunk",
          "hash computation",
          "SHA-256",
          "FileStream",
          "Tree Hash",
          "byte[]",
          "MessageDigest",
          "Amazon S3 Glacier",
          "System.Security.Cryptography"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_321",
      "text": "*\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1MB chunk\n*/\npublic static byte[][] GetChunkSHA256Hashes(FileStream file)\n{\nlong numChunks = file.Length / ONE_MB;\nif (file.Length % ONE_MB > 0)\n{\nnumChunks++;\n}\nif (numChunks == 0)\n{\nreturn new byte[][] { CalculateSHA256Hash(null, 0) };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int)numChunks][];\ntry\n{\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = file.Read(buff, 0, ONE_MB)) > 0)\n{\nchunkSHA256Hashes[idx++] = CalculateSHA256Hash(buff, bytesRead);\n}\nreturn chunkSHA256Hashes;\n}\nfinally\n{\nif (file != null)\n{\ntry\nComputing the Tree Hash of a File API Version 2012-06-01 355\n\nAmazon S3 Glacier Developer Guide\n{\nfile.Close();\n}\ncatch (IOException ioe)\n{\nthrow ioe;\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1MB chunk\n* checksums. *\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level. Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level. *\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n*/\npublic static byte[] ComputeSHA256TreeHash(byte[][] chunkSHA256Hashes)\n{\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.GetLength(0) > 1)\n{\nint len = prevLvlHashes.GetLength(0) / 2;\nif (prevLvlHashes.GetLength(0) % 2 != 0)\n{\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.GetLength(0); i = i + 2, j++)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 356\n\nAmazon S3 Glacier Developer Guide\n// If there are at least two elements remaining\nif (prevLvlHashes.GetLength(0) - i > 1)\n{\n// Calculate a digest of the concatenated nodes\nbyte[] firstPart = prevLvlHashes[i];\nbyte[] secondPart = prevLvlHashes[i + 1];\nbyte[] concatenation = new byte[firstPart.Length +\nsecondPart.Length];\nSystem.Buffer.BlockCopy(firstPart, 0, concatenation, 0,\nfirstPart.Length);\nSystem.Buffer.BlockCopy(secondPart, 0, concatenation,\nfirstPart.Length, secondPart.Length);\ncurrLvlHashes[j] = CalculateSHA256Hash(concatenation,\nconcatenation.Length);\n}\nelse\n{ // Take care of remaining odd chunk\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\npublic static byte[] CalculateSHA256Hash(byte[] inputBytes, int count)\n{\nSHA256 sha256 = System.Security.Cryptography.SHA256.Create();\nbyte[] hash = sha256.ComputeHash(inputBytes, 0, count);\nreturn hash;\n}\n}\n}\nComputing the Tree Hash of a File API Version 2012-06-01 357\n\nAmazon S3 Glacier Developer Guide\nReceiving Checksums When Downloading Data\nWhen you retrieve an archive using the Initiate Job API (see Initiate Job (POST jobs)), you can\noptionally specify a range to retrieve of the archive. Similarly, when you download your data using\nthe Get Job Output API (see Get Job Output (GET output)), you can optionally specify a range of\ndata to download.",
      "start_idx": 564675,
      "end_idx": 567899,
      "metadata": {
        "num_sentences": 6,
        "num_words": 484,
        "breakpoint_idx": 3337,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.34515730539957684,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Checksum Calculation",
              "Tree Hash Computation"
            ]
          },
          "keywords": [
            "SHA-256",
            "checksum",
            "tree hash",
            "file chunks",
            "1MB chunk",
            "FileStream",
            "hash computation",
            "cryptography",
            "Get Job Output API",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "FileStream",
            "SHA256",
            "Amazon S3 Glacier",
            "Initiate Job API",
            "Get Job Output API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Checksum Computation",
          "secondary_categories": [
            "File Processing",
            "Cryptographic Hashing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA-256",
            "System.Security.Cryptography.SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains methods for computing SHA-256 checksums for file chunks and a tree hash for validating data integrity, along with information on retrieving checksums when downloading data from Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I compute SHA-256 checksums for 1MB file chunks?",
            "What is the process for calculating a SHA-256 tree hash?",
            "How can I specify a data range when downloading archives from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Checksum Computation]",
        "tf_idf_keywords": [
          "checksum",
          "1MB chunk",
          "tree hash",
          "hash computation",
          "Get Job Output API",
          "SHA-256",
          "Initiate Job API",
          "FileStream",
          "cryptography",
          "Amazon S3 Glacier",
          "SHA256",
          "file chunks"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_322",
      "text": "There are two characteristics of these ranges that are important to understand\nwhen you are retrieving and downloading your archive's data. The range to retrieve is required to\nbe megabyte aligned to the archive. Both the range to retrieve and the range to download must be\ntree hash aligned in order to receive checksum values when you download your data. The definition\nof these two types of range alignments are as follows:\n\u2022 Megabyte aligned - A range [StartByte, EndBytes] is megabyte (1024*1024) aligned when\nStartBytes is divisible by 1 MB and EndBytes plus 1 is divisible by 1 MB or is equal to the end of\nthe archive specified (archive byte size minus 1). A range used in the Initiate Job API, if specified,\nis required to be megabyte aligned. \u2022 Tree-hash aligned - A range [StartBytes, EndBytes] is tree hash aligned with respect to an archive\nif and only if the root of the tree hash built over the range is equivalent to a node in the tree\nhash of the whole archive. Both the range to retrieve and range to download must be tree hash\naligned in order to receive checksum values for the data you download. For an example of ranges\nand their relationship to the archive tree hash, see Tree Hash Example: Retrieving an archive\nrange that is tree-hash aligned. Note that a range that is tree-hash aligned is also megabyte aligned. However, a megabyte\naligned range is not necessarily tree-hash aligned. The following cases describe when you receive a checksum value when you download your archive\ndata:\n\u2022 If you do not specify a range to retrieve in the Initiate Job request and you download the whole\narchive in the Get Job Request. \u2022 If you do not specify a range to retrieve in the Initiate Job request and you do specify a tree-hash\naligned range to download in the Get Job Request. \u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you download\nthe whole range in the Get Job Request. Receiving Checksums When Downloading Data API Version 2012-06-01 358\n\nAmazon S3 Glacier Developer Guide\n\u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you specify a\ntree-hash aligned range to download in the Get Job Request.",
      "start_idx": 567900,
      "end_idx": 572258,
      "metadata": {
        "num_sentences": 14,
        "num_words": 388,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5119437752189216,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Definition",
              "Explanation",
              "Conditions"
            ]
          },
          "keywords": [
            "megabyte aligned",
            "tree hash aligned",
            "checksum values",
            "Initiate Job API",
            "Get Job Request",
            "range to retrieve",
            "range to download",
            "archive",
            "root of the tree hash",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Initiate Job API",
            "Get Job Request",
            "Amazon S3 Glacier",
            "Tree Hash Example",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval and Alignment",
          "secondary_categories": [
            "Checksum Validation",
            "Range Specifications"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the importance of megabyte and tree-hash alignment when retrieving and downloading archive data in Amazon S3 Glacier, and outlines scenarios where checksum values are provided during data downloads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements for a range to be megabyte aligned?",
            "When do I receive checksum values while downloading archive data?",
            "What is the difference between megabyte alignment and tree-hash alignment?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Retrieval and Alignment]",
        "tf_idf_keywords": [
          "tree hash aligned",
          "megabyte aligned",
          "archive",
          "root of the tree hash",
          "Tree Hash Example",
          "Initiate Job API",
          "Get Job Request",
          "checksum values",
          "range to retrieve",
          "API Version 2012-06-01",
          "range to download",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_323",
      "text": "If you specify a range to retrieve in the Initiate Job request that is not tree hash aligned, then you\ncan still get your archive data but no checksum values are returned when you download data in the\nGet Job Request. Tree Hash Example: Retrieving an archive range that is tree-hash aligned\nSuppose you have a 6.5 MB archive in your vault and you want to retrieve 2 MB of the archive. How\nyou specify the 2 MB range in the Initiate Job request determines if you receive data checksum\nvalues when you download your data. The following diagram illustrates two 2 MB ranges for the\n6.5 MB archive that you could download. Both ranges are megabyte aligned, but only one is tree-\nhash aligned. Tree-Hash Aligned Range Specification\nThis section gives the exact specification for what constitutes a tree-hash aligned range. Tree-hash\naligned ranges are important when you are downloading a portion of an archive and you specify\nReceiving Checksums When Downloading Data API Version 2012-06-01 359\n\nAmazon S3 Glacier Developer Guide\nthe range of data to retrieve and the range to download from the retrieved data. If both of these\nranges are tree-hash aligned, then you will receive checksum data when you download the data. A range [A, B] is tree-hash aligned with respect to an archive if and only if when a new tree hash\nis built over [A, B], the root of the tree hash of that range is equivalent to a node in the tree hash\nof the whole archive. You can see this shown in the diagram in Tree Hash Example: Retrieving an\narchive range that is tree-hash aligned. In this section, we provide the specification for tree-hash\nalignment. Consider [P, Q) as the range query for an archive of N megabytes (MB) and P and Q are multiples of\none MB. Note that the actual inclusive range is [P MB, Q MB \u2013 1 byte], but for simplicity, we show it\nas [P, Q). With these considerations, then\n\u2022 If P is an odd number, there is only one possible tree-hash aligned range\u2014that is [P, P + 1 MB). \u2022 If P is an even number and k is the maximum number, where P can be written as 2k * X, then\nthere are at most k tree-hash aligned ranges that start with P. X is an integer greater than 0.",
      "start_idx": 567900,
      "end_idx": 572258,
      "metadata": {
        "num_sentences": 15,
        "num_words": 398,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4658140636625744,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "tree hash",
            "checksum",
            "range",
            "archive",
            "Initiate Job request",
            "Get Job request",
            "tree-hash aligned",
            "Amazon S3 Glacier",
            "megabyte aligned",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job request",
            "Get Job request",
            "Tree-Hash Aligned Range",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Checksums",
          "secondary_categories": [
            "Data Retrieval",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to retrieve archive ranges from Amazon S3 Glacier in a tree-hash aligned manner to receive checksum values when downloading data. It provides specifications for tree-hash alignment and examples of aligned and non-aligned ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is tree-hash alignment in Amazon S3 Glacier?",
            "How do I specify a range to retrieve archive data and receive checksum values?",
            "What are the specifications for tree-hash aligned ranges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Integrity and Checksums]",
        "tf_idf_keywords": [
          "checksum",
          "megabyte aligned",
          "archive",
          "tree hash",
          "Tree-Hash Aligned Range",
          "tree-hash aligned",
          "Get Job request",
          "API Version 2012-06-01",
          "Initiate Job request",
          "Amazon S3 Glacier",
          "range"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_324",
      "text": "The\ntree-hash aligned ranges fall in the following categories:\n\u2022 i i\nFor each i, where (0 <= i <= k) and where P + 2 < N, then [P, Q + 2) is a tree-hash aligned\nrange. \u2022 P = 0 is the special case where A = 2[lgN]*0\nError Responses\nIn the event of an error, the API returns one of the following exceptions:\nCode Description HTTP Status Type\nCode\nAccessDeniedException Returned if there was an attempt 403 Client\nto access a resource not allowed Forbidden\nby an AWS Identity and Access\nManagement (IAM) policy, or the\nincorrect AWS account ID was\nused in the request URI. For more\ninformation, see Identity and\nError Responses API Version 2012-06-01 360\n\nAmazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nAccess Management for Amazon\nS3 Glacier. BadRequest Returned if the request cannot 400 Bad Client\nbe processed.",
      "start_idx": 572259,
      "end_idx": 573096,
      "metadata": {
        "num_sentences": 4,
        "num_words": 149,
        "breakpoint_idx": 3370,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.22528056303660074,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Responses",
              "Tree-Hash Aligned Ranges"
            ]
          },
          "keywords": [
            "tree-hash",
            "aligned ranges",
            "AccessDeniedException",
            "BadRequest",
            "HTTP Status",
            "IAM policy",
            "AWS account ID",
            "Amazon S3 Glacier",
            "API",
            "exceptions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccessDeniedException",
            "BadRequest",
            "AWS Identity and Access Management",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Error Handling",
          "secondary_categories": [
            "API Documentation",
            "Data Range Alignment"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains tree-hash aligned ranges, error responses returned by the API, and specific exceptions like AccessDeniedException and BadRequest, including their HTTP status codes and causes.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are tree-hash aligned ranges and their categories?",
            "What does AccessDeniedException mean and when is it returned?",
            "What HTTP status codes are associated with specific API errors in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Error Handling]",
        "tf_idf_keywords": [
          "IAM policy",
          "AWS Identity and Access Management",
          "BadRequest",
          "aligned ranges",
          "exceptions",
          "HTTP Status",
          "AWS account ID",
          "API Version 2012-06-01",
          "API",
          "AccessDeniedException",
          "Amazon S3 Glacier",
          "tree-hash"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_325",
      "text": "Request\nExpiredTokenException Returned if the security token 403 Client\nused in the request has expired. Forbidden\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process the expedited Unavailab\nrequest. This error only applies le\nto expedited retrievals and not\nto standard or bulk retrievals. InvalidParameterVa Returned if a parameter of the 400 Bad Client\nlueException request is incorrectly specified. Request\nInvalidSignatureEx Returned if the request signature 403 Client\nception is invalid. Forbidden\nLimitExceededException Returned if the request results in 400 Bad Client\none of the following limits being Request\nexceeded, a vault limit, a tags\nlimit, or the provisioned capacity\nlimit. MissingAuthenticat Returned if no authentication 400 Bad Client\nionTokenException data is found for the request. Request\nMissingParameterVa Returned if a required header or 400 Bad Client\nlueException parameter is missing from the Request\nrequest. Error Responses API Version 2012-06-01 361\n\nAmazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nPolicyEnforcedExce Returned if a retrieval job will 400 Bad Client\nption exceed the current data policy's Request\nretrieval rate limit. For more\ninformation about data retrieval\npolicies, see S3 Glacier Data\nRetrieval Policies.",
      "start_idx": 573097,
      "end_idx": 577243,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3760635799831814,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "HTTP Status",
              "Exception Handling"
            ]
          },
          "keywords": [
            "ExpiredTokenException",
            "InsufficientCapacityException",
            "InvalidParameterValueException",
            "InvalidSignatureException",
            "LimitExceededException",
            "MissingAuthenticationTokenException",
            "MissingParameterValueException",
            "PolicyEnforcedException",
            "HTTP Status Codes",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "ExpiredTokenException",
            "Amazon S3 Glacier",
            "InvalidSignatureException",
            "PolicyEnforcedException",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Error Handling",
          "secondary_categories": [
            "HTTP Status Codes",
            "API Request/Response"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines error responses and HTTP status codes for Amazon S3 Glacier API requests, including scenarios such as expired tokens, invalid parameters, and exceeded limits.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What does ExpiredTokenException mean in Amazon S3 Glacier API?",
            "What HTTP status code is returned for insufficient capacity during expedited retrievals?",
            "How can I resolve MissingParameterValueException in S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Error Handling]",
        "tf_idf_keywords": [
          "ExpiredTokenException",
          "MissingParameterValueException",
          "InsufficientCapacityException",
          "HTTP Status Codes",
          "InvalidSignatureException",
          "InvalidParameterValueException",
          "API Version 2012-06-01",
          "MissingAuthenticationTokenException",
          "PolicyEnforcedException",
          "Amazon S3 Glacier",
          "LimitExceededException"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_326",
      "text": "ResourceNotFoundEx Returned if the specified 404 Not Client\nception resource such as a vault, upload Found\nID, or job ID does not exist. RequestTimeoutExce Returned if uploading an archive 408 Request Client\nption and Amazon S3 Glacier (S3 Timeout\nGlacier) times out while receiving\nthe upload. SerializationException Returned if the body of the 400 Bad Client\nrequest is invalid. If including a Request\nJSON payload, check that it is\nwell-formed. ServiceUnavailable Returned if the service cannot 500 Server\nException complete the request. Internal\nServer\nError\nThrottlingException Returned if you need to reduce 400 Bad Client\nyour rate of requests to S3 Request\nGlacier. UnrecognizedClient Returned if the Access Key ID or 400 Bad Client\nException security token is invalid. Request\nVarious S3 Glacier APIs return the same exception, but with different exception messages to help\nyou troubleshoot the specific error encountered. Error Responses API Version 2012-06-01 362\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier returns error information in the response body. The following examples show some of\nthe error responses.",
      "start_idx": 573097,
      "end_idx": 577243,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37553719414605036,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "ResourceNotFoundException",
            "RequestTimeoutException",
            "SerializationException",
            "ServiceUnavailableException",
            "ThrottlingException",
            "UnrecognizedClientException",
            "Amazon S3 Glacier",
            "API Version",
            "Error Responses",
            "HTTP Status Codes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ResourceNotFoundException",
            "RequestTimeoutException",
            "SerializationException",
            "ServiceUnavailableException"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Error Handling",
          "secondary_categories": [
            "API Documentation",
            "HTTP Status Codes"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section outlines various exceptions returned by Amazon S3 Glacier APIs, their HTTP status codes, and the conditions under which they occur, along with troubleshooting guidance.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What does the ResourceNotFoundException error mean in S3 Glacier?",
            "How can I troubleshoot a SerializationException in S3 Glacier?",
            "What are the common error responses returned by S3 Glacier APIs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Error Handling]",
        "tf_idf_keywords": [
          "UnrecognizedClientException",
          "ResourceNotFoundException",
          "ServiceUnavailableException",
          "HTTP Status Codes",
          "RequestTimeoutException",
          "SerializationException",
          "Amazon S3 Glacier",
          "ThrottlingException",
          "Error Responses",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_327",
      "text": "Example 1: Describe Job request with a job ID that does not exist\nSuppose you send a Describe Job (GET JobID) request for a job that does not exist. That is, you\nspecify a job ID that does not exist. GET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nIn response, S3 Glacier returns the following error response. HTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABaZ9N92Iiyv4N7sru3ABEpSQkuFtmH3NP6aAC51ixfjg\nContent-Type: application/json\nContent-Length: 185\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"The job ID was not found: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID\",\n\"type\": \"Client\"\n}\nWhere:\nCode\nOne of the general exceptions. Type: String\nMessage\nA generic description of the error condition specific to the API that returns the error. Example 1: Describe Job request with a job ID that does not exist API Version 2012-06-01 363\n\nAmazon S3 Glacier Developer Guide\nType: String\nType\nThe source of the error. The field can be one of the following values: Client, Server, or\nUnknown. Type: String. Note the following in the preceding response:\n\u2022 For the error response, S3 Glacier returns status code values of 4xx and 5xx. In this example, the\nstatus code is 404 Not Found.",
      "start_idx": 573097,
      "end_idx": 577243,
      "metadata": {
        "num_sentences": 10,
        "num_words": 198,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3257205115424262,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "ErrorResponse",
              "APIRequest"
            ]
          },
          "keywords": [
            "Describe Job",
            "job ID",
            "S3 Glacier",
            "GET request",
            "ResourceNotFoundException",
            "HTTP 404",
            "error response",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "Client error"
          ],
          "entities": [
            "S3 Glacier",
            "ResourceNotFoundException",
            "AWS4-HMAC-SHA256",
            "HTTP/1.1 404 Not Found",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Error Handling",
          "secondary_categories": [
            "HTTP Status Codes",
            "AWS API Requests"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the response received when a Describe Job request is made with a non-existent job ID in Amazon S3 Glacier, including the resulting 404 error and its details.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What happens if I request a job ID that does not exist in Amazon S3 Glacier?",
            "What is the error code and message returned for a non-existent job ID in S3 Glacier?",
            "How does S3 Glacier handle Describe Job requests with invalid job IDs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [API Error Handling]",
        "tf_idf_keywords": [
          "Describe Job",
          "S3 Glacier",
          "ResourceNotFoundException",
          "examplevault",
          "x-amz-glacier-version",
          "Client error",
          "HTTP 404",
          "HTTP/1.1 404 Not Found",
          "job ID",
          "GET request",
          "AWS4-HMAC-SHA256",
          "Amazon S3 Glacier",
          "error response"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_328",
      "text": "\u2022 The Content-Type header value application/json indicates JSON in the body\n\u2022 The JSON in the body provides the error information. In the previous request, instead of a bad job ID, suppose you specify a vault that does not exist. The\nresponse returns a different message. HTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABBeC9Zw0rp_5D0L8VfB3FA_WlTupqTKAUehMcPhdgni0\nContent-Type: application/json\nContent-Length: 154\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"Vault not found for ARN: arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault\",\n\"type\": \"Client\"\n}\nExample 2: List Jobs request with an invalid value for the request\nparameter\nIn this example you send a List Jobs (GET jobs) request to retrieve vault jobs with a specific\nstatuscode, and you provide an incorrect statuscode value finished, instead of the\nacceptable values InProgress, Succeeded, or Failed. GET /-/vaults/examplevault/jobs?statuscode=finished HTTP/1.1\nExample 2: List Jobs request with an invalid value for the request parameter API Version 2012-06-01 364\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.us-west-2.amazonaws.com\nDate: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nS3 Glacier returns the InvalidParameterValueException with an appropriate message. HTTP/1.1 400 Bad Request\nx-amzn-RequestId: AAABaZ9N92Iiyv4N7sru3ABEpSQkuFtmH3NP6aAC51ixfjg\nContent-Type: application/json\nContent-Length: 141\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"InvalidParameterValueException\",\n\"message\": \"The job status code is not valid: finished\",\n\"type: \"Client\"\n}\nVault Operations\nThe following are the vault operations available in S3 Glacier. Topics\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 Create Vault (PUT vault)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Describe Vault (GET vault)\n\u2022 Get Vault Access Policy (GET access-policy)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Get Vault Notifications (GET notification-configuration)\nVault Operations API Version 2012-06-01 365\n\nAmazon S3 Glacier Developer Guide\n\u2022 Initiate Vault Lock (POST lock-policy)\n\u2022 List Tags For Vault (GET tags)\n\u2022 List Vaults (GET vaults)\n\u2022 Remove Tags From Vault (POST tags remove)\n\u2022 Set Vault Access Policy (PUT access-policy)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\nAbort Vault Lock (DELETE lock-policy)\nDescription\nThis operation stops the vault locking process if the vault lock is not in the Locked state. If the\nvault lock is in the Locked state when this operation is requested, the operation returns an\nAccessDeniedException error. Stopping the vault locking process removes the vault lock policy\nfrom the specified vault. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can get\nthe state of a vault lock by calling Get Vault Lock (GET lock-policy).",
      "start_idx": 577244,
      "end_idx": 581941,
      "metadata": {
        "num_sentences": 12,
        "num_words": 439,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38488627925063623,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural",
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "Content-Type",
            "application/json",
            "Vault Lock",
            "InvalidParameterValueException",
            "ResourceNotFoundException",
            "AWS4-HMAC-SHA256",
            "S3 Glacier",
            "API Version 2012-06-01",
            "AccessDeniedException",
            "Vault Operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "ARN",
            "AWS4-HMAC-SHA256 Credential",
            "Vault Lock Policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Error Handling",
            "Vault Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on handling errors and performing vault operations in Amazon S3 Glacier, including examples of invalid requests and their corresponding error responses, as well as a list of available vault operations and their descriptions.",
          "intents": [
            "Debug",
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What error is returned when specifying a non-existent vault in a request?",
            "How can I stop the vault locking process in S3 Glacier?",
            "What are the valid status codes for a List Jobs request in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "ResourceNotFoundException",
          "Vault Lock Policy",
          "Content-Type",
          "x-amzn-RequestId",
          "Vault Lock",
          "Vault Operations",
          "InvalidParameterValueException",
          "application/json",
          "API Version 2012-06-01",
          "AccessDeniedException",
          "AWS4-HMAC-SHA256",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256 Credential",
          "ARN"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_329",
      "text": "For more information about the\nvault locking process, see S3 Glacier Vault Lock. For more information about vault lock policies, see\nVault Lock Policies. This operation is idempotent. You can successfully invoke this operation multiple times, if the vault\nlock is in the InProgress state or if there is no policy associated with the vault. Requests\nTo delete the vault lock policy, send an HTTP DELETE request to the URI of the vault's lock-\npolicy subresource. Syntax\nDELETE /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nAbort Vault Lock API Version 2012-06-01 366\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 577244,
      "end_idx": 581941,
      "metadata": {
        "num_sentences": 12,
        "num_words": 208,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24941161184599905,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "HTTP Request",
              "API Operation",
              "Vault Lock"
            ]
          },
          "keywords": [
            "vault locking process",
            "S3 Glacier Vault Lock",
            "vault lock policies",
            "HTTP DELETE request",
            "URI",
            "AccountId",
            "AWS account ID",
            "authorization",
            "request headers",
            "lock-policy subresource"
          ],
          "entities": [
            "S3 Glacier Vault Lock",
            "Vault Lock Policies",
            "AWS account ID",
            "x-amz-glacier-version",
            "Amazon S3 Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "AWS Security Policies",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP DELETE"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault lock policy in Amazon S3 Glacier using an HTTP DELETE request, including syntax, headers, and account ID requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault lock policy in Amazon S3 Glacier?",
            "What is the syntax for the DELETE request to remove a vault lock policy?",
            "What account ID requirements must be met for deleting a vault lock policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "HTTP DELETE request",
          "vault locking process",
          "AccountId",
          "Vault Lock Policies",
          "x-amz-glacier-version",
          "vault lock policies",
          "AWS account ID",
          "S3 Glacier Vault Lock",
          "URI",
          "Amazon S3 Glacier",
          "authorization",
          "request headers",
          "lock-policy subresource"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_330",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIf the policy is successfully deleted, S3 Glacier returns an HTTP 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 581942,
      "end_idx": 582271,
      "metadata": {
        "num_sentences": 3,
        "num_words": 49,
        "breakpoint_idx": 3427,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.37898604075113934,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Body",
              "Responses",
              "Response Headers",
              "Syntax"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "HTTP 204 No Content",
            "Request Body",
            "Response Headers",
            "x-amzn-RequestId",
            "Date",
            "policy",
            "operation",
            "response",
            "Syntax"
          ],
          "entities": [
            "S3 Glacier",
            "HTTP 204 No Content",
            "x-amzn-RequestId",
            "Date",
            "policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "HTTP Response Handling",
          "secondary_categories": [
            "API Operations",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the response behavior when successfully deleting a policy in S3 Glacier, which returns an HTTP 204 No Content response with standard headers.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response code for successfully deleting a policy in S3 Glacier?",
            "Does this operation include a request body?",
            "What headers are included in the response for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [HTTP Response Handling]",
        "tf_idf_keywords": [
          "Request Body",
          "Syntax",
          "S3 Glacier",
          "policy",
          "x-amzn-RequestId",
          "HTTP 204 No Content",
          "Response Headers",
          "operation",
          "Date",
          "response"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_331",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Abort Vault Lock API Version 2012-06-01 367\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to stop the vault locking process. Example Request\nIn this example, a DELETE request is sent to the lock-policy subresource of the vault named\nexamplevault. DELETE /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nx-amz-glacier-version: 2012-06-01\nExample Response\nIf the policy is successfully deleted S3 Glacier returns an HTTP 204 No Content response, as\nshown in the following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nAbort Vault Lock API Version 2012-06-01 368\n\nAmazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nAdd Tags To Vault (POST tags add)\nThis operation adds the specified tags to a vault. Each tag is composed of a key and a value.",
      "start_idx": 582272,
      "end_idx": 583925,
      "metadata": {
        "num_sentences": 8,
        "num_words": 209,
        "breakpoint_idx": 3435,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2748745509556362,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Handling",
              "HTTP Request",
              "HTTP Response",
              "API Operation",
              "SDK Integration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "Abort Vault Lock",
            "Error Responses",
            "DELETE request",
            "lock-policy",
            "HTTP 204 No Content",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "tags"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Abort Vault Lock API",
            "AWS Command Line Interface",
            "HTTP/1.1",
            "Authorization Header"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "API Operations",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to abort the vault locking process in Amazon S3 Glacier, including an example DELETE request and response, along with related API operations and references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop the vault locking process in Amazon S3 Glacier?",
            "What is the expected response when a vault lock policy is successfully deleted?",
            "Where can I find related operations for managing vault locks in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "Authorization Header",
          "Vault Lock",
          "HTTP 204 No Content",
          "x-amz-glacier-version",
          "tags",
          "HTTP/1.1",
          "Abort Vault Lock API",
          "Abort Vault Lock",
          "lock-policy",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "AWS Command Line Interface",
          "DELETE request",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_332",
      "text": "Each\nvault can have up to 50 tags. If your request would cause the tag limit for the vault to be exceeded,\nthe operation throws the LimitExceededException error. If a tag already exists on the vault under a specified key, the existing key value will be overwritten. For more information about tags, see Tagging Amazon S3 Glacier Resources. Request Syntax\nTo add tags to a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example. POST /AccountId/vaults/vaultName/tags?operation=add HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"string\": \"string\",\n\"string\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\nAdd Tags To Vault API Version 2012-06-01 369\n\nAmazon S3 Glacier Developer Guide\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nName Description Required\noperation=add A single query string parameter operation with a value Yes\nof add to distinguish it from Remove Tags From Vault (POST\ntags remove). Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 583926,
      "end_idx": 585415,
      "metadata": {
        "num_sentences": 11,
        "num_words": 235,
        "breakpoint_idx": 3446,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3700901378284801,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Syntax",
              "Error Handling",
              "Request Parameters"
            ]
          },
          "keywords": [
            "vault",
            "tags",
            "LimitExceededException",
            "Tagging",
            "Amazon S3 Glacier",
            "HTTP POST",
            "AccountId",
            "AWS account ID",
            "operation=add",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "LimitExceededException",
            "AccountId",
            "AWS account ID",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add tags to an Amazon S3 Glacier vault using an HTTP POST request and provides syntax, parameters, and error handling details for the operation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 Glacier vault?",
            "What happens if the tag limit for a vault is exceeded?",
            "What is the correct syntax for the Add Tags To Vault API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Documentation]",
        "tf_idf_keywords": [
          "HTTP POST",
          "Tagging",
          "AccountId",
          "x-amz-glacier-version",
          "tags",
          "vault",
          "operation=add",
          "AWS account ID",
          "Amazon S3 Glacier",
          "LimitExceededException"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_333",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. Tags\nThe tags to add to the vault. Each tag is composed of a key and a value.",
      "start_idx": 585416,
      "end_idx": 585633,
      "metadata": {
        "num_sentences": 4,
        "num_words": 38,
        "breakpoint_idx": 3450,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23721845944722494,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "Request Body",
              "Tags"
            ]
          },
          "keywords": [
            "request headers",
            "request body",
            "JSON fields",
            "tags",
            "key",
            "value",
            "vault"
          ],
          "entities": [
            "Common Request Headers",
            "JSON"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Request Structure",
          "secondary_categories": [
            "JSON Fields",
            "Request Headers"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section provides details about the request body for adding tags to a vault, including JSON fields and common request headers.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What fields are included in the request body for adding tags to a vault?",
            "How are tags structured in the request body?",
            "Where can I find information about common request headers?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Request Structure]",
        "tf_idf_keywords": [
          "Common Request Headers",
          "key",
          "value",
          "tags",
          "vault",
          "JSON fields",
          "request body",
          "JSON",
          "request headers"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_334",
      "text": "The value can be an\nempty string. Type: String to String map\nLength constraints: Minimum length of 1. Maximum length 10.",
      "start_idx": 585634,
      "end_idx": 585754,
      "metadata": {
        "num_sentences": 3,
        "num_words": 21,
        "breakpoint_idx": 3453,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3151262601216634,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Data Type",
              "Constraints"
            ]
          },
          "keywords": [
            "empty string",
            "String to String map",
            "Length constraints",
            "Minimum length",
            "Maximum length"
          ],
          "entities": [
            "String to String map"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Validation",
          "secondary_categories": [
            "String Manipulation",
            "Data Constraints"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation specifies that the value can be an empty string within a String to String map, with a length constraint of 1 to 10 characters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the allowed length range for the value in the String to String map?",
            "Can the value be an empty string?",
            "What type of data does this value accept?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Validation]",
        "tf_idf_keywords": [
          "Maximum length",
          "Minimum length",
          "Length constraints",
          "empty string",
          "String to String map"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_335",
      "text": "Required: Yes\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nAdd Tags To Vault API Version 2012-06-01 370\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP POST request with the tags to add to the vault. POST /-/vaults/examplevault/tags?operation=add HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"examplekey1\": \"examplevalue1\",\n\"examplekey2\": \"examplevalue2\"\n}\n}\nExample Response\nIf the request was successful S3 Glacier returns a HTTP 204 No Content as shown in the\nfollowing example. Add Tags To Vault API Version 2012-06-01 371\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 List Tags For Vault (GET tags)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nCreate Vault (PUT vault)\nDescription\nThis operation creates a new vault with the specified name. The name of the vault must be unique\nwithin an AWS Region for an AWS account. You can create up to 1,000 vaults per account. For\ninformation on creating more vaults, go to the Amazon S3 Glacier product detail page. You must use the following guidelines when naming a vault. \u2022 Names can be between 1 and 255 characters long. \u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.'",
      "start_idx": 585755,
      "end_idx": 588028,
      "metadata": {
        "num_sentences": 14,
        "num_words": 308,
        "breakpoint_idx": 3467,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2717666206779061,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details",
              "Error Handling",
              "Example Usage"
            ]
          },
          "keywords": [
            "HTTP 204 No Content",
            "Amazon S3 Glacier",
            "response headers",
            "error responses",
            "HTTP POST",
            "x-amz-glacier-version",
            "Tags",
            "vault",
            "AWS SDKs",
            "Create Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "x-amzn-RequestId",
            "AWS Command Line Interface",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Add Tags to Vault API operation in Amazon S3 Glacier, including request and response syntax, headers, and examples, as well as related operations like listing and removing tags. It also provides guidelines for creating vaults with unique names and specific naming constraints.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to a vault in Amazon S3 Glacier?",
            "What is the expected response for a successful Add Tags to Vault API request?",
            "What are the naming constraints for creating a new vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "error responses",
          "HTTP POST",
          "x-amzn-RequestId",
          "HTTP 204 No Content",
          "x-amz-glacier-version",
          "AWS SDKs",
          "response headers",
          "vault",
          "Tags",
          "HTTP/1.1",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "AWS Command Line Interface",
          "Create Vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_336",
      "text": "(period). This operation is idempotent, you can send the same request multiple times and it has no further\neffect after the first time Amazon S3 Glacier (S3 Glacier) creates the specified vault. Create Vault API Version 2012-06-01 372\n\nAmazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo create a vault, send an HTTP PUT request to the URI of the vault to be created. PUT /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 588029,
      "end_idx": 589219,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "breakpoint_idx": 3477,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2888029310438368,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Reference",
              "HTTP Request Syntax"
            ]
          },
          "keywords": [
            "idempotent",
            "Amazon S3 Glacier",
            "Create Vault API",
            "HTTP PUT request",
            "URI",
            "AccountId",
            "Authorization",
            "x-amz-glacier-version",
            "AWS account ID",
            "request headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Create Vault API",
            "AccountId",
            "x-amz-glacier-version",
            "AWS account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "HTTP Methods",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of creating a vault in Amazon S3 Glacier using the HTTP PUT request method, including details about syntax, headers, and account ID requirements. The operation is idempotent, meaning repeated requests have no additional effect after the initial creation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What HTTP method and headers are required for the Create Vault operation?",
            "What is the significance of the AccountId value in the Create Vault request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "idempotent",
          "AccountId",
          "x-amz-glacier-version",
          "Create Vault API",
          "AWS account ID",
          "HTTP PUT request",
          "URI",
          "Amazon S3 Glacier",
          "request headers",
          "Authorization"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_337",
      "text": "Request Body\nThe request body for this operation must be empty (0 bytes). Responses\nSyntax\nHTTP/1.1 201 Created\nCreate Vault API Version 2012-06-01 373\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation The relative URI path of the vault that was created. Type: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP PUT request to create a vault named examplevault. PUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nContent-Length: 0\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nCreate Vault API Version 2012-06-01 374\n\nAmazon S3 Glacier Developer Guide\nExample Response\nS3 Glacier creates the vault and returns the relative URI path of the vault in the Location header. The account ID is always displayed in the Location header regardless of whether the account ID or\na hyphen ('-') was specified in the request. HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nLocation: /111122223333/vaults/examplevault\nRelated Sections\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nComplete Vault Lock (POST lockId)\nDescription\nThis operation completes the vault locking process by transitioning the vault lock from\nthe InProgress state to the Locked state, which causes the vault lock policy to become\nunchangeable. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST\nlock-policy). You can obtain the state of the vault lock by calling Get Vault Lock (GET lock-policy).",
      "start_idx": 589220,
      "end_idx": 593256,
      "metadata": {
        "num_sentences": 12,
        "num_words": 322,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30068302154541016,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Request Body",
              "Response Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Create Vault API",
            "HTTP PUT request",
            "vault lock",
            "Location header",
            "InProgress state",
            "Locked state",
            "AWS4-HMAC-SHA256",
            "response headers",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "Location header",
            "vault lock policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Vault Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Create Vault API operation in Amazon S3 Glacier, detailing the request structure, response headers, example requests, and responses, as well as related operations and the vault locking process.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the request structure for creating a vault in Amazon S3 Glacier?",
            "What headers and response codes are returned after creating a vault?",
            "How can I complete the vault locking process in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier API Documentation]",
        "tf_idf_keywords": [
          "Location header",
          "examplevault",
          "vault lock policy",
          "Create Vault API",
          "response headers",
          "vault lock",
          "Locked state",
          "HTTP PUT request",
          "InProgress state",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Content-Length"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_338",
      "text": "For more information about the vault locking process, see S3 Glacier Vault Lock. This operation is idempotent. This request is always successful if the vault lock is in the Locked\nstate and the provided lock ID matches the lock ID originally used to lock the vault. Complete Vault Lock API Version 2012-06-01 375\n\nAmazon S3 Glacier Developer Guide\nIf an invalid lock ID is passed in the request when the vault lock is in the Locked state, the\noperation returns an AccessDeniedException error. If an invalid lock ID is passed in the request\nwhen the vault lock is in the InProgress state, the operation throws an InvalidParameter\nerror. Requests\nTo complete the vault locking process, send an HTTP POST request to the URI of the vault's lock-\npolicy subresource with a valid lock ID. Syntax\nPOST /AccountId/vaults/vaultName/lock-policy/lockId HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. The lockId value is the lock ID obtained from a Initiate Vault Lock (POST lock-policy) request. Request Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 589220,
      "end_idx": 593256,
      "metadata": {
        "num_sentences": 12,
        "num_words": 255,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3733645930434718,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Error Handling",
              "Request Syntax"
            ]
          },
          "keywords": [
            "vault lock",
            "AccessDeniedException",
            "InvalidParameter",
            "HTTP POST",
            "lock ID",
            "AWS account ID",
            "lock-policy",
            "S3 Glacier",
            "x-amz-glacier-version",
            "authorization"
          ],
          "entities": [
            "S3 Glacier Vault Lock",
            "AccessDeniedException",
            "InvalidParameter",
            "AWS account ID",
            "lock ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "AWS Security",
            "HTTP Methods"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the vault locking process in Amazon S3 Glacier, including how to complete the lock using an HTTP POST request and handling errors related to invalid lock IDs during different vault states.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What is the syntax for completing the vault locking process in Amazon S3 Glacier?",
            "What errors are returned when an invalid lock ID is passed during the vault locking process?",
            "How should the AccountId value be formatted in the vault lock API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "InvalidParameter",
          "lock ID",
          "HTTP POST",
          "x-amz-glacier-version",
          "vault lock",
          "AWS account ID",
          "S3 Glacier Vault Lock",
          "AccessDeniedException",
          "lock-policy",
          "Amazon S3 Glacier",
          "authorization"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_339",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Complete Vault Lock API Version 2012-06-01 376\n\nAmazon S3 Glacier Developer Guide\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 593257,
      "end_idx": 593744,
      "metadata": {
        "num_sentences": 4,
        "num_words": 71,
        "breakpoint_idx": 3505,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.35347286860148114,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "Response Syntax",
              "Response Headers"
            ]
          },
          "keywords": [
            "request headers",
            "response headers",
            "HTTP 204",
            "Vault Lock API",
            "Amazon S3 Glacier",
            "Developer Guide",
            "x-amzn-RequestId",
            "Date",
            "API Version",
            "No Content"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock API",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response behavior and headers for a successful Amazon S3 Glacier Vault Lock API request, which returns an HTTP 204 No Content response.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response code for a successful Vault Lock API request?",
            "Does the Vault Lock API operation require a request body?",
            "What headers are used in the response for the Vault Lock API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "HTTP 204",
          "x-amzn-RequestId",
          "Vault Lock API",
          "response headers",
          "Date",
          "HTTP/1.1",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "No Content",
          "request headers",
          "Developer Guide",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_340",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP POST request with the lock ID to complete the vault locking\nprocess. POST /-/vaults/examplevault/lock-policy/AE863rKkWZU53SLW5be4DUcW HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 204 No Content\nresponse, as shown in the following example. Complete Vault Lock API Version 2012-06-01 377\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault (DELETE vault)\nDescription\nThis operation deletes a vault. Amazon S3 Glacier (S3 Glacier) will delete a vault only if there are no\narchives in the vault as per the last inventory and there have been no writes to the vault since the\nlast inventory. If either of these conditions is not satisfied, the vault deletion fails (that is, the vault\nis not removed) and S3 Glacier returns an error. You can use the Describe Vault (GET vault) operation that provides vault information, including\nthe number of archives in the vault; however, the information is based on the vault inventory S3\nGlacier last generated.",
      "start_idx": 593745,
      "end_idx": 596893,
      "metadata": {
        "num_sentences": 9,
        "num_words": 270,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35577381981743705,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault locking",
            "HTTP POST request",
            "lock ID",
            "vault deletion",
            "vault inventory",
            "archives",
            "error responses",
            "AWS SDKs",
            "Describe Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "Complete Vault Lock API",
            "Delete Vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "HTTP Methods in APIs",
            "Error Handling in APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains operations related to vault locking and deletion in Amazon S3 Glacier, including API request examples, response formats, and error handling details.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I complete the vault locking process in Amazon S3 Glacier?",
            "What conditions must be met to delete a vault in Amazon S3 Glacier?",
            "What response does Amazon S3 Glacier return for a successful vault lock completion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "archives",
          "vault inventory",
          "Describe Vault",
          "error responses",
          "lock ID",
          "x-amz-glacier-version",
          "AWS SDKs",
          "HTTP POST request",
          "vault deletion",
          "vault locking",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Complete Vault Lock API",
          "Delete Vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_341",
      "text": "This operation is idempotent. Delete Vault API Version 2012-06-01 378\n\nAmazon S3 Glacier Developer Guide\nNote\nWhen you delete a vault, the vault access policy attached to the vault is also deleted. For\nmore information about vault access policies, see Vault Access Policies. Requests\nTo delete a vault, send a DELETE request to the vault resource URI. Syntax\nDELETE /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 593745,
      "end_idx": 596893,
      "metadata": {
        "num_sentences": 10,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2484397464328342,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Idempotent",
              "Request Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "idempotent",
            "Delete Vault",
            "Amazon S3 Glacier",
            "vault access policy",
            "DELETE request",
            "vault resource URI",
            "AccountId",
            "request headers",
            "AWS account ID",
            "x-amz-glacier-version"
          ],
          "entities": [
            "VaultName",
            "AccountId",
            "Amazon S3 Glacier",
            "glacier.Region.amazonaws.com",
            "2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "HTTP Methods",
            "AWS Security Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The Delete Vault operation in Amazon S3 Glacier is idempotent and removes a vault along with its attached access policy by sending a DELETE request to the vault resource URI using specific headers and syntax.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier?",
            "What happens to the vault access policy when a vault is deleted?",
            "What is the syntax for the DELETE request to remove a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "VaultName",
          "idempotent",
          "2012-06-01",
          "vault access policy",
          "AccountId",
          "x-amz-glacier-version",
          "AWS account ID",
          "glacier.Region.amazonaws.com",
          "Amazon S3 Glacier",
          "request headers",
          "Delete Vault",
          "DELETE request",
          "vault resource URI"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_342",
      "text": "Request Body\nThis operation does not have a request body. Delete Vault API Version 2012-06-01 379\n\nAmazon S3 Glacier Developer Guide\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example deletes a vault named examplevault. The example request is a DELETE\nrequest to the URI of the resource (the vault) to delete. DELETE /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nDelete Vault API Version 2012-06-01 380\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault Access Policy (DELETE access-policy)\nDescription\nThis operation deletes the access policy associated with the specified vault. The operation is\neventually consistent\u2014that is, it might take some time for Amazon S3 Glacier (S3 Glacier) to\ncompletely remove the access policy, and you might still see the effect of the policy for a short\ntime after you send the delete request.",
      "start_idx": 596894,
      "end_idx": 600067,
      "metadata": {
        "num_sentences": 9,
        "num_words": 258,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3523281945122613,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Methods",
              "Response Headers",
              "Error Handling",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Delete Vault",
            "API Version 2012-06-01",
            "HTTP/1.1 204 No Content",
            "x-amzn-RequestId",
            "Response Headers",
            "Error Responses",
            "AWS4-HMAC-SHA256",
            "access policy",
            "eventually consistent"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "x-amz-glacier-version",
            "examplevault",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "HTTP Protocol",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Delete Vault API operation in Amazon S3 Glacier, including its request and response structure, examples, and related resources. The operation removes a vault or its access policy, with eventual consistency for access policy deletion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier?",
            "What is the HTTP request structure for the Delete Vault API?",
            "What are the response details and behavior of the Delete Vault operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "examplevault",
          "HTTP/1.1 204 No Content",
          "x-amzn-RequestId",
          "x-amz-glacier-version",
          "eventually consistent",
          "Response Headers",
          "access policy",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "us-west-2",
          "AWS Command Line Interface",
          "Delete Vault",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_343",
      "text": "This operation is idempotent. You can invoke delete multiple times, even if there is no policy\nassociated with the vault. For more information about vault access policies, see Vault Access\nPolicies. Requests\nTo delete the current vault access policy, send an HTTP DELETE request to the URI of the vault's\naccess-policy subresource. Syntax\nDELETE /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nDelete Vault Access Policy API Version 2012-06-01 381\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 596894,
      "end_idx": 600067,
      "metadata": {
        "num_sentences": 10,
        "num_words": 175,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24451811048719618,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "HTTP Request",
              "Idempotent Behavior"
            ]
          },
          "keywords": [
            "idempotent",
            "vault access policy",
            "Amazon S3 Glacier",
            "DELETE request",
            "access-policy subresource",
            "AccountId",
            "AWS account ID",
            "request headers",
            "common request headers",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Vault Access Policies",
            "Amazon S3 Glacier",
            "AccountId",
            "SignatureValue",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "HTTP Methods",
            "AWS Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault access policy in Amazon S3 Glacier using an HTTP DELETE request. The operation is idempotent and does not require request parameters, only common headers.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault access policy in Amazon S3 Glacier?",
            "What is the syntax for the DELETE request to remove a vault access policy?",
            "What headers are required for the vault access policy deletion operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "idempotent",
          "access-policy subresource",
          "vault access policy",
          "AccountId",
          "x-amz-glacier-version",
          "common request headers",
          "AWS account ID",
          "Amazon S3 Glacier",
          "request headers",
          "Vault Access Policies",
          "DELETE request",
          "SignatureValue"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_344",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIn response, S3 Glacier returns 204 No Content if the policy is successfully deleted. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 600068,
      "end_idx": 600392,
      "metadata": {
        "num_sentences": 3,
        "num_words": 48,
        "breakpoint_idx": 3546,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32821353276570636,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "HTTP Status Code",
              "Headers"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "204 No Content",
            "Request Body",
            "Response Headers",
            "x-amzn-RequestId",
            "HTTP/1.1",
            "Date",
            "policy",
            "delete",
            "response"
          ],
          "entities": [
            "S3 Glacier",
            "x-amzn-RequestId",
            "HTTP/1.1",
            "204 No Content",
            "Response Headers"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "HTTP Response Handling",
          "secondary_categories": [
            "API Operations",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response behavior of an S3 Glacier operation that deletes a policy, returning a 204 No Content status if successful.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the HTTP response code for a successful policy deletion in S3 Glacier?",
            "Does this operation have a request body?",
            "What headers are included in the response for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [HTTP Response Handling]",
        "tf_idf_keywords": [
          "Request Body",
          "S3 Glacier",
          "policy",
          "x-amzn-RequestId",
          "Response Headers",
          "HTTP/1.1",
          "Date",
          "delete",
          "response",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_345",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Delete Vault Access Policy API Version 2012-06-01 382\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to delete a vault access policy. Example Request\nIn this example, a DELETE request is sent to the access-policy subresource of the vault named\nexamplevault. DELETE /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nx-amz-glacier-version: 2012-06-01\nExample Response\nIn response, if the policy is successfully deleted S3 Glacier returns a 204 No Content as shown in\nthe following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Get Vault Access Policy (GET access-policy)\n\u2022 Set Vault Access Policy (PUT access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\nDelete Vault Access Policy API Version 2012-06-01 383\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nDelete Vault Notifications (DELETE notification-configuration)\nDescription\nThis operation deletes the notification configuration set for a vault Set Vault Notification\nConfiguration (PUT notification-configuration). The operation is eventually consistent\u2014that is, it\nmight take some time for Amazon S3 Glacier (S3 Glacier) to completely disable the notifications,\nand you might still receive some notifications for a short time after you send the delete request. Requests\nTo delete a vault's notification configuration, send a DELETE request to the vault's\nnotification-configuration subresource. Syntax\nDELETE /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 600393,
      "end_idx": 603206,
      "metadata": {
        "num_sentences": 14,
        "num_words": 358,
        "breakpoint_idx": 3560,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3327718043065333,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "API Response",
              "Error Handling",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Delete Vault Access Policy",
            "notification configuration",
            "AWS SDK",
            "DELETE request",
            "x-amz-glacier-version",
            "API Version 2012-06-01",
            "vault",
            "authorization",
            "error responses"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-glacier-version",
            "AWS Command Line Interface",
            "AccountId",
            "VaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "API Request Syntax",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault access policy and notification configuration in Amazon S3 Glacier, including request syntax, headers, and expected responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault access policy in Amazon S3 Glacier?",
            "What is the expected response when a vault access policy is successfully deleted?",
            "What is the syntax for deleting a vault's notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "notification configuration",
          "error responses",
          "x-amz-glacier-version",
          "AccountId",
          "AWS SDK",
          "vault",
          "API Version 2012-06-01",
          "Delete Vault Access Policy",
          "Amazon S3 Glacier",
          "authorization",
          "AWS Command Line Interface",
          "VaultName",
          "DELETE request"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_346",
      "text": "For information about\ncommon request headers, see Common Request Headers. Delete Vault Notifications API Version 2012-06-01 384\n\nAmazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 603207,
      "end_idx": 603608,
      "metadata": {
        "num_sentences": 3,
        "num_words": 56,
        "breakpoint_idx": 3563,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3402221202850342,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "request headers",
            "Delete Vault Notifications",
            "API Version 2012-06-01",
            "Amazon S3 Glacier",
            "Developer Guide",
            "HTTP/1.1",
            "204 No Content",
            "response headers",
            "x-amzn-RequestId",
            "Date"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Delete Vault Notifications",
            "API Version 2012-06-01",
            "x-amzn-RequestId",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The Delete Vault Notifications API in Amazon S3 Glacier does not require a request body and returns a 204 No Content response with standard response headers.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the HTTP response code for the Delete Vault Notifications API?",
            "Does the Delete Vault Notifications API require a request body?",
            "What headers are included in the response for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "Delete Vault Notifications",
          "HTTP/1.1",
          "response headers",
          "Date",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "request headers",
          "Developer Guide",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_347",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to remove notification configuration for a vault. Example Request\nIn this example, a DELETE request is sent to the notification-configuration subresource of\nthe vault called examplevault. DELETE /111122223333/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Vault Notifications API Version 2012-06-01 385\n\nAmazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDescribe Vault (GET vault)\nDescription\nThis operation returns information about a vault, including the vault Amazon Resource Name\n(ARN), the date the vault was created, the number of archives contained within the vault, and the\ntotal size of all the archives in the vault. The number of archives and their total size are as of the\nlast vault inventory Amazon S3 Glacier (S3 Glacier) generated (see Working with Vaults in Amazon\nS3 Glacier).",
      "start_idx": 603609,
      "end_idx": 605512,
      "metadata": {
        "num_sentences": 7,
        "num_words": 228,
        "breakpoint_idx": 3570,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2809975941975911,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Example Request",
              "Example Response",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "notification-configuration",
            "DELETE request",
            "response headers",
            "Error Responses",
            "AWS4-HMAC-SHA256",
            "vault inventory",
            "archives",
            "ARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "notification-configuration",
            "vault ARN",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Vault Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on removing notification configurations for an Amazon S3 Glacier vault, including an example DELETE request and response. It also describes the Describe Vault operation, which retrieves metadata about a vault such as its ARN, creation date, archive count, and total size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I remove a notification configuration for an Amazon S3 Glacier vault?",
            "What information does the Describe Vault operation return?",
            "What is the HTTP response for a successful DELETE request to remove a vault's notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "archives",
          "AWS Identity and Access Management",
          "vault inventory",
          "notification-configuration",
          "x-amz-glacier-version",
          "vault ARN",
          "response headers",
          "vault",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "AWS Command Line Interface",
          "Error Responses",
          "ARN",
          "DELETE request"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_348",
      "text": "S3 Glacier generates vault inventories approximately daily. This means that if you\nadd or remove an archive from a vault, and then immediately send a Describe Vault request, the\nresponse might not reflect the changes. Requests\nTo get information about a vault, send a GET request to the URI of the specific vault resource. Syntax\nGET /AccountId/vaults/VaultName HTTP/1.1\nDescribe Vault API Version 2012-06-01 386\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"CreationDate\" : String,\n\"LastInventoryDate\" : String,\n\"NumberOfArchives\" : Number,\n\"SizeInBytes\" : Number,\nDescribe Vault API Version 2012-06-01 387\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\" : String,\n\"VaultName\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. CreationDate\nThe UTC date when the vault was created.",
      "start_idx": 605513,
      "end_idx": 610231,
      "metadata": {
        "num_sentences": 14,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2970495119199648,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request/Response Syntax",
              "Headers",
              "Parameters"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "Describe Vault",
            "GET request",
            "AccountId",
            "AWS account ID",
            "x-amz-glacier-version",
            "Request Headers",
            "Response Body",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Vault API",
            "VaultARN",
            "x-amzn-RequestId",
            "CreationDate"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the Describe Vault API in Amazon S3 Glacier to retrieve information about a specific vault, including details about request syntax, headers, and response structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve information about a specific vault in Amazon S3 Glacier?",
            "What is the syntax for making a Describe Vault API request?",
            "What details are included in the response body of a Describe Vault API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Describe Vault",
          "S3 Glacier",
          "CreationDate",
          "Response Body",
          "x-amzn-RequestId",
          "AccountId",
          "x-amz-glacier-version",
          "VaultARN",
          "vault",
          "AWS account ID",
          "Describe Vault API",
          "GET request",
          "Amazon S3 Glacier",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_349",
      "text": "Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. LastInventoryDate\nThe UTC date when S3 Glacier completed the last vault inventory. For information about\ninitiating an inventory for a vault, see Initiate Job (POST jobs). Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. NumberOfArchives\nThe number of archives in the vault as per the last vault inventory. This field will return null if\nan inventory has not yet run on the vault, for example, if you just created the vault. Type: Number\nSizeInBytes\nThe total size in bytes of the archives in the vault including any per-archive overhead, as of the\nlast inventory date. This field will return null if an inventory has not yet run on the vault, for\nexample, if you just created the vault. Type: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault. Describe Vault API Version 2012-06-01 388\n\nAmazon S3 Glacier Developer Guide\nType: String\nVaultName\nThe vault name that was specified at creation time. The vault name is also included in the\nvault's ARN. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example demonstrates how to get information about the vault named\nexamplevault. GET /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 260\n{\n\"CreationDate\" : \"2012-02-20T17:01:45.198Z\",\n\"LastInventoryDate\" : \"2012-03-20T17:03:43.221Z\",\n\"NumberOfArchives\" : 192,\n\"SizeInBytes\" : 78088912,\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"VaultName\" : \"examplevault\"\nDescribe Vault API Version 2012-06-01 389\n\nAmazon S3 Glacier Developer Guide\n}\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Access Policy (GET access-policy)\nDescription\nThis operation retrieves the access-policy subresource set on the vault\u2014for more information\non setting this subresource, see Set Vault Access Policy (PUT access-policy). If there is no access\npolicy set on the vault, the operation returns a 404 Not found error.",
      "start_idx": 605513,
      "end_idx": 610231,
      "metadata": {
        "num_sentences": 15,
        "num_words": 378,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3727108909970238,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Examples",
              "Error Handling"
            ]
          },
          "keywords": [
            "ISO 8601",
            "LastInventoryDate",
            "NumberOfArchives",
            "SizeInBytes",
            "VaultARN",
            "VaultName",
            "Amazon S3 Glacier",
            "Describe Vault API",
            "Access Policy",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "VaultName",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Vault Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the Amazon S3 Glacier Describe Vault API, detailing vault attributes such as creation date, last inventory date, number of archives, size in bytes, and VaultARN. It includes example requests, responses, related operations, and guidance on managing vault access policies.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve information about a specific vault in Amazon S3 Glacier?",
            "What attributes are returned by the Describe Vault API?",
            "What happens if no access policy is set on a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "SizeInBytes",
          "LastInventoryDate",
          "VaultARN",
          "x-amz-glacier-version",
          "AWS SDK",
          "Describe Vault API",
          "Amazon S3 Glacier",
          "Access Policy",
          "AWS4-HMAC-SHA256",
          "NumberOfArchives",
          "VaultName",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_350",
      "text": "For more information about\nvault access policies, see Vault Access Policies. Requests\nTo return the current vault access policy, send an HTTP GET request to the URI of the vault's\naccess-policy subresource. Syntax\nGET /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nGet Vault Access Policy API Version 2012-06-01 390\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response. Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 610232,
      "end_idx": 614290,
      "metadata": {
        "num_sentences": 11,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33323856700550425,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request Syntax",
              "Response Handling"
            ]
          },
          "keywords": [
            "vault access policy",
            "HTTP GET request",
            "AWS account ID",
            "Amazon S3 Glacier",
            "access-policy subresource",
            "request headers",
            "JSON format",
            "SignatureValue",
            "x-amz-glacier-version",
            "Common Request Headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "vaultName",
            "Region",
            "SignatureValue"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Request/Response",
            "AWS Security Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the current vault access policy from Amazon S3 Glacier using an HTTP GET request and provides details on request structure, headers, and response format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve the current vault access policy in Amazon S3 Glacier?",
            "What is the HTTP request format for accessing the vault access-policy subresource?",
            "What does the response for a vault access policy request look like in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Documentation]",
        "tf_idf_keywords": [
          "HTTP GET request",
          "Common Request Headers",
          "access-policy subresource",
          "vaultName",
          "vault access policy",
          "x-amz-glacier-version",
          "AccountId",
          "JSON format",
          "AWS account ID",
          "Region",
          "Amazon S3 Glacier",
          "request headers",
          "SignatureValue"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_351",
      "text": "For information\nabout common response headers, see Common Response Headers. Get Vault Access Policy API Version 2012-06-01 391\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields. Policy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to get a vault access policy. Example Request\nIn this example, a GET request is sent to the URI of a vault's access-policy subresource. GET /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nSet Vault Access Policy (PUT access-policy) examples. However, the following example shows the\nreturned JSON string without escape characters for readability. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nGet Vault Access Policy API Version 2012-06-01 392\n\nAmazon S3 Glacier Developer Guide\nContent-Length: length\n{\n\"Policy\": \"\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"allow-time-based-deletes\",\n\"Principal\": {\n\"AWS\": \"999999999999\"\n},\n\"Effect\": \"Allow\",\n\"Action\": \"glacier:Delete*\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n],\n\"Condition\": {\n\"DateGreaterThan\": {\n\"aws:CurrentTime\": \"2018-12-31T00:00:00Z\"\n}\n}\n}\n]\n}\n\"\n}\nRelated Sections\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Set Vault Access Policy (PUT access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Access Policy API Version 2012-06-01 393\n\nAmazon S3 Glacier Developer Guide\nGet Vault Lock (GET lock-policy)\nDescription\nThis operation retrieves the following attributes from the lock-policy subresource set on the\nspecified vault:\n\u2022 The vault lock policy set on the vault. \u2022 The state of the vault lock, which is either InProgess or Locked.",
      "start_idx": 610232,
      "end_idx": 614290,
      "metadata": {
        "num_sentences": 11,
        "num_words": 330,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4105051214044744,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Body",
              "Example Request",
              "Example Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "JSON string",
            "GET request",
            "HTTP/1.1",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "Policy",
            "Condition",
            "Action"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "glacier:Delete*",
            "arn:aws:glacier",
            "vault lock policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the vault access policy from Amazon S3 Glacier using the Get Vault Access Policy API, including example requests and responses, and details about the JSON structure of the policy and related operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault's access policy using the Amazon S3 Glacier API?",
            "What is the JSON structure of a vault access policy response?",
            "What headers and parameters are required for a GET vault access policy request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Action",
          "AWS",
          "vault access policy",
          "x-amz-glacier-version",
          "vault lock policy",
          "arn:aws:glacier",
          "glacier:Delete*",
          "HTTP/1.1",
          "GET request",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Condition",
          "JSON string",
          "Policy"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_352",
      "text": "\u2022 When the lock ID expires. The lock ID is used to complete the vault locking process. \u2022 When the vault lock was initiated and put into the InProgress state. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can stop\nthe vault locking process by calling Abort Vault Lock (DELETE lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock. If there is no vault lock policy set on the vault, the operation returns a 404 Not found error. For\nmore information about vault lock policies, see Vault Lock Policies. Requests\nTo return the current vault lock policy and other attributes, send an HTTP GET request to the URI\nof the vault's lock-policy subresource as shown in the following syntax example. Syntax\nGET /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nGet Vault Lock API Version 2012-06-01 394\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 614291,
      "end_idx": 615752,
      "metadata": {
        "num_sentences": 13,
        "num_words": 239,
        "breakpoint_idx": 3634,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.48515980060283953,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "HTTP Request",
              "Error Handling"
            ]
          },
          "keywords": [
            "vault lock",
            "lock ID",
            "InProgress state",
            "Locked state",
            "Abort Vault Lock",
            "vault lock policy",
            "S3 Glacier",
            "HTTP GET",
            "AccountId",
            "x-amz-glacier-version"
          ],
          "entities": [
            "S3 Glacier Vault Lock",
            "Amazon S3 Glacier",
            "AWS account ID",
            "Initiate Vault Lock",
            "Complete Vault Lock"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Vault Lock Management",
          "secondary_categories": [
            "HTTP API Operations",
            "AWS Account Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the vault locking process in Amazon S3 Glacier, including how to initiate, complete, abort, and retrieve the vault lock policy using specific API calls and syntax examples.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate, complete, or abort a vault lock in Amazon S3 Glacier?",
            "What does the vault locking process entail and what states does it include?",
            "How can I retrieve the current vault lock policy using an HTTP GET request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Vault Lock Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Complete Vault Lock",
          "lock ID",
          "vault lock policy",
          "AccountId",
          "x-amz-glacier-version",
          "Initiate Vault Lock",
          "vault lock",
          "AWS account ID",
          "Locked state",
          "Abort Vault Lock",
          "S3 Glacier Vault Lock",
          "InProgress state",
          "Amazon S3 Glacier",
          "HTTP GET"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_353",
      "text": "Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response. Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\",\n\"State\": \"string\",\n\"ExpirationDate\": \"string\",\n\"CreationDate\":\"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Get Vault Lock API Version 2012-06-01 395\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields. Policy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nState\nThe state of the vault lock. Type: String\nValid values: InProgress|Locked\nExpirationDate\nThe UTC date and time at which the lock ID expires.",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 11,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31511722911487927,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Parameters",
              "Request Headers",
              "Request Body",
              "Responses",
              "Response Headers",
              "Response Body"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "JSON format",
            "HTTP/1.1 200 OK",
            "x-amzn-RequestId",
            "Content-Type",
            "Policy",
            "State",
            "ExpirationDate",
            "CreationDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Vault Lock",
            "HTTP/1.1",
            "Common Request Headers",
            "Common Response Headers"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Request and Response Handling",
            "JSON Data Structure"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the request and response details for retrieving the vault access policy in Amazon S3 Glacier, including the response structure and fields in JSON format.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the response structure for the Get Vault Lock operation in Amazon S3 Glacier?",
            "What are the valid values for the 'State' field in the response body?",
            "Does this operation require request parameters or a request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "HTTP/1.1 200 OK",
          "CreationDate",
          "Content-Type",
          "Common Request Headers",
          "vault access policy",
          "x-amzn-RequestId",
          "State",
          "JSON format",
          "ExpirationDate",
          "HTTP/1.1",
          "Common Response Headers",
          "Amazon S3 Glacier",
          "Get Vault Lock",
          "Policy"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_354",
      "text": "This value can be null if the vault lock is in\na Locked state. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. CreationDate\nThe UTC date and time at which the vault lock was put into the InProgress state. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to get a vault lock policy. Example Request\nIn this example, a GET request is sent to the URI of a vault's lock-policy subresource. Get Vault Lock API Version 2012-06-01 396\n\nAmazon S3 Glacier Developer Guide\nGET /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nInitiate Vault Lock (POST lock-policy) example request. However, the following example shows the\nreturned JSON string without escape characters for readability. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Define-vault-lock\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::999999999999:root\"\n},\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThanEquals\": {\n\"glacier:ArchiveAgeInDays\": \"365\"\n}\n}\n}\nGet Vault Lock API Version 2012-06-01 397\n\nAmazon S3 Glacier Developer Guide\n]\n}\n\",\n\"State\": \"InProgress\",\n\"ExpirationDate\": \"exampledate\",\n\"CreationDate\": \"exampledate\"\n}\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Notifications (GET notification-configuration)\nDescription\nThis operation retrieves the notification-configuration subresource set on the vault (see\nSet Vault Notification Configuration (PUT notification-configuration).",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 11,
        "num_words": 324,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34207354458895595,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Example",
              "Error",
              "Description"
            ]
          },
          "keywords": [
            "vault lock",
            "ISO 8601",
            "Amazon S3 Glacier",
            "Error Responses",
            "GET request",
            "vault lock policy",
            "Authorization",
            "Principal",
            "Condition",
            "Action"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "arn:aws:iam::999999999999:root",
            "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Vault Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of retrieving a vault lock policy using the Amazon S3 Glacier API, including example requests, responses, and related operations such as initiating, aborting, and completing a vault lock.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault lock policy using the Amazon S3 Glacier API?",
            "What does an example request and response for the Get Vault Lock API look like?",
            "What are the related operations for managing a vault lock in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "Action",
          "arn:aws:iam::999999999999:root",
          "vault lock policy",
          "x-amz-glacier-version",
          "Principal",
          "vault lock",
          "GET request",
          "Amazon S3 Glacier",
          "Condition",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault",
          "Error Responses",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_355",
      "text": "If notification configuration\nfor a vault is not set, the operation returns a 404 Not Found error. For more information about\nvault notifications, see Configuring Vault Notifications in Amazon S3 Glacier. Requests\nTo retrieve the notification configuration information, send a GET request to the URI of a vault's\nnotification-configuration subresource. Get Vault Notifications API Version 2012-06-01 398\n\nAmazon S3 Glacier Developer Guide\nSyntax\nGET /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\nGet Vault Notifications API Version 2012-06-01 399\n\nAmazon S3 Glacier Developer Guide\n\"Events\": [\nString,\n...\n],\n\"SNSTopic\": String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 11,
        "num_words": 230,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32593612670898436,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "API Response",
              "Error Handling",
              "Syntax"
            ]
          },
          "keywords": [
            "notification configuration",
            "vault",
            "Amazon S3 Glacier",
            "GET request",
            "AWS account ID",
            "request headers",
            "response headers",
            "SNSTopic",
            "Events",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "HTTP/1.1",
            "x-amz-glacier-version",
            "SNSTopic"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "AWS Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the notification configuration for an Amazon S3 Glacier vault using the Get Vault Notifications API. It includes syntax, request details, and response structure for the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve the notification configuration for an Amazon S3 Glacier vault?",
            "What is the syntax for the Get Vault Notifications API request?",
            "What does the response structure of the Get Vault Notifications API include?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "notification configuration",
          "Events",
          "x-amz-glacier-version",
          "vault",
          "response headers",
          "AWS account ID",
          "API Version 2012-06-01",
          "HTTP/1.1",
          "GET request",
          "Amazon S3 Glacier",
          "request headers",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_356",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. Events\nA list of one or more events for which Amazon S3 Glacier (S3 Glacier) will send a notification\nto the specified Amazon SNS topic. For information about vault events for which you can\nconfigure a vault to publish notifications, see Set Vault Notification Configuration (PUT\nnotification-configuration). Type: Array\nSNSTopic\nThe Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN). For more information, see Getting Started with Amazon SNS in the Amazon Simple Notification\nService Getting Started Guide. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to retrieve the notification configuration for a vault. Get Vault Notifications API Version 2012-06-01 400\n\nAmazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to the notification-configuration subresource of a\nvault. GET /-/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the audit logging configuration document in the body of the response\nin JSON format. In this example, the configuration shows that notifications for two events\n(ArchiveRetrievalCompleted and InventoryRetrievalCompleted) are sent to the Amazon\nSNS topic arn:aws:sns:us-west-2:012345678901:mytopic. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 150\n{\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nRelated Sections\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Vault Notifications API Version 2012-06-01 401\n\nAmazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nInitiate Vault Lock (POST lock-policy)\nDescription\nThis operation initiates the vault locking process by doing the following:\n\u2022 Installing a vault lock policy on the specified vault. \u2022 Setting the lock state of vault lock to InProgress.",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 13,
        "num_words": 337,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3413998530461238,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Body",
              "Example Request",
              "Example Response",
              "API Version Information",
              "Related Sections"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "vault notifications",
            "notification-configuration",
            "JSON fields",
            "API Version 2012-06-01",
            "Error Responses",
            "Events",
            "Vault Lock",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS4-HMAC-SHA256",
            "arn:aws:sns:us-west-2:012345678901:mytopic",
            "Identity and Access Management"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Notifications",
          "secondary_categories": [
            "Amazon SNS Integration",
            "Vault Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and configure notification settings for an Amazon S3 Glacier vault, including examples of API requests and responses. It also introduces the vault locking process and related operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve the notification configuration for an Amazon S3 Glacier vault?",
            "What events can trigger Amazon SNS notifications for an S3 Glacier vault?",
            "How do I initiate the vault locking process in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier Notifications]",
        "tf_idf_keywords": [
          "Events",
          "notification-configuration",
          "vault notifications",
          "Vault Lock",
          "AWS SDK",
          "Identity and Access Management",
          "API Version 2012-06-01",
          "Amazon SNS",
          "JSON fields",
          "arn:aws:sns:us-west-2:012345678901:mytopic",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_357",
      "text": "\u2022 Returning a lock ID, which is used to complete the vault locking process. You can set one vault lock policy for each vault and this policy can be up to 20 KB in size. For more\ninformation about vault lock policies, see Vault Lock Policies. You must complete the vault locking process within 24 hours after the vault lock enters the\nInProgress state. After the 24 hour window ends, the lock ID expires, the vault automatically\nexits the InProgress state, and the vault lock policy is removed from the vault. You call Complete\nVault Lock (POST lockId) to complete the vault locking process by setting the state of the vault lock\nto Locked. Note\nAfter a vault lock is in the Locked state, you cannot initiate a new vault lock for the vault. You can stop the vault locking process by calling Abort Vault Lock (DELETE lock-policy). You can\nget the state of the vault lock by calling Get Vault Lock (GET lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock.",
      "start_idx": 624063,
      "end_idx": 626454,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6243994818793402,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "State Management"
            ]
          },
          "keywords": [
            "vault lock",
            "lock ID",
            "vault lock policy",
            "InProgress state",
            "Locked state",
            "Complete Vault Lock",
            "Abort Vault Lock",
            "Get Vault Lock",
            "S3 Glacier",
            "vault locking process"
          ],
          "entities": [
            "Vault Lock Policies",
            "Complete Vault Lock",
            "Abort Vault Lock",
            "Get Vault Lock",
            "S3 Glacier Vault Lock"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Locking Process",
          "secondary_categories": [
            "Vault Policies",
            "State Management"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the S3 Glacier vault locking process, including steps to complete, abort, and check the state of a vault lock, as well as details about lock ID expiration and vault lock policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete the vault locking process in S3 Glacier?",
            "What happens if I don't complete the vault locking process within 24 hours?",
            "How can I check the state of a vault lock?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Vault Locking Process]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Complete Vault Lock",
          "lock ID",
          "vault lock policy",
          "vault locking process",
          "Vault Lock Policies",
          "vault lock",
          "Locked state",
          "Abort Vault Lock",
          "S3 Glacier Vault Lock",
          "InProgress state",
          "Get Vault Lock"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_358",
      "text": "If this operation is called when the vault lock is in the InProgress state, the operation returns an\nAccessDeniedException error. When the vault lock is in the InProgress state you must call\nAbort Vault Lock (DELETE lock-policy) before you can initiate a new vault lock policy. Initiate Vault Lock API Version 2012-06-01 402\n\nAmazon S3 Glacier Developer Guide\nRequests\nTo initiate the vault locking process, send an HTTP POST request to the URI of the lock-policy\nsubresource of the vault, as shown in the following syntax example. Syntax\nPOST /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 624063,
      "end_idx": 626454,
      "metadata": {
        "num_sentences": 10,
        "num_words": 213,
        "chunk_type": "semantic_split",
        "coherence_score": 0.287069574991862,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Error Handling",
              "Request Syntax"
            ]
          },
          "keywords": [
            "vault lock",
            "InProgress state",
            "AccessDeniedException",
            "Abort Vault Lock",
            "Initiate Vault Lock",
            "lock-policy",
            "AWS account ID",
            "HTTP POST request",
            "x-amz-glacier-version",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Vault Lock",
            "AccessDeniedException",
            "AWS account ID",
            "Amazon S3 Glacier",
            "lock-policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Error Handling",
            "Request Syntax"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate a vault locking process in Amazon S3 Glacier, including the required HTTP POST request, syntax, and prerequisites when the vault lock is in the InProgress state.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What is the HTTP request syntax for initiating a vault lock in Amazon S3 Glacier?",
            "What should I do if the vault lock is in the InProgress state?",
            "What is the significance of the AccountId value in the request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "x-amz-glacier-version",
          "Vault Lock",
          "Initiate Vault Lock",
          "vault lock",
          "AWS account ID",
          "HTTP POST request",
          "Abort Vault Lock",
          "AccessDeniedException",
          "InProgress state",
          "lock-policy",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_359",
      "text": "Request Body\nThe request body contains the following JSON fields. Initiate Vault Lock API Version 2012-06-01 403\n\nAmazon S3 Glacier Developer Guide\nPolicy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nRequired: Yes\nResponses\nAmazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created response, if the policy is accepted. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-lock-id: lockId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nx-amz-lock-\nThe lock ID, which is used to complete the vault locking process. id\nType: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Initiate Vault Lock API Version 2012-06-01 404\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's lock-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character. PUT /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-\nlock\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\",\\\"Condition\\\":{\\\"NumericLessThanEquals\\\":\n{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\nExample Response\nIf the request was successful, S3 Glacier returns an HTTP 201 Created response, as shown in the\nfollowing example.",
      "start_idx": 626455,
      "end_idx": 630335,
      "metadata": {
        "num_sentences": 11,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34003923589533025,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Request Body",
              "Response Headers",
              "Error Handling",
              "Examples"
            ]
          },
          "keywords": [
            "Vault Lock",
            "API",
            "JSON",
            "Policy",
            "Amazon S3 Glacier",
            "HTTP 201 Created",
            "Response Headers",
            "x-amz-lock-id",
            "Error Responses",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-lock-id",
            "HTTP/1.1",
            "AWS4-HMAC-SHA256",
            "glacier:DeleteArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "JSON Structure"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the request and response structure for the Amazon S3 Glacier Initiate Vault Lock API, including the required JSON fields, response codes, headers, and an example request/response.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What is the required format for the vault lock policy in the Initiate Vault Lock API?",
            "What HTTP response does S3 Glacier return if the vault lock policy is accepted?",
            "How do you construct an HTTP PUT request to set a vault lock policy in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Vault Lock",
          "glacier:DeleteArchive",
          "HTTP 201 Created",
          "Response Headers",
          "x-amz-lock-id",
          "HTTP/1.1",
          "API",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "JSON",
          "Authorization",
          "Error Responses",
          "Policy"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_360",
      "text": "HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-lock-id: AE863rKkWZU53SLW5be4DUcW\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\nInitiate Vault Lock API Version 2012-06-01 405\n\nAmazon S3 Glacier Developer Guide\n\u2022 Get Vault Lock (GET lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Tags For Vault (GET tags)\nThis operation lists all the tags attached to a vault. The operation returns an empty map if there\nare no tags. For more information about tags, see Tagging Amazon S3 Glacier Resources. Request Syntax\nTo list the tags for a vault, send an HTTP GET request to the tags URI as shown in the following\nsyntax example. GET /AccountId/vaults/vaultName/tags HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. List Tags For Vault API Version 2012-06-01 406\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 626455,
      "end_idx": 630335,
      "metadata": {
        "num_sentences": 11,
        "num_words": 265,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33030118075284093,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Response",
              "Request Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "HTTP/1.1",
            "Vault Lock",
            "x-amz-lock-id",
            "AWS SDK",
            "Amazon S3 Glacier",
            "Request Headers",
            "API Version",
            "AccountId",
            "tags",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "x-amzn-RequestId",
            "x-amz-lock-id",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "HTTP Request Syntax",
            "AWS Request Headers"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation covers the Amazon S3 Glacier API operations related to vault lock management, including initiating, completing, and aborting a vault lock, as well as listing tags for a vault. It provides details on request syntax, headers, and account ID requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault lock using the Amazon S3 Glacier API?",
            "What is the syntax for listing tags attached to a vault?",
            "What are the account ID requirements for Amazon S3 Glacier API requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "Vault Lock",
          "AccountId",
          "AWS SDK",
          "tags",
          "x-amz-lock-id",
          "HTTP/1.1",
          "glacier.Region.amazonaws.com",
          "Amazon S3 Glacier",
          "Authorization",
          "AWS Command Line Interface",
          "Request Headers",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_361",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIf the operation is successful, the service sends back an HTTP 200 OK response. Response Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Tags\":\n{\n\"string\" : \"string\",\n\"string\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. Tags\nThe tags attached to the vault.",
      "start_idx": 630336,
      "end_idx": 630947,
      "metadata": {
        "num_sentences": 6,
        "num_words": 90,
        "breakpoint_idx": 3728,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3347520192464193,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Body",
              "Response Syntax",
              "Response Headers",
              "Response Body"
            ]
          },
          "keywords": [
            "HTTP 200 OK",
            "x-amzn-RequestId",
            "Content-Type",
            "Content-Length",
            "JSON",
            "Tags",
            "Response Headers",
            "vault",
            "Common Response Headers",
            "operation"
          ],
          "entities": [
            "HTTP/1.1",
            "x-amzn-RequestId",
            "Date",
            "Content-Type",
            "Tags"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "HTTP Response Handling",
          "secondary_categories": [
            "API Documentation",
            "JSON Data Structure"
          ],
          "mentioned_services": [
            "x-amzn-RequestId"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the response structure for an operation without a request body, detailing the HTTP 200 OK response syntax, headers, and JSON fields containing tags attached to the vault.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the response syntax for this operation?",
            "What JSON fields are included in the response body?",
            "What headers are used in the response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [HTTP Response Handling]",
        "tf_idf_keywords": [
          "Content-Type",
          "x-amzn-RequestId",
          "Response Headers",
          "vault",
          "operation",
          "Tags",
          "HTTP/1.1",
          "Common Response Headers",
          "Date",
          "Content-Length",
          "JSON",
          "HTTP 200 OK"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_362",
      "text": "Each tag is composed of a key and a value. Type: String to String map\nRequired: Yes\nList Tags For Vault API Version 2012-06-01 407\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample: List Tags For a Vault\nThe following example lists the tags for a vault. Example Request\nIn this example, a GET request is sent to retrieve a list of tags from the specified vault. GET /-/vaults/examplevault/tags HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 200 OK with a list of\ntags for the vault as shown in the following example. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"Tags\",\n{\n\"examplekey1\": \"examplevalue1\",\n\"examplekey2\": \"examplevalue2\"\n}\n}\nRelated Sections\nList Tags For Vault API Version 2012-06-01 408\n\nAmazon S3 Glacier Developer Guide\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Vaults (GET vaults)\nDescription\nThis operation lists all vaults owned by the calling user\u2019s account. The list returned in the response\nis ASCII-sorted by vault name. By default, this operation returns up to 10 items per request.",
      "start_idx": 630948,
      "end_idx": 633983,
      "metadata": {
        "num_sentences": 8,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4702847344534738,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Example Request",
              "Example Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Tags",
            "API Version 2012-06-01",
            "GET Request",
            "HTTP 200 OK",
            "Error Responses",
            "AWS4-HMAC-SHA256",
            "Authorization",
            "Content-Type"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vaults",
            "AWS Command Line Interface",
            "Tags",
            "Authorization Header"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Error Handling",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on the List Tags For Vault API operation in Amazon S3 Glacier, including example requests, responses, related sections, and error handling. It explains how to retrieve tags associated with a vault using a GET request.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list tags for a vault in Amazon S3 Glacier?",
            "What does the response for a successful List Tags For Vault request look like?",
            "What are the required headers for the List Tags For Vault API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "Content-Type",
          "Authorization Header",
          "Vault",
          "GET Request",
          "Tags",
          "API Version 2012-06-01",
          "Authorization",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "vaults",
          "HTTP 200 OK",
          "AWS Command Line Interface",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_363",
      "text": "If there are more vaults to list, the\nmarker field in the response body contains the vault Amazon Resource Name (ARN) at which to\ncontinue the list with a new List Vaults request; otherwise, the marker field is null. In your next\nList Vaults request you set the marker parameter to the value Amazon S3 Glacier (S3 Glacier)\nreturned in the responses to your previous List Vaults request. You can also limit the number of\nvaults returned in the response by specifying the limit parameter in the request. Requests\nTo get a list of vaults, you send a GET request to the vaults resource. Syntax\nGET /AccountId/vaults HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nList Vaults API Version 2012-06-01 409\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 630948,
      "end_idx": 633983,
      "metadata": {
        "num_sentences": 8,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41503661019461496,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "vaults",
            "marker",
            "Amazon Resource Name",
            "ARN",
            "List Vaults",
            "limit parameter",
            "GET request",
            "AWS account ID",
            "x-amz-glacier-version",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Vaults API",
            "AWS account ID",
            "x-amz-glacier-version",
            "SignatureValue"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list vaults in Amazon S3 Glacier using the List Vaults API, including parameters like marker and limit, and the required request syntax and authorization details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier?",
            "What is the purpose of the marker field in the List Vaults API response?",
            "How do I specify the AWS account ID in a List Vaults API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Amazon Resource Name",
          "S3 Glacier",
          "List Vaults",
          "marker",
          "x-amz-glacier-version",
          "limit parameter",
          "AWS account ID",
          "GET request",
          "Amazon S3 Glacier",
          "vaults",
          "List Vaults API",
          "ARN",
          "SignatureValue"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_364",
      "text": "Request Parameters\nThis operation uses the following request parameters. Name Description Required\nlimit No\nThe maximum number of vaults to be returned. The default\nlimit is 10. The number of vaults returned might be fewer\nthan the specified limit, but the number of returned vaults\nnever exceeds the limit. Type: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 10.\nmarker No\nA string used for pagination. marker specifies the vault ARN\nafter which the listing of vaults should begin. (The vault\nspecified by marker is not included in the returned list.) Get\nthe marker value from a previous List Vaults response. You\nneed to include the m arker only if you are continuing the\npagination of results started in a previous List Vaults request.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 127,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32152218288845485,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Parameters",
              "Pagination",
              "Constraints"
            ]
          },
          "keywords": [
            "request parameters",
            "limit",
            "vaults",
            "marker",
            "pagination",
            "ARN",
            "constraints",
            "integer value",
            "List Vaults",
            "default limit"
          ],
          "entities": [
            "vault ARN",
            "List Vaults response",
            "List Vaults request"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Request Parameters",
          "secondary_categories": [
            "Pagination",
            "Data Constraints"
          ],
          "mentioned_services": [
            "Vault Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the request parameters for an operation to list vaults, including 'limit' for the number of vaults and 'marker' for pagination purposes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the 'limit' parameter in the List Vaults operation?",
            "How does the 'marker' parameter facilitate pagination in vault listings?",
            "What are the constraints for the 'limit' parameter in this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Request Parameters]",
        "tf_idf_keywords": [
          "constraints",
          "vaults",
          "request parameters",
          "marker",
          "List Vaults",
          "integer value",
          "Vault Service",
          "vault ARN",
          "default limit",
          "limit",
          "pagination",
          "List Vaults response",
          "ARN",
          "List Vaults request"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_365",
      "text": "Specifying an empty value (\"\") for the marker returns a list of\nvaults starting from the first vault. Type: String\nConstraints: None\nList Vaults API Version 2012-06-01 410\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Marker\": String\n\"VaultList\": [\n{\n\"CreationDate\": String,\n\"LastInventoryDate\": String,\n\"NumberOfArchives\": Number,\n\"SizeInBytes\": Number,\n\"VaultARN\": String,\n\"VaultName\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. List Vaults API Version 2012-06-01 411\n\nAmazon S3 Glacier Developer Guide\nCreationDate\nThe date the vault was created, in Coordinated Universal Time (UTC). Type: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 173,
        "chunk_type": "semantic_split",
        "coherence_score": 0.281854502360026,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Specification",
              "Response Syntax",
              "Field Description"
            ]
          },
          "keywords": [
            "marker",
            "vaults",
            "Amazon S3 Glacier",
            "request headers",
            "response headers",
            "JSON fields",
            "CreationDate",
            "VaultList",
            "NumberOfArchives",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Vaults API",
            "HTTP/1.1 200 OK",
            "ISO 8601",
            "UTC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the List Vaults API operation for Amazon S3 Glacier, including request and response details, such as headers, syntax, and the structure of the JSON response body.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the JSON response for the List Vaults API?",
            "What headers and constraints are required for the List Vaults API?",
            "How is the creation date of a vault formatted in the response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "HTTP/1.1 200 OK",
          "CreationDate",
          "vaults",
          "VaultARN",
          "response headers",
          "VaultList",
          "JSON fields",
          "Amazon S3 Glacier",
          "UTC",
          "marker",
          "request headers",
          "NumberOfArchives",
          "List Vaults API",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_366",
      "text": "LastInventoryDate\nThe date of the last vault inventory, in Coordinated Universal Time (UTC). This field can be\nnull if an inventory has not yet run on the vault, for example, if you just created the vault. For\ninformation about initiating an inventory for a vault, see Initiate Job (POST jobs). Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Marker\nThe vaultARN that represents where to continue pagination of the results. You use the marker\nin another List Vaults request to obtain more vaults in the list. If there are no more vaults, this\nvalue is null. Type: String\nNumberOfArchives\nThe number of archives in the vault as of the last inventory date. Type: Number\nSizeInBytes\nThe total size, in bytes, of all the archives in the vault including any per-archive overhead, as of\nthe last inventory date. Type: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 153,
        "chunk_type": "semantic_split",
        "coherence_score": 0.415120612250434,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Field Description",
              "Data Type"
            ]
          },
          "keywords": [
            "LastInventoryDate",
            "vault inventory",
            "UTC",
            "ISO 8601",
            "Marker",
            "vaultARN",
            "NumberOfArchives",
            "SizeInBytes",
            "VaultARN",
            "Amazon Resource Name"
          ],
          "entities": [
            "LastInventoryDate",
            "vaultARN",
            "ISO 8601",
            "NumberOfArchives",
            "VaultARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage",
          "secondary_categories": [
            "API Operations",
            "Cloud Infrastructure"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes various fields related to a vault's inventory, including the last inventory date, pagination marker, number of archives, total size in bytes, and the vault's Amazon Resource Name (ARN). It specifies data types and provides an example for the ISO 8601 date format.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the LastInventoryDate field?",
            "How can I use the marker to paginate through vaults?",
            "What does the NumberOfArchives field represent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Storage]",
        "tf_idf_keywords": [
          "SizeInBytes",
          "vault inventory",
          "Amazon Resource Name",
          "LastInventoryDate",
          "VaultARN",
          "Marker",
          "UTC",
          "Amazon S3 Glacier",
          "NumberOfArchives",
          "vaultARN",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_367",
      "text": "Type: String\nVaultList\nAn array of objects, with each object providing a description of a vault. Type: Array\nList Vaults API Version 2012-06-01 412\n\nAmazon S3 Glacier Developer Guide\nVaultName\nThe vault name. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample: List All Vaults\nThe following example lists vaults. Because the marker and limit parameters are not specified in\nthe request, up to 10 vaults are returned. Example Request\nGET /-/vaults HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe Marker is null indicating there are no more vaults to list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 497\n{\n\"Marker\": null,\n\"VaultList\": [\n{\n\"CreationDate\": \"2012-03-16T22:22:47.214Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\nList Vaults API Version 2012-06-01 413\n\nAmazon S3 Glacier Developer Guide\n\"NumberOfArchives\": 2,\n\"SizeInBytes\": 12334,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault1\",\n\"VaultName\": \"examplevault1\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault2\",\n\"VaultName\": \"examplevault2\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-25T12:14:31.121Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault3\",\n\"VaultName\": \"examplevault3\"\n}\n]\n}\nExample: Partial List of Vaults\nThe following example returns two vaults starting at the vault specified by the marker. Example Request\nGET /-/vaults?limit=2&marker=arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nTwo vaults are returned in the list. The Marker contains the vault ARN to continue pagination in\nanother List Vaults request. List Vaults API Version 2012-06-01 414\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 497\n{\n\"Marker\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault3\",\n\"VaultList\": [\n{\n\"CreationDate\": \"2012-03-16T22:22:47.214Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 2,\n\"SizeInBytes\": 12334,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault1\",\n\"VaultName\": \"examplevault1\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault2\",\n\"VaultName\": \"examplevault2\"\n}\n]\n}\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\nList Vaults API Version 2012-06-01 415\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nRemove Tags From Vault (POST tags remove)\nThis operation removes one or more tags from the set of tags attached to a vault.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 388,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5151908874511719,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural",
              "Conceptual"
            ]
          },
          "keywords": [
            "VaultList",
            "Amazon S3 Glacier",
            "List Vaults API",
            "VaultName",
            "Marker",
            "ARN",
            "AWS4-HMAC-SHA256",
            "Pagination",
            "Error Responses",
            "NumberOfArchives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "VaultName",
            "AWS SDKs",
            "AWS Command Line Interface"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Vault Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on the 'List Vaults' API for Amazon S3 Glacier, including request and response examples, pagination, and related operations such as creating, deleting, and managing vaults.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve a list of vaults in Amazon S3 Glacier?",
            "What is the structure of the response for the 'List Vaults' API?",
            "How can I paginate through a large list of vaults using the marker parameter?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "Pagination",
          "VaultARN",
          "Marker",
          "AWS SDKs",
          "VaultList",
          "List Vaults API",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "AWS Command Line Interface",
          "NumberOfArchives",
          "VaultName",
          "ARN",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_368",
      "text": "For more\ninformation about tags, see Tagging Amazon S3 Glacier Resources. This operation is idempotent. The operation will be successful, even if there are no tags attached to\nthe vault. Request Syntax\nTo remove tags from a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example. POST /AccountId/vaults/vaultName/tags?operation=remove HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagKeys\": [\n\"string\",\n\"string\"\n]\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Remove Tags From Vault API Version 2012-06-01 416\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\noperation A single query string parameter operation with a value of Yes\n=remove remove to distinguish it from Add Tags To Vault (POST tags\nadd). Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 206,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29341328938802086,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "HTTP Syntax",
              "Parameter Description"
            ]
          },
          "keywords": [
            "tags",
            "Amazon S3 Glacier",
            "idempotent",
            "vault",
            "HTTP POST",
            "TagKeys",
            "AccountId",
            "AWS account ID",
            "x-amz-glacier-version",
            "remove operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "TagKeys",
            "x-amz-glacier-version",
            "Remove Tags From Vault API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "AWS Authentication",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to remove tags from an Amazon S3 Glacier vault by sending an HTTP POST request to the tags URI, including required parameters and headers for the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I remove tags from an Amazon S3 Glacier vault?",
            "What is the syntax for the HTTP POST request to remove tags from a vault?",
            "What are the required parameters and headers for the Remove Tags From Vault API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "idempotent",
          "Remove Tags From Vault API",
          "HTTP POST",
          "AccountId",
          "x-amz-glacier-version",
          "tags",
          "vault",
          "AWS account ID",
          "Amazon S3 Glacier",
          "remove operation",
          "TagKeys"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_369",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. TagKeys\nA list of tag keys. Each corresponding tag is removed from the vault. Type: array of Strings\nLength constraint: Minimum of 1 item in the list.",
      "start_idx": 642256,
      "end_idx": 642546,
      "metadata": {
        "num_sentences": 5,
        "num_words": 47,
        "breakpoint_idx": 3799,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.17402915954589843,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "Request Body"
            ]
          },
          "keywords": [
            "request headers",
            "JSON fields",
            "TagKeys",
            "vault",
            "array",
            "Strings",
            "Length constraint",
            "minimum",
            "list",
            "tag keys"
          ],
          "entities": [
            "Common Request Headers",
            "TagKeys"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Request Structure",
          "secondary_categories": [
            "JSON Data Handling",
            "Header Configuration"
          ],
          "mentioned_services": [
            "Vault"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the request body structure for removing tags from a vault, including the required JSON fields and constraints for the TagKeys array.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the JSON fields required in the request body for removing tags from a vault?",
            "What is the length constraint for the TagKeys array?",
            "How can I remove specific tags from a vault using the request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Request Structure]",
        "tf_idf_keywords": [
          "Length constraint",
          "Common Request Headers",
          "list",
          "tag keys",
          "TagKeys",
          "minimum",
          "vault",
          "Vault",
          "JSON fields",
          "request headers",
          "Strings",
          "array"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_370",
      "text": "Maximum of 10 items in the list. Required: Yes\nResponses\nIf the action is successful, the service sends back an HTTP 204 No Content response with an\nempty HTTP body. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nRemove Tags From Vault API Version 2012-06-01 417\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP POST request to remove the specified tags. POST /-/vaults/examplevault/tags?operation=remove HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagsKeys\": [\n\"examplekey1\",\n\"examplekey2\"\n]\n}\nExample Response\nIf the request was successful Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nRemove Tags From Vault API Version 2012-06-01 418\n\nAmazon S3 Glacier Developer Guide\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 List Tags For Vault (GET tags)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Access Policy (PUT access-policy)\nDescription\nThis operation configures an access policy for a vault and will overwrite an existing policy. To\nconfigure a vault access policy, send a PUT request to the access-policy subresource of the\nvault.",
      "start_idx": 642547,
      "end_idx": 644610,
      "metadata": {
        "num_sentences": 10,
        "num_words": 269,
        "breakpoint_idx": 3809,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28925302293565536,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Responses",
              "HTTP Headers",
              "Error Handling",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP 204 No Content",
            "Remove Tags From Vault",
            "API Version 2012-06-01",
            "Response Headers",
            "Error Responses",
            "TagsKeys",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "Vault Access Policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP POST",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "TagsKeys"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "HTTP Protocol",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Remove Tags From Vault API in Amazon S3 Glacier, including request and response details, syntax, and examples. It also provides references to related operations and SDKs for further usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I remove tags from a vault in Amazon S3 Glacier?",
            "What is the HTTP response for a successful Remove Tags From Vault API request?",
            "What are the required headers and syntax for the Remove Tags From Vault API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "TagsKeys",
          "HTTP POST",
          "HTTP 204 No Content",
          "x-amz-glacier-version",
          "Response Headers",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Vault Access Policy",
          "Authorization",
          "Error Responses",
          "Remove Tags From Vault"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_371",
      "text": "You can set one access policy per vault and the policy can be up to 20 KB in size. For more\ninformation about vault access policies, see Vault Access Policies. Requests\nSyntax\nTo set a vault access policy, send an HTTP PUT request to the URI of the vault's access-policy\nsubresource as shown in the following syntax example. PUT /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nSet Vault Access Policy API Version 2012-06-01 419\n\nAmazon S3 Glacier Developer Guide\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. Policy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nRequired: Yes\nResponses\nIn response, S3 Glacier returns 204 No Content if the policy is accepted. Syntax\nHTTP/1.1 204 No Content\nSet Vault Access Policy API Version 2012-06-01 420\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 644611,
      "end_idx": 649459,
      "metadata": {
        "num_sentences": 14,
        "num_words": 276,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31232066730876545,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Request Syntax",
              "Response Syntax"
            ]
          },
          "keywords": [
            "vault access policy",
            "HTTP PUT request",
            "AWS account ID",
            "JSON string",
            "x-amz-glacier-version",
            "access-policy subresource",
            "response headers",
            "common request headers",
            "204 No Content",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault access policy",
            "x-amz-glacier-version",
            "AccountId",
            "Policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Access Management",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to set an access policy for an Amazon S3 Glacier vault via an HTTP PUT request, including details on request syntax, headers, body, and response structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set an access policy for an Amazon S3 Glacier vault?",
            "What is the required format for the vault access policy JSON string?",
            "What response should I expect after successfully setting a vault access policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "access-policy subresource",
          "vault access policy",
          "x-amz-glacier-version",
          "AccountId",
          "common request headers",
          "response headers",
          "AWS account ID",
          "HTTP PUT request",
          "Amazon S3 Glacier",
          "JSON string",
          "204 No Content",
          "Policy"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_372",
      "text": "Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's access-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character. PUT /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-owner-access-\nrights\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\"}]}\"}\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example. Set Vault Access Policy API Version 2012-06-01 421\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Get Vault Access Policy (GET access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Notification Configuration (PUT notification-configuration)\nDescription\nRetrieving an archive and a vault inventory are asynchronous operations in Amazon S3 Glacier\n(S3 Glacier) for which you must first initiate a job and wait for the job to complete before you\ncan download the job output. You can configure a vault to post a message to an Amazon Simple\nNotification Service (Amazon SNS) topic when these jobs complete. You can use this operation\nto set notification configuration on the vault. For more information, see Configuring Vault\nNotifications in Amazon S3 Glacier. To configure vault notifications, send a PUT request to the notification-configuration\nsubresource of the vault. A notification configuration is specific to a vault; therefore, it is also\nreferred to as a vault subresource. The request should include a JSON document that provides an\nAmazon Simple Notification Service (Amazon SNS) topic and the events for which you want S3\nGlacier to send notifications to the topic. You can configure a vault to publish a notification for the following vault events:\nSet Vault Notification Configuration API Version 2012-06-01 422\n\nAmazon S3 Glacier Developer Guide\n\u2022 ArchiveRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\narchive retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can be\nSucceeded or Failed.",
      "start_idx": 644611,
      "end_idx": 649459,
      "metadata": {
        "num_sentences": 14,
        "num_words": 377,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35715325324089975,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "access-policy",
            "notification configuration",
            "Amazon SNS",
            "HTTP PUT request",
            "JSON document",
            "archive retrieval",
            "vault subresource",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS4-HMAC-SHA256",
            "vault's access-policy",
            "Set Vault Notification Configuration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Error Handling",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set access policies and notification configurations for Amazon S3 Glacier vaults using HTTP PUT requests, including example requests and responses, and details on related operations and events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set an access policy for an Amazon S3 Glacier vault?",
            "What is the format of the JSON policy string for setting a vault's access policy?",
            "What events can I configure for Amazon S3 Glacier vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "vault subresource",
          "notification configuration",
          "JSON document",
          "vault's access-policy",
          "vault",
          "access-policy",
          "Set Vault Notification Configuration",
          "Amazon SNS",
          "HTTP PUT request",
          "archive retrieval",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "API version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_373",
      "text": "The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID). \u2022 InventoryRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\ninventory retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can\nbe Succeeded or Failed. The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID). Amazon SNS topics must grant permission to the vault to be allowed to publish notifications to the\ntopic. Requests\nTo set notification configuration on your vault, send a PUT request to the URI of the vault's\nnotification-configuration subresource. You specify the configuration in the request\nbody. The configuration includes the Amazon SNS topic name and an array of events that trigger\nnotification to each topic. Syntax\nPUT /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\n{\n\"SNSTopic\": String,\n\"Events\":[String, ...]\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Set Vault Notification Configuration API Version 2012-06-01 423\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 649460,
      "end_idx": 651120,
      "metadata": {
        "num_sentences": 13,
        "num_words": 252,
        "breakpoint_idx": 3850,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28116681025578427,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Syntax",
              "Event Description",
              "Request Details"
            ]
          },
          "keywords": [
            "SNS topic",
            "notification-configuration",
            "inventory retrieval",
            "vault",
            "PUT request",
            "Amazon S3 Glacier",
            "AccountId",
            "authorization",
            "events",
            "URI"
          ],
          "entities": [
            "Amazon SNS",
            "AWS account ID",
            "Amazon S3 Glacier",
            "Describe Job",
            "Initiate Job"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS API Operations",
          "secondary_categories": [
            "Notification Configuration",
            "Event Management"
          ],
          "mentioned_services": [
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 Glacier vault notifications using a PUT request to specify an SNS topic and events that trigger notifications. It also outlines syntax, request structure, and permissions required for publishing notifications to SNS topics.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up notification configuration for an Amazon S3 Glacier vault?",
            "What is the syntax for a PUT request to configure vault notifications?",
            "What permissions are required for Amazon SNS topics to receive notifications from a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS API Operations]",
        "tf_idf_keywords": [
          "events",
          "Describe Job",
          "SNS topic",
          "notification-configuration",
          "AccountId",
          "authorization",
          "Initiate Job",
          "vault",
          "AWS account ID",
          "Amazon SNS",
          "URI",
          "PUT request",
          "inventory retrieval",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_374",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThe JSON in the request body contains the following fields. Events\nAn array of one or more events for which you want S3 Glacier to send notification. Valid Values: ArchiveRetrievalCompleted | InventoryRetrievalCompleted\nRequired: yes\nType: Array\nSNSTopic\nThe Amazon SNS topic ARN. For more information, go to Getting Started with Amazon SNS in\nthe Amazon Simple Notification Service Getting Started Guide. Required: yes\nType: String\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns 204 No Content if the notification\nconfiguration is accepted. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nSet Vault Notification Configuration API Version 2012-06-01 424\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to configure vault notification. Example Request\nThe following request sets the examplevault notification configuration so that notifications for\ntwo events (ArchiveRetrievalCompleted and InventoryRetrievalCompleted ) are sent to\nthe Amazon SNS topic arn:aws:sns:us-west-2:012345678901:mytopic. PUT /-/vaults/examplevault/notification-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nExample Response\nA successful response returns a 204 No Content. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nSet Vault Notification Configuration API Version 2012-06-01 425\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nArchive Operations\nThe following are the archive operations available for use in S3 Glacier. Topics\n\u2022 Delete Archive (DELETE archive)\n\u2022 Upload Archive (POST archive)\nDelete Archive (DELETE archive)\nDescription\nThis operation deletes an archive from a vault.",
      "start_idx": 651121,
      "end_idx": 654022,
      "metadata": {
        "num_sentences": 15,
        "num_words": 345,
        "breakpoint_idx": 3865,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3130469549269903,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request and Response",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "notification configuration",
            "SNS topic",
            "vault",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "Error Responses",
            "HTTP/1.1 204 No Content",
            "Set Vault Notification Configuration",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "arn:aws:sns:us-west-2:012345678901:mytopic",
            "AWS4-HMAC-SHA256",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Notification Configuration",
            "Archive Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Identity and Access Management"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on configuring vault notifications in Amazon S3 Glacier, including request and response formats, required fields, valid values, and related operations like deleting and uploading archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What are the valid events for S3 Glacier notifications?",
            "What response should I expect after setting a vault notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "notification configuration",
          "SNS topic",
          "HTTP/1.1 204 No Content",
          "x-amzn-RequestId",
          "Identity and Access Management",
          "AWS SDK",
          "vault",
          "Set Vault Notification Configuration",
          "Amazon SNS",
          "arn:aws:sns:us-west-2:012345678901:mytopic",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "ArchiveRetrievalCompleted",
          "Error Responses",
          "InventoryRetrievalCompleted"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_375",
      "text": "You can delete one archive at a time from a vault. To delete the archive you must provide its archive ID in the delete request. You can get the archive\nID by downloading the vault inventory for the vault that contains the archive. For more information\nabout downloading the vault inventory, see Downloading a Vault Inventory in Amazon S3 Glacier. After you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail. Archive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\nArchive Operations API Version 2012-06-01 426\n\nAmazon S3 Glacier Developer Guide\n\u2022 If the archive retrieval job is actively preparing the data for download when Amazon S3 Glacier\n(S3 Glacier) receives the delete archive request, the archival retrieval operation might fail. \u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, you will be able to download the output. For more information about archive retrieval, see Downloading an Archive in S3 Glacier.",
      "start_idx": 654023,
      "end_idx": 656114,
      "metadata": {
        "num_sentences": 8,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.531071526663644,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Deletion",
              "Error Handling",
              "Job Scenarios"
            ]
          },
          "keywords": [
            "archive",
            "vault",
            "archive ID",
            "delete request",
            "vault inventory",
            "Amazon S3 Glacier",
            "archive retrieval",
            "retrieval job",
            "download",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault inventory",
            "archive ID",
            "delete archive request",
            "archive retrieval job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Archive Management",
          "secondary_categories": [
            "Data Retrieval",
            "Storage Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive from an Amazon S3 Glacier vault, the prerequisites for deletion, and the behavior of archive retrieval jobs after deletion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from an Amazon S3 Glacier vault?",
            "What happens to archive retrieval jobs if I delete an archive in S3 Glacier?",
            "How do I get the archive ID needed to delete an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Archive Management]",
        "tf_idf_keywords": [
          "vault inventory",
          "archive retrieval job",
          "archive",
          "archive ID",
          "vault",
          "delete request",
          "API Version 2012-06-01",
          "download",
          "archive retrieval",
          "Amazon S3 Glacier",
          "delete archive request",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_376",
      "text": "This operation is idempotent. Attempting to delete an already-deleted archive does not result in an\nerror. Requests\nTo delete an archive you send a DELETE request to the archive resource URI. Syntax\nDELETE /AccountId/vaults/VaultName/archives/ArchiveID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nx-amz-Date: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 654023,
      "end_idx": 656114,
      "metadata": {
        "num_sentences": 8,
        "num_words": 131,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2551795414515904,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "HTTP Request"
            ]
          },
          "keywords": [
            "idempotent",
            "DELETE request",
            "archive resource URI",
            "AccountId",
            "VaultName",
            "ArchiveID",
            "x-amz-Date",
            "Authorization",
            "x-amz-glacier-version",
            "AWS account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "ArchiveID",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "HTTP Operations",
          "secondary_categories": [
            "AWS Services",
            "Request Authorization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the idempotent operation for deleting an archive in Amazon S3 Glacier using a DELETE request, including syntax and header details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What is the syntax for sending a DELETE request to remove an archive?",
            "What headers are required for the DELETE archive operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [HTTP Operations]",
        "tf_idf_keywords": [
          "idempotent",
          "x-amz-Date",
          "AccountId",
          "x-amz-glacier-version",
          "AWS account ID",
          "ArchiveID",
          "Amazon S3 Glacier",
          "archive resource URI",
          "Authorization",
          "VaultName",
          "DELETE request"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_377",
      "text": "For information about\ncommon request headers, see Common Request Headers. Delete Archive API Version 2012-06-01 427\n\nAmazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 656115,
      "end_idx": 656504,
      "metadata": {
        "num_sentences": 3,
        "num_words": 55,
        "breakpoint_idx": 3884,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.380745808283488,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Headers",
              "Response Syntax"
            ]
          },
          "keywords": [
            "Delete Archive",
            "API Version 2012-06-01",
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "HTTP/1.1",
            "204 No Content",
            "x-amzn-RequestId",
            "Date",
            "Request Body"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Delete Archive API",
            "Common Request Headers",
            "Response Headers",
            "x-amzn-RequestId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the Delete Archive API for Amazon S3 Glacier, specifying that it does not have a request body and uses common response headers, with an example of a 204 No Content response syntax.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response syntax for the Delete Archive API in Amazon S3 Glacier?",
            "Does the Delete Archive API require a request body?",
            "What headers are used in the Delete Archive API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Request Body",
          "Common Request Headers",
          "x-amzn-RequestId",
          "Response Headers",
          "HTTP/1.1",
          "Date",
          "Delete Archive",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Delete Archive API",
          "204 No Content",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_378",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to delete an archive from the vault named\nexamplevault. Example Request\nThe ID of the archive to be deleted is specified as a subresource of archives. DELETE /-/vaults/examplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Archive API Version 2012-06-01 428\n\nAmazon S3 Glacier Developer Guide\nExample Response\nIf the request is successful, S3 Glacier responds with 204 No Content to indicate that the archive\nis deleted. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Archive (POST archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Archive (POST archive)\nDescription\nThis operation adds an archive to a vault. For a successful upload, your data is durably persisted. In\nresponse, Amazon S3 Glacier (S3 Glacier) returns the archive ID in the x-amz-archive-id header\nof the response. You should save the archive ID returned so that you can access the archive later. You must provide a SHA256 tree hash of the data you are uploading.",
      "start_idx": 656505,
      "end_idx": 661042,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3083725669167259,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "DELETE",
            "response headers",
            "error messages",
            "x-amz-glacier-version",
            "SHA256 tree hash",
            "multipart upload",
            "authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "x-amz-archive-id",
            "x-amzn-RequestId",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "HTTP Request/Response Structure",
            "Error Handling in APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive from an Amazon S3 Glacier vault, provides an example request and response, and describes related operations like uploading an archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from an Amazon S3 Glacier vault?",
            "What is the response code when an archive is successfully deleted?",
            "What headers are required for the Delete Archive API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "archive",
          "examplevault",
          "x-amzn-RequestId",
          "x-amz-glacier-version",
          "x-amz-archive-id",
          "response headers",
          "vault",
          "error messages",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "authorization",
          "DELETE",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_379",
      "text": "For information about\ncomputing a SHA256 tree hash, see Computing Checksums. Note\nThe SHA256 tree hash is only required for the Upload Archive (POST archive) action when\nusing the API. It is not required when using the AWS CLI. When uploading an archive, you can optionally specify an archive description of up to 1,024\nprintable ASCII characters. S3 Glacier returns the archive description when you either retrieve the\narchive or get the vault inventory. S3 Glacier does not interpret the description in any way. An\narchive description does not need to be unique. You cannot use the description to retrieve or sort\nthe archive list. Upload Archive API Version 2012-06-01 429\n\nAmazon S3 Glacier Developer Guide\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. The archive ID is an opaque sequence of characters from which you cannot infer\nany meaning about the archive. So you might maintain metadata about the archives on the client-\nside.",
      "start_idx": 656505,
      "end_idx": 661042,
      "metadata": {
        "num_sentences": 11,
        "num_words": 164,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3218552676114169,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "SHA256 tree hash",
            "Upload Archive",
            "API",
            "AWS CLI",
            "archive description",
            "vault inventory",
            "S3 Glacier",
            "archive ID",
            "metadata",
            "client-side"
          ],
          "entities": [
            "SHA256 tree hash",
            "Upload Archive API",
            "S3 Glacier",
            "AWS CLI",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage and Retrieval",
          "secondary_categories": [
            "Checksum Calculation",
            "Metadata Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the requirements for computing a SHA256 tree hash when using the S3 Glacier API to upload archives and details the optional use of archive descriptions, which are not interpreted or used for sorting by S3 Glacier. It also clarifies that additional metadata is unsupported, and archive IDs are opaque sequences with no inherent meaning.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "When is a SHA256 tree hash required for uploading archives to S3 Glacier?",
            "What are the limitations of archive descriptions in S3 Glacier?",
            "Does S3 Glacier support additional metadata for archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Storage and Retrieval]",
        "tf_idf_keywords": [
          "vault inventory",
          "S3 Glacier",
          "metadata",
          "Amazon S3 Glacier Developer Guide",
          "AWS CLI",
          "archive description",
          "archive ID",
          "SHA256 tree hash",
          "API",
          "Upload Archive API",
          "Upload Archive",
          "Amazon S3 Glacier",
          "client-side"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_380",
      "text": "For more information, see Working with Archives in Amazon S3 Glacier. Archives are immutable. After you upload an archive, you cannot edit the archive or its description. Requests\nTo upload an archive, you use the HTTP POST method and scope the request to the archives\nsubresource of the vault in which you want to save the archive. The request must include the\narchive payload size, checksum (SHA256 tree hash), and can optionally include a description of the\narchive. Syntax\nPOST /AccountId/vaults/VaultName/archives\nHost: glacier.Region.amazonaws.com\nx-amz-glacier-version: 2012-06-01\nDate: Date\nAuthorization: SignatureValue\nx-amz-archive-description: Description\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 linear hash\nContent-Length: Length\n<Request body.>\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis implementation of the operation does not use request parameters. Upload Archive API Version 2012-06-01 430\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nContent-Length Yes\nThe size of the object, in bytes. For more information, go\nto h ttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.",
      "start_idx": 656505,
      "end_idx": 661042,
      "metadata": {
        "num_sentences": 13,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25758107503255206,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "HTTP Method",
              "Request Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "immutable",
            "HTTP POST",
            "vault",
            "checksum",
            "SHA256 tree hash",
            "Content-Length",
            "Authorization",
            "AWS account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "x-amz-glacier-version",
            "SHA256 tree hash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "HTTP Methods",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the HTTP POST method, detailing required headers, parameters, and syntax for the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the syntax for uploading an archive to Amazon S3 Glacier?",
            "What headers are required when making a POST request to upload an archive in Amazon S3 Glacier?",
            "Can I edit an archive or its description after uploading it to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "checksum",
          "archive",
          "HTTP POST",
          "AccountId",
          "x-amz-glacier-version",
          "vault",
          "AWS account ID",
          "SHA256 tree hash",
          "Authorization",
          "Amazon S3 Glacier",
          "Content-Length",
          "immutable",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_381",
      "text": "html#sec14.13. Type: Number\nDefault: None\nConstraints: None\nx-amz-archive- No\nThe optional description of the archive you are uploading\ndescription\n. It can be a plain language description or some identifier\nyou choose to assign. The description need not be unique\nacross archives. When you retrieve a vault inventory (see\nInitiate Job (POST jobs)), it includes this description for\neach of the archives it returns in response. Type: String\nDefault: None\nConstraints: The description must be less than or equal to\n1,024 characters. The allowable characters are 7-bit ASCII\nwithout control codes, specifically ASCII values 32\u2014126 de\ncimal or 0x20\u20140x7E hexadecimal. x-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the payload. This\nsha256\nis not the same value as you specify in the x-amz-sha\n256-tree-hash header. Upload Archive API Version 2012-06-01 431\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nThe user-computed checksum, SHA256 tree hash, of the\ntree-hash\npayload. For information on computing the SHA256 tree\nhash, see Computing Checksums. If S3 Glacier computes a\ndifferent checksum of the payload, it will reject the reque\nst. Type: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload.",
      "start_idx": 661043,
      "end_idx": 665744,
      "metadata": {
        "num_sentences": 13,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2498166744525616,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Description"
            ]
          },
          "keywords": [
            "SHA256 checksum",
            "x-amz-content-sha256",
            "x-amz-sha256-tree-hash",
            "Upload Archive",
            "vault inventory",
            "ASCII",
            "payload",
            "archive description",
            "S3 Glacier",
            "checksum"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "ASCII",
            "Upload Archive API",
            "Request Body"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Upload and Validation",
          "secondary_categories": [
            "Checksum Computation",
            "API Constraints"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the metadata and constraints for uploading archives to Amazon S3 Glacier, including descriptions, checksums, and request body requirements.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What is the character limit and allowable characters for archive descriptions?",
            "How is the SHA256 tree hash computed and used in the upload process?",
            "What happens if S3 Glacier computes a different checksum than the one provided?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Upload and Validation]",
        "tf_idf_keywords": [
          "checksum",
          "Request Body",
          "vault inventory",
          "ASCII",
          "S3 Glacier",
          "SHA256 checksum",
          "archive description",
          "x-amz-sha256-tree-hash",
          "payload",
          "x-amz-content-sha256",
          "Upload Archive API",
          "Upload Archive",
          "Amazon S3 Glacier",
          "SHA256"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_382",
      "text": "Responses\nIn response, S3 Glacier durably stores the archive and returns a URI path to the archive ID. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nLocation: Location\nx-amz-archive-id: ArchiveId\nUpload Archive API Version 2012-06-01 432\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation\nThe relative URI path of the newly added archive resource. Type: String\nx-amz-arc\nThe ID of the archive. This value is also included as part of the Location\nhive-id\nheader. Type: String\nx-amz-sha\nThe checksum of the archive computed by S3 Glacier. 256-tree-\nhash\nType: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example shows a request to upload an archive. POST /-/vaults/examplevault/archives HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nUpload Archive API Version 2012-06-01 433\n\nAmazon S3 Glacier Developer Guide\nx-amz-content-sha256: 7f2fe580edb35154041fa3d4b41dd6d3adaef0c85d2ff6309f1d4b520eeecda3\nContent-Length: 2097152\nx-amz-glacier-version: 2012-06-01\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-\nversion,Signature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\n<Request body (2097152 bytes).>\nExample Response\nThe successful response below has a Location header where you can get the ID that S3 Glacier\nassigned to the archive. HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nLocation: /111122223333/vaults/examplevault/archives/\nNkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nx-amz-archive-id: NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nRelated Sections\n\u2022 Working with Archives in Amazon S3 Glacier\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nMultipart Upload Operations\nThe following are the multipart upload operations available for use in S3 Glacier. Topics\n\u2022 Abort Multipart Upload (DELETE uploadID)\nMultipart Upload Operations API Version 2012-06-01 434\n\nAmazon S3 Glacier Developer Guide\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\nAbort Multipart Upload (DELETE uploadID)\nDescription\nThis command for multipart upload operation stops a multipart upload identified by the upload ID.",
      "start_idx": 661043,
      "end_idx": 665744,
      "metadata": {
        "num_sentences": 13,
        "num_words": 358,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35216972155448717,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Headers",
              "Example Request",
              "Example Response",
              "Multipart Upload Operations"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "URI path",
            "checksum",
            "Location header",
            "multipart upload",
            "upload ID",
            "API Version 2012-06-01",
            "response headers",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-archive-id",
            "x-amz-sha256-tree-hash",
            "multipart upload operations",
            "Upload Archive API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "Response Handling",
            "Multipart Upload Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the response structure, headers, and examples for the Amazon S3 Glacier Upload Archive API, including multipart upload operations and error handling.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What headers are included in a successful response for the S3 Glacier Upload Archive API?",
            "How can I initiate or abort a multipart upload in Amazon S3 Glacier?",
            "What is the format of the example request and response for uploading an archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "checksum",
          "Location header",
          "S3 Glacier",
          "URI path",
          "archive",
          "multipart upload operations",
          "x-amz-archive-id",
          "x-amz-sha256-tree-hash",
          "response headers",
          "API Version 2012-06-01",
          "Upload Archive API",
          "Amazon S3 Glacier",
          "Authorization",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_383",
      "text": "After the Abort Multipart Upload request succeeds, you cannot use the upload ID to upload\nany more parts or perform any other operations. Stopping a completed multipart upload fails. However, stopping an already-stopped upload will succeed, for a short time. This operation is idempotent. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Requests\nTo stop a multipart upload, send an HTTP DELETE request to the URI of the multipart-uploads\nsubresource of the vault and identify the specific multipart upload ID as part of the URI. Syntax\nDELETE /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAbort Multipart Upload API Version 2012-06-01 435\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 665745,
      "end_idx": 666941,
      "metadata": {
        "num_sentences": 9,
        "num_words": 179,
        "breakpoint_idx": 3954,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.34860409630669487,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "HTTP Request Syntax",
              "API Behavior Explanation",
              "Idempotency"
            ]
          },
          "keywords": [
            "Abort Multipart Upload",
            "upload ID",
            "multipart upload",
            "HTTP DELETE",
            "vault",
            "AWS account ID",
            "Authorization",
            "x-amz-glacier-version",
            "Amazon S3 Glacier",
            "SignatureValue"
          ],
          "entities": [
            "AccountId",
            "VaultName",
            "uploadID",
            "glacier.Region.amazonaws.com",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Data Storage",
            "HTTP Methods"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of aborting a multipart upload in Amazon S3 Glacier, including the required HTTP DELETE request syntax and details about idempotency and account ID usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I abort a multipart upload in Amazon S3 Glacier?",
            "What is the correct syntax for the HTTP DELETE request to stop a multipart upload?",
            "What happens if I try to stop an already-stopped multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Operations]",
        "tf_idf_keywords": [
          "VaultName",
          "AWS",
          "x-amz-glacier-version",
          "AccountId",
          "vault",
          "HTTP DELETE",
          "AWS account ID",
          "uploadID",
          "glacier.Region.amazonaws.com",
          "Abort Multipart Upload",
          "Amazon S3 Glacier",
          "Authorization",
          "multipart upload",
          "upload ID",
          "SignatureValue"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_384",
      "text": "Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Example\nExample Request\nIn the following example, a DELETE request is sent to the URI of a multipart upload ID resource. Abort Multipart Upload API Version 2012-06-01 436\n\nAmazon S3 Glacier Developer Guide\nDELETE /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nComplete Multipart Upload (POST uploadID)\nDescription\nYou call this multipart upload operation to inform Amazon S3 Glacier (S3 Glacier) that all the\narchive parts have been uploaded and S3 Glacier can now assemble the archive from the uploaded\nparts. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Complete Multipart Upload API Version 2012-06-01 437\n\nAmazon S3 Glacier Developer Guide\nAfter assembling and saving the archive to the vault, S3 Glacier returns the archive ID of the newly\ncreated archive resource.",
      "start_idx": 666942,
      "end_idx": 672828,
      "metadata": {
        "num_sentences": 12,
        "num_words": 297,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33614910010135535,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Parameters",
              "Request Headers",
              "Response Headers",
              "Response Body",
              "Errors",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "request headers",
            "response headers",
            "HTTP/1.1",
            "archive ID",
            "error messages",
            "Abort Multipart Upload",
            "Authorization",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "AWS4-HMAC-SHA256",
            "archive ID",
            "multipart-uploads"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Request and Response Structure",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on the Abort Multipart Upload operation in Amazon S3 Glacier, including request and response structures, example usage, and related sections for multipart upload management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the request and response details for the Abort Multipart Upload operation in Amazon S3 Glacier?",
            "How do I use the DELETE method to abort a multipart upload in S3 Glacier?",
            "What headers are required for the Abort Multipart Upload operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "multipart-uploads",
          "archive ID",
          "HTTP/1.1",
          "response headers",
          "error messages",
          "vault",
          "Abort Multipart Upload",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "request headers",
          "Authorization",
          "multipart upload",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_385",
      "text": "After you upload an archive, you should save the archive ID returned to\nretrieve the archive at a later point. In the request, you must include the computed SHA256 tree hash of the entire archive you have\nuploaded. For information about computing a SHA256 tree hash, see Computing Checksums. On the server side, S3 Glacier also constructs the SHA256 tree hash of the assembled archive. If\nthe values match, S3 Glacier saves the archive to the vault; otherwise, it returns an error, and the\noperation fails. The List Parts (GET uploadID) operation returns list of parts uploaded for a specific\nmultipart upload. It includes checksum information for each uploaded part that can be used to\ndebug a bad checksum issue. Additionally, S3 Glacier also checks for any missing content ranges. When uploading parts, you\nspecify range values identifying where each part fits in the final assembly of the archive. When\nassembling the final archive S3 Glacier checks for any missing content ranges and if there are any\nmissing content ranges, S3 Glacier returns an error and the Complete Multipart Upload operation\nfails. Complete Multipart Upload is an idempotent operation. After your first successful complete\nmultipart upload, if you call the operation again within a short period, the operation will succeed\nand return the same archive ID.",
      "start_idx": 666942,
      "end_idx": 672828,
      "metadata": {
        "num_sentences": 12,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3569416855320786,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "archive ID",
            "SHA256 tree hash",
            "S3 Glacier",
            "List Parts",
            "multipart upload",
            "checksum",
            "content ranges",
            "Complete Multipart Upload",
            "idempotent operation",
            "debug"
          ],
          "entities": [
            "S3 Glacier",
            "SHA256 tree hash",
            "List Parts",
            "Complete Multipart Upload",
            "archive ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage and Integrity",
          "secondary_categories": [
            "Checksum Validation",
            "Multipart Uploads"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA256 tree hash"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of uploading archives to S3 Glacier, including checksum validation, handling multipart uploads, and error scenarios related to missing content ranges or checksum mismatches.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute and include a SHA256 tree hash for an archive upload?",
            "What happens if there are missing content ranges during a multipart upload?",
            "How can I debug checksum issues in a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage and Integrity]",
        "tf_idf_keywords": [
          "checksum",
          "Complete Multipart Upload",
          "idempotent operation",
          "S3 Glacier",
          "archive ID",
          "debug",
          "SHA256 tree hash",
          "List Parts",
          "multipart upload",
          "content ranges"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_386",
      "text": "This is useful in the event you experience a network issue or receive\na 500 server error, in which case you can repeat your Complete Multipart Upload request and get\nthe same archive ID without creating duplicate archives. Note, however, that after the multipart\nupload completes, you cannot call the List Parts operation and the multipart upload will not\nappear in List Multipart Uploads response, even if idempotent complete is possible. Requests\nTo complete a multipart upload, you send an HTTP POST request to the URI of the upload ID that\nS3 Glacier created in response to your Initiate Multipart Upload request. This is the same URI you\nused when uploading parts. In addition to the common required headers, you must include the\nresult of the SHA256 tree hash of the entire archive and the total size of the archive in bytes. Syntax\nPOST /AccountId/vaults/VaultName/multipart-uploads/uploadID\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: SignatureValue\nx-amz-sha256-tree-hash: SHA256 tree hash of the archive\nComplete Multipart Upload API Version 2012-06-01 438\n\nAmazon S3 Glacier Developer Guide\nx-amz-archive-size: ArchiveSize in bytes\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nx-amz-arc Yes\nThe total size, in bytes, of the entire archive. This value should\nhive-size\nbe the sum of all the sizes of the individual parts that you\nuploaded. Type: String\nDefault: None\nConstraints: None\nx-amz-sha Yes\nThe SHA256 tree hash of the entire archive.",
      "start_idx": 666942,
      "end_idx": 672828,
      "metadata": {
        "num_sentences": 14,
        "num_words": 331,
        "chunk_type": "semantic_split",
        "coherence_score": 0.279946044251159,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "HTTP Request",
              "Headers"
            ]
          },
          "keywords": [
            "Complete Multipart Upload",
            "HTTP POST",
            "SHA256 tree hash",
            "ArchiveSize",
            "multipart upload",
            "List Parts",
            "AWS account ID",
            "Amazon S3 Glacier",
            "vault",
            "request headers"
          ],
          "entities": [
            "S3 Glacier",
            "AWS account ID",
            "VaultName",
            "multipart-uploads/uploadID",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "HTTP Requests",
            "AWS S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to complete a multipart upload in Amazon S3 Glacier, detailing the required HTTP POST request, headers, and considerations for idempotency and archive integrity checks.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I complete a multipart upload in Amazon S3 Glacier?",
            "What headers are required for the Complete Multipart Upload request?",
            "What happens if I repeat a Complete Multipart Upload request due to a network error?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "Complete Multipart Upload",
          "VaultName",
          "S3 Glacier",
          "ArchiveSize",
          "HTTP POST",
          "vault",
          "multipart-uploads/uploadID",
          "AWS account ID",
          "SHA256 tree hash",
          "List Parts",
          "glacier.Region.amazonaws.com",
          "Amazon S3 Glacier",
          "request headers",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_387",
      "text": "It is the tree hash\n256-tree-\nof SHA256 tree hash of the individual parts. If the value you\nhash\nspecify in the request does not match the SHA256 tree hash\nof the final assembled archive as computed by S3 Glacier, S3\nGlacier returns an error and the request fails. Complete Multipart Upload API Version 2012-06-01 439\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nRequest Elements\nThis operation does not use request elements. Responses\nAmazon S3 Glacier (S3 Glacier) creates a SHA256 tree hash of the entire archive. If the value\nmatches the SHA256 tree hash of the entire archive you specified in the request, S3 Glacier adds\nthe archive to the vault. In response it returns the HTTP Location header with the URL path of\nthe newly added archive resource. If the archive size or SHA256 that you sent in the request does\nnot match, S3 Glacier will return an error and the upload remains in the incomplete state. It is\npossible to retry the Complete Multipart Upload operation later with correct values, at which point\nyou can successfully create an archive. If a multipart upload does not complete, then eventually S3\nGlacier will reclaim the upload ID. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-archive-id: ArchiveId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation\nComplete Multipart Upload API Version 2012-06-01 440\n\nAmazon S3 Glacier Developer Guide\nName Description\nThe relative URI path of the newly created archive. This URL includes the\narchive ID that is generated by S3 Glacier. Type: String\nx-amz-arc\nThe ID of the archive.",
      "start_idx": 672829,
      "end_idx": 674690,
      "metadata": {
        "num_sentences": 14,
        "num_words": 296,
        "breakpoint_idx": 4006,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4206986060509315,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Headers",
              "Error Handling"
            ]
          },
          "keywords": [
            "SHA256 tree hash",
            "S3 Glacier",
            "Complete Multipart Upload",
            "archive",
            "HTTP Location header",
            "request elements",
            "response headers",
            "upload ID",
            "multipart upload",
            "archive ID"
          ],
          "entities": [
            "SHA256 tree hash",
            "S3 Glacier",
            "Complete Multipart Upload API",
            "HTTP Location header",
            "archive ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Hashing Algorithms"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the SHA256 tree hash validation process for Amazon S3 Glacier's Complete Multipart Upload operation, detailing request/response behavior, error handling, and response headers.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What happens if the SHA256 tree hash in the request does not match the computed hash in S3 Glacier?",
            "What headers are included in a successful Complete Multipart Upload response?",
            "How can I retry a failed multipart upload in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Complete Multipart Upload",
          "Complete Multipart Upload API",
          "S3 Glacier",
          "archive",
          "archive ID",
          "response headers",
          "HTTP Location header",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "request elements",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_388",
      "text": "This value is also included as part of the Location\nhive-id\nheader. Type: String\nResponse Fields\nThis operation does not return a response body. Example\nExample Request\nIn this example, an HTTP POST request is sent to the URI that was returned by an Initiate Multipart\nUpload request. The request specifies both the SHA256 tree hash of the entire archive and the\ntotal archive size. POST /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nz-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:1ffc0f54dd5fdd66b62da70d25edacd0\nx-amz-archive-size:8388608\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following example response shows that S3 Glacier successfully created an archive from the\nparts you uploaded. The response includes the archive ID with complete path. Complete Multipart Upload API Version 2012-06-01 441\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/archives/\nNkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nx-amz-archive-id: NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can now send HTTP requests to the URI of the newly added resource/archive. For example, you\ncan send a GET request to retrieve the archive.",
      "start_idx": 674691,
      "end_idx": 676535,
      "metadata": {
        "num_sentences": 8,
        "num_words": 168,
        "breakpoint_idx": 4014,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3043744904654367,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "API Response",
              "HTTP Headers"
            ]
          },
          "keywords": [
            "Location",
            "hive-id",
            "SHA256 tree hash",
            "archive size",
            "AWS4-HMAC-SHA256",
            "Multipart Upload",
            "S3 Glacier",
            "archive ID",
            "HTTP POST",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "examplevault",
            "NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-TjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId",
            "glacier.us-west-2.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier API",
          "secondary_categories": [
            "HTTP Protocol",
            "Multipart Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of completing a multipart upload to Amazon S3 Glacier, including an example HTTP POST request and a corresponding response with the archive ID and location.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete a multipart upload in Amazon S3 Glacier?",
            "What is an example of an HTTP POST request for completing a multipart upload?",
            "What information is included in the response after completing a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier API]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "examplevault",
          "glacier.us-west-2.amazonaws.com",
          "HTTP POST",
          "Location",
          "archive ID",
          "NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-TjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId",
          "archive size",
          "SHA256 tree hash",
          "AWS4-HMAC-SHA256",
          "Amazon S3 Glacier",
          "Authorization",
          "Multipart Upload",
          "hive-id"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_389",
      "text": "Related Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Multipart Upload (POST multipart-uploads)\nDescription\nThis operation initiates a multipart upload (see Uploading Large Archives in Parts (Multipart\nUpload)). Amazon S3 Glacier (S3 Glacier) creates a multipart upload resource and returns its ID in\nthe response. You use this Upload ID in subsequent multipart upload operations. When you initiate a multipart upload, you specify the part size in number of bytes. The part size\nmust be a mebibyte (MiB) (1024 kibibytes [KiB]) multiplied by a power of 2\u2014for example, 1048576\n(1 MiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 gibibytes (GiB). Initiate Multipart Upload API Version 2012-06-01 442\n\nAmazon S3 Glacier Developer Guide\nEvery part you upload using this upload ID, except the last one, must have the same size. The last\none can be the same size or smaller. For example, suppose you want to upload a 16.2 MiB file. If\nyou initiate the multipart upload with a part size of 4 MiB, you will upload four parts of 4 MiB each\nand one part of 0.2 MiB.",
      "start_idx": 676536,
      "end_idx": 679673,
      "metadata": {
        "num_sentences": 10,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43651385837131074,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "Amazon S3 Glacier",
            "Upload ID",
            "part size",
            "MiB",
            "GiB",
            "multipart upload resource",
            "API Version 2012-06-01",
            "large archives",
            "kibibytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Multipart Upload",
            "POST multipart-uploads",
            "Upload ID",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "File Upload Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section describes the process of initiating a multipart upload in Amazon S3 Glacier, including details on part size requirements and usage of the Upload ID for subsequent operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the minimum and maximum part size for a multipart upload in Amazon S3 Glacier?",
            "How is the Upload ID used in subsequent multipart upload operations?",
            "What happens if the last part of a file is smaller than the specified part size?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "Upload ID",
          "Initiate Multipart Upload",
          "large archives",
          "part size",
          "POST multipart-uploads",
          "API Version 2012-06-01",
          "multipart upload resource",
          "MiB",
          "Amazon S3 Glacier",
          "kibibytes",
          "GiB",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_390",
      "text": "Note\nYou don't need to know the size of the archive when you start a multipart upload because\nS3 Glacier does not require you to specify the overall archive size. After you complete the multipart upload, S3 Glacier removes the multipart upload resource\nreferenced by the ID. S3 Glacier will also remove the multipart upload resource if you cancel the\nmultipart upload or it may be removed if there is no activity for a period of 24 hours. The ID may\nstill be available after 24 hours, but applications should not expect this behavior. Requests\nTo initiate a multipart upload, you send an HTTP POST request to the URI of the multipart-\nuploads subresource of the vault in which you want to save the archive. The request must include\nthe part size and can optionally include a description of the archive. Syntax\nPOST /AccountId/vaults/VaultName/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nx-amz-archive-description: ArchiveDescription\nx-amz-part-size: PartSize\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Initiate Multipart Upload API Version 2012-06-01 443\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations.",
      "start_idx": 676536,
      "end_idx": 679673,
      "metadata": {
        "num_sentences": 11,
        "num_words": 263,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3445914181795987,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "HTTP Request Syntax",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "multipart upload",
            "S3 Glacier",
            "archive",
            "HTTP POST request",
            "vault",
            "AccountId",
            "x-amz-part-size",
            "x-amz-glacier-version",
            "Authorization",
            "API Version 2012-06-01"
          ],
          "entities": [
            "S3 Glacier",
            "AWS account ID",
            "multipart-uploads",
            "Authorization",
            "glacier.us-west-2.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate a multipart upload in Amazon S3 Glacier, including the required HTTP POST request structure, headers, and behavior related to multipart upload resources and IDs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What happens to the multipart upload resource after completing or canceling the upload?",
            "What headers are required for the Initiate Multipart Upload API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amz-part-size",
          "S3 Glacier",
          "archive",
          "glacier.us-west-2.amazonaws.com",
          "AccountId",
          "x-amz-glacier-version",
          "multipart-uploads",
          "vault",
          "AWS account ID",
          "HTTP POST request",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Authorization",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_391",
      "text": "For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nx-amz-part-size Yes\nThe size of each part except the last, in\nbytes. The last part can be smaller than this\npart size. Type: String\nDefault: None\nConstraints: The part size must be a\nmebibyte (1024 KiB) multiplied by a power\nof 2\u2014for example, 1048576 (1 MiB),\n2097152 (2 MiB), 4194304 (4 MiB), 8388608\n(8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 GiB\n(4096 MiB). x-amz-archive-desc No\nArchive description you are uploading in\nription\nparts. It can be a plain-language description\nor some unique identifier you choose to\nassign. When you retrieve a vault inventory\n(see Initiate Job (POST jobs) ), the inventory\nincludes this description for each of the\narchives it returns in response. Leading\nspaces in archive descriptions are removed. Type: String\nInitiate Multipart Upload API Version 2012-06-01 444\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: The description must be less\nthan or equal to 1024 bytes. The allowable\ncharacters are 7 bit ASCII without control\ncodes, specifically ASCII values 32-126\ndecimal or 0x20-0x7E hexadecimal.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 11,
        "num_words": 195,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22518893155184658,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Constraints",
              "API Parameters"
            ]
          },
          "keywords": [
            "x-amz-part-size",
            "x-amz-archive-desc",
            "multipart upload",
            "part size",
            "archive description",
            "mebibyte",
            "ASCII",
            "API Version 2012-06-01",
            "vault inventory",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "x-amz-part-size",
            "x-amz-archive-desc",
            "Amazon S3 Glacier",
            "Initiate Multipart Upload",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Transfer and Storage",
          "secondary_categories": [
            "API Specifications",
            "File Upload Constraints"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the specifications for two headers, x-amz-part-size and x-amz-archive-desc, used in Amazon S3 Glacier's multipart upload API. It includes details on constraints, types, and usage requirements for each header.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the constraints for the x-amz-part-size header in Amazon S3 Glacier?",
            "What characters are allowed in the x-amz-archive-desc header description?",
            "What is the minimum and maximum part size for multipart uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Transfer and Storage]",
        "tf_idf_keywords": [
          "x-amz-part-size",
          "ASCII",
          "vault inventory",
          "Initiate Multipart Upload",
          "archive description",
          "part size",
          "mebibyte",
          "API Version 2012-06-01",
          "x-amz-archive-desc",
          "Amazon S3 Glacier",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_392",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIn the response, S3 Glacier creates a multipart upload resource identified by an ID and returns the\nrelative URI path of the multipart upload ID. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-multipart-upload-id: multiPartUploadId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation\nThe relative URI path of the multipart upload ID S3 Glacier created. You use\nthis URI path to scope your requests to upload parts, and to complete the\nmultipart upload. Initiate Multipart Upload API Version 2012-06-01 445\n\nAmazon S3 Glacier Developer Guide\nName Description\nType: String\nx-amz-mul\nThe ID of the multipart upload. This value is also included as part of the\ntipart-up\nLocation header. load-id\nType: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Example\nExample Request\nThe following example initiates a multipart upload by sending an HTTP POST request to the URI\nof the multipart-uploads subresource of a vault named examplevault.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.365079082142223,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Body",
              "Response Headers",
              "Response Body",
              "Errors",
              "Example"
            ]
          },
          "keywords": [
            "Request Body",
            "Response Headers",
            "Response Body",
            "Errors",
            "S3 Glacier",
            "multipart upload",
            "URI path",
            "Location header",
            "HTTP POST",
            "vault"
          ],
          "entities": [
            "S3 Glacier",
            "multipart upload ID",
            "Location header",
            "Amazon S3 Glacier Developer Guide",
            "examplevault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how the Initiate Multipart Upload operation in Amazon S3 Glacier works, including response headers and example requests. It specifies that the operation creates a multipart upload resource identified by an ID without requiring a request body or returning a response body.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What headers are included in the response of the Initiate Multipart Upload operation?",
            "How is the multipart upload ID used in subsequent requests?",
            "What is an example HTTP POST request to initiate a multipart upload in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Request Body",
          "Location header",
          "multipart upload ID",
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "URI path",
          "examplevault",
          "Response Body",
          "HTTP POST",
          "Errors",
          "Response Headers",
          "vault",
          "Amazon S3 Glacier",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_393",
      "text": "The request includes\nheaders to specify the part size of 4 MiB (4194304 bytes) and the optional archive description. POST /-/vaults/examplevault/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-archive-description: MyArchive-101\nx-amz-part-size: 4194304\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nS3 Glacier creates a multipart upload resource and adds it to the multipart-uploads\nsubresource of the vault. The Location response header includes the relative URI path to the\nmultipart upload ID. Initiate Multipart Upload API Version 2012-06-01 446\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nx-amz-multipart-upload-id:\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nFor information about uploading individual parts, see Upload Part (PUT uploadID). Related Sections\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Parts (GET uploadID)\nDescription\nThis multipart upload operation lists the parts of an archive that have been uploaded in a\nspecific multipart upload identified by an upload ID. For information about multipart upload, see\nUploading Large Archives in Parts (Multipart Upload). You can make this request at any time during an in-progress multipart upload before you complete\nthe multipart upload. S3 Glacier returns the part list sorted by range you specified in each part\nupload. If you send a List Parts request after completing the multipart upload, Amazon S3 Glacier\n(S3 Glacier) returns an error. List Parts API Version 2012-06-01 447\n\nAmazon S3 Glacier Developer Guide\nThe List Parts operation supports pagination. You should always check the Marker field in\nthe response body for a marker at which to continue the list.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 11,
        "num_words": 296,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4273912949995561,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Headers",
              "Response Details"
            ]
          },
          "keywords": [
            "multipart upload",
            "archive",
            "S3 Glacier",
            "part size",
            "upload ID",
            "List Parts",
            "Location header",
            "pagination",
            "AWS4-HMAC-SHA256",
            "multipart-uploads"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Multipart Upload API",
            "Initiate Multipart Upload",
            "AWS4-HMAC-SHA256",
            "List Parts API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Amazon S3 Glacier API",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of initiating and managing multipart uploads in Amazon S3 Glacier, including details on headers, responses, and related operations such as listing parts or completing uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What headers are required to initiate a multipart upload in Amazon S3 Glacier?",
            "How does Amazon S3 Glacier respond to a multipart upload initiation request?",
            "What operations are related to managing multipart uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "Location header",
          "S3 Glacier",
          "archive",
          "Multipart Upload API",
          "Initiate Multipart Upload",
          "List Parts API",
          "multipart-uploads",
          "part size",
          "List Parts",
          "AWS4-HMAC-SHA256",
          "Amazon S3 Glacier",
          "pagination",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_394",
      "text": "if there are no more items the\nmarker field is null. If the marker is not null, to fetch the next set of parts you sent another List\nParts request with the marker request parameter set to the marker value S3 Glacier returned in\nresponse to your previous List Parts request. You can also limit the number of parts returned in the response by specifying the limit parameter\nin the request. Requests\nSyntax\nTo list the parts of an in-progress multipart upload, you send a GET request to the URI of the\nmultipart upload ID resource. The multipart upload ID is returned when you initiate a multipart\nupload (Initiate Multipart Upload (POST multipart-uploads)). You may optionally specify marker\nand limit parameters. GET /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nName Description Required\nlimit No\nThe maximum number of parts to be returned. The default\nlimit is 50. The number of parts returned might be fewer than\nList Parts API Version 2012-06-01 448\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nthe specified limit, but the number of returned parts never\nexceeds the limit. Type: String\nConstraints: Minimum integer value of 1.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 13,
        "num_words": 261,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22234701498960838,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "Parameter Explanation",
              "HTTP Syntax"
            ]
          },
          "keywords": [
            "marker",
            "limit",
            "multipart upload",
            "List Parts request",
            "AWS account ID",
            "S3 Glacier",
            "URI",
            "Authorization",
            "x-amz-glacier-version",
            "uploadID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "multipart-uploads",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "AWS Service Integration",
            "Multipart Upload Process"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list the parts of an in-progress multipart upload in Amazon S3 Glacier using a GET request, including optional parameters like marker and limit for pagination and result control.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list the parts of an in-progress multipart upload in Amazon S3 Glacier?",
            "What is the purpose of the marker and limit parameters in the List Parts request?",
            "What is the default behavior if the limit parameter is not specified in the request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Documentation]",
        "tf_idf_keywords": [
          "VaultName",
          "S3 Glacier",
          "x-amz-glacier-version",
          "AccountId",
          "multipart-uploads",
          "AWS account ID",
          "uploadID",
          "List Parts request",
          "URI",
          "Authorization",
          "Amazon S3 Glacier",
          "Region",
          "marker",
          "limit",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_395",
      "text": "Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies\nthe part at which the listing of parts should begin. Get the\nmarker value from the response of a previous List Parts\nresponse. You need only include the marker if you are\ncontinuing the pagination of results started in a previous List\nParts request. Type: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 686451,
      "end_idx": 686919,
      "metadata": {
        "num_sentences": 5,
        "num_words": 78,
        "breakpoint_idx": 4086,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.357592248916626,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Pagination",
              "Request Headers"
            ]
          },
          "keywords": [
            "maximum integer value",
            "marker",
            "pagination",
            "List Parts",
            "response headers",
            "opaque string",
            "constraints",
            "request",
            "response",
            "type"
          ],
          "entities": [
            "marker",
            "List Parts",
            "Request Headers"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Pagination",
          "secondary_categories": [
            "Request Handling",
            "Response Headers"
          ],
          "mentioned_services": [
            "List Parts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of the 'marker' parameter for paginating results in a List Parts request and mentions that it is an opaque string obtained from a previous response. It also notes that only common response headers are used for this operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the 'marker' parameter in a List Parts request?",
            "How do I continue pagination using the 'marker' value?",
            "What headers are required for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Pagination]",
        "tf_idf_keywords": [
          "request",
          "constraints",
          "Request Headers",
          "response headers",
          "type",
          "opaque string",
          "List Parts",
          "response",
          "marker",
          "pagination",
          "maximum integer value"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_396",
      "text": "For information\nabout common response headers, see Common Response Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Parts API Version 2012-06-01 449\n\nAmazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : String,\n\"CreationDate\" : String,\n\"Marker\": String,\n\"MultipartUploadId\" : String,\n\"PartSizeInBytes\" : Number,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : String,\n\"SHA256TreeHash\" : String\n},\n...\n],\n\"VaultARN\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. ArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation. Type: String\nCreationDate\nThe UTC time that the multipart upload was initiated. Type: String.",
      "start_idx": 686920,
      "end_idx": 688036,
      "metadata": {
        "num_sentences": 9,
        "num_words": 155,
        "breakpoint_idx": 4095,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3093218273586697,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Headers",
              "Response Body"
            ]
          },
          "keywords": [
            "response headers",
            "request body",
            "HTTP/1.1",
            "Amazon S3 Glacier",
            "Multipart Upload",
            "ArchiveDescription",
            "CreationDate",
            "VaultARN",
            "SHA256TreeHash",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Parts API",
            "ArchiveDescription",
            "MultipartUploadId",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "JSON Data Structure"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the response headers, body, and JSON structure for the List Parts API in Amazon S3 Glacier, including details about multipart upload metadata and common headers.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What does the response body of the List Parts API contain?",
            "What is the purpose of the ArchiveDescription field in the response?",
            "What common response headers are used in this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "CreationDate",
          "SHA256TreeHash",
          "List Parts API",
          "VaultARN",
          "HTTP/1.1",
          "response headers",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "request body",
          "ArchiveDescription",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_397",
      "text": "A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Marker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Parts request to obtain more jobs in the list.",
      "start_idx": 688037,
      "end_idx": 688292,
      "metadata": {
        "num_sentences": 3,
        "num_words": 42,
        "breakpoint_idx": 4098,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2170248826344808,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Date Format",
              "Pagination"
            ]
          },
          "keywords": [
            "ISO 8601",
            "date format",
            "marker",
            "pagination",
            "List Parts",
            "opaque string",
            "results",
            "jobs"
          ],
          "entities": [
            "ISO 8601",
            "List Parts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Formats",
          "secondary_categories": [
            "Pagination",
            "Date and Time Standards"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The text explains an ISO 8601 date format example and describes the use of a marker string for pagination in a List Parts request to retrieve additional jobs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ISO 8601 date format example provided?",
            "How is the marker used for pagination in a List Parts request?",
            "What does the marker represent in the context of job listing?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Formats]",
        "tf_idf_keywords": [
          "results",
          "jobs",
          "opaque string",
          "date format",
          "List Parts",
          "marker",
          "pagination",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_398",
      "text": "If there are no more parts,\nthis value is null. List Parts API Version 2012-06-01 450\n\nAmazon S3 Glacier Developer Guide\nType: String\nMultipartUploadId\nThe ID of the upload to which the parts are associated. Type: String\nPartSizeInBytes\nThe part size in bytes. This is the same value that you specified in the Initiate Multipart Upload\nrequest. Type: Number\nParts\nA list of the part sizes of the multipart upload. Each object in the array contains a RangeBytes\nand sha256-tree-hash name/value pair. Type: Array\nRangeInBytes\nThe byte range of a part, inclusive of the upper value of the range. Type: String\nSHA256TreeHash\nThe SHA256 tree hash value that S3 Glacier calculated for the part. This field is never null. Type: String\nVaultARN\nThe Amazon Resource Name (ARN) of the vault to which the multipart upload was initiated. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. List Parts API Version 2012-06-01 451\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample: List Parts of a Multipart Upload\nThe following example lists all the parts of an upload. The example sends an HTTP GET request to\nthe URI of the specific multipart upload ID of an in-progress multipart upload and returns up to\n1,000 parts. Example Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts associated with the specified multipart\nupload ID. In this example, there are only two parts.",
      "start_idx": 688293,
      "end_idx": 690232,
      "metadata": {
        "num_sentences": 15,
        "num_words": 255,
        "breakpoint_idx": 4113,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31095966157459076,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Example"
            ]
          },
          "keywords": [
            "MultipartUploadId",
            "PartSizeInBytes",
            "SHA256TreeHash",
            "RangeInBytes",
            "VaultARN",
            "List Parts API",
            "Amazon S3 Glacier",
            "multipart upload",
            "Error Responses",
            "HTTP GET"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "SHA256TreeHash",
            "List Parts API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Multipart Upload",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP GET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the List Parts API for Amazon S3 Glacier, detailing the structure and data types of multipart uploads, including examples of requests and responses for listing upload parts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of a multipart upload in Amazon S3 Glacier?",
            "How can I list all parts of an in-progress multipart upload?",
            "What does the response of a List Parts API request contain?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier Multipart Upload]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "RangeInBytes",
          "SHA256TreeHash",
          "List Parts API",
          "VaultARN",
          "multipart upload",
          "Amazon S3 Glacier",
          "HTTP GET",
          "PartSizeInBytes",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_399",
      "text": "The returned Marker field is null indicating\nthat there are no more parts of the multipart upload. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 412\n{\n\"ArchiveDescription\" : \"archive description\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": null,\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\nList Parts API Version 2012-06-01 452\n\nAmazon S3 Glacier Developer Guide\n\"RangeInBytes\" : \"0-4194303\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n},\n{\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"0195875365afda349fc21c84c099987164\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nExample: List Parts of a Multipart Upload (Specify the Marker and the Limit Request\nParameters)\nThe following example demonstrates how to use pagination to get a limited number of results. The example sends an HTTP GET request to the URI of the specific multipart upload ID of an in-\nprogress multipart upload to return one part.",
      "start_idx": 690233,
      "end_idx": 691436,
      "metadata": {
        "num_sentences": 3,
        "num_words": 140,
        "breakpoint_idx": 4116,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.40664203961690265,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Pagination",
              "Multipart Upload",
              "HTTP Response"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "Marker",
            "HTTP GET",
            "Pagination",
            "VaultARN",
            "SHA256TreeHash",
            "PartSizeInBytes",
            "Amazon S3 Glacier",
            "Content-Type",
            "RequestId"
          ],
          "entities": [
            "MultipartUploadId",
            "VaultARN",
            "x-amzn-RequestId",
            "Amazon S3 Glacier",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to interpret the response of a List Parts API call for an Amazon S3 Glacier multipart upload, including pagination using a Marker and retrieving details like part ranges and hashes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What does a null Marker field indicate in a List Parts API response?",
            "How can I retrieve specific parts of a multipart upload in Amazon S3 Glacier?",
            "What information is included in the response for each part of a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "SHA256TreeHash",
          "Pagination",
          "Content-Type",
          "x-amzn-RequestId",
          "VaultARN",
          "Marker",
          "HTTP/1.1",
          "Amazon S3 Glacier",
          "HTTP GET",
          "PartSizeInBytes",
          "Multipart Upload",
          "RequestId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_400",
      "text": "A starting marker parameter specifies at which part\nto start the part list. You can get the marker value from the response of a previous request for a\npart list. Furthermore, in this example, the limit parameter is set to 1 and returns one part.",
      "start_idx": 691437,
      "end_idx": 691682,
      "metadata": {
        "num_sentences": 3,
        "num_words": 45,
        "breakpoint_idx": 4119,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3706727822621663,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Parameter Explanation",
              "API Interaction"
            ]
          },
          "keywords": [
            "starting marker",
            "parameter",
            "part list",
            "response",
            "limit",
            "request"
          ],
          "entities": [
            "marker parameter",
            "limit parameter",
            "part list"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Pagination",
          "secondary_categories": [
            "Parameters Handling",
            "Response Management"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the starting marker parameter to specify the beginning of a part list and retrieve the marker value from a previous response. It also demonstrates using the limit parameter to return one part.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I specify where to start in a part list?",
            "Where can I get the marker value for the starting marker parameter?",
            "How does the limit parameter affect the number of parts returned?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [API Pagination]",
        "tf_idf_keywords": [
          "request",
          "marker parameter",
          "limit parameter",
          "parameter",
          "response",
          "limit",
          "part list",
          "starting marker"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_401",
      "text": "Note\nthat the Marker field is not null, indicating that there is at least one more part to obtain. Example Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE?marker=1001&limit=1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts that are associated with the specified in-\nprogress multipart upload ID. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: text/json\nContent-Length: 412\nList Parts API Version 2012-06-01 453\n\nAmazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : \"archive description 1\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": \"MfgsKHVjbQ6EldVl72bn3_n5h2TaGZQUO-Qb3B9j3TITf7WajQ\",\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Multipart Uploads (GET multipart-uploads)\nDescription\nThis multipart upload operation lists in-progress multipart uploads for the specified vault. An in-\nprogress multipart upload is a multipart upload that has been initiated by an Initiate Multipart\nUpload (POST multipart-uploads) request, but has not yet been completed or stopped.",
      "start_idx": 691683,
      "end_idx": 693863,
      "metadata": {
        "num_sentences": 4,
        "num_words": 216,
        "breakpoint_idx": 4123,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2557189464569092,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "Amazon S3 Glacier",
            "VaultARN",
            "Marker",
            "PartSizeInBytes",
            "SHA256TreeHash",
            "List Multipart Uploads",
            "Initiate Multipart Upload",
            "Complete Multipart Upload",
            "Abort Multipart Upload"
          ],
          "entities": [
            "AWS4-HMAC-SHA256",
            "MultipartUploadId",
            "VaultARN",
            "Amazon S3 Glacier",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Amazon S3 Glacier API",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the List Multipart Uploads operation in Amazon S3 Glacier, which retrieves in-progress multipart uploads for a specified vault, along with an example request and response structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list in-progress multipart uploads for a vault in Amazon S3 Glacier?",
            "What does the response of the List Multipart Uploads API operation look like?",
            "What is the significance of the Marker field in the List Multipart Uploads response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "Complete Multipart Upload",
          "MultipartUploadId",
          "List Multipart Uploads",
          "SHA256TreeHash",
          "Initiate Multipart Upload",
          "VaultARN",
          "Marker",
          "Abort Multipart Upload",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "us-west-2",
          "PartSizeInBytes",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_402",
      "text": "The list\nreturned in the List Multipart Upload response has no guaranteed order. The List Multipart Uploads operation supports pagination. By default, this operation returns up to\n50 multipart uploads in the response. You should always check the marker field in the response\nList Multipart Uploads API Version 2012-06-01 454\n\nAmazon S3 Glacier Developer Guide\nbody for a marker at which to continue the list; if there are no more items the marker field is\nnull. If the marker is not null, to fetch the next set of multipart uploads you sent another List Multipart\nUploads request with the marker request parameter set to the marker value Amazon S3 Glacier\n(S3 Glacier) returned in response to your previous List Multipart Uploads request. Note the difference between this operation and the List Parts (GET uploadID)) operation. The List\nMultipart Uploads operation lists all multipart uploads for a vault. The List Parts operation returns\nparts of a specific multipart upload identified by an Upload ID. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Requests\nSyntax\nTo list multipart uploads, send a GET request to the URI of the multipart-uploads subresource\nof the vault. You may optionally specify marker and limit parameters.",
      "start_idx": 693864,
      "end_idx": 696481,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.458498798717152,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Pagination",
              "Request Syntax"
            ]
          },
          "keywords": [
            "List Multipart Uploads",
            "pagination",
            "marker",
            "multipart uploads",
            "List Parts",
            "Upload ID",
            "Amazon S3 Glacier",
            "vault",
            "multipart upload",
            "limit parameter"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Multipart Uploads",
            "List Parts",
            "Upload ID",
            "Multipart-uploads subresource"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Pagination",
            "API Requests"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The List Multipart Uploads operation in Amazon S3 Glacier lists all multipart uploads for a vault, supports pagination, and requires checking the marker field to continue retrieving additional uploads if necessary.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list all multipart uploads in an Amazon S3 Glacier vault?",
            "What is the purpose of the marker field in the List Multipart Uploads response?",
            "How does the List Multipart Uploads operation differ from the List Parts operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "Upload ID",
          "List Multipart Uploads",
          "Multipart-uploads subresource",
          "vault",
          "limit parameter",
          "List Parts",
          "Amazon S3 Glacier",
          "marker",
          "pagination",
          "multipart upload",
          "multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_403",
      "text": "GET /AccountId/vaults/VaultName/multipart-uploads HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nName Description Required\nlimit No\nList Multipart Uploads API Version 2012-06-01 455\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nSpecifies the maximum number of uploads returned in the\nresponse body. If not specified, the List Uploads operation\nreturns up to 50 uploads. Type: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies the\nupload at which the listing of uploads should begin. Get\nthe marker value from a previous List Uploads response. You need only include the marker if you are continuing\nthe pagination of results started in a previous List Uploads\nrequest. Type: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 693864,
      "end_idx": 696481,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23214361017400567,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Endpoint",
              "Request Parameters",
              "Request Headers"
            ]
          },
          "keywords": [
            "GET",
            "AccountId",
            "vaults",
            "multipart-uploads",
            "Amazon S3 Glacier",
            "limit",
            "marker",
            "pagination",
            "response headers",
            "x-amz-glacier-version"
          ],
          "entities": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "List Multipart Uploads",
            "SignatureValue",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "AWS Documentation",
            "Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the HTTP GET request to list multipart uploads for an Amazon S3 Glacier vault, including required parameters, optional parameters, and constraints.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the 'limit' parameter in the List Multipart Uploads API?",
            "How can the 'marker' parameter be used for pagination in the request?",
            "What is the correct format for the AccountId value in the API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "pagination",
          "List Multipart Uploads",
          "AccountId",
          "marker",
          "multipart-uploads",
          "x-amz-glacier-version",
          "response headers",
          "AWS account ID",
          "Region",
          "Amazon S3 Glacier",
          "vaults",
          "limit",
          "GET",
          "SignatureValue"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_404",
      "text": "For information\nabout common response headers, see Common Response Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Multipart Uploads API Version 2012-06-01 456\n\nAmazon S3 Glacier Developer Guide\n{\n\"Marker\": String,\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"MultipartUploadId\": String,\n\"PartSizeInBytes\": Number,\n\"VaultARN\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. ArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation. Type: String\nCreationDate\nThe UTC time that the multipart upload was initiated. Type: String.",
      "start_idx": 696482,
      "end_idx": 697559,
      "metadata": {
        "num_sentences": 9,
        "num_words": 145,
        "breakpoint_idx": 4154,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32717614703708225,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Headers",
              "JSON Fields"
            ]
          },
          "keywords": [
            "HTTP/1.1 200 OK",
            "x-amzn-RequestId",
            "Content-Type",
            "Multipart Upload",
            "VaultARN",
            "CreationDate",
            "UploadsList",
            "Amazon S3 Glacier",
            "Response Headers",
            "JSON"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Multipart Uploads API",
            "x-amzn-RequestId",
            "VaultARN",
            "MultipartUploadId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "JSON Data Structure"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response structure for the 'List Multipart Uploads' API in Amazon S3 Glacier, including response headers and JSON fields returned in the response body.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the response body for the List Multipart Uploads API?",
            "What does the 'ArchiveDescription' field in the response body represent?",
            "What common response headers are used in this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "Amazon S3",
          "HTTP/1.1 200 OK",
          "CreationDate",
          "Content-Type",
          "x-amzn-RequestId",
          "VaultARN",
          "Response Headers",
          "List Multipart Uploads API",
          "Amazon S3 Glacier",
          "JSON",
          "UploadsList",
          "Multipart Upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_405",
      "text": "A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Marker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Multipart Uploads request to obtain more uploads in the list. If there are\nno more uploads, this value is null. List Multipart Uploads API Version 2012-06-01 457\n\nAmazon S3 Glacier Developer Guide\nType: String\nPartSizeInBytes\nThe part size specified in the Initiate Multipart Upload (POST multipart-uploads) request. This is\nthe size of all the parts in the upload except the last part, which may be smaller than this size. Type: Number\nMultipartUploadId\nThe ID of the multipart upload. Type: String\nUploadsList\nA list of metadata about multipart upload objects. Each item in the list contains a set of name-\nvalue pairs for the corresponding upload, including ArchiveDescription, CreationDate,\nMultipartUploadId, PartSizeInBytes, and VaultARN. Type: Array\nVaultARN\nThe Amazon Resource Name (ARN) of the vault that contains the archive. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample: List All Multipart Uploads\nThe following example lists all the multipart uploads in progress for the vault.",
      "start_idx": 697560,
      "end_idx": 698843,
      "metadata": {
        "num_sentences": 12,
        "num_words": 195,
        "breakpoint_idx": 4166,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3190197800145005,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Description",
              "Data Types",
              "Examples"
            ]
          },
          "keywords": [
            "ISO 8601",
            "Marker",
            "Multipart Upload",
            "PartSizeInBytes",
            "MultipartUploadId",
            "UploadsList",
            "VaultARN",
            "Amazon S3 Glacier",
            "Error Responses",
            "List Multipart Uploads"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "VaultARN",
            "UploadsList",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Data Management",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the structure and fields used in the Amazon S3 Glacier List Multipart Uploads API, including metadata such as MultipartUploadId, PartSizeInBytes, and VaultARN, along with example usage for listing uploads in progress.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What information is included in the UploadsList for multipart uploads?",
            "How is the PartSizeInBytes defined in a multipart upload request?",
            "What is the purpose of the Marker field in pagination?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "List Multipart Uploads",
          "VaultARN",
          "Marker",
          "Amazon S3 Glacier",
          "UploadsList",
          "PartSizeInBytes",
          "Multipart Upload",
          "Error Responses",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_406",
      "text": "The example shows\nan HTTP GET request to the URI of the multipart-uploads subresource of a specified vault. Because the marker and limit parameters are not specified in the request, up to 1,000 in-\nprogress multipart uploads are returned. Example Request\nGET /-/vaults/examplevault/multipart-uploads HTTP/1.1\nList Multipart Uploads API Version 2012-06-01 458\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response S3 Glacier returns a list of all in-progress multipart uploads for the specified vault. The marker field is null, which indicates that there are no more uploads to list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1054\n{\n\"Marker\": null,\n\"UploadsList\": [\n{\n\"ArchiveDescription\": \"archive 1\",\n\"CreationDate\": \"2012-03-19T23:20:59.130Z\",\n\"MultipartUploadId\":\n\"xsQdFIRsfJr20CW2AbZBKpRZAFTZSJIMtL2hYf8mvp8dM0m4RUzlaqoEye6g3h3ecqB_zqwB7zLDMeSWhwo65re4C4Ev\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"ArchiveDescription\": \"archive 2\",\n\"CreationDate\": \"2012-04-01T15:00:00.000Z\",\n\"MultipartUploadId\": \"nPyGOnyFcx67qqX7E-0tSGiRi88hHMOwOxR-\n_jNyM6RjVMFfV29lFqZ3rNsSaWBugg6OP92pRtufeHdQH7ClIpSF6uJc\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"ArchiveDescription\": \"archive 3\",\n\"CreationDate\": \"2012-03-20T17:03:43.221Z\",\n\"MultipartUploadId\": \"qt-RBst_7yO8gVIonIBsAxr2t-db0pE4s8MNeGjKjGdNpuU-\ncdSAcqG62guwV9r5jh5mLyFPzFEitTpNE7iQfHiu1XoV\",\n\"PartSizeInBytes\": 4194304,\nList Multipart Uploads API Version 2012-06-01 459\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nExample: Partial List of Multipart Uploads\nThe following example demonstrates how to use pagination to get a limited number of results. The\nexample shows an HTTP GET request to the URI of the multipart-uploads subresource for a\nspecified vault.",
      "start_idx": 698844,
      "end_idx": 701220,
      "metadata": {
        "num_sentences": 6,
        "num_words": 216,
        "breakpoint_idx": 4172,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4949455897013346,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "HTTP GET request",
              "List Multipart Uploads",
              "Pagination"
            ]
          },
          "keywords": [
            "HTTP GET request",
            "multipart-uploads",
            "vault",
            "marker",
            "limit",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "Authorization",
            "MultipartUploadId",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "AWS4-HMAC-SHA256",
            "Content-Type"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "HTTP Requests",
            "Multipart Uploads"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the List Multipart Uploads API to retrieve in-progress multipart uploads for a specified Amazon S3 Glacier vault, including an example request and response format with pagination details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a list of in-progress multipart uploads for a specific vault using Amazon S3 Glacier?",
            "What does the response of the List Multipart Uploads API look like?",
            "How can pagination be implemented when listing multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "HTTP GET request",
          "MultipartUploadId",
          "Content-Type",
          "VaultARN",
          "multipart-uploads",
          "vault",
          "API Version 2012-06-01",
          "Authorization",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "marker",
          "limit"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_407",
      "text": "In this example, the limit parameter is set to 1, which means that only one upload\nis returned in the list, and the marker parameter indicates the multipart upload ID at which the\nreturned list begins. Example Request\nGET /-/vaults/examplevault/multipart-uploads? limit=1&marker=xsQdFIRsfJr20CW2AbZBKpRZAFTZSJIMtL2hYf8mvp8dM0m4RUzlaqoEye6g3h3ecqB_zqwB7zLDMeSWhwo65re4C4Ev\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, Amazon S3 Glacier (S3 Glacier) returns a list of no more than two in-progress\nmultipart uploads for the specified vault, starting at the specified marker and returning two results. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 470\n{\n\"Marker\": \"qt-RBst_7yO8gVIonIBsAxr2t-db0pE4s8MNeGjKjGdNpuU-\ncdSAcqG62guwV9r5jh5mLyFPzFEitTpNE7iQfHiu1XoV\",\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": \"archive 2\",\nList Multipart Uploads API Version 2012-06-01 460\n\nAmazon S3 Glacier Developer Guide\n\"CreationDate\": \"2012-04-01T15:00:00.000Z\",\n\"MultipartUploadId\": \"nPyGOnyFcx67qqX7E-0tSGiRi88hHMOwOxR-\n_jNyM6RjVMFfV29lFqZ3rNsSaWBugg6OP92pRtufeHdQH7ClIpSF6uJc\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Part (PUT uploadID)\nDescription\nThis multipart upload operation uploads a part of an archive. You can upload archive parts in any\norder because in your Upload Part request you specify the range of bytes in the assembled archive\nthat will be uploaded in this part.",
      "start_idx": 701221,
      "end_idx": 703432,
      "metadata": {
        "num_sentences": 5,
        "num_words": 231,
        "breakpoint_idx": 4177,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.33069758415222167,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "multipart upload",
            "limit parameter",
            "marker parameter",
            "Amazon S3 Glacier",
            "VaultARN",
            "UploadsList",
            "MultipartUploadId",
            "PartSizeInBytes",
            "Initiate Multipart Upload",
            "Complete Multipart Upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "AWS4-HMAC-SHA256",
            "Upload Part"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Uploads",
          "secondary_categories": [
            "Amazon S3 Glacier API",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the List Multipart Uploads API in Amazon S3 Glacier to retrieve a list of in-progress multipart uploads, starting from a specified marker and limited by a specified number of results.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a list of in-progress multipart uploads in Amazon S3 Glacier?",
            "What are the required parameters for the List Multipart Uploads API?",
            "What does the response of the List Multipart Uploads API contain?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Multipart Uploads]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "Complete Multipart Upload",
          "PartSizeInBytes",
          "Initiate Multipart Upload",
          "marker parameter",
          "VaultARN",
          "Upload Part",
          "limit parameter",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "UploadsList",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_408",
      "text": "You can also upload these parts in parallel. You can upload up to\n10,000 parts for a multipart upload. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Amazon S3 Glacier (S3 Glacier) rejects your upload part request if any of the following conditions is\ntrue:\n\u2022 SHA256 tree hash does not match\u2014To ensure that part data is not corrupted in transmission,\nyou compute a SHA256 tree hash of the part and include it in your request. Upon receiving the\npart data, S3 Glacier also computes a SHA256 tree hash. If the two hash values don't match,\nUpload Part API Version 2012-06-01 461\n\nAmazon S3 Glacier Developer Guide\nthe operation fails. For information about computing a SHA256 tree hash, see Computing\nChecksums. \u2022 SHA256 linear hash does not match\u2014Required for authorization, you compute a SHA256\nlinear hash of the entire uploaded payload and include it in your request. For information about\ncomputing a SHA256 linear hash, see Computing Checksums. \u2022 Part size does not match\u2014The size of each part except the last must match the size that is\nspecified in the corresponding Initiate Multipart Upload (POST multipart-uploads) request.",
      "start_idx": 703433,
      "end_idx": 707600,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37901840209960935,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "multipart upload",
            "SHA256 tree hash",
            "SHA256 linear hash",
            "Amazon S3 Glacier",
            "upload part",
            "part size",
            "checksum",
            "Initiate Multipart Upload",
            "POST multipart-uploads",
            "authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "SHA256 linear hash",
            "Upload Part API",
            "Initiate Multipart Upload"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Upload Management",
          "secondary_categories": [
            "Hashing Algorithms",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains the conditions under which Amazon S3 Glacier rejects multipart upload requests, including mismatched SHA256 hashes and incorrect part sizes, and provides references for computing checksums.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the conditions that cause S3 Glacier to reject multipart upload requests?",
            "How do I compute a SHA256 tree hash for a multipart upload?",
            "What is the required part size for multipart uploads in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Integrity and Upload Management]",
        "tf_idf_keywords": [
          "checksum",
          "Initiate Multipart Upload",
          "Upload Part API",
          "multipart upload",
          "part size",
          "POST multipart-uploads",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "authorization",
          "upload part",
          "SHA256 linear hash"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_409",
      "text": "The\nsize of the last part must be the same size as, or smaller than, the specified size. Note\nIf you upload a part whose size is smaller than the part size you specified in your initiate\nmultipart upload request and that part is not the last part, then the upload part request\nwill succeed. However, the subsequent Complete Multipart Upload request will fail. \u2022 Range does not align\u2014The byte range value in the request does not align with the part size\nspecified in the corresponding initiate request. For example, if you specify a part size of 4194304\nbytes (4 MB), then 0 to 4194303 bytes (4 MB \u20141) and 4194304 (4 MB) to 8388607 (8 MB \u20141)\nare valid part ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align\nwith the part size and the upload will fail. This operation is idempotent. If you upload the same part multiple times, the data included in the\nmost recent request overwrites the previously uploaded data. Requests\nYou send this HTTP PUT request to the URI of the upload ID that was returned by your Initiate\nMultipart Upload request. S3 Glacier uses the upload ID to associate part uploads with a specific\nmultipart upload.",
      "start_idx": 703433,
      "end_idx": 707600,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35823690626356336,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "multipart upload",
            "part size",
            "byte range",
            "Complete Multipart Upload",
            "idempotent",
            "HTTP PUT request",
            "URI",
            "upload ID",
            "S3 Glacier",
            "Initiate Multipart Upload"
          ],
          "entities": [
            "Complete Multipart Upload",
            "HTTP PUT",
            "S3 Glacier",
            "upload ID",
            "Initiate Multipart Upload"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Multipart Upload",
          "secondary_categories": [
            "HTTP Protocol",
            "Data Storage"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the requirements and constraints for uploading parts in a multipart upload, including size alignment, range validation, and idempotency behavior for overwriting previously uploaded data.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What happens if a part size is smaller than the specified size and it is not the last part?",
            "How should byte ranges be aligned with the specified part size in a multipart upload request?",
            "What is the behavior when the same part is uploaded multiple times during a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload]",
        "tf_idf_keywords": [
          "Complete Multipart Upload",
          "idempotent",
          "byte range",
          "S3 Glacier",
          "Initiate Multipart Upload",
          "part size",
          "HTTP PUT request",
          "URI",
          "HTTP PUT",
          "multipart upload",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_410",
      "text": "The request must include a SHA256 tree hash of the part data (x-amz-SHA256-\ntree-hash header), a SHA256 linear hash of the entire payload (x-amz-content-sha256\nheader), the byte range (Content-Range header), and the length of the part in bytes (Content-\nLength header). Syntax\nPUT /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nUpload Part API Version 2012-06-01 462\n\nAmazon S3 Glacier Developer Guide\nAuthorization: SignatureValue\nContent-Range: ContentRange\nContent-Length: PayloadSize\nContent-Type: application/octet-stream\nx-amz-sha256-tree-hash: Checksum of the part\nx-amz-content-sha256: Checksum of the entire payload\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nContent-Length No\nIdentifies the length of the part in bytes. Type: String\nDefault: None\nConstraints: None\nContent-Range Yes\nIdentifies the range of bytes in the assembled\narchive that will be uploaded in this part. S3\nUpload Part API Version 2012-06-01 463\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nGlacier uses this information to assemble the\narchive in the proper sequence. The format of this\nheader follows RFC 2616.",
      "start_idx": 703433,
      "end_idx": 707600,
      "metadata": {
        "num_sentences": 11,
        "num_words": 260,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32346905795010655,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Headers",
              "Request Parameters"
            ]
          },
          "keywords": [
            "SHA256 tree hash",
            "Content-Range",
            "Content-Length",
            "x-amz-SHA256-tree-hash",
            "x-amz-content-sha256",
            "AWS account ID",
            "Glacier",
            "multipart-uploads",
            "RFC 2616",
            "Checksum"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-SHA256-tree-hash",
            "x-amz-content-sha256",
            "Content-Range header",
            "AccountId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP Headers"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the required headers and syntax for uploading a part to Amazon S3 Glacier using the Upload Part API, including details on SHA256 hashes, byte ranges, and account ID formatting.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What headers are required to upload a part to Amazon S3 Glacier?",
            "How should the Content-Range header be formatted for the Upload Part API?",
            "What is the purpose of the x-amz-sha256-tree-hash header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Checksum",
          "x-amz-SHA256-tree-hash",
          "AccountId",
          "multipart-uploads",
          "AWS account ID",
          "SHA256 tree hash",
          "x-amz-content-sha256",
          "RFC 2616",
          "Glacier",
          "Content-Length",
          "Amazon S3 Glacier",
          "Content-Range header",
          "Content-Range"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_411",
      "text": "An example header is\nContent-Range:bytes 0-4194303/* . Type: String\nDefault: None\nConstraints: The range cannot be greater than the\npart size that you specified when you initiated the\nmultipart upload. x-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the\nsha256\nuploaded payload. This is not the same value as\nyou specify in the x-amz-sha256-tree-hash\nheader. Type: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nSpecifies a SHA256 tree hash of the data being\ntree-hash\nuploaded. For information about computing a\nSHA256 tree hash, see Computing Checksums. Type: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload. Upload Part API Version 2012-06-01 464\n\nAmazon S3 Glacier Developer Guide\nResponses\nUpon a successful part upload, S3 Glacier returns a 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nx-amz-sha256-\nThe SHA256 tree hash that S3 Glacier computed for the uploaded part. tree-hash\nType: String\nResponse Body\nThis operation does not return a response body.",
      "start_idx": 707601,
      "end_idx": 714232,
      "metadata": {
        "num_sentences": 12,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35049233292088366,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "Content-Range",
            "x-amz-content-sha256",
            "SHA256",
            "tree hash",
            "multipart upload",
            "response headers",
            "Request Body",
            "Upload Part API",
            "S3 Glacier",
            "checksum"
          ],
          "entities": [
            "Content-Range",
            "x-amz-content-sha256",
            "x-amz-sha256-tree-hash",
            "Amazon S3 Glacier",
            "HTTP/1.1 204 No Content"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "HTTP Headers and Responses",
          "secondary_categories": [
            "Data Integrity and Checksums",
            "Multipart Uploads"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the headers, constraints, and responses for uploading parts to Amazon S3 Glacier, including details on Content-Range, SHA256 checksums, and response structure.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the Content-Range header in S3 Glacier uploads?",
            "How is the x-amz-sha256-tree-hash header computed and used?",
            "What response headers are returned after a successful part upload in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [HTTP Headers and Responses]",
        "tf_idf_keywords": [
          "Request Body",
          "checksum",
          "S3 Glacier",
          "tree hash",
          "HTTP/1.1 204 No Content",
          "Upload Part API",
          "x-amz-sha256-tree-hash",
          "response headers",
          "x-amz-content-sha256",
          "Amazon S3 Glacier",
          "SHA256",
          "multipart upload",
          "Content-Range"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_412",
      "text": "Example\nThe following request uploads a 4 MB part. The request sets the byte range to make this the first\npart in the archive. Example Request\nThe example sends an HTTP PUT request to upload a 4 MB part. The request is sent to the URI of\nthe Upload ID that was returned by the Initiate Multipart Upload request. The Content-Range\nheader identifies the part as the first 4 MB data part of the archive. Upload Part API Version 2012-06-01 465\n\nAmazon S3 Glacier Developer Guide\nPUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 0-4194303/*\nx-amz-sha256-tree-hash:c06f7cd4baacb087002a99a5f48bf953\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nContent-Length: 4194304\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-\nversion,Signature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nTo upload the next part, the procedure is the same; however, you must calculate a new SHA256\ntree hash of the part you are uploading and also specify a new byte range to indicate where the\npart will go in the final assembly. The following request uploads another part using the same\nupload ID. The request specifies the next 4 MB of the archive after the previous request and a part\nsize of 4 MB. PUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 4194304-8388607/*\nContent-Length: 4194304\nx-amz-sha256-tree-hash:f10e02544d651e2c3ce90a4307427493\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-glacier-version: 2012-06-01\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/\nus-west-2/glacier/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-version,\nSignature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nThe parts can be uploaded in any order; S3 Glacier uses the range specification for each part to\ndetermine the order in which to assemble them. Example Response\nHTTP/1.1 204 No Content\nUpload Part API Version 2012-06-01 466\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nx-amz-sha256-tree-hash: c06f7cd4baacb087002a99a5f48bf953\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nJob Operations\nThe following are the job operations available in S3 Glacier. Topics\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Initiate Job (POST jobs)\n\u2022 List Jobs (GET jobs)\nDescribe Job (GET JobID)\nDescription\nThis operation returns information about a job you previously initiated, including the job initiation\ndate, the user who initiated the job, the job status code/message, and the Amazon Simple\nNotification Service (Amazon SNS) topic to notify after Amazon S3 Glacier (S3 Glacier) completes\nthe job. For more information about initiating a job, see Initiate Job (POST jobs).",
      "start_idx": 707601,
      "end_idx": 714232,
      "metadata": {
        "num_sentences": 12,
        "num_words": 419,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3860005754413027,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "Amazon S3 Glacier",
            "Upload Part",
            "Content-Range",
            "SHA256 Tree Hash",
            "Authorization",
            "Initiate Multipart Upload",
            "Complete Multipart Upload",
            "Job Operations",
            "Identity and Access Management"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Upload ID",
            "AWS4-HMAC-SHA256",
            "SHA256 Tree Hash",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Multipart Upload Operations",
          "secondary_categories": [
            "Job Operations",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This document provides instructions for uploading parts of a large archive to Amazon S3 Glacier using the Upload Part API, including HTTP requests, required headers, and response details. It also outlines related operations like initiating, completing, or aborting multipart uploads and managing jobs in S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a 4 MB part to Amazon S3 Glacier using the Upload Part API?",
            "What headers are required for an Upload Part request in S3 Glacier?",
            "How does S3 Glacier determine the order of parts during multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Multipart Upload Operations]",
        "tf_idf_keywords": [
          "Complete Multipart Upload",
          "Upload ID",
          "SHA256 Tree Hash",
          "Upload Part",
          "Initiate Multipart Upload",
          "Identity and Access Management",
          "Job Operations",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "Multipart Upload",
          "Content-Range"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_413",
      "text": "Job Operations API Version 2012-06-01 467\n\nAmazon S3 Glacier Developer Guide\nNote\nThis operation enables you to check the status of your job. However, we strongly\nrecommend that you set up an Amazon SNS topic and specify it in your initiate job request\nso that S3 Glacier can notify the topic after it completes the job. A job ID will not expire for at least 24 hours after S3 Glacier completes the job. Requests\nSyntax\nTo obtain information about a job, you use the HTTP GET method and scope the request to the\nspecific job. Note that the relative URI path is the same one that S3 Glacier returned to you when\nyou initiated the job. GET /AccountID/vaults/VaultName/jobs/JobID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: signatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Note\nIn the request, if you omit the JobID, the response returns a list of all active jobs on the\nspecified vault. For more information about listing jobs, see List Jobs (GET jobs). Describe Job API Version 2012-06-01 468\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 707601,
      "end_idx": 714232,
      "metadata": {
        "num_sentences": 12,
        "num_words": 259,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3564730557528409,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Syntax",
              "Request Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Job Operations API",
            "HTTP GET",
            "JobID",
            "AccountID",
            "vault",
            "SNS topic",
            "x-amz-glacier-version",
            "AWS account ID",
            "List Jobs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Job Operations API Version 2012-06-01",
            "AccountID",
            "VaultName",
            "JobID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Cloud Storage",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to check the status of a job in Amazon S3 Glacier using the Describe Job API, including syntax, request structure, and considerations for specifying account and job IDs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I check the status of a job in Amazon S3 Glacier?",
            "What is the syntax for the Describe Job API request?",
            "What happens if I omit the JobID in the request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "SNS topic",
          "Job Operations API",
          "JobID",
          "x-amz-glacier-version",
          "Job Operations API Version 2012-06-01",
          "vault",
          "AWS account ID",
          "Amazon SNS",
          "List Jobs",
          "AccountID",
          "Amazon S3 Glacier",
          "HTTP GET",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_414",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\nDescribe Job API Version 2012-06-01 469\n\nAmazon S3 Glacier Developer Guide\n\"AccessControlList\": [\n{\n\"Grantee\": {\n\"DisplayName\": \"string\",\n\"EmailAddress\": \"string\",\n\"ID\": \"string\",\n\"Type\": \"string\",\n\"URI\": \"string\"\n},\n\"Permission\": \"string\"\n}\n],\n\"BucketName\": \"string\",\n\"CannedACL\": \"string\",\n\"Encryption\": {\n\"EncryptionType\": \"string\",\n\"KMSContext\": \"string\",\n\"KMSKeyId\": \"string\"\n},\n\"Prefix\": \"string\",\n\"StorageClass\": \"string\",\n\"Tagging\": {\n\"string\": \"string\"\n},\n\"UserMetadata\": {\n\"string\": \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\nDescribe Job API Version 2012-06-01 470\n\nAmazon S3 Glacier Developer Guide\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 714233,
      "end_idx": 716353,
      "metadata": {
        "num_sentences": 4,
        "num_words": 224,
        "breakpoint_idx": 4248,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3898591200510661,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Request Headers",
              "Response Headers",
              "JSON Syntax"
            ]
          },
          "keywords": [
            "Request Headers",
            "Response Headers",
            "HTTP/1.1",
            "JSON",
            "ArchiveId",
            "InventoryRetrievalParameters",
            "S3",
            "Encryption",
            "SelectParameters",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "InventoryRetrievalParameters",
            "SNSTopic",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the response syntax and structure for an operation in the Amazon S3 Glacier API, including headers, response body fields, and nested parameters for inventory retrieval and job outputs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the response body for this API operation?",
            "What are the fields and nested parameters included in the response for inventory retrieval?",
            "What headers are used in the response for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Amazon S3",
          "Encryption",
          "x-amzn-RequestId",
          "VaultARN",
          "Response Headers",
          "S3",
          "HTTP/1.1",
          "SelectParameters",
          "InventoryRetrievalParameters",
          "Amazon S3 Glacier",
          "JSON",
          "Request Headers",
          "SNSTopic",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_415",
      "text": "Response Body\nThe response body contains the following JSON fields. Action\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select. Type: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null. Type: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval job. For inventory retrieval\njobs, this field is null. Type: String\nDescribe Job API Version 2012-06-01 471\n\nAmazon S3 Glacier Developer Guide\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null. Type: Number\nCompleted\nThe job status. When an archive or inventory retrieval job is completed, you get the job's output\nusing the Get Job Output (GET output).",
      "start_idx": 716354,
      "end_idx": 719528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 130,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3245748346502131,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Response Body",
              "Field Description"
            ]
          },
          "keywords": [
            "Response Body",
            "JSON fields",
            "Action",
            "ArchiveId",
            "ArchiveSHA256TreeHash",
            "Describe Job API",
            "ArchiveSizeInBytes",
            "Completed",
            "Get Job Output",
            "InventoryRetrieval"
          ],
          "entities": [
            "Action",
            "ArchiveId",
            "ArchiveSHA256TreeHash",
            "Describe Job API Version 2012-06-01",
            "Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Data Retrieval",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the JSON fields in the response body for Amazon S3 Glacier job types, including ArchiveRetrieval, InventoryRetrieval, and Select, along with their data types and conditions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the JSON fields included in the response body for Amazon S3 Glacier jobs?",
            "What does the ArchiveId field represent in different job types?",
            "How can I determine the size of an archive in bytes for an ArchiveRetrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Action",
          "ArchiveSHA256TreeHash",
          "Get Job Output",
          "ArchiveSizeInBytes",
          "InventoryRetrieval",
          "Response Body",
          "JSON fields",
          "Completed",
          "Amazon S3 Glacier",
          "Describe Job API",
          "Describe Job API Version 2012-06-01",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_416",
      "text": "Type: Boolean\nCompletionDate\nThe Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null. Type: String\nCreationDate\nThe UTC time that the job was created. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. InventoryRetrievalParameters\nInput parameters used for a range inventory retrieval. Type: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null. Type: Number\nJobDescription\nThe job description you provided when you initiated the job. Type: String\nDescribe Job API Version 2012-06-01 472\n\nAmazon S3 Glacier Developer Guide\nJobId\nThe ID that identifies the job in S3 Glacier. Type: String\nJobOutputPath\nContains the job output location. Type: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored.",
      "start_idx": 716354,
      "end_idx": 719528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 151,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3658223932439631,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "CompletionDate",
            "CreationDate",
            "InventoryRetrievalParameters",
            "InventorySizeInBytes",
            "JobDescription",
            "JobId",
            "JobOutputPath",
            "OutputLocation",
            "S3 Glacier",
            "ISO 8601"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InventoryRetrievalJobInput",
            "UTC",
            "ISO 8601",
            "Describe Job API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Job Management",
          "secondary_categories": [
            "Data Retrieval",
            "Storage Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes various attributes of S3 Glacier jobs, including their types, timestamps, input parameters, and output details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the CreationDate for an S3 Glacier job?",
            "What does the InventorySizeInBytes field represent for different job types?",
            "Where can I find the output location of a Select job in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Job Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "CreationDate",
          "JobDescription",
          "InventorySizeInBytes",
          "OutputLocation",
          "JobId",
          "JobOutputPath",
          "InventoryRetrievalJobInput",
          "CompletionDate",
          "InventoryRetrievalParameters",
          "Amazon S3 Glacier",
          "UTC",
          "Describe Job API",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_417",
      "text": "Type: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If you don't specify a range in the archive retrieval, then\nthe whole archive is retrieved; also StartByteValue equals 0, and EndByteValue equals the size of\nthe archive minus 1. For inventory retrieval or select jobs, this field is null. Type: String\nSelectParameters\nAn object that contains information about the parameters used for a select. Type: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value. For more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data. For the specific case when the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value. This field is null in the following situations:\nDescribe Job API Version 2012-06-01 473\n\nAmazon S3 Glacier Developer Guide\n\u2022 Archive retrieval jobs that specify a range that is not tree-hash aligned. \u2022 Archival jobs that specify a range that is equal to the whole archive and the job status is\nInProgress. \u2022 Inventory jobs.",
      "start_idx": 716354,
      "end_idx": 719528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 198,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3966703241521662,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Field Description",
              "Object Properties"
            ]
          },
          "keywords": [
            "OutputLocation",
            "RetrievalByteRange",
            "archive retrieval",
            "StartByteValue",
            "EndByteValue",
            "SHA256TreeHash",
            "SelectParameters",
            "tree-hash alignment",
            "archive range retrieval",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "OutputLocation object",
            "SelectParameters object",
            "SHA256TreeHash",
            "Amazon S3 Glacier",
            "Describe Job API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Checksum Handling",
            "API Parameters"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the fields and behaviors of the OutputLocation object, including retrieval byte ranges, select parameters, and SHA256 tree hash values for archive retrieval jobs in Amazon S3 Glacier.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the RetrievalByteRange in archive retrieval jobs?",
            "When is the SHA256TreeHash field null in archive retrieval jobs?",
            "What does the SelectParameters object contain?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval]",
        "tf_idf_keywords": [
          "RetrievalByteRange",
          "SHA256TreeHash",
          "tree-hash alignment",
          "StartByteValue",
          "OutputLocation",
          "OutputLocation object",
          "SelectParameters object",
          "archive range retrieval",
          "archive retrieval",
          "Amazon S3 Glacier",
          "EndByteValue",
          "Describe Job API Version 2012-06-01",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_418",
      "text": "\u2022 Select jobs. Type: String\nSNSTopic\nAn Amazon SNS topic that receives notification. Type: String\nStatusCode\nThe code indicating the status of the job. Valid Values: InProgress | Succeeded | Failed\nType: String\nStatusMessage\nA friendly message that describes the job status. Type: String\nTier\nThe data access tier to use for the select or archive retrieval. Valid Values: Bulk | Expedited | Standard\nType: String\nVaultARN\nThe Amazon Resource Name (ARN) of the vault of which the job is a subresource. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Describe Job API Version 2012-06-01 474\n\nAmazon S3 Glacier Developer Guide\nExamples\nThe following example shows the request for a job that retrieves an archive. Example Request: Get job description\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe response body includes JSON that describes the specified job. Note that for both the inventory\nretrieval and archive retrieval jobs, the JSON fields are the same.",
      "start_idx": 719529,
      "end_idx": 720992,
      "metadata": {
        "num_sentences": 10,
        "num_words": 172,
        "breakpoint_idx": 4291,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.33348905775282117,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Description",
              "Request Example",
              "Response Example"
            ]
          },
          "keywords": [
            "Amazon SNS topic",
            "StatusCode",
            "StatusMessage",
            "Tier",
            "VaultARN",
            "Amazon S3 Glacier",
            "Error Responses",
            "API Version",
            "archive retrieval",
            "inventory retrieval"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon S3 Glacier",
            "VaultARN",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "AWS Job Management",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon SNS",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the properties and usage of Amazon S3 Glacier job-related fields, including job status, data access tiers, and example API requests and responses for retrieving job descriptions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the job status code in Amazon S3 Glacier?",
            "How do I retrieve the description of a specific job using the API?",
            "What is the purpose of the VaultARN field in a job request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "StatusCode",
          "StatusMessage",
          "VaultARN",
          "x-amz-glacier-version",
          "inventory retrieval",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier",
          "Tier",
          "AWS4-HMAC-SHA256",
          "API Version",
          "Amazon SNS topic",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_419",
      "text": "However, when a field doesn't\napply to the type of job, its value is null. The following is an example response for an archive\nretrieval job. Note the following:\n\u2022 The Action field value is ArchiveRetrieval. \u2022 The ArchiveSizeInBytes field shows the size of the archive requested in the archive retrieval\njob. \u2022 The ArchiveSHA256TreeHash field shows the SHA256 tree hash for the entire archive. \u2022 The RetrievalByteRange field shows the range requested in the Initiate Job request. In this\nexample, the whole archive is requested. \u2022 The SHA256TreeHash field shows the SHA256 tree hash for the range requested in the Initiate\nJob request. In this example, it is the same as the ArchiveSHA256TreeHash field, which means\nthat the whole archive was requested. \u2022 The InventorySizeInBytes field value is null because it does not apply to an archive\nretrieval job. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nDescribe Job API Version 2012-06-01 475\n\nAmazon S3 Glacier Developer Guide\nContent-Length: 419\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"ArchiveSizeInBytes\": 16777216,\n\"ArchiveSHA256TreeHash\":\n\"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"Completed\": false,\n\"CompletionDate\": null,\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"My ArchiveRetrieval Job\",\n\"JobId\": \"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"RetrievalByteRange\": \"0-16777215\",\n\"SHA256TreeHash\": \"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\": \"InProgress\",\n\"StatusMessage\": \"Operation in progress. \",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nThe following is an example response for an inventory retrieval job.",
      "start_idx": 720993,
      "end_idx": 723085,
      "metadata": {
        "num_sentences": 12,
        "num_words": 221,
        "breakpoint_idx": 4303,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3932341662320224,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Response",
              "Field Explanation"
            ]
          },
          "keywords": [
            "ArchiveRetrieval",
            "ArchiveSizeInBytes",
            "SHA256TreeHash",
            "RetrievalByteRange",
            "InventorySizeInBytes",
            "JobDescription",
            "JobId",
            "SNSTopic",
            "StatusCode",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Job API",
            "HTTP/1.1 200 OK",
            "AWS SNS",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Cloud Storage",
            "API Responses"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the structure of an example response for an archive retrieval job in Amazon S3 Glacier, detailing field values such as Action, ArchiveSizeInBytes, SHA256TreeHash, and others, along with their meanings and conditions when null values apply.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What does the ArchiveSizeInBytes field represent in an archive retrieval job response?",
            "When is the InventorySizeInBytes field value null in an Amazon S3 Glacier job response?",
            "What is the difference between SHA256TreeHash and ArchiveSHA256TreeHash in an archive retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Data Retrieval]",
        "tf_idf_keywords": [
          "ArchiveRetrieval",
          "RetrievalByteRange",
          "StatusCode",
          "HTTP/1.1 200 OK",
          "ArchiveSizeInBytes",
          "SHA256TreeHash",
          "AWS SNS",
          "JobDescription",
          "InventorySizeInBytes",
          "VaultARN",
          "JobId",
          "Amazon S3 Glacier",
          "Describe Job API",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_420",
      "text": "Note the following:\n\u2022 The Action field value is InventoryRetrieval. \u2022 The ArchiveSizeInBytes, ArchiveSHA256TreeHash, and RetrievalByteRange field\nvalues are null because these fields do not apply to an inventory retrieval job. \u2022 The InventorySizeInBytes field value is null because the job is still in progress, and has\nnot fully prepared the inventory for download. If the job was completed before your describe job\nrequest, this field would give you the size of the output. {\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"Completed\": false,\n\"CompletionDate\": null,\nDescribe Job API Version 2012-06-01 476\n\nAmazon S3 Glacier Developer Guide\n\"CreationDate\": \"2012-05-15T23:18:13.224Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"Inventory Description\",\n\"JobId\": \"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"RetrievalByteRange\": null,\n\"SHA256TreeHash\": null,\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\": \"InProgress\",\n\"StatusMessage\": \"Operation in progress. \",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nThe following is an example response for a completed inventory retrieval job that contains a\nmarker used to continue pagination of the vault inventory retrieval. {\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"ArchiveSizeInBytes\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2013-12-05T21:51:13.591Z\",\n\"CreationDate\": \"2013-12-05T21:51:12.281Z\",\n\"InventorySizeInBytes\": 777062,\n\"JobDescription\": null,\n\"JobId\": \"sCC2RZNBF2nildYD_roe0J9bHRdPQUbDRkmTdg-mXi2u3lc49uW6TcEhDF2D9pB2phx-\nBN30JaBru7PMyOlfXHdStzu8\",\n\"NextInventoryRetrievalMarker\": null,\n\"RetrievalByteRange\": null,\n\"SHA256TreeHash\": null,\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier-devo:us-west-2:836579025725:vaults/inventory-\nicecube-2\",\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-11-12T13:43:12Z\",\n\"EndDate\": \"2013-11-20T08:12:45Z\",\n\"Limit\": \"120000\",\n\"Format\": \"JSON\",\nDescribe Job API Version 2012-06-01 477\n\nAmazon S3 Glacier Developer Guide\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n},\n}\nRelated Sections\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Job Output (GET output)\nDescription\nThis operation downloads the output of the job you initiated using Initiate Job (POST jobs). Depending on the job type you specified when you initiated the job, the output will be either the\ncontent of an archive or a vault inventory.",
      "start_idx": 723086,
      "end_idx": 725832,
      "metadata": {
        "num_sentences": 8,
        "num_words": 277,
        "breakpoint_idx": 4311,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4215897151402065,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Field Explanation",
              "Example Response"
            ]
          },
          "keywords": [
            "InventoryRetrieval",
            "ArchiveSHA256TreeHash",
            "JobId",
            "VaultARN",
            "CompletionDate",
            "InventorySizeInBytes",
            "SNSTopic",
            "StatusCode",
            "InventoryRetrievalParameters",
            "Get Job Output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "arn:aws:sns:us-west-2:012345678901:mytopic",
            "arn:aws:glacier:us-west-2:012345678901:vaults/examplevault",
            "arn:aws:glacier-devo:us-west-2:836579025725:vaults/inventory-icecube-2",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Job Management",
          "secondary_categories": [
            "Inventory Retrieval Operations",
            "Job Output Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management (IAM)"
          ],
          "mentioned_tools": [
            "Amazon SNS"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the structure and example responses for inventory retrieval jobs in Amazon S3 Glacier, including fields such as job status, metadata, and parameters for completed and in-progress jobs.",
          "intents": [
            "Reference",
            "Debug",
            "How-To"
          ],
          "potential_questions": [
            "What fields are included in the response for an inventory retrieval job in Amazon S3 Glacier?",
            "How can I determine if an inventory retrieval job is completed or in progress?",
            "What metadata is provided for a completed inventory retrieval job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "InventoryRetrieval",
          "StatusCode",
          "Get Job Output",
          "arn:aws:glacier-devo:us-west-2:836579025725:vaults/inventory-icecube-2",
          "VaultARN",
          "InventorySizeInBytes",
          "JobId",
          "AWS Identity and Access Management (IAM)",
          "CompletionDate",
          "API Version 2012-06-01",
          "InventoryRetrievalParameters",
          "arn:aws:sns:us-west-2:012345678901:mytopic",
          "Amazon S3 Glacier",
          "arn:aws:glacier:us-west-2:012345678901:vaults/examplevault",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_421",
      "text": "You can download all the job output or download a portion of the output by specifying a byte\nrange. For both archive and inventory retrieval jobs, you should verify the downloaded size against\nthe size returned in the headers from the Get Job Output response. For archive retrieval jobs, you should also verify that the size is what you expected. If you download\na portion of the output, the expected size is based on the range of bytes you specified. For\nexample, if you specify a range of bytes=0-1048575, you should verify your download size is\n1,048,576 bytes. If you download an entire archive, the expected size is the size of the archive\nwhen you uploaded it to Amazon S3 Glacier (S3 Glacier). The expected size is also returned in the\nheaders from the Get Job Output response. In the case of an archive retrieval job, depending on the byte range you specify, S3 Glacier returns\nthe checksum for the portion of the data. To ensure the portion you downloaded is the correct\ndata, compute the checksum on the client, verify that the values match, and verify that the size is\nwhat you expected. A job ID does not expire for at least 24 hours after S3 Glacier completes the job.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4513434516059028,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Verification",
              "Data Integrity",
              "Byte Range Specification"
            ]
          },
          "keywords": [
            "job output",
            "byte range",
            "archive retrieval",
            "inventory retrieval",
            "Amazon S3 Glacier",
            "checksum",
            "Get Job Output response",
            "download size",
            "expected size",
            "job ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output response",
            "archive retrieval job",
            "inventory retrieval job",
            "byte range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval and Validation",
          "secondary_categories": [
            "Cloud Storage",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to download job output or a portion of it from Amazon S3 Glacier, verify the downloaded size, and validate data integrity using checksums. It also provides details on handling byte ranges and job ID expiration timelines.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I verify the size of downloaded data from an S3 Glacier job?",
            "What is the process for downloading a specific byte range of job output in S3 Glacier?",
            "How can I validate the integrity of downloaded data using checksums in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval and Validation]",
        "tf_idf_keywords": [
          "checksum",
          "byte range",
          "archive retrieval job",
          "Get Job Output response",
          "expected size",
          "inventory retrieval job",
          "job output",
          "job ID",
          "archive retrieval",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "download size"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_422",
      "text": "That is, you can\ndownload the job output within the 24-hour period after S3 Glacier completes the job. Get Job Output API Version 2012-06-01 478\n\nAmazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo retrieve a job output, you send the HTTP GET request to the URI of the output of the specific\njob. GET /AccountId/vaults/VaultName/jobs/JobID/output HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nRange: ByteRangeToRetrieve\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nRange No\nThe range of bytes to retrieve from the output. For example,\nif you want to download the first 1,048,576 bytes, specify\nthe range as bytes=0-1048575 .",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.26598985460069446,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Syntax",
              "Request Headers",
              "Request Parameters"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Get Job Output",
            "API Version 2012-06-01",
            "HTTP GET",
            "AccountId",
            "vaults",
            "JobID",
            "Range",
            "x-amz-glacier-version",
            "ByteRangeToRetrieve"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output API",
            "AccountId",
            "VaultName",
            "JobID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP GET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Get Job Output API in Amazon S3 Glacier to retrieve job output within 24 hours after job completion, including syntax, request headers, and parameters.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve job output from Amazon S3 Glacier?",
            "What headers are required for the Get Job Output API request?",
            "What is the syntax for specifying a byte range in the Get Job Output API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Get Job Output",
          "Range",
          "Get Job Output API",
          "JobID",
          "AccountId",
          "x-amz-glacier-version",
          "API Version 2012-06-01",
          "ByteRangeToRetrieve",
          "Amazon S3 Glacier",
          "vaults",
          "HTTP GET",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_423",
      "text": "For more information,\ngo to Range Header Field Definition. The range is relative to\nGet Job Output API Version 2012-06-01 479\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nany range specified in the Initiate Job request. By default,\nthis operation downloads the entire output. If the job output is large, then you can use the Range request\nheader to retrieve a portion of the output. This allows you\nto download the entire output in smaller chunks of bytes. For example, suppose you have 1 GB job output you want\nto download and you decide to download 128 MB chunks of\ndata at a time, a total of eight Get Job Output requests. You\nwill use the following process to download the job output:\n1. Download a 128 MB chunk of output by specifying the\nappropriate byte range using the R ange header. Verify\nthat all 128 MB of data was received. 2.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 153,
        "chunk_type": "semantic_split",
        "coherence_score": 0.310635248819987,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Data Retrieval"
            ]
          },
          "keywords": [
            "Range header",
            "Initiate Job request",
            "Get Job Output",
            "Amazon S3 Glacier",
            "job output",
            "byte range",
            "API Version 2012-06-01",
            "chunk",
            "128 MB",
            "download process"
          ],
          "entities": [
            "Range Header Field Definition",
            "Get Job Output API",
            "Amazon S3 Glacier Developer Guide",
            "Initiate Job request",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Usage",
          "secondary_categories": [
            "Data Transfer",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the Range header in the Get Job Output API to download large job outputs in smaller chunks, providing an example with 128 MB chunks for a 1 GB output.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download large job outputs in smaller chunks using the Get Job Output API?",
            "What is the purpose of the Range header in the Get Job Output API?",
            "How do I verify that the downloaded chunk of data is complete?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Usage]",
        "tf_idf_keywords": [
          "Get Job Output",
          "byte range",
          "Amazon S3 Glacier Developer Guide",
          "chunk",
          "download process",
          "Get Job Output API",
          "Range Header Field Definition",
          "job output",
          "Range header",
          "Initiate Job request",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "128 MB"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_424",
      "text": "Along with the data, the response will include a checksum\nof the payload. You compute the checksum of the\npayload on the client and compare it with the checksum\nyou received in the response to ensure you received all\nthe expected data. 3. Repeat steps 1 and 2 for all the eight 128 MB chunks of\noutput data, each time specifying the appropriate byte\nrange. 4. After downloading all the parts of the job output, you\nhave a list of eight checksum values. Compute the tree\nhash of these values to find the checksum of the entire\noutput. Using the Describe Job (GET JobID) operation,\nobtain job information of the job that provided you the\noutput. The response includes the checksum of the entire\narchive stored in S3 Glacier. You compare this value\nwith the checksum you computed to ensure you have\ndownloaded the entire archive content with no errors.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 150,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2941418117947049,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Data Integrity",
              "Checksum Validation",
              "Tree Hash Calculation"
            ]
          },
          "keywords": [
            "checksum",
            "payload",
            "byte range",
            "tree hash",
            "job output",
            "archive",
            "S3 Glacier",
            "Describe Job",
            "GET JobID",
            "data validation"
          ],
          "entities": [
            "S3 Glacier",
            "Describe Job",
            "GET JobID",
            "checksum",
            "tree hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity Verification",
          "secondary_categories": [
            "Cloud Storage",
            "Checksum Computation"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to verify data integrity by computing and comparing checksums during the download of eight 128 MB chunks from S3 Glacier, and how to validate the entire archive using a tree hash and job information.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "How do I verify the integrity of downloaded data using checksums?",
            "What is the process for computing a tree hash for multiple checksum values?",
            "How can I ensure the entire archive content from S3 Glacier is downloaded without errors?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity Verification]",
        "tf_idf_keywords": [
          "checksum",
          "Describe Job",
          "byte range",
          "S3 Glacier",
          "archive",
          "tree hash",
          "payload",
          "GET JobID",
          "data validation",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_425",
      "text": "Type: String\nGet Job Output API Version 2012-06-01 480\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: None\nRequest Body\nThis operation does not have a request body. Responses\nSyntax\nFor a retrieval request that returns all of the job data, the job output response returns a 200 OK\nresponse code. When partial content is requested, for example, if you specified the Range header\nin the request, then the response code 206 Partial Content is returned. HTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: ContentType\nContent-Length: Length\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\n[Body containing job output.] Response Headers\nHeader Description\nContent-Range\nThe range of bytes returned by S3 Glacier. If only partial output is\ndownloaded, the response provides the range of bytes S3 Glacier\nreturned. For example, bytes 0-1048575/8388608 returns the first 1 MB\nfrom 8 MB. For more information about the Content-Range header, go to\nContent-Range Header Field Definition. Get Job Output API Version 2012-06-01 481\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nType: String\nContent-Type\nThe Content-Type depends on whether the job output is an archive or\na vault inventory. \u2022\nFor archive data, the Content-Type is application/octet-\nstream .",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39791480170355903,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "HTTP Headers"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Get Job Output",
            "API Version 2012-06-01",
            "Content-Range",
            "Content-Type",
            "x-amzn-RequestId",
            "x-amz-sha256-tree-hash",
            "200 OK",
            "206 Partial Content",
            "Range header"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output API",
            "Content-Range Header",
            "HTTP/1.1",
            "application/octet-stream"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response structure and headers for the 'Get Job Output' API in Amazon S3 Glacier, detailing HTTP status codes, content range, and content type for job outputs.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What HTTP status codes are returned by the Get Job Output API?",
            "What does the Content-Range header indicate in the response?",
            "What is the Content-Type for archive data in the job output?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "206 Partial Content",
          "S3 Glacier",
          "Get Job Output",
          "Content-Type",
          "Get Job Output API",
          "x-amzn-RequestId",
          "x-amz-sha256-tree-hash",
          "HTTP/1.1",
          "API Version 2012-06-01",
          "200 OK",
          "Range header",
          "Amazon S3 Glacier",
          "application/octet-stream",
          "Content-Range",
          "Content-Range Header"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_426",
      "text": "\u2022\nFor vault inventory, if you requested CSV format when you initiated\nthe job, the Content-Type is text/csv. Otherwise, by default,\nvault inventory is returned as JSON, and the Content-Type is\napplication/json . Type: String\nGet Job Output API Version 2012-06-01 482\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nx-amz-sha256-\nThe checksum of the data in the response. This header is returned only\ntree-hash\nwhen retrieving the output for an archive retrieval job. Furthermore,\nthis header appears when the retrieved data range requested in the\nInitiate Job request is tree hash aligned and the range to download\nin the Get Job Output is also tree hash aligned. For more informati\non about tree hash aligned ranges, see Receiving Checksums When\nDownloading Data. For example, if in your Initiate Job request you specified a tree hash\naligned range to retrieve (which includes the whole archive), then\nyou will receive the checksum of the data you download under the\nfollowing conditions:\n\u2022\nYou get the entire range of the retrieved data. \u2022\nYou request a byte range of the retrieved data that has a size of a\nmegabyte (1024 KB) multiplied by a power of 2 and that starts and\nends on a multiple of the size of the requested range. For example,\nif you have 3.1 MB of retrieved data and you specify a range to\nreturn that starts at 1 MB and ends at 2 MB, then the x-amz-sha\n256-tree-hash is returned as a response header. \u2022\nYou request a range to return of the retrieved data that goes to the\nend of the data, and the start of the range is a multiple of the size\nof the range to retrieve rounded up to the next power of two but\nnot smaller than one megabyte (1024 KB).",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 298,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38817227681477867,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Header Description",
              "Checksum"
            ]
          },
          "keywords": [
            "vault inventory",
            "Content-Type",
            "application/json",
            "text/csv",
            "tree hash",
            "checksum",
            "archive retrieval",
            "Initiate Job",
            "byte range",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Get Job Output API",
            "x-amz-sha256-tree-hash",
            "Amazon S3 Glacier",
            "Initiate Job request",
            "Header Description"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "API Specifications",
            "Data Formats"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the content type formats for vault inventory retrieval and describes conditions under which the x-amz-sha256-tree-hash header is returned in archive retrieval jobs using the Get Job Output API.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What content type is returned for vault inventory jobs in Amazon S3 Glacier?",
            "Under what conditions is the x-amz-sha256-tree-hash header included in the response?",
            "How do I ensure tree hash alignment when retrieving data in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval]",
        "tf_idf_keywords": [
          "checksum",
          "vault inventory",
          "byte range",
          "text/csv",
          "tree hash",
          "Content-Type",
          "Initiate Job",
          "Get Job Output API",
          "x-amz-sha256-tree-hash",
          "application/json",
          "Initiate Job request",
          "archive retrieval",
          "Amazon S3 Glacier",
          "Header Description"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_427",
      "text": "For example, if you have\n3.1 MB of retrieved data and you specify a range that starts at 2\nMB and ends at 3.1 MB (the end of the data), then the x-amz-sha\n256-tree-hash is returned as a response header. Type: String\nGet Job Output API Version 2012-06-01 483\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nS3 Glacier returns the job output in the response body. Depending on the job type, the output can\nbe the archive contents or the vault inventory. In case of a vault inventory, by default the inventory\nlist is returned as the following JSON body. {\n\"VaultARN\": String,\n\"InventoryDate\": String,\n\"ArchiveList\": [\n{\"ArchiveId\": String,\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"Size\": Number,\n\"SHA256TreeHash\": String\n},\n...\n]\n}\nIf you requested the comma-separated values (CSV) output format when you initiated the vault\ninventory job, then the vault inventory is returned in CSV format in the body. The CSV format has\nfive columns \"ArchiveId\", \"ArchiveDescription\", \"CreationDate\", \"Size\", and \"SHA256TreeHash\" with\nthe same definitions as the corresponding JSON fields. Note\nIn the returned CSV format, fields may be returned with the whole field enclosed in double-\nquotes. Fields that contain a comma or double-quotes are always returned enclosed in\ndouble-quotes. For example, my archive description,1 is returned as \"my archive\ndescription,1\". Double-quote characters that are within returned double-quote\nenclosed fields are escaped by preceding them with a backslash character. For example, my\narchive description,1\"2 is returned as \"my archive description,1\\\"2\" and my\narchive description,1\\\"2 is returned as \"my archive description,1\\\\\"2\". The\nbackslash character is not escaped. The JSON response body contains the following JSON fields. Get Job Output API Version 2012-06-01 484\n\nAmazon S3 Glacier Developer Guide\nArchiveDescription\nThe description of an archive. Type: String\nArchiveId\nThe ID of an archive.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 15,
        "num_words": 292,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3256341843377976,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Data Format",
              "Header Information"
            ]
          },
          "keywords": [
            "x-amz-sha256-tree-hash",
            "VaultARN",
            "InventoryDate",
            "ArchiveList",
            "ArchiveId",
            "ArchiveDescription",
            "CreationDate",
            "SHA256TreeHash",
            "CSV format",
            "JSON fields"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output API",
            "Response Body",
            "Vault Inventory",
            "Archive Contents"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval and Storage",
          "secondary_categories": [
            "API Response Formats",
            "Data Serialization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response body structure for the Amazon S3 Glacier Get Job Output API, detailing how archive contents or vault inventory are returned in either JSON or CSV format, along with field definitions and formatting rules.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the JSON response body for the Get Job Output API?",
            "How are fields formatted in the CSV output of a vault inventory job?",
            "What does the SHA256TreeHash field represent in the archive inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval and Storage]",
        "tf_idf_keywords": [
          "ArchiveDescription",
          "CSV format",
          "CreationDate",
          "SHA256TreeHash",
          "Get Job Output API",
          "Response Body",
          "VaultARN",
          "Archive Contents",
          "x-amz-sha256-tree-hash",
          "Vault Inventory",
          "JSON fields",
          "ArchiveList",
          "Amazon S3 Glacier",
          "InventoryDate",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_428",
      "text": "Type: String\nArchiveList\nAn array of archive metadata. Each object in the array represents metadata for one archive\ncontained in the vault. Type: Array\nCreationDate\nThe UTC date and time the archive was created. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. InventoryDate\nThe UTC date and time of the last inventory for the vault that was completed after changes\nto the vault. Even though S3 Glacier prepares a vault inventory once a day, the inventory date\nis only updated if there have been archive additions or deletions to the vault since the last\ninventory. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.",
      "start_idx": 734971,
      "end_idx": 735681,
      "metadata": {
        "num_sentences": 7,
        "num_words": 113,
        "breakpoint_idx": 4393,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4321000235421317,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metadata",
              "Data Types",
              "Date Formats"
            ]
          },
          "keywords": [
            "ArchiveList",
            "metadata",
            "vault",
            "CreationDate",
            "InventoryDate",
            "ISO 8601",
            "UTC",
            "S3 Glacier",
            "array",
            "inventory"
          ],
          "entities": [
            "ArchiveList",
            "CreationDate",
            "InventoryDate",
            "ISO 8601",
            "S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage",
          "secondary_categories": [
            "Metadata Management",
            "Date and Time Formats"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes metadata fields for archives in an S3 Glacier vault, including types and formats for ArchiveList, CreationDate, and InventoryDate.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What is the data type of the ArchiveList field?",
            "How is the CreationDate formatted in S3 Glacier metadata?",
            "When is the InventoryDate updated for a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Storage]",
        "tf_idf_keywords": [
          "metadata",
          "S3 Glacier",
          "CreationDate",
          "vault",
          "inventory",
          "ArchiveList",
          "UTC",
          "array",
          "InventoryDate",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_429",
      "text": "SHA256TreeHash\nThe tree hash of the archive. Type: String\nSize\nThe size in bytes of the archive. Get Job Output API Version 2012-06-01 485\n\nAmazon S3 Glacier Developer Guide\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) resource from which the archive retrieval was requested. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example shows the request for a job that retrieves an archive. Example 1: Download output\nThis example retrieves data prepared by S3 Glacier in response to your initiate archive retrieval job\nrequest. Example Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following is an example response of an archive retrieval job. Note that the Content-Type\nheader is application/octet-stream and that x-amz-sha256-tree-hash header is included\nin the response, which means that all the job data is returned. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nGet Job Output API Version 2012-06-01 486\n\nAmazon S3 Glacier Developer Guide\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/octet-stream\nContent-Length: 1048576\n[Archive data.] The following is an example response of an inventory retrieval job. Note that the Content-Type\nheader is application/json.",
      "start_idx": 735682,
      "end_idx": 737539,
      "metadata": {
        "num_sentences": 11,
        "num_words": 201,
        "breakpoint_idx": 4404,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3748971418900923,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "SHA256TreeHash",
            "Amazon S3 Glacier",
            "VaultARN",
            "archive retrieval",
            "Error Responses",
            "Get Job Output API",
            "application/octet-stream",
            "x-amz-sha256-tree-hash",
            "Content-Type",
            "inventory retrieval"
          ],
          "entities": [
            "SHA256TreeHash",
            "VaultARN",
            "Amazon S3 Glacier",
            "x-amz-sha256-tree-hash",
            "application/octet-stream"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Cloud Storage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on the SHA256TreeHash, archive size, VaultARN, error handling in Amazon S3 Glacier, and examples of archive and inventory retrieval job requests and responses.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What is the SHA256TreeHash and its purpose in Amazon S3 Glacier?",
            "How do I initiate and retrieve an archive retrieval job in Amazon S3 Glacier?",
            "What headers and response details are included in an archive retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "SHA256TreeHash",
          "Get Job Output API",
          "Content-Type",
          "VaultARN",
          "x-amz-sha256-tree-hash",
          "archive retrieval",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "application/octet-stream",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_430",
      "text": "Also note that the response does not include the x-amz-sha256-\ntree-hash header. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 906\n{\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"InventoryDate\": \"2011-12-12T14:19:01Z\",\n\"ArchiveList\": [\n{\n\"ArchiveId\": \"DMTmICA2n5Tdqq5BV2z7og-\nA20xnpAPKt3UXwWxdWsn_D6auTUrW6kwy5Qyj9xd1MCE1mBYvMQ63LWaT8yTMzMaCxB_9VBWrW4Jw4zsvg5kehAPDVKcppUD1X7b24JukOr4mMAq-\noA\",\n\"ArchiveDescription\": \"my archive1\",\n\"CreationDate\": \"2012-05-15T17:19:46.700Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"6b9d4cf8697bd3af6aa1b590a0b27b337da5b18988dbcc619a3e608a554a1e62\"\n},\n{\n\"ArchiveId\": \"2lHzwhKhgF2JHyvCS-\nZRuF08IQLuyB4265Hs3AXj9MoAIhz7tbXAvcFeHusgU_hViO1WeCBe0N5lsYYHRyZ7rrmRkNRuYrXUs_sjl2K8ume_7mKO_0i7C-\nuHE1oHqaW9d37pabXrSA\",\n\"ArchiveDescription\": \"my archive2\",\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"7f2fe580edb35154041fa3d4b41dd6d3adaef0c85d2ff6309f1d4b520eeecda3\"\n}\n]\nGet Job Output API Version 2012-06-01 487\n\nAmazon S3 Glacier Developer Guide\n}\nExample 2: Download only partial output\nThis example retrieves only a portion of the archive prepared by S3 Glacier in response to your\ninitiate archive retrieval job request. The request uses the optional Range header to retrieve only\nthe first 1,024 bytes. Example Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nRange: bytes=0-1023\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following successful response shows the 206 Partial Content response. In this case, the\nresponse also includes a Content-Range header that specifies the range of bytes S3 Glacier\nreturns. HTTP/1.1 206 Partial Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range: bytes 0-1023/8388608\nContent-Type: application/octet-stream\nContent-Length: 1024\n[Archive data.] Related Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Initiate Job (POST jobs)\nGet Job Output API Version 2012-06-01 488\n\nAmazon S3 Glacier Developer Guide\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Job (POST jobs)\nThis operation initiates the following types of Amazon S3 Glacier (S3 Glacier) jobs:\n\u2022 archive-retrieval\u2014 Retrieve an archive\n\u2022 inventory-retrieval\u2014 Inventory a vault\nTopics\n\u2022 Initializing an Archive or Vault Inventory Retrieval Job\n\u2022 Requests\n\u2022 Responses\n\u2022 Examples\n\u2022 Related Sections\nInitializing an Archive or Vault Inventory Retrieval Job\nRetrieving an archive or a vault inventory are asynchronous operations that require you to initiate a\njob. Once started, job cannot be cancelled. Retrieval is a two-step process:\n1. Initiate a retrieval job by using the Initiate Job (POST jobs) operation. Important\nA data retrieval policy can cause your initiate retrieval job request to fail with\na PolicyEnforcedException. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.",
      "start_idx": 737540,
      "end_idx": 741042,
      "metadata": {
        "num_sentences": 13,
        "num_words": 361,
        "breakpoint_idx": 4417,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28288948841584033,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "API Request",
              "Error Handling",
              "Job Initialization"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash",
            "Initiate Job",
            "PolicyEnforcedException",
            "Range header",
            "Inventory retrieval",
            "Partial Content",
            "Data retrieval policies"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveList",
            "PolicyEnforcedException",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "Data Retrieval Policies",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Identity and Access Management (IAM)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on Amazon S3 Glacier's job operations, including retrieving archive data, partial outputs using range headers, and initiating retrieval or inventory jobs. It also includes examples of requests and responses, along with related sections and error handling information.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve only a portion of an archive in S3 Glacier?",
            "What is the process for initiating a retrieval or inventory job in S3 Glacier?",
            "What does a successful response for a partial content retrieval look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "SHA256TreeHash",
          "Initiate Job",
          "VaultARN",
          "Partial Content",
          "Identity and Access Management (IAM)",
          "Data retrieval policies",
          "Range header",
          "ArchiveList",
          "PolicyEnforcedException",
          "Inventory retrieval",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_431",
      "text": "2. After the job completes, download the bytes using the Get Job Output (GET output) operation. The retrieval request is ran asynchronously. When you initiate a retrieval job, S3 Glacier creates\na job and returns a job ID in the response. When S3 Glacier completes the job, you can get the\nInitiate Job API Version 2012-06-01 489\n\nAmazon S3 Glacier Developer Guide\njob output (archive or inventory data). For information about getting job output, see the Get Job\nOutput (GET output) operation. The job must complete before you can get its output. To determine when a job is complete, you\nhave the following options:\n\u2022 Use an Amazon SNS notification\u2014 You can specify an Amazon SNS topic to which S3 Glacier\ncan post a notification after the job is completed. You can specify an SNS topic per job request. The notification is sent only after S3 Glacier completes the job. In addition to specifying an SNS\ntopic per job request, you can configure vault notifications for a vault so that job notifications\nare sent for all retrievals.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3506131952459162,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Job Completion",
              "Data Retrieval",
              "Notifications"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Get Job Output",
            "retrieval job",
            "SNS notification",
            "Initiate Job API",
            "vault notifications",
            "archive data",
            "inventory data",
            "asynchronous",
            "job ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output operation",
            "Amazon SNS",
            "Initiate Job API Version 2012-06-01",
            "vault notifications"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Job Retrieval and Output Management",
          "secondary_categories": [
            "Amazon SNS Integration",
            "Vault Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Initiate Job API"
          ]
        },
        "semantic": {
          "summary": "This section explains how to retrieve job output from Amazon S3 Glacier after a job completes, including using Amazon SNS notifications to determine job completion status.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve job output from Amazon S3 Glacier?",
            "What are the options to determine when a retrieval job is complete?",
            "How can I configure Amazon SNS notifications for S3 Glacier jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Job Retrieval and Output Management]",
        "tf_idf_keywords": [
          "asynchronous",
          "S3 Glacier",
          "SNS notification",
          "Get Job Output",
          "vault notifications",
          "Initiate Job API",
          "inventory data",
          "archive data",
          "Initiate Job API Version 2012-06-01",
          "Amazon SNS",
          "job ID",
          "Amazon S3 Glacier",
          "Get Job Output operation",
          "retrieval job"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_432",
      "text": "For more information, see Set Vault Notification Configuration (PUT\nnotification-configuration). \u2022 Get job details\u2014 You can make a Describe Job (GET JobID) request to obtain job status\ninformation while a job is in progress. However, it is more efficient to use an Amazon SNS\nnotification to determine when a job is complete. Note\nThe information you get via notification is same that you get by calling Describe Job (GET\nJobID). If for a specific event, you add both the notification configuration on the vault and also specify an\nSNS topic in your initiate job request, S3 Glacier sends both notifications. For more information,\nsee Set Vault Notification Configuration (PUT notification-configuration). The Vault Inventory\nS3 Glacier updates a vault inventory approximately once a day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata. After S3 Glacier creates the first inventory for the vault, it typically takes half a day and up to a day\nbefore that inventory is available for retrieval. Initiate Job API Version 2012-06-01 490\n\nAmazon S3 Glacier Developer Guide\nYou might not find it useful to retrieve a vault inventory for each archive upload.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 237,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39262549660422585,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Notification Configuration",
              "Job Status",
              "Vault Inventory"
            ]
          },
          "keywords": [
            "Vault Notification Configuration",
            "Describe Job",
            "Amazon SNS",
            "S3 Glacier",
            "Vault Inventory",
            "Initiate Job",
            "API Version 2012-06-01",
            "archive",
            "job request",
            "inventory snapshot"
          ],
          "entities": [
            "Amazon SNS",
            "S3 Glacier",
            "Vault Notification Configuration",
            "Initiate Job API",
            "Vault Inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Vault Notification Configuration",
          "secondary_categories": [
            "Job Management",
            "Vault Inventory"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure notifications for Amazon S3 Glacier, retrieve job details using Describe Job or SNS notifications, and manage vault inventory updates and retrievals.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure notifications for S3 Glacier vaults?",
            "What is the difference between using Describe Job and SNS notifications for job status updates?",
            "How often does S3 Glacier update the vault inventory and how can I retrieve it?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Vault Notification Configuration]",
        "tf_idf_keywords": [
          "Describe Job",
          "S3 Glacier",
          "archive",
          "Initiate Job",
          "Initiate Job API",
          "Vault Inventory",
          "inventory snapshot",
          "API Version 2012-06-01",
          "Amazon SNS",
          "job request",
          "Amazon S3 Glacier",
          "Vault Notification Configuration"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_433",
      "text": "However, suppose\nthat you maintain a database on the client-side associating metadata about the archives you\nupload to S3 Glacier. Then, you might find the vault inventory useful to reconcile information, as\nneeded, in your database with the actual vault inventory. For more information about the data\nfields returned in an inventory job output, see Response Body. Range Inventory Retrieval\nYou can limit the number of inventory items retrieved by filtering on the archive creation date or\nby setting a limit. Filtering by Archive Creation Date\nYou can retrieve inventory items for archives created between StartDate and EndDate by\nspecifying values for these parameters in the Initiate Job request. Archives created on or after the\nStartDate and before the EndDate are returned. If you provide only the StartDate without\nthe EndDate, you retrieve the inventory for all archives created on or after the StartDate. If you\nprovide only the EndDate without the StartDate, you get back the inventory for all archives\ncreated before the EndDate. Limiting Inventory Items per Retrieval\nYou can limit the number of inventory items returned by setting the Limit parameter in the\nInitiate Job request. The inventory job output contains inventory items up to the specified Limit. If there are more inventory items available, the result is paginated.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4432390733198686,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "metadata",
            "archive creation date",
            "Initiate Job request",
            "StartDate",
            "EndDate",
            "Limit parameter",
            "inventory job output",
            "paginated"
          ],
          "entities": [
            "S3 Glacier",
            "vault inventory",
            "Initiate Job request",
            "StartDate",
            "EndDate"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Inventory Management",
          "secondary_categories": [
            "Database Synchronization",
            "Cloud Storage Operations"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage and retrieve inventory data from S3 Glacier, including filtering by archive creation date and limiting the number of items retrieved in an inventory job request.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I filter inventory items in S3 Glacier by archive creation date?",
            "What happens if I set only the StartDate or EndDate in an inventory retrieval request?",
            "How can I limit the number of inventory items returned in an S3 Glacier inventory job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Inventory Management]",
        "tf_idf_keywords": [
          "paginated",
          "vault inventory",
          "S3 Glacier",
          "metadata",
          "archive creation date",
          "EndDate",
          "StartDate",
          "inventory job output",
          "Initiate Job request",
          "Limit parameter"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_434",
      "text": "After a job is complete, you can\nuse the Describe Job (GET JobID) operation to get a marker that you use in a subsequent Initiate\nJob request. The marker indicates the starting point to retrieve the next set of inventory items. You can page through your entire inventory by repeatedly making Initiate Job requests with the\nmarker from the previous Describe Job output. You do so until you get a marker from Describe Job\nthat returns null, indicating that there are no more inventory items available. You can use the Limit parameter together with the date range parameters. Ranged Archive Retrieval\nYou can initiate archive retrieval for the whole archive or a range of the archive. In the case of\nranged archive retrieval, you specify a byte range to return or the whole archive. The range\nspecified must be megabyte (MB) aligned. In other words, the range start value must be divisible\nby 1 MB and the range end value plus 1 must be divisible by 1 MB or equal the end of the archive. If the ranged archive retrieval is not megabyte-aligned, this operation returns a 400 response. Initiate Job API Version 2012-06-01 491\n\nAmazon S3 Glacier Developer Guide\nFurthermore, to ensure that you get checksum values for data you download using Get Job Output\n(Get Job Output (GET output)), the range must be tree-hash aligned.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27776503129438923,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Pagination",
              "Data Retrieval"
            ]
          },
          "keywords": [
            "Describe Job",
            "Initiate Job",
            "marker",
            "Limit parameter",
            "archive retrieval",
            "byte range",
            "megabyte-aligned",
            "checksum",
            "tree-hash aligned",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Job",
            "Initiate Job",
            "Get Job Output",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Operations",
          "secondary_categories": [
            "API Operations",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to use the Describe Job and Initiate Job operations in Amazon S3 Glacier to retrieve inventory items and archive data, including ranged archive retrieval with specific alignment requirements.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I use the Describe Job operation to retrieve inventory items?",
            "What are the alignment requirements for ranged archive retrieval in Amazon S3 Glacier?",
            "How do I ensure checksum values for data downloaded using Get Job Output?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Retrieval Operations]",
        "tf_idf_keywords": [
          "checksum",
          "Describe Job",
          "byte range",
          "Get Job Output",
          "Initiate Job",
          "tree-hash aligned",
          "API Version 2012-06-01",
          "Limit parameter",
          "archive retrieval",
          "megabyte-aligned",
          "marker",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_435",
      "text": "For more information about\ntree-hash aligned ranges, see Receiving Checksums When Downloading Data. Expedited, Standard, and Bulk Tiers\nWhen initiating an archive retrieval job, you can specify one of the following options in the Tier\nfield of the request body:\n\u2022 Expedited \u2013 Expedited allows you to quickly access your data when occasional urgent requests\nfor restoring archives are required. For all but the largest archives (250 MB+), data accessed using\nthe Expedited tier is typically made available within 1\u20135 minutes. \u2022 Standard \u2013 Standard allows you to access any of your archives within several hours. Data\naccessed using the Standard tier typically made available within 3\u20135 hours. This option is the\ndefault one for job requests that don't specify the tier option. \u2022 Bulk \u2013 Bulk is the lowest-cost tier for S3 Glacier, enabling you to retrieve large amounts, even\npetabytes, of data inexpensively in a day. Data accessed using the Bulk tier is typically made\navailable within 5\u201312 hours. For more information about expedited and bulk retrievals, see Retrieving S3 Glacier Archives Using\nAWS Console. Requests\nTo initiate a job, you use the HTTP POST method and scope the request to the vault's jobs\nsubresource. You specify details of the job request in the JSON document of your request.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3273902893066406,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "tree-hash aligned ranges",
            "Expedited",
            "Standard",
            "Bulk",
            "archive retrieval job",
            "S3 Glacier",
            "vault's jobs subresource",
            "JSON document",
            "retrieval tiers",
            "HTTP POST"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Console",
            "Expedited",
            "Standard",
            "Bulk"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Tiers",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP API Requests"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate archive retrieval jobs in S3 Glacier using different tiers (Expedited, Standard, Bulk) and provides details on their performance and costs. It also outlines the process of making job requests using the HTTP POST method and JSON request bodies.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the differences between Expedited, Standard, and Bulk retrieval tiers in S3 Glacier?",
            "How do I initiate an archive retrieval job in S3 Glacier?",
            "What is the expected retrieval time for each tier in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Data Retrieval Tiers]",
        "tf_idf_keywords": [
          "Expedited",
          "Standard",
          "archive retrieval job",
          "S3 Glacier",
          "JSON document",
          "HTTP POST",
          "Bulk",
          "retrieval tiers",
          "AWS Console",
          "tree-hash aligned ranges",
          "vault's jobs subresource"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_436",
      "text": "The job\ntype is specified with the Type field. Optionally, you can specify an SNSTopic field to indicate an\nAmazon SNS topic to which S3 Glacier can post notification after it completes the job. Note\nTo post a notification to Amazon SNS, you must create the topic yourself if it doesn't\nalready exist. S3 Glacier doesn't create the topic for you. The topic must have permissions\nto receive publications from a S3 Glacier vault. S3 Glacier doesn't verify if the vault has\npermission to publish to the topic. If the permissions are not configured appropriately, you\nmight not receive notification even after the job completes. Initiate Job API Version 2012-06-01 492\n\nAmazon S3 Glacier Developer Guide\nSyntax\nThe following is the request syntax for initiating a job. POST /AccountId/vaults/VaultName/jobs HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\n{\n\"jobParameters\": {\n\"ArchiveId\": \"string\",\n\"Description\": \"string\",\n\"Format\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"OutputLocation\": {\n\"S3\": {\n\"AccessControlList\": [\n{\n\"Grantee\": {\n\"DisplayName\": \"string\",\n\"EmailAddress\": \"string\",\n\"ID\": \"string\",\n\"Type\": \"string\",\n\"URI\": \"string\"\n},\n\"Permission\": \"string\"\n}\n],\n\"BucketName\": \"string\",\n\"CannedACL\": \"string\",\n\"Encryption\": {\n\"EncryptionType\": \"string\",\n\"KMSContext\": \"string\",\n\"KMSKeyId\": \"string\"\n},\n\"Prefix\": \"string\",\n\"StorageClass\": \"string\",\nInitiate Job API Version 2012-06-01 493\n\nAmazon S3 Glacier Developer Guide\n\"Tagging\": {\n\"string\" : \"string\"\n},\n\"UserMetadata\": {\n\"string\" : \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SNSTopic\": \"string\",\n\"Tier\": \"string\",\n\"Type\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nInitiate Job API Version 2012-06-01 494\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request.",
      "start_idx": 747483,
      "end_idx": 755115,
      "metadata": {
        "num_sentences": 10,
        "num_words": 336,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40542594061957465,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Syntax",
              "Configuration",
              "Notification Setup"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "SNSTopic",
            "Initiate Job API",
            "AWS account ID",
            "VaultName",
            "Authorization",
            "x-amz-glacier-version",
            "OutputLocation",
            "SelectParameters",
            "Encryption"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "SNSTopic",
            "Initiate Job API",
            "VaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier Job Management",
          "secondary_categories": [
            "AWS SNS Notifications",
            "Data Retrieval and Serialization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate a job in Amazon S3 Glacier using the Initiate Job API, including specifying job parameters, configuring SNS notifications, and providing request syntax details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a job in Amazon S3 Glacier?",
            "What parameters can be specified for an S3 Glacier job?",
            "How can I configure an Amazon SNS topic for job notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Encryption",
          "x-amz-glacier-version",
          "Initiate Job API",
          "OutputLocation",
          "AWS account ID",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Authorization",
          "VaultName",
          "SNSTopic",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_437",
      "text": "If you use an account ID, do not include any hyphens ('-') in the ID. Request Body\nThe request accepts the following data in JSON format in the body of the request. jobParameters\nProvides options for specifying job information. Type: jobParameters object\nRequired: Yes\nResponses\nS3 Glacier creates the job. In the response, it returns the URI of the job. Syntax\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: location\nx-amz-job-id: jobId\nx-amz-job-output-path: jobOutputPath\nResponse Headers\nHeader Description\nLocation\nThe relative URI path of the job. You can use this URI path to find the job\nstatus. For more information, see Describe Job (GET JobID). Type: String\nDefault: None\nInitiate Job API Version 2012-06-01 495\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nx-amz-job-id\nThe ID of the job. This value is also included as part of the Location\nheader.",
      "start_idx": 747483,
      "end_idx": 755115,
      "metadata": {
        "num_sentences": 10,
        "num_words": 139,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3684884813096788,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Headers"
            ]
          },
          "keywords": [
            "account ID",
            "jobParameters",
            "JSON format",
            "URI",
            "HTTP/1.1",
            "Request Body",
            "Response Headers",
            "x-amz-job-id",
            "jobOutputPath",
            "Describe Job"
          ],
          "entities": [
            "S3 Glacier",
            "Initiate Job API",
            "Amazon S3 Glacier Developer Guide",
            "x-amzn-RequestId",
            "x-amz-job-output-path"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate a job request in Amazon S3 Glacier, including the required request body format, response structure, and relevant headers.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What data format is required in the request body for initiating a job in S3 Glacier?",
            "What headers are included in the response of an initiated job?",
            "How can I find the status of a job using the Location header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Request Body",
          "jobParameters",
          "Describe Job",
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "x-amzn-RequestId",
          "Initiate Job API",
          "JSON format",
          "Response Headers",
          "x-amz-job-id",
          "HTTP/1.1",
          "URI",
          "jobOutputPath",
          "x-amz-job-output-path",
          "account ID"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_438",
      "text": "Type: String\nDefault: None\nx-amz-job-\nThe path to the location of where the select results are stored. output-path\nType: String\nDefault: None\nResponse Body\nThis operation does not return a response body. Errors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses. Code Description HTTP Status Type\nCode\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process this exped Unavailab\nited request. This error only le\napplies to expedited retrieval\ns and not to standard or bulk\nretrievals. Initiate Job API Version 2012-06-01 496\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample Request: Initiate an archive retrieval job\nPOST /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Type\": \"archive-retrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"Description\": \"My archive description\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-ArchiveRetrieval-topic-\nExample\",\n\"Tier\" : \"Bulk\"\n}\nThe following is an example of the body of a request that specifies a range of the archive to\nretrieve using the RetrievalByteRange field. {\n\"Type\": \"archive-retrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"Description\": \"My archive description\",\n\"RetrievalByteRange\": \"2097152-4194303\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-ArchiveRetrieval-topic-\nExample\",\n\"Tier\" : \"Bulk\"\n}\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nInitiate Job API Version 2012-06-01 497\n\nAmazon S3 Glacier Developer Guide\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nExample Request: Initiate an inventory retrieval job\nThe following request initiates an inventory retrieval job to get a list of archives from the\nexamplevault vault. The Format set to CSV in the body of the request indicates that the\ninventory is returned in CSV format. POST /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nContent-Type: application/x-www-form-urlencoded\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Type\": \"inventory-retrieval\",\n\"Description\": \"My inventory job\",\n\"Format\": \"CSV\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-InventoryRetrieval-topic-\nExample\"\n}\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nInitiate Job API Version 2012-06-01 498\n\nAmazon S3 Glacier Developer Guide\nExample Requests: Initiate an inventory retrieval job by using date filtering with a set limit, and\na subsequent request to retrieve the next page of inventory items. The following request initiates a vault inventory retrieval job by using date filtering and setting a\nlimit.",
      "start_idx": 747483,
      "end_idx": 755115,
      "metadata": {
        "num_sentences": 11,
        "num_words": 383,
        "chunk_type": "semantic_split",
        "coherence_score": 0.337599667635831,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Examples",
              "Error Descriptions",
              "Request/Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Initiate Job",
            "archive-retrieval",
            "inventory-retrieval",
            "RetrievalByteRange",
            "SNSTopic",
            "HTTP Status",
            "Error Responses",
            "x-amz-glacier-version",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InsufficientCapacityException",
            "AWS4-HMAC-SHA256",
            "CSV",
            "Bulk Retrieval"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API Operations",
          "secondary_categories": [
            "Error Handling",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SNS"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This document provides technical details and examples for initiating archive and inventory retrieval jobs in Amazon S3 Glacier, including request formats, response structures, and error handling.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in Amazon S3 Glacier?",
            "What is the format of the response for an inventory retrieval job?",
            "What error occurs if there is insufficient capacity for an expedited retrieval request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API Operations]",
        "tf_idf_keywords": [
          "inventory-retrieval",
          "RetrievalByteRange",
          "AWS SNS",
          "InsufficientCapacityException",
          "Initiate Job",
          "x-amz-glacier-version",
          "Bulk Retrieval",
          "HTTP Status",
          "CSV",
          "archive-retrieval",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Error Responses",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_439",
      "text": "{\n\"ArchiveId\": null,\n\"Description\": null,\n\"Format\": \"CSV\",\n\"RetrievalByteRange\": null,\n\"SNSTopic\": null,\n\"Type\": \"inventory-retrieval\",\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-12-04T21:25:42Z\",\n\"EndDate\": \"2013-12-05T21:25:42Z\",\n\"Limit\" : \"10000\"\n},\n}\nThe following request is an example of a subsequent request to retrieve the next page of inventory\nitems using a marker obtained from Describe Job (GET JobID). {\n\"ArchiveId\": null,\n\"Description\": null,\n\"Format\": \"CSV\",\n\"RetrievalByteRange\": null,\n\"SNSTopic\": null,\n\"Type\": \"inventory-retrieval\",\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-12-04T21:25:42Z\",\n\"EndDate\": \"2013-12-05T21:25:42Z\",\n\"Limit\": \"10000\",\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n},\n}\nInitiate Job API Version 2012-06-01 499\n\nAmazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-output-path: test/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Jobs (GET jobs)\nDescription\nThis operation lists jobs for a vault, including jobs that are in-progress and jobs that have recently\nfinished. Note\nAmazon S3 Glacier (S3 Glacier) retains recently completed jobs for a period before deleting\nthem; however, it eventually removes completed jobs.",
      "start_idx": 755116,
      "end_idx": 756968,
      "metadata": {
        "num_sentences": 3,
        "num_words": 177,
        "breakpoint_idx": 4506,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.45177435874938965,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "API Response",
              "Metadata Structure"
            ]
          },
          "keywords": [
            "ArchiveId",
            "InventoryRetrievalParameters",
            "StartDate",
            "EndDate",
            "Limit",
            "Marker",
            "Initiate Job API",
            "Amazon S3 Glacier",
            "Describe Job",
            "Job Output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InventoryRetrievalParameters",
            "x-amz-job-id",
            "x-amzn-RequestId",
            "Initiate Job API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Job Management",
          "secondary_categories": [
            "Inventory Retrieval",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate and manage inventory-retrieval jobs in Amazon S3 Glacier, including examples of API requests, responses, and related operations like listing and describing jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory-retrieval job in Amazon S3 Glacier?",
            "What does a subsequent request for retrieving the next page of inventory items look like?",
            "What information is included in the response of an initiated job request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Job Management]",
        "tf_idf_keywords": [
          "Describe Job",
          "x-amzn-RequestId",
          "Limit",
          "Marker",
          "EndDate",
          "StartDate",
          "Initiate Job API",
          "x-amz-job-id",
          "Initiate Job API Version 2012-06-01",
          "InventoryRetrievalParameters",
          "Amazon S3 Glacier",
          "Job Output",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_440",
      "text": "The output of completed jobs can be\nretrieved. Retaining completed jobs for a period of time after they have completed enables\nyou to get a job output in the event you miss the job completion notification, or your first\nattempt to download it fails. For example, suppose that you start an archive retrieval job\nto download an archive. After the job completes, you start to download the archive but\nencounter a network error.",
      "start_idx": 756969,
      "end_idx": 757393,
      "metadata": {
        "num_sentences": 4,
        "num_words": 73,
        "breakpoint_idx": 4510,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.542255719502767,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Explanation",
              "Scenario"
            ]
          },
          "keywords": [
            "completed jobs",
            "job output",
            "archive retrieval",
            "download",
            "network error"
          ],
          "entities": [
            "archive retrieval job",
            "job completion notification"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Job Management",
          "secondary_categories": [
            "Data Retrieval",
            "Error Handling"
          ],
          "mentioned_services": [
            "Archive Retrieval"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The text explains how to retrieve outputs of completed jobs and the benefits of retaining them for a period of time, such as handling missed notifications or failed download attempts.",
          "intents": [
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve the output of a completed job?",
            "What should I do if I miss a job completion notification?",
            "How can I handle a failed attempt to download a job output?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Job Management]",
        "tf_idf_keywords": [
          "completed jobs",
          "archive retrieval job",
          "job output",
          "download",
          "archive retrieval",
          "network error",
          "job completion notification",
          "Archive Retrieval"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_441",
      "text": "In this scenario, you can retry and download the archive while\nthe job exists. List Jobs API Version 2012-06-01 500\n\nAmazon S3 Glacier Developer Guide\nThe List Jobs operation supports pagination. You should always check the response Marker\nfield. If there are no more jobs to list, the Marker field is set to null. If there are more jobs to list,\nthe Marker field is set to a non-null value, which you can use to continue the pagination of the\nlist. To return a list of jobs that begins at a specific job, set the marker request parameter to the\nMarker value for that job that you obtained from a previous List Jobs request. You can set a maximum limit for the number of jobs returned in the response by specifying the\nlimit parameter in the request. The default limit is 50. The number of jobs returned might be\nfewer than the limit, but the number of returned jobs never exceeds the limit. Additionally, you can filter the jobs list returned by specifying the optional statuscode parameter\nor completed parameter, or both. Using the statuscode parameter, you can specify to\nreturn only jobs that match either the InProgress, Succeeded, or Failed status. Using the\ncompleted parameter, you can specify to return only jobs that were completed (true) or jobs that\nwere not completed (false). Requests\nSyntax\nTo return a list of jobs of all types, send a GET request to the URI of the vault's jobs subresource.",
      "start_idx": 757394,
      "end_idx": 760197,
      "metadata": {
        "num_sentences": 13,
        "num_words": 247,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35898697681916064,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Pagination",
              "Filtering"
            ]
          },
          "keywords": [
            "List Jobs",
            "pagination",
            "Marker field",
            "limit parameter",
            "statuscode parameter",
            "completed parameter",
            "Amazon S3 Glacier",
            "job status",
            "GET request",
            "vault's jobs subresource"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs API",
            "Marker",
            "statuscode",
            "completed"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Pagination",
            "Data Filtering"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the List Jobs operation in Amazon S3 Glacier, including pagination, filtering by status or completion, and request parameters like marker and limit.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I paginate through job listings in Amazon S3 Glacier?",
            "What parameters can I use to filter jobs in the List Jobs API?",
            "What is the default and maximum limit for jobs returned in the List Jobs API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "completed parameter",
          "Marker",
          "statuscode",
          "Marker field",
          "limit parameter",
          "completed",
          "List Jobs API",
          "List Jobs",
          "GET request",
          "Amazon S3 Glacier",
          "statuscode parameter",
          "pagination",
          "job status",
          "vault's jobs subresource"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_442",
      "text": "GET /AccountId/vaults/VaultName/jobs HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. List Jobs API Version 2012-06-01 501\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\ncompleted No\nThe state of the jobs to return. You can specify true or\nfalse. Type: Boolean\nConstraints: None\nlimit No\nThe maximum number of jobs to be returned. The default limit\nis 50. The number of jobs returned might be fewer than the\nspecified limit, but the number of returned jobs never exceeds\nthe limit. Type: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 50.\nmarker No\nAn opaque string used for pagination that specifies the job at\nwhich the listing of jobs should begin. You get the marker\nvalue from a previous List Jobs response. You only need to\ninclude the marker if you are continuing the pagination of\nthe results started in a previous List Jobs request. Type: String\nConstraints: None\nstatuscode No\nThe type of job status to return.",
      "start_idx": 757394,
      "end_idx": 760197,
      "metadata": {
        "num_sentences": 13,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22506310389592096,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Request",
              "Parameters",
              "Constraints"
            ]
          },
          "keywords": [
            "GET",
            "AccountId",
            "VaultName",
            "AWS",
            "Glacier",
            "List Jobs",
            "marker",
            "limit",
            "statuscode",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "SignatureValue",
            "Date",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the 'List Jobs' API for Amazon S3 Glacier, including the HTTP request format, parameters, and constraints for retrieving job details from a vault.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the 'List Jobs' API in Amazon S3 Glacier?",
            "What parameters can be used with the 'List Jobs' API and what are their constraints?",
            "How can I paginate results when using the 'List Jobs' API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "SignatureValue",
          "AWS",
          "AccountId",
          "x-amz-glacier-version",
          "Date",
          "AWS account ID",
          "Region",
          "Glacier",
          "limit",
          "Amazon S3 Glacier",
          "marker",
          "List Jobs",
          "VaultName",
          "GET",
          "statuscode"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_443",
      "text": "Type: String\nConstraints: One of the values InProgress , Succeeded ,\nor Failed. List Jobs API Version 2012-06-01 502\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nContent-Type: application/json\nContent-Length: Length\n{\n\"JobList\": [\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\n\"AccessControlList\": [\nList Jobs API Version 2012-06-01 503\n\nAmazon S3 Glacier Developer Guide\n{\n\"Grantee\": {\n\"DisplayName\": \"string\",\n\"EmailAddress\": \"string\",\n\"ID\": \"string\",\n\"Type\": \"string\",\n\"URI\": \"string\"\n},\n\"Permission\": \"string\"\n}\n],\n\"BucketName\": \"string\",\n\"CannedACL\": \"string\",\n\"Encryption\": {\n\"EncryptionType\": \"string\",\n\"KMSContext\": \"string\",\n\"KMSKeyId\": \"string\"\n},\n\"Prefix\": \"string\",\n\"StorageClass\": \"string\",\n\"Tagging\": {\n\"string\": \"string\"\n},\n\"UserMetadata\": {\n\"string\": \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\n\"csv\": {\nList Jobs API Version 2012-06-01 504\n\nAmazon S3 Glacier Developer Guide\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\n],\n\"Marker\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 760198,
      "end_idx": 762612,
      "metadata": {
        "num_sentences": 6,
        "num_words": 271,
        "breakpoint_idx": 4542,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31512657801310223,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Syntax",
              "Headers",
              "Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JobList",
            "Response Headers",
            "InventoryRetrievalParameters",
            "OutputLocation",
            "Encryption",
            "SelectParameters",
            "StatusCode",
            "VaultARN",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "JobList",
            "OutputLocation",
            "InventoryRetrievalParameters",
            "SelectParameters"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier",
          "secondary_categories": [
            "API Documentation",
            "HTTP Response Syntax"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS KMS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the syntax, headers, and response structure for the 'List Jobs' API in Amazon S3 Glacier, including details about job attributes, output locations, and serialization parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the possible values for the job status in the 'List Jobs' API?",
            "What fields are included in the job response structure for Amazon S3 Glacier?",
            "How is output serialization configured in the 'List Jobs' API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier]",
        "tf_idf_keywords": [
          "StatusCode",
          "Encryption",
          "OutputLocation",
          "VaultARN",
          "Response Headers",
          "API Version 2012-06-01",
          "InventoryRetrievalParameters",
          "Amazon S3 Glacier",
          "AWS KMS",
          "JobList",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_444",
      "text": "Response Body\nThe response body contains the following JSON fields. JobList\nA list of job objects. Each job object contains metadata describing the job. Type: Array of GlacierJobDescription objects\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker value in a new List Jobs request to obtain more jobs in the list. If there are no more\njobs to list, this value is null. Type: String\nList Jobs API Version 2012-06-01 505\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following examples demonstrate how to return information about vault jobs.",
      "start_idx": 762613,
      "end_idx": 763307,
      "metadata": {
        "num_sentences": 8,
        "num_words": 111,
        "breakpoint_idx": 4550,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3231997489929199,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Body",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "JSON fields",
            "JobList",
            "GlacierJobDescription",
            "Marker",
            "pagination",
            "List Jobs API",
            "Amazon S3 Glacier",
            "exceptions",
            "error messages",
            "vault jobs"
          ],
          "entities": [
            "JobList",
            "Marker",
            "GlacierJobDescription",
            "List Jobs API Version 2012-06-01",
            "Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Cloud Storage",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the structure and fields of the response body for the List Jobs API in Amazon S3 Glacier, including job metadata and pagination details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What fields are included in the response body of the List Jobs API?",
            "How can I use the marker value for pagination in the List Jobs API?",
            "Where can I find information about Amazon S3 Glacier error responses?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "List Jobs API Version 2012-06-01",
          "vault jobs",
          "exceptions",
          "Marker",
          "error messages",
          "List Jobs API",
          "JSON fields",
          "Amazon S3 Glacier",
          "pagination",
          "GlacierJobDescription",
          "JobList"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_445",
      "text": "The first example\nreturns a list of two jobs, and the second example returns a subset of jobs. Example: Return All Jobs\nExample Request\nThe following GET request returns the jobs for a vault. GET /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response includes an archive retrieval job and an inventory retrieval job that contains\na marker used to continue pagination of the vault inventory retrieval. The response also shows the\nMarker field set to null, which indicates there are no more jobs to list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1444\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"BDfaUQul0dVzYwAMr8YSa_6_8abbhZq-\ni1oT69g8ByClfJyBgAGBkWl2QbF5os851P7Y7KdZDOHWJIn4rh1ZHaOYD3MgFhK_g0oDPesW34uHQoVGwoIqubf6BgUEfQm_wrU4Jlm3cA\",\n\"ArchiveSizeInBytes\": 1048576,\nList Jobs API Version 2012-06-01 506\n\nAmazon S3 Glacier Developer Guide\n\"ArchiveSHA256TreeHash\":\n\"25499381569ab2f85e1fd0eb93c5406a178ab77c5933056eb5d6e7d4adda609b\",\n\"Completed\": true,\n\"CompletionDate\": \"2012-05-01T00:00:09.304Z\",\n\"CreationDate\": \"2012-05-01T00:00:06.663Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": null,\n\"JobId\": \"hDe9t9DTHXqFw8sBGpLQQOmIM0-\nJrGtu1O_YFKLnzQ64548qJc667BRWTwBLZC76Ygy1jHYruqXkdcAhRsh0hYv4eVRU\",\n\"RetrievalByteRange\": \"0-1048575\",\n\"SHA256TreeHash\":\n\"25499381569ab2f85e1fd0eb93c5406a178ab77c5933056eb5d6e7d4adda609b\",\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2013-05-11T00:25:18.831Z\",\n\"CreationDate\": \"2013-05-11T00:25:14.981Z\",\n\"InventorySizeInBytes\": 1988,\n\"JobDescription\": null,\n\"JobId\":\n\"2cvVOnBL36btzyP3pobwIceiaJebM1bx9vZOOUtmNAr0KaVZ4WkWgVjiPldJ73VU7imlm0pnZriBVBebnqaAcirZq_C5\",\n\"RetrievalByteRange\": null,\n\"SHA256TreeHash\": null,\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-11-12T13:43:12Z\",\n\"EndDate\": \"2013-11-20T08:12:45Z\",\n\"Limit\": \"120000\",\n\"Format\": \"JSON\",\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n}\nList Jobs API Version 2012-06-01 507\n\nAmazon S3 Glacier Developer Guide\n],\n\"Marker\": null\n}\nExample: Return a Partial List of Jobs\nExample Request\nThe following GET request returns the job specified by the marker parameter. Setting the limit\nparameter as 2 specifies that up to two jobs are returned. GET /-/vaults/examplevault/jobs?marker=HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID&limit=2\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response shows two jobs returned and the Marker field set to a non-null value that\ncan be used to continue pagination of the job list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1744\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"58-3KpZfcMPUznvMZNPaKyJx9wODCsWTnqcjtx2CjKZ6b-\nXgxEuA8yvZOYTPQfd7gWR4GRm2XR08gcnWbLV4VPV_kDWtZJKi0TFhKKVPzwrZnA4-\nFXuIBfViYUIVveeiBE51FO4bvg\",\n\"ArchiveSizeInBytes\": 8388608,\n\"ArchiveSHA256TreeHash\":\n\"106086b256ddf0fedf3d9e72f461d5983a2566247ebe7e1949246bc61359b4f4\",\n\"Completed\": true,\nList Jobs API Version 2012-06-01 508\n\nAmazon S3 Glacier Developer Guide\n\"CompletionDate\": \"2012-05-01T00:25:20.043Z\",\n\"CreationDate\": \"2012-05-01T00:25:16.344Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"aaabbbccc\",\n\"JobId\": \"s4MvaNHIh6mOa1f8iY4ioG2921SDPihXxh3Kv0FBX-\nJbNPctpRvE4c2_BifuhdGLqEhGBNGeB6Ub-JMunR9JoVa8y1hQ\",\n\"RetrievalByteRange\": \"0-8388607\",\n\"SHA256TreeHash\":\n\"106086b256ddf0fedf3d9e72f461d5983a2566247ebe7e1949246bc61359b4f4\",\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"2NVGpf83U6qB9M2u-\nIhh61yoFLRDEoh7YLZWKBn80A2i1xG8uieBwGjAr4RkzOHA0E07ZjtI267R03Z-6Hxd8pyGQkBdciCSH1-\nLw63Kx9qKpZbPCdU0uTW_WAdwF6lR6w8iSyKdvw\",\n\"ArchiveSizeInBytes\": 1048576,\n\"ArchiveSHA256TreeHash\":\n\"3d2ae052b2978727e0c51c0a5e32961c6a56650d1f2e4ceccab6472a5ed4a0\",\n\"Completed\": true,\n\"CompletionDate\": \"2012-05-01T16:59:48.444Z\",\n\"CreationDate\": \"2012-05-01T16:59:42.977Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"aaabbbccc\",\n\"JobId\":\n\"CQ_tf6fOR4jrJCL61Mfk6VM03oY8lmnWK93KK4gLig1UPAbZiN3UV4G_5nq4AfmJHQ_dOMLOX5k8ItFv0wCPN0oaz5dG\",\n\"RetrievalByteRange\": \"0-1048575\",\n\"SHA256TreeHash\":\n\"3d2ae052b2978727e0c51c0a5e32961c6a56650d1f2e4ceccab6472a5ed4a0\",\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Standard\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n],\n\"Marker\":\n\"CQ_tf6fOR4jrJCL61Mfk6VM03oY8lmnWK93KK4gLig1UPAbZiN3UV4G_5nq4AfmJHQ_dOMLOX5k8ItFv0wCPN0oaz5dG\"\n}\nList Jobs API Version 2012-06-01 509\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nData Types Used in Job Operations\nThe following are data types used with the job operations in S3 Glacier.",
      "start_idx": 763308,
      "end_idx": 769513,
      "metadata": {
        "num_sentences": 8,
        "num_words": 460,
        "breakpoint_idx": 4558,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.44714750562395367,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Request",
              "API Response",
              "Pagination",
              "Job Retrieval"
            ]
          },
          "keywords": [
            "JobList",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "VaultARN",
            "Marker",
            "StatusCode",
            "CompletionDate",
            "RetrievalByteRange",
            "SHA256TreeHash",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "JobId",
            "VaultARN",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "Data Retrieval",
            "Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Amazon S3 Glacier List Jobs API to retrieve job details, including archive retrieval and inventory retrieval jobs, with examples of requests and responses for different scenarios.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a list of jobs from an Amazon S3 Glacier vault?",
            "What does the response for an archive retrieval job look like?",
            "How can I paginate through a list of jobs in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [API Operations]",
        "tf_idf_keywords": [
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "StatusCode",
          "RetrievalByteRange",
          "SHA256TreeHash",
          "x-amzn-RequestId",
          "VaultARN",
          "x-amz-glacier-version",
          "Marker",
          "JobId",
          "CompletionDate",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "JobList"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_446",
      "text": "Topics\n\u2022 CSVInput\n\u2022 CSVOutput\n\u2022 Encryption\n\u2022 GlacierJobDescription\n\u2022 Grant\n\u2022 Grantee\n\u2022 InputSerialization\n\u2022 InventoryRetrievalJobInput\n\u2022 jobParameters\n\u2022 OutputLocation\n\u2022 OutputSerialization\n\u2022 S3Location\n\u2022 SelectParameters\nCSVInput\nContains information about the comma-separated values (CSV) file. Contents\nComments\nA single character used to indicate that a row should be ignored when the character is present\nat the start of that row. Data Types Used in Job Operations API Version 2012-06-01 510\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nFieldDelimiter\nA single character used to separate individual fields from each other within a record. The\ncharacter must be a \\n, \\r, or an ASCII character in the range 32\u2013126.",
      "start_idx": 769514,
      "end_idx": 770248,
      "metadata": {
        "num_sentences": 4,
        "num_words": 110,
        "breakpoint_idx": 4562,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.29396724700927734,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Definitions",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "CSVInput",
            "CSVOutput",
            "Encryption",
            "FieldDelimiter",
            "Job Operations",
            "Amazon S3 Glacier",
            "Comments",
            "InventoryRetrievalJobInput",
            "OutputSerialization",
            "SelectParameters"
          ],
          "entities": [
            "CSVInput",
            "FieldDelimiter",
            "Amazon S3 Glacier",
            "InventoryRetrievalJobInput",
            "OutputLocation"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Serialization",
          "secondary_categories": [
            "Data Processing",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines various technical topics related to Amazon S3 Glacier, including CSV file handling, encryption, job parameters, and serialization. It provides details on CSVInput, such as field delimiters and comment handling in records.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the Comments field in CSVInput?",
            "What characters can be used as a FieldDelimiter in CSVInput?",
            "Is the Comments field in CSVInput mandatory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Serialization]",
        "tf_idf_keywords": [
          "OutputSerialization",
          "Amazon S3",
          "Encryption",
          "OutputLocation",
          "Comments",
          "CSVInput",
          "InventoryRetrievalJobInput",
          "FieldDelimiter",
          "CSVOutput",
          "Amazon S3 Glacier",
          "Job Operations",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_447",
      "text": "The default is a comma\n(,). Type: String\nDefault: ,\nRequired: no\nFileHeaderInfo\nA value that describes what to do with the first line of the input. Type: String\nValid Values: Use | Ignore | None\nRequired: no\nQuoteCharacter\nA single character used as an escape character where the field delimiter is part of the value. Type: String\nRequired: no\nQuoteEscapeCharacter\nA single character used for escaping the quotation-mark character inside an already escaped\nvalue. Type: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other. CSVInput API Version 2012-06-01 511\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nCSVOutput\nContains information about the comma-separated values (CSV) format that the job results are\nstored in. Contents\nFieldDelimiter\nA single character used to separate individual fields from each other within a record.",
      "start_idx": 770249,
      "end_idx": 771184,
      "metadata": {
        "num_sentences": 7,
        "num_words": 144,
        "breakpoint_idx": 4569,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3587750026157924,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "CSV Format",
              "API Documentation"
            ]
          },
          "keywords": [
            "FileHeaderInfo",
            "QuoteCharacter",
            "QuoteEscapeCharacter",
            "RecordDelimiter",
            "FieldDelimiter",
            "CSVInput",
            "CSVOutput",
            "Amazon S3",
            "Glacier",
            "API Version 2012-06-01"
          ],
          "entities": [
            "FileHeaderInfo",
            "CSVInput",
            "CSVOutput",
            "Amazon S3 Glacier",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Processing Configuration",
          "secondary_categories": [
            "CSV Format Handling",
            "Input/Output Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines configuration options for handling CSV input and output in Amazon S3 Glacier, including field delimiters, quote characters, and record delimiters.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What is the default field delimiter for CSV input?",
            "How can I specify the behavior of the first line in CSV input?",
            "What characters can be used to escape quotation marks within a CSV value?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Processing Configuration]",
        "tf_idf_keywords": [
          "Amazon S3",
          "QuoteCharacter",
          "CSVInput",
          "RecordDelimiter",
          "FieldDelimiter",
          "CSVOutput",
          "API Version 2012-06-01",
          "Glacier",
          "FileHeaderInfo",
          "Amazon S3 Glacier",
          "QuoteEscapeCharacter"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_448",
      "text": "Type: String\nRequired: no\nQuoteCharacter\nA single character used as an escape character where the field delimiter is part of the value. Type: String\nRequired: no\nQuoteEscapeCharacter\nA single character used for escaping the quotation-mark character inside an already escaped\nvalue. Type: String\nRequired: no\nQuoteFields\nA value that indicates whether all output fields should be contained within quotation marks. CSVOutput API Version 2012-06-01 512\n\nAmazon S3 Glacier Developer Guide\nValid Values: ALWAYS | ASNEEDED\nType: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other. Type: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nEncryption\nContains information about the encryption used to store the job results in Amazon S3. Contents\nEncryption\nThe server-side encryption algorithm used when storing job results in Amazon S3. The default is\nno encryption. Type: String\nValid Values: aws:kms | AES256\nRequired: no\nKMSContext\nOptional. If the encryption type is aws:kms, you can use this value to specify the encryption\ncontext for the job results. Type: String\nEncryption API Version 2012-06-01 513\n\nAmazon S3 Glacier Developer Guide\nRequired: no\nKMSKeyId\nThe AWS Key Management Service (AWS KMS) key ID to use for object encryption.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 196,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3640677558051215,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Configuration Parameters"
            ]
          },
          "keywords": [
            "QuoteCharacter",
            "QuoteEscapeCharacter",
            "QuoteFields",
            "RecordDelimiter",
            "Encryption",
            "KMSContext",
            "KMSKeyId",
            "AWS KMS",
            "AES256",
            "CSVOutput"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Encryption API",
            "AWS Key Management Service",
            "CSVOutput API",
            "KMSKeyId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Processing",
          "secondary_categories": [
            "Encryption",
            "File Format Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Key Management Service (AWS KMS)",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on configuring CSV output and encryption settings for Amazon S3 Glacier, including fields like QuoteCharacter, RecordDelimiter, and encryption options such as KMSKeyId and KMSContext.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the QuoteFields attribute in CSV output?",
            "How can I configure encryption for job results stored in Amazon S3 Glacier?",
            "What is the purpose of the KMSKeyId parameter in encryption settings?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Processing]",
        "tf_idf_keywords": [
          "Amazon S3",
          "KMSKeyId",
          "Encryption",
          "QuoteCharacter",
          "KMSContext",
          "AES256",
          "CSVOutput API",
          "RecordDelimiter",
          "QuoteFields",
          "CSVOutput",
          "Amazon S3 Glacier",
          "AWS Key Management Service (AWS KMS)",
          "QuoteEscapeCharacter",
          "Encryption API",
          "AWS KMS"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_449",
      "text": "Type: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nGlacierJobDescription\nContains the description of an Amazon S3 Glacier (S3 Glacier) job. Contents\nAction\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select. Type: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null. Type: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval. For inventory retrieval jobs,\nthis field is null. Type: String\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null. GlacierJobDescription API Version 2012-06-01 514\n\nAmazon S3 Glacier Developer Guide\nType: Number\nCompleted\ntrue if the job is completed; false otherwise.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 126,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3381383260091146,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GlacierJobDescription",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Select",
            "ArchiveId",
            "SHA256 tree hash",
            "ArchiveSizeInBytes",
            "API Version 2012-06-01",
            "Completed"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierJobDescription",
            "ArchiveId",
            "ArchiveSHA256TreeHash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Job Management",
          "secondary_categories": [
            "Data Retrieval",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the GlacierJobDescription object, which describes Amazon S3 Glacier jobs, including fields such as Action, ArchiveId, ArchiveSHA256TreeHash, ArchiveSizeInBytes, and Completed.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the possible job types for an Amazon S3 Glacier job?",
            "What does the ArchiveSHA256TreeHash field represent?",
            "How can I determine if a Glacier job is completed?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "ArchiveSHA256TreeHash",
          "ArchiveSizeInBytes",
          "Select",
          "SHA256 tree hash",
          "API Version 2012-06-01",
          "Completed",
          "Amazon S3 Glacier",
          "GlacierJobDescription",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_450",
      "text": "Type: Boolean\nCompletionDate\nThe date when the job completed. The Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. CreationDate\nThe Universal Coordinated Time (UTC) date the job started. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. InventoryRetrievalParameters\nInput parameters used for a range inventory retrieval. Type: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null. Type: Number\nJobDescription\nThe job description that you provided when you initiated the job.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 119,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35125982496473523,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Details",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Boolean",
            "CompletionDate",
            "CreationDate",
            "UTC",
            "ISO 8601",
            "InventoryRetrievalParameters",
            "InventoryRetrievalJobInput",
            "InventorySizeInBytes",
            "JobDescription",
            "ArchiveRetrieval"
          ],
          "entities": [
            "CompletionDate",
            "CreationDate",
            "InventoryRetrievalParameters",
            "InventorySizeInBytes",
            "JobDescription"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Job Metadata",
          "secondary_categories": [
            "Date and Time Formats",
            "Input Parameters"
          ],
          "mentioned_services": [
            "InventoryRetrieval",
            "ArchiveRetrieval",
            "Select"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines various attributes of job-related metadata, including completion and creation dates, inventory retrieval parameters, inventory size, and job descriptions, along with their types and formats.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What format is used for CompletionDate and CreationDate?",
            "What does InventorySizeInBytes represent for different job types?",
            "What input parameters are required for an inventory retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Job Metadata]",
        "tf_idf_keywords": [
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "CreationDate",
          "Boolean",
          "Select",
          "JobDescription",
          "InventorySizeInBytes",
          "InventoryRetrievalJobInput",
          "CompletionDate",
          "InventoryRetrievalParameters",
          "UTC",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_451",
      "text": "Type: String\nJobId\nThe ID that identifies the job in S3 Glacier. GlacierJobDescription API Version 2012-06-01 515\n\nAmazon S3 Glacier Developer Guide\nType: String\nJobOutputPath\nContains the job output location. Type: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored. Type: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If no range was specified in the archive retrieval, then the\nwhole archive is retrieved and StartByteValue equals 0 and EndByteValue equals the size of the\narchive minus 1. For inventory retrieval jobs, this field is null. Type: String\nSelectParameters\nAn object that contains information about the parameters used for a select. Type: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value. For more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36199315388997394,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "JobId",
            "S3 Glacier",
            "JobOutputPath",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SHA256TreeHash",
            "archive retrieval",
            "inventory retrieval",
            "tree-hash alignment"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierJobDescription",
            "OutputLocation object",
            "SelectParameters object",
            "SHA256 tree hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval and Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on various properties related to S3 Glacier jobs, including job identification, output locations, retrieval byte ranges, select parameters, and checksum validation using SHA256 tree hash.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the JobId in S3 Glacier and its type?",
            "How is the retrieval byte range specified for archive retrieval jobs?",
            "What information does the SHA256TreeHash field provide for archive range retrievals?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval and Storage]",
        "tf_idf_keywords": [
          "RetrievalByteRange",
          "S3 Glacier",
          "SHA256TreeHash",
          "tree-hash alignment",
          "OutputLocation",
          "JobId",
          "JobOutputPath",
          "OutputLocation object",
          "SelectParameters object",
          "SHA256 tree hash",
          "archive retrieval",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "GlacierJobDescription",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_452",
      "text": "For the specific case in which the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value. This field is null in the following situations:\n\u2022 Archive retrieval jobs that specify a range that is not tree-hash aligned. \u2022 Archival jobs that specify a range that is equal to the whole archive and the job status is\nInProgress. GlacierJobDescription API Version 2012-06-01 516\n\nAmazon S3 Glacier Developer Guide\n\u2022 Inventory jobs. \u2022 Select jobs. Type: String\nSNSTopic\nThe Amazon Resource Name (ARN) that represents an Amazon SNS topic where notification of\njob completion or failure is sent, if notification was configured in the job initiation (Initiate Job\n(POST jobs)). Type: String\nStatusCode\nThe code indicating the status of the job. Valid Values: InProgress | Succeeded | Failed\nType: String\nStatusMessage\nThe job status message. Type: String\nTier\nThe data access tier to use for the select or archive retrieval. Valid Values: Expedited | Standard | Bulk\nType: String\nVaultARN\nThe ARN of the vault of which the job is a subresource. Type: String\nMore Info\n\u2022 Initiate Job (POST jobs)\nGlacierJobDescription API Version 2012-06-01 517\n\nAmazon S3 Glacier Developer Guide\nGrant\nContains information about a grant. Contents\nGrantee\nThe grantee.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 12,
        "num_words": 203,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3222314372207179,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Description",
              "Field Definitions",
              "Valid Values"
            ]
          },
          "keywords": [
            "ArchiveSHA256TreeHash",
            "SNSTopic",
            "StatusCode",
            "StatusMessage",
            "Tier",
            "VaultARN",
            "Initiate Job",
            "Amazon SNS",
            "Amazon S3 Glacier",
            "Grantee"
          ],
          "entities": [
            "ArchiveSHA256TreeHash",
            "SNSTopic",
            "Amazon SNS",
            "VaultARN",
            "GlacierJobDescription API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Job Management",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "GlacierJobDescription API",
            "Amazon S3 Glacier Developer Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation describes various fields related to Amazon S3 Glacier job descriptions, including details about archive retrieval, notification configuration, job status, data access tiers, and related ARNs. It also mentions grant information and references for job initiation.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid status codes for an Amazon S3 Glacier job?",
            "How is the SNSTopic ARN used in job notifications?",
            "What are the valid data access tiers for archive retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "StatusCode",
          "StatusMessage",
          "Initiate Job",
          "VaultARN",
          "Grantee",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Tier",
          "GlacierJobDescription API",
          "SNSTopic",
          "ArchiveSHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_453",
      "text": "Type: Grantee object\nRequired: no\nPermission\nThe permission given to the grantee. Type: String\nValid Values: FULL_CONTROL | WRITE | WRITE_ACP | READ | READ_ACP\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nGrantee\nContains information about a grantee. Contents\nDisplayName\nThe screen name of the grantee. Type: String\nRequired: no\nGrant API Version 2012-06-01 518\n\nAmazon S3 Glacier Developer Guide\nEmailAddress\nThe email address of the grantee. Type: String\nRequired: no\nID\nThe canonical user ID of the grantee. Type: String\nRequired: no\nType\nThe type of the grantee. Type: String\nValid Values: AmazonCustomerByEmail | CanonicalUser | Group\nRequired: no\nURI\nThe URI of the grantee group. Type: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nInputSerialization\nDescribes how the archive is serialized. InputSerialization API Version 2012-06-01 519\n\nAmazon S3 Glacier Developer Guide\nContents\nCSV\nAn object that describes the serialization of a CSV-encoded object. Type: CSVInput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nInventoryRetrievalJobInput\nProvides options for specifying a range inventory retrieval job. Contents\nEndDate\nThe end of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated before this date.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 194,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3370160536332564,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Grantee",
            "Permission",
            "FULL_CONTROL",
            "WRITE_ACP",
            "InputSerialization",
            "CSVInput",
            "InventoryRetrievalJobInput",
            "Amazon S3 Glacier",
            "URI",
            "CanonicalUser"
          ],
          "entities": [
            "Grantee object",
            "CSVInput object",
            "InventoryRetrievalJobInput",
            "Amazon S3 Glacier",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier API",
          "secondary_categories": [
            "Data Serialization",
            "Access Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the Grantee object, its attributes, valid values, and related API operations in Amazon S3 Glacier. It also includes information on InputSerialization and InventoryRetrievalJobInput for archive handling and inventory retrieval jobs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the 'Permission' attribute of a Grantee object?",
            "How is the archive serialized using InputSerialization?",
            "What options are available for specifying a range in an inventory retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier API]",
        "tf_idf_keywords": [
          "WRITE_ACP",
          "CSVInput object",
          "CanonicalUser",
          "FULL_CONTROL",
          "Permission",
          "CSVInput",
          "InventoryRetrievalJobInput",
          "Grantee",
          "Grantee object",
          "URI",
          "API Version 2012-06-01",
          "InputSerialization",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_454",
      "text": "Valid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z. Type: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z. Required: no\nFormat\nThe output format for the vault inventory list, which is set by the Initiate Job (POST jobs)\nrequest when initiating a job to retrieve a vault inventory. Valid Values: CSV | JSON\nRequired: no\nInventoryRetrievalJobInput API Version 2012-06-01 520\n\nAmazon S3 Glacier Developer Guide\nType: String\nLimit\nThe maximum number of inventory items that can be returned for each vault inventory retrieval\nrequest. Valid Values: An integer value greater than or equal to 1. Type: String\nRequired: no\nMarker\nAn opaque string that represents where to continue pagination of the vault inventory retrieval\nresults. You use this marker in a new Initiate Job request to obtain additional inventory\nitems. If there are no more inventory items, this value is null. Type: String\nRequired: no\nStartDate\nThe start of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated on or after this date. Valid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3334779912775213,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Definitions"
            ]
          },
          "keywords": [
            "ISO 8601",
            "vault inventory",
            "Initiate Job",
            "CSV",
            "JSON",
            "pagination",
            "UTC time",
            "Amazon S3 Glacier",
            "inventory retrieval",
            "opaque string"
          ],
          "entities": [
            "InventoryRetrievalJobInput",
            "Amazon S3 Glacier",
            "ISO 8601 date format",
            "StartDate",
            "Marker"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Date and Time Formatting",
            "Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the valid values, types, and requirements for various parameters related to Amazon S3 Glacier vault inventory retrieval, including format, limits, pagination markers, and date ranges.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid formats for the vault inventory list output?",
            "How can I paginate the results of a vault inventory retrieval?",
            "What is the valid date format for specifying a start date in vault inventory retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval]",
        "tf_idf_keywords": [
          "UTC time",
          "vault inventory",
          "ISO 8601 date format",
          "Initiate Job",
          "Marker",
          "CSV",
          "StartDate",
          "InventoryRetrievalJobInput",
          "opaque string",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "JSON",
          "pagination",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_455",
      "text": "Type: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z. Required: no\nMore Info\n\u2022 Initiate Job (POST jobs)\njobParameters\nProvides options for defining a job. jobParameters API Version 2012-06-01 521\n\nAmazon S3 Glacier Developer Guide\nContents\nArchiveId\nThe ID of the archive that you want. This field is required if the Type field is set to select or\narchive-retrieval. An error occurs if you specify this field for an inventory retrieval job\nrequest. Valid Values: Must be a valid archive ID that you obtained from a previous request to Amazon S3\nGlacier (S3 Glacier). Type: String\nRequired: Yes when Type is set to select or archive-retrieval. Description\nThe optional description for the job. Valid Values: The description must be less than or equal to 1,024 bytes. The allowable\ncharacters are 7-bit ASCII without control codes\u2014specifically, ASCII values 32\u2013126 decimal or\n0x20\u20130x7E hexadecimal.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 150,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25949616865678266,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Description",
              "Validation Rules"
            ]
          },
          "keywords": [
            "ISO 8601",
            "jobParameters",
            "Amazon S3 Glacier",
            "ArchiveId",
            "inventory retrieval",
            "archive-retrieval",
            "API Version 2012-06-01",
            "description",
            "valid archive ID",
            "ASCII"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ISO 8601",
            "jobParameters",
            "ArchiveId",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "Data Formats",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on job parameters for Amazon S3 Glacier, including field requirements, valid values, and formatting for job-related fields like ArchiveId and descriptions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the required format for the Type field in Amazon S3 Glacier job parameters?",
            "When is the ArchiveId field required for a job request?",
            "What are the valid characters for a job description in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "jobParameters",
          "ASCII",
          "description",
          "ISO 8601",
          "archive-retrieval",
          "API Version 2012-06-01",
          "valid archive ID",
          "Amazon S3 Glacier",
          "inventory retrieval",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_456",
      "text": "Type: String\nRequired: no\nFormat\n(Optional) The output format, when initiating a job to retrieve a vault inventory. If you are\ninitiating an inventory job and don't specify a Format field, JSON is the default format. Valid Values: CSV | JSON\nType: String\nRequired: no\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval. Type: InventoryRetrievalJobInput object\njobParameters API Version 2012-06-01 522\n\nAmazon S3 Glacier Developer Guide\nRequired: no\nOutputLocation\nAn object that contains information about the location where the select job results are stored. Type: OutputLocation object\nRequired: Yes, for select jobs. RetrievalByteRange\nThe byte range to retrieve for an archive-retrieval, in the form\n\"StartByteValue-EndByteValue\". If this field isn't specified, the whole archive is retrieved. If this field is specified, the byte range must be megabyte (1024*1024) aligned. Megabyte-\naligned means that StartByteValue must be divisible by 1 MB, and EndByteValue plus 1 must be\ndivisible by 1 MB or be the end of the archive specified as the archive byte size value minus 1. If\nRetrievalByteRange is not megabyte-aligned, this operation returns a 400 response. An error occurs if you specify this field for an inventory-retrieval or select job request.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3370841979980469,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Field Description",
              "Parameter Details",
              "Constraints"
            ]
          },
          "keywords": [
            "Format",
            "InventoryRetrievalParameters",
            "OutputLocation",
            "RetrievalByteRange",
            "JSON",
            "CSV",
            "InventoryRetrievalJobInput",
            "OutputLocation object",
            "archive-retrieval",
            "megabyte-aligned"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InventoryRetrievalJobInput",
            "OutputLocation object",
            "API Version 2012-06-01",
            "RetrievalByteRange"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval",
          "secondary_categories": [
            "Storage Format",
            "API Parameters"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the parameters and requirements for initiating various retrieval jobs in Amazon S3 Glacier, including inventory and archive retrievals, with details on format, byte range, and output location specifications.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the default format for inventory retrieval jobs in Amazon S3 Glacier?",
            "What are the requirements for specifying a byte range in archive retrieval jobs?",
            "What type of object is used to define the output location for select job results?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval]",
        "tf_idf_keywords": [
          "Format",
          "RetrievalByteRange",
          "OutputLocation",
          "CSV",
          "InventoryRetrievalJobInput",
          "archive-retrieval",
          "API Version 2012-06-01",
          "InventoryRetrievalParameters",
          "megabyte-aligned",
          "Amazon S3 Glacier",
          "JSON",
          "OutputLocation object"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_457",
      "text": "Type: String\nRequired: no\nSelectParameters\nAn object that contains information about the parameters used for a select. Type: SelectParameters object\nRequired: no\nSNSTopic\nThe Amazon Resource Name (ARN) of the Amazon SNS topic where S3 Glacier sends a\nnotification when the job is completed and output is ready for you to download. The specified\ntopic publishes the notification to its subscribers. The SNS topic must exist. If it doesn't, S3 Glacier doesn't create it for you. Additionally, the\nSNS topic must have a policy that allows the account that created the job to publish messages\nto the topic. For information about SNS topic names, see CreateTopic in the Amazon Simple\nNotification Service API Reference. jobParameters API Version 2012-06-01 523\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nTier\nThe tier to use for a select or an archive retrieval job. Standard is the default value used. Valid Values: Expedited | Standard | Bulk\nType: String\nRequired: no\nType\nThe job type. You can initiate a job to perform a select query on an archive, retrieve an archive,\nor get an inventory of a vault.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 11,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23652877807617187,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Parameter Details"
            ]
          },
          "keywords": [
            "SelectParameters",
            "SNSTopic",
            "Amazon S3 Glacier",
            "ARN",
            "SNS topic",
            "jobParameters",
            "Tier",
            "archive retrieval",
            "select query",
            "vault inventory"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS topic",
            "SelectParameters object",
            "Amazon Simple Notification Service",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval and Processing",
          "secondary_categories": [
            "Cloud Notifications",
            "Storage Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Amazon Simple Notification Service API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the parameters and settings for Amazon S3 Glacier jobs, including select queries, archive retrieval, and vault inventory tasks. It specifies required fields, valid values, and dependencies like SNS topics and tier options.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the Tier parameter in S3 Glacier jobs?",
            "What prerequisites are required for using an SNS topic with S3 Glacier?",
            "What is the default job type for archive retrieval in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval and Processing]",
        "tf_idf_keywords": [
          "jobParameters",
          "vault inventory",
          "SNS topic",
          "SelectParameters object",
          "API Version 2012-06-01",
          "Amazon SNS",
          "archive retrieval",
          "Amazon S3 Glacier",
          "Tier",
          "Amazon Simple Notification Service",
          "select query",
          "ARN",
          "SNSTopic",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_458",
      "text": "Valid Values: select | archive-retrieval | inventory-retrieval\nType: String\nRequired: yes\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputLocation\nContains information about the location where the job results and errors are stored. Contents\nS3\nAn object that describes an Amazon S3 location to receive the results of the restore request. Type: S3Location\nRequired: yes\nOutputLocation API Version 2012-06-01 524\n\nAmazon S3 Glacier Developer Guide\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputSerialization\nDescribes how the output is serialized. Contents\nCSV\nAn object that describes the serialization of the comma-separated values (CSV)-encoded query\nresults. Type: CSVOutput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nS3Location\nContains information about the location in Amazon S3 where the job results are stored. Contents\nAccessControlList\nA list of grants that control access to the stored results. Type: Array of Grant objects\nRequired: no\nBucketName\nThe name of the Amazon S3 bucket where the job results are stored. The bucket must be in the\nsame AWS Region as the vault that contains the input archive object. OutputSerialization API Version 2012-06-01 525\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: yes\nCannedACL\nThe canned access control list (ACL) to apply to the job results. Type: String\nValid Values: private | public-read | public-read-write | aws-exec-read |\nauthenticated-read | bucket-owner-read | bucket-owner-full-control\nRequired: no\nEncryption\nAn object that contains information about the encryption used to store the job results in\nAmazon S3. Type: Encryption object\nRequired: no\nPrefix\nThe prefix that is prepended to the results for this request.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 11,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37068606289950284,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Description",
              "Parameter Details",
              "Valid Values"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Glacier",
            "OutputLocation",
            "S3Location",
            "CSVOutput",
            "AccessControlList",
            "CannedACL",
            "Encryption",
            "Prefix",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3",
            "S3Location",
            "CSVOutput",
            "CannedACL",
            "Encryption"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 Glacier Job Management",
          "secondary_categories": [
            "Data Serialization",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines valid values, required fields, and detailed descriptions of Amazon S3 Glacier job-related parameters including OutputLocation, OutputSerialization, and S3Location settings for storing and serializing job results.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the 'CannedACL' parameter in Amazon S3 Glacier?",
            "How is the output of a restore request serialized using CSV?",
            "What information is required to specify an S3 bucket for job results storage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 Glacier Job Management]",
        "tf_idf_keywords": [
          "Amazon S3",
          "Encryption",
          "OutputLocation",
          "S3Location",
          "Prefix",
          "AccessControlList",
          "CannedACL",
          "CSVOutput",
          "API Version 2012-06-01",
          "Glacier",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_459",
      "text": "The maximum length for the prefix\nis 512 bytes. Type: String\nRequired: yes\nStorageClass\nThe class of storage used to store the job results. Type: String\nValid Values: STANDARD | REDUCED_REDUNDANCY | STANDARD_IA\nRequired: no\nTagging\nThe tag set that is applied to the job results. S3Location API Version 2012-06-01 526\n\nAmazon S3 Glacier Developer Guide\nType: String to string map\nRequired: no\nUserMetadata\nA map of metadata to store with the job results in Amazon S3. Type: String to string map\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nSelectParameters\nContains information about the parameters used for the select. Contents\nExpression\nThe expression that is used to select the object. The expression must not exceed the quota of\n128,000 characters. Type: String\nRequired: yes\nExpressionType\nThe type of the provided expression, for example SQL. Valid Values: SQL\nType: String\nRequired: yes\nSelectParameters API Version 2012-06-01 527\n\nAmazon S3 Glacier Developer Guide\nInputSerialization\nDescribes the serialization format of the object in the select. Type: InputSerialization object\nRequired: no\nOutputSerialization\nDescribes how the results of the select job are serialized. Required: no\nType: OutputSerialization object\nMore Info\n\u2022 Initiate Job (POST jobs)\nData Retrieval Operations\nThe following are the data retrieval\u2013related operations available in S3 Glacier.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 11,
        "num_words": 206,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31074288108132103,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Specification",
              "Parameter Details"
            ]
          },
          "keywords": [
            "prefix",
            "StorageClass",
            "Tagging",
            "UserMetadata",
            "SelectParameters",
            "Expression",
            "ExpressionType",
            "InputSerialization",
            "OutputSerialization",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3",
            "S3 Glacier",
            "S3Location",
            "Initiate Job",
            "SelectParameters API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage and Retrieval",
          "secondary_categories": [
            "Serialization Formats",
            "Query Expressions"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines various parameters and configurations for managing job results and data retrieval operations in Amazon S3 Glacier, including storage classes, tagging, user metadata, select parameters, and serialization formats.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the maximum length for the prefix in Amazon S3 Glacier?",
            "What are the valid storage class values for storing job results?",
            "How is the serialization format of the object described in the select operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Storage and Retrieval]",
        "tf_idf_keywords": [
          "OutputSerialization",
          "Amazon S3",
          "Expression",
          "UserMetadata",
          "ExpressionType",
          "S3 Glacier",
          "Tagging",
          "Initiate Job",
          "prefix",
          "S3Location",
          "InputSerialization",
          "Amazon S3 Glacier",
          "StorageClass",
          "SelectParameters API",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_460",
      "text": "Topics\n\u2022 Get Data Retrieval Policy (GET policy)\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\n\u2022 Set Data Retrieval Policy (PUT policy)\nGet Data Retrieval Policy (GET policy)\nDescription\nThis operation returns the current data retrieval policy for the AWS account and AWS Region\nspecified in the GET request. For more information about data retrieval policies, see S3 Glacier Data\nRetrieval Policies. Data Retrieval Operations API Version 2012-06-01 528\n\nAmazon S3 Glacier Developer Guide\nRequests\nTo return the current data retrieval policy, send an HTTP GET request to the data retrieval policy\nURI as shown in the following syntax example. Syntax\nGET /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nGet Data Retrieval Policy API Version 2012-06-01 529\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"BytesPerHour\": Number,\n\"Strategy\": String\n}\n]\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 13,
        "num_words": 298,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3576663579696264,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Methods",
              "Response Syntax"
            ]
          },
          "keywords": [
            "Data Retrieval Policy",
            "GET request",
            "Provisioned Capacity",
            "AWS account ID",
            "S3 Glacier",
            "Authorization",
            "Request Headers",
            "Response Headers",
            "BytesPerHour",
            "Strategy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "HTTP GET",
            "x-amz-glacier-version",
            "AccountId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Operations",
          "secondary_categories": [
            "AWS S3 Glacier",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP",
            "Authorization Signature"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the current data retrieval policy for an AWS account using the Amazon S3 Glacier API, including request and response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve the data retrieval policy for my AWS account using the S3 Glacier API?",
            "What is the syntax for the GET request to fetch the data retrieval policy?",
            "What does the response structure look like for the Get Data Retrieval Policy operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Operations]",
        "tf_idf_keywords": [
          "HTTP GET",
          "S3 Glacier",
          "AWS Region",
          "BytesPerHour",
          "Strategy",
          "x-amz-glacier-version",
          "AccountId",
          "Provisioned Capacity",
          "Response Headers",
          "AWS account ID",
          "GET request",
          "Amazon S3 Glacier",
          "Data Retrieval Policy",
          "Authorization",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_461",
      "text": "Response Body\nThe response body contains the following JSON fields. BytesPerHour\nThe maximum number of bytes that can be retrieved in an hour. This field will be present only if the value of the Strategy field is BytesPerHour. Type: Number\nRules\nThe policy rule. Although this is a list type, currently there will be only one rule, which contains\na Strategy field and optionally a BytesPerHour field. Type: Array\nStrategy\nThe type of data retrieval policy. Get Data Retrieval Policy API Version 2012-06-01 530\n\nAmazon S3 Glacier Developer Guide\nType: String\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console.",
      "start_idx": 787762,
      "end_idx": 790091,
      "metadata": {
        "num_sentences": 8,
        "num_words": 105,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2825577599661691,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "JSON Fields"
            ]
          },
          "keywords": [
            "Response Body",
            "BytesPerHour",
            "Rules",
            "Strategy",
            "Data Retrieval Policy",
            "Amazon S3 Glacier",
            "Get Data Retrieval Policy",
            "API Version 2012-06-01",
            "JSON",
            "Max Retrieval Rate"
          ],
          "entities": [
            "BytesPerHour",
            "Rules",
            "Strategy",
            "Amazon S3 Glacier",
            "Get Data Retrieval Policy API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Policy",
          "secondary_categories": [
            "API Documentation",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the JSON fields in the response body for the 'Get Data Retrieval Policy' API, including details about the BytesPerHour, Rules, and Strategy fields and their valid values and types.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What does the BytesPerHour field represent in the response body?",
            "What are the valid values for the Strategy field in the data retrieval policy?",
            "How is the Rules field structured in the response body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval Policy]",
        "tf_idf_keywords": [
          "Response Body",
          "BytesPerHour",
          "Strategy",
          "Rules",
          "Get Data Retrieval Policy",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Max Retrieval Rate",
          "JSON",
          "Data Retrieval Policy",
          "Get Data Retrieval Policy API"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_462",
      "text": "FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to get a data retrieval policy. Example Request\nIn this example, a GET request is sent to the URI of a policy's location. GET /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the data retrieval policy in the body of the response in JSON format. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 85\n{\n\"Policy\":\n{\nGet Data Retrieval Policy API Version 2012-06-01 531\n\nAmazon S3 Glacier Developer Guide\n\"Rules\":[\n{\n\"BytesPerHour\":10737418240,\n\"Strategy\":\"BytesPerHour\"\n}\n]\n}\n}\nRelated Sections\n\u2022 Set Data Retrieval Policy (PUT policy)\n\u2022 Initiate Job (POST jobs)\nList Provisioned Capacity (GET provisioned-capacity)\nThis operation lists the provisioned capacity units for the specified AWS account. For more\ninformation about provisioned capacity, see Archive Retrieval Options.",
      "start_idx": 787762,
      "end_idx": 790091,
      "metadata": {
        "num_sentences": 9,
        "num_words": 196,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3382270071241591,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "FreeTier",
            "Retrieval Policy",
            "Amazon S3 Glacier",
            "Error Responses",
            "GET request",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "JSON format",
            "Provisioned Capacity",
            "Archive Retrieval Options"
          ],
          "entities": [
            "S3 Glacier Data Retrieval Policies",
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "GET /-/policies/data-retrieval",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Data Retrieval Policies",
          "secondary_categories": [
            "API Requests",
            "Provisioned Capacity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256",
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage data retrieval policies in Amazon S3 Glacier, including retrieving policies via a GET request and interpreting the JSON response. It also references related operations such as setting policies and listing provisioned capacity units.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a data retrieval policy in Amazon S3 Glacier?",
            "What does a successful response for a data retrieval policy look like?",
            "Where can I find information about related operations like setting data retrieval policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval Policies]",
        "tf_idf_keywords": [
          "S3 Glacier Data Retrieval Policies",
          "GET /-/policies/data-retrieval",
          "Archive Retrieval Options",
          "x-amz-glacier-version",
          "JSON format",
          "Provisioned Capacity",
          "FreeTier",
          "GET request",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "Retrieval Policy",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_463",
      "text": "A provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date. The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second. If the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28.",
      "start_idx": 790092,
      "end_idx": 790574,
      "metadata": {
        "num_sentences": 5,
        "num_words": 92,
        "breakpoint_idx": 4733,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.6273193359375,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Time Calculation",
              "Expiration Rules"
            ]
          },
          "keywords": [
            "provisioned capacity unit",
            "start date",
            "expiration date",
            "purchase",
            "month",
            "nearest second",
            "last day",
            "August 31",
            "February 28",
            "January 31"
          ],
          "entities": [
            "provisioned capacity unit",
            "start date",
            "expiration date",
            "August 31",
            "January 31"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Provisioned Capacity Management",
          "secondary_categories": [
            "Time-based Resource Allocation",
            "Date Calculation Logic"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "A provisioned capacity unit is valid for one month from the purchase date, with specific rules for months that have fewer days, such as February or months ending on the 31st.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How long does a provisioned capacity unit last?",
            "What happens if the start date is on the 31st of a month?",
            "How is the expiration date calculated for February?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Provisioned Capacity Management]",
        "tf_idf_keywords": [
          "provisioned capacity unit",
          "month",
          "February 28",
          "expiration date",
          "August 31",
          "start date",
          "nearest second",
          "January 31",
          "purchase",
          "last day"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_464",
      "text": "You can see this functionality in the Example\nResponse. Request Syntax\nTo list the provisioned retrieval capacity for an account, send an HTTP GET request to the\nprovisioned-capacity URI as shown in the following syntax example. GET /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nList Provision Capacity API Version 2012-06-01 532\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body.",
      "start_idx": 790575,
      "end_idx": 792816,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33499170939127604,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API",
              "HTTP Request",
              "Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "provisioned retrieval capacity",
            "HTTP GET request",
            "provisioned-capacity URI",
            "Amazon S3 Glacier",
            "AccountId",
            "Authorization",
            "x-amz-glacier-version",
            "AWS account ID",
            "request headers",
            "common request headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "x-amz-glacier-version",
            "AWS account ID",
            "provisioned-capacity URI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list provisioned retrieval capacity for an AWS account using the Amazon S3 Glacier API via an HTTP GET request, including syntax, headers, and account ID requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list provisioned retrieval capacity in Amazon S3 Glacier?",
            "What is the syntax for the provisioned-capacity GET request?",
            "What are the requirements for specifying the AWS Account ID in the request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [API Documentation]",
        "tf_idf_keywords": [
          "HTTP GET request",
          "provisioned-capacity URI",
          "AccountId",
          "x-amz-glacier-version",
          "common request headers",
          "provisioned retrieval capacity",
          "AWS account ID",
          "Amazon S3 Glacier",
          "request headers",
          "Authorization"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_465",
      "text": "Responses\nIf the operation is successful, the service sends back an HTTP 200 OK response. Response Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"ProvisionedCapacityList\":\n{\n\"CapacityId\" : \"string\",\nList Provision Capacity API Version 2012-06-01 533\n\nAmazon S3 Glacier Developer Guide\n\"StartDate\" : \"string\"\n\"ExpirationDate\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. CapacityId\nThe ID that identifies the provisioned capacity unit. Type: String. StartDate\nThe date that the provisioned capacity unit was purchased, in Coordinated Universal Time\n(UTC). Type: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. ExpirationDate\nThe date that the provisioned capacity unit expires, in Coordinated Universal Time (UTC). Type: String.",
      "start_idx": 790575,
      "end_idx": 792816,
      "metadata": {
        "num_sentences": 11,
        "num_words": 144,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2332611083984375,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Syntax",
              "Response Headers",
              "Response Body"
            ]
          },
          "keywords": [
            "HTTP 200 OK",
            "x-amzn-RequestId",
            "Content-Type",
            "ProvisionedCapacityList",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "ISO 8601",
            "Amazon S3 Glacier",
            "Coordinated Universal Time"
          ],
          "entities": [
            "ProvisionedCapacityList",
            "CapacityId",
            "Amazon S3 Glacier",
            "HTTP/1.1",
            "ISO 8601 date format"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Response Handling",
          "secondary_categories": [
            "HTTP Protocol",
            "JSON Data Structure"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the HTTP 200 OK response structure for a successful operation, including response headers and a JSON body with details about provisioned capacity units in Amazon S3 Glacier.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What information is included in the response body for provisioned capacity units?",
            "What is the format of the StartDate and ExpirationDate fields in the response?",
            "What headers are returned in a successful HTTP 200 OK response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Response Handling]",
        "tf_idf_keywords": [
          "ProvisionedCapacityList",
          "Content-Type",
          "ISO 8601 date format",
          "x-amzn-RequestId",
          "Coordinated Universal Time",
          "StartDate",
          "ExpirationDate",
          "HTTP/1.1",
          "Amazon S3 Glacier",
          "CapacityId",
          "HTTP 200 OK",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_466",
      "text": "A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example lists the provisioned capacity units for an account. List Provision Capacity API Version 2012-06-01 534\n\nAmazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to retrieve a list of the provisioned capacity units for the\nspecified account. GET /123456789012/priority-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 200 OK with a list of\nprovisioned capacity units for the account as shown in the following example. The provisioned capacity unit listed first is an example of a unit with a start date of January 31,\n2017 and expiration date of February 28, 2017. As stated earlier, if the start date is on the 31st day\nof a month, the expiration date is the last day of the next month. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"ProvisionedCapacityList\",\n{\n\"CapacityId\": \"zSaq7NzHFQDANTfQkDen4V7z\",\n\"StartDate\": \"2017-01-31T14:26:33.031Z\",\n\"ExpirationDate\": \"2017-02-28T14:26:33.000Z\",\n},\n{\n\"CapacityId\": \"yXaq7NzHFQNADTfQkDen4V7z\",\n\"StartDate\": \"2016-12-13T20:11:51.095Z\"\",\n\"ExpirationDate\": \"2017-01-13T20:11:51.000Z\" \",\n},\n...\n}\nList Provision Capacity API Version 2012-06-01 535\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\nPurchase Provisioned Capacity (POST provisioned-capacity)\nThis operation purchases a provisioned capacity unit for an AWS account. A provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date.",
      "start_idx": 792817,
      "end_idx": 795042,
      "metadata": {
        "num_sentences": 9,
        "num_words": 267,
        "breakpoint_idx": 4763,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.34562672509087455,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Request",
              "API Response",
              "Date Format",
              "Provisioned Capacity"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Provisioned Capacity",
            "ISO 8601",
            "Error Responses",
            "GET Request",
            "HTTP 200 OK",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "ProvisionedCapacityList",
            "CapacityId",
            "Authorization"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier API",
          "secondary_categories": [
            "Date and Time Formats",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list and purchase provisioned capacity units in Amazon S3 Glacier, including example requests, responses, and related operations like purchasing provisioned capacity. It also details the ISO 8601 date format and expiration rules for provisioned capacity units.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list provisioned capacity units in Amazon S3 Glacier?",
            "What is the format of the response for a successful provisioned capacity list request?",
            "How do expiration dates work for provisioned capacity units in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS S3 Glacier API]",
        "tf_idf_keywords": [
          "ProvisionedCapacityList",
          "Provisioned Capacity",
          "StartDate",
          "ExpirationDate",
          "GET Request",
          "Authorization",
          "Amazon S3 Glacier",
          "AWS4-HMAC-SHA256",
          "CapacityId",
          "HTTP 200 OK",
          "Error Responses",
          "ISO 8601"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_467",
      "text": "The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second. If the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28. Provisioned capacity helps ensure that your retrieval capacity for expedited retrievals is available\nwhen you need it. Each unit of capacity ensures that at least three expedited retrievals can be\nperformed every five minutes and provides up to 150 MB/s of retrieval throughput. For more\ninformation about provisioned capacity, see Archive Retrieval Options. Note\nThere is a limit of two provisioned capacity units per AWS account. Requests\nTo purchase provisioned capacity unit for an AWS account send an HTTP POST request to the\nprovisioned-capacity URI. Syntax\nPOST /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nPurchase Provisioned Capacity API Version 2012-06-01 536\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 795043,
      "end_idx": 796659,
      "metadata": {
        "num_sentences": 13,
        "num_words": 257,
        "breakpoint_idx": 4776,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23352838173890725,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "expiration date",
            "start date",
            "provisioned capacity",
            "retrieval throughput",
            "expedited retrievals",
            "AWS account ID",
            "HTTP POST request",
            "provisioned-capacity URI",
            "x-amz-glacier-version",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "provisioned capacity",
            "HTTP POST",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Provisioned Capacity Management",
          "secondary_categories": [
            "Expiration Date Handling",
            "API Request Syntax"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the expiration rules for units, the functionality of provisioned capacity in Amazon S3 Glacier, and how to purchase provisioned capacity via an HTTP POST request.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How is the expiration date of a unit calculated in Amazon S3 Glacier?",
            "What is the purpose of provisioned capacity in Amazon S3 Glacier?",
            "How can I purchase a provisioned capacity unit for my AWS account?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Provisioned Capacity Management]",
        "tf_idf_keywords": [
          "provisioned-capacity URI",
          "HTTP POST",
          "x-amz-glacier-version",
          "expiration date",
          "start date",
          "AWS account ID",
          "HTTP POST request",
          "provisioned capacity",
          "retrieval throughput",
          "Amazon S3 Glacier",
          "expedited retrievals"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_468",
      "text": "Request Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nIf the operation request is successful, the service returns an HTTP 201 Created response. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-capacity-id: CapacityId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Purchase Provisioned Capacity API Version 2012-06-01 537\n\nAmazon S3 Glacier Developer Guide\nName Description\nx-amz-capacity-id The ID that identifies the provisioned capacity unit. Type: String\nResponse Body\nThis operation does not return a response body. Errors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses. Code Description HTTP Status Type\nCode\nLimitExceededException Returned if the given request 400 Bad Client\nwould exceed the account's limit Request\nof provisioned capacity units.",
      "start_idx": 796660,
      "end_idx": 801223,
      "metadata": {
        "num_sentences": 11,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34666914506392044,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Parameters",
              "Response Headers",
              "Errors"
            ]
          },
          "keywords": [
            "Request Headers",
            "Response Headers",
            "HTTP 201 Created",
            "x-amz-capacity-id",
            "Provisioned Capacity",
            "LimitExceededException",
            "Amazon S3 Glacier",
            "Error Responses",
            "CapacityId",
            "RequestId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-capacity-id",
            "LimitExceededException",
            "HTTP 201 Created",
            "Purchase Provisioned Capacity API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the request and response parameters, headers, and potential errors for the Amazon S3 Glacier Purchase Provisioned Capacity API operation.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What headers are required for the Purchase Provisioned Capacity API operation?",
            "What is the response format for a successful Purchase Provisioned Capacity request?",
            "What error occurs if the provisioned capacity limit is exceeded?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Purchase Provisioned Capacity API",
          "HTTP 201 Created",
          "Provisioned Capacity",
          "x-amz-capacity-id",
          "Response Headers",
          "Amazon S3 Glacier",
          "CapacityId",
          "RequestId",
          "Request Headers",
          "Error Responses",
          "LimitExceededException"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_469",
      "text": "Examples\nThe following example purchases provisioned capacity for an account. Example Request\nThe following example sends an HTTP POST request to purchase a provisioned capacity unit. POST /123456789012/provisioned-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nPurchase Provisioned Capacity API Version 2012-06-01 538\n\nAmazon S3 Glacier Developer Guide\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created\nresponse, as shown in the following example. HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-capacity-id: zSaq7NzHFQDANTfQkDen4V7z\nRelated Sections\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\nSet Data Retrieval Policy (PUT policy)\nDescription\nThis operation sets and then enacts a data retrieval policy in the AWS Region specified in the PUT\nrequest. You can set one policy per AWS Region for an AWS account. The policy is enacted within a\nfew minutes of a successful PUT operation. The set policy operation does not affect retrieval jobs that were in progress before the policy was\nenacted. For more information about data retrieval policies, see S3 Glacier Data Retrieval Policies. Requests\nSyntax\nTo set a data retrieval policy, send an HTTP PUT request to the data retrieval policy URI as shown in\nthe following syntax example. PUT /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\":\nSet Data Retrieval Policy API Version 2012-06-01 539\n\nAmazon S3 Glacier Developer Guide\n{\n\"Rules\":[\n{\n\"Strategy\": String,\n\"BytesPerHour\": Number\n}\n]\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request.",
      "start_idx": 796660,
      "end_idx": 801223,
      "metadata": {
        "num_sentences": 11,
        "num_words": 273,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3225836320356889,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "API Description",
              "Syntax"
            ]
          },
          "keywords": [
            "Provisioned Capacity",
            "HTTP POST",
            "HTTP PUT",
            "AWS Region",
            "S3 Glacier",
            "Data Retrieval Policy",
            "Authorization",
            "x-amz-glacier-version",
            "AccountId",
            "Policy Rules"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "AccountId",
            "x-amz-capacity-id",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS API Operations",
          "secondary_categories": [
            "Data Retrieval Policy",
            "Provisioned Capacity Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and details for purchasing provisioned capacity and setting data retrieval policies in Amazon S3 Glacier using HTTP requests.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I purchase provisioned capacity in Amazon S3 Glacier?",
            "What is the HTTP request syntax for setting a data retrieval policy in S3 Glacier?",
            "What does the response look like for a successful provisioned capacity purchase?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS API Operations]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "AWS Region",
          "HTTP POST",
          "x-amzn-RequestId",
          "x-amz-glacier-version",
          "AccountId",
          "Provisioned Capacity",
          "x-amz-capacity-id",
          "Amazon S3 Glacier",
          "HTTP PUT",
          "Data Retrieval Policy",
          "Authorization",
          "Policy Rules"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_470",
      "text": "You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. BytesPerHour\nThe maximum number of bytes that can be retrieved in an hour. This field is required only if the value of the Strategy field is BytesPerHour. Your PUT\noperation will be rejected if the Strategy field is not set to BytesPerHour and you set this\nfield. Type: Number\nSet Data Retrieval Policy API Version 2012-06-01 540\n\nAmazon S3 Glacier Developer Guide\nRequired: Yes, if the Strategy field is set to BytesPerHour. Otherwise, no.",
      "start_idx": 796660,
      "end_idx": 801223,
      "metadata": {
        "num_sentences": 11,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.21790046691894532,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Parameters",
              "Headers",
              "Body",
              "Fields"
            ]
          },
          "keywords": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "request headers",
            "request parameters",
            "request body",
            "BytesPerHour",
            "Strategy field",
            "Data Retrieval Policy",
            "PUT operation",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "BytesPerHour",
            "Strategy field",
            "Data Retrieval Policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "AWS Service Configuration",
            "Data Retrieval Strategy"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to specify an AWS account ID or use the default account ID for Amazon S3 Glacier requests, and describes the parameters, headers, and JSON fields required for the Set Data Retrieval Policy API operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I specify an AWS account ID for Amazon S3 Glacier requests?",
            "What is the purpose of the BytesPerHour field in the Set Data Retrieval Policy API?",
            "Which request headers are used for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "Data Retrieval Policy",
          "request parameters",
          "BytesPerHour",
          "AWS account ID",
          "API Version 2012-06-01",
          "request body",
          "Amazon S3 Glacier",
          "request headers",
          "Strategy field",
          "PUT operation"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_471",
      "text": "Valid Values: Minimum integer value of 1. Maximum integer value of 2^63 - 1 inclusive. Rules\nThe policy rule. Although this is a list type, currently there must be only one rule, which\ncontains a Strategy field and optionally a BytesPerHour field. Type: Array\nRequired: Yes\nStrategy\nThe type of data retrieval policy to set. Type: String\nRequired: Yes\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console. FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 112,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2263474570380317,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Valid Values",
              "Type",
              "Required",
              "Rules"
            ]
          },
          "keywords": [
            "Valid Values",
            "Minimum integer value",
            "Maximum integer value",
            "policy rule",
            "Strategy field",
            "BytesPerHour field",
            "Array",
            "String",
            "S3 Glacier",
            "Data Retrieval Policies"
          ],
          "entities": [
            "BytesPerHour",
            "FreeTier",
            "None",
            "Max Retrieval Rate",
            "Free Tier Only"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Retrieval Policies",
          "secondary_categories": [
            "Data Storage",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the configuration of a data retrieval policy, including valid values, required fields, and their meanings. It outlines rules for setting the Strategy and optional BytesPerHour fields in the policy.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the valid values for the Strategy field in a data retrieval policy?",
            "How do I configure the BytesPerHour field in a data retrieval policy?",
            "What does the None option mean in the Strategy field of a data retrieval policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Retrieval Policies]",
        "tf_idf_keywords": [
          "Array",
          "S3 Glacier",
          "Data Retrieval Policies",
          "Minimum integer value",
          "BytesPerHour",
          "Free Tier Only",
          "String",
          "FreeTier",
          "Valid Values",
          "Maximum integer value",
          "None",
          "BytesPerHour field",
          "Max Retrieval Rate",
          "Strategy field",
          "policy rule"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_472",
      "text": "Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Set Data Retrieval Policy API Version 2012-06-01 541\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP PUT request with the Strategy field set to BytesPerHour. PUT /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"Strategy\":\"BytesPerHour\",\n\"BytesPerHour\":10737418240\n}\n]\n}\n}\nThe following example sends an HTTP PUT request with the Strategy field set to FreeTier. PUT /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Policy\":\n{\nSet Data Retrieval Policy API Version 2012-06-01 542\n\nAmazon S3 Glacier Developer Guide\n\"Rules\":[\n{\n\"Strategy\":\"FreeTier\"\n}\n]\n}\n}\nThe following example sends an HTTP PUT request with the Strategy field set to None. PUT /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"Strategy\":\"None\"\n}\n]\n}\n}\nExample Response\nIf the request was successful Amazon S3 Glacier (S3 Glacier) sets the policy and returns a HTTP\n204 No Content as shown in the following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Get Data Retrieval Policy (GET policy)\nSet Data Retrieval Policy API Version 2012-06-01 543\n\nAmazon S3 Glacier Developer Guide\n\u2022 Initiate Job (POST jobs)\nSet Data Retrieval Policy API Version 2012-06-01 544\n\nAmazon S3 Glacier Developer Guide\nDocument History\n\u2022 Current product version: 2012-06-01\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide from July 5, 2018, onward. For notification about updates to this documentation,\nyou can subscribe to an RSS feed.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 329,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36241544087727867,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "HTTP Response",
              "Error Handling",
              "Example Requests",
              "Example Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP PUT",
            "Policy",
            "BytesPerHour",
            "FreeTier",
            "None",
            "x-amz-glacier-version",
            "Authorization",
            "HTTP 204 No Content",
            "Error Responses"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "Policy Rules"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "API Documentation",
          "secondary_categories": [
            "HTTP Protocol",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256",
            "RSS Feed"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Set Data Retrieval Policy operation in Amazon S3 Glacier, detailing HTTP requests, example strategies (BytesPerHour, FreeTier, None), and the expected responses (HTTP 204 No Content).",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I set a data retrieval policy in Amazon S3 Glacier?",
            "What are the different strategies available for data retrieval policies?",
            "What is the expected HTTP response for a successful policy update?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [API Documentation]",
        "tf_idf_keywords": [
          "BytesPerHour",
          "x-amz-glacier-version",
          "HTTP 204 No Content",
          "x-amzn-RequestId",
          "FreeTier",
          "Amazon S3 Glacier",
          "None",
          "HTTP PUT",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "Error Responses",
          "Policy",
          "Policy Rules"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_473",
      "text": "Change Description Date\nImproved start times for Standard retrievals for restore August 9, 2023\nStandard restore requests requests that are made\nmade through S3 Batch through S3 Batch Operations\nOperations now can start within minutes. For more information, see\nArchive Retrieval Options. Amazon S3 supports higher Amazon S3 supports restore November 15, 2022\nrestore request rates for S3 requests at a rate of up\nGlacier Flexible Retrieval and to 1,000 transactions per\nS3 Glacier Deep Archive second, per AWS account\nfor the S3 Glacier Flexible\nRetrieval and S3 Glacier Deep\nArchive storage classes. Amazon Glacier name change Amazon Glacier is now November 20, 2018\nAmazon S3 Glacier to better\nreflect Glacier's integration\nwith Amazon S3. Updates now available over You can now subscribe to an July 5, 2018\nRSS RSS feed to receive notificat\nions about updates to the\nAmazon S3 Glacier Developer\nGuide guide. API Version 2012-06-01 545\n\nAmazon S3 Glacier Developer Guide\nEarlier Updates\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide before July 5, 2018. Change Description Release Date\nExpedited S3 Glacier now supports Expedited and Bulk data November 21,\nand Bulk Data retrievals in addition to Standard retrievals. For more 2016\nRetrievals information, see Archive Retrieval Options. Vault Lock S3 Glacier now supports Vault Lock, which allows you July 8, 2015\nto easily deploy and enforce compliance controls on\nindividual S3 Glacier vaults with a Vault Lock policy. For more information, see S3 Glacier Vault Lock and\nVault Lock Policies.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44697108798556856,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "ChangeLog",
              "FeatureUpdates"
            ]
          },
          "keywords": [
            "Standard retrievals",
            "S3 Glacier",
            "Archive Retrieval Options",
            "Vault Lock",
            "S3 Glacier Deep Archive",
            "Expedited retrievals",
            "Bulk data retrievals",
            "S3 Batch Operations",
            "Amazon S3 Glacier",
            "compliance controls"
          ],
          "entities": [
            "Amazon S3",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "Vault Lock",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Compliance and Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive"
          ],
          "mentioned_tools": [
            "RSS feed"
          ]
        },
        "semantic": {
          "summary": "This document outlines updates and features for Amazon S3 Glacier, including improved restore times, higher request rates, name changes, RSS feed subscriptions, and support for Expedited and Bulk data retrievals and Vault Lock policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the retrieval options and rates for S3 Glacier storage classes?",
            "How can I enforce compliance controls using Vault Lock policies?",
            "What updates are available for Amazon S3 Glacier Developer Guide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Standard retrievals",
          "S3 Glacier",
          "Amazon S3",
          "Amazon S3 Glacier Developer Guide",
          "Expedited retrievals",
          "Archive Retrieval Options",
          "Vault Lock",
          "compliance controls",
          "S3 Glacier Deep Archive",
          "Bulk data retrievals",
          "S3 Batch Operations",
          "Amazon S3 Glacier",
          "S3 Glacier Flexible Retrieval"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_474",
      "text": "Vault tagging S3 Glacier now allows you to tag your S3 Glacier June 22, 2015\nvaults for easier resource and cost management. Tags are labels that you can define and associate\nwith your vaults, and using tags adds filtering\ncapabilities to operations such as AWS cost reports. For more information, see Tagging Amazon S3 Glacier\nResources and Tagging Your S3 Glacier Vaults. Vault access S3 Glacier now supports managing access to your April 27, 2015\npolicies individual S3 Glacier vaults by using vault access\npolicies. You can now define an access policy directly\non a vault, making it easier to grant vault access to\nusers and business groups internal to your organizat\nion, as well as to your external business partners. For\nmore information, see Vault Access Policies. Data retrieval S3 Glacier now supports data retrieval policies and December 11,\npolicies and audit audit logging. Data retrieval policies allow you to 2014\nlogging easily set data retrieval limits and simplify data\nretrieval cost management. You can define your own\ndata retrieval limits with a few clicks in the AWS\nEarlier Updates API Version 2012-06-01 546\n\nAmazon S3 Glacier Developer Guide\nChange Description Release Date\nManagement Console or by using the S3 Glacier API. For more information, see S3 Glacier Data Retrieval\nPolicies.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4409185621473524,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Feature Announcement",
              "Cost Management",
              "Access Control",
              "Audit Logging"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault tagging",
            "tags",
            "vault access policies",
            "data retrieval policies",
            "audit logging",
            "cost management",
            "AWS cost reports",
            "data retrieval limits",
            "S3 Glacier API"
          ],
          "entities": [
            "S3 Glacier",
            "AWS",
            "Vault Access Policies",
            "Amazon S3 Glacier Developer Guide",
            "S3 Glacier API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Resource Management",
          "secondary_categories": [
            "Access Policies",
            "Cost Management"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines new features for Amazon S3 Glacier, including tagging for resource management, vault access policies for granular access control, and data retrieval policies for cost management and audit logging.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I tag my S3 Glacier vaults for better cost management?",
            "What are vault access policies and how can I use them in S3 Glacier?",
            "How do data retrieval policies work in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Resource Management]",
        "tf_idf_keywords": [
          "S3 Glacier",
          "Amazon S3 Glacier Developer Guide",
          "AWS",
          "cost management",
          "data retrieval policies",
          "vault access policies",
          "tags",
          "vault tagging",
          "audit logging",
          "AWS cost reports",
          "data retrieval limits",
          "S3 Glacier API",
          "Vault Access Policies"
        ]
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_475",
      "text": "In addition, S3 Glacier now supports audit logging\nwith AWS CloudTrail, which records S3 Glacier API\ncalls for your account and delivers the log files to\nan Amazon S3 bucket that you specify. For more\ninformation, see Logging Amazon S3 Glacier API Calls\nwith AWS CloudTrail. Updates to Java Updated the Java code examples in this guide that June 27, 2014\nsamples use the AWS SDK for Java. Limiting vault You can now limit the number of vault inventory December 31,\ninventory retrieval items retrieved by filtering on the archive creation 2013\ndate or by setting a limit. For more information\nabout limiting inventory retrieval, see Range Invento\nry Retrieval in the Initiate Job (POST jobs) topic. Removed Removed the URLs that pointed to the old security July 26, 2013\noutdated URLs credentials page from code examples. Support for range S3 Glacier now supports retrieval of specific ranges November 13,\nretrievals of your archives. You can initiate a job requesting 2012\nS3 Glacier to prepare an entire archive or a portion\nof the archive for subsequent download. When an\narchive is very large, you may find it cost effective\nto initiate several sequential jobs to prepare your\narchive. For more information, see Downloading an Archive in\nS3 Glacier. New Guide This is the first release of the A mazon S3 Glacier August 20, 2012\nDeveloper Guide. Earlier Updates API Version 2012-06-01 547\n\nAmazon S3 Glacier Developer Guide\nAWS Glossary\nFor the latest AWS terminology, see the AWS glossary in the AWS Glossary Reference. API Version 2012-06-01 548",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 13,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2917740650666066,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Update Log",
              "Feature Announcement",
              "API Documentation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS CloudTrail",
            "vault inventory retrieval",
            "archive creation date",
            "AWS SDK for Java",
            "range retrievals",
            "audit logging",
            "API Version 2012-06-01",
            "security credentials",
            "archive download"
          ],
          "entities": [
            "S3 Glacier",
            "AWS CloudTrail",
            "Amazon S3",
            "AWS SDK for Java",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Audit Logging",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation highlights updates and features of Amazon S3 Glacier, including audit logging with AWS CloudTrail, Java code examples using AWS SDK, vault inventory retrieval limits, range retrievals, and the initial release of the Amazon S3 Glacier Developer Guide.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I enable audit logging for S3 Glacier using AWS CloudTrail?",
            "What are the methods to limit vault inventory retrieval in S3 Glacier?",
            "How does range retrieval work for archives in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive download",
          "Amazon S3",
          "S3 Glacier",
          "archive creation date",
          "Amazon S3 Glacier Developer Guide",
          "security credentials",
          "vault inventory retrieval",
          "audit logging",
          "API Version 2012-06-01",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "range retrievals"
        ]
      }
    }
  ],
  "metadata": {
    "total_chunks": 476,
    "avg_chunk_size": 231.23739495798318,
    "chunking_method": "SemanticChunker",
    "processed_at": "2025-05-04T17:50:26.869975",
    "total_sentences": 4863,
    "total_words": 109977,
    "chunking_strategy": "semantic",
    "embedding_model": "all-MiniLM-L6-v2",
    "percentile_threshold": 95,
    "original_breakpoints": 218,
    "final_chunks": 476,
    "avg_chunk_size_sentences": 10.216386554621849,
    "enrichment": {
      "method": "llm",
      "model": "VARELab-GPT4o",
      "enriched_at": "2025-05-04 20:45:20"
    }
  }
}