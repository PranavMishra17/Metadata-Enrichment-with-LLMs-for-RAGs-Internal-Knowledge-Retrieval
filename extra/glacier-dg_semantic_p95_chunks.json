{
  "document_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e",
  "document_name": "glacier-dg.txt",
  "chunks": [
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_0",
      "text": "Developer Guide\nAmazon S3 Glacier\nAPI Version 2012-06-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved. Amazon S3 Glacier Developer Guide\nAmazon S3 Glacier: Developer Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.",
      "start_idx": 0,
      "end_idx": 300,
      "metadata": {
        "num_sentences": 4,
        "num_words": 44,
        "breakpoint_idx": 3,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3988505999247233
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_1",
      "text": "Amazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon. Amazon S3 Glacier Developer Guide\nTable of Contents\n.......................................................................................................................................................... x\nWhat Is Amazon S3 Glacier? ........................................................................................................... 1\nDo You Currently Use S3 Glacier? ............................................................................................................. 1\nData Model ..................................................................................................................................................... 3\nVault........................................................................................................................................................... 3\nArchive....................................................................................................................................................... 4\nJob.............................................................................................................................................................. 4\nNotification Configuration ..................................................................................................................... 5\nSupported Operations................................................................................................................................. 6\nVault Operations..................................................................................................................................... 6\nArchive Operations .................................................................................................................................. 7\nJobs ............................................................................................................................................................ 7\nAccessing S3 Glacier .................................................................................................................................... 7\nRegions and Endpoints .......................................................................................................................... 8\nGetting Started................................................................................................................................ 9\nStep 1: Before You Begin ......................................................................................................................... 10\nSet Up an AWS account ...................................................................................................................... 10\nDownload the Appropriate AWS SDK ............................................................................................... 12\nStep 2: Create a Vault ............................................................................................................................... 13\nStep 3: Upload an Archive to a Vault .................................................................................................... 14\nUpload an Archive by Using Java ...................................................................................................... 15\nUpload an Archive by Using .NET ...................................................................................................... 20\nStep 4: Download an Archive from a Vault .......................................................................................... 22\nDownload an Archive by Using Java................................................................................................. 23\nDownload an Archive by Using .NET ................................................................................................ 25\nStep 5: Delete an Archive from a Vault ................................................................................................ 27\nRelated Sections .................................................................................................................................... 27\nDelete an Archive by Using Java....................................................................................................... 28\nDelete an Archive by Using .NET ....................................................................................................... 29\nDeleting an Archive by Using the AWS CLI ..................................................................................... 30\nStep 6: Delete a Vault ............................................................................................................................... 33\nWhere Do I Go From Here? ...................................................................................................................... 34\nWorking with Vaults ...................................................................................................................... 35\nVault Operations in S3 Glacier ................................................................................................................ 36\nAPI Version 2012-06-01 iii\n\nAmazon S3 Glacier Developer Guide\nCreating and Deleting Vaults ............................................................................................................. 36\nRetrieving Vault Metadata .................................................................................................................. 36\nDownloading a Vault Inventory ......................................................................................................... 36\nConfiguring Vault Notifications ......................................................................................................... 37\nCreating a Vault .......................................................................................................................................... 37\nCreating a Vault Using Java ............................................................................................................... 38\nCreating a Vault Using .NET ............................................................................................................... 41\nCreating a Vault Using REST .............................................................................................................. 46\nCreating a Vault Using the Console .................................................................................................. 46\nCreating a Vault Using the AWS CLI ................................................................................................. 46\nRetrieving Vault Metadata ....................................................................................................................... 48\nRetrieving Vault Metadata Using Java ............................................................................................. 48\nRetrieving Vault Metadata Using .NET ............................................................................................. 51\nRetrieving Vault Metadata Using REST ............................................................................................ 54\nRetrieving Vault Metadata Using the AWS CLI ............................................................................... 54\nDownloading a Vault Inventory .............................................................................................................. 55\nAbout the Inventory ............................................................................................................................. 57\nDownloading a Vault Inventory Using Java .................................................................................... 57\nDownloading a Vault Inventory Using .NET .................................................................................... 65\nDownloading a Vault Inventory Using REST ................................................................................... 72\nDownloading a Vault Inventory Using the AWS CLI ...................................................................... 73\nConfiguring Vault Notifications ............................................................................................................... 75\nGeneral Concepts .................................................................................................................................. 76\nConfiguring Vault Notifications Using Java ..................................................................................... 78\nConfiguring Vault Notifications Using .NET ..................................................................................... 81\nConfiguring Vault Notifications Using the REST API ..................................................................... 84\nConfiguring Vault Notifications by Using the Console .................................................................. 84\nConfiguring Vault Notifications Using the CLI ................................................................................ 86\nDeleting a Vault .......................................................................................................................................... 87\nDeleting a Vault Using Java ............................................................................................................... 88\nDeleting a Vault Using .NET ............................................................................................................... 89\nDeleting a Vault Using REST .............................................................................................................. 91\nDeleting an Empty Vault by Using the Console ............................................................................. 91\nDeleting a Vault Using the AWS CLI ................................................................................................. 92\nTagging Vaults............................................................................................................................................ 95\nTagging Vaults by Using the Amazon S3 Glacier Console ............................................................ 96\nAPI Version 2012-06-01 iv\n\nAmazon S3 Glacier Developer Guide\nTagging Vaults by Using the AWS CLI .............................................................................................. 97\nTagging Vaults by Using the Amazon S3 Glacier API .................................................................... 98\nRelated Sections .................................................................................................................................... 98\nVault Lock.................................................................................................................................................... 99\nVault Locking Overview ....................................................................................................................... 99\nVault Locking by Using the API ....................................................................................................... 100\nVault Locking Using the CLI ............................................................................................................. 101\nVault Locking by Using the Console .............................................................................................. 103\nWorking with Archives ................................................................................................................ 106\nArchive Operations.................................................................................................................................. 107\nUploading an Archive ........................................................................................................................ 107\nFinding an Archive .............................................................................................................................. 107\nDownloading an Archive ................................................................................................................... 107\nDeleting an Archive ............................................................................................................................ 108\nUpdating an Archive .......................................................................................................................... 108\nMaintaining Client-Side Archive Metadata ......................................................................................... 108\nUploading an Archive .............................................................................................................................. 108\nOptions for Uploading an Archive .................................................................................................. 109\nUploading an Archive in a Single Operation ................................................................................ 110\nUploading Large Archives in Parts .................................................................................................. 120\nDownloading an Archive ........................................................................................................................ 137\nRetrieving Archives in Console ........................................................................................................ 138\nDownloading an Archive Using Java .............................................................................................. 142\nDownloading an Archive Using .NET .............................................................................................. 159\nDownloading an Archive by Using REST ....................................................................................... 175\nDownloading an Archive Using the AWS CLI ................................................................................ 176\nDeleting an Archive ................................................................................................................................. 179\nDeleting an Archive Using Java ....................................................................................................... 180\nDeleting an Archive Using .NET ....................................................................................................... 182\nDeleting an Archive Using REST ...................................................................................................... 185\nDeleting an Archive Using the AWS CLI ........................................................................................ 185\nUsing the AWS SDKs ................................................................................................................... 189\nAWS SDK Libraries for Java and .NET .................................................................................................. 189\nWhat Is the Low-Level API?",
      "start_idx": 301,
      "end_idx": 15500,
      "metadata": {
        "num_sentences": 6,
        "num_words": 768,
        "breakpoint_idx": 9,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2357937494913737
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_2",
      "text": "............................................................................................................. 189\nWhat Is the High-Level API? ............................................................................................................ 190\nWhen to Use the High-Level and Low-Level API ......................................................................... 190\nAPI Version 2012-06-01 v\n\nAmazon S3 Glacier Developer Guide\nWorking with AWS SDKs ........................................................................................................................ 190\nUsing the AWS SDK for Java ................................................................................................................. 192\nUsing the Low-Level API ................................................................................................................... 192\nUsing the High-Level API .................................................................................................................. 193\nRunning Java Examples Using Eclipse ........................................................................................... 194\nSetting the Endpoint ......................................................................................................................... 194\nUsing the AWS SDK for .NET ................................................................................................................. 195\nUsing the Low-Level API ................................................................................................................... 196\nUsing the High-Level API .................................................................................................................. 197\nRunning .NET Examples ..................................................................................................................... 197\nSetting the Endpoint ......................................................................................................................... 198\nCode examples............................................................................................................................. 199\nBasics.......................................................................................................................................................... 201\nHello Amazon S3 Glacier .................................................................................................................. 202\nActions .................................................................................................................................................. 203\nScenarios.................................................................................................................................................... 266\nArchive a file, get notifications, and initiate a job ....................................................................... 266\nGet archive content and delete the archive .................................................................................. 272\nSecurity ........................................................................................................................................ 278\nData Protection ........................................................................................................................................ 278\nData Encryption.................................................................................................................................. 279\nKey Management................................................................................................................................ 280\nInternetwork Traffic Privacy ............................................................................................................. 280\nIdentity and Access Management ........................................................................................................ 280\nAudience............................................................................................................................................... 281\nAuthenticating with identities ......................................................................................................... 282\nManaging access using policies ....................................................................................................... 285\nHow Amazon S3 Glacier works with IAM ...................................................................................... 287\nIdentity-based policy examples ....................................................................................................... 295\nResource-based policy examples ..................................................................................................... 302\nTroubleshooting .................................................................................................................................. 308\nAmazon S3 Glacier API Permissions Reference ............................................................................ 310\nLogging and Monitoring ......................................................................................................................... 318\nCompliance Validation ............................................................................................................................ 319\nResilience ................................................................................................................................................... 321\nInfrastructure Security............................................................................................................................ 322\nAPI Version 2012-06-01 vi\n\nAmazon S3 Glacier Developer Guide\nVPC Endpoints..................................................................................................................................... 322\nData Retrieval Policies ................................................................................................................ 323\nChoosing an S3 Glacier Data Retrieval Policy .................................................................................... 323\nFree Tier Only Policy ......................................................................................................................... 324\nMax Retrieval Rate Policy ................................................................................................................. 324\nNo Retrieval Limit Policy .................................................................................................................. 325\nUsing the S3 Glacier Console to Set Up a Data Retrieval Policy .................................................... 325\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval Policy ............................................ 326\nUsing the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy ............................. 326\nUsing the AWS SDKs to Set Up a Data Retrieval Policy ............................................................. 326\nTagging Resources ....................................................................................................................... 327\nTagging Basics .......................................................................................................................................... 327\nTag Restrictions ........................................................................................................................................ 328\nTracking Costs Using Tagging ............................................................................................................... 328\nManaging Access Control with Tagging .............................................................................................. 328\nRelated Sections ....................................................................................................................................... 329\nAudit Logging with AWS CloudTrail ........................................................................................... 330\nAmazon S3 Glacier Information in CloudTrail ................................................................................... 330\nUnderstanding Amazon S3 Glacier Log File Entries ......................................................................... 331\nAPI Reference............................................................................................................................... 335\nCommon Request Headers .................................................................................................................... 336\nCommon Response Headers .................................................................................................................. 339\nSigning Requests...................................................................................................................................... 339\nExample Signature Calculation ........................................................................................................ 341\nCalculating Signatures for the Streaming Operations ................................................................ 342\nComputing Checksums ........................................................................................................................... 345\nTree Hash Example 1: Uploading an archive in a single request .............................................. 346\nTree Hash Example 2: Uploading an archive using a multipart upload ................................... 347\nComputing the Tree Hash of a File ................................................................................................ 348\nReceiving Checksums When Downloading Data .......................................................................... 358\nError Responses ........................................................................................................................................ 360\nExample 1: Describe Job request with a job ID that does not exist ......................................... 363\nExample 2: List Jobs request with an invalid value for the request parameter ...................... 364\nVault Operations...................................................................................................................................... 365\nAbort Vault Lock ................................................................................................................................. 366\nAdd Tags To Vault .............................................................................................................................. 369\nAPI Version 2012-06-01 vii\n\nAmazon S3 Glacier Developer Guide\nCreate Vault ......................................................................................................................................... 372\nComplete Vault Lock ......................................................................................................................... 375\nDelete Vault ......................................................................................................................................... 378\nDelete Vault Access Policy ................................................................................................................ 381\nDelete Vault Notifications ................................................................................................................. 384\nDescribe Vault..................................................................................................................................... 386\nGet Vault Access Policy ..................................................................................................................... 390\nGet Vault Lock ..................................................................................................................................... 394\nGet Vault Notifications ...................................................................................................................... 398\nInitiate Vault Lock .............................................................................................................................. 402\nList Tags For Vault ............................................................................................................................. 406\nList Vaults............................................................................................................................................. 409\nRemove Tags From Vault .................................................................................................................. 416\nSet Vault Access Policy ...................................................................................................................... 419\nSet Vault Notification Configuration .............................................................................................. 422\nArchive Operations.................................................................................................................................. 426\nDelete Archive ..................................................................................................................................... 426\nUpload Archive.................................................................................................................................... 429\nMultipart Upload Operations ................................................................................................................ 434\nAbort Multipart Upload .................................................................................................................... 435\nComplete Multipart Upload ............................................................................................................. 437\nInitiate Multipart Upload .................................................................................................................. 442\nList Parts ............................................................................................................................................... 447\nList Multipart Uploads ....................................................................................................................... 454\nUpload Part .......................................................................................................................................... 461\nJob Operations......................................................................................................................................... 467\nDescribe Job ........................................................................................................................................ 467\nGet Job Output ................................................................................................................................... 478\nInitiate Job ........................................................................................................................................... 489\nList Jobs ................................................................................................................................................ 500\nData Types Used in Job Operations .................................................................................................... 510\nCSVInput ............................................................................................................................................... 510\nCSVOutput............................................................................................................................................ 512\nEncryption............................................................................................................................................ 513\nGlacierJobDescription........................................................................................................................ 514\nGrant...................................................................................................................................................... 518\nAPI Version 2012-06-01 viii\n\nAmazon S3 Glacier Developer Guide\nGrantee ................................................................................................................................................. 518\nInputSerialization................................................................................................................................ 519\nInventoryRetrievalJobInput .............................................................................................................. 520\njobParameters ..................................................................................................................................... 521\nOutputLocation................................................................................................................................... 524\nOutputSerialization ............................................................................................................................ 525\nS3Location ............................................................................................................................................ 525\nSelectParameters ................................................................................................................................ 527\nData Retrieval Operations ...................................................................................................................... 528\nGet Data Retrieval Policy .................................................................................................................. 528\nList Provision Capacity ...................................................................................................................... 532\nPurchase Provisioned Capacity ........................................................................................................ 536\nSet Data Retrieval Policy .................................................................................................................. 539\nDocument History........................................................................................................................ 545\nEarlier Updates......................................................................................................................................... 546\nAWS Glossary ............................................................................................................................... 548\nAPI Version 2012-06-01 ix\n\nAmazon S3 Glacier Developer Guide\nThis page is only for existing customers of the S3 Glacier service using Vaults and the original\nREST API from 2012. If you're looking for archival storage solutions we suggest using the S3 Glacier storage classes\nin Amazon S3, S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive.",
      "start_idx": 15501,
      "end_idx": 34424,
      "metadata": {
        "num_sentences": 3,
        "num_words": 787,
        "breakpoint_idx": 12,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.38431493441263836
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_3",
      "text": "To learn more about these storage options, see S3 Glacier storage classes and Long-term\ndata storage using S3 Glacier storage classes in the Amazon S3 User Guide. These storage classes\nuse the Amazon S3 API, are available in all regions, and can be managed within the Amazon S3\nconsole. They offer features like Storage Cost Analysis, Storage Lens, advanced optional encryption\nfeatures, and more. API Version 2012-06-01 x\n\nAmazon S3 Glacier Developer Guide\nWhat Is Amazon S3 Glacier? If you're currently using the Amazon S3 Glacier (S3 Glacier) service and want to learn more, you'll\nfind the information that you need in this guide. S3 Glacier is a secure and durable service for low-\ncost data archiving and long-term backup using vaults. For more information about S3 Glacier\nservice pricing, see S3 Glacier pricing. Topics\n\u2022 Do You Currently Use S3 Glacier? \u2022 Amazon S3 Glacier Data Model\n\u2022 Supported Operations in S3 Glacier\n\u2022 Accessing Amazon S3 Glacier\nDo You Currently Use S3 Glacier?",
      "start_idx": 34425,
      "end_idx": 36766,
      "metadata": {
        "num_sentences": 9,
        "num_words": 165,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5917693773905436
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_4",
      "text": "Note\nThis section is about the S3 Glacier service. If you currently use the S3 Glacier storage\nclasses (S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive), see Storage classes for archiving objects in the Amazon S3 User Guide. If you currently use the S3 Glacier service and want to learn more, we recommend that you begin\nby reading the following sections:\n\u2022 What is Amazon S3 Glacier \u2013 The rest of this section describes the underlying data model, the\noperations it supports, and the AWS SDKs that you can use to interact with the service. \u2022 Getting Started \u2013 The Getting Started with Amazon S3 Glacier section walks you through the\nprocess of creating a vault, uploading archives, creating jobs to download archives, retrieving the\njob output, and deleting archives. Important\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI)\nDo You Currently Use S3 Glacier? API Version 2012-06-01 1\n\nAmazon S3 Glacier Developer Guide\nor write code. There is no console support for archive operations. For example, to upload\ndata, such as photos, videos, and other documents, you must either use the AWS CLI or\nwrite code to make requests, by using either the REST API directly or by using the AWS\nSDKs.",
      "start_idx": 34425,
      "end_idx": 36766,
      "metadata": {
        "num_sentences": 9,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5188386705186632
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_5",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For\nexamples of using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with\nthe AWS Command Line Interface. Beyond the getting started section, you'll probably want to learn more about S3 Glacier\noperations. The following sections provide detailed information about working with S3 Glacier by\nusing the REST API and the AWS SDKs for Java and Microsoft .NET:\n\u2022 Using the AWS SDKs with Amazon S3 Glacier\nThis section provides an overview of the AWS SDKs used in various code examples in this guide. A review of this section will help when reading the following sections. It includes an overview\nof the high-level and the low-level APIs that these SDKs offer, when to use them, and common\nsteps for running the code examples provided in this guide. \u2022 Working with Vaults in Amazon S3 Glacier\nThis section provides details of various vault operations, such as creating a vault, retrieving vault\nmetadata, using jobs to retrieve vault inventory, and configuring vault notifications. In addition\nto using the S3 Glacier console, you can use the AWS SDKs for various vault operations. This\nsection describes the API and provides working samples by using the AWS SDK for Java and the\nAWS SDK for .NET.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 235,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40745552910698785
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_6",
      "text": "\u2022 Working with Archives in Amazon S3 Glacier\nThis section provides details of archive operations, such as uploading an archive in a single\nrequest or using a multipart upload operation to upload large archives in parts. The section also\nexplains how to create jobs to download archives asynchronously. The section provides examples\nby using the AWS SDK for Java and the AWS SDK for .NET. \u2022 API Reference for Amazon S3 Glacier\nDo You Currently Use S3 Glacier? API Version 2012-06-01 2\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier is a RESTful service. This section describes the REST operations, including the syntax,\nand example requests and responses for all the operations. The AWS SDK libraries wrap this API,\nsimplifying your programming tasks. Amazon S3 Glacier Data Model\nThe Amazon S3 Glacier data model core components include vaults and archives. S3 Glacier is\na REST-based web service. In terms of REST, vaults and archives are the resources.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 156,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42418348524305555
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_7",
      "text": "In addition,\nthe S3 Glacier data model includes job and notification-configuration resources. These resources\ncomplement the core resources. Topics\n\u2022 Vault\n\u2022 Archive\n\u2022 Job\n\u2022 Notification Configuration\nVault\nIn S3 Glacier, a vault is a container for storing archives. A vault is similar to an Amazon S3 bucket. When you create a vault, you specify a name and choose an AWS Region where you want to create\nthe vault. Each vault resource has a unique address. The general form is:\nhttps://region-specific-endpoint/account-id/vaults/vault-name\nFor example, suppose that you create a vault (examplevault) in the US West (Oregon) Region in\nyour account with the ID 111122223333. You can address this vault by using the following URI:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault\nHere is what the various components of the URI mean:\n\u2022 glacier.us-west-2.amazonaws.com identifies the US West (Oregon) Region. \u2022 111122223333 is the AWS account ID that owns the vault. Data Model API Version 2012-06-01 3\n\nAmazon S3 Glacier Developer Guide\n\u2022 vaults refers to the collection of vaults that are owned by the AWS account.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45511275397406686
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_8",
      "text": "\u2022 examplevault identifies a specific vault in the vaults collection. An AWS account can create vaults in any supported AWS Region. For list of supported AWS\nRegions, see Accessing Amazon S3 Glacier. Within a Region, an account must use unique vault\nnames. An AWS account can create same-named vaults in different Regions. You can store an unlimited number of archives in a vault. Depending on your business or\napplication needs, you can store these archives in one vault or multiple vaults. S3 Glacier supports various vault operations. Vault operations are Region-specific. For example,\nwhen you create a vault, you create it in a specific Region.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 105,
        "chunk_type": "semantic_split",
        "coherence_score": 0.48802303738064234
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_9",
      "text": "When you request a vault list, you\nrequest it from a specific AWS Region, and the resulting list includes only vaults created in that\nspecific Region. Archive\nAn archive can be any data, such as a photo, video, or document. An archive is similar to an Amazon\nS3 object, and is the base unit of storage in S3 Glacier. Each archive has a unique ID and an\noptional description. You can specify this optional description only during the upload of an archive. S3 Glacier assigns the archive an ID, which is unique in the AWS Region in which the archive is\nstored. Each archive has a unique address. The general form is as follows:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/archives/archive-id\nThe following is an example URI of an archive stored in the examplevault vault in the US West\n(Oregon) Region in account 111122223333:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/\nexamplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can store an unlimited number of archives in a vault. Job\nAn S3 Glacier job can retrieve an archive, or get an inventory of a vault. Archive API Version 2012-06-01 4\n\nAmazon S3 Glacier Developer Guide\nRetrieving archives and vault inventories (lists of archives) are asynchronous operations in S3\nGlacier, in which you first initiate a job, and then download the job output after S3 Glacier\ncompletes the job.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4858863830566406
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_10",
      "text": "Note\nS3 Glacier offers a cold-storage data-archival solution. If your application needs a storage\nsolution that requires real-time data retrieval, you might consider using Amazon S3. For\nmore information, see Amazon Simple Storage Service (Amazon S3). To initiate a vault inventory job, you provide a vault name. Archive retrieval jobs require both the\nvault name and the archive ID. You can also provide an optional job description to help identify the\njobs. Archive retrieval and vault inventory jobs are associated with a vault. A vault can have multiple jobs\nin progress at any point in time. When you send a job request (initiate a job), S3 Glacier returns to\nyou a job ID to track the job. Each job is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/jobs/job-id\nThe following is an example of a job associated with an examplevault vault in the US West\n(Oregon) Region in account 111122223333.\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault/jobs/\nHkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nFor each job, S3 Glacier maintains information, such as the job type, description, creation date,\ncompletion date, and job status.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3871043735080295
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_11",
      "text": "You can obtain information about a specific job or obtain a list\nof all your jobs associated with a vault. The list of jobs that S3 Glacier returns includes all the in-\nprogress and recently finished jobs. Notification Configuration\nBecause jobs take time to run, S3 Glacier supports a notification mechanism to notify you when a\njob is completed. You can configure a vault to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when a job is completed. You can specify one Amazon SNS topic per\nvault in the notification configuration. Notification Configuration API Version 2012-06-01 5\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier stores the notification configuration as a JSON document. The following is an example\nvault notification configuration:\n{\n\"Topic\": \"arn:aws:sns:us-west-2:111122223333:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nNotification configurations are associated with vaults; you can have one for each vault. Each\nnotification configuration resource is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/notification-\nconfiguration\nS3 Glacier supports operations to set, get, and delete a notification configuration. When you delete\na notification configuration, no notifications are sent when any data retrieval operation on the\nvault is completed. Supported Operations in S3 Glacier\nTo work with vaults and archives (see Amazon S3 Glacier Data Model), Amazon S3 Glacier supports\na set of operations.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4568327162000868
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_12",
      "text": "Among all the supported operations, only the following operations are\nasynchronous:\n\u2022 Retrieving an archive\n\u2022 Retrieving a vault inventory (list of archives)\nThese operations require you to first initiate a job and then download the job output. The following\nsections summarize the S3 Glacier operations. Vault Operations\nS3 Glacier provides operations to create and delete vaults. You can obtain a vault description for a\nspecific vault or for all vaults in an AWS Region. The vault description provides information, such\nas the creation date, the number of archives in the vault, the total size in bytes used by all the\narchives in the vault, and the date that S3 Glacier generated the vault inventory. S3 Glacier also\nprovides operations to set, retrieve, and delete a notification configuration on the vault. For more\ninformation, see Working with Vaults in Amazon S3 Glacier. Supported Operations API Version 2012-06-01 6\n\nAmazon S3 Glacier Developer Guide\nArchive Operations\nS3 Glacier provides operations for you to upload and delete archives. You cannot update an\nexisting archive; you must delete the existing archive and upload a new archive. Each time that you\nupload an archive, S3 Glacier generates a new archive ID.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4558289845784505
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_13",
      "text": "For more information, see Working with\nArchives in Amazon S3 Glacier. Jobs\nYou can initiate an S3 Glacier job to perform a retrieval on an archive or get an inventory of a vault. The following are the types of S3 Glacier jobs:\n\u2022 archive-retrieval \u2013 Retrieve an archive. For more information, see Downloading an Archive in S3 Glacier. \u2022 inventory-retrieval \u2013 Inventory a vault. For more information, see Downloading a Vault Inventory in Amazon S3 Glacier. Accessing Amazon S3 Glacier\nAmazon S3 Glacier is a RESTful web service that uses HTTP and HTTPS as a transport protocol and\nJavaScript Object Notation (JSON) as a message-serialization format. Your application code can\nmake requests directly to the S3 Glacier web service API. When using the REST API directly, you\nmust write the necessary code to sign and authenticate your requests. For more information about\nthe API, see API Reference for Amazon S3 Glacier.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 151,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5339633093939887
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_14",
      "text": "Alternatively, you can simplify application development by using the AWS SDKs that wrap the S3\nGlacier REST API calls. You provide your credentials, and these libraries take care of authentication\nand request signing. For more information about using the AWS SDKs, see Using the AWS SDKs\nwith Amazon S3 Glacier. S3 Glacier also provides a console. However, all archive and job operations require you to write\ncode and make requests by using either the REST API directly or the AWS SDK wrapper libraries. To\naccess the S3 Glacier console, go to S3 Glacier Console. Archive Operations API Version 2012-06-01 7\n\nAmazon S3 Glacier Developer Guide\nRegions and Endpoints\nYou create a vault in a specific AWS Region. You always send your S3 Glacier requests to an\nendpoint specific to an AWS Region. For a list of the AWS Regions supported by S3 Glacier, see\nAmazon S3 Glacier endpoints and quotas in the AWS General Reference. Regions and Endpoints API Version 2012-06-01 8\n\nAmazon S3 Glacier Developer Guide\nGetting Started with Amazon S3 Glacier\nYou can get started with Amazon S3 Glacier (S3 Glacier) by working with vaults and archives.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5364340464274089
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_15",
      "text": "A\nvault is a container for storing archives, and an archive is any object, such as a photo, video, or\ndocument, that you store in a vault. An archive is the base unit of storage in S3 Glacier. This getting\nstarted exercise provides instructions for you to explore basic S3 Glacier operations on vaults and\narchives. For more information about these resources, see the Amazon S3 Glacier Data Model\nsection. In the getting started exercise, you will create a vault, upload and download an archive, and then\ndelete the archive and the vault. You can do all these operations programmatically. However, the\ngetting started exercise uses the S3 Glacier management console to create and delete a vault. For uploading and downloading an archive, this getting started section uses the high-level API\nfor the AWS SDK for Java and the AWS SDK for .NET. The high-level API provides a simplified\nprogramming experience when working with S3 Glacier. For more information about using the\nhigh-level API with the AWS SDKs, see Using the AWS SDKs with Amazon S3 Glacier. Important\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.",
      "start_idx": 36767,
      "end_idx": 49941,
      "metadata": {
        "num_sentences": 14,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35976066170157966
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_16",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. This getting started exercise provides code examples in Java and C# for you to upload and\ndownload an archive. The last section of the getting started exercise provides steps where you can\nlearn more about the developer experience with S3 Glacier. Topics\n\u2022 Step 1: Before You Begin with S3 Glacier\nAPI Version 2012-06-01 9\n\nAmazon S3 Glacier Developer Guide\n\u2022 Step 2: Create a Vault in S3 Glacier\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Step 4: Download an Archive from a Vault in S3 Glacier\n\u2022 Step 5: Delete an Archive from a Vault in S3 Glacier\n\u2022 Step 6: Delete a Vault in S3 Glacier\n\u2022 Where Do I Go From Here? Step 1: Before You Begin with S3 Glacier\nBefore you can start with this exercise, you must sign up for an AWS account (if you don't already\nhave one), and then download one of the AWS SDKs. See the following sections for instructions. Topics\n\u2022 Set Up an AWS account and an Administrator User\n\u2022 Download the Appropriate AWS SDK\nSet Up an AWS account and an Administrator User\nIf you have not already done so, you must sign up for an AWS account and create an administrator\nuser in the account. To complete the setup, follow the instructions in the following topics. Set Up an AWS account and Create an Administrator User\nSign up for AWS\nWhen you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up\nfor all services in AWS, including S3 Glacier. You are charged only for the services that you use. For\nmore information about S3 Glacier usage rates, see the Amazon S3 Glacier pricing page. If you already have an AWS account, skip to Download the Appropriate AWS SDK.",
      "start_idx": 49942,
      "end_idx": 51851,
      "metadata": {
        "num_sentences": 14,
        "num_words": 353,
        "breakpoint_idx": 158,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3402470179966518
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_17",
      "text": "If you don't have\nan AWS account, use the following procedure to create one. If you do not have an AWS account, complete the following steps to create one. Step 1: Before You Begin API Version 2012-06-01 10\n\nAmazon S3 Glacier Developer Guide\nTo sign up for an AWS account\n1. Open https://portal.aws.amazon.com/billing/signup. 2.",
      "start_idx": 51852,
      "end_idx": 52180,
      "metadata": {
        "num_sentences": 5,
        "num_words": 54,
        "breakpoint_idx": 163,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4143860340118408
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_18",
      "text": "Follow the online instructions. Part of the sign-up procedure involves receiving a phone call and entering a verification code\non the phone keypad. When you sign up for an AWS account, an AWS account root user is created. The root user\nhas access to all AWS services and resources in the account. As a security best practice, assign\nadministrative access to a user, and use only the root user to perform tasks that require root\nuser access. To create an administrator user, choose one of the following options. Choose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\nIn IAM Use short-term Following the instructions Configure programmatic\nIdentity credentials to access in Getting started in the access by Configuring the\nCenter AWS. AWS IAM Identity Center AWS CLI to use AWS IAM\nUser Guide. Identity Center in the AWS\n(RecommenT his aligns with the\nCommand Line Interface User\nded) security best practices\nGuide. . For information\nabout best practices\n, see Security best\npractices in IAM in the\nIAM User Guide.",
      "start_idx": 52181,
      "end_idx": 55770,
      "metadata": {
        "num_sentences": 11,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2842241807417436
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_19",
      "text": "In IAM Use long-term Following the instructions Configure programmatic\ncredentials to access in Creating your first IAM access by Managing access\nAWS. Set Up an AWS account API Version 2012-06-01 11\n\nAmazon S3 Glacier Developer Guide\nChoose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\n(Not admin user and user group keys for IAM users in the IAM\nrecommend in the IAM User Guide. User Guide. ed)\nDownload the Appropriate AWS SDK\nTo try the getting started exercise, you must decide which programming language you want to use,\nand then download the appropriate AWS SDK for your development platform. The getting started exercise provides examples in Java and C#. Downloading the AWS SDK for Java\nTo test the Java examples in this developer guide, you need the AWS SDK for Java. You have the\nfollowing download options:\n\u2022 If you are using Eclipse, you can download and install the AWS Toolkit for Eclipse by using the\nupdate site http://aws.amazon.com/eclipse/. For more information, see AWS Toolkit for Eclipse. \u2022 If you are using any other IDE to create your application, download the AWS SDK for Java. Downloading the AWS SDK for .NET\nTo test the C# examples in this developer guide, you need the AWS SDK for .NET. You have the\nfollowing download options:\n\u2022 If you are using Visual Studio, you can install both the AWS SDK for .NET and the AWS Toolkit for\nVisual Studio.",
      "start_idx": 52181,
      "end_idx": 55770,
      "metadata": {
        "num_sentences": 11,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4267064874822443
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_20",
      "text": "The toolkit provides AWS Explorer for Visual Studio and project templates that you\ncan use for development. To download the AWS SDK for .NET, go to http://aws.amazon.com/\nsdkfornet. By default, the installation script installs both the AWS SDK and the AWS Toolkit for\nVisual Studio. To learn more about the toolkit, see the AWS Toolkit for Visual Studio User Guide. Download the Appropriate AWS SDK API Version 2012-06-01 12\n\nAmazon S3 Glacier Developer Guide\n\u2022 If you are using any other IDE to create your application, you can use the same link provided in\nthe preceding step and install only the AWS SDK for .NET. Step 2: Create a Vault in S3 Glacier\nA vault is a container for storing archives. Your first step is to create a vault in one of the supported\nAWS Regions. For a list of the AWS Regions that are supported by Amazon S3 Glacier, see Amazon\nS3 Glacier endpoints and quotas in the AWS General Reference. You can create vaults programmatically or by using the S3 Glacier console. This section uses the\nconsole to create a vault. To create a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 52181,
      "end_idx": 55770,
      "metadata": {
        "num_sentences": 13,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3315129891420022
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_21",
      "text": "In the left navigation pane, choose Vaults. 3. Choose Create vault. The Create vault page opens. 4. Under Select a Region, select an AWS Region from the Region selector. Your vault will be\nlocated in the Region that you select. 5. For Vault name, enter a name for your vault. The following are the vault-naming requirements:\n\u2022 A vault name must be unique within an AWS account and the AWS Region in which the vault\nis created. \u2022 A vault name must be between 1 and 255 characters long. \u2022 A vault name can contain only the following characters: a\u2013z, A\u2013Z, 0\u20139, _ (underscore), -\n(hyphen), and . (period).",
      "start_idx": 55771,
      "end_idx": 56372,
      "metadata": {
        "num_sentences": 13,
        "num_words": 109,
        "breakpoint_idx": 211,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31462728060208833
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_22",
      "text": "6. Under Event notifications, to turn on or off notifications on a vault for when a job is\ncompleted, choose one of the following settings:\n\u2022 Turn off notifications \u2013 Notifications are turned off, and notifications are not sent to an\nAmazon Simple Notification Service (Amazon SNS) topic when a specified job is completed. Step 2: Create a Vault API Version 2012-06-01 13\n\nAmazon S3 Glacier Developer Guide\n\u2022 Turn on notifications \u2013 Notifications are turned on, and notifications are sent to the\nprovided Amazon SNS topic when a specified job is completed. If you chose Turn on notifications, see Configuring Vault Notifications by Using the Amazon\nS3 Glacier Console. 7. If the AWS Region and vault name are correct, then choose Create vault. Your new vault is now listed on the Vaults page in the S3 Glacier console. Step 3: Upload an Archive to a Vault in S3 Glacier\nIn this step, you'll upload a sample archive to the vault that you created in the preceding step (see\nStep 2: Create a Vault in S3 Glacier). Depending on the development platform that you're using,\nchoose one of the links at the end of this section. Important\nAny archive operation, such as upload, download, or deletion, requires you to use the\nAWS Command Line Interface (CLI) or write code. There is no console support for archive\noperations. For example, to upload data, such as photos, videos, and other documents, you\nmust either use the AWS CLI or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs.",
      "start_idx": 56373,
      "end_idx": 57890,
      "metadata": {
        "num_sentences": 12,
        "num_words": 265,
        "breakpoint_idx": 223,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2590995557380445
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_23",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. An archive is any object, such as a photo, video, or document, that you store in a vault. An archive\nis the base unit of storage in S3 Glacier. You can upload an archive in a single request. For large\narchives, S3 Glacier provides a multipart upload API operation that enables you to upload an\narchive in parts. In this getting started section, you upload a sample archive in a single request. For this exercise,\nyou specify a file that is smaller in size. For larger files, multipart upload is suitable.",
      "start_idx": 57891,
      "end_idx": 59990,
      "metadata": {
        "num_sentences": 10,
        "num_words": 142,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34231974283854166
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_24",
      "text": "For more\ninformation, see Uploading Large Archives in Parts (Multipart Upload). Step 3: Upload an Archive to a Vault API Version 2012-06-01 14\n\nAmazon S3 Glacier Developer Guide\nTopics\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for .NET\nUpload an Archive to a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following Java code example uses the high-level API of the AWS SDK for Java to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class. \u2022 The example uses the upload API operation of the ArchiveTransferManager class from the\nhigh-level API of the AWS SDK for Java. \u2022 The example uses the US West (Oregon) Region (us-west-2). For step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the name of the archive file that\nyou want to upload. Note\nAmazon S3 Glacier keeps an inventory of all the archives in your vaults. When you upload\nthe archive in the following example, it will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday.",
      "start_idx": 57891,
      "end_idx": 59990,
      "metadata": {
        "num_sentences": 10,
        "num_words": 237,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27882999844021267
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_25",
      "text": "SDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run in\nthe AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nUpload an Archive by Using Java API Version 2012-06-01 15\n\nAmazon S3 Glacier Developer Guide\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.io.File;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html\n*/\npublic class UploadArchive {\nstatic final int ONE_MB = 1024 * 1024;\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <strPath> <vaultName>\\s\nWhere:\nstrPath - The path to the archive to upload (for example, C:\\\\AWS\n\\\\test.pdf). vaultName - The name of the vault. \"\"\";\nif (args.length != 2) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString strPath = args[0];\nString vaultName = args[1];\nFile myFile = new File(strPath);\nPath path = Paths.get(strPath);\nUpload an Archive by Using Java API Version 2012-06-01 16\n\nAmazon S3 Glacier Developer Guide\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nString archiveId = uploadContent(glacier, path, vaultName, myFile);\nSystem.out.println(\"The ID of the archived item is \" + archiveId);\nglacier.close();\n}\npublic static String uploadContent(GlacierClient glacier, Path path, String\nvaultName, File myFile) {\n// Get an SHA-256 tree hash value. String checkVal = computeSHA256(myFile);\ntry {\nUploadArchiveRequest uploadRequest = UploadArchiveRequest.builder()\n.vaultName(vaultName)\n.checksum(checkVal)\n.build();\nUploadArchiveResponse res = glacier.uploadArchive(uploadRequest, path);\nreturn res.archiveId();\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\nreturn \"\";\n}\nprivate static String computeSHA256(File inputFile) {\ntry {\nbyte[] treeHash = computeSHA256TreeHash(inputFile);\nSystem.out.printf(\"SHA-256 tree hash = %s\\n\", toHex(treeHash));\nreturn toHex(treeHash);\n} catch (IOException ioe) {\nSystem.err.format(\"Exception when reading from file %s: %s\", inputFile,\nioe.getMessage());\nSystem.exit(-1);\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256:\n%s\", nsae.getMessage());\nSystem.exit(-1);\nUpload an Archive by Using Java API Version 2012-06-01 17\n\nAmazon S3 Glacier Developer Guide\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB. */\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\n}\nUpload an Archive by Using Java API Version 2012-06-01 18\n\nAmazon S3 Glacier Developer Guide\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums. */\npublic static byte[] computeSHA256TreeHash(byte[][] chunkSHA256Hashes)\nthrows NoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.length > 1) {\nint len = prevLvlHashes.length / 2;\nif (prevLvlHashes.length % 2 != 0) {\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.length; i = i + 2, j++) {\n// If there are at least two elements remaining.",
      "start_idx": 59991,
      "end_idx": 68979,
      "metadata": {
        "num_sentences": 10,
        "num_words": 592,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29998419019911027
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_26",
      "text": "if (prevLvlHashes.length - i > 1) {\n// Calculate a digest of the concatenated nodes. md.reset();\nmd.update(prevLvlHashes[i]);\nmd.update(prevLvlHashes[i + 1]);\ncurrLvlHashes[j] = md.digest();\n} else { // Take care of the remaining odd chunk\nUpload an Archive by Using Java API Version 2012-06-01 19\n\nAmazon S3 Glacier Developer Guide\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (byte datum : data) {\nString hex = Integer.toHexString(datum & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero. sb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for Java 2.x API Reference. Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint. \u2022 The code example uses the US West (Oregon) Region (us-west-2). Upload an Archive by Using .NET API Version 2012-06-01 20\n\nAmazon S3 Glacier Developer Guide\n\u2022 The example uses the Upload API operation of the ArchiveTransferManager class to upload\nyour archive. For small archives, this operation uploads the archive directly to S3 Glacier. For\nlarger archives, this operation uses the multipart upload API operation in S3 Glacier to split\nthe upload into multiple parts for better error recovery, if any errors are encountered while\nstreaming the data to S3 Glacier. For step-by-step instructions on how to run the following example, see Running Code Examples.",
      "start_idx": 59991,
      "end_idx": 68979,
      "metadata": {
        "num_sentences": 10,
        "num_words": 298,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34347941080729166
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_27",
      "text": "You must update the code as shown with the name of your vault and the name of the archive file\nto upload. Note\nS3 Glacier keeps an inventory of all the archives in your vaults. When you upload the\narchive in the following example, the archive will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday. Example \u2014 Uploading an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to\nupload ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new\nArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive. Upload an Archive by Using .NET API Version 2012-06-01 21\n\nAmazon S3 Glacier Developer Guide\nstring archiveId = manager.Upload(vaultName, \"getting started archive\ntest\", archiveToUpload).ArchiveId;\nConsole.WriteLine(\"Copy and save the following Archive ID for the next\nstep. \");\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nStep 4: Download an Archive from a Vault in S3 Glacier\nIn this step, you'll download the sample archive that you uploaded previously in Step 3: Upload an\nArchive to a Vault in S3 Glacier. Important\nAmazon S3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.",
      "start_idx": 59991,
      "end_idx": 68979,
      "metadata": {
        "num_sentences": 11,
        "num_words": 320,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3964456384832209
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_28",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. In general, retrieving your data from S3 Glacier is a two-step process:\n1. Initiate a retrieval job.",
      "start_idx": 68980,
      "end_idx": 69362,
      "metadata": {
        "num_sentences": 5,
        "num_words": 68,
        "breakpoint_idx": 279,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.37012834548950196
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_29",
      "text": "2. After the job is completed, download the bytes of data. Step 4: Download an Archive from a Vault API Version 2012-06-01 22\n\nAmazon S3 Glacier Developer Guide\nTo retrieve an archive from S3 Glacier, you first initiate a job. After the job is completed, you\ndownload the data. For more information about archive retrievals, see Retrieving S3 Glacier\nArchives Using AWS Console. The access time of your request depends on the retrieval option that you choose: Expedited,\nStandard, or Bulk retrievals. For all but the largest archives (250 MB+), archives accessed by using\nExpedited retrievals are typically made available within 1\u20135 minutes. Archives retrieved by using\nStandard retrievals typically are available between 3\u20135 hours. Bulk retrievals typically are available\nwithin 5\u201312 hours. For more information about the various retrieval options, see the S3 Glacier\nFAQ. For information about data retrieval charges, see the S3 Glacier pricing page. The code examples shown in the following topics initiate the job, wait for it to be completed, and\nthen download the archive's data. Topics\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor Java\nThe following Java code example uses the high-level API of the AWS SDK for Java to download the\narchive that you uploaded in the previous step.",
      "start_idx": 69363,
      "end_idx": 74786,
      "metadata": {
        "num_sentences": 13,
        "num_words": 248,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3818311446752304
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_30",
      "text": "In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class. \u2022 The code uses the US West (Oregon) Region (us-west-2) to match the location where you\ncreated the vault in Step 2: Create a Vault in S3 Glacier. \u2022 The example uses the download API operation of the ArchiveTransferManager class from\nthe high-level API of the AWS SDK for Java. The example creates an Amazon Simple Notification\nService (Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. If you created an AWS Identity and Access Management (IAM) admin\nuser as instructed in Step 1: Before You Begin with S3 Glacier, your user has the necessary IAM\npermissions for the creation and use of the Amazon SNS topic and Amazon SQS queue. Download an Archive by Using Java API Version 2012-06-01 23\n\nAmazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier. Example \u2014 Downloading an Archive by Using the AWS SDK for Java\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class AmazonGlacierDownloadArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nDownload an Archive by Using Java API Version 2012-06-01 24\n\nAmazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to download the\narchive that you uploaded previously in Upload an Archive to a Vault in S3 Glacier by Using the\nAWS SDK for .NET. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint. \u2022 The code example uses the US West (Oregon) Region (us-west-2) to match the location where\nyou created the vault previously in Step 2: Create a Vault in S3 Glacier. \u2022 The example uses the Download API operation of the ArchiveTransferManager class to\ndownload your archive. The example creates an Amazon Simple Notification Service (Amazon\nSNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is subscribed to that\ntopic. If you created an AWS Identity and Access Management (IAM) admin user as instructed in\nStep 1: Before You Begin with S3 Glacier, your user has the necessary IAM permissions for the\ncreation and use of the Amazon SNS topic and Amazon SQS queue. \u2022 The example then initiates the archive retrieval job and polls the queue for the archive to be\navailable.",
      "start_idx": 69363,
      "end_idx": 74786,
      "metadata": {
        "num_sentences": 14,
        "num_words": 551,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43035469474373284
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_31",
      "text": "When the archive is available, the download begins. For information about retrieval\ntimes, see Archive Retrieval Options. For step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier. Example \u2014 Download an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nDownload an Archive by Using .NET API Version 2012-06-01 25\n\nAmazon S3 Glacier Developer Guide\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string downloadFilePath = \"*** Provide the file name and path to where\nto store the download ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new\nArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nvar options = new DownloadOptions();\noptions.StreamTransferProgress +=\nArchiveDownloadHighLevel_GettingStarted.progress;\n// Download an archive. Console.WriteLine(\"Intiating the archive retrieval job and then polling\nSQS queue for the archive to be available. \");\nConsole.WriteLine(\"Once the archive is available, downloading will\nbegin. \");\nmanager.Download(vaultName, archiveId, downloadFilePath, options);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic int currentPercentage = -1;\nstatic void progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != currentPercentage)\n{\ncurrentPercentage = args.PercentDone;\nDownload an Archive by Using .NET API Version 2012-06-01 26\n\nAmazon S3 Glacier Developer Guide\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nStep 5: Delete an Archive from a Vault in S3 Glacier\nIn this step, you'll delete the sample archive that you uploaded in Step 3: Upload an Archive to a\nVault in S3 Glacier. Important\nYou cannot delete an archive by using the Amazon S3 Glacier console. Any archive\noperation, such as upload, download, or deletion, requires you to use the AWS Command\nLine Interface (CLI) or write code.",
      "start_idx": 74787,
      "end_idx": 82071,
      "metadata": {
        "num_sentences": 10,
        "num_words": 332,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4087279425726997
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_32",
      "text": "To upload data, such as photos, videos, and other\ndocuments, you must either use the AWS CLI or write code to make requests, by using\neither the REST API directly or by using the AWS SDKs. To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. Delete the sample archive by following one of these SDKs or the AWS CLI:\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\n\u2022 Delete an Archive in S3 Glacier by Using the AWS CLI\nRelated Sections\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nStep 5: Delete an Archive from a Vault API Version 2012-06-01 27\n\nAmazon S3 Glacier Developer Guide\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following code example uses the AWS SDK for Java to delete the archive. In the code, note the\nfollowing:\n\u2022 The DeleteArchiveRequest object describes the delete request, including the vault name\nwhere the archive is located and the archive ID. \u2022 The deleteArchive API operation sends the request to Amazon S3 Glacier to delete the\narchive. \u2022 The example uses the US West (Oregon) Region (us-west-2). For step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier.",
      "start_idx": 74787,
      "end_idx": 82071,
      "metadata": {
        "num_sentences": 10,
        "num_words": 317,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39097001817491317
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_33",
      "text": "Example \u2014 Deleting an Archive by Using the AWS SDK for Java\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class AmazonGlacierDeleteArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nDelete an Archive by Using Java API Version 2012-06-01 28\n\nAmazon S3 Glacier Developer Guide\n// Delete the archive. client.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully. \");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted. \");\nSystem.err.println(e);\n}\n}\n}\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete the\narchive that you uploaded in the previous step. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint. \u2022 The code example uses the US West (Oregon) Region (us-west-2). \u2022 The example uses the Delete API operation of the ArchiveTransferManager class that's\nprovided as part of the high-level API of the AWS SDK for .NET. For step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier. Example \u2014 Deleting an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nDelete an Archive by Using .NET API Version 2012-06-01 29\n\nAmazon S3 Glacier Developer Guide\nclass ArchiveDeleteHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDelete an Archive in S3 Glacier by Using the AWS CLI\nYou can delete archives in Amazon S3 Glacier by using the AWS Command Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1.",
      "start_idx": 74787,
      "end_idx": 82071,
      "metadata": {
        "num_sentences": 11,
        "num_words": 403,
        "chunk_type": "semantic_split",
        "coherence_score": 0.400349946455522
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_34",
      "text": "Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. Deleting an Archive by Using the AWS CLI API Version 2012-06-01 30\n\nAmazon S3 Glacier Developer Guide\n\u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Deleting an Archive by Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. For more information on\nthe initiate-job command, see Initiate Job.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 11,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3775819258256392
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_35",
      "text": "aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters \"{\\\"Type\\\": \\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check the status of the previous retrieval job. For more\ninformation on the describe-job command, see Describe Job. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 31\n\nAmazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to be completed. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified Amazon SNS topic anytime the specific event occurs. 4.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 11,
        "num_words": 203,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27172050476074217
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_36",
      "text": "When the job is complete, use the get-job-output command to download the retrieval job\nto the file output.json. For more information on the get-job-output command, see Get\nJob Output. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"\"*** job completion date ***\"\",\n\"ArchiveList\":[{\n{\"ArchiveId\":\"\"*** archiveid ***\"\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"\"*** archive creation date ***\"\",\n\"Size\":\"\"*** archive size (in bytes) ***\"\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}],\n\"ArchiveId\": 123456789\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 32\n\nAmazon S3 Glacier Developer Guide\n}\n5. Use the delete-archive command to delete each archive from a vault until none remain. aws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nFor more information on the delete-archive command, see Delete Archive. Step 6: Delete a Vault in S3 Glacier\nA vault is a container for storing archives. To delete an Amazon S3 Glacier vault, you must first\ndelete all existing archives in the vault as of the last inventory that S3 Glacier computed. You can delete a vault programmatically or by using the S3 Glacier console. For information about\ndeleting a vault programmatically, see Deleting a Vault in Amazon S3 Glacier. Important\nIf you upload an archive to a vault or delete an archive from a vault within the recent\n24 hours, you must wait until the last vault inventory is updated to reflect the latest\ninformation.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 11,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47658871737393466
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_37",
      "text": "S3 Glacier prepares an inventory for each vault periodically, every 24 hours. To delete an empty vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. From the Select a Region menu, choose the AWS Region for the vault that you want to delete. In this getting started exercise, your example vault is in the US West (Oregon) Region. 3. Select the option button next to the empty vault that you want to delete. If the vault is not\nempty, you must delete all archives before deleting the vault. For more information, see\nDeleting an Archive in Amazon S3 Glacier. Step 6: Delete a Vault API Version 2012-06-01 33\n\nAmazon S3 Glacier Developer Guide\nImportant\nDeleting a vault can't be undone. 4.",
      "start_idx": 82072,
      "end_idx": 87050,
      "metadata": {
        "num_sentences": 12,
        "num_words": 131,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3250885876742276
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_38",
      "text": "Choose Delete. 5. The Delete vault dialog box appears. Choose Delete. To delete a nonempty vault\n1. If you're deleting a nonempty vault, you must first delete all existing archives before deleting\nthe vault. You can do this by writing code to make a delete archive request by using either the\nREST API, the AWS SDK for Java, the AWS SDK for .NET or the AWS CLI. For information about\ndeleting archives, see Step 5: Delete an Archive from a Vault in S3 Glacier. 2. After the vault is empty, follow the steps to delete an empty vault in the preceding procedure.",
      "start_idx": 87051,
      "end_idx": 88767,
      "metadata": {
        "num_sentences": 10,
        "num_words": 102,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3741300370958116
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_39",
      "text": "Where Do I Go From Here? Now that you have tried the getting started exercise, you can explore the following sections to\nlearn more about Amazon S3 Glacier. \u2022 Working with Vaults in Amazon S3 Glacier\n\u2022 Working with Archives in Amazon S3 Glacier\nWhere Do I Go From Here? API Version 2012-06-01 34\n\nAmazon S3 Glacier Developer Guide\nWorking with Vaults in Amazon S3 Glacier\nA vault is a container for storing archives. When you create a vault, you specify a vault name and\nthe AWS Region in which you want to create the vault. For a list of the AWS Regions supported by\nS3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General Reference. You can store an unlimited number of archives in a vault. Important\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI) or\nwrite code. There is no console support for archive operations. For example, to upload data,\nsuch as photos, videos, and other documents, you must either use the AWS CLI or write\ncode to make requests, by using either the REST API directly or by using the AWS SDKs.",
      "start_idx": 87051,
      "end_idx": 88767,
      "metadata": {
        "num_sentences": 11,
        "num_words": 207,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3296138416637074
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_40",
      "text": "To install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface. Topics\n\u2022 Vault Operations in S3 Glacier\n\u2022 Creating a Vault in Amazon S3 Glacier\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier\n\u2022 Deleting a Vault in Amazon S3 Glacier\n\u2022 Tagging Your S3 Glacier Vaults\n\u2022 S3 Glacier Vault Lock\nAPI Version 2012-06-01 35\n\nAmazon S3 Glacier Developer Guide\nVault Operations in S3 Glacier\nS3 Glacier supports various vault operations. Vault operations are specific to particular AWS\nRegions. In other words, when you create a vault, you create it in a specific AWS Region. When you\nlist vaults, S3 Glacier returns the vault list from the AWS Region that you specified in the request. Creating and Deleting Vaults\nAn AWS account can create up to 1,000 vaults per AWS Region. For a list of the AWS Regions\nsupported by S3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General\nReference. You can delete a vault only if there are no archives in the vault as of the last inventory that S3\nGlacier computed and if there have been no writes to the vault since the last inventory. Note\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 264,
        "chunk_type": "semantic_split",
        "coherence_score": 0.500048134543679
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_41",
      "text": "Because the\ninventory might not reflect the latest information, S3 Glacier ensures that the vault is\nindeed empty by checking if there were any write operations since the last vault inventory. For more information, see Creating a Vault in Amazon S3 Glacier and Deleting a Vault in Amazon\nS3 Glacier. Retrieving Vault Metadata\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. S3 Glacier provides API calls for you to retrieve\nthis information for a specific vault or all the vaults in a specific AWS Region in your account. For\nmore information, see Retrieving Vault Metadata in Amazon S3 Glacier. Downloading a Vault Inventory\nA vault inventory refers to the list of archives in a vault. For each archive in the list, the inventory\nprovides archive information, such as the archive ID, creation date, and size. S3 Glacier updates\nthe vault inventory once a day, starting on the day that the first archive is uploaded to the vault. A\nvault inventory must exist for you to be able to download it. Vault Operations in S3 Glacier API Version 2012-06-01 36\n\nAmazon S3 Glacier Developer Guide\nDownloading a vault inventory is an asynchronous operation. You must first initiate a job to\ndownload the inventory.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5224516435102983
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_42",
      "text": "After receiving the job request, S3 Glacier prepares your inventory for\ndownload. After the job is completed, you can download the inventory data. Given the asynchronous nature of the job, you can use Amazon Simple Notification Service\n(Amazon SNS) notifications to notify you when the job is completed. You can specify an Amazon\nSNS topic for each individual job request or configure your vault to send a notification when\nspecific vault events occur. S3 Glacier prepares an inventory for each vault periodically, every 24 hours. If there have been\nno archive additions or deletions to the vault since the last inventory, the inventory date is not\nupdated. When you initiate a job for a vault inventory, S3 Glacier returns the last inventory that it generated,\nwhich is a point-in-time snapshot and not real-time data. You might not find it useful to retrieve\nvault inventory for each archive upload. However, suppose that you maintain a database on the\nclient-side that contains metadata associated with the archives that you upload to S3 Glacier. In\nthat case, you might find the vault inventory useful to reconcile information in your database with\nthe actual vault inventory. For more information about retrieving a vault inventory, see Downloading a Vault Inventory in\nAmazon S3 Glacier.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4524955749511719
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_43",
      "text": "Configuring Vault Notifications\nRetrieving anything from S3 Glacier, such as an archive from a vault or a vault inventory, is a two-\nstep process. First, you initiate a job. After the job is completed, you download the output. To\nlearn when your job is complete, you can use S3 Glacier notifications. S3 Glacier sends notification\nmessages to an Amazon Simple Notification Service (Amazon SNS) topic that you provide. You can configure notifications on a vault and identify vault events and the Amazon SNS topic to\nbe notified when the event occurs. Anytime the vault event occurs, S3 Glacier sends a notification\nto the specified Amazon SNS topic. For more information, see Configuring Vault Notifications in\nAmazon S3 Glacier. Creating a Vault in Amazon S3 Glacier\nCreating a vault adds a vault to the set of vaults in your account. An AWS account can create up to\n1,000 vaults per AWS Region. For a list of the AWS Regions supported by Amazon S3 Glacier (S3\nGlacier), see Regions and Endpoints in the AWS General Reference.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 11,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4289065274325284
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_44",
      "text": "Configuring Vault Notifications API Version 2012-06-01 37\n\nAmazon S3 Glacier Developer Guide\nWhen you create a vault, you must provide a vault name. The following are the vault naming\nrequirements:\n\u2022 Names can be between 1 and 255 characters long. \u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.' (period). Vault names must be unique within an account and the AWS Region in which the vault is being\ncreated. That is, an account can create vaults with the same name in different AWS Regions but not\nin the same AWS Region. Topics\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Creating a Vault in Amazon S3 Glacier Using the REST API\n\u2022 Creating a Vault Using the Amazon S3 Glacier Console\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nCreating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe low-level API provides methods for all the vault operations, including creating and deleting\nvaults, getting a vault description, and getting a list of vaults created in a specific AWS Region. The\nfollowing are the steps to create a vault using the AWS SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region. 2.",
      "start_idx": 88768,
      "end_idx": 95328,
      "metadata": {
        "num_sentences": 13,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27649881900885165
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_45",
      "text": "Provide request information by creating an instance of the CreateVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide to\nsign the request is used. For more information, see Using the AWS SDK for Java with Amazon S3\nGlacier. 3. Run the createVault method by providing the request object as a parameter. Creating a Vault Using Java API Version 2012-06-01 38\n\nAmazon S3 Glacier Developer Guide\nThe response S3 Glacier returns is available in the CreateVaultResult object. The following Java code snippet illustrates the preceding steps. The snippet creates a vault in\nthe us-west-2 Region. The Location it prints is the relative URI of the vault that includes your\naccount ID, the AWS Region, and the vault name.",
      "start_idx": 95329,
      "end_idx": 103049,
      "metadata": {
        "num_sentences": 10,
        "num_words": 143,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2558360205756293
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_46",
      "text": "AmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nCreateVaultResult result = client.createVault(request);\nSystem.out.println(\"Created vault successfully: \" + result.getLocation());\nNote\nFor information about the underlying REST API, see Create Vault (PUT vault). Example: Creating a Vault Using the AWS SDK for Java\nThe following Java code example creates a vault in the us-west-2 Region (for more information\non AWS Regions, see Accessing Amazon S3 Glacier). In addition, the code example retrieves the\nvault information, lists all vaults in the same AWS Region, and then deletes the vault created. For step-by-step instructions on how to run the following example, see Running Java Examples for\nAmazon S3 Glacier Using Eclipse. Example\nimport java.io.IOException;\nimport java.util.List;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.CreateVaultRequest;\nimport com.amazonaws.services.glacier.model.CreateVaultResult;\nimport com.amazonaws.services.glacier.model.DeleteVaultRequest;\nimport com.amazonaws.services.glacier.model.DescribeVaultOutput;\nCreating a Vault Using Java API Version 2012-06-01 39\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.glacier.model.DescribeVaultRequest;\nimport com.amazonaws.services.glacier.model.DescribeVaultResult;\nimport com.amazonaws.services.glacier.model.ListVaultsRequest;\nimport com.amazonaws.services.glacier.model.ListVaultsResult;\npublic class AmazonGlacierVaultOperations {\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\nString vaultName = \"examplevaultfordelete\";\ntry {\ncreateVault(client, vaultName);\ndescribeVault(client, vaultName);\nlistVaults(client);\ndeleteVault(client, vaultName);\n} catch (Exception e) {\nSystem.err.println(\"Vault operation failed.\" + e.getMessage());\n}\n}\nprivate static void createVault(AmazonGlacierClient client, String vaultName) {\nCreateVaultRequest createVaultRequest = new CreateVaultRequest()\n.withVaultName(vaultName);\nCreateVaultResult createVaultResult = client.createVault(createVaultRequest);\nSystem.out.println(\"Created vault successfully: \" +\ncreateVaultResult.getLocation());\n}\nprivate static void describeVault(AmazonGlacierClient client, String vaultName) {\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n.withVaultName(vaultName);\nDescribeVaultResult describeVaultResult =\nclient.describeVault(describeVaultRequest);\nCreating a Vault Using Java API Version 2012-06-01 40\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Describing the vault: \" + vaultName);\nSystem.out.print(\n\"CreationDate: \" + describeVaultResult.getCreationDate() +\n\"\\nLastInventoryDate: \" + describeVaultResult.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + describeVaultResult.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + describeVaultResult.getSizeInBytes() +\n\"\\nVaultARN: \" + describeVaultResult.getVaultARN() +\n\"\\nVaultName: \" + describeVaultResult.getVaultName());\n}\nprivate static void listVaults(AmazonGlacierClient client) {\nListVaultsRequest listVaultsRequest = new ListVaultsRequest();\nListVaultsResult listVaultsResult = client.listVaults(listVaultsRequest);\nList<DescribeVaultOutput> vaultList = listVaultsResult.getVaultList();\nSystem.out.println(\"\\nDescribing all vaults (vault list):\");\nfor (DescribeVaultOutput vault : vaultList) {\nSystem.out.println(\n\"\\nCreationDate: \" + vault.getCreationDate() +\n\"\\nLastInventoryDate: \" + vault.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + vault.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + vault.getSizeInBytes() +\n\"\\nVaultARN: \" + vault.getVaultARN() +\n\"\\nVaultName: \" + vault.getVaultName());\n}\n}\nprivate static void deleteVault(AmazonGlacierClient client, String vaultName) {\nDeleteVaultRequest request = new DeleteVaultRequest()\n.withVaultName(vaultName);\nclient.deleteVault(request);\nSystem.out.println(\"Deleted vault: \" + vaultName);\n}\n}\nCreating a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ncreate a vault. Topics\nCreating a Vault Using .NET API Version 2012-06-01 41\n\nAmazon S3 Glacier Developer Guide\n\u2022 Creating a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Creating a Vault Using the Low-Level API of the AWS SDK for .NET\nCreating a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the CreateVault method\nyou can use to create a vault in an AWS Region. Example: Vault Operations Using the High-Level API of the AWS SDK for .NET\nThe following C# code example creates and delete a vault in the US West (Oregon) Region. For a\nlist of AWS Regions in which you can create vaults, see Accessing Amazon S3 Glacier. For step-by-step instructions on how to run the following example, see Running Code Examples.",
      "start_idx": 95329,
      "end_idx": 103049,
      "metadata": {
        "num_sentences": 10,
        "num_words": 554,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5115521748860677
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_47",
      "text": "You need to update the code as shown with a vault name. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDeleteHighLevel\n{\nstatic string vaultName = \"*** Provide vault name ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.CreateVault(vaultName);\nConsole.WriteLine(\"Vault created. To delete the vault, press Enter\");\nConsole.ReadKey();\nmanager.DeleteVault(vaultName);\nConsole.WriteLine(\"\\nVault deleted. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nCreating a Vault Using .NET API Version 2012-06-01 42\n\nAmazon S3 Glacier Developer Guide\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nCreating a Vault Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the vault operations, including create and delete vaults,\nget a vault description, and get a list of vaults created in a specific AWS Region. The following are\nthe steps to create a vault using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region. 2.",
      "start_idx": 95329,
      "end_idx": 103049,
      "metadata": {
        "num_sentences": 10,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2848277621799045
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_48",
      "text": "Provide request information by creating an instance of the CreateVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then account ID associated with the credentials you provide to sign\nthe request is assumed. For more information, see Using the AWS SDK for .NET with Amazon S3\nGlacier. 3. Run the CreateVault method by providing the request object as a parameter. The response S3 Glacier returns is available in the CreateVaultResponse object. Example: Vault Operations Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example creates a vault in the US\nWest (Oregon) Region. In addition, the code example retrieves the vault information, lists all vaults\nin the same AWS Region, and then deletes the vault created. The Location printed is the relative\nURI of the vault that includes your account ID, the AWS Region, and the vault name.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 11,
        "num_words": 164,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28074947703968395
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_49",
      "text": "Note\nFor information about the underlying REST API, see Create Vault (PUT vault). Creating a Vault Using .NET API Version 2012-06-01 43\n\nAmazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run the following example, see Running Code Examples. You need to update the code as shown with a vault name. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDelete\n{\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic AmazonGlacierClient client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Creating a vault. \");\nCreateAVault();\nDescribeVault();\nGetVaultsList();\nConsole.WriteLine(\"\\nVault created. Now press Enter to delete the vault...\");\nConsole.ReadKey();\nDeleteVault();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void CreateAVault()\n{\nCreateVaultRequest request = new CreateVaultRequest()\n{\nVaultName = vaultName\nCreating a Vault Using .NET API Version 2012-06-01 44\n\nAmazon S3 Glacier Developer Guide\n};\nCreateVaultResponse response = client.CreateVault(request);\nConsole.WriteLine(\"Vault created: {0}\\n\", response.Location);\n}\nstatic void DescribeVault()\n{\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n{\nVaultName = vaultName\n};\nDescribeVaultResponse describeVaultResponse =\nclient.DescribeVault(describeVaultRequest);\nConsole.WriteLine(\"\\nVault description...\");\nConsole.WriteLine(\n\"\\nVaultName: \" + describeVaultResponse.VaultName +\n\"\\nVaultARN: \" + describeVaultResponse.VaultARN +\n\"\\nVaultCreationDate: \" + describeVaultResponse.CreationDate +\n\"\\nNumberOfArchives: \" + describeVaultResponse.NumberOfArchives +\n\"\\nSizeInBytes: \" + describeVaultResponse.SizeInBytes +\n\"\\nLastInventoryDate: \" + describeVaultResponse.LastInventoryDate\n);\n}\nstatic void GetVaultsList()\n{\nstring lastMarker = null;\nConsole.WriteLine(\"\\n List of vaults in your account in the specific\nregion ...\");\ndo\n{\nListVaultsRequest request = new ListVaultsRequest()\n{\nMarker = lastMarker\n};\nListVaultsResponse response = client.ListVaults(request);\nforeach (DescribeVaultOutput output in response.VaultList)\n{\nConsole.WriteLine(\"Vault Name: {0} \\tCreation Date: {1} \\t #of archives:\n{2}\",\noutput.VaultName, output.CreationDate,\noutput.NumberOfArchives);\nCreating a Vault Using .NET API Version 2012-06-01 45\n\nAmazon S3 Glacier Developer Guide\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\n}\nstatic void DeleteVault()\n{\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = vaultName\n};\nDeleteVaultResponse response = client.DeleteVault(request);\n}\n}\n}\nCreating a Vault in Amazon S3 Glacier Using the REST API\nTo create a vault using the REST API, see Create Vault (PUT vault). Creating a Vault Using the Amazon S3 Glacier Console\nTo create a vault using the Amazon S3 Glacier (S3 Glacier) console, see Step 2: Create a Vault in S3\nGlacier in the Getting Started tutorial. Creating a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nFollow these steps to create a vault in Amazon S3 Glacier (S3 Glacier) using the AWS Command\nLine Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Creating a Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nCreating a Vault Using REST API Version 2012-06-01 46\n\nAmazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 11,
        "num_words": 491,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4942821849476207
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_50",
      "text": "Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Creating a Vault Using the AWS CLI\n1. Use the create-vault command to create a vault named awsexamplevault under account\n111122223333.\naws glacier create-vault --vault-name awsexamplevault --account-id 111122223333\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault\"\n}\n2. Verify creation using the describe-vault command. Creating a Vault Using the AWS CLI API Version 2012-06-01 47\n\nAmazon S3 Glacier Developer Guide\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nRetrieving Vault Metadata in Amazon S3 Glacier\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. Amazon S3 Glacier (S3 Glacier) provides API calls\nfor you to retrieve this information for a specific vault or all the vaults in a specific AWS Region in\nyour account.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4060183438387784
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_51",
      "text": "If you retrieve a vault list, S3 Glacier returns the list sorted by the ASCII values of the vault names. The list contains up to 1,000 vaults. You should always check the response for a marker at which\nto continue the list; if there are no more items the marker field is null. You can optionally limit\nthe number of vaults returned in the response. If there are more vaults than are returned in the\nresponse, the result is paginated. You need to send additional requests to fetch the next set of\nvaults. Topics\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Retrieving Vault Metadata Using the REST API\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS Command Line Interface\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for\nJava\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Amazon SDK for Java\nRetrieving Vault Metadata API Version 2012-06-01 48\n\nAmazon S3 Glacier Developer Guide\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAmazon SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region. 2.",
      "start_idx": 103050,
      "end_idx": 110944,
      "metadata": {
        "num_sentences": 13,
        "num_words": 278,
        "chunk_type": "semantic_split",
        "coherence_score": 0.26144866454295623
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_52",
      "text": "Provide request information by creating an instance of the DescribeVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for Java with\nAmazon S3 Glacier. 3. Run the describeVault method by providing the request object as a parameter. The vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object. The following Java code snippet illustrates the preceding steps. DescribeVaultRequest request = new DescribeVaultRequest()\n.withVaultName(\"*** provide vault name***\");\nDescribeVaultResult result = client.describeVault(request);\nSystem.out.print(\n\"\\nCreationDate: \" + result.getCreationDate() +\n\"\\nLastInventoryDate: \" + result.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + result.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + result.getSizeInBytes() +\n\"\\nVaultARN: \" + result.getVaultARN() +\n\"\\nVaultName: \" + result.getVaultName());\nRetrieving Vault Metadata Using Java API Version 2012-06-01 49\n\nAmazon S3 Glacier Developer Guide\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault). Retrieve Vault Metadata for All Vaults in a Region\nYou can also use the listVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion. The following Java code snippet retrieves list of vaults in the us-west-2 Region. The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nlistVaults calls to retrieve the entire vault list from the AWS Region.",
      "start_idx": 110945,
      "end_idx": 115034,
      "metadata": {
        "num_sentences": 13,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28710414201785356
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_53",
      "text": "AmazonGlacierClient client;\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nString marker = null;\ndo {\nListVaultsRequest request = new ListVaultsRequest()\n.withLimit(\"5\")\n.withMarker(marker);\nListVaultsResult listVaultsResult = client.listVaults(request);\nList<DescribeVaultOutput> vaultList = listVaultsResult.getVaultList();\nmarker = listVaultsResult.getMarker();\nfor (DescribeVaultOutput vault : vaultList) {\nSystem.out.println(\n\"\\nCreationDate: \" + vault.getCreationDate() +\n\"\\nLastInventoryDate: \" + vault.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + vault.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + vault.getSizeInBytes() +\n\"\\nVaultARN: \" + vault.getVaultARN() +\n\"\\nVaultName: \" + vault.getVaultName());\n}\n} while (marker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API. If there are more vaults to list, the response\nmarker field contains the vault Amazon Resource Name (ARN) at which to continue the list with a\nnew request; otherwise, the marker field is null. Retrieving Vault Metadata Using Java API Version 2012-06-01 50\n\nAmazon S3 Glacier Developer Guide\nNote that the information returned for each vault in the list is the same as the information you get\nby calling the describeVault method for a specific vault. Note\nThe listVaults method calls the underlying REST API (see List Vaults (GET vaults)). Example: Retrieving Vault Metadata Using the Amazon SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java. The Java\ncode example creates a vault and retrieves the vault metadata. Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK for .NET\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region. 2.",
      "start_idx": 110945,
      "end_idx": 115034,
      "metadata": {
        "num_sentences": 13,
        "num_words": 352,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3353559053861178
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_54",
      "text": "Provide request information by creating an instance of the DescribeVaultRequest class. Amazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier. Retrieving Vault Metadata Using .NET API Version 2012-06-01 51\n\nAmazon S3 Glacier Developer Guide\n3. Run the DescribeVault method by providing the request object as a parameter. The vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object. The following C# code snippet illustrates the preceding steps. The snippet retrieves metadata\ninformation of an existing vault in the US West (Oregon) Region. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n{\nVaultName = \"*** Provide vault name ***\"\n};\nDescribeVaultResponse describeVaultResponse =\nclient.DescribeVault(describeVaultRequest);\nConsole.WriteLine(\"\\nVault description...\");\nConsole.WriteLine(\n\"\\nVaultName: \" + describeVaultResponse.VaultName +\n\"\\nVaultARN: \" + describeVaultResponse.VaultARN +\n\"\\nVaultCreationDate: \" + describeVaultResponse.CreationDate +\n\"\\nNumberOfArchives: \" + describeVaultResponse.NumberOfArchives +\n\"\\nSizeInBytes: \" + describeVaultResponse.SizeInBytes +\n\"\\nLastInventoryDate: \" + describeVaultResponse.LastInventoryDate\n);\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault). Retrieve Vault Metadata for All Vaults in a Region\nYou can also use the ListVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion. The following C# code snippet retrieves list of vaults in the US West (Oregon) Region.",
      "start_idx": 115035,
      "end_idx": 121032,
      "metadata": {
        "num_sentences": 12,
        "num_words": 242,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3512323552911932
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_55",
      "text": "The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nListVaults calls to retrieve the entire vault list from the AWS Region. Retrieving Vault Metadata Using .NET API Version 2012-06-01 52\n\nAmazon S3 Glacier Developer Guide\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nstring lastMarker = null;\nConsole.WriteLine(\"\\n List of vaults in your account in the specific AWS Region ...\");\ndo\n{\nListVaultsRequest request = new ListVaultsRequest()\n{\nLimit = 5,\nMarker = lastMarker\n};\nListVaultsResponse response = client.ListVaults(request);\nforeach (DescribeVaultOutput output in response.VaultList)\n{\nConsole.WriteLine(\"Vault Name: {0} \\tCreation Date: {1} \\t #of archives: {2}\",\noutput.VaultName, output.CreationDate, output.NumberOfArchives);\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API. Note that the information returned for each vault in the list is the same as the information you get\nby calling the DescribeVault method for a specific vault. Note\nThe ListVaults method calls the underlying REST API (see List Vaults (GET vaults)). Example: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK\nfor .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example creates a vault and retrieves the vault metadata. Retrieving Vault Metadata Using .NET API Version 2012-06-01 53\n\nAmazon S3 Glacier Developer Guide\nRetrieving Vault Metadata Using the REST API\nTo list vaults using the REST API, see List Vaults (GET vaults). To describe one vault, see Describe\nVault (GET vault). Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nThis example shows how to retrieve vault information and metadata in Amazon S3 Glacier (S3\nGlacier) using the AWS Command Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Retrieving Vault Metadata Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI.",
      "start_idx": 115035,
      "end_idx": 121032,
      "metadata": {
        "num_sentences": 12,
        "num_words": 342,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47704026193329785
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_56",
      "text": "For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. Retrieving Vault Metadata Using REST API Version 2012-06-01 54\n\nAmazon S3 Glacier Developer Guide\naws configure list\nExample: Retrieving Vault Metadata Using the AWS CLI\n\u2022 Use the describe-vault command to describe a vault named awsexamplevault under\naccount 111122223333.\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nDownloading a Vault Inventory in Amazon S3 Glacier\nAfter you upload your first archive to your vault, Amazon S3 Glacier (S3 Glacier) automatically\ncreates a vault inventory and then updates it approximately once a day. After S3 Glacier creates\nthe first inventory, it typically takes half a day and up to a day before that inventory is available for\nretrieval. You can retrieve a vault inventory from S3 Glacier with the following two-step process:\n1. Initiate an inventory retrieval job by using the Initiate Job (POST jobs) operation. Important\nA data retrieval policy can cause your initiate retrieval job request to fail with a\nPolicyEnforcedException exception. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.",
      "start_idx": 115035,
      "end_idx": 121032,
      "metadata": {
        "num_sentences": 14,
        "num_words": 285,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27894215007404705
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_57",
      "text": "2. After the job completes, download the bytes using the Get Job Output (GET output) operation. For example, retrieving an archive or a vault inventory requires you to first initiate a retrieval job. The job request is run asynchronously. When you initiate a retrieval job, S3 Glacier creates a job and\nreturns a job ID in the response. When S3 Glacier completes the job, you can get the job output,\nthe archive bytes, or the vault inventory data. The job must complete before you can get its output. To determine the status of the job, you have\nthe following options:\nDownloading a Vault Inventory API Version 2012-06-01 55\n\nAmazon S3 Glacier Developer Guide\n\u2022 Wait for job completion notification\u2014You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. You\ncan specify Amazon SNS topic using the following methods:\n\u2022 Specify an Amazon SNS topic per job basis. When you initiate a job, you can optionally specify an Amazon SNS topic. \u2022 Set notification configuration on the vault. You can set notification configuration for specific events on the vault (see Configuring Vault\nNotifications in Amazon S3 Glacier). S3 Glacier sends a message to the specified SNS topic any\ntime the specific event occur.",
      "start_idx": 121033,
      "end_idx": 125507,
      "metadata": {
        "num_sentences": 13,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3136005401611328
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_58",
      "text": "If you have notification configuration set on the vault and you also specify an Amazon SNS topic\nwhen you initiate a job, S3 Glacier sends job completion message to both the topics. You can configure the SNS topic to notify you via email or store the message in an Amazon\nSimple Queue Service (Amazon SQS) that your application can poll. When a message appears in\nthe queue, you can check if the job is completed successfully and then download the job output. \u2022 Request job information explicitly\u2014S3 Glacier also provides a describe job operation\n(Describe Job (GET JobID)) that enables you to poll for job information. You can periodically\nsend this request to obtain job information. However, using Amazon SNS notifications is the\nrecommended option. Note\nThe information you get via SNS notification is the same as what you get by calling\nDescribe Job. Topics\n\u2022 About the Inventory\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading a Vault Inventory Using the REST API\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS Command Line Interface\nDownloading a Vault Inventory API Version 2012-06-01 56\n\nAmazon S3 Glacier Developer Guide\nAbout the Inventory\nS3 Glacier updates a vault inventory at least once per day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata. Note that after S3 Glacier creates the first inventory for the vault, it typically takes half a day\nand up to a day before that inventory is available for retrieval. You might not find it useful to retrieve a vault inventory for each archive upload. However, suppose\nyou maintain a database on the client-side associating metadata about the archives you upload\nto S3 Glacier.",
      "start_idx": 121033,
      "end_idx": 125507,
      "metadata": {
        "num_sentences": 13,
        "num_words": 354,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36327401185647035
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_59",
      "text": "Then, you might find the vault inventory useful to reconcile information, as needed,\nin your database with the actual vault inventory. You can limit the number of inventory items\nretrieved by filtering on the archive creation date or by setting a quota. For more information\nabout limiting inventory retrieval, see Range Inventory Retrieval. The inventory can be returned in two formats, comma-separated values (CSV) or JSON. You can\noptionally specify the format when you initiate the inventory job. The default format is JSON. For\nmore information about the data fields returned in an inventory job output, see Response Body of\nthe Get Job Output API. Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK for\nJava. The high-level API does not support retrieving a vault inventory. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 121033,
      "end_idx": 125507,
      "metadata": {
        "num_sentences": 13,
        "num_words": 182,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25699757307003707
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_60",
      "text": "2. Initiate an inventory retrieval job by executing the initiateJob method. Run initiateJob by providing job information in an InitiateJobRequest object. About the Inventory API Version 2012-06-01 57\n\nAmazon S3 Glacier Developer Guide\nNote\nNote that if an inventory has not been completed for the vault an error is returned. Amazon S3 Glacier (S3 Glacier) prepares an inventory for each vault periodically, every\n24 hours. S3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobParameters(\nnew JobParameters()\n.withType(\"inventory-retrieval\")\n.withSNSTopic(\"*** provide SNS topic ARN ****\")\n);\nInitiateJobResult initJobResult = client.initiateJob(initJobRequest);\nString jobId = initJobResult.getJobId();\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault, or specified an Amazon Simple Notification Service\n(Amazon SNS) topic when you initiated the job, S3 Glacier sends a message to the topic after it\ncompletes the job. You can also poll S3 Glacier by calling the describeJob method to determine job completion\nstatus. However, using an Amazon SNS topic for notification is the recommended approach. The code example given in the following section uses Amazon SNS for S3 Glacier to publish a\nmessage. 4.",
      "start_idx": 125508,
      "end_idx": 126999,
      "metadata": {
        "num_sentences": 15,
        "num_words": 219,
        "breakpoint_idx": 654,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2621556599934896
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_61",
      "text": "Download the job output (vault inventory data) by executing the getJobOutput method. You provide your account ID, job ID, and vault name by creating an instance of the\nGetJobOutputRequest class. If you don't provide an account ID, then the account ID\nDownloading a Vault Inventory Using Java API Version 2012-06-01 58\n\nAmazon S3 Glacier Developer Guide\nassociated with the credentials you provide to sign the request is used. For more information,\nsee Using the AWS SDK for Java with Amazon S3 Glacier. The output that S3 Glacier returns is available in the GetJobOutputResult object. GetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobId(\"*** provide job ID ***\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody(); provides the output stream. Note\nFor information about the job related underlying REST API, see Job Operations. Example: Retrieving a Vault Inventory Using the Amazon SDK for Java\nThe following Java code example retrieves the vault inventory for the specified vault. The example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic. S3 Glacier sends notification to this topic after it completes the job.",
      "start_idx": 127000,
      "end_idx": 132313,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36823048061794705
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_62",
      "text": "\u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue. \u2022 Initiates a job to download the specified archive. In the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job. \u2022 Checks the Amazon SQS queue for a message that contains the job ID. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. Downloading a Vault Inventory Using Java API Version 2012-06-01 59\n\nAmazon S3 Glacier Developer Guide\n\u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue that it created. import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.GetJobOutputRequest;\nimport com.amazonaws.services.glacier.model.GetJobOutputResult;\nimport com.amazonaws.services.glacier.model.InitiateJobRequest;\nimport com.amazonaws.services.glacier.model.InitiateJobResult;\nimport com.amazonaws.services.glacier.model.JobParameters;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sns.model.CreateTopicRequest;\nimport com.amazonaws.services.sns.model.CreateTopicResult;\nimport com.amazonaws.services.sns.model.DeleteTopicRequest;\nimport com.amazonaws.services.sns.model.SubscribeRequest;\nimport com.amazonaws.services.sns.model.SubscribeResult;\nimport com.amazonaws.services.sns.model.UnsubscribeRequest;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nimport com.amazonaws.services.sqs.model.CreateQueueResult;\nimport com.amazonaws.services.sqs.model.DeleteQueueRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesRequest;\nDownloading a Vault Inventory Using Java API Version 2012-06-01 60\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.sqs.model.GetQueueAttributesResult;\nimport com.amazonaws.services.sqs.model.Message;\nimport com.amazonaws.services.sqs.model.ReceiveMessageRequest;\nimport com.amazonaws.services.sqs.model.SetQueueAttributesRequest;\npublic class AmazonGlacierDownloadInventoryWithSQSPolling {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String snsTopicName = \"*** provide topic name ***\";\npublic static String sqsQueueName = \"*** provide queue name ***\";\npublic static String sqsQueueARN;\npublic static String sqsQueueURL;\npublic static String snsTopicARN;\npublic static String snsSubscriptionARN;\npublic static String fileName = \"*** provide file name ***\";\npublic static String region = \"*** region ***\";\npublic static long sleepTime = 600;\npublic static AmazonGlacierClient client;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.\" + region + \".amazonaws.com\");\nsqsClient = new AmazonSQSClient(credentials);\nsqsClient.setEndpoint(\"https://sqs.\"",
      "start_idx": 127000,
      "end_idx": 132313,
      "metadata": {
        "num_sentences": 10,
        "num_words": 349,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2998259650336372
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_63",
      "text": "+ region + \".amazonaws.com\");\nsnsClient = new AmazonSNSClient(credentials);\nsnsClient.setEndpoint(\"https://sns.\" + region + \".amazonaws.com\");\ntry {\nsetupSQS();\nsetupSNS();\nString jobId = initiateJobRequest();\nSystem.out.println(\"Jobid = \" + jobId);\nBoolean success = waitForJobToComplete(jobId, sqsQueueURL);\nif (!success) { throw new Exception(\"Job did not complete\nsuccessfully. \"); }\nDownloading a Vault Inventory Using Java API Version 2012-06-01 61\n\nAmazon S3 Glacier Developer Guide\ndownloadJobOutput(jobId);\ncleanUp();\n} catch (Exception e) {\nSystem.err.println(\"Inventory retrieval failed. \");\nSystem.err.println(e);\n}\n}\nprivate static void setupSQS() {\nCreateQueueRequest request = new CreateQueueRequest()\n.withQueueName(sqsQueueName);\nCreateQueueResult result = sqsClient.createQueue(request);\nsqsQueueURL = result.getQueueUrl();\nGetQueueAttributesRequest qRequest = new GetQueueAttributesRequest()\n.withQueueUrl(sqsQueueURL)\n.withAttributeNames(\"QueueArn\");\nGetQueueAttributesResult qResult = sqsClient.getQueueAttributes(qRequest);\nsqsQueueARN = qResult.getAttributes().get(\"QueueArn\");\nPolicy sqsPolicy =\nnew Policy().withStatements(\nnew Statement(Effect.Allow)\n.withPrincipals(Principal.AllUsers)\n.withActions(SQSActions.SendMessage)\n.withResources(new Resource(sqsQueueARN)));\nMap<String, String> queueAttributes = new HashMap<String, String>();\nqueueAttributes.put(\"Policy\", sqsPolicy.toJson());\nsqsClient.setQueueAttributes(new SetQueueAttributesRequest(sqsQueueURL,\nqueueAttributes));\n}\nprivate static void setupSNS() {\nCreateTopicRequest request = new CreateTopicRequest()\n.withName(snsTopicName);\nCreateTopicResult result = snsClient.createTopic(request);\nsnsTopicARN = result.getTopicArn();\nSubscribeRequest request2 = new SubscribeRequest()\n.withTopicArn(snsTopicARN)\nDownloading a Vault Inventory Using Java API Version 2012-06-01 62\n\nAmazon S3 Glacier Developer Guide\n.withEndpoint(sqsQueueARN)\n.withProtocol(\"sqs\");\nSubscribeResult result2 = snsClient.subscribe(request2);\nsnsSubscriptionARN = result2.getSubscriptionArn();\n}\nprivate static String initiateJobRequest() {\nJobParameters jobParameters = new JobParameters()\n.withType(\"inventory-retrieval\")\n.withSNSTopic(snsTopicARN);\nInitiateJobRequest request = new InitiateJobRequest()\n.withVaultName(vaultName)\n.withJobParameters(jobParameters);\nInitiateJobResult response = client.initiateJob(request);\nreturn response.getJobId();\n}\nprivate static Boolean waitForJobToComplete(String jobId, String sqsQueueUrl)\nthrows InterruptedException, JsonParseException, IOException {\nBoolean messageFound = false;\nBoolean jobSuccessful = false;\nObjectMapper mapper = new ObjectMapper();\nJsonFactory factory = mapper.getFactory();\nwhile (!messageFound) {\nList<Message> msgs = sqsClient.receiveMessage(\nnew\nReceiveMessageRequest(sqsQueueUrl).withMaxNumberOfMessages(10)).getMessages();\nif (msgs.size() > 0) {\nfor (Message m : msgs) {\nJsonParser jpMessage = factory.createJsonParser(m.getBody());\nJsonNode jobMessageNode = mapper.readTree(jpMessage);\nString jobMessage = jobMessageNode.get(\"Message\").textValue();\nJsonParser jpDesc = factory.createJsonParser(jobMessage);\nJsonNode jobDescNode = mapper.readTree(jpDesc);\nString retrievedJobId = jobDescNode.get(\"JobId\").textValue();\nString statusCode = jobDescNode.get(\"StatusCode\").textValue();\nDownloading a Vault Inventory Using Java API Version 2012-06-01 63\n\nAmazon S3 Glacier Developer Guide\nif (retrievedJobId.equals(jobId)) {\nmessageFound = true;\nif (statusCode.equals(\"Succeeded\")) {\njobSuccessful = true;\n}\n}\n}\n} else {\nThread.sleep(sleepTime * 1000);\n}\n}\nreturn (messageFound && jobSuccessful);\n}\nprivate static void downloadJobOutput(String jobId) throws IOException {\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n.withVaultName(vaultName)\n.withJobId(jobId);\nGetJobOutputResult getJobOutputResult =\nclient.getJobOutput(getJobOutputRequest);\nFileWriter fstream = new FileWriter(fileName);\nBufferedWriter out = new BufferedWriter(fstream);\nBufferedReader in = new BufferedReader(new\nInputStreamReader(getJobOutputResult.getBody()));\nString inputLine;\ntry {\nwhile ((inputLine = in.readLine()) != null) {\nout.write(inputLine);\n}\n}catch(IOException e) {\nthrow new AmazonClientException(\"Unable to save archive\", e);\n}finally{\ntry {in.close();} catch (Exception e) {}\ntry {out.close();} catch (Exception e) {}\n}\nSystem.out.println(\"Retrieved inventory to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nDownloading a Vault Inventory Using Java API Version 2012-06-01 64\n\nAmazon S3 Glacier Developer Guide\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK\nfor .NET.",
      "start_idx": 132314,
      "end_idx": 137237,
      "metadata": {
        "num_sentences": 4,
        "num_words": 464,
        "breakpoint_idx": 678,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.36606431007385254
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_64",
      "text": "The high-level API does not support retrieving a vault inventory. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 137238,
      "end_idx": 137502,
      "metadata": {
        "num_sentences": 5,
        "num_words": 43,
        "breakpoint_idx": 683,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.21620326042175292
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_65",
      "text": "2. Initiate an inventory retrieval job by executing the InitiateJob method. You provide job information in an InitiateJobRequest object. Amazon S3 Glacier\n(S3 Glacier) returns a job ID in response. The response is available in an instance of the\nInitiateJobResponse class. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"inventory-retrieval\",\nSNSTopic = \"*** Provide Amazon SNS topic arn ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 65\n\nAmazon S3 Glacier Developer Guide\n(Amazon SNS) topic, or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message.",
      "start_idx": 137503,
      "end_idx": 140212,
      "metadata": {
        "num_sentences": 10,
        "num_words": 180,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29725070529513886
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_66",
      "text": "You can also poll S3 Glacier by calling the DescribeJob method to determine job completion\nstatus. Although using Amazon SNS topic for notification is the recommended approach. 4. Download the job output (vault inventory data) by executing the GetJobOutput method. You provide your account ID, vault name, and the job ID information by creating an instance\nof the GetJobOutputRequest class. If you don't provide an account ID, then the account\nID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier. The output that S3 Glacier returns is available in the GetJobOutputResponse object. GetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nNote\nFor information about the job related underlying REST API, see Job Operations. Downloading a Vault Inventory Using .NET API Version 2012-06-01 66\n\nAmazon S3 Glacier Developer Guide\nExample: Retrieving a Vault Inventory Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example retrieves the vault inventory for the specified vault. The example performs the following tasks:\n\u2022 Set up an Amazon SNS topic.",
      "start_idx": 137503,
      "end_idx": 140212,
      "metadata": {
        "num_sentences": 11,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.255666767467152
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_67",
      "text": "S3 Glacier sends notification to this topic after it completes the job. \u2022 Set up an Amazon SQS queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages. \u2022 Initiate a job to download the specified archive. In the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job. \u2022 Periodically check the Amazon SQS queue for a message. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.",
      "start_idx": 140213,
      "end_idx": 140760,
      "metadata": {
        "num_sentences": 8,
        "num_words": 100,
        "breakpoint_idx": 712,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3355942113058908
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_68",
      "text": "The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON. \u2022 Clean up by deleting the Amazon SNS topic and the Amazon SQS queue it created. Example\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 67\n\nAmazon S3 Glacier Developer Guide\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultInventoryJobLowLevelUsingSNSSQS\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string fileName = \"*** Provide file name and path where to store inventory\n***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"AWS\\\" : \\\"arn:aws:iam::123456789012:root\\\" },\"\n+\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QuernArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue. \");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 68\n\nAmazon S3 Glacier Developer Guide\nConsole.WriteLine(\"Retrieve Inventory List\");\nGetVaultInventory(client);\n}\nConsole.WriteLine(\"Operations successful. \");\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue. snsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nlong ticks = DateTime.Now.Ticks;\n// Setup SNS topic. snsClient = new\nAmazonSimpleNotificationServiceClient(Amazon.RegionEndpoint.USWest2);\nsqsClient = new AmazonSQSClient(Amazon.RegionEndpoint.USWest2);\ntopicArn = snsClient.CreateTopic(new CreateTopicRequest { Name =\n\"GlacierDownload-\" + ticks }).TopicArn;\nConsole.Write(\"topicArn: \"); Console.WriteLine(topicArn);\nCreateQueueRequest createQueueRequest = new CreateQueueRequest();\ncreateQueueRequest.QueueName = \"GlacierDownload-\" + ticks;\nCreateQueueResponse createQueueResponse =\nsqsClient.CreateQueue(createQueueRequest);\nqueueUrl = createQueueResponse.QueueUrl;\nConsole.Write(\"QueueURL: \"); Console.WriteLine(queueUrl);\nGetQueueAttributesRequest getQueueAttributesRequest = new\nGetQueueAttributesRequest();\ngetQueueAttributesRequest.AttributeNames = new List<string> { \"QueueArn\" };\ngetQueueAttributesRequest.QueueUrl = queueUrl;\nGetQueueAttributesResponse response =\nsqsClient.GetQueueAttributes(getQueueAttributesRequest);\nqueueArn = response.QueueARN;\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 69\n\nAmazon S3 Glacier Developer Guide\nConsole.Write(\"QueueArn: \");Console.WriteLine(queueArn);\n// Setup the Amazon SNS topic to publish to the SQS queue. snsClient.Subscribe(new SubscribeRequest()\n{\nProtocol = \"sqs\",\nEndpoint = queueArn,\nTopicArn = topicArn\n});\n// Add the policy to the queue so SNS can send messages to the queue. var policy = SQS_POLICY.Replace(\"{TopicArn}\", topicArn).Replace(\"{QuernArn}\",\nqueueArn);\nsqsClient.SetQueueAttributes(new SetQueueAttributesRequest()\n{\nQueueUrl = queueUrl,\nAttributes = new Dictionary<string, string>\n{\n{ QueueAttributeName.Policy, policy }\n}\n});\n}\nstatic void GetVaultInventory(AmazonGlacierClient client)\n{\n// Initiate job. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"inventory-retrieval\",\nDescription = \"This job is to download a vault inventory. \",\nSNSTopic = topicArn,\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n// Check queue for a message and if job completed successfully, download\ninventory. Downloading a Vault Inventory Using .NET API Version 2012-06-01 70\n\nAmazon S3 Glacier Developer Guide\nProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest()\n{ QueueUrl = queueUrl, MaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n} else if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the inventory. \");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 71\n\nAmazon S3 Glacier Developer Guide\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading a Vault Inventory Using the REST API\nTo download a vault inventory using the REST API\nDownloading a vault inventory is a two-step process. 1.",
      "start_idx": 140761,
      "end_idx": 147780,
      "metadata": {
        "num_sentences": 15,
        "num_words": 760,
        "breakpoint_idx": 727,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3834020705450149
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_69",
      "text": "Initiate a job of the inventory-retrieval type. For more information, see Initiate Job\n(POST jobs). 2. After the job completes, download the inventory data.",
      "start_idx": 147781,
      "end_idx": 147937,
      "metadata": {
        "num_sentences": 4,
        "num_words": 24,
        "breakpoint_idx": 731,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25172245502471924
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_70",
      "text": "For more information, see Get Job\nOutput (GET output). Downloading a Vault Inventory Using REST API Version 2012-06-01 72\n\nAmazon S3 Glacier Developer Guide\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nFollow these steps to download a vault inventory in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Downloading a Vault Inventory Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 73\n\nAmazon S3 Glacier Developer Guide\nExample: Downloading a Vault Inventory Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2.",
      "start_idx": 147938,
      "end_idx": 151743,
      "metadata": {
        "num_sentences": 14,
        "num_words": 264,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3663281032017299
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_71",
      "text": "Use the describe-job command to check status of the previous retrieval job. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. The job ID does not expire\nfor at least 24 hours after S3 Glacier completes the job. If you have either set a notification\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 74\n\nAmazon S3 Glacier Developer Guide\nconfiguration on the vault, or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set the notification configuration for specific events on the vault. For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a\nmessage to the specified SNS topic anytime the specific events occur. 4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nConfiguring Vault Notifications in Amazon S3 Glacier\nRetrieving anything from Amazon S3 Glacier, such as an archive from a vault or a vault inventory, is\na two-step process. 1.",
      "start_idx": 147938,
      "end_idx": 151743,
      "metadata": {
        "num_sentences": 14,
        "num_words": 288,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29116284716260304
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_72",
      "text": "Initiate a retrieval job. 2. After the job is completed, download the job output. Configuring Vault Notifications API Version 2012-06-01 75\n\nAmazon S3 Glacier Developer Guide\nYou can set a notification configuration on a vault so that when a job is completed, a message is\nsent to an Amazon Simple Notification Service (Amazon SNS) topic. Topics\n\u2022 Configuring Vault Notifications in S3 Glacier: General Concepts\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Configuring Vault Notifications in S3 Glacier Using the REST API\n\u2022 Configuring Vault Notifications by Using the S3 Glacier Console\n\u2022 Configuring Vault Notifications Using the AWS Command Line Interface\nConfiguring Vault Notifications in S3 Glacier: General Concepts\nA S3 Glacier retrieval job request is run asynchronously. You must wait until S3 Glacier completes\nthe job before you can get its output. You can periodically poll S3 Glacier to determine the job\nstatus, but that is not an optimal approach. S3 Glacier also supports notifications. When a job\nis completed, the job can post a message to an Amazon Simple Notification Service (Amazon\nSNS) topic. Using this feature requires you to set a notification configuration on the vault. In the\nconfiguration, you identify one or more events and an Amazon SNS topic to which you want S3\nGlacier to send a message when the event occurs.",
      "start_idx": 151744,
      "end_idx": 155347,
      "metadata": {
        "num_sentences": 11,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34215972206809303
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_73",
      "text": "S3 Glacier defines events specifically related to job completion (ArchiveRetrievalCompleted,\nInventoryRetrievalCompleted) that you can add to the vault's notification configuration. When a specific job is completed, S3 Glacier publishes a notification message to the SNS topic. The notification configuration is a JSON document as shown in the following example. {\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nYou can configure only one Amazon SNS topic for a vault. General Concepts API Version 2012-06-01 76\n\nAmazon S3 Glacier Developer Guide\nNote\nAdding a notification configuration to a vault causes S3 Glacier to send a notification each\ntime the event specified in the notification configuration occurs. You can also optionally\nspecify an Amazon SNS topic in each job initiation request. If you add both the notification\nconfiguration on the vault and also specify an Amazon SNS topic in your initiate job\nrequest, S3 Glacier sends both notifications. The job completion message S3 Glacier sends include information such as the type of job\n(InventoryRetrieval, ArchiveRetrieval), job completion status, SNS topic name, job status\ncode, and the vault ARN. The following is an example notification S3 Glacier sent to an SNS topic\nafter an InventoryRetrieval job is completed. {\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2012-06-12T22:20:40.790Z\",\n\"CreationDate\": \"2012-06-12T22:20:36.814Z\",\n\"InventorySizeInBytes\":11693,\n\"JobDescription\": \"my retrieval job\",\n\"JobId\":\"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"SHA256TreeHash\":null,\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\":\"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nIf the Completed field is true, you must also check the StatusCode to check if the job completed\nsuccessfully or failed. Note\nThe Amazon SNS topic must allow the vault to publish a notification.",
      "start_idx": 151744,
      "end_idx": 155347,
      "metadata": {
        "num_sentences": 11,
        "num_words": 256,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5319095958362926
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_74",
      "text": "By default, only the\nAmazon SNS topic owner can publish a message to the topic. However, if the Amazon SNS\ntopic and the vault are owned by different AWS accounts, then you must configure the\nGeneral Concepts API Version 2012-06-01 77\n\nAmazon S3 Glacier Developer Guide\nAmazon SNS topic to accept publications from the vault. You can configure the Amazon\nSNS topic policy in the Amazon SNS console. For more information about Amazon SNS, see Getting Started with Amazon SNS. Configuring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 155348,
      "end_idx": 156216,
      "metadata": {
        "num_sentences": 9,
        "num_words": 147,
        "breakpoint_idx": 790,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3492574691772461
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_75",
      "text": "2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class. You need to provide the vault name, notification configuration information, and account ID. In\nspecifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)). 3. Run the setVaultNotifications method by providing the request object as a parameter. The following Java code snippet illustrates the preceding steps.",
      "start_idx": 156217,
      "end_idx": 156863,
      "metadata": {
        "num_sentences": 8,
        "num_words": 91,
        "breakpoint_idx": 798,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.21326259204319545
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_76",
      "text": "The snippet sets a notification\nconfiguration on a vault. The configuration requests Amazon S3 Glacier (S3 Glacier) to send a\nnotification to the specified Amazon SNS topic when either the ArchiveRetrievalCompleted\nevent or the InventoryRetrievalCompleted event occurs. SetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n.withAccountId(\"-\")\n.withVaultName(\"*** provide vault name ***\")\n.withVaultNotificationConfig(\nnew VaultNotificationConfig()\n.withSNSTopic(\"*** provide SNS topic ARN ***\")\n.withEvents(\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\")\nConfiguring Vault Notifications Using Java API Version 2012-06-01 78\n\nAmazon S3 Glacier Developer Guide\n);\nclient.setVaultNotifications(request);\nNote\nFor information about the underlying REST API, see Vault Operations. Example: Setting the Notification Configuration on a Vault Using the AWS SDK for\nJava\nThe following Java code example sets a vault's notifications configuration, deletes the\nconfiguration, and then restores the configuration. For step-by-step instructions on how to run the\nfollowing example, see Using the AWS SDK for Java with Amazon S3 Glacier. Example\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsResult;\nimport com.amazonaws.services.glacier.model.SetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.VaultNotificationConfig;\npublic class AmazonGlacierVaultNotifications {\npublic static AmazonGlacierClient client;\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String snsTopicARN = \"*** provide sns topic ARN ***\";\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\nConfiguring Vault Notifications Using Java API Version 2012-06-01 79\n\nAmazon S3 Glacier Developer Guide\ntry {\nSystem.out.println(\"Adding notification configuration to the vault. \");\nsetVaultNotifications();\ngetVaultNotifications();\ndeleteVaultNotifications();\n} catch (Exception e) {\nSystem.err.println(\"Vault operations failed.\" + e.getMessage());\n}\n}\nprivate static void setVaultNotifications() {\nVaultNotificationConfig config = new VaultNotificationConfig()\n.withSNSTopic(snsTopicARN)\n.withEvents(\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\");\nSetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n.withVaultName(vaultName)\n.withVaultNotificationConfig(config);\nclient.setVaultNotifications(request);\nSystem.out.println(\"Notification configured for vault: \" + vaultName);\n}\nprivate static void getVaultNotifications() {\nVaultNotificationConfig notificationConfig = null;\nGetVaultNotificationsRequest request = new GetVaultNotificationsRequest()\n.withVaultName(vaultName);\nGetVaultNotificationsResult result = client.getVaultNotifications(request);\nnotificationConfig = result.getVaultNotificationConfig();\nSystem.out.println(\"Notifications configuration for vault: \"\n+ vaultName);\nSystem.out.println(\"Topic: \" + notificationConfig.getSNSTopic());\nSystem.out.println(\"Events: \" + notificationConfig.getEvents());\n}\nprivate static void deleteVaultNotifications() {\nDeleteVaultNotificationsRequest request = new\nDeleteVaultNotificationsRequest()\n.withVaultName(vaultName);\nclient.deleteVaultNotifications(request);\nConfiguring Vault Notifications Using Java API Version 2012-06-01 80\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Notifications configuration deleted for vault: \" +\nvaultName);\n}\n}\nConfiguring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for .NET. 1.",
      "start_idx": 156864,
      "end_idx": 160948,
      "metadata": {
        "num_sentences": 9,
        "num_words": 379,
        "breakpoint_idx": 807,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3688052495320638
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_77",
      "text": "Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.",
      "start_idx": 160949,
      "end_idx": 161144,
      "metadata": {
        "num_sentences": 3,
        "num_words": 32,
        "breakpoint_idx": 810,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.41779907544453937
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_78",
      "text": "2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class. You need to provide the vault name, notification configuration information, and account ID. If\nyou don't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier. In specifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)). 3. Run the SetVaultNotifications method by providing the request object as a parameter. 4. After setting notification configuration on a vault, you can retrieve configuration\ninformation by calling the GetVaultNotifications method, and remove it by calling the\nDeleteVaultNotifications method provided by the client. Example: Setting the Notification Configuration on a Vault Using the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example sets the\nnotification configuration on the vault (\"examplevault\") in the US West (Oregon) Region,\nretrieves the configuration, and then deletes it.",
      "start_idx": 161145,
      "end_idx": 166505,
      "metadata": {
        "num_sentences": 13,
        "num_words": 195,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2709196041791867
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_79",
      "text": "The configuration requests Amazon S3\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 81\n\nAmazon S3 Glacier Developer Guide\nGlacier (S3 Glacier) to send a notification to the specified Amazon SNS topic when either the\nArchiveRetrievalCompleted event or the InventoryRetrievalCompleted event occurs. Note\nFor information about the underlying REST API, see Vault Operations. For step-by-step instructions to run the following example, see Running Code Examples. You need\nto update the code as shown and provide an existing vault name and an Amazon SNS topic. Example\nusing System;\nusing System.Collections.Generic;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultNotificationSetGetDelete\n{\nstatic string vaultName = \"examplevault\";\nstatic string snsTopicARN = \"*** Provide Amazon SNS topic ARN ***\";\nstatic IAmazonGlacier client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Adding notification configuration to the vault. \");\nSetVaultNotificationConfig();\nGetVaultNotificationConfig();\nConsole.WriteLine(\"To delete vault notification configuration, press Enter\");\nConsole.ReadKey();\nDeleteVaultNotificationConfig();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 82\n\nAmazon S3 Glacier Developer Guide\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void SetVaultNotificationConfig()\n{\nSetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n{\nVaultName = vaultName,\nVaultNotificationConfig = new VaultNotificationConfig()\n{\nEvents = new List<string>() { \"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\" },\nSNSTopic = snsTopicARN\n}\n};\nSetVaultNotificationsResponse response = client.SetVaultNotifications(request);\n}\nstatic void GetVaultNotificationConfig()\n{\nGetVaultNotificationsRequest request = new GetVaultNotificationsRequest()\n{\nVaultName = vaultName,\nAccountId = \"-\"\n};\nGetVaultNotificationsResponse response = client.GetVaultNotifications(request);\nConsole.WriteLine(\"SNS Topic ARN: {0}\",\nresponse.VaultNotificationConfig.SNSTopic);\nforeach (string s in response.VaultNotificationConfig.Events)\nConsole.WriteLine(\"Event : {0}\", s);\n}\nstatic void DeleteVaultNotificationConfig()\n{\nDeleteVaultNotificationsRequest request = new DeleteVaultNotificationsRequest()\n{\nVaultName = vaultName\n};\nDeleteVaultNotificationsResponse response =\nclient.DeleteVaultNotifications(request);\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 83\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\nConfiguring Vault Notifications in S3 Glacier Using the REST API\nTo configure vault notifications using the REST API, see Set Vault Notification Configuration\n(PUT notification-configuration). Additionally, you can also get vault notifications (Get Vault\nNotifications (GET notification-configuration)) and delete vault notifications (Delete Vault\nNotifications (DELETE notification-configuration)). Configuring Vault Notifications by Using the S3 Glacier Console\nThis section describes how to configure vault notifications by using the Amazon S3 Glacier console. When you configure notifications, you specify job-completion events that send a notification to an\nAmazon Simple Notification Service (Amazon SNS) topic. In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notifications to when you initiate a job. If your\nvault is configured to send a notification for a specific event and you also configure notifications in\nthe job-initiation request, then two notifications are sent. To configure a vault notification\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 161145,
      "end_idx": 166505,
      "metadata": {
        "num_sentences": 14,
        "num_words": 463,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38805020510495364
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_80",
      "text": "In the left navigation pane, choose Vaults. 3. In the Vaults list, choose a vault. 4. In the Notifications section, choose Edit. 5. On the Event notifications page, choose Turn on notifications.",
      "start_idx": 166506,
      "end_idx": 166700,
      "metadata": {
        "num_sentences": 7,
        "num_words": 32,
        "breakpoint_idx": 844,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.255086308433896
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_81",
      "text": "6. In the Notifications section, choose one of the following Amazon Simple Notification Service\n(Amazon SNS) options, and then follow the corresponding steps:\nAmazon SNS options Action\nCreate new SNS topic\n1. Choose Create new SNS topic. 2.",
      "start_idx": 166701,
      "end_idx": 166941,
      "metadata": {
        "num_sentences": 4,
        "num_words": 38,
        "breakpoint_idx": 848,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25997241338094074
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_82",
      "text": "For Topic name, enter the name of the new topic. Configuring Vault Notifications Using the REST API API Version 2012-06-01 84\n\nAmazon S3 Glacier Developer Guide\nAmazon SNS options Action\nTopic names can be up to 256 characters. Alphanumeric characters, hyphens (-), and und\nerscores (_) are allowed. Topic names must be\nunique within the account and AWS Region. 3. (Optional) If you want to subscribe to the topic by\nusing SMS messages, enter a name for Display\nname. A display name can have up to 100 characters. Choose an existing SNS topic\n1. Choose Choose an existing SNS topic. 2.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 101,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23390577104356552
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_83",
      "text": "Under Specify SNS topic, choose one of the fol\nlowing options:\n\u2022\nChoose from your SNS topics\nAn SNS topic dropdown list appears. Choose an existing topic from the dropdown\nlist. \u2022\nEnter SNS topic ARN\nAn Amazon SNS topic ARN text box appears. Enter the Amazon Resource Name (ARN) for\nyour SNS topic. An SNS topic ARN has the\nfollowing format:\narn:aws:sns: region:account-i\nd :topic-name\nYou can find the SNS topic ARN in the Amazon\nSNS console. Configuring Vault Notifications by Using the Console API Version 2012-06-01 85\n\nAmazon S3 Glacier Developer Guide\n7. Under Events, select one or both events that you want to send notifications:\n\u2022 To send a notification only when archive retrieval jobs are complete, select Archive Retrieval\nJob Complete. \u2022 To send a notification only when vault inventory jobs are complete, select Vault Inventory\nRetrieval Job Complete. Configuring Vault Notifications Using the AWS Command Line Interface\nThis section describes how to configure vault notifications using the AWS Command Line Interface. When you configure notifications, you specify job completion events that trigger notification to an\nAmazon Simple Notification Service (Amazon SNS) topic.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 187,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32314588758680557
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_84",
      "text": "In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notification to when you initiate a job. If your\nvault is configured to notify for a specific event and you specify notification in the job initiation\nrequest, then two notifications are sent. Follow these steps to configure vault notification using the AWS CLI. Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Configure Vault Notifications Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\nConfiguring Vault Notifications Using the CLI API Version 2012-06-01 86\n\nAmazon S3 Glacier Developer Guide\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39136823018391925
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_85",
      "text": "Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Configure Vault Notifications Using the AWS CLI\n1. Use the set-vault-notifications command to configure notifications that will be sent\nwhen specific events happen to a vault. By default, you don't get any notifications. aws glacier set-vault-notifications --vault-name examplevault --account-\nid 111122223333 --vault-notification-config file://notificationconfig.json\n2. The notification configuration is a JSON document as shown in the following example. {\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nFor more information about using Amazon SNS topics for S3 Glacier see, Configuring Vault\nNotifications in S3 Glacier: General Concepts\nFor more information about Amazon SNS, see Getting Started with Amazon SNS. Deleting a Vault in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) deletes a vault only if there are no archives in the vault as of the\nlast inventory it computed and there have been no writes to the vault since the last inventory. For\ninformation about deleting archives, see Deleting an Archive in Amazon S3 Glacier.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.386848153008355
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_86",
      "text": "For information\nabout downloading a vault inventory, Downloading a Vault Inventory in Amazon S3 Glacier. Deleting a Vault API Version 2012-06-01 87\n\nAmazon S3 Glacier Developer Guide\nNote\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. Because the\ninventory might not reflect the latest information, S3 Glacier ensures the vault is indeed\nempty by checking if there were any write operations since the last vault inventory. Topics\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting a Vault in S3 Glacier Using the REST API\n\u2022 Deleting an Empty Vault by Using the S3 Glacier Console\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nDeleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete a vault using the low-level API of the AWS SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region. 2. Provide request information by creating an instance of the DeleteVaultRequest class.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28106469048394095
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_87",
      "text": "You need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for Java with Amazon S3 Glacier. 3. Run the deleteVault method by providing the request object as a parameter. Amazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault). The following Java code snippet illustrates the preceding steps. try {\nDeleting a Vault Using Java API Version 2012-06-01 88\n\nAmazon S3 Glacier Developer Guide\nDeleteVaultRequest request = new DeleteVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nclient.deleteVault(request);\nSystem.out.println(\"Deleted vault: \" + vaultName);\n} catch (Exception e) {\nSystem.err.println(e.getMessage());\n}\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault). Example: Deleting a Vault Using the AWS SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27433976067437066
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_88",
      "text": "The Java\ncode example shows basic vault operations including create and delete vault. Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete a vault. Topics\n\u2022 Deleting a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nDeleting a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteVault method\nyou can use to delete a vault. Example: Deleting a Vault Using the High-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the High-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault. Deleting a Vault Using .NET API Version 2012-06-01 89\n\nAmazon S3 Glacier Developer Guide\nDeleting a Vault Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps to delete a vault using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 231,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4149469163682726
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_89",
      "text": "2. Provide request information by creating an instance of the DeleteVaultRequest class. You need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier. 3. Run the DeleteVault method by providing the request object as a parameter. Amazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault). The following C# code snippet illustrates the preceding steps.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 101,
        "chunk_type": "semantic_split",
        "coherence_score": 0.20631720225016276
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_90",
      "text": "The snippet retrieves metadata\ninformation of a vault that exists in the default AWS Region. AmazonGlacier client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = \"*** provide vault name ***\"\n};\nDeleteVaultResponse response = client.DeleteVault(request);\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault). Deleting a Vault Using .NET API Version 2012-06-01 90\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault. Deleting a Vault in S3 Glacier Using the REST API\nTo delete a vault using the REST API, see Delete Vault (DELETE vault). Deleting an Empty Vault by Using the S3 Glacier Console\nNote\nBefore deleting a vault, you must delete all existing archives within the vault. You can do\nthis by writing code to make a delete archive request by using either the REST API, the AWS\nSDK for Java, the AWS SDK for .NET, or by using the AWS Command Line Interface (AWS\nCLI). For information about deleting archives, see Step 5: Delete an Archive from a Vault in\nS3 Glacier. After your vault is empty, you can delete it by using the following steps. To delete an empty vault by using the Amazon S3 Glacier console\n1. Sign into the AWS Management Console and open the S3 Glacier console at S3 Glacier\nConsole. 2. Under Select a Region, choose the AWS Region where the vault exists. 3.",
      "start_idx": 166942,
      "end_idx": 177079,
      "metadata": {
        "num_sentences": 14,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40783179985297907
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_91",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, select the option button next to the name of the vault that you want to\ndelete, and then choose Delete at the top of the page. 5. In the Delete vault dialog box, confirm that you want to delete the vault by choosing Delete. Important\nDeleting a vault can't be undone. 6. To verify that you've deleted the vault, open the Vaults list and enter the name of the vault\nthat you deleted. If the vault can't be found, your deletion was successful. Deleting a Vault Using REST API Version 2012-06-01 91\n\nAmazon S3 Glacier Developer Guide\nDeleting a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nYou can delete empty and nonempty vaults in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Empty Vault Using the AWS CLI\n\u2022 Example: Deleting a Nonempty Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1.",
      "start_idx": 177080,
      "end_idx": 179511,
      "metadata": {
        "num_sentences": 11,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3451347004283558
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_92",
      "text": "Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 92\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting an Empty Vault Using the AWS CLI\n\u2022 Use the delete-vault command to delete a vault that contains no archives. \u2022\naws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nExample: Deleting a Nonempty Vault Using the AWS CLI\nS3 Glacier deletes a vault only if there are no archives in the vault as of the last inventory\nit computed, and there have been no writes to the vault since the last inventory. Deleting a\nnonempty vault is a three-step process: retrieving archive IDs from a vault's inventory report,\ndeleting each archive, and then deleting the vault. 1.",
      "start_idx": 177080,
      "end_idx": 179511,
      "metadata": {
        "num_sentences": 12,
        "num_words": 233,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3311671054724491
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_93",
      "text": "Use the initiate-job command to start an inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 93\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.",
      "start_idx": 179512,
      "end_idx": 183394,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3274059295654297
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_94",
      "text": "4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 94\n\nAmazon S3 Glacier Developer Guide\n5. Use the delete-archive command to delete each archive from a vault until none remain. aws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nNote\nIf your Archive ID starts with a hyphen or another special character you will need to put\nit in quotes in order to run this command. 6. Use the initiate-job command to start a new inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\n7. When it's complete, use the delete-vault command to delete a vault with no archives.",
      "start_idx": 179512,
      "end_idx": 183394,
      "metadata": {
        "num_sentences": 10,
        "num_words": 179,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29593285454644097
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_95",
      "text": "aws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nTagging Your S3 Glacier Vaults\nYou can assign your own metadata to Amazon S3 Glacier vaults in the form of tags. A tag is a key-\nvalue pair that you define for a vault. For basic information about tagging, including restrictions on\ntags, see Tagging Amazon S3 Glacier Resources. The following topics describe how you can add, list, and remove tags for vaults. Topics\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier Console\n\u2022 Tagging Vaults by Using the AWS CLI\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier API\n\u2022 Related Sections\nTagging Vaults API Version 2012-06-01 95\n\nAmazon S3 Glacier Developer Guide\nTagging Vaults by Using the Amazon S3 Glacier Console\nYou can add, list, and remove tags using the S3 Glacier console, as described in the following\nprocedures. To view the tags for a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 179512,
      "end_idx": 183394,
      "metadata": {
        "num_sentences": 10,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3214568667941623
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_96",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose a vault. 5. Choose the Vaults properties tab. Scroll to the Tags section to view the tags associated with\nthe vault. To add a tag to a vault\nYou can associate up to 50 tags to a vault. Tags that are associated with a vault must have unique\ntag keys. For more information about tag restrictions, see Tagging Amazon S3 Glacier Resources. 1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 183395,
      "end_idx": 184002,
      "metadata": {
        "num_sentences": 14,
        "num_words": 106,
        "breakpoint_idx": 1009,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2722005948915586
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_97",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose the name of the vault that you want to add tags to. 5. Choose the Vault properties tab. 6. In the Tags section, choose Add. The Add tags page appears. 7. On the Add tags page, specify the tag key in the Key field, and optionally specify a tag value\nin the Value field. 8.",
      "start_idx": 184003,
      "end_idx": 184348,
      "metadata": {
        "num_sentences": 11,
        "num_words": 68,
        "breakpoint_idx": 1020,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3240986217151989
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_98",
      "text": "Choose Save changes. Tagging Vaults by Using the Amazon S3 Glacier Console API Version 2012-06-01 96\n\nAmazon S3 Glacier Developer Guide\nTo edit a tag\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 184349,
      "end_idx": 184696,
      "metadata": {
        "num_sentences": 6,
        "num_words": 56,
        "breakpoint_idx": 1026,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1976705551147461
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_99",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose a vault name. 5. Choose the Vault properties tab, and then scroll down to the Tags section. 6. Under Tags, select the check box next to the tags that you want to change, then choose Edit. The Edit tags page appears. 7. Update the tag key in the Key field, and optionally update the tag value in the Value field. 8.",
      "start_idx": 184697,
      "end_idx": 185085,
      "metadata": {
        "num_sentences": 11,
        "num_words": 74,
        "breakpoint_idx": 1037,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2932796131480824
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_100",
      "text": "Choose Save changes. To remove a tag from a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 185086,
      "end_idx": 185333,
      "metadata": {
        "num_sentences": 6,
        "num_words": 41,
        "breakpoint_idx": 1043,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.15249964396158855
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_101",
      "text": "In the left navigation pane, choose Vaults. 4. In the Vaults list, choose the name of the vault that you want to remove tags from. 5. Choose the Vault properties tab. Scroll down to the Tags section.",
      "start_idx": 185334,
      "end_idx": 185533,
      "metadata": {
        "num_sentences": 6,
        "num_words": 37,
        "breakpoint_idx": 1049,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28024543126424156
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_102",
      "text": "6. Under Tags, select the check box next to the tags that you want to remove, then choose\nDelete. 7. The Delete tags dialog box opens. To confirm that you want to delete the selected tags,\nchoose Delete. Tagging Vaults by Using the AWS CLI\nFollow these steps to add, list, or remove tags by using the AWS Command Line Interface (AWS\nCLI). Each tag is composed of a key and a value. Each vault can have up to 50 tags. 1. To add tags to a vault, use the add-tags-to-vault command.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 92,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30171271430121527
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_103",
      "text": "Tagging Vaults by Using the AWS CLI API Version 2012-06-01 97\n\nAmazon S3 Glacier Developer Guide\naws glacier add-tags-to-vault --vault-name examplevault --account-id 111122223333\n--tags id=1234,date=2020\nFor more information on this vault operation, see Add Tags To Vault . 2. To list all the tags attached to a vault, use the list-tags-for-vault command. aws glacier list-tags-for-vault --vault-name examplevault --account-id 111122223333\nFor more information on this vault operation, see List Tags For Vault. 3. To remove one or more tags from the set of tags attached to a vault, use the remove-tags-\nfrom-vault command. aws glacier remove-tags-from-vault --vault-name examplevault --account-\nid 111122223333 --tag-keys date\nFor more information on this vault operation, see Remove Tags From Vault. Tagging Vaults by Using the Amazon S3 Glacier API\nYou can add, list, and remove tags by using the S3 Glacier API. For examples, see the following\ndocumentation:\nAdd Tags To Vault (POST tags add)\nAdds or updates tags for the specified vault. List Tags For Vault (GET tags)\nLists the tags for the specified vault.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4836990780300564
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_104",
      "text": "Remove Tags From Vault (POST tags remove)\nRemoves tags from the specified vault. Related Sections\n\u2022 Tagging Amazon S3 Glacier Resources\nTagging Vaults by Using the Amazon S3 Glacier API API Version 2012-06-01 98\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Vault Lock\nThe following topics describe how to lock a vault in Amazon S3 Glacier and how to use Vault Lock\npolicies. Topics\n\u2022 Vault Locking Overview\n\u2022 Locking a Vault by Using the S3 Glacier API\n\u2022 Locking a Vault using the AWS Command Line Interface\n\u2022 Locking a Vault by Using the S3 Glacier Console\nVault Locking Overview\nS3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a Vault Lock policy. You can specify controls such as \"write once read\nmany\" (WORM) in a Vault Lock policy and lock the policy from future edits. Important\nAfter a Vault Lock policy is locked, the policy can no longer be changed or deleted. S3 Glacier enforces the controls set in the Vault Lock policy to help achieve your compliance\nobjectives. For example, you can use Vault Lock policies to enforce data retention. You can deploy\na variety of compliance controls in a Vault Lock policy by using the AWS Identity and Access\nManagement (IAM) policy language. For more information about Vault Lock policies, see Vault Lock\nPolicies. A Vault Lock policy is different from a vault access policy.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 239,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5477564917670356
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_105",
      "text": "Both policies govern access controls to\nyour vault. However, a Vault Lock policy can be locked to prevent future changes, which provides\nstrong enforcement for your compliance controls. You can use the Vault Lock policy to deploy\nregulatory and compliance controls, which typically require tight controls on data access. Important\nWe recommend that you first create a vault, complete a Vault Lock policy, and then upload\nyour archives to the vault so that the policy will be applied to them. Vault Lock API Version 2012-06-01 99\n\nAmazon S3 Glacier Developer Guide\nIn contrast, you use a vault access policy to implement access controls that are not compliance\nrelated, temporary, and subject to frequent modification. You can use Vault lock and vault access\npolicies together. For example, you can implement time-based data-retention rules in the Vault\nLock policy (deny deletes), and grant read access to designated third parties or your business\npartners (allow reads) in your vault access policy. Locking a vault takes two steps:\n1. Initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24\nhours to validate your Vault Lock policy before the lock ID expires.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 214,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6151906331380208
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_106",
      "text": "To prevent your vault from\nexiting the in-progress state, you must complete the Vault Lock process within these 24 hours. Otherwise, your Vault Lock policy will be deleted. 2. Use the lock ID to complete the lock process. If the Vault Lock policy doesn't work as expected,\nyou can stop the Vault Lock process and restart from the beginning. For information about how\nto use the S3 Glacier API to lock a vault, see Locking a Vault by Using the S3 Glacier API. Locking a Vault by Using the S3 Glacier API\nTo lock your vault with the Amazon S3 Glacier API, you first call Initiate Vault Lock (POST lock-\npolicy) with a Vault Lock policy that specifies the controls that you want to deploy. The Initiate\nVault Lock operation attaches the policy to your vault, transitions the Vault Lock to the in-\nprogress state, and returns a unique lock ID. After the Vault Lock enters the in-progress state, you\nhave 24 hours to complete the lock by calling Complete Vault Lock (POST lockId) with the lock ID\nthat was returned from the Initiate Vault Lock call. Important\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 10,
        "num_words": 219,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45116742451985675
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_107",
      "text": "\u2022 After the Vault Lock policy is locked, it cannot be changed or deleted. If you don't complete the Vault Lock process within 24 hours after entering the in-progress state,\nyour vault automatically exits the in-progress state, and the Vault Lock policy is removed. You can\ncall Initiate Vault Lock again to install a new Vault Lock policy and transition into the in-\nprogress state. Vault Locking by Using the API API Version 2012-06-01 100\n\nAmazon S3 Glacier Developer Guide\nThe in-progress state provides the opportunity to test your Vault Lock policy before you lock it. Your Vault Lock policy takes full effect during the in-progress state just as if the vault has been\nlocked, except that you can remove the policy by calling Abort Vault Lock (DELETE lock-policy). To fine-tune your policy, you can repeat the Abort Vault Lock/Initiate Vault Lock\ncombination as many times as necessary to validate your Vault Lock policy changes. After you validate the Vault Lock policy, you can call Complete Vault Lock (POST lockId) with the\nmost recent lock ID to complete the vault locking process. Your vault transitions to a locked state,\nwhere the Vault Lock policy is unchangeable and can no longer be removed by calling Abort\nVault Lock. Related Sections\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault using the AWS Command Line Interface\nYou can lock your vault using the AWS Command Line Interface. This will install a vault lock policy\non the specified vault and return the lock ID. You must complete the vault locking process within\n24 hours else the vault lock policy is removed from the vault. (Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.",
      "start_idx": 185534,
      "end_idx": 193116,
      "metadata": {
        "num_sentences": 15,
        "num_words": 347,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4438433329264323
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_108",
      "text": "These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. Vault Locking Using the CLI API Version 2012-06-01 101\n\nAmazon S3 Glacier Developer Guide\n\u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\n1. Use the initiate-vault-lock to install a vault lock policy and sets the lock state of the\nvault lock to InProgress. aws glacier initiate-vault-lock --vault-name examplevault --account-id 111122223333\n--policy file://lockconfig.json\n2. The lock configuration is a JSON document as shown in the following example. Before using\nthis command, replace the VAULT_ARN and Principal with the appropriate values for your\nuse case. To find the ARN of the vault you wish to lock, you can use the list-vaults command. {\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-lock\n\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::111122223333:root\\\"},\n\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"VAULT_ARN\\\",\\\"Condition\\\":\n{\\\"NumericLessThanEquals\\\":{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\n3.",
      "start_idx": 193117,
      "end_idx": 196437,
      "metadata": {
        "num_sentences": 12,
        "num_words": 169,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3920040419607451
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_109",
      "text": "After initiating the vault lock you should see the lockId returned. {\n\"lockId\": \"LOCK_ID\"\n}\nVault Locking Using the CLI API Version 2012-06-01 102\n\nAmazon S3 Glacier Developer Guide\nTo complete the vault lock You must run complete-vault-lock within 24 hours else the vault\nlock policy is removed from the vault. aws glacier complete-vault-lock --vault-name examplevault --account-id 111122223333 --\nlock-id LOCK_ID\nRelated Sections\n\u2022 initiate-vault-lock in the AWS CLI Command Reference\n\u2022 list-vaults in the AWS CLI Command Reference\n\u2022 complete-vault-lock in the AWS CLI Command Reference\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault by Using the S3 Glacier Console\nAmazon S3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for\nindividual S3 Glacier vaults with a Vault Lock policy. For more information about S3 Glacier Vault\nLock, see Amazon S3 Glacier Access Control with Vault Lock Policies. Important\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them. \u2022 After the Vault Lock policy is locked, it cannot be changed or deleted. To initiate a Vault Lock policy on your vault by using the S3 Glacier console\nYou initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24 hours\nto validate your Vault Lock policy before the lock ID expires. Vault Locking by Using the Console API Version 2012-06-01 103\n\nAmazon S3 Glacier Developer Guide\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2. Under Select a Region, select an AWS Region from the Region selector. 3.",
      "start_idx": 193117,
      "end_idx": 196437,
      "metadata": {
        "num_sentences": 13,
        "num_words": 323,
        "chunk_type": "semantic_split",
        "coherence_score": 0.371092038276868
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_110",
      "text": "In the left navigation pane, choose Vaults. 4. On the Vaults page, choose Create vault. 5. Create a new vault. Important\nWe recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them. 6.",
      "start_idx": 196438,
      "end_idx": 196722,
      "metadata": {
        "num_sentences": 7,
        "num_words": 52,
        "breakpoint_idx": 1146,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3250454948061988
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_111",
      "text": "Choose your new vault from the Vaults list. 7. Choose the Vault policies tab. 8. In the Vault Lock policy section, choose Initiate Vault Lock policy. 9. On the Initiate Vault Lock policy page, specify the record retention controls in your Vault Lock\npolicy in text format in the standard text box. Note\nYou can specify the record retention controls in a Vault Lock policy in text format\nand initiate the Vault Lock by calling the Initiate Vault Lock API operation or\nthrough the interactive UI in the S3 Glacier console. For information about formatting\nyour Vault Lock policy, see Amazon S3 Glacier Vault Lock Policy Examples. 10.",
      "start_idx": 196723,
      "end_idx": 197354,
      "metadata": {
        "num_sentences": 10,
        "num_words": 108,
        "breakpoint_idx": 1156,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3205615997314453
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_112",
      "text": "Choose Save changes. 11. In the Record Vault Lock ID dialog box, copy your Lock ID and save it in a safe place. Important\nAfter the Vault Lock policy has been initiated, you have 24 hours to validate the policy\nand complete the lock process. To complete the lock process, you must provide the\nlock ID. If it's not provided within 24 hours, the lock ID expires and your in-progress\npolicy is deleted. 12.",
      "start_idx": 197355,
      "end_idx": 197758,
      "metadata": {
        "num_sentences": 7,
        "num_words": 74,
        "breakpoint_idx": 1163,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.24844987051827566
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_113",
      "text": "After saving your lock ID in a safe place, choose Close. Vault Locking by Using the Console API Version 2012-06-01 104\n\nAmazon S3 Glacier Developer Guide\n13. Test your Vault Lock policy within the next 24 hours. If the policy is working as intended,\nchoose Complete Vault Lock policy. 14. In the Complete Vault Lock dialog box, select the check box to acknowledge that completing\nthe Vault Lock policy process is irreversible. 15.",
      "start_idx": 197759,
      "end_idx": 198189,
      "metadata": {
        "num_sentences": 7,
        "num_words": 73,
        "breakpoint_idx": 1170,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3226220721290225
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_114",
      "text": "Enter your provided Lock ID in the text box. 16. Choose Complete Vault Lock. Vault Locking by Using the Console API Version 2012-06-01 105\n\nAmazon S3 Glacier Developer Guide\nWorking with Archives in Amazon S3 Glacier\nAn archive is any object, such as a photo, video, or document, that you store in a vault. It is a base\nunit of storage in Amazon S3 Glacier (S3 Glacier). Each archive has a unique ID and an optional\ndescription. When you upload an archive, S3 Glacier returns a response that includes an archive\nID. This archive ID is unique in the AWS Region in which the archive is stored. The following is an\nexample archive ID. TJgHcrOSfAkV6hdPqOATYfp_0ZaxL1pIBOc02iZ0gDPMr2ig-\nnhwd_PafstsdIf6HSrjHnP-3p6LCJClYytFT_CBhT9CwNxbRaM5MetS3I-\nGqwxI3Y8QtgbJbhEQPs0mJ3KExample\nArchive IDs are 138 bytes long.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 123,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29239281548394097
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_115",
      "text": "When you upload an archive, you can provide an optional\ndescription. You can retrieve an archive using its ID but not its description. Important\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface. Topics\n\u2022 Archive Operations in Amazon S3 Glacier\n\u2022 Maintaining Client-Side Archive Metadata\n\u2022 Uploading an Archive in Amazon S3 Glacier\n\u2022 Downloading an Archive in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nAPI Version 2012-06-01 106\n\nAmazon S3 Glacier Developer Guide\nArchive Operations in Amazon S3 Glacier\nS3 Glacier supports the following basic archive operations: upload, download, and delete. Downloading an archive is an asynchronous operation.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31274460686577693
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_116",
      "text": "Uploading an Archive in Amazon S3 Glacier\nYou can upload an archive in a single operation or upload it in parts. The API call you use to upload\nan archive in parts is referred as Multipart Upload. For more information, see Uploading an Archive\nin Amazon S3 Glacier. Important\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface. Finding an Archive ID in Amazon S3 Glacier\nYou can get the archive ID by downloading the vault inventory for the vault that contains the\narchive.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4131844414605035
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_117",
      "text": "For more information about downloading the vault inventory, see Downloading a Vault\nInventory in Amazon S3 Glacier. Downloading an Archive in Amazon S3 Glacier\nDownloading an archive is an asynchronous operation. You must first initiate a job to download\na specific archive. After receiving the job request, S3 Glacier prepares your archive for download. After the job completes, you can download your archive data. Because of the asynchronous nature\nof the job, you can request S3 Glacier to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when the job completes. You can specify an SNS topic for each\nindividual job request or configure your vault to send a notification when specific events occur. For\nmore information about downloading an archive, see Downloading an Archive in S3 Glacier. Archive Operations API Version 2012-06-01 107\n\nAmazon S3 Glacier Developer Guide\nDeleting an Archive in Amazon S3 Glacier\nS3 Glacier provides an API call that you can use to delete one archive at a time. For more\ninformation, see Deleting an Archive in Amazon S3 Glacier.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5474928961859808
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_118",
      "text": "Updating an Archive in S3 Glacier\nAfter you upload an archive, you cannot update its content or its description. The only way you\ncan update the archive content or its description is by deleting the archive and uploading another\narchive. Note that each time you upload an archive, S3 Glacier returns to you a unique archive ID. Maintaining Client-Side Archive Metadata\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. When you upload an archive S3 Glacier assigns an ID, an opaque sequence of\ncharacters, from which you cannot infer any meaning about the archive. You might maintain\nmetadata about the archives on the client-side. The metadata can include archive name and some\nother meaningful information about the archive. Note\nIf you are an Amazon Simple Storage Service (Amazon S3) customer, you know that\nwhen you upload an object to a bucket, you can assign the object an object key such as\nMyDocument.txt or SomePhoto.jpg. In S3 Glacier, you cannot assign a object key to the\narchives you upload. If you maintain client-side archive metadata, note that S3 Glacier maintains a vault inventory\nthat includes archive IDs and any descriptions you provided during the archive upload.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5579257541232638
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_119",
      "text": "You might\noccasionally download the vault inventory to reconcile any issues in your client-side database you\nmaintain for the archive metadata. However, S3 Glacier takes vault inventory approximately daily. When you request a vault inventory, S3 Glacier returns the last inventory it prepared, a point in\ntime snapshot. Uploading an Archive in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides a management console, which you can use to create\nand delete vaults. However, you cannot upload archives to S3 Glacier by using the management\nDeleting an Archive API Version 2012-06-01 108\n\nAmazon S3 Glacier Developer Guide\nconsole. To upload data, such as photos, videos, and other documents, you must either use the\nAWS CLI or write code to make requests, by using either the REST API directly or by using the\nAmazon SDKs. For information about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3 Glacier. To install the AWS CLI, go to AWS Command Line Interface. The following Uploading topics\ndescribe how to upload archives to S3 Glacier by using the Amazon SDK for Java, the Amazon SDK\nfor .NET, and the REST API. Topics\n\u2022 Options for Uploading an Archive to Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\nOptions for Uploading an Archive to Amazon S3 Glacier\nDepending on the size of the data you are uploading, S3 Glacier offers the following options:\n\u2022 Upload archives in a single operation \u2013 In a single operation, you can upload archives from 1\nbyte to up to 4 GB in size.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 269,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47015351189507376
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_120",
      "text": "However, we encourage S3 Glacier customers to use multipart upload\nto upload archives greater than 100 MB. For more information, see Uploading an Archive in a\nSingle Operation. \u2022 Upload archives in parts \u2013 Using the multipart upload API, you can upload large archives, up to\nabout 40,000 GB (10,000 * 4 GB). The multipart upload API call is designed to improve the upload experience for larger archives. You can upload archives in parts. These parts can be uploaded independently, in any order, and\nin parallel. If a part upload fails, you only need to upload that part again and not the entire\narchive. You can use multipart upload for archives from 1 byte to about 40,000 GB in size. For\nmore information, see Uploading Large Archives in Parts (Multipart Upload). Important\nThe S3 Glacier vault inventory is only updated once a day.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 143,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5432814280192058
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_121",
      "text": "When you upload an archive,\nyou will not immediately see the new archive added to your vault (in the console or in your\ndownloaded vault inventory list) until the vault inventory has been updated. Options for Uploading an Archive API Version 2012-06-01 109\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS Snowball Service\nAWS Snowball accelerates moving large amounts of data into and out of AWS using Amazon-\nowned devices, bypassing the internet. For more information, see AWS Snowball detail page. To upload existing data to Amazon S3 Glacier (S3 Glacier), you might consider using one of the\nAWS Snowball device types to import data into Amazon S3, and then move it to the S3 Glacier\nstorage class for archival using lifecycle rules. When you transition Amazon S3 objects to the\nS3 Glacier storage class, Amazon S3 internally uses S3 Glacier for durable storage at lower cost. Although the objects are stored in S3 Glacier, they remain Amazon S3 objects that you manage in\nAmazon S3, and you cannot access them directly through S3 Glacier. For more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. Uploading an Archive in a Single Operation\nAs described in Uploading an Archive in Amazon S3 Glacier, you can upload smaller archives\nin a single operation. However, we encourage Amazon S3 Glacier (S3 Glacier) customers to use\nMultipart Upload to upload archives greater than 100 MB. Topics\n\u2022 Uploading an Archive in a Single Operation Using the AWS Command Line Interface\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for .NET in Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation Using the REST API\nUploading an Archive in a Single Operation Using the AWS Command Line\nInterface\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI).",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 10,
        "num_words": 344,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5541934119330512
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_122",
      "text": "Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Upload an Archive Using the AWS CLI\nUploading an Archive in a Single Operation API Version 2012-06-01 110\n\nAmazon S3 Glacier Developer Guide\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Upload an Archive Using the AWS CLI\nIn order to upload an archive you must have a vault created. For more information about creating\nvaults, see Creating a Vault in Amazon S3 Glacier. 1. Use the upload-archive command to add an archive to an existing vault. In the below\nexample replace the vault name and account ID. For the body parameter specify a path to\nthe file you wish to upload. aws glacier upload-archive --vault-name awsexamplevault --account-id 123456789012\n--body archive.zip\n2. Expected output:\nUploading an Archive in a Single Operation API Version 2012-06-01 111\n\nAmazon S3 Glacier Developer Guide\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\": \"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/123456789012/vaults/awsexamplevault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nWhen finished the command will output the archive ID, checksum, and location in S3 Glacier. For more information about the upload-archive command, see upload-archive in the AWS CLI\nCommand Reference.",
      "start_idx": 198190,
      "end_idx": 210248,
      "metadata": {
        "num_sentences": 18,
        "num_words": 301,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3378291410558364
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_123",
      "text": "Uploading an Archive in a Single Operation Using the AWS SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload an archive. Topics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nUploading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the upload method, which\nyou can use to upload an archive to a vault. Note\nYou can use the upload method to upload small or large archives. Depending on the\narchive size you are uploading, this method determines whether to upload it in a single\noperation or use the multipart upload API to upload the archive in parts. Uploading an Archive in a Single Operation API Version 2012-06-01 112\n\nAmazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region (us-west-2). For a list of supported AWS Regions and endpoints, see Accessing\nAmazon S3 Glacier. For step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You need to update the code as shown with the name of the vault you\nwant to upload to and the name of the file you want to upload. Example\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.glacier.transfer.UploadResult;\npublic class ArchiveUploadHighLevel {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String archiveToUpload = \"*** provide name of file to upload ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(client,\ncredentials);\nUploadResult result = atm.upload(vaultName, \"my archive \" + (new Date()),\nnew File(archiveToUpload));\nSystem.out.println(\"Archive ID: \" + result.getArchiveId());\nUploading an Archive in a Single Operation API Version 2012-06-01 113\n\nAmazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for Java. 1.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 11,
        "num_words": 413,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4118870475075462
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_124",
      "text": "Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region. 2. Provide request information by creating an instance of the UploadArchiveRequest class. In addition to the data you want to upload, you need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, the content length of the data, and your account ID. If you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for Java\nwith Amazon S3 Glacier. 3. Run the uploadArchive method by providing the request object as a parameter. In response, Amazon S3 Glacier (S3 Glacier) returns an archive ID of the newly uploaded archive.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 11,
        "num_words": 147,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22944835316051138
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_125",
      "text": "The following Java code snippet illustrates the preceding steps. AmazonGlacierClient client;\nUploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withChecksum(checksum)\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nUploading an Archive in a Single Operation API Version 2012-06-01 114\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Location (includes ArchiveID): \" +\nuploadArchiveResult.getLocation());\nExample: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the vault you want to upload to and the name of the file you want to upload. import java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.UploadArchiveRequest;\nimport com.amazonaws.services.glacier.model.UploadArchiveResult;\npublic class ArchiveUploadLowLevel {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveFilePath = \"*** provide to file upload ****\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\n// First open file and read. File file = new File(archiveFilePath);\nInputStream is = new FileInputStream(file);\nbyte[] body = new byte[(int) file.length()];\nis.read(body);\nUploading an Archive in a Single Operation API Version 2012-06-01 115\n\nAmazon S3 Glacier Developer Guide\n// Send request. UploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(vaultName)\n.withChecksum(TreeHashGenerator.calculateTreeHash(new\nFile(archiveFilePath)))\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nSystem.out.println(\"ArchiveID: \" + uploadArchiveResult.getArchiveId());\n} catch (Exception e)\n{\nSystem.err.println(\"Archive not uploaded. \");\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the AWS SDK for .NET in\nAmazon S3 Glacier\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload an archive in a single operation. Topics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nUploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Upload method that you\ncan use to upload an archive to a vault. Note\nYou can use the Upload method to upload small or large files. Depending on the file size\nyou are uploading, this method determines whether to upload it in a single operation or\nuse the multipart upload API to upload the file in parts.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 11,
        "num_words": 432,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4360647721724077
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_126",
      "text": "Uploading an Archive in a Single Operation API Version 2012-06-01 116\n\nAmazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region. For step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive. string archiveId = manager.Upload(vaultName, \"upload archive test\",\narchiveToUpload).ArchiveId;\nConsole.WriteLine(\"Archive ID: (Copy and save this ID for use in other\nexamples.) : {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\nUploading an Archive in a Single Operation API Version 2012-06-01 117\n\nAmazon S3 Glacier Developer Guide\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region. 2.",
      "start_idx": 210249,
      "end_idx": 219563,
      "metadata": {
        "num_sentences": 12,
        "num_words": 280,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2819227160829486
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_127",
      "text": "Provide request information by creating an instance of the UploadArchiveRequest class. In addition to the data you want to upload, You need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, and your account ID. If you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier. 3. Run the UploadArchive method by providing the request object as a parameter. In response, S3 Glacier returns an archive ID of the newly uploaded archive. Example: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example uses the AWS SDK\nfor .NET to upload an archive to a vault (examplevault). Note\nFor information about the underlying REST API to upload an archive in a single request, see\nUpload Archive (POST archive).",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3070319281684028
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_128",
      "text": "For step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload. Uploading an Archive in a Single Operation API Version 2012-06-01 118\n\nAmazon S3 Glacier Developer Guide\nExample\nusing System;\nusing System.IO;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadSingleOpLowLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Uploading an archive. \");\nstring archiveId = UploadAnArchive(client);\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic string UploadAnArchive(AmazonGlacierClient client)\n{\nusing (FileStream fileStream = new FileStream(archiveToUpload, FileMode.Open,\nFileAccess.Read))\n{\nstring treeHash = TreeHashGenerator.CalculateTreeHash(fileStream);\nUploadArchiveRequest request = new UploadArchiveRequest()\n{\nVaultName = vaultName,\nUploading an Archive in a Single Operation API Version 2012-06-01 119\n\nAmazon S3 Glacier Developer Guide\nBody = fileStream,\nChecksum = treeHash\n};\nUploadArchiveResponse response = client.UploadArchive(request);\nstring archiveID = response.ArchiveId;\nreturn archiveID;\n}\n}\n}\n}\nUploading an Archive in a Single Operation Using the REST API\nYou can use the Upload Archive API call to upload an archive in a single operation. For more\ninformation, see Upload Archive (POST archive). Uploading Large Archives in Parts (Multipart Upload)\nTopics\n\u2022 Multipart Upload Process\n\u2022 Quick Facts\n\u2022 Uploading Large Archives by Using the AWS CLI\n\u2022 Uploading Large Archives in Parts Using the Amazon SDK for Java\n\u2022 Uploading Large Archives Using the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the REST API\nMultipart Upload Process\nAs described in Uploading an Archive in Amazon S3 Glacier, we encourage Amazon S3 Glacier (S3\nGlacier) customers to use Multipart Upload to upload archives greater than 100 mebibytes (MiB). 1. Initiate Multipart Upload\nWhen you send a request to initiate a multipart upload, S3 Glacier returns a multipart\nupload ID, which is a unique identifier for your multipart upload. Any subsequent multipart\nupload operations require this ID. This ID doesn't expire for at least 24 hours after S3 Glacier\ncompletes the job.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 378,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2840948740641276
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_129",
      "text": "Uploading Large Archives in Parts API Version 2012-06-01 120\n\nAmazon S3 Glacier Developer Guide\nIn your request to start a multipart upload, specify the part size in number of bytes. Each part\nyou upload, except the last part, must be this size. Note\nYou don't need to know the overall archive size when using multipart uploads. This\nmeans that you can use multipart uploads in cases where you don't know the archive\nsize when you start uploading the archive. You only need to decide the part size at the\ntime you start the multipart upload. In the initiate multipart upload request, you can also provide an optional archive description. 2. Upload Parts\nFor each part upload request, you must include the multipart upload ID you obtained in step\n1. In the request, you must also specify the content range, in bytes, identifying the position of\nthe part in the final archive. S3 Glacier later uses the content range information to assemble\nthe archive in proper sequence.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44465607537163626
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_130",
      "text": "Because you provide the content range for each part that you\nupload, it determines the part's position in the final assembly of the archive, and therefore you\ncan upload parts in any order. You can also upload parts in parallel. If you upload a new part\nusing the same content range as a previously uploaded part, the previously uploaded part is\noverwritten. 3. Complete (or stop) Multipart Upload\nAfter uploading all the archive parts, you use the complete operation. Again, you must\nspecify the upload ID in your request. S3 Glacier creates an archive by concatenating parts in\nascending order based on the content range you provided. S3 Glacier response to a Complete\nMultipart Upload request includes an archive ID for the newly created archive. If you provided\nan optional archive description in the Initiate Multipart Upload request, S3 Glacier associates\nit with the assembled archive. After you successfully complete a multipart upload, you cannot\nrefer to the multipart upload ID.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 161,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3702603234185113
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_131",
      "text": "That means you cannot access parts associated with the\nmultipart upload ID. If you stop a multipart upload, you cannot upload any more parts using that multipart upload\nID. All storage consumed by any parts associated with the stopped multipart upload is freed. If\nany part uploads were in-progress, they can still succeed or fail even after stopped. Uploading Large Archives in Parts API Version 2012-06-01 121\n\nAmazon S3 Glacier Developer Guide\nAdditional Multipart Upload Operations\nAmazon S3 Glacier (S3 Glacier) provides the following additional multipart upload API calls. \u2022 List Parts\u2014Using this operation, you can list the parts of a specific multipart upload. It returns\ninformation about the parts that you have uploaded for a multipart upload. For each list parts\nrequest, S3 Glacier returns information for up to 1,000 parts. If there are more parts to list for\nthe multipart upload, the result is paginated and a marker is returned in the response at which\nto continue the list. You need to send additional requests to retrieve subsequent parts.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47616132100423175
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_132",
      "text": "Note that\nthe returned list of parts doesn't include parts that haven't completed uploading. \u2022 List Multipart Uploads\u2014Using this operation, you can obtain a list of multipart uploads in\nprogress. An in-progress multipart upload is an upload that you have initiated, but have not yet\ncompleted or stopped. For each list multipart uploads request, S3 Glacier returns up to 1,000\nmultipart uploads. If there are more multipart uploads to list, then the result is paginated and\na marker is returned in the response at which to continue the list. You need to send additional\nrequests to retrieve the remaining multipart uploads. Quick Facts\nThe following table provides multipart upload core specifications. Item Specification\nMaximum archive size 10,000 x 4 gibibytes (GiB)\nMaximum number of parts per 10,000\nupload\nPart size 1 MiB to 4 GiB, last part can be < 1 MiB. You specify the\nsize value in bytes. The part size must be a mebibyte (1024 kibibytes [KiB])\nmultiplied by a power of 2.",
      "start_idx": 219564,
      "end_idx": 227336,
      "metadata": {
        "num_sentences": 10,
        "num_words": 165,
        "chunk_type": "semantic_split",
        "coherence_score": 0.418439695570204
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_133",
      "text": "For example, 1 048576 (1\nMiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8\nMiB). Maximum number of parts returned 1,000\nfor a list parts request\nUploading Large Archives in Parts API Version 2012-06-01 122\n\nAmazon S3 Glacier Developer Guide\nItem Specification\nMaximum number of multipart 1,000\nuploads returned in a list multipart\nuploads request\nUploading Large Archives by Using the AWS CLI\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) by using the AWS Command Line\nInterface (AWS CLI). To improve the upload experience for larger archives, S3 Glacier provides\nseveral API operations to support multipart uploads. By using these API operations, you can upload\narchives in parts. These parts can be uploaded independently, in any order, and in parallel. If a part\nupload fails, you need to upload only that part again, not the entire archive. You can use multipart\nuploads for archives from 1 byte to about 40,000 gibibytes (GiB) in size. For more information about S3 Glacier multipart uploads, see Uploading Large Archives in Parts\n(Multipart Upload). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 (Prerequisite) Install Python\n\u2022 (Prerequisite) Create an S3 Glacier Vault\n\u2022 Example: Uploading Large Archives in Parts by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used.",
      "start_idx": 227337,
      "end_idx": 229039,
      "metadata": {
        "num_sentences": 13,
        "num_words": 274,
        "breakpoint_idx": 1386,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2920453487298427
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_134",
      "text": "\u2022 Try using the help command. Uploading Large Archives in Parts API Version 2012-06-01 123\n\nAmazon S3 Glacier Developer Guide\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\n(Prerequisite) Install Python\nTo complete a multipart upload, you must calculate the SHA256 tree hash of the archive that\nyou're uploading. Doing so is different than calculating the SHA256 tree hash of the file that you\nwant to upload. To calculate the SHA256 tree hash of the archive that you're uploading, you can\nuse Java, C# (with .NET), or Python. In this example, you will use Python.",
      "start_idx": 229040,
      "end_idx": 229868,
      "metadata": {
        "num_sentences": 8,
        "num_words": 138,
        "breakpoint_idx": 1394,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.26610268865312847
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_135",
      "text": "For instructions on using\nJava or C#, see Computing Checksums. For more information about installing Python, see Install or update Python in the Boto3 Developer\nGuide. (Prerequisite) Create an S3 Glacier Vault\nTo use the following example, you must have at least one S3 Glacier vault created. For more\ninformation about creating vaults, see Creating a Vault in Amazon S3 Glacier. Example: Uploading Large Archives in Parts by Using the AWS CLI\nIn this example, you will create a file and use multipart upload API operations to upload this file, in\nparts, to Amazon S3 Glacier. Important\nBefore starting this procedure, make sure that you've performed all of the prerequisite\nsteps. To upload an archive, you must have a vault created, the AWS CLI configured, and be\nprepared to use Java, C#, or Python to calculate a SHA256 tree hash. Uploading Large Archives in Parts API Version 2012-06-01 124\n\nAmazon S3 Glacier Developer Guide\nThe following procedure uses the initiate-multipart-upload, upload-multipart-part,\nand complete-multipart-upload AWS CLI commands. For more detailed information about each of these commands, see initiate-multipart-upload,\nupload-multipart-part, and complete-multipart-upload in the AWS CLI Command Reference. 1.",
      "start_idx": 229869,
      "end_idx": 232192,
      "metadata": {
        "num_sentences": 10,
        "num_words": 187,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22983148362901476
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_136",
      "text": "Use the initiate-multipart-upload command to create a multipart upload resource. In your\nrequest, specify the part size in number of bytes. Each part that you upload, except the last\npart, will be this size. You don't need to know the overall archive size when initiating an\nupload. However, you will need the total size, in bytes, of each part when completing the\nupload on the final step. In the following command, replace the values for the --vault-name and --account-ID\nparameters with your own information. This command specifies that you will upload an archive\nwith a part size of 1 mebibyte (MiB) (1024 x 1024 bytes) per file. Replace this --part-size\nparameter value if needed. aws glacier initiate-multipart-upload --vault-name awsexamplevault --part-\nsize 1048576 --account-id 123456789012\nExpected output:\n{\n\"location\": \"/123456789012/vaults/awsexamplevault/multipart-uploads/uploadId\",\n\"uploadId\": \"uploadId\"\n}\nWhen finished, the command will output the multipart upload resource's upload ID and\nlocation in S3 Glacier. You will use this upload ID in subsequent steps.",
      "start_idx": 229869,
      "end_idx": 232192,
      "metadata": {
        "num_sentences": 10,
        "num_words": 158,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3806256612141927
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_137",
      "text": "2. For this example, you can use the following commands to create a 4.4 MiB file, split it into\n1 MiB chunks, and upload each chunk. To upload your own files, you can follow a similar\nprocedure of splitting your data into chunks and uploading each part. Linux or macOS\nThe following command creates a 4.4 MiB file, named file_to_upload, on Linux or macOS. mkfile -n 9000b file_to_upload\nUploading Large Archives in Parts API Version 2012-06-01 125\n\nAmazon S3 Glacier Developer Guide\nWindows\nThe following command creates a 4.4 MiB file, named file_to_upload, on Windows. fsutil file createnew file_to_upload 4608000\n3. Next, you will split this file into 1 MiB chunks. split -b 1048576 file_to_upload chunk\nYou now have the following five chunks. The first four are 1 MiB, and the last is approximately\n400 kibibytes (KiB). chunkaa\nchunkab\nchunkac\nchunkad\nchunkae\n4. Use the upload-multipart-part command to upload a part of an archive. You can upload\narchive parts in any order. You can also upload them in parallel.",
      "start_idx": 232193,
      "end_idx": 235174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 169,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36678416912372297
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_138",
      "text": "You can upload up to 10,000\nparts for a multipart upload. In the following command, replace the values for the --vault-name, --account-ID, and --\nupload-id parameters. The upload ID must match the ID given as output of the initiate-\nmultipart-upload command. The --range parameter specifies that you will upload a\npart with a size of 1 MiB (1024 x 1024 bytes). This size must match what you specified in the\ninitiate-multipart-upload command. Adjust this size value if needed. The --body\nparameter specifies the name of the part that you're uploading. aws glacier upload-multipart-part --body chunkaa --range='bytes 0-1048575/*' --\nvault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nIf successful, the command will produce output that contains the checksum for the uploaded\npart. 5. Run the upload-multipart-part command again to upload the remaining parts of your\nmultipart upload. Update the --range and \u2013-body parameter values for each command to\nmatch the part that you're uploading. Uploading Large Archives in Parts API Version 2012-06-01 126\n\nAmazon S3 Glacier Developer Guide\naws glacier upload-multipart-part --body chunkab --range='bytes 1048576-2097151/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkac --range='bytes 2097152-3145727/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkad --range='bytes 3145728-4194303/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkae --range='bytes 4194304-4607999/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nNote\nThe final command's --range parameter value is smaller because the final part of\nour upload is less than 1 MiB. If successful, each command will produce output that\ncontains the checksum for each uploaded part.",
      "start_idx": 232193,
      "end_idx": 235174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3654101934188452
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_139",
      "text": "6. Next, you will assemble the archive and finish the upload. You must include the total size and\nSHA256 tree hash of the archive. To calculate the SHA256 tree hash of the archive, you can use Java, C#, or Python. In this\nexample, you will use Python.",
      "start_idx": 235175,
      "end_idx": 235426,
      "metadata": {
        "num_sentences": 5,
        "num_words": 47,
        "breakpoint_idx": 1445,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25478472709655764
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_140",
      "text": "For instructions on using Java or C#, see Computing Checksums. Create the Python file checksum.py and insert the following code. If needed, replace the\nname of the original file. from botocore.utils import calculate_tree_hash\nchecksum = calculate_tree_hash(open('file_to_upload', 'rb'))\nprint(checksum)\n7. Run checksum.py to calculate the SHA256 tree hash. The following hash may not match your\noutput. $ python3 checksum.py\n$ 3d760edb291bfc9d90d35809243de092aea4c47b308290ad12d084f69988ae0c\nUploading Large Archives in Parts API Version 2012-06-01 127\n\nAmazon S3 Glacier Developer Guide\n8. Use the complete-multipart-upload command to finish the archive upload. Replace the values\nfor the --vault-name, --account-ID, --upload-ID, and --checksum parameters. The --\narchive parameter value specifies the total size, in bytes, of the archive. This value must be\nthe sum of all the sizes of the individual parts that you uploaded. Replace this value if needed. aws glacier complete-multipart-upload --archive-size 4608000 --vault-\nname awsexamplevault --account-id 123456789012 --upload-id upload_ID --\nchecksum checksum\nWhen finished, the command will output the archive's ID, checksum, and location in S3 Glacier. Uploading Large Archives in Parts Using the Amazon SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload a large archive (see Uploading an Archive in Amazon S3 Glacier).",
      "start_idx": 235427,
      "end_idx": 238787,
      "metadata": {
        "num_sentences": 14,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2640920576158461
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_141",
      "text": "\u2022 The high-level API provides a method that you can use to upload archives of any size. Depending\non the file you are uploading, the method either uploads an archive in a single operation or uses\nthe multipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts. \u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API. For more information about the high-level and low-level APIs, see Using the AWS SDK for Java with\nAmazon S3 Glacier. Topics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\n\u2022 Upload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nUploading Large Archives in Parts API Version 2012-06-01 128\n\nAmazon S3 Glacier Developer Guide\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for Java. Upload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nFor granular control of the upload you can use the low-level API where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for Java. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.",
      "start_idx": 235427,
      "end_idx": 238787,
      "metadata": {
        "num_sentences": 15,
        "num_words": 332,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41458703903924854
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_142",
      "text": "2. Initiate multipart upload by calling the initiateMultipartUpload method. You need to provide vault name in which you want to upload the archive, part size you want\nto use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID. 3.",
      "start_idx": 238788,
      "end_idx": 239162,
      "metadata": {
        "num_sentences": 6,
        "num_words": 58,
        "breakpoint_idx": 1480,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2320008595784505
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_143",
      "text": "Upload parts by calling the uploadMultipartPart method. For each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID. 4. Complete multipart upload by calling the completeMultipartUpload method. You need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID. Example: Uploading a Large Archive in a Parts Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the file you want to upload.",
      "start_idx": 239163,
      "end_idx": 245188,
      "metadata": {
        "num_sentences": 9,
        "num_words": 164,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31456730100843644
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_144",
      "text": "Uploading Large Archives in Parts API Version 2012-06-01 129\n\nAmazon S3 Glacier Developer Guide\nNote\nThis example is valid for part sizes from 1 MB to 1 GB. However, S3 Glacier supports part\nsizes up to 4 GB. Example\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.LinkedList;\nimport java.util.List;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartRequest;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartResult;\nimport com.amazonaws.util.BinaryUtils;\npublic class ArchiveMPU {\npublic static String vaultName = \"examplevault\";\n// This example works for part sizes up to 1 GB. public static String partSize = \"1048576\"; // 1 MB. public static String archiveFilePath = \"*** provide archive file path ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nUploading Large Archives in Parts API Version 2012-06-01 130\n\nAmazon S3 Glacier Developer Guide\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nSystem.out.println(\"Uploading an archive. \");\nString uploadId = initiateMultipartUpload();\nString checksum = uploadParts(uploadId);\nString archiveId = CompleteMultiPartUpload(uploadId, checksum);\nSystem.out.println(\"Completed an archive. ArchiveId: \" + archiveId);\n} catch (Exception e) {\nSystem.err.println(e);\n}\n}\nprivate static String initiateMultipartUpload() {\n// Initiate\nInitiateMultipartUploadRequest request = new InitiateMultipartUploadRequest()\n.withVaultName(vaultName)\n.withArchiveDescription(\"my archive \" + (new Date()))\n.withPartSize(partSize);\nInitiateMultipartUploadResult result = client.initiateMultipartUpload(request);\nSystem.out.println(\"ArchiveID: \" + result.getUploadId());\nreturn result.getUploadId();\n}\nprivate static String uploadParts(String uploadId) throws AmazonServiceException,\nNoSuchAlgorithmException, AmazonClientException, IOException {\nint filePosition = 0;\nlong currentPosition = 0;\nbyte[] buffer = new byte[Integer.valueOf(partSize)];\nList<byte[]> binaryChecksums = new LinkedList<byte[]>();\nFile file = new File(archiveFilePath);\nFileInputStream fileToUpload = new FileInputStream(file);\nString contentRange;\nint read = 0;\nwhile (currentPosition < file.length())\n{\nread = fileToUpload.read(buffer, filePosition, buffer.length);\nUploading Large Archives in Parts API Version 2012-06-01 131\n\nAmazon S3 Glacier Developer Guide\nif (read == -1) { break; }\nbyte[] bytesRead = Arrays.copyOf(buffer, read);\ncontentRange = String.format(\"bytes %s-%s/*\", currentPosition,\ncurrentPosition + read - 1);\nString checksum = TreeHashGenerator.calculateTreeHash(new\nByteArrayInputStream(bytesRead));\nbyte[] binaryChecksum = BinaryUtils.fromHex(checksum);\nbinaryChecksums.add(binaryChecksum);\nSystem.out.println(contentRange);\n//Upload part. UploadMultipartPartRequest partRequest = new UploadMultipartPartRequest()\n.withVaultName(vaultName)\n.withBody(new ByteArrayInputStream(bytesRead))\n.withChecksum(checksum)\n.withRange(contentRange)\n.withUploadId(uploadId);\nUploadMultipartPartResult partResult =\nclient.uploadMultipartPart(partRequest);\nSystem.out.println(\"Part uploaded, checksum: \" + partResult.getChecksum());\ncurrentPosition = currentPosition + read;\n}\nfileToUpload.close();\nString checksum = TreeHashGenerator.calculateTreeHash(binaryChecksums);\nreturn checksum;\n}\nprivate static String CompleteMultiPartUpload(String uploadId, String checksum)\nthrows NoSuchAlgorithmException, IOException {\nFile file = new File(archiveFilePath);\nCompleteMultipartUploadRequest compRequest = new\nCompleteMultipartUploadRequest()\n.withVaultName(vaultName)\n.withUploadId(uploadId)\n.withChecksum(checksum)\n.withArchiveSize(String.valueOf(file.length()));\nCompleteMultipartUploadResult compResult =\nclient.completeMultipartUpload(compRequest);\nUploading Large Archives in Parts API Version 2012-06-01 132\n\nAmazon S3 Glacier Developer Guide\nreturn compResult.getLocation();\n}\n}\nUploading Large Archives Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload large archives in parts (see Uploading an Archive in Amazon S3 Glacier). \u2022 The high-level API provides a method that you can use to upload archives of any size.",
      "start_idx": 239163,
      "end_idx": 245188,
      "metadata": {
        "num_sentences": 9,
        "num_words": 465,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4247606065538194
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_145",
      "text": "Depending\non the file you are uploading, the method either uploads archive in a single operation or uses the\nmultipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts. \u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API. For more information about the high-level and low-level APIs, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier. Topics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for .NET. Uploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nFor granular control of the upload, you can use the low-level API, where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for .NET. Uploading Large Archives in Parts API Version 2012-06-01 133\n\nAmazon S3 Glacier Developer Guide\n1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.",
      "start_idx": 245189,
      "end_idx": 247022,
      "metadata": {
        "num_sentences": 14,
        "num_words": 314,
        "breakpoint_idx": 1512,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4754545610029619
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_146",
      "text": "2. Initiate multipart upload by calling the InitiateMultipartUpload method. You need to provide the vault name to which you want to upload the archive, the part size you\nwant to use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID. 3.",
      "start_idx": 247023,
      "end_idx": 247405,
      "metadata": {
        "num_sentences": 6,
        "num_words": 60,
        "breakpoint_idx": 1518,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23195390701293944
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_147",
      "text": "Upload parts by calling the UploadMultipartPart method. For each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID. 4. Complete the multipart upload by calling the CompleteMultipartUpload method. You need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID. Example: Uploading a Large Archive in Parts Using the Amazon SDK for .NET\nThe following C# code example uses the AWS SDK for .NET to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Code\nExamples. You need to update the code as shown with the name of a file you want to upload. Example\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadMPU\n{\nUploading Large Archives in Parts API Version 2012-06-01 134\n\nAmazon S3 Glacier Developer Guide\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\nstatic long partSize = 4194304; // 4 MB.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 218,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31696260240342883
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_148",
      "text": "public static void Main(string[] args)\n{\nAmazonGlacierClient client;\nList<string> partChecksumList = new List<string>();\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Uploading an archive. \");\nstring uploadId = InitiateMultipartUpload(client);\npartChecksumList = UploadParts(uploadId, client);\nstring archiveId = CompleteMPU(uploadId, client, partChecksumList);\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic string InitiateMultipartUpload(AmazonGlacierClient client)\n{\nInitiateMultipartUploadRequest initiateMPUrequest = new\nInitiateMultipartUploadRequest()\n{\nVaultName = vaultName,\nPartSize = partSize,\nArchiveDescription = \"Test doc uploaded using MPU.\" };\nInitiateMultipartUploadResponse initiateMPUresponse =\nclient.InitiateMultipartUpload(initiateMPUrequest);\nreturn initiateMPUresponse.UploadId;\nUploading Large Archives in Parts API Version 2012-06-01 135\n\nAmazon S3 Glacier Developer Guide\n}\nstatic List<string> UploadParts(string uploadID, AmazonGlacierClient client)\n{\nList<string> partChecksumList = new List<string>();\nlong currentPosition = 0;\nvar buffer = new byte[Convert.ToInt32(partSize)];\nlong fileLength = new FileInfo(archiveToUpload).Length;\nusing (FileStream fileToUpload = new FileStream(archiveToUpload, FileMode.Open,\nFileAccess.Read))\n{\nwhile (fileToUpload.Position < fileLength)\n{\nStream uploadPartStream = GlacierUtils.CreatePartStream(fileToUpload,\npartSize);\nstring checksum = TreeHashGenerator.CalculateTreeHash(uploadPartStream);\npartChecksumList.Add(checksum);\n// Upload part. UploadMultipartPartRequest uploadMPUrequest = new\nUploadMultipartPartRequest()\n{\nVaultName = vaultName,\nBody = uploadPartStream,\nChecksum = checksum,\nUploadId = uploadID\n};\nuploadMPUrequest.SetRange(currentPosition, currentPosition +\nuploadPartStream.Length - 1);\nclient.UploadMultipartPart(uploadMPUrequest);\ncurrentPosition = currentPosition + uploadPartStream.Length;\n}\n}\nreturn partChecksumList;\n}\nstatic string CompleteMPU(string uploadID, AmazonGlacierClient client, List<string>\npartChecksumList)\n{\nlong fileLength = new FileInfo(archiveToUpload).Length;\nCompleteMultipartUploadRequest completeMPUrequest = new\nCompleteMultipartUploadRequest()\nUploading Large Archives in Parts API Version 2012-06-01 136\n\nAmazon S3 Glacier Developer Guide\n{\nUploadId = uploadID,\nArchiveSize = fileLength.ToString(),\nChecksum = TreeHashGenerator.CalculateTreeHash(partChecksumList),\nVaultName = vaultName\n};\nCompleteMultipartUploadResponse completeMPUresponse =\nclient.CompleteMultipartUpload(completeMPUrequest);\nreturn completeMPUresponse.ArchiveId;\n}\n}\n}\nUploading Large Archives in Parts Using the REST API\nAs described in Uploading Large Archives in Parts (Multipart Upload), multipart upload refers to a\nset of operations that enable you to upload an archive in parts and perform related operations. For\nmore information about these operations, see the following API reference topics:\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\nDownloading an Archive in S3 Glacier\nAmazon S3 Glacier provides a management console, which you can use to create and delete vaults. However, you cannot download archives from S3 Glacier by using the management console. To download data, such as photos, videos, and other documents, you must either use the AWS\nCommand Line Interface (AWS CLI) or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs. For information about using S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. To install the AWS CLI, see AWS Command Line Interface.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 456,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4214466518825955
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_149",
      "text": "The following topics describe how to\nDownloading an Archive API Version 2012-06-01 137\n\nAmazon S3 Glacier Developer Guide\ndownload archives to S3 Glacier by using the AWS SDK for Java, the AWS SDK for .NET, and the\nAmazon S3 Glacier REST API. Topics\n\u2022 Retrieving S3 Glacier Archives Using AWS Console\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading an Archive by Using the REST API\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS CLI\nRetrieving S3 Glacier Archives Using AWS Console\nRetrieving an archive from Amazon S3 Glacier is an asynchronous operation in which you first\ninitiate a job, and then download the output after the job is completed. To initiate an archive\nretrieval job, you use the Initiate Job (POST jobs) REST API operation or the equivalent in the AWS\nCLI, or the AWS SDKs. Topics\n\u2022 Archive Retrieval Options\n\u2022 Ranged Archive Retrievals\nRetrieving an archive from S3 Glacier is a two-step process. To retrieve an archive\n1. Initiate an archive retrieval job. a. Get the ID of the archive that you want to retrieve. You can get the archive ID from an\ninventory of the vault. You can get the archive ID with the REST API, AWS CLI, or AWS\nSDKs.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 230,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43176485697428385
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_150",
      "text": "For more information, see Downloading a Vault Inventory in Amazon S3 Glacier. b. Initiate a job that requests S3 Glacier to prepare an entire archive or a portion of the\narchive for subsequent download by using the Initiate Job (POST jobs) operation. When you initiate a job, S3 Glacier returns a job ID in the response and runs the job\nasynchronously. (You cannot download the job output until after the job is completed, as\ndescribed in Step 2.) Retrieving Archives in Console API Version 2012-06-01 138\n\nAmazon S3 Glacier Developer Guide\nImportant\nFor Standard retrievals only, a data retrieval policy can cause your Initiate Job\nrequest to fail with a PolicyEnforcedException exception. For more information\nabout data retrieval policies, see S3 Glacier Data Retrieval Policies. For more\ninformation about the PolicyEnforcedException exception, see Error Responses. When required, you can restore large segments of the data stored in S3 Glacier. For more\ninformation about restoring data from the S3 Glacier storage classes, see Storage Classes for\nArchiving Objects in the Amazon Simple Storage Service User Guide. 2.",
      "start_idx": 247406,
      "end_idx": 255346,
      "metadata": {
        "num_sentences": 10,
        "num_words": 176,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3546342213948568
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_151",
      "text": "After the job is completed, download the bytes by using the Get Job Output (GET output)\noperation. You can download all bytes or specify a byte range to download only a portion of the job\noutput. For larger output, downloading the output in chunks helps in the event of a download\nfailure, such as a network failure. If you get job output in a single request and there is a\nnetwork failure, you have to restart downloading the output from the beginning. However,\nif you download the output in chunks, in the event of any failure, you need only restart the\ndownload of the smaller portion and not the entire output. S3 Glacier must complete a job before you can get its output. After completion, a job does not\nexpire for at least 24 hours, which means that you can download the output within the 24-hour\nperiod after the job is completed. To determine if your job is complete, check its status by using\none of the following options:\n\u2022 Wait for a job-completion notification \u2013 You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. S3\nGlacier sends a notification only after it completes the job. You can specify an Amazon SNS topic for a job when you initiate the job. In addition to\nspecifying an Amazon SNS topic in your job request, if your vault has notifications set for\narchive retrieval events, then S3 Glacier also publishes a notification to that SNS topic.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 259,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38968426097523085
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_152",
      "text": "For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier. Retrieving Archives in Console API Version 2012-06-01 139\n\nAmazon S3 Glacier Developer Guide\n\u2022 Request job information explicitly \u2013 You can also use the S3 Glacier Describe Job API\noperation (Describe Job (GET JobID)) to periodically poll for job information. However, we\nrecommend using Amazon SNS notifications. Note\nThe information that you get by using an Amazon SNS notification is the same as what you\nget by calling the Describe Job API operation. Archive Retrieval Options\nWhen initiating a job to retrieve an archive, you can specify one of the following retrieval options,\nbased on your access time and cost requirements. For information about retrieval pricing, see\nAmazon S3 Glacier Pricing. \u2022 Expedited \u2013 Expedited retrievals allow you to quickly access your data that's stored in the S3\nGlacier Flexible Retrieval storage class or the S3 Intelligent-Tiering Archive Access tier when\noccasional urgent requests for restoring archives are required. For all but the largest archives\n(more than 250 MB), data accessed by using Expedited retrievals is typically made available\nwithin 1\u20135 minutes. Provisioned capacity ensures that retrieval capacity for Expedited retrievals\nis available when you need it. For more information, see Provisioned Capacity. \u2022 Standard \u2013 Standard retrievals allow you to access any of your archives within several hours.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 220,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3518979852849787
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_153",
      "text": "Standard retrievals are typically completed within 3\u20135 hours. Standard is the default option for\nretrieval requests that do not specify the retrieval option. \u2022 Bulk \u2013 Bulk retrievals are the lowest-cost S3 Glacier retrieval option, which you can use to\nretrieve large amounts, even petabytes, of data inexpensively in a day. Bulk retrievals are\ntypically completed within 5\u201312 hours. The following table summarizes the archive retrieval options. For information about pricing, see\nAmazon S3 Glacier pricing. To make an Expedited, Standard, or Bulk retrieval, set the Tier request element in the\nRestoreObject REST API operation request to the option that you want, or the equivalent in the\nAWS Command Line Interface (AWS CLI) or AWS SDKs. If you purchased provisioned capacity, all\nExpedited retrievals are automatically served through your provisioned capacity. Retrieving Archives in Console API Version 2012-06-01 140\n\nAmazon S3 Glacier Developer Guide\nProvisioned Capacity\nProvisioned capacity helps ensure that your retrieval capacity for Expedited retrievals is available\nwhen you need it. Each unit of capacity provides that at least three Expedited retrievals can be\nperformed every 5 minutes and provides up to 150 megabytes per second (MBps) of retrieval\nthroughput. If your workload requires highly reliable and predictable access to a subset of your data in minutes,\nwe recommend that you purchase provisioned retrieval capacity.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4272873965176669
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_154",
      "text": "Without provisioned capacity,\nExpedited retrievals are typically accepted, except for rare situations of unusually high demand. However, if you require access to Expedited retrievals under all circumstances, you must purchase\nprovisioned retrieval capacity. Purchasing Provisioned Capacity\nYou can purchase provisioned capacity units by using the S3 Glacier console, the Purchase\nProvisioned Capacity (POST provisioned-capacity) REST API operation, the AWS SDKs, or the AWS\nCLI. For provisioned capacity pricing information, see Amazon S3 Glacier Pricing. A provisioned capacity unit lasts for one month, starting at the date and time of purchase. If the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28. To purchase provisioned capacity by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 255347,
      "end_idx": 260785,
      "metadata": {
        "num_sentences": 11,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24631833163174716
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_155",
      "text": "In the left navigation pane, choose Data retrieval settings. 3. Under Provisioned capacity units (PCUs), choose Purchase PCU. The Purchase PCU dialog\nbox appears. 4. If you want to purchase provisioned capacity, enter confirm in the To confirm purchase box. 5.",
      "start_idx": 260786,
      "end_idx": 261046,
      "metadata": {
        "num_sentences": 7,
        "num_words": 41,
        "breakpoint_idx": 1609,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2250340779622396
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_156",
      "text": "Choose Purchase PCU. Retrieving Archives in Console API Version 2012-06-01 141\n\nAmazon S3 Glacier Developer Guide\nRanged Archive Retrievals\nWhen you retrieve an archive from S3 Glacier, you can optionally specify a range, or portion, of the\narchive to retrieve. The default is to retrieve the whole archive. Specifying a range of bytes can be\nhelpful when you want to do the following:\n\u2022 Manage your data downloads \u2013 S3 Glacier allows retrieved data to be downloaded for 24 hours\nafter the retrieval request is completed. Therefore, you might want to retrieve only portions\nof the archive so that you can manage the schedule of downloads within the given download\nwindow. \u2022 Retrieve a targeted part of a large archive \u2013 For example, suppose you have previously\naggregated many files and uploaded them as a single archive, and now you want to retrieve a\nfew of the files. In this case, you can specify a range of the archive that contains the files that you\nare interested in by using one retrieval request. Or, you can initiate multiple retrieval requests,\neach with a range for one or more files. When initiating a retrieval job using range retrievals, you must provide a range that is megabyte\naligned. In other words, the byte range can start at zero (the beginning of your archive), or at any\n1-MB interval thereafter (1 MB, 2 MB, 3 MB, and so on). The end of the range can either be the end of your archive or any 1 MB interval greater than the\nbeginning of your range. Furthermore, if you want to get checksum values when you download\nthe data (after the retrieval job is completed), the range that you request in the job initiation must\nalso be tree-hash aligned.",
      "start_idx": 261047,
      "end_idx": 268101,
      "metadata": {
        "num_sentences": 12,
        "num_words": 294,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3575388590494792
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_157",
      "text": "You can use checksums to help ensure that your data was not corrupted\nduring transmission. For more information about megabyte alignment and tree-hash alignment,\nsee Receiving Checksums When Downloading Data. Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for\nJava\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\ndownload an archive. Topics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for Java\nDownloading an Archive Using Java API Version 2012-06-01 142\n\nAmazon S3 Glacier Developer Guide\nDownloading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the download method you\ncan use to download an archive. Important\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options. Example: Downloading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region (us-west-2). For step-by-step instructions to run this sample, see Running Java Examples for Amazon S3 Glacier\nUsing Eclipse. You need to update the code as shown with an existing archive ID and the local file\npath where you want to save the downloaded archive. Example\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class ArchiveDownloadHighLevel {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\nDownloading an Archive Using Java API Version 2012-06-01 143\n\nAmazon S3 Glacier Developer Guide\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nSystem.out.println(\"Downloaded file to \" + downloadFilePath);\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for Java\nThe following are the steps to retrieve a vault inventory using the AWS SDK for Java low-level API.",
      "start_idx": 261047,
      "end_idx": 268101,
      "metadata": {
        "num_sentences": 12,
        "num_words": 434,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3586653218124852
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_158",
      "text": "1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region. 2. Initiate an archive-retrieval job by executing the initiateJob method. You provide job information, such as the archive ID of the archive you want to download\nand the optional Amazon SNS topic to which you want Amazon S3 Glacier (S3 Glacier) to\nDownloading an Archive Using Java API Version 2012-06-01 144\n\nAmazon S3 Glacier Developer Guide\npost a job completion message, by creating an instance of the InitiateJobRequest\nclass. S3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class. JobParameters jobParameters = new JobParameters()\n.withArchiveId(\"*** provide an archive id ***\")\n.withDescription(\"archive retrieval\")\n.withRetrievalByteRange(\"*** provide a retrieval range***\") // optional\n.withType(\"archive-retrieval\");\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive. For example, you can update the preceding request by adding the following statement\nto request S3 Glacier to prepare only the 1 MB to 2 MB portion of the archive. int ONE_MEG = 1048576;\nString retrievalByteRange = String.format(\"%s-%s\", ONE_MEG, 2*ONE_MEG -1);\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withRetrievalByteRange(retrievalByteRange)\n.withSNSTopic(snsTopicARN);\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\n3. Wait for the job to complete.",
      "start_idx": 261047,
      "end_idx": 268101,
      "metadata": {
        "num_sentences": 13,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2432528764773638
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_159",
      "text": "You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading an Archive Using Java API Version 2012-06-01 145\n\nAmazon S3 Glacier Developer Guide\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job. You can also poll S3 Glacier by calling the describeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach. 4.",
      "start_idx": 268102,
      "end_idx": 268712,
      "metadata": {
        "num_sentences": 5,
        "num_words": 101,
        "breakpoint_idx": 1651,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.24130043983459473
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_160",
      "text": "Download the job output (archive data) by executing the getJobOutput method. You provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResult object. GetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withVaultName(\"*** provide a vault name ****\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody() // Provides the input stream. The preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest. GetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withRange(\"bytes=0-1048575\") // Download only the first 1 MB of the\noutput. .withVaultName(\"*** provide a vault name ****\");\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data. To verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response. For an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash).",
      "start_idx": 268713,
      "end_idx": 281075,
      "metadata": {
        "num_sentences": 11,
        "num_words": 226,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3983306884765625
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_161",
      "text": "You can use this value\nDownloading an Archive Using Java API Version 2012-06-01 146\n\nAmazon S3 Glacier Developer Guide\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier. For a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for Java\u2014Download Output in Chunks . Example 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single getJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for Java\u2014Download Output in Chunks . The example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic. S3 Glacier sends a notification to this topic after it completes the job. \u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue.",
      "start_idx": 268713,
      "end_idx": 281075,
      "metadata": {
        "num_sentences": 11,
        "num_words": 276,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3744385459206321
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_162",
      "text": "\u2022 Initiates a job to download the specified archive. In the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job. \u2022 Periodically checks the Amazon SQS queue for a message that contains the job ID. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. \u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue that it created. Downloading an Archive Using Java API Version 2012-06-01 147\n\nAmazon S3 Glacier Developer Guide\nimport java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileOutputStream;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.codehaus.jackson.JsonFactory;\nimport org.codehaus.jackson.JsonNode;\nimport org.codehaus.jackson.JsonParseException;\nimport org.codehaus.jackson.JsonParser;\nimport org.codehaus.jackson.map.ObjectMapper;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.GetJobOutputRequest;\nimport com.amazonaws.services.glacier.model.GetJobOutputResult;\nimport com.amazonaws.services.glacier.model.InitiateJobRequest;\nimport com.amazonaws.services.glacier.model.InitiateJobResult;\nimport com.amazonaws.services.glacier.model.JobParameters;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sns.model.CreateTopicRequest;\nimport com.amazonaws.services.sns.model.CreateTopicResult;\nimport com.amazonaws.services.sns.model.DeleteTopicRequest;\nimport com.amazonaws.services.sns.model.SubscribeRequest;\nimport com.amazonaws.services.sns.model.SubscribeResult;\nimport com.amazonaws.services.sns.model.UnsubscribeRequest;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nDownloading an Archive Using Java API Version 2012-06-01 148\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.sqs.model.CreateQueueResult;\nimport com.amazonaws.services.sqs.model.DeleteQueueRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesResult;\nimport com.amazonaws.services.sqs.model.Message;\nimport com.amazonaws.services.sqs.model.ReceiveMessageRequest;\nimport com.amazonaws.services.sqs.model.SetQueueAttributesRequest;\npublic class AmazonGlacierDownloadArchiveWithSQSPolling {\npublic static String archiveId = \"*** provide archive ID ****\";\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String snsTopicName = \"*** provide topic name ***\";\npublic static String sqsQueueName = \"*** provide queue name ***\";\npublic static String sqsQueueARN;\npublic static String sqsQueueURL;\npublic static String snsTopicARN;\npublic static String snsSubscriptionARN;\npublic static String fileName = \"*** provide file name ***\";\npublic static String region = \"*** region ***\";\npublic static long sleepTime = 600;\npublic static AmazonGlacierClient client;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.\" + region + \".amazonaws.com\");\nsqsClient = new AmazonSQSClient(credentials);\nsqsClient.setEndpoint(\"https://sqs.\" + region + \".amazonaws.com\");\nsnsClient = new AmazonSNSClient(credentials);\nsnsClient.setEndpoint(\"https://sns.\" + region + \".amazonaws.com\");\ntry {\nsetupSQS();\nsetupSNS();\nString jobId = initiateJobRequest();\nSystem.out.println(\"Jobid = \" + jobId);\nDownloading an Archive Using Java API Version 2012-06-01 149\n\nAmazon S3 Glacier Developer Guide\nBoolean success = waitForJobToComplete(jobId, sqsQueueURL);\nif (!success) { throw new Exception(\"Job did not complete\nsuccessfully. \"); }\ndownloadJobOutput(jobId);\ncleanUp();\n} catch (Exception e) {\nSystem.err.println(\"Archive retrieval failed. \");\nSystem.err.println(e);\n}\n}\nprivate static void setupSQS() {\nCreateQueueRequest request = new CreateQueueRequest()\n.withQueueName(sqsQueueName);\nCreateQueueResult result = sqsClient.createQueue(request);\nsqsQueueURL = result.getQueueUrl();\nGetQueueAttributesRequest qRequest = new GetQueueAttributesRequest()\n.withQueueUrl(sqsQueueURL)\n.withAttributeNames(\"QueueArn\");\nGetQueueAttributesResult qResult = sqsClient.getQueueAttributes(qRequest);\nsqsQueueARN = qResult.getAttributes().get(\"QueueArn\");\nPolicy sqsPolicy =\nnew Policy().withStatements(\nnew Statement(Effect.Allow)\n.withPrincipals(Principal.AllUsers)\n.withActions(SQSActions.SendMessage)\n.withResources(new Resource(sqsQueueARN)));\nMap<String, String> queueAttributes = new HashMap<String, String>();\nqueueAttributes.put(\"Policy\", sqsPolicy.toJson());\nsqsClient.setQueueAttributes(new SetQueueAttributesRequest(sqsQueueURL,\nqueueAttributes));\n}\nprivate static void setupSNS() {\nCreateTopicRequest request = new CreateTopicRequest()\n.withName(snsTopicName);\nCreateTopicResult result = snsClient.createTopic(request);\nDownloading an Archive Using Java API Version 2012-06-01 150\n\nAmazon S3 Glacier Developer Guide\nsnsTopicARN = result.getTopicArn();\nSubscribeRequest request2 = new SubscribeRequest()\n.withTopicArn(snsTopicARN)\n.withEndpoint(sqsQueueARN)\n.withProtocol(\"sqs\");\nSubscribeResult result2 = snsClient.subscribe(request2);\nsnsSubscriptionARN = result2.getSubscriptionArn();\n}\nprivate static String initiateJobRequest() {\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withSNSTopic(snsTopicARN);\nInitiateJobRequest request = new InitiateJobRequest()\n.withVaultName(vaultName)\n.withJobParameters(jobParameters);\nInitiateJobResult response = client.initiateJob(request);\nreturn response.getJobId();\n}\nprivate static Boolean waitForJobToComplete(String jobId, String sqsQueueUrl)\nthrows InterruptedException, JsonParseException, IOException {\nBoolean messageFound = false;\nBoolean jobSuccessful = false;\nObjectMapper mapper = new ObjectMapper();\nJsonFactory factory = mapper.getJsonFactory();\nwhile (!messageFound) {\nList<Message> msgs = sqsClient.receiveMessage(\nnew\nReceiveMessageRequest(sqsQueueUrl).withMaxNumberOfMessages(10)).getMessages();\nif (msgs.size() > 0) {\nfor (Message m : msgs) {\nJsonParser jpMessage = factory.createJsonParser(m.getBody());\nJsonNode jobMessageNode = mapper.readTree(jpMessage);\nString jobMessage = jobMessageNode.get(\"Message\").getTextValue();\nDownloading an Archive Using Java API Version 2012-06-01 151\n\nAmazon S3 Glacier Developer Guide\nJsonParser jpDesc = factory.createJsonParser(jobMessage);\nJsonNode jobDescNode = mapper.readTree(jpDesc);\nString retrievedJobId = jobDescNode.get(\"JobId\").getTextValue();\nString statusCode = jobDescNode.get(\"StatusCode\").getTextValue();\nif (retrievedJobId.equals(jobId)) {\nmessageFound = true;\nif (statusCode.equals(\"Succeeded\")) {\njobSuccessful = true;\n}\n}\n}\n} else {\nThread.sleep(sleepTime * 1000);\n}\n}\nreturn (messageFound && jobSuccessful);\n}\nprivate static void downloadJobOutput(String jobId) throws IOException {\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n.withVaultName(vaultName)\n.withJobId(jobId);\nGetJobOutputResult getJobOutputResult =\nclient.getJobOutput(getJobOutputRequest);\nInputStream input = new BufferedInputStream(getJobOutputResult.getBody());\nOutputStream output = null;\ntry {\noutput = new BufferedOutputStream(new FileOutputStream(fileName));\nbyte[] buffer = new byte[1024 * 1024];\nint bytesRead = 0;\ndo {\nbytesRead = input.read(buffer);\nif (bytesRead <= 0) break;\noutput.write(buffer, 0, bytesRead);\n} while (bytesRead > 0);\n} catch (IOException e) {\nthrow new AmazonClientException(\"Unable to save archive\", e);\n} finally {\nDownloading an Archive Using Java API Version 2012-06-01 152\n\nAmazon S3 Glacier Developer Guide\ntry {input.close();} catch (Exception e) {}\ntry {output.close();} catch (Exception e) {}\n}\nSystem.out.println(\"Retrieved archive to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\u2014Download\nOutput in Chunks\nThe following Java code example retrieves an archive from S3 Glacier. The code example\ndownloads the job output in chunks by specifying byte range in a GetJobOutputRequest object.",
      "start_idx": 268713,
      "end_idx": 281075,
      "metadata": {
        "num_sentences": 13,
        "num_words": 831,
        "chunk_type": "semantic_split",
        "coherence_score": 0.315335444914989
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_163",
      "text": "import java.io.BufferedInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nDownloading an Archive Using Java API Version 2012-06-01 153\n\nAmazon S3 Glacier Developer Guide\nimport com.amazonaws.services.glacier.model.GetJobOutputRequest;\nimport com.amazonaws.services.glacier.model.GetJobOutputResult;\nimport com.amazonaws.services.glacier.model.InitiateJobRequest;\nimport com.amazonaws.services.glacier.model.InitiateJobResult;\nimport com.amazonaws.services.glacier.model.JobParameters;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sns.model.CreateTopicRequest;\nimport com.amazonaws.services.sns.model.CreateTopicResult;\nimport com.amazonaws.services.sns.model.DeleteTopicRequest;\nimport com.amazonaws.services.sns.model.SubscribeRequest;\nimport com.amazonaws.services.sns.model.SubscribeResult;\nimport com.amazonaws.services.sns.model.UnsubscribeRequest;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nimport com.amazonaws.services.sqs.model.CreateQueueResult;\nimport com.amazonaws.services.sqs.model.DeleteQueueRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesRequest;\nimport com.amazonaws.services.sqs.model.GetQueueAttributesResult;\nimport com.amazonaws.services.sqs.model.Message;\nimport com.amazonaws.services.sqs.model.ReceiveMessageRequest;\nimport com.amazonaws.services.sqs.model.SetQueueAttributesRequest;\npublic class ArchiveDownloadLowLevelWithRange {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String archiveId = \"*** provide archive id ***\";\npublic static String snsTopicName = \"glacier-temp-sns-topic\";\npublic static String sqsQueueName = \"glacier-temp-sqs-queue\";\npublic static long downloadChunkSize = 4194304; // 4 MB\npublic static String sqsQueueARN;\npublic static String sqsQueueURL;\npublic static String snsTopicARN;\npublic static String snsSubscriptionARN;\npublic static String fileName = \"*** provide file name to save archive to ***\";\npublic static String region = \"*** region ***\";\npublic static long sleepTime = 600;\npublic static AmazonGlacierClient client;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nDownloading an Archive Using Java API Version 2012-06-01 154\n\nAmazon S3 Glacier Developer Guide\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.\" + region + \".amazonaws.com\");\nsqsClient = new AmazonSQSClient(credentials);\nsqsClient.setEndpoint(\"https://sqs.\" + region + \".amazonaws.com\");\nsnsClient = new AmazonSNSClient(credentials);\nsnsClient.setEndpoint(\"https://sns.\" + region + \".amazonaws.com\");\ntry {\nsetupSQS();\nsetupSNS();\nString jobId = initiateJobRequest();\nSystem.out.println(\"Jobid = \" + jobId);\nlong archiveSizeInBytes = waitForJobToComplete(jobId, sqsQueueURL);\nif (archiveSizeInBytes==-1) { throw new Exception(\"Job did not complete\nsuccessfully. \"); }\ndownloadJobOutput(jobId, archiveSizeInBytes);\ncleanUp();\n} catch (Exception e) {\nSystem.err.println(\"Archive retrieval failed. \");\nSystem.err.println(e);\n}\n}\nprivate static void setupSQS() {\nCreateQueueRequest request = new CreateQueueRequest()\n.withQueueName(sqsQueueName);\nCreateQueueResult result = sqsClient.createQueue(request);\nsqsQueueURL = result.getQueueUrl();\nGetQueueAttributesRequest qRequest = new GetQueueAttributesRequest()\n.withQueueUrl(sqsQueueURL)\n.withAttributeNames(\"QueueArn\");\nGetQueueAttributesResult qResult = sqsClient.getQueueAttributes(qRequest);\nsqsQueueARN = qResult.getAttributes().get(\"QueueArn\");\nDownloading an Archive Using Java API Version 2012-06-01 155\n\nAmazon S3 Glacier Developer Guide\nPolicy sqsPolicy =\nnew Policy().withStatements(\nnew Statement(Effect.Allow)\n.withPrincipals(Principal.AllUsers)\n.withActions(SQSActions.SendMessage)\n.withResources(new Resource(sqsQueueARN)));\nMap<String, String> queueAttributes = new HashMap<String, String>();\nqueueAttributes.put(\"Policy\", sqsPolicy.toJson());\nsqsClient.setQueueAttributes(new SetQueueAttributesRequest(sqsQueueURL,\nqueueAttributes));\n}\nprivate static void setupSNS() {\nCreateTopicRequest request = new CreateTopicRequest()\n.withName(snsTopicName);\nCreateTopicResult result = snsClient.createTopic(request);\nsnsTopicARN = result.getTopicArn();\nSubscribeRequest request2 = new SubscribeRequest()\n.withTopicArn(snsTopicARN)\n.withEndpoint(sqsQueueARN)\n.withProtocol(\"sqs\");\nSubscribeResult result2 = snsClient.subscribe(request2);\nsnsSubscriptionARN = result2.getSubscriptionArn();\n}\nprivate static String initiateJobRequest() {\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withSNSTopic(snsTopicARN);\nInitiateJobRequest request = new InitiateJobRequest()\n.withVaultName(vaultName)\n.withJobParameters(jobParameters);\nInitiateJobResult response = client.initiateJob(request);\nreturn response.getJobId();\n}\nprivate static long waitForJobToComplete(String jobId, String sqsQueueUrl) throws\nInterruptedException, JsonParseException, IOException {\nDownloading an Archive Using Java API Version 2012-06-01 156\n\nAmazon S3 Glacier Developer Guide\nBoolean messageFound = false;\nBoolean jobSuccessful = false;\nlong archiveSizeInBytes = -1;\nObjectMapper mapper = new ObjectMapper();\nJsonFactory factory = mapper.getFactory();\nwhile (!messageFound) {\nList<Message> msgs = sqsClient.receiveMessage(\nnew\nReceiveMessageRequest(sqsQueueUrl).withMaxNumberOfMessages(10)).getMessages();\nif (msgs.size() > 0) {\nfor (Message m : msgs) {\nJsonParser jpMessage = factory.createJsonParser(m.getBody());\nJsonNode jobMessageNode = mapper.readTree(jpMessage);\nString jobMessage = jobMessageNode.get(\"Message\").textValue();\nJsonParser jpDesc = factory.createJsonParser(jobMessage);\nJsonNode jobDescNode = mapper.readTree(jpDesc);\nString retrievedJobId = jobDescNode.get(\"JobId\").textValue();\nString statusCode = jobDescNode.get(\"StatusCode\").textValue();\narchiveSizeInBytes =\njobDescNode.get(\"ArchiveSizeInBytes\").longValue();\nif (retrievedJobId.equals(jobId)) {\nmessageFound = true;\nif (statusCode.equals(\"Succeeded\")) {\njobSuccessful = true;\n}\n}\n}\n} else {\nThread.sleep(sleepTime * 1000);\n}\n}\nreturn (messageFound && jobSuccessful) ? archiveSizeInBytes : -1;\n}\nprivate static void downloadJobOutput(String jobId, long archiveSizeInBytes) throws\nIOException {\nif (archiveSizeInBytes < 0) {\nSystem.err.println(\"Nothing to download. \");\nDownloading an Archive Using Java API Version 2012-06-01 157\n\nAmazon S3 Glacier Developer Guide\nreturn;\n}\nSystem.out.println(\"archiveSizeInBytes: \" + archiveSizeInBytes);\nFileOutputStream fstream = new FileOutputStream(fileName);\nlong startRange = 0;\nlong endRange = (downloadChunkSize > archiveSizeInBytes) ? archiveSizeInBytes\n-1 : downloadChunkSize - 1;\ndo {\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n.withVaultName(vaultName)\n.withRange(\"bytes=\" + startRange + \"-\" + endRange)\n.withJobId(jobId);\nGetJobOutputResult getJobOutputResult =\nclient.getJobOutput(getJobOutputRequest);\nBufferedInputStream is = new\nBufferedInputStream(getJobOutputResult.getBody());\nbyte[] buffer = new byte[(int)(endRange - startRange + 1)];\nSystem.out.println(\"Checksum received: \" +\ngetJobOutputResult.getChecksum());\nSystem.out.println(\"Content range \" +\ngetJobOutputResult.getContentRange());\nint totalRead = 0;\nwhile (totalRead < buffer.length) {\nint bytesRemaining = buffer.length - totalRead;\nint read = is.read(buffer, totalRead, bytesRemaining);\nif (read > 0) {\ntotalRead = totalRead + read;\n} else {\nbreak;\n}\n}\nSystem.out.println(\"Calculated checksum: \" +\nTreeHashGenerator.calculateTreeHash(new ByteArrayInputStream(buffer)));\nSystem.out.println(\"read = \" + totalRead);\nfstream.write(buffer);\nDownloading an Archive Using Java API Version 2012-06-01 158\n\nAmazon S3 Glacier Developer Guide\nstartRange = startRange + (long)totalRead;\nendRange = ((endRange + downloadChunkSize) > archiveSizeInBytes) ? archiveSizeInBytes : (endRange + downloadChunkSize);\nis.close();\n} while (endRange <= archiveSizeInBytes && startRange < archiveSizeInBytes);\nfstream.close();\nSystem.out.println(\"Retrieved file to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading an Archive in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndownload an archive.",
      "start_idx": 281076,
      "end_idx": 290561,
      "metadata": {
        "num_sentences": 10,
        "num_words": 809,
        "breakpoint_idx": 1696,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4493208991156684
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_164",
      "text": "Topics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for .NET\nDownloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Download method you\ncan use to download an archive. Important\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nDownloading an Archive Using .NET API Version 2012-06-01 159\n\nAmazon S3 Glacier Developer Guide\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options\nExample: Downloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region. For step-by-step instructions on how to run this example, see Running Code Examples. You need\nto update the code as shown with an existing archive ID and the local file path where you want to\nsave the downloaded archive. using System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string downloadFilePath = \"*** Provide the file name and path to where to\nstore the download ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nvar options = new DownloadOptions();\noptions.StreamTransferProgress += ArchiveDownloadHighLevel.progress;\n// Download an archive. Console.WriteLine(\"Intiating the archive retrieval job and then polling SQS\nqueue for the archive to be available. \");\nConsole.WriteLine(\"Once the archive is available, downloading will begin. \");\nmanager.Download(vaultName, archiveId, downloadFilePath, options);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\nDownloading an Archive Using .NET API Version 2012-06-01 160\n\nAmazon S3 Glacier Developer Guide\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic int currentPercentage = -1;\nstatic void progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != currentPercentage)\n{\ncurrentPercentage = args.PercentDone;\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps for downloading an Amazon S3 Glacier (S3 Glacier) archive using the\nlow-level API of the AWS SDK for .NET. 1.",
      "start_idx": 290562,
      "end_idx": 295651,
      "metadata": {
        "num_sentences": 12,
        "num_words": 416,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3649535323634292
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_165",
      "text": "Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region. 2. Initiate an archive-retrieval job by executing the InitiateJob method. You provide job information, such as the archive ID of the archive you want to download and the\noptional Amazon SNS topic to which you want S3 Glacier to post a job completion message, by\ncreating an instance of the InitiateJobRequest class. S3 Glacier returns a job ID in response. The response is available in an instance of the InitiateJobResponse class. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nDownloading an Archive Using .NET API Version 2012-06-01 161\n\nAmazon S3 Glacier Developer Guide\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive as shown in the following request. The request specifies S3 Glacier to prepare only the 1\nMB to 2 MB portion of the archive. AmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\n// Specify byte range. int ONE_MEG = 1048576;\ninitJobRequest.JobParameters.RetrievalByteRange = string.Format(\"{0}-{1}\", ONE_MEG, 2\n* ONE_MEG -1);\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete.",
      "start_idx": 290562,
      "end_idx": 295651,
      "metadata": {
        "num_sentences": 13,
        "num_words": 285,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29480704283102965
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_166",
      "text": "You must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\nDownloading an Archive Using .NET API Version 2012-06-01 162\n\nAmazon S3 Glacier Developer Guide\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message. You can also poll S3 Glacier by calling the DescribeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach . 4.",
      "start_idx": 295652,
      "end_idx": 296364,
      "metadata": {
        "num_sentences": 6,
        "num_words": 120,
        "breakpoint_idx": 1727,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28657185236612953
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_167",
      "text": "Download the job output (archive data) by executing the GetJobOutput method. You provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResponse object. GetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse = client.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nThe preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest. GetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\ngetJobOutputRequest.SetRange(0, 1048575); // Download only the first 1 MB chunk of\nthe output. Downloading an Archive Using .NET API Version 2012-06-01 163\n\nAmazon S3 Glacier Developer Guide\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data.",
      "start_idx": 296365,
      "end_idx": 299417,
      "metadata": {
        "num_sentences": 8,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4692303793770926
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_168",
      "text": "To verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response. For an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash).You can use this value\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier. For a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for .NET\u2014Download Output in Chunks. Example 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single GetJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for .NET\u2014Download Output in Chunks. The example performs the following tasks:\n\u2022 Sets up an Amazon Simple Notification Service (Amazon SNS) topic\nS3 Glacier sends a notification to this topic after it completes the job.",
      "start_idx": 296365,
      "end_idx": 299417,
      "metadata": {
        "num_sentences": 9,
        "num_words": 288,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4203955332438151
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_169",
      "text": "\u2022 Sets up an Amazon Simple Queue Service (Amazon SQS) queue. The example attaches a policy to the queue to enable the Amazon SNS topic to post messages. \u2022 Initiates a job to download the specified archive. Downloading an Archive Using .NET API Version 2012-06-01 164\n\nAmazon S3 Glacier Developer Guide\nIn the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job. \u2022 Periodically checks the Amazon SQS queue for a message. If there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.",
      "start_idx": 299418,
      "end_idx": 300022,
      "metadata": {
        "num_sentences": 7,
        "num_words": 106,
        "breakpoint_idx": 1751,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3288653237479074
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_170",
      "text": "The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON. \u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue it created. using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSNSSQS\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveID = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\nDownloading an Archive Using .NET API Version 2012-06-01 165\n\nAmazon S3 Glacier Developer Guide\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"Service\\\" : \\\"sns.amazonaws.com\\\" },\" +\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QueueArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue. \");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Retrieving...\");\nRetrieveArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue. snsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nDownloading an Archive Using .NET API Version 2012-06-01 166\n\nAmazon S3 Glacier Developer Guide\nsnsClient = new\nAmazonSimpleNotificationServiceClient(Amazon.RegionEndpoint.USWest2);\nsqsClient = new AmazonSQSClient(Amazon.RegionEndpoint.USWest2);\nlong ticks = DateTime.Now.Ticks;\ntopicArn = snsClient.CreateTopic(new CreateTopicRequest { Name =\n\"GlacierDownload-\" + ticks }).TopicArn;\nConsole.Write(\"topicArn: \"); Console.WriteLine(topicArn);\nCreateQueueRequest createQueueRequest = new CreateQueueRequest();\ncreateQueueRequest.QueueName = \"GlacierDownload-\" + ticks;\nCreateQueueResponse createQueueResponse =\nsqsClient.CreateQueue(createQueueRequest);\nqueueUrl = createQueueResponse.QueueUrl;\nConsole.Write(\"QueueURL: \"); Console.WriteLine(queueUrl);\nGetQueueAttributesRequest getQueueAttributesRequest = new\nGetQueueAttributesRequest();\ngetQueueAttributesRequest.AttributeNames = new List<string> { \"QueueArn\" };\ngetQueueAttributesRequest.QueueUrl = queueUrl;\nGetQueueAttributesResponse response =\nsqsClient.GetQueueAttributes(getQueueAttributesRequest);\nqueueArn = response.QueueARN;\nConsole.Write(\"QueueArn: \"); Console.WriteLine(queueArn);\n// Setup the Amazon SNS topic to publish to the SQS queue. snsClient.Subscribe(new SubscribeRequest()\n{\nProtocol = \"sqs\",\nEndpoint = queueArn,\nTopicArn = topicArn\n});\n// Add policy to the queue so SNS can send messages to the queue. var policy = SQS_POLICY.Replace(\"{TopicArn}\", topicArn).Replace(\"{QueueArn}\",\nqueueArn);\nsqsClient.SetQueueAttributes(new SetQueueAttributesRequest()\n{\nQueueUrl = queueUrl,\nAttributes = new Dictionary<string, string>\n{\n{ QueueAttributeName.Policy, policy }\n}\nDownloading an Archive Using .NET API Version 2012-06-01 167\n\nAmazon S3 Glacier Developer Guide\n});\n}\nstatic void RetrieveArchive(AmazonGlacierClient client)\n{\n// Initiate job. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = archiveID,\nDescription = \"This job is to download archive. \",\nSNSTopic = topicArn,\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n// Check queue for a message and if job completed successfully, download archive. ProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest()\n{ QueueUrl = queueUrl, MaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDownloading an Archive Using .NET API Version 2012-06-01 168\n\nAmazon S3 Glacier Developer Guide\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n} else if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive. \");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nDownloading an Archive Using .NET API Version 2012-06-01 169\n\nAmazon S3 Glacier Developer Guide\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\u2014Download\nOutput in Chunks\nThe following C# code example retrieves an archive from S3 Glacier. The code example downloads\nthe job output in chunks by specifying the byte range in a GetJobOutputRequest object.",
      "start_idx": 300023,
      "end_idx": 314513,
      "metadata": {
        "num_sentences": 14,
        "num_words": 779,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4125548561850747
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_171",
      "text": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nusing System.Collections.Specialized;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSQLSNSOutputUsingRange\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\nDownloading an Archive Using .NET API Version 2012-06-01 170\n\nAmazon S3 Glacier Developer Guide\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"AWS\\\" : \\\"arn:aws:iam::123456789012:root\\\" },\"\n+\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QuernArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue. \");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Download archive\");\nDownloadAnArchive(archiveId, client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue. snsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nDownloading an Archive Using .NET API Version 2012-06-01 171\n\nAmazon S3 Glacier Developer Guide\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nlong ticks = DateTime.Now.Ticks;\n// Setup SNS topic. snsClient = new\nAmazonSimpleNotificationServiceClient(Amazon.RegionEndpoint.USWest2);\nsqsClient = new AmazonSQSClient(Amazon.RegionEndpoint.USWest2);\ntopicArn = snsClient.CreateTopic(new CreateTopicRequest { Name =\n\"GlacierDownload-\" + ticks }).TopicArn;\nConsole.Write(\"topicArn: \"); Console.WriteLine(topicArn);\nCreateQueueRequest createQueueRequest = new CreateQueueRequest();\ncreateQueueRequest.QueueName = \"GlacierDownload-\" + ticks;\nCreateQueueResponse createQueueResponse =\nsqsClient.CreateQueue(createQueueRequest);\nqueueUrl = createQueueResponse.QueueUrl;\nConsole.Write(\"QueueURL: \"); Console.WriteLine(queueUrl);\nGetQueueAttributesRequest getQueueAttributesRequest = new\nGetQueueAttributesRequest();\ngetQueueAttributesRequest.AttributeNames = new List<string> { \"QueueArn\" };\ngetQueueAttributesRequest.QueueUrl = queueUrl;\nGetQueueAttributesResponse response =\nsqsClient.GetQueueAttributes(getQueueAttributesRequest);\nqueueArn = response.QueueARN;\nConsole.Write(\"QueueArn: \"); Console.WriteLine(queueArn);\n// Setup the Amazon SNS topic to publish to the SQS queue. snsClient.Subscribe(new SubscribeRequest()\n{\nProtocol = \"sqs\",\nEndpoint = queueArn,\nTopicArn = topicArn\n});\n// Add the policy to the queue so SNS can send messages to the queue. var policy = SQS_POLICY.Replace(\"{TopicArn}\", topicArn).Replace(\"{QuernArn}\",\nqueueArn);\nDownloading an Archive Using .NET API Version 2012-06-01 172\n\nAmazon S3 Glacier Developer Guide\nsqsClient.SetQueueAttributes(new SetQueueAttributesRequest()\n{\nQueueUrl = queueUrl,\nAttributes = new Dictionary<string, string>\n{\n{ QueueAttributeName.Policy, policy }\n}\n});\n}\nstatic void DownloadAnArchive(string archiveId, AmazonGlacierClient client)\n{\n// Initiate job. InitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = archiveId,\nDescription = \"This job is to download the archive. \",\nSNSTopic = topicArn,\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n// Check queue for a message and if job completed successfully, download archive. ProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nvar receiveMessageRequest = new ReceiveMessageRequest() { QueueUrl = queueUrl,\nMaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\nDownloading an Archive Using .NET API Version 2012-06-01 173\n\nAmazon S3 Glacier Developer Guide\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nlong archiveSize = Convert.ToInt64(fields[\"ArchiveSizeInBytes\"]);\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, archiveSize, client); // This where we save job\noutput to the specified file location.\n} else if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive. \");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, long archiveSize,\nAmazonGlacierClient client)\n{\nlong partSize = 4 * (long)Math.Pow(2, 20); // 4 MB. using (Stream fileToSave = new FileStream(fileName, FileMode.Create,\nFileAccess.Write))\n{\nlong currentPosition = 0;\ndo\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nDownloading an Archive Using .NET API Version 2012-06-01 174\n\nAmazon S3 Glacier Developer Guide\nlong endPosition = currentPosition + partSize - 1;\nif (endPosition > archiveSize)\nendPosition = archiveSize;\ngetJobOutputRequest.SetRange(currentPosition, endPosition);\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nCopyStream(webStream, fileToSave);\n}\ncurrentPosition += partSize;\n} while (currentPosition < archiveSize);\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading an Archive by Using the REST API\nTo download an archive by using the REST API\nDownloading an archive is a two-step process. 1.",
      "start_idx": 300023,
      "end_idx": 314513,
      "metadata": {
        "num_sentences": 14,
        "num_words": 796,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45032132326901614
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_172",
      "text": "Initiate a job of the archive-retrieval type. For more information, see Initiate Job (POST\njobs). 2. After the job is completed, download the archive data. For more information, see Get Job\nOutput (GET output). Downloading an Archive by Using REST API Version 2012-06-01 175\n\nAmazon S3 Glacier Developer Guide\nDownloading an Archive in Amazon S3 Glacier Using the AWS CLI\nYou can download archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Download an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1.",
      "start_idx": 314514,
      "end_idx": 315130,
      "metadata": {
        "num_sentences": 7,
        "num_words": 102,
        "breakpoint_idx": 1786,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.22453062874930246
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_173",
      "text": "Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID. aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 176\n\nAmazon S3 Glacier Developer Guide\nExample: Download an Archive Using the AWS CLI\nNote\nIn order to download your archives you must know your archive ids. Steps 1-4 will retrieve\nyour archive ids. If you already know the archive ids you wish to download skip to step 5. 1.",
      "start_idx": 315131,
      "end_idx": 317684,
      "metadata": {
        "num_sentences": 12,
        "num_words": 179,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30841575969349255
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_174",
      "text": "Use the initiate-job command to start an inventory-retrieval job. The inventory report will\nlist your archive ids. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous job command. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 177\n\nAmazon S3 Glacier Developer Guide\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs. 4.",
      "start_idx": 315131,
      "end_idx": 317684,
      "metadata": {
        "num_sentences": 12,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2579170284849225
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_175",
      "text": "When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. This file will contain your archive ids. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the initiate-job command to start the retrieval process each archive from a vault. You\nwill need to specify the job parameter as archive-retrieval as seen below. Downloading an Archive Using the AWS CLI API Version 2012-06-01 178\n\nAmazon S3 Glacier Developer Guide\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333\n--job-parameters=\"{\\\"Type\\\":\\\"archive-retrieval\\\",\\\"ArchiveId\\\":\\\"*** archiveId\n***\\\"}\"\n6. Wait for the archive-retrieval job to complete. Use the describe-job command to\ncheck status of the previous command. aws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\n7.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45373187594943576
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_176",
      "text": "When the above job is complete use the get-job-output command to download your\narchive. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output_file_name\nDeleting an Archive in Amazon S3 Glacier\nYou cannot delete an archive using the Amazon S3 Glacier (S3 Glacier) management console. To delete an archive you must use the AWS Command Line Interface (CLI) or write code to make\na delete request using either the REST API directly or the AWS SDK for Java and .NET wrapper\nlibraries. The following topics explain how to use the AWS SDK for Java and .NET wrapper libraries,\nthe REST API, and the AWS CLI. Topics\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting an Amazon S3 Glacier Archive Using the REST API\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS Command Line Interface\nYou can delete one archive at a time from a vault. To delete the archive you must provide its\narchive ID in your delete request. You can get the archive ID by downloading the vault inventory for\nthe vault that contains the archive. For more information about downloading the vault inventory,\nsee Downloading a Vault Inventory in Amazon S3 Glacier. Deleting an Archive API Version 2012-06-01 179\n\nAmazon S3 Glacier Developer Guide\nAfter you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail. Archive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\n\u2022 If the archive retrieval job is actively preparing the data for download when S3 Glacier receives\nthe delete archive request, then the archival retrieval operation might fail.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 317,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4635370890299479
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_177",
      "text": "\u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, then you will be able to download the output. For more information about archive retrieval, see Downloading an Archive in S3 Glacier. This operation is idempotent. Deleting an already-deleted archive does not result in an error. After you delete an archive, if you immediately download the vault inventory, it might include the\ndeleted archive in the list because S3 Glacier prepares vault inventory only about once a day. Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete an archive using the AWS SDK for Java low-level API. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 157,
        "chunk_type": "semantic_split",
        "coherence_score": 0.263182618882921
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_178",
      "text": "2. Provide request information by creating an instance of the DeleteArchiveRequest class. You need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDK for Java with Amazon S3 Glacier. 3. Run the deleteArchive method by providing the request object as a parameter. The following Java code snippet illustrates the preceding steps. AmazonGlacierClient client;\nDeleting an Archive Using Java API Version 2012-06-01 180\n\nAmazon S3 Glacier Developer Guide\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n.withVaultName(\"*** provide a vault name ***\")\n.withArchiveId(\"*** provide an archive ID ***\");\nclient.deleteArchive(request);\nNote\nFor information about the underlying REST API, see Delete Archive (DELETE archive). Example: Deleting an Archive Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to delete an archive.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 156,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2149372312757704
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_179",
      "text": "For step-by-step\ninstructions on how to run this example, see Running Java Examples for Amazon S3 Glacier Using\nEclipse. You need to update the code as shown with a vault name and the archive ID of the archive\nyou want to delete. Example\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class ArchiveDelete {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\nDeleting an Archive Using Java API Version 2012-06-01 181\n\nAmazon S3 Glacier Developer Guide\n// Delete the archive. client.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully. \");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted. \");\nSystem.err.println(e);\n}\n}\n}\nDeleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete an archive. Topics\n\u2022 Deleting an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting an Archive Using the Low-Level API AWS SDK for .NET\nDeleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteArchive method\nyou can use to delete an archive. Example: Deleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete an\narchive. For step-by-step instructions on how to run this example, see Running Code Examples. You\nneed to update the code as shown with the archive ID of the archive you want to delete.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 293,
        "chunk_type": "semantic_split",
        "coherence_score": 0.443881352742513
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_180",
      "text": "Example\nusing System;\nusing Amazon.Glacier;\nDeleting an Archive Using .NET API Version 2012-06-01 182\n\nAmazon S3 Glacier Developer Guide\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDeleting an Archive Using the Low-Level API AWS SDK for .NET\nThe following are the steps to delete an using the AWS SDK for .NET. 1. Create an instance of the AmazonGlacierClient class (the client). You need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region. 2. Provide request information by creating an instance of the DeleteArchiveRequest class. You need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDKs with Amazon S3 Glacier.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.20578214857313368
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_181",
      "text": "3. Run the DeleteArchive method by providing the request object as a parameter. Deleting an Archive Using .NET API Version 2012-06-01 183\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example uses the low-level API of\nthe AWS SDK for .NET to delete an archive. Note\nFor information about the underlying REST API, see Delete Archive (DELETE archive). For step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the archive ID of the archive you want to delete. Example\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteLowLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Deleting the archive\");\nDeleteAnArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\nDeleting an Archive Using .NET API Version 2012-06-01 184\n\nAmazon S3 Glacier Developer Guide\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void DeleteAnArchive(AmazonGlacierClient client)\n{\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n{\nVaultName = vaultName,\nArchiveId = archiveId\n};\nDeleteArchiveResponse response = client.DeleteArchive(request);\n}\n}\n}\nDeleting an Amazon S3 Glacier Archive Using the REST API\nYou can use the Delete Archive API to delete an archive. \u2022 For information about the Delete Archive API, see Delete Archive (DELETE archive).",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 265,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4138108147515191
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_182",
      "text": "\u2022 For information about using the REST API, see API Reference for Amazon S3 Glacier. Deleting an Archive in Amazon S3 Glacier Using the AWS Command\nLine Interface\nYou can delete archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line Interface\n(AWS CLI). Topics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nDeleting an Archive Using REST API Version 2012-06-01 185\n\nAmazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt. These commands don't provide credentials explicitly, so the credentials of the default profile\nare used. \u2022 Try using the help command. aws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3931549072265625
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_183",
      "text": "aws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand. aws configure list\nExample: Deleting an Archive Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. aws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job. Deleting an Archive Using the AWS CLI API Version 2012-06-01 186\n\nAmazon S3 Glacier Developer Guide\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete. You must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob. You can set notification configuration for specific events on the vault.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3012557135687934
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_184",
      "text": "For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs. 4. When it's complete, use the get-job-output command to download the retrieval job to the file\noutput.json. aws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields. {\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 187\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the delete-archive command to delete each archive from a vault until none remain. aws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id *** archiveid ***\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 188\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS SDKs with Amazon S3 Glacier\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. The SDK libraries wrap\nthe underlying S3 Glacier API, simplifying your programming tasks. For example, for each request\nsent to S3 Glacier, you must include a signature to authenticate your requests.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33273192511664496
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_185",
      "text": "When you use the\nSDK libraries, you need to provide only your AWS security credentials in your code and the libraries\ncompute the necessary signature and include it in the request sent to S3 Glacier. The AWS SDKs\nprovide libraries that map to the underlying REST API and provide objects that you can use to\neasily construct requests and process responses. Topics\n\u2022 AWS SDK Libraries for Java and .NET\n\u2022 Using S3 Glacier with an AWS SDK\n\u2022 Using the AWS SDK for Java with Amazon S3 Glacier\n\u2022 Using the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS Command Line Interface (AWS CLI) is a unified tool to manage your AWS services,\nincluding S3 Glacier. For information about downloading the AWS CLI, see AWS Command Line\nInterface. For a list of the S3 Glacier CLI commands, see the AWS CLI Command Reference. AWS SDK Libraries for Java and .NET\nThe AWS SDKs for Java and .NET offer high-level and low-level wrapper libraries. You can find examples of working with Amazon S3 Glacier by using the AWS SDK for Java and the\nAWS SDK for .NET throughout this developer guide. What Is the Low-Level API? The low-level wrapper libraries map closely the underlying REST API (API Reference for Amazon\nS3 Glacier) supported by S3 Glacier. For each S3 Glacier REST operations, the low-level API\nprovides a corresponding method, a request object for you to provide request information and\na response object for you to process S3 Glacier response.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 251,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5280767228868273
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_186",
      "text": "The low-level wrapper libraries are the\nmost complete implementation of the underlying S3 Glacier operations. For information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier. AWS SDK Libraries for Java and .NET API Version 2012-06-01 189\n\nAmazon S3 Glacier Developer Guide\nWhat Is the High-Level API? To further simplify application development, these libraries offer a higher-level abstraction for\nsome of the operations. For example:\n\u2022 Uploading an archive\u2014To upload an archive using the low-level API in addition to the file\nname and the vault name where you want to save the archive, You need to provide a checksum\n(SHA-256 tree hash) of the payload. However, the high-level API computes the checksum for you. \u2022 Downloading an archive or vault inventory\u2014To download an archive using the low-level API\nyou first initiate a job, wait for the job to complete, and then get the job output. You need to\nwrite additional code to set up an Amazon Simple Notification Service (Amazon SNS) topic for S3\nGlacier to notify you when the job is complete. You also need some polling mechanism to check\nif a job completion message was posted to the topic. The high-level API provides a method to\ndownload an archive that takes care of all these steps.",
      "start_idx": 317685,
      "end_idx": 335435,
      "metadata": {
        "num_sentences": 10,
        "num_words": 225,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30122803582085506
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_187",
      "text": "You only specify an archive ID and a folder\npath where you want to save the downloaded data. For information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier. When to Use the High-Level and Low-Level API\nIn general, if the high-level API provides methods you need to perform an operation, you should\nuse the high-level API because of the simplicity it provides.",
      "start_idx": 335436,
      "end_idx": 335883,
      "metadata": {
        "num_sentences": 3,
        "num_words": 80,
        "breakpoint_idx": 1933,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.11184978485107422
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_188",
      "text": "However, if the high-level API does\nnot offer the functionality, you can use the low-level API. Additionally, the low-level API allows\ngranular control of the operation such as retry logic in the event of a failure. For example, when\nuploading an archive the high-level API uses the file size to determine whether to upload the\narchive in a single operation or use the multipart upload API. The API also has built-in retry logic in\ncase an upload fails. However, your application might need granular control over these decisions, in\nwhich case you can use the low-level API. Using S3 Glacier with an AWS SDK\nAWS software development kits (SDKs) are available for many popular programming languages. Each SDK provides an API, code examples, and documentation that make it easier for developers to\nbuild applications in their preferred language. What Is the High-Level API? API Version 2012-06-01 190\n\nAmazon S3 Glacier Developer Guide\nSDK documentation Code examples\nAWS SDK for C++ AWS SDK for C++ code examples\nAWS CLI AWS CLI code examples\nAWS SDK for Go AWS SDK for Go code examples\nAWS SDK for Java AWS SDK for Java code examples\nAWS SDK for JavaScript AWS SDK for JavaScript code examples\nAWS SDK for Kotlin AWS SDK for Kotlin code examples\nAWS SDK for .NET AWS SDK for .NET code examples\nAWS SDK for PHP AWS SDK for PHP code examples\nAWS Tools for PowerShell Tools for PowerShell code examples\nAWS SDK for Python (Boto3) AWS SDK for Python (Boto3) code examples\nAWS SDK for Ruby AWS SDK for Ruby code examples\nAWS SDK for Rust AWS SDK for Rust code examples\nAWS SDK for SAP ABAP AWS SDK for SAP ABAP code examples\nAWS SDK for Swift AWS SDK for Swift code examples\nFor examples specific to S3 Glacier, see Code examples for S3 Glacier using AWS SDKs. Example availability\nCan't find what you need?",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 10,
        "num_words": 317,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3385164472791884
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_189",
      "text": "Request a code example by using the Provide feedback link at\nthe bottom of this page. Working with AWS SDKs API Version 2012-06-01 191\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS SDK for Java with Amazon S3 Glacier\nThe AWS SDK for Java provides both high-level and low-level APIs for Amazon S3 Glacier (S3\nGlacier) as described in Using the AWS SDKs with Amazon S3 Glacier. For information about\ndownloading the AWS SDK for Java, see Amazon SDK for Java. Note\nThe AWS SDK for Java provides thread-safe clients for accessing S3 Glacier. As a best\npractice, your applications should create one client and reuse the client between threads. Topics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\n\u2022 Running Java Examples for Amazon S3 Glacier Using Eclipse\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of S3 Glacier ( API Reference for Amazon S3 Glacier). When calling any of these\nmethods, you must create a corresponding request object and provide a response object in which\nthe method can return the S3 Glacier response to the operation. For example, the AmazonGlacierClient class provides the createVault method to create a\nvault. This method maps to the underlying Create Vault REST operation (see Create Vault (PUT\nvault)). To use this method, you must create instances of the CreateVaultResult object that\nreceives the S3 Glacier response as shown in the following Java code snippet:\nAmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withAccountId(\"-\")\n.withVaultName(vaultName);\nUsing the AWS SDK for Java API Version 2012-06-01 192\n\nAmazon S3 Glacier Developer Guide\nCreateVaultResult result = client.createVault(createVaultRequest);\nAll the low-level samples in the guide use this pattern.",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 10,
        "num_words": 291,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32050454881456164
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_190",
      "text": "Note\nThe preceding code segment specifies AccountID when creating the request. However,\nwhen using the AWS SDK for Java, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request. You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor Java, if you don't provide the account ID, the library sets the account ID to '-'. Using the High-Level API\nTo further simplify your application development, the AWS SDK for Java provides the\nArchiveTransferManager class that implements a higher-level abstraction for the some of\nthe methods in the low-level API. It provides useful methods, such as the upload and download\nmethods for archive operations. For example, the following Java code snippet uses the upload high-level method to upload an\narchive.",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 10,
        "num_words": 191,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3449430677625868
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_191",
      "text": "String vaultName = \"examplevault\";\nString archiveToUpload = \"c:/folder/exampleArchive.zip\";\nArchiveTransferManager atm = new ArchiveTransferManager(client, credentials);\nString archiveId = atm.upload(vaultName, \"Tax 2012 documents\", new\nFile(archiveToUpload)).getArchiveId();\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. If you don't specify any AWS Region, the AWS SDK for Java\nsets us-east-1 as the default AWS Region. All the high-level examples in this guide use this pattern. Using the High-Level API API Version 2012-06-01 193\n\nAmazon S3 Glacier Developer Guide\nNote\nThe high-level ArchiveTransferManager class can be constructed with an\nAmazonGlacierClient instance or an AWSCredentials instance. Running Java Examples for Amazon S3 Glacier Using Eclipse\nThe easiest way to get started with the Java code examples is to install the latest AWS Toolkit\nfor Eclipse. For information on installing or updating to the latest toolkit, go to http://\naws.amazon.com/eclipse. The following tasks guide you through the creation and testing of the\nJava code examples provided in this section. General Process of Creating Java Code Examples\n1 Create a default credentials profile for your AWS credentials as described in the AWS\nSDK for Java topic Providing AWS Credentials in the Amazon SDK for Java. 2 Create a new AWS Java project in Eclipse. The project is pre-configured with the AWS\nSDK for Java. 3 Copy the code from the section you are reading to your project.",
      "start_idx": 335884,
      "end_idx": 342318,
      "metadata": {
        "num_sentences": 11,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34582321860573506
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_192",
      "text": "4 Update the code by providing any required data. For example, if uploading a file,\nprovide the file path and the bucket name. 5 Run the code. Verify that the object is created by using the AWS Management\nConsole. For more information about the AWS Management Console, go to http://a\nws.amazon.com/console/. Setting the Endpoint\nBy default, the AWS SDK for Java uses the endpoint https://glacier.us-\neast-1.amazonaws.com. You can set the endpoint explicitly as shown in the following Java code\nsnippets. The following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API. Running Java Examples Using Eclipse API Version 2012-06-01 194\n\nAmazon S3 Glacier Developer Guide\nExample\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API. glacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient, sqsClient,\nsnsClient);\nFor a list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier. Using the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS SDK for .NET API is available in AWSSDK.dll. For information about downloading the\nAWS SDK for .NET, go to Sample Code Libraries.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2815604932380445
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_193",
      "text": "As described in Using the AWS SDKs with Amazon\nS3 Glacier, the AWS SDK for .NET provides both the high-level and low-level APIs. Note\nThe low-level API and high-level API provide thread-safe clients for accessing S3 Glacier. As a best practice, your applications should create one client and reuse the client between\nthreads. Topics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\nUsing the AWS SDK for .NET API Version 2012-06-01 195\n\nAmazon S3 Glacier Developer Guide\n\u2022 Running Code Examples\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of Amazon S3 Glacier (S3 Glacier) ( API Reference for Amazon S3 Glacier). When\ncalling any of these methods, you must create a corresponding request object and provide a\nresponse object in which the method can return a S3 Glacier response to the operation. For example, the AmazonGlacierClient class provides the CreateVault method to create\na vault. This method maps to the underlying Create Vault REST operation (see Create Vault\n(PUT vault)). To use this method, you must create instances of the CreateVaultRequest and\nCreateVaultResponse classes to provide request information and receive a S3 Glacier response\nas shown in the following C# code snippet:\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nCreateVaultRequest request = new CreateVaultRequest()\n{\nAccountId = \"-\",\nVaultName = \"*** Provide vault name ***\"\n};\nCreateVaultResponse response = client.CreateVault(request);\nAll the low-level samples in the guide use this pattern. Note\nThe preceding code segment specifies AccountId when creating the request. However,\nwhen using the AWS SDK for .NET, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 12,
        "num_words": 310,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33227088234641333
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_194",
      "text": "You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nUsing the Low-Level API API Version 2012-06-01 196\n\nAmazon S3 Glacier Developer Guide\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor .NET, if you don't provide the account ID, the library sets the account ID to '-'. Using the High-Level API\nTo further simplify your application development, the AWS SDK for .NET provides the\nArchiveTransferManager class that implements a higher-level abstraction for some of the\nmethods in the low-level API. It provides useful methods, such as Upload and Download, for the\narchive operations. For example, the following C# code snippet uses the Upload high-level method to upload an\narchive. string vaultName = \"examplevault\";\nstring archiveToUpload = \"c:\\folder\\exampleArchive.zip\";\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USEast1);\nstring archiveId = manager.Upload(vaultName, \"archive description\",\narchiveToUpload).ArchiveId;\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. All the high-level examples in this guide use this pattern. Note\nThe high-level ArchiveTransferManager class still needs the low-level\nAmazonGlacierClient client, which you can pass either explicitly or the\nArchiveTransferManager creates the client. Running Code Examples\nThe easiest way to get started with the .NET code examples is to install the AWS SDK for .NET. For\nmore information, go to Amazon SDK for .NET. The following procedure outlines steps for you to test the code examples provided in this guide.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 12,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24364000378233014
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_195",
      "text": "Using the High-Level API API Version 2012-06-01 197\n\nAmazon S3 Glacier Developer Guide\nGeneral Process of Creating .NET Code Examples (Using Visual Studio)\n1 Create a credentials profile for your AWS credentials as described in the Amazon SDK\nfor .NET topic Configuring AWS Credentials. 2 Create a new Visual Studio project using the AWS Empty Project template. 3 Replace the code in the project file, Program.cs , with the code in the section you\nare reading. 4 Run the code. Verify that the object is created using the AWS Management Console. For more information about AWS Management Console, go to http://aws.amazon\n.com/console/. Setting the Endpoint\nBy default, the AWS SDK for .NET sets the endpoint to the US West (Oregon) Region (https://\nglacier.us-west-2.amazonaws.com). You can set the endpoint to other AWS Regions as\nshown in the following C# snippets. The following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API. Example\nAmazonGlacierClient client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API. var manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nFor a current list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier. Setting the Endpoint API Version 2012-06-01 198\n\nAmazon S3 Glacier Developer Guide\nCode examples for S3 Glacier using AWS SDKs\nThe following code examples show how to use S3 Glacier with an AWS software development kit\n(SDK). Basics are code examples that show you how to perform the essential operations within a service.",
      "start_idx": 342319,
      "end_idx": 349358,
      "metadata": {
        "num_sentences": 13,
        "num_words": 259,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3044291765261919
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_196",
      "text": "Actions are code excerpts from larger programs and must be run in context. While actions show you\nhow to call individual service functions, you can see actions in context in their related scenarios. Scenarios are code examples that show you how to accomplish specific tasks by calling multiple\nfunctions within a service or combined with other AWS services. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Get started\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. using Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nAPI Version 2012-06-01 199\n\nAmazon S3 Glacier Developer Guide\nstatic async Task Main()\n{\nvar glacierService = new AmazonGlacierClient();\nConsole.WriteLine(\"Hello Amazon Glacier! \");\nConsole.WriteLine(\"Let's list your Glacier vaults:\");\n// You can use await and any of the async methods to get a response. // Let's get the vaults using a paginator. var glacierVaultPaginator = glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nConsole.WriteLine($\"{vault.CreationDate}:{vault.VaultName}, ARN:\n{vault.VaultARN}\");\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference. Code examples\n\u2022 Basic examples for S3 Glacier using AWS SDKs\n\u2022 Hello Amazon S3 Glacier\n\u2022 Actions for S3 Glacier using AWS SDKs\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\nAPI Version 2012-06-01 200\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\n\u2022 Use ListVaults with an AWS SDK or CLI\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\n\u2022 Scenarios for S3 Glacier using AWS SDKs\n\u2022 Archive a file to Amazon S3 Glacier, get notifications, and initiate a job using an AWS SDK\n\u2022 Get Amazon S3 Glacier archive content and delete the archive using an AWS SDK\nBasic examples for S3 Glacier using AWS SDKs\nThe following code examples show how to use the basics of Amazon S3 Glacier with AWS SDKs. Examples\n\u2022 Hello Amazon S3 Glacier\n\u2022 Actions for S3 Glacier using AWS SDKs\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\n\u2022 Use ListVaults with an AWS SDK or CLI\nBasics API Version 2012-06-01 201\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub.",
      "start_idx": 349359,
      "end_idx": 353224,
      "metadata": {
        "num_sentences": 15,
        "num_words": 676,
        "breakpoint_idx": 2038,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.29995792933872767
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_197",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. using Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nstatic async Task Main()\n{\nvar glacierService = new AmazonGlacierClient();\nConsole.WriteLine(\"Hello Amazon Glacier! \");\nConsole.WriteLine(\"Let's list your Glacier vaults:\");\n// You can use await and any of the async methods to get a response. // Let's get the vaults using a paginator. var glacierVaultPaginator = glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nConsole.WriteLine($\"{vault.CreationDate}:{vault.VaultName}, ARN:\n{vault.VaultARN}\");\nHello Amazon S3 Glacier API Version 2012-06-01 202\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions for S3 Glacier using AWS SDKs\nThe following code examples demonstrate how to perform individual S3 Glacier actions with AWS\nSDKs. Each example includes a link to GitHub, where you can find instructions for setting up and\nrunning the code. These excerpts call the S3 Glacier API and are code excerpts from larger programs that must be run\nin context. You can see actions in context in Scenarios for S3 Glacier using AWS SDKs . The following examples include only the most commonly used actions. For a complete list, see the\nAmazon S3 Glacier API Reference. Examples\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\nActions API Version 2012-06-01 203\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use ListVaults with an AWS SDK or CLI\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nUse AddTagsToVault with an AWS SDK or CLI\nThe following code examples show how to use AddTagsToVault. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub.",
      "start_idx": 353225,
      "end_idx": 355843,
      "metadata": {
        "num_sentences": 15,
        "num_words": 434,
        "breakpoint_idx": 2053,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3219091506231399
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_198",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// Add tags to the items in an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to add tags to.</param>\n/// <param name=\"key\">The name of the object to tag.</param>\n/// <param name=\"value\">The tag value to add.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> AddTagsToVaultAsync(string vaultName, string key,\nstring value)\n{\nvar request = new AddTagsToVaultRequest\n{\nTags = new Dictionary<string, string>\n{\n{ key, value },\n},\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.AddTagsToVaultAsync(request);\nActions API Version 2012-06-01 204\n\nAmazon S3 Glacier Developer Guide\nreturn response.HttpStatusCode == HttpStatusCode.NoContent;\n}\n\u2022 For API details, see AddTagsToVault in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command adds two tags to a vault named my-vault:\naws glacier add-tags-to-vault --account-id - --vault-name my-vault --\ntags id=1234,date=july2015\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see AddTagsToVault in AWS CLI Command Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use CreateVault with an AWS SDK or CLI\nThe following code examples show how to use CreateVault. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 205\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 301,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34659016927083336
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_199",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// Create an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to create.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> CreateVaultAsync(string vaultName)\n{\nvar request = new CreateVaultRequest\n{\n// Setting the AccountId to \"-\" means that\n// the account associated with the current\n// account will be used. AccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.CreateVaultAsync(request);\nConsole.WriteLine($\"Created {vaultName} at: {response.Location}\");\nreturn response.HttpStatusCode == HttpStatusCode.Created;\n}\n\u2022 For API details, see CreateVault in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command creates a new vault named my-vault:\nActions API Version 2012-06-01 206\n\nAmazon S3 Glacier Developer Guide\naws glacier create-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see CreateVault in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class CreateVault {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName>\nWhere:\nvaultName - The name of the vault to create.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 273,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41025462680392794
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_200",
      "text": "Actions API Version 2012-06-01 207\n\nAmazon S3 Glacier Developer Guide\n\"\"\";\nif (args.length != 1) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString vaultName = args[0];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ncreateGlacierVault(glacier, vaultName);\nglacier.close();\n}\npublic static void createGlacierVault(GlacierClient glacier, String\nvaultName) {\ntry {\nCreateVaultRequest vaultRequest = CreateVaultRequest.builder()\n.vaultName(vaultName)\n.build();\nCreateVaultResponse createVaultResult =\nglacier.createVault(vaultRequest);\nSystem.out.println(\"The URI of the new vault is \" +\ncreateVaultResult.location());\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see CreateVault in AWS SDK for Java 2.x API Reference. Actions API Version 2012-06-01 208\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create the client. const { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region. const REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nCreate the vault. // Load the SDK for JavaScript\nimport { CreateVaultCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\nconst params = { vaultName: vaultname };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new CreateVaultCommand(params));\nconsole.log(\"Success, vault created! \");\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error\");\n}\n};\nrun();\nActions API Version 2012-06-01 209\n\nAmazon S3 Glacier Developer Guide\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 265,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36327493455674914
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_201",
      "text": "SDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. // Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\n// Call Glacier to create the vault\nglacier.createVault({ vaultName: \"YOUR_VAULT_NAME\" }, function (err) {\nif (!err) {\nconsole.log(\"Created vault! \");\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference. PowerShell\nTools for PowerShell\nExample 1: Creates a new vault for the user's account. As no value was supplied to the -\nAccountId parameter the cmdlets uses a default of \"-\" indicating the current account. New-GLCVault -VaultName myvault\nOutput:\nActions API Version 2012-06-01 210\n\nAmazon S3 Glacier Developer Guide\n/01234567812/vaults/myvault\n\u2022 For API details, see CreateVault in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 196,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2969732920328776
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_202",
      "text": "class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef create_vault(self, vault_name):\n\"\"\"\nCreates a vault. :param vault_name: The name to give the vault. :return: The newly created vault.\n\"\"\" try:\nvault = self.glacier_resource.create_vault(vaultName=vault_name)\nlogger.info(\"Created vault %s. \", vault_name)\nexcept ClientError:\nlogger.exception(\"Couldn't create vault %s. \", vault_name)\nraise\nelse:\nreturn vault\nActions API Version 2012-06-01 211\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see CreateVault in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 124,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3967906528049045
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_203",
      "text": "Use DeleteArchive with an AWS SDK or CLI\nThe following code examples show how to use DeleteArchive. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nTo delete an archive from a vault\nThe following delete-archive example removes the specified archive from\nexample_vault. aws glacier delete-archive \\\n--account-id 111122223333 \\\n--vault-name example_vault \\\n--archive-id Sc0u9ZP8yaWkmh-XGlIvAVprtLhaLCGnNwNl5I5x9HqPIkX5mjc0DrId3Ln-\nGi_k2HzmlIDZUz117KSdVMdMXLuFWi9PJUitxWO73edQ43eTlMWkH0pd9zVSAuV_XXZBVhKhyGhJ7w\nThis command produces no output. \u2022 For API details, see DeleteArchive in AWS CLI Command Reference. Actions API Version 2012-06-01 212\n\nAmazon S3 Glacier Developer Guide\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class DeleteArchive {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName> <accountId> <archiveId>\nWhere:\nvaultName - The name of the vault that contains the archive to\ndelete. accountId - The account ID value.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 218,
        "chunk_type": "semantic_split",
        "coherence_score": 0.343485344780816
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_204",
      "text": "archiveId - The archive ID value. \"\"\";\nif (args.length != 3) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nActions API Version 2012-06-01 213\n\nAmazon S3 Glacier Developer Guide\nString vaultName = args[0];\nString accountId = args[1];\nString archiveId = args[2];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ndeleteGlacierArchive(glacier, vaultName, accountId, archiveId);\nglacier.close();\n}\npublic static void deleteGlacierArchive(GlacierClient glacier, String\nvaultName, String accountId,\nString archiveId) {\ntry {\nDeleteArchiveRequest delArcRequest = DeleteArchiveRequest.builder()\n.vaultName(vaultName)\n.accountId(accountId)\n.archiveId(archiveId)\n.build();\nglacier.deleteArchive(delArcRequest);\nSystem.out.println(\"The archive was deleted. \");\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see DeleteArchive in AWS SDK for Java 2.x API Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Actions API Version 2012-06-01 214\n\nAmazon S3 Glacier Developer Guide\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef delete_archive(archive):\n\"\"\"\nDeletes an archive from a vault. :param archive: The archive to delete.\n\"\"\" try:\narchive.delete()\nlogger.info(\n\"Deleted archive %s from vault %s.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3136295318603516
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_205",
      "text": "\", archive.id,\narchive.vault_name\n)\nexcept ClientError:\nlogger.exception(\"Couldn't delete archive %s. \", archive.id)\nraise\n\u2022 For API details, see DeleteArchive in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use DeleteVault with an AWS SDK or CLI\nThe following code examples show how to use DeleteVault. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\nActions API Version 2012-06-01 215\n\nAmazon S3 Glacier Developer Guide\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command deletes a vault named my-vault:\naws glacier delete-vault --vault-name my-vault --account-id -\nThis command does not produce any output. Amazon Glacier requires an account ID\nargument when performing operations, but you can use a hyphen to specify the in-use\naccount. \u2022 For API details, see DeleteVault in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub.",
      "start_idx": 355844,
      "end_idx": 368681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25969395107693144
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_206",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\nActions API Version 2012-06-01 216\n\nAmazon S3 Glacier Developer Guide\npublic class DeleteVault {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName>\nWhere:\nvaultName - The name of the vault to delete.\\s\n\"\"\";\nif (args.length != 1) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString vaultName = args[0];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ndeleteGlacierVault(glacier, vaultName);\nglacier.close();\n}\npublic static void deleteGlacierVault(GlacierClient glacier, String\nvaultName) {\ntry {\nDeleteVaultRequest delVaultRequest = DeleteVaultRequest.builder()\n.vaultName(vaultName)\n.build();\nglacier.deleteVault(delVaultRequest);\nSystem.out.println(\"The vault was deleted! \");\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see DeleteVault in AWS SDK for Java 2.x API Reference. Actions API Version 2012-06-01 217\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef delete_vault(vault):\n\"\"\"\nDeletes a vault. :param vault: The vault to delete.\n\"\"\"",
      "start_idx": 368682,
      "end_idx": 371876,
      "metadata": {
        "num_sentences": 10,
        "num_words": 241,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4333958943684896
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_207",
      "text": "try:\nvault.delete()\nlogger.info(\"Deleted vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't delete vault %s. \", vault.name)\nraise\n\u2022 For API details, see DeleteVault in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 218\n\nAmazon S3 Glacier Developer Guide\nUse DeleteVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use DeleteVaultNotifications. CLI\nAWS CLI\nTo remove the SNS notifications for a vault\nThe following delete-vault-notifications example removes notifications sent by\nAmazon Simple Notification Service (Amazon SNS) for the specified vault. aws glacier delete-vault-notifications \\\n--account-id 111122223333 \\\n--vault-name example_vault\nThis command produces no output. \u2022 For API details, see DeleteVaultNotifications in AWS CLI Command Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 368682,
      "end_idx": 371876,
      "metadata": {
        "num_sentences": 10,
        "num_words": 155,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3775567372639974
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_208",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 219\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef stop_notifications(notification):\n\"\"\"\nStops notifications to the configured Amazon SNS topic. :param notification: The notification configuration to remove.\n\"\"\" try:\nnotification.delete()\nlogger.info(\"Notifications stopped.\") except ClientError:\nlogger.exception(\"Couldn't stop notifications.\") raise\n\u2022 For API details, see DeleteVaultNotifications in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK.",
      "start_idx": 371877,
      "end_idx": 375094,
      "metadata": {
        "num_sentences": 9,
        "num_words": 116,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3058239354027642
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_209",
      "text": "This topic also includes information about getting started and details about previous\nSDK versions. Use DescribeJob with an AWS SDK or CLI\nThe following code examples show how to use DescribeJob. CLI\nAWS CLI\nThe following command retrieves information about an inventory retrieval job on a vault\nnamed my-vault:\naws glacier describe-job --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\nOutput:\n{\nActions API Version 2012-06-01 220\n\nAmazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-vault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"InProgress\"\n}\nThe job ID can be found in the output of aws glacier initiate-job and aws glacier\nlist-jobs. Amazon Glacier requires an account ID argument when performing operations,\nbut you can use a hyphen to specify the in-use account. \u2022 For API details, see DescribeJob in AWS CLI Command Reference. PowerShell\nTools for PowerShell\nExample 1: Returns details of the specified job. When the job completes successfully the\nRead-GCJobOutput cmdlet can be used to retrieve the contents of the job (an archive or\ninventory list) to the local file system. Get-GLCJob -VaultName myvault -JobId \"op1x...JSbthM\"\nOutput:\nAction : ArchiveRetrieval\nArchiveId : o9O9j...X-TpIhQJw\nArchiveSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nArchiveSizeInBytes : 38034480\nCompleted : False\nCompletionDate : 1/1/0001 12:00:00 AM\nCreationDate : 12/13/2018 11:00:14 AM\nInventoryRetrievalParameters :\nInventorySizeInBytes : 0\nJobDescription :\nJobId : op1x...JSbthM\nJobOutputPath :\nActions API Version 2012-06-01 221\n\nAmazon S3 Glacier Developer Guide\nOutputLocation :\nRetrievalByteRange : 0-38034479\nSelectParameters :\nSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nSNSTopic :\nStatusCode : InProgress\nStatusMessage :\nTier : Standard\nVaultARN : arn:aws:glacier:us-west-2:012345678912:vaults/test\n\u2022 For API details, see DescribeJob in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 371877,
      "end_idx": 375094,
      "metadata": {
        "num_sentences": 9,
        "num_words": 279,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2968928549024794
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_210",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef get_job_status(job):\n\"\"\"\nGets the status of a job. :param job: The job to query. :return: The current status of the job.\n\"\"\" try:\njob.load()\nActions API Version 2012-06-01 222\n\nAmazon S3 Glacier Developer Guide\nlogger.info(\n\"Job %s is performing action %s and has status %s. \",\njob.id,\njob.action,\njob.status_code,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get status for job %s. \", job.id)\nraise\nelse:\nreturn job.status_code\n\u2022 For API details, see DescribeJob in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use DescribeVault with an AWS SDK or CLI\nThe following code examples show how to use DescribeVault. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 375095,
      "end_idx": 379759,
      "metadata": {
        "num_sentences": 14,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2891741742144574
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_211",
      "text": "/// <summary>\n/// Describe an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to describe.</param>\n/// <returns>The Amazon Resource Name (ARN) of the vault.</returns>\npublic async Task<string> DescribeVaultAsync(string vaultName)\n{\nActions API Version 2012-06-01 223\n\nAmazon S3 Glacier Developer Guide\nvar request = new DescribeVaultRequest\n{\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.DescribeVaultAsync(request);\n// Display the information about the vault. Console.WriteLine($\"{response.VaultName}\\tARN: {response.VaultARN}\");\nConsole.WriteLine($\"Created on: {response.CreationDate}\\tNumber\nof Archives: {response.NumberOfArchives}\\tSize (in bytes):\n{response.SizeInBytes}\");\nif (response.LastInventoryDate != DateTime.MinValue)\n{\nConsole.WriteLine($\"Last inventory: {response.LastInventoryDate}\");\n}\nreturn response.VaultARN;\n}\n\u2022 For API details, see DescribeVault in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command retrieves data about a vault named my-vault:\naws glacier describe-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see DescribeVault in AWS CLI Command Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 224\n\nAmazon S3 Glacier Developer Guide\nUse GetJobOutput with an AWS SDK or CLI\nThe following code examples show how to use GetJobOutput. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command saves the output from a vault inventory job to a file in the current\ndirectory named output.json:\naws glacier get-job-output --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW output.json\nThe job-id is available in the output of aws glacier list-jobs. Note that the output\nfile name is a positional argument that is not prefixed by an option name. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account. Output:\n{\n\"status\": 200,\n\"acceptRanges\": \"bytes\",\n\"contentType\": \"application/json\"\n}\noutput.json:\n{\"VaultARN\":\"arn:aws:glacier:us-west-2:0123456789012:vaults/\nmy-vault\",\"InventoryDate\":\"2015-04-07T00:26:18Z\",\"ArchiveList\":\n[{\"ArchiveId\":\"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\"ArchiveDescription\":\"multipart\nActions API Version 2012-06-01 225\n\nAmazon S3 Glacier Developer Guide\nupload\ntest\",\"CreationDate\":\"2015-04-06T22:24:34Z\",\"Size\":3145728,\"SHA256TreeHash\":\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\"}]}\n\u2022 For API details, see GetJobOutput in AWS CLI Command Reference. PowerShell\nTools for PowerShell\nExample 1: Downloads the archive content that was scheduled for retrieval in the\nspecified job and stores the contents into a file on disk.",
      "start_idx": 375095,
      "end_idx": 379759,
      "metadata": {
        "num_sentences": 14,
        "num_words": 404,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3176225096314818
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_212",
      "text": "The download validates the\nchecksum for you, if one is available. If desired the entire response including the\nchecksum can be returned by specifying -Select '*'. Read-GLCJobOutput -VaultName myvault -JobId \"HSWjArc...Zq2XLiW\" -FilePath \"c:\n\\temp\\blue.bin\"\n\u2022 For API details, see GetJobOutput in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 379760,
      "end_idx": 380157,
      "metadata": {
        "num_sentences": 4,
        "num_words": 57,
        "breakpoint_idx": 2203,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.14625410238901773
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_213",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 226\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef get_job_output(job):\n\"\"\"\nGets the output of a job, such as a vault inventory or the contents of an\narchive. :param job: The job to get output from.",
      "start_idx": 380158,
      "end_idx": 380711,
      "metadata": {
        "num_sentences": 5,
        "num_words": 81,
        "breakpoint_idx": 2208,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3535146713256836
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_214",
      "text": ":return: The job output, in bytes.\n\"\"\" try:\nresponse = job.get_output()\nout_bytes = response[\"body\"].read()\nlogger.info(\"Read %s bytes from job %s. \", len(out_bytes), job.id)\nif \"archiveDescription\" in response:\nlogger.info(\n\"These bytes are described as '%s'\",\nresponse[\"archiveDescription\"]\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get output for job %s. \", job.id)\nraise\nelse:\nreturn out_bytes\n\u2022 For API details, see GetJobOutput in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use GetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use GetVaultNotifications. CLI\nAWS CLI\nThe following command gets a description of the notification configuration for a vault\nnamed my-vault:\nActions API Version 2012-06-01 227\n\nAmazon S3 Glacier Developer Guide\naws glacier get-vault-notifications --account-id - --vault-name my-vault\nOutput:\n{\n\"vaultNotificationConfig\": {\n\"Events\": [\n\"InventoryRetrievalCompleted\",\n\"ArchiveRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\"\n}\n}\nIf no notifications have been configured for the vault, an error is returned. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account. \u2022 For API details, see GetVaultNotifications in AWS CLI Command Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 380712,
      "end_idx": 382293,
      "metadata": {
        "num_sentences": 11,
        "num_words": 218,
        "breakpoint_idx": 2219,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2505073547363281
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_215",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 228\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef get_notification(vault):\n\"\"\"\nGets the currently notification configuration for a vault. :param vault: The vault to query. :return: The notification configuration for the specified vault.\n\"\"\" try:\nnotification = vault.Notification()\nlogger.info(\n\"Vault %s notifies %s on %s events. \",\nvault.name,\nnotification.sns_topic,\nnotification.events,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get notification data for %s. \",\nvault.name)\nraise\nelse:\nreturn notification\n\u2022 For API details, see GetVaultNotifications in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use InitiateJob with an AWS SDK or CLI\nThe following code examples show how to use InitiateJob. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 229\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 382294,
      "end_idx": 383976,
      "metadata": {
        "num_sentences": 15,
        "num_words": 249,
        "breakpoint_idx": 2234,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3080812000093006
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_216",
      "text": "Retrieve an archive from a vault. This example uses the ArchiveTransferManager class. For\nAPI details see ArchiveTransferManager. /// <summary>\n/// Download an archive from an Amazon S3 Glacier vault using the Archive\n/// Transfer Manager. /// </summary>\n/// <param name=\"vaultName\">The name of the vault containing the object.</\nparam>\n/// <param name=\"archiveId\">The Id of the archive to download.</param>\n/// <param name=\"localFilePath\">The local directory where the file will\n/// be stored after download.</param>\n/// <returns>Async Task.</returns>\npublic async Task<bool> DownloadArchiveWithArchiveManagerAsync(string\nvaultName, string archiveId, string localFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\nvar options = new DownloadOptions\n{\nStreamTransferProgress = Progress!,\n};\n// Download an archive. Console.WriteLine(\"Initiating the archive retrieval job and then\npolling SQS queue for the archive to be available. \");\nConsole.WriteLine(\"When the archive is available, downloading will\nbegin. \");\nawait manager.DownloadAsync(vaultName, archiveId, localFilePath,\noptions);\nActions API Version 2012-06-01 230\n\nAmazon S3 Glacier Developer Guide\nreturn true;\n}\ncatch (AmazonGlacierException ex)\n{\nConsole.WriteLine(ex.Message);\nreturn false;\n}\n}\n/// <summary>\n/// Event handler to track the progress of the Archive Transfer Manager. /// </summary>\n/// <param name=\"sender\">The object that raised the event.</param>\n/// <param name=\"args\">The argument values from the object that raised the\n/// event.</param>\nstatic void Progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != _currentPercentage)\n{\n_currentPercentage = args.PercentDone;\nConsole.WriteLine($\"Downloaded {_currentPercentage}%\");\n}\n}\n\u2022 For API details, see InitiateJob in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command initiates a job to get an inventory of the vault my-vault:\naws glacier initiate-job --account-id - --vault-name my-vault --job-parameters\n'{\"Type\": \"inventory-retrieval\"}'\nOutput:\n{\nActions API Version 2012-06-01 231\n\nAmazon S3 Glacier Developer Guide\n\"location\": \"/0123456789012/vaults/my-vault/jobs/\nzbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"jobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\"\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. The following command initiates a job to retrieve an archive from the vault my-vault:\naws glacier initiate-job --account-id - --vault-name my-vault --job-\nparameters file://job-archive-retrieval.json\njob-archive-retrieval.json is a JSON file in the local folder that specifies the type of\njob, archive ID, and some optional parameters:\n{\n\"Type\": \"archive-retrieval\",\n\"ArchiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"Description\": \"Retrieve archive on 2015-07-17\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-topic\"\n}\nArchive IDs are available in the output of aws glacier upload-archive and aws\nglacier get-job-output. Output:\n{\n\"location\": \"/011685312445/vaults/mwunderl/jobs/l7IL5-\nEkXyEY9Ws95fClzIbk2O5uLYaFdAYOi-\nazsX_Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59-8N9aHWav\",\n\"jobId\": \"l7IL5-EkXy2O5uLYaFdAYOiEY9Ws95fClzIbk-\nazsX_Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59-8N9aHWav\"\n}\nSee Initiate Job in the Amazon Glacier API Reference for details on the job parameters\nformat. Actions API Version 2012-06-01 232\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub.",
      "start_idx": 383977,
      "end_idx": 387755,
      "metadata": {
        "num_sentences": 14,
        "num_words": 427,
        "breakpoint_idx": 2248,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3789084717467591
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_217",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Retrieve a vault inventory. import software.amazon.awssdk.core.ResponseBytes;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.JobParameters;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputRequest;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputResponse;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class ArchiveDownload {\npublic static void main(String[] args) {\nActions API Version 2012-06-01 233\n\nAmazon S3 Glacier Developer Guide\nfinal String usage = \"\"\"\nUsage: <vaultName> <accountId> <path>\nWhere:\nvaultName - The name of the vault.",
      "start_idx": 387756,
      "end_idx": 389245,
      "metadata": {
        "num_sentences": 4,
        "num_words": 122,
        "breakpoint_idx": 2252,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3673543930053711
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_218",
      "text": "accountId - The account ID value. path - The path where the file is written to. \"\"\";\nif (args.length != 3) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString vaultName = args[0];\nString accountId = args[1];\nString path = args[2];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nString jobNum = createJob(glacier, vaultName, accountId);\ncheckJob(glacier, jobNum, vaultName, accountId, path);\nglacier.close();\n}\npublic static String createJob(GlacierClient glacier, String vaultName,\nString accountId) {\ntry {\nJobParameters job = JobParameters.builder()\n.type(\"inventory-retrieval\")\n.build();\nInitiateJobRequest initJob = InitiateJobRequest.builder()\n.jobParameters(job)\n.accountId(accountId)\n.vaultName(vaultName)\n.build();\nInitiateJobResponse response = glacier.initiateJob(initJob);\nSystem.out.println(\"The job ID is: \" + response.jobId());\nSystem.out.println(\"The relative URI path of the job is: \" +\nresponse.location());\nActions API Version 2012-06-01 234\n\nAmazon S3 Glacier Developer Guide\nreturn response.jobId();\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\nreturn \"\";\n}\n// Poll S3 Glacier = Polling a Job may take 4-6 hours according to the\n// Documentation. public static void checkJob(GlacierClient glacier, String jobId, String name,\nString account, String path) {\ntry {\nboolean finished = false;\nString jobStatus;\nint yy = 0;\nwhile (!finished) {\nDescribeJobRequest jobRequest = DescribeJobRequest.builder()\n.jobId(jobId)\n.accountId(account)\n.vaultName(name)\n.build();\nDescribeJobResponse response = glacier.describeJob(jobRequest);\njobStatus = response.statusCodeAsString();\nif (jobStatus.compareTo(\"Succeeded\") == 0)\nfinished = true;\nelse {\nSystem.out.println(yy + \" status is: \" + jobStatus);\nThread.sleep(1000);\n}\nyy++;\n}\nSystem.out.println(\"Job has Succeeded\");\nGetJobOutputRequest jobOutputRequest = GetJobOutputRequest.builder()\n.jobId(jobId)\n.vaultName(name)\n.accountId(account)\n.build();\nActions API Version 2012-06-01 235\n\nAmazon S3 Glacier Developer Guide\nResponseBytes<GetJobOutputResponse> objectBytes =\nglacier.getJobOutputAsBytes(jobOutputRequest);\n// Write the data to a local file. byte[] data = objectBytes.asByteArray();\nFile myFile = new File(path);\nOutputStream os = new FileOutputStream(myFile);\nos.write(data);\nSystem.out.println(\"Successfully obtained bytes from a Glacier\nvault\");\nos.close();\n} catch (GlacierException | InterruptedException | IOException e) {\nSystem.out.println(e.getMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see InitiateJob in AWS SDK for Java 2.x API Reference.",
      "start_idx": 389246,
      "end_idx": 391873,
      "metadata": {
        "num_sentences": 5,
        "num_words": 293,
        "breakpoint_idx": 2257,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2738674163818359
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_219",
      "text": "PowerShell\nTools for PowerShell\nExample 1: Starts a job to retrieve an archive from the specified vault owned by the\nuser. The status of the job can be checked using the Get-GLCJob cmdlet. When the\njob completes successfully the Read-GCJobOutput cmdlet can be used to retrieve the\ncontents of the archive to the local file system. Start-GLCJob -VaultName myvault -JobType \"archive-retrieval\" -JobDescription\n\"archive retrieval\" -ArchiveId \"o9O9j...TX-TpIhQJw\"\nOutput:\nJobId JobOutputPath Location\n----- ------------- --------\nop1x...JSbthM /012345678912/vaults/test/jobs/\nop1xe...I4HqCHkSJSbthM\nActions API Version 2012-06-01 236\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS Tools for PowerShell Cmdlet Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Retrieve a vault inventory. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_inventory_retrieval(vault):\n\"\"\"\nInitiates an inventory retrieval job. The inventory describes the\ncontents\nof the vault. Standard retrievals typically complete within 3\u20145 hours. When the job completes, you can get the inventory by calling\nget_output().",
      "start_idx": 391874,
      "end_idx": 397646,
      "metadata": {
        "num_sentences": 13,
        "num_words": 191,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25958736126239484
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_220",
      "text": ":param vault: The vault to inventory. :return: The inventory retrieval job.\n\"\"\" try:\njob = vault.initiate_inventory_retrieval()\nlogger.info(\"Started %s job with ID %s. \", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on vault %s. \", vault.name)\nraise\nActions API Version 2012-06-01 237\n\nAmazon S3 Glacier Developer Guide\nelse:\nreturn job\nRetrieve an archive from a vault. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output(). :param archive: The archive to retrieve. :return: The archive retrieval job.\n\"\"\" try:\njob = archive.initiate_archive_retrieval()\nlogger.info(\"Started %s job with ID %s.",
      "start_idx": 391874,
      "end_idx": 397646,
      "metadata": {
        "num_sentences": 13,
        "num_words": 130,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3387254568246695
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_221",
      "text": "\", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on archive %s. \", archive.id)\nraise\nelse:\nreturn job\n\u2022 For API details, see InitiateJob in AWS SDK for Python (Boto3) API Reference. Actions API Version 2012-06-01 238\n\nAmazon S3 Glacier Developer Guide\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use ListJobs with an AWS SDK or CLI\nThe following code examples show how to use ListJobs. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code examples:\n\u2022 Archive a file, get notifications, and initiate a job\n\u2022 Get archive content and delete the archive\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// List Amazon S3 Glacier jobs. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to list jobs for.</param>\n/// <returns>A list of Amazon S3 Glacier jobs.</returns>\npublic async Task<List<GlacierJobDescription>> ListJobsAsync(string\nvaultName)\n{\nvar request = new ListJobsRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the current account. AccountId = \"-\",\nVaultName = vaultName,\n};\nActions API Version 2012-06-01 239\n\nAmazon S3 Glacier Developer Guide\nvar response = await _glacierService.ListJobsAsync(request);\nreturn response.JobList;\n}\n\u2022 For API details, see ListJobs in AWS SDK for .NET API Reference. CLI\nAWS CLI\nThe following command lists in-progress and recently completed jobs for a vault named my-\nvault:\naws glacier list-jobs --account-id - --vault-name my-vault\nOutput:\n{\n\"JobList\": [\n{\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"RetrievalByteRange\": \"0-3145727\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\",\n\"Completed\": false,\n\"SHA256TreeHash\":\n\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\",\n\"JobId\": \"l7IL5-EkXyEY9Ws95fClzIbk2O5uLYaFdAYOi-\nazsX_Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59-8N9aHWav\",\n\"ArchiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--\nzM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"JobDescription\": \"Retrieve archive on 2015-07-17\",\n\"ArchiveSizeInBytes\": 3145728,\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveSHA256TreeHash\":\n\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\",\n\"CreationDate\": \"2015-07-17T21:16:13.840Z\",\nActions API Version 2012-06-01 240\n\nAmazon S3 Glacier Developer Guide\n\"StatusCode\": \"InProgress\"\n},\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"\"InProgress\"\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see ListJobs in AWS CLI Command Reference.",
      "start_idx": 391874,
      "end_idx": 397646,
      "metadata": {
        "num_sentences": 13,
        "num_words": 397,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36728756244365984
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_222",
      "text": "Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\nActions API Version 2012-06-01 241\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault. :param vault: The vault to query. :param job_type: The type of job to list. :return: The list of jobs of the requested type.\n\"\"\" job_list = []\ntry:\nif job_type == \"all\":\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get. \", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3053018781873915
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_223",
      "text": "\", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s. \", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\n\u2022 For API details, see ListJobs in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 242\n\nAmazon S3 Glacier Developer Guide\nUse ListTagsForVault with an AWS SDK or CLI\nThe following code examples show how to use ListTagsForVault. .NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// List tags for an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the vault to list tags for.</param>\n/// <returns>A dictionary listing the tags attached to each object in the\n/// vault and its tags.</returns>\npublic async Task<Dictionary<string, string>> ListTagsForVaultAsync(string\nvaultName)\n{\nvar request = new ListTagsForVaultRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the default user. AccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.ListTagsForVaultAsync(request);\nreturn response.Tags;\n}\n\u2022 For API details, see ListTagsForVault in AWS SDK for .NET API Reference.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 229,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3193201276991102
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_224",
      "text": "Actions API Version 2012-06-01 243\n\nAmazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command lists the tags applied to a vault named my-vault:\naws glacier list-tags-for-vault --account-id - --vault-name my-vault\nOutput:\n{\n\"Tags\": {\n\"date\": \"july2015\",\n\"id\": \"1234\"\n}\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see ListTagsForVault in AWS CLI Command Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use ListVaults with an AWS SDK or CLI\nThe following code examples show how to use ListVaults. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 244\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// List the Amazon S3 Glacier vaults associated with the current account. /// </summary>\n/// <returns>A list containing information about each vault.</returns>\npublic async Task<List<DescribeVaultOutput>> ListVaultsAsync()\n{\nvar glacierVaultPaginator = _glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nvar vaultList = new List<DescribeVaultOutput>();\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nvaultList.Add(vault);\n}\nreturn vaultList;\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 269,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3669173770480686
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_225",
      "text": "CLI\nAWS CLI\nThe following command lists the vaults in the default account and region:\naws glacier list-vaults --account-id -\nOutput:\nActions API Version 2012-06-01 245\n\nAmazon S3 Glacier Developer Guide\n{\n\"VaultList\": [\n{\n\"SizeInBytes\": 3178496,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"LastInventoryDate\": \"2015-04-07T00:26:19.028Z\",\n\"VaultName\": \"my-vault\",\n\"NumberOfArchives\": 1,\n\"CreationDate\": \"2015-04-06T21:23:45.708Z\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see ListVaults in AWS CLI Command Reference. Java\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. import software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsRequest;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsResponse;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DescribeVaultOutput;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.util.List;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\nActions API Version 2012-06-01 246\n\nAmazon S3 Glacier Developer Guide\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class ListVaults {\npublic static void main(String[] args) {\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nlistAllVault(glacier);\nglacier.close();\n}\npublic static void listAllVault(GlacierClient glacier) {\nboolean listComplete = false;\nString newMarker = null;\nint totalVaults = 0;\nSystem.out.println(\"Your Amazon Glacier vaults:\");\ntry {\nwhile (!listComplete) {\nListVaultsResponse response = null;\nif (newMarker != null) {\nListVaultsRequest request = ListVaultsRequest.builder()\n.marker(newMarker)\n.build();\nresponse = glacier.listVaults(request);\n} else {\nListVaultsRequest request = ListVaultsRequest.builder()\n.build();\nresponse = glacier.listVaults(request);\n}\nList<DescribeVaultOutput> vaultList = response.vaultList();\nfor (DescribeVaultOutput v : vaultList) {\ntotalVaults += 1;\nSystem.out.println(\"* \" + v.vaultName());\n}\n// Check for further results. newMarker = response.marker();\nif (newMarker == null) {\nActions API Version 2012-06-01 247\n\nAmazon S3 Glacier Developer Guide\nlistComplete = true;\n}\n}\nif (totalVaults == 0) {\nSystem.out.println(\"No vaults found. \");\n}\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for Java 2.x API Reference. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 10,
        "num_words": 352,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3620492723253038
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_226",
      "text": "class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef list_vaults(self):\n\"\"\"\nLists vaults for the current account.\n\"\"\" Actions API Version 2012-06-01 248\n\nAmazon S3 Glacier Developer Guide\ntry:\nfor vault in self.glacier_resource.vaults.all():\nlogger.info(\"Got vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't list vaults.\") raise\n\u2022 For API details, see ListVaults in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use SetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use SetVaultNotifications. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nCLI\nAWS CLI\nThe following command configures SNS notifications for a vault named my-vault:\naws glacier set-vault-notifications --account-id - --vault-name my-vault --vault-\nnotification-config file://notificationconfig.json\nnotificationconfig.json is a JSON file in the current folder that specifies an SNS topic\nand the events to publish:\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nActions API Version 2012-06-01 249\n\nAmazon S3 Glacier Developer Guide\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. \u2022 For API details, see SetVaultNotifications in AWS CLI Command Reference.",
      "start_idx": 397647,
      "end_idx": 406942,
      "metadata": {
        "num_sentences": 12,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3202999577377782
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_227",
      "text": "Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications. Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events. :param vault: The vault to set up to publish notifications. :param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications. :return: Data about the new notification configuration.\n\"\"\" try:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\nActions API Version 2012-06-01 250\n\nAmazon S3 Glacier Developer Guide\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s. \",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s. \", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\n\u2022 For API details, see SetVaultNotifications in AWS SDK for Python (Boto3) API Reference.",
      "start_idx": 406943,
      "end_idx": 416671,
      "metadata": {
        "num_sentences": 12,
        "num_words": 191,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37692861845999054
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_228",
      "text": "For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use UploadArchive with an AWS SDK or CLI\nThe following code examples show how to use UploadArchive. Action examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 251\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. /// <summary>\n/// Upload an object to an Amazon S3 Glacier vault. /// </summary>\n/// <param name=\"vaultName\">The name of the Amazon S3 Glacier vault to upload\n/// the archive to.</param>\n/// <param name=\"archiveFilePath\">The file path of the archive to upload to\nthe vault.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<string> UploadArchiveWithArchiveManager(string vaultName,\nstring archiveFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\n// Upload an archive. var response = await manager.UploadAsync(vaultName, \"upload archive\ntest\", archiveFilePath);\nreturn response.ArchiveId;\n}\ncatch (AmazonGlacierException ex)\n{\nConsole.WriteLine(ex.Message);\nreturn string.Empty;\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for .NET API Reference. Actions API Version 2012-06-01 252\n\nAmazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command uploads an archive in the current folder named archive.zip to a\nvault named my-vault:\naws glacier upload-archive --account-id - --vault-name my-vault --\nbody archive.zip\nOutput:\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--\nzM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\":\n\"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/0123456789012/vaults/my-vault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. To retrieve an uploaded archive, initiate a retrieval job with the aws glacier initiate-job\ncommand. \u2022 For API details, see UploadArchive in AWS CLI Command Reference.",
      "start_idx": 406943,
      "end_idx": 416671,
      "metadata": {
        "num_sentences": 12,
        "num_words": 332,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4060678193063447
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_229",
      "text": "Java\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Actions API Version 2012-06-01 253\n\nAmazon S3 Glacier Developer Guide\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.UploadArchiveResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.io.File;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials. *\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class UploadArchive {\nstatic final int ONE_MB = 1024 * 1024;\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <strPath> <vaultName>\\s\nWhere:\nstrPath - The path to the archive to upload (for example, C:\\\n\\AWS\\\\test.pdf). vaultName - The name of the vault. \"\"\";\nif (args.length != 2) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nString strPath = args[0];\nActions API Version 2012-06-01 254\n\nAmazon S3 Glacier Developer Guide\nString vaultName = args[1];\nFile myFile = new File(strPath);\nPath path = Paths.get(strPath);\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\nString archiveId = uploadContent(glacier, path, vaultName, myFile);\nSystem.out.println(\"The ID of the archived item is \" + archiveId);\nglacier.close();\n}\npublic static String uploadContent(GlacierClient glacier, Path path, String\nvaultName, File myFile) {\n// Get an SHA-256 tree hash value. String checkVal = computeSHA256(myFile);\ntry {\nUploadArchiveRequest uploadRequest = UploadArchiveRequest.builder()\n.vaultName(vaultName)\n.checksum(checkVal)\n.build();\nUploadArchiveResponse res = glacier.uploadArchive(uploadRequest,\npath);\nreturn res.archiveId();\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\nreturn \"\";\n}\nprivate static String computeSHA256(File inputFile) {\ntry {\nbyte[] treeHash = computeSHA256TreeHash(inputFile);\nSystem.out.printf(\"SHA-256 tree hash = %s\\n\", toHex(treeHash));\nreturn toHex(treeHash);\n} catch (IOException ioe) {\nSystem.err.format(\"Exception when reading from file %s: %s\",\ninputFile, ioe.getMessage());\nSystem.exit(-1);\nActions API Version 2012-06-01 255\n\nAmazon S3 Glacier Developer Guide\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256:\n%s\", nsae.getMessage());\nSystem.exit(-1);\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws\nIOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB. */\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nActions API Version 2012-06-01 256\n\nAmazon S3 Glacier Developer Guide\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\n}\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums. */\npublic static byte[] computeSHA256TreeHash(byte[][] chunkSHA256Hashes)\nthrows NoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.length > 1) {\nint len = prevLvlHashes.length / 2;\nif (prevLvlHashes.length % 2 != 0) {\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.length; i = i + 2, j++) {\n// If there are at least two elements remaining. if (prevLvlHashes.length - i > 1) {\n// Calculate a digest of the concatenated nodes. md.reset();\nActions API Version 2012-06-01 257\n\nAmazon S3 Glacier Developer Guide\nmd.update(prevLvlHashes[i]);\nmd.update(prevLvlHashes[i + 1]);\ncurrLvlHashes[j] = md.digest();\n} else { // Take care of the remaining odd chunk\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (byte datum : data) {\nString hex = Integer.toHexString(datum & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero. sb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for Java 2.x API Reference.",
      "start_idx": 406943,
      "end_idx": 416671,
      "metadata": {
        "num_sentences": 13,
        "num_words": 698,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3037449763371394
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_230",
      "text": "Actions API Version 2012-06-01 258\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create the client. const { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region. const REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nUpload the archive. // Load the SDK for JavaScript\nimport { UploadArchiveCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\n// Create a new service object and buffer\nconst buffer = new Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nconst params = { vaultName: vaultname, body: buffer };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new UploadArchiveCommand(params));\nconsole.log(\"Archive ID\", data.archiveId);\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error uploading archive! \", err);\n}\n};\nActions API Version 2012-06-01 259\n\nAmazon S3 Glacier Developer Guide\nrun();\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference. SDK for JavaScript (v2)\nNote\nThere's more on GitHub.",
      "start_idx": 416672,
      "end_idx": 420160,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35048696729871964
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_231",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. // Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object and buffer\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\nbuffer = Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nvar params = { vaultName: \"YOUR_VAULT_NAME\", body: buffer };\n// Call Glacier to upload the archive. glacier.uploadArchive(params, function (err, data) {\nif (err) {\nconsole.log(\"Error uploading archive! \", err);\n} else {\nconsole.log(\"Archive ID\", data.archiveId);\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference. Actions API Version 2012-06-01 260\n\nAmazon S3 Glacier Developer Guide\nPowerShell\nTools for PowerShell\nExample 1: Uploads a single file to the specified vault, returning the archive ID and\ncomputed checksum. Write-GLCArchive -VaultName myvault -FilePath c:\\temp\\blue.bin\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nExample 2: Uploads the contents of a folder hierarchy to the specified vault in the user's\naccount. For each file uploaded the cmdlet emits the filename, corresponding archive ID\nand the computed checksum of the archive. Write-GLCArchive -VaultName myvault -FolderPath . -Recurse\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nC:\\temp\\green.bin qXAfOdSG...czo729UHXrw d50a1...9184b9\nC:\\temp\\lum.bin 39aNifP3...q9nb8nZkFIg 28886...5c3e27\nC:\\temp\\red.bin vp7E6rU_...Ejk_HhjAxKA e05f7...4e34f5\nC:\\temp\\Folder1\\file1.txt _eRINlip...5Sxy7dD2BaA d0d2a...c8a3ba\nC:\\temp\\Folder2\\file2.iso -Ix3jlmu...iXiDh-XfOPA 7469e...3e86f1\n\u2022 For API details, see UploadArchive in AWS Tools for PowerShell Cmdlet Reference. Actions API Version 2012-06-01 261\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub.",
      "start_idx": 416672,
      "end_idx": 420160,
      "metadata": {
        "num_sentences": 11,
        "num_words": 269,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31724888194691053
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_232",
      "text": "Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. class GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault. :param vault: The vault where the archive is put. :param archive_description: A description of the archive. :param archive_file: The archive file to put in the vault. :return: The uploaded archive.\n\"\"\" try:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s. \",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\nActions API Version 2012-06-01 262\n\nAmazon S3 Glacier Developer Guide\n\"Couldn't upload %s to %s.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 124,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40264002482096356
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_233",
      "text": "\", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n\u2022 For API details, see UploadArchive in AWS SDK for Python (Boto3) API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Use UploadMultipartPart with an AWS SDK or CLI\nThe following code examples show how to use UploadMultipartPart. CLI\nAWS CLI\nThe following command uploads the first 1 MiB (1024 x 1024 bytes) part of an archive:\naws glacier upload-multipart-part --body part1 --range 'bytes\n0-1048575/*' --account-id - --vault-name my-vault --upload-\nid 19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-\nOssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account. The body parameter takes a path to a part file on the local filesystem. The range parameter\ntakes an HTTP content range indicating the bytes that the part occupies in the completed\narchive. The upload ID is returned by the aws glacier initiate-multipart-upload\ncommand and can also be obtained by using aws glacier list-multipart-uploads. For more information on multipart uploads to Amazon Glacier using the AWS CLI, see Using\nAmazon Glacier in the AWS CLI User Guide. \u2022 For API details, see UploadMultipartPart in AWS CLI Command Reference.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35615492926703557
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_234",
      "text": "Actions API Version 2012-06-01 263\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create a multipart upload of 1 megabyte chunks of a Buffer object. // Create a new service object and some supporting variables\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" }),\nvaultName = \"YOUR_VAULT_NAME\",\nbuffer = new Buffer(2.5 * 1024 * 1024), // 2.5MB buffer\npartSize = 1024 * 1024, // 1MB chunks,\nnumPartsLeft = Math.ceil(buffer.length / partSize),\nstartTime = new Date(),\nparams = { vaultName: vaultName, partSize: partSize.toString() };\n// Compute the complete SHA-256 tree hash so we can pass it\n// to completeMultipartUpload request at the end\nvar treeHash = glacier.computeChecksums(buffer).treeHash;\n// Initiate the multipart upload\nconsole.log(\"Initiating upload to\", vaultName);\n// Call Glacier to initiate the upload. glacier.initiateMultipartUpload(params, function (mpErr, multipart) {\nif (mpErr) {\nconsole.log(\"Error! \", mpErr.stack);\nreturn;\n}\nconsole.log(\"Got upload ID\", multipart.uploadId);\n// Grab each partSize chunk and upload it as a part\nfor (var i = 0; i < buffer.length; i += partSize) {\nvar end = Math.min(i + partSize, buffer.length),\npartParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\nrange: \"bytes \" + i + \"-\" + (end - 1) + \"/*\",\nbody: buffer.slice(i, end),\nActions API Version 2012-06-01 264\n\nAmazon S3 Glacier Developer Guide\n};\n// Send a single part\nconsole.log(\"Uploading part\", i, \"=\", partParams.range);\nglacier.uploadMultipartPart(partParams, function (multiErr, mData) {\nif (multiErr) return;\nconsole.log(\"Completed part\", this.request.params.range);\nif (--numPartsLeft > 0) return; // complete only when all parts uploaded\nvar doneParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\narchiveSize: buffer.length.toString(),\nchecksum: treeHash, // the computed tree hash\n};\nconsole.log(\"Completing upload...\");\nglacier.completeMultipartUpload(doneParams, function (err, data) {\nif (err) {\nconsole.log(\"An error occurred while uploading the archive\");\nconsole.log(err);\n} else {\nvar delta = (new Date() - startTime) / 1000;\nconsole.log(\"Completed upload in\", delta, \"seconds\");\nconsole.log(\"Archive ID:\", data.archiveId);\nconsole.log(\"Checksum: \", data.checksum);\n}\n});\n});\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide. \u2022 For API details, see UploadMultipartPart in AWS SDK for JavaScript API Reference. For a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Actions API Version 2012-06-01 265\n\nAmazon S3 Glacier Developer Guide\nScenarios for S3 Glacier using AWS SDKs\nThe following code examples show you how to implement common scenarios in S3 Glacier with\nAWS SDKs.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 416,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3930359310574002
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_235",
      "text": "These scenarios show you how to accomplish specific tasks by calling multiple functions\nwithin S3 Glacier or combined with other AWS services. Each scenario includes a link to the\ncomplete source code, where you can find instructions on how to set up and run the code. Scenarios target an intermediate level of experience to help you understand service actions in\ncontext. Examples\n\u2022 Archive a file to Amazon S3 Glacier, get notifications, and initiate a job using an AWS SDK\n\u2022 Get Amazon S3 Glacier archive content and delete the archive using an AWS SDK\nArchive a file to Amazon S3 Glacier, get notifications, and initiate a job\nusing an AWS SDK\nThe following code example shows how to:\n\u2022 Create an Amazon S3 Glacier vault. \u2022 Configure the vault to publish notifications to an Amazon SNS topic. \u2022 Upload an archive file to the vault. \u2022 Initiate an archive retrieval job. Python\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create a class that wraps S3 Glacier operations.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 10,
        "num_words": 188,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27908689710828993
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_236",
      "text": "import argparse\nScenarios API Version 2012-06-01 266\n\nAmazon S3 Glacier Developer Guide\nimport logging\nimport os\nimport boto3\nfrom botocore.exceptions import ClientError\nlogger = logging.getLogger(__name__)\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\ndef create_vault(self, vault_name):\n\"\"\"\nCreates a vault. :param vault_name: The name to give the vault. :return: The newly created vault.\n\"\"\" try:\nvault = self.glacier_resource.create_vault(vaultName=vault_name)\nlogger.info(\"Created vault %s. \", vault_name)\nexcept ClientError:\nlogger.exception(\"Couldn't create vault %s. \", vault_name)\nraise\nelse:\nreturn vault\ndef list_vaults(self):\n\"\"\"\nLists vaults for the current account.\n\"\"\" try:\nfor vault in self.glacier_resource.vaults.all():\nlogger.info(\"Got vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't list vaults.\") Archive a file, get notifications, and initiate a job API Version 2012-06-01 267\n\nAmazon S3 Glacier Developer Guide\nraise\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault. :param vault: The vault where the archive is put.",
      "start_idx": 420161,
      "end_idx": 427898,
      "metadata": {
        "num_sentences": 12,
        "num_words": 156,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4817407781427557
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_237",
      "text": ":param archive_description: A description of the archive. :param archive_file: The archive file to put in the vault. :return: The uploaded archive.\n\"\"\" try:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s. \",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't upload %s to %s. \", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output(). :param archive: The archive to retrieve. :return: The archive retrieval job.\n\"\"\"",
      "start_idx": 427899,
      "end_idx": 431397,
      "metadata": {
        "num_sentences": 10,
        "num_words": 100,
        "chunk_type": "semantic_split",
        "coherence_score": 0.494318856133355
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_238",
      "text": "Archive a file, get notifications, and initiate a job API Version 2012-06-01 268\n\nAmazon S3 Glacier Developer Guide\ntry:\njob = archive.initiate_archive_retrieval()\nlogger.info(\"Started %s job with ID %s. \", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on archive %s. \", archive.id)\nraise\nelse:\nreturn job\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault. :param vault: The vault to query. :param job_type: The type of job to list. :return: The list of jobs of the requested type.\n\"\"\" job_list = []\ntry:\nif job_type == \"all\":\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get. \", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s. \", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s. \", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 269\n\nAmazon S3 Glacier Developer Guide\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications.",
      "start_idx": 427899,
      "end_idx": 431397,
      "metadata": {
        "num_sentences": 10,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44998033311631946
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_239",
      "text": "Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events. :param vault: The vault to set up to publish notifications. :param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications. :return: Data about the new notification configuration.\n\"\"\" try:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s. \",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s. \", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\nCall functions on the wrapper class to create a vault and upload a file, then configure the\nvault to publish notifications and initiate a job to retrieve the archive. Archive a file, get notifications, and initiate a job API Version 2012-06-01 270\n\nAmazon S3 Glacier Developer Guide\ndef upload_demo(glacier, vault_name, topic_arn):\n\"\"\"\nShows how to:\n* Create a vault. * Configure the vault to publish notifications to an Amazon SNS topic. * Upload an archive.",
      "start_idx": 427899,
      "end_idx": 431397,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4228054470486111
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_240",
      "text": "* Start a job to retrieve the archive. :param glacier: A Boto3 Amazon S3 Glacier resource. :param vault_name: The name of the vault to create. :param topic_arn: The ARN of an Amazon SNS topic that receives notification\nof\nAmazon S3 Glacier events.\n\"\"\" print(f\"\\nCreating vault {vault_name}.\") vault = glacier.create_vault(vault_name)\nprint(\"\\nList of vaults in your account:\")\nglacier.list_vaults()\nprint(f\"\\nUploading glacier_basics.py to {vault.name}.\") with open(\"glacier_basics.py\", \"rb\") as upload_file:\narchive = glacier.upload_archive(vault, \"glacier_basics.py\", upload_file)\nprint(\n\"\\nStarting an archive retrieval request to get the file back from the \"\n\"vault.\" )\nglacier.initiate_archive_retrieval(archive)\nprint(\"\\nListing in progress jobs:\")\nglacier.list_jobs(vault, \"in_progress\")\nprint(\n\"\\nBecause Amazon S3 Glacier is intended for infrequent retrieval, an \"\n\"archive request with Standard retrieval typically completes within 3\u20135 \"\n\"hours.\"",
      "start_idx": 431398,
      "end_idx": 433640,
      "metadata": {
        "num_sentences": 8,
        "num_words": 116,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3698928015572684
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_241",
      "text": ")\nif topic_arn:\nnotification = glacier.set_notifications(vault, topic_arn)\nprint(\nf\"\\nVault {vault.name} is configured to notify the \"\nf\"{notification.sns_topic} topic when {notification.events} \"\nf\"events occur. You can subscribe to this topic to receive \"\nf\"a message when the archive retrieval completes.\\n\"\n)\nelse:\nprint(\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 271\n\nAmazon S3 Glacier Developer Guide\nf\"\\nVault {vault.name} is not configured to notify an Amazon SNS\ntopic \"\nf\"when the archive retrieval completes so wait a few hours.\" )\nprint(\"\\nRetrieve your job output by running this script with the --retrieve\nflag.\") \u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference. \u2022 CreateVault\n\u2022 InitiateJob\n\u2022 ListJobs\n\u2022 ListVaults\n\u2022 SetVaultNotifications\n\u2022 UploadArchive\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Get Amazon S3 Glacier archive content and delete the archive using an\nAWS SDK\nThe following code example shows how to:\n\u2022 List jobs for an Amazon S3 Glacier vault and get job status. \u2022 Get the output of a completed archive retrieval job.",
      "start_idx": 431398,
      "end_idx": 433640,
      "metadata": {
        "num_sentences": 8,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3300096648080008
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_242",
      "text": "\u2022 Delete an archive. \u2022 Delete a vault. Get archive content and delete the archive API Version 2012-06-01 272\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository. Create a class that wraps S3 Glacier operations. import argparse\nimport logging\nimport os\nimport boto3\nfrom botocore.exceptions import ClientError\nlogger = logging.getLogger(__name__)\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\" def __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\" self.glacier_resource = glacier_resource\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault. :param vault: The vault to query. :param job_type: The type of job to list.",
      "start_idx": 433641,
      "end_idx": 436895,
      "metadata": {
        "num_sentences": 10,
        "num_words": 126,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28899578518337676
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_243",
      "text": ":return: The list of jobs of the requested type.\n\"\"\" job_list = []\ntry:\nif job_type == \"all\":\nGet archive content and delete the archive API Version 2012-06-01 273\n\nAmazon S3 Glacier Developer Guide\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get. \", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s. \", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s. \", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\n@staticmethod\ndef get_job_output(job):\n\"\"\"\nGets the output of a job, such as a vault inventory or the contents of an\narchive. :param job: The job to get output from. :return: The job output, in bytes.\n\"\"\" try:\nresponse = job.get_output()\nout_bytes = response[\"body\"].read()\nlogger.info(\"Read %s bytes from job %s. \", len(out_bytes), job.id)\nif \"archiveDescription\" in response:\nlogger.info(\n\"These bytes are described as '%s'\",\nresponse[\"archiveDescription\"]\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get output for job %s. \", job.id)\nraise\nGet archive content and delete the archive API Version 2012-06-01 274\n\nAmazon S3 Glacier Developer Guide\nelse:\nreturn out_bytes\n@staticmethod\ndef delete_archive(archive):\n\"\"\"\nDeletes an archive from a vault.",
      "start_idx": 433641,
      "end_idx": 436895,
      "metadata": {
        "num_sentences": 10,
        "num_words": 214,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47821731567382814
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_244",
      "text": ":param archive: The archive to delete.\n\"\"\" try:\narchive.delete()\nlogger.info(\n\"Deleted archive %s from vault %s. \", archive.id,\narchive.vault_name\n)\nexcept ClientError:\nlogger.exception(\"Couldn't delete archive %s. \", archive.id)\nraise\n@staticmethod\ndef delete_vault(vault):\n\"\"\"\nDeletes a vault. :param vault: The vault to delete.\n\"\"\" try:\nvault.delete()\nlogger.info(\"Deleted vault %s. \", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't delete vault %s. \", vault.name)\nraise\nCall functions on the wrapper class to get archive content from a completed job, then delete\nthe archive. def retrieve_demo(glacier, vault_name):\n\"\"\"\nGet archive content and delete the archive API Version 2012-06-01 275\n\nAmazon S3 Glacier Developer Guide\nShows how to:\n* List jobs for a vault and get job status. * Get the output of a completed archive retrieval job.",
      "start_idx": 433641,
      "end_idx": 436895,
      "metadata": {
        "num_sentences": 10,
        "num_words": 120,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5653612772623698
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_245",
      "text": "* Delete an archive. * Delete a vault. :param glacier: A Boto3 Amazon S3 Glacier resource. :param vault_name: The name of the vault to query for jobs.\n\"\"\" vault = glacier.glacier_resource.Vault(\"-\", vault_name)\ntry:\nvault.load()\nexcept ClientError as err:\nif err.response[\"Error\"][\"Code\"] == \"ResourceNotFoundException\":\nprint(\nf\"\\nVault {vault_name} doesn't exist. You must first run this\nscript \"\nf\"with the --upload flag to create the vault.\" )\nreturn\nelse:\nraise\nprint(f\"\\nGetting completed jobs for {vault.name}.\") jobs = glacier.list_jobs(vault, \"completed\")\nif not jobs:\nprint(\"\\nNo completed jobs found. Give it some time and try again\nlater.\") return\nretrieval_job = None\nfor job in jobs:\nif job.action == \"ArchiveRetrieval\" and job.status_code == \"Succeeded\":\nretrieval_job = job\nbreak\nif retrieval_job is None:\nprint(\n\"\\nNo ArchiveRetrieval jobs found. Give it some time and try again \"\n\"later.\" )\nreturn\nprint(f\"\\nGetting output from job {retrieval_job.id}.\")",
      "start_idx": 436896,
      "end_idx": 441320,
      "metadata": {
        "num_sentences": 12,
        "num_words": 135,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2637634855328184
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_246",
      "text": "archive_bytes = glacier.get_job_output(retrieval_job)\nGet archive content and delete the archive API Version 2012-06-01 276\n\nAmazon S3 Glacier Developer Guide\narchive_str = archive_bytes.decode(\"utf-8\")\nprint(\"\\nGot archive data. Printing the first 10 lines.\") print(os.linesep.join(archive_str.split(os.linesep)[:10]))\nprint(f\"\\nDeleting the archive from {vault.name}.\") archive = glacier.glacier_resource.Archive(\n\"-\", vault.name, retrieval_job.archive_id\n)\nglacier.delete_archive(archive)\nprint(f\"\\nDeleting {vault.name}.\") glacier.delete_vault(vault)\n\u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference. \u2022 DeleteArchive\n\u2022 DeleteVault\n\u2022 GetJobOutput\n\u2022 ListJobs\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions. Get archive content and delete the archive API Version 2012-06-01 277\n\nAmazon S3 Glacier Developer Guide\nSecurity in Amazon S3 Glacier\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from a data center\nand network architecture that are built to meet the requirements of the most security-sensitive\norganizations. Security is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely.",
      "start_idx": 436896,
      "end_idx": 441320,
      "metadata": {
        "num_sentences": 12,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2844795458244555
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_247",
      "text": "The\neffectiveness of our security is regularly tested and verified by third-party auditors as part of the\nAWS compliance programs. To learn about the compliance programs that apply to Amazon S3\nGlacier (S3 Glacier), see AWS Services in Scope by Compliance Program. \u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your organization\u2019s\nrequirements, and applicable laws and regulations. This documentation will help you understand how to apply the shared responsibility model when\nusing S3 Glacier. The following topics show you how to configure S3 Glacier to meet your security\nand compliance objectives. You'll also learn how to use other AWS services that can help you to\nmonitor and secure your S3 Glacier resources. Topics\n\u2022 Data Protection in Amazon S3 Glacier\n\u2022 Identity and Access Management for Amazon S3 Glacier\n\u2022 Logging and Monitoring in Amazon S3 Glacier\n\u2022 Compliance Validation for Amazon S3 Glacier\n\u2022 Resilience in Amazon S3 Glacier\n\u2022 Infrastructure Security in Amazon S3 Glacier\nData Protection in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides highly durable cloud storage for data archiving and long-\nterm backup. S3 Glacier is designed to deliver 99.999999999 percent durability and provides\nData Protection API Version 2012-06-01 278\n\nAmazon S3 Glacier Developer Guide\ncomprehensive security and compliance capabilities that can help you meet stringent regulatory\nrequirements. S3 Glacier redundantly stores data in multiple AWS Availability Zones (AZ) and on\nmultiple devices within each AZ. To increase durability, S3 Glacier synchronously stores your data\nacross multiple AZs before confirming a successful upload. For more information about the AWS global cloud infrastructure, see Global Infrastructure.",
      "start_idx": 436896,
      "end_idx": 441320,
      "metadata": {
        "num_sentences": 12,
        "num_words": 285,
        "chunk_type": "semantic_split",
        "coherence_score": 0.510114149613814
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_248",
      "text": "For data protection purposes, we recommend that you protect AWS account credentials and give\nindividual users, groups, or roles only the permissions necessary to fulfill their job duties. If you require FIPS 140-2 validated cryptographic modules when accessing AWS through a\ncommand line interface or an API, use a FIPS endpoint. For more information about the available\nFIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2. Topics\n\u2022 Data Encryption\n\u2022 Key Management\n\u2022 Internetwork Traffic Privacy\nData Encryption\nData protection refers to protecting data while in-transit (as it travels to and from Amazon S3\nGlacier) and at rest (while it is stored in AWS data centers). You can protect data in transit that is\nuploaded directly to S3 Glacier using Secure Sockets Layer (SSL) or client-side encryption. You can also access S3 Glacier through Amazon S3. Amazon S3 supports lifecycle configuration on\nan Amazon S3 bucket, which enables you to transition objects to the S3 Glacier storage class for\narchival. Data in transit between Amazon S3 and S3 Glacier via lifecycle policies is encrypted using\nSSL.",
      "start_idx": 441321,
      "end_idx": 443672,
      "metadata": {
        "num_sentences": 8,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3847863333565848
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_249",
      "text": "Data at rest stored in S3 Glacier is automatically server-side encrypted using 256-bit Advanced\nEncryption Standard (AES-256) with keys maintained by AWS. If you prefer to manage your\nown keys, you can also use client-side encryption before storing data in S3 Glacier. For more\ninformation about how to setup default encryption for Amazon S3, see Amazon S3 Default\nEncryption in the Amazon Simple Storage Service User Guide. Data Encryption API Version 2012-06-01 279\n\nAmazon S3 Glacier Developer Guide\nKey Management\nServer-side encryption addresses data encryption at rest\u2014that is, Amazon S3 Glacier encrypts your\ndata as it writes it to its data centers and decrypts it for you when you access it. As long as you\nauthenticate your request and you have access permissions, there is no difference in the way you\naccess encrypted or unencrypted data. Data at rest stored in S3 Glacier is automatically server-side encrypted using AES-256, using keys\nmaintained by AWS. As an additional safeguard, AWS encrypts the key itself with a root key that we\nregularly rotate. Internetwork Traffic Privacy\nAccess to Amazon S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2.",
      "start_idx": 441321,
      "end_idx": 443672,
      "metadata": {
        "num_sentences": 9,
        "num_words": 195,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49302323659261066
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_250",
      "text": "We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS), such as Ephemeral Diffie-Hellman (DHE) or\nElliptic Curve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later\nsupport these modes. Additionally, you must sign requests using an access key ID and a secret\naccess key that are associated with an IAM principal, or you can use the AWS Security Token Service\n(AWS STS) to generate temporary security credentials to sign requests. VPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon Simple Storage Service\n(Amazon S3) VPC endpoints if you access S3 Glacier as a storage tier integrated with Amazon S3. For more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide. Identity and Access Management for Amazon S3 Glacier\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nKey Management API Version 2012-06-01 280\n\nAmazon S3 Glacier Developer Guide\nand authorized (have permissions) to use S3 Glacier resources.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 261,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28115666707356773
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_251",
      "text": "IAM is an AWS service that you can\nuse with no additional charge. Topics\n\u2022 Audience\n\u2022 Authenticating with identities\n\u2022 Managing access using policies\n\u2022 How Amazon S3 Glacier works with IAM\n\u2022 Identity-based policy examples for Amazon S3 Glacier\n\u2022 Resource-based policy examples for Amazon S3 Glacier\n\u2022 Troubleshooting Amazon S3 Glacier identity and access\n\u2022 API Permissions Reference\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you\ndo in S3 Glacier. Service user \u2013 If you use the S3 Glacier service to do your job, then your administrator provides you\nwith the credentials and permissions that you need. As you use more S3 Glacier features to do your\nwork, you might need additional permissions. Understanding how access is managed can help you\nrequest the right permissions from your administrator. If you cannot access a feature in S3 Glacier,\nsee Troubleshooting Amazon S3 Glacier identity and access. Service administrator \u2013 If you're in charge of S3 Glacier resources at your company, you probably\nhave full access to S3 Glacier. It's your job to determine which S3 Glacier features and resources\nyour service users should access. You must then submit requests to your IAM administrator to\nchange the permissions of your service users. Review the information on this page to understand\nthe basic concepts of IAM.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 225,
        "chunk_type": "semantic_split",
        "coherence_score": 0.46407508850097656
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_252",
      "text": "To learn more about how your company can use IAM with S3 Glacier, see\nHow Amazon S3 Glacier works with IAM. IAM administrator \u2013 If you're an IAM administrator, you might want to learn details about how\nyou can write policies to manage access to S3 Glacier. To view example S3 Glacier identity-based\npolicies that you can use in IAM, see Identity-based policy examples for Amazon S3 Glacier. Audience API Version 2012-06-01 281\n\nAmazon S3 Glacier Developer Guide\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated (signed in to AWS) as the AWS account root user, as an IAM user, or by assuming an\nIAM role. You can sign in to AWS as a federated identity by using credentials provided through an identity\nsource. AWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on\nauthentication, and your Google or Facebook credentials are examples of federated identities. When you sign in as a federated identity, your administrator previously set up identity federation\nusing IAM roles. When you access AWS by using federation, you are indirectly assuming a role. Depending on the type of user you are, you can sign in to the AWS Management Console or the\nAWS access portal.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49974598354763455
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_253",
      "text": "For more information about signing in to AWS, see How to sign in to your AWS\naccount in the AWS Sign-In User Guide. If you access AWS programmatically, AWS provides a software development kit (SDK) and a\ncommand line interface (CLI) to cryptographically sign your requests by using your credentials. If\nyou don't use AWS tools, you must sign requests yourself. For more information about using the\nrecommended method to sign requests yourself, see AWS Signature Version 4 for API requests in\nthe IAM User Guide. Regardless of the authentication method that you use, you might be required to provide additional\nsecurity information. For example, AWS recommends that you use multi-factor authentication\n(MFA) to increase the security of your account. To learn more, see Multi-factor authentication in\nthe AWS IAM Identity Center User Guide and AWS Multi-factor authentication in IAM in the IAM User\nGuide. AWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to\nall AWS services and resources in the account. This identity is called the AWS account root user and\nis accessed by signing in with the email address and password that you used to create the account. We strongly recommend that you don't use the root user for your everyday tasks.",
      "start_idx": 443673,
      "end_idx": 449316,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4673772599962023
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_254",
      "text": "Safeguard your\nroot user credentials and use them to perform the tasks that only the root user can perform. For\nthe complete list of tasks that require you to sign in as the root user, see Tasks that require root\nuser credentials in the IAM User Guide. Authenticating with identities API Version 2012-06-01 282\n\nAmazon S3 Glacier Developer Guide\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use\nfederation with an identity provider to access AWS services by using temporary credentials. A federated identity is a user from your enterprise user directory, a web identity provider, the AWS\nDirectory Service, the Identity Center directory, or any user that accesses AWS services by using\ncredentials provided through an identity source. When federated identities access AWS accounts,\nthey assume roles, and the roles provide temporary credentials. For centralized access management, we recommend that you use AWS IAM Identity Center. You can\ncreate users and groups in IAM Identity Center, or you can connect and synchronize to a set of users\nand groups in your own identity source for use across all your AWS accounts and applications. For\ninformation about IAM Identity Center, see What is IAM Identity Center?",
      "start_idx": 449317,
      "end_idx": 451368,
      "metadata": {
        "num_sentences": 8,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4493286269051688
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_255",
      "text": "in the AWS IAM Identity\nCenter User Guide. IAM users and groups\nAn IAM user is an identity within your AWS account that has specific permissions for a single person\nor application. Where possible, we recommend relying on temporary credentials instead of creating\nIAM users who have long-term credentials such as passwords and access keys. However, if you have\nspecific use cases that require long-term credentials with IAM users, we recommend that you rotate\naccess keys. For more information, see Rotate access keys regularly for use cases that require long-\nterm credentials in the IAM User Guide. An IAM group is an identity that specifies a collection of IAM users. You can't sign in as a group. You\ncan use groups to specify permissions for multiple users at a time.",
      "start_idx": 449317,
      "end_idx": 451368,
      "metadata": {
        "num_sentences": 8,
        "num_words": 130,
        "chunk_type": "semantic_split",
        "coherence_score": 0.46283033915928434
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_256",
      "text": "Groups make permissions easier\nto manage for large sets of users. For example, you could have a group named IAMAdmins and give\nthat group permissions to administer IAM resources. Users are different from roles. A user is uniquely associated with one person or application, but\na role is intended to be assumable by anyone who needs it. Users have permanent long-term\ncredentials, but roles provide temporary credentials. To learn more, see Use cases for IAM users in\nthe IAM User Guide. IAM roles\nAn IAM role is an identity within your AWS account that has specific permissions. It is similar to an\nIAM user, but is not associated with a specific person. To temporarily assume an IAM role in the\nAWS Management Console, you can switch from a user to an IAM role (console). You can assume a\nAuthenticating with identities API Version 2012-06-01 283\n\nAmazon S3 Glacier Developer Guide\nrole by calling an AWS CLI or AWS API operation or by using a custom URL.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4016880035400391
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_257",
      "text": "For more information\nabout methods for using roles, see Methods to assume a role in the IAM User Guide. IAM roles with temporary credentials are useful in the following situations:\n\u2022 Federated user access \u2013 To assign permissions to a federated identity, you create a role\nand define permissions for the role. When a federated identity authenticates, the identity\nis associated with the role and is granted the permissions that are defined by the role. For\ninformation about roles for federation, see Creating a role for a third-party Identity Provider\nin the IAM User Guide. If you use IAM Identity Center, you configure a permission set. To control\nwhat your identities can access after they authenticate, IAM Identity Center correlates the\npermission set to a role in IAM. For information about permissions sets, see Permission sets in\nthe AWS IAM Identity Center User Guide. \u2022 Temporary IAM user permissions \u2013 An IAM user or role can assume an IAM role to temporarily\ntake on different permissions for a specific task. \u2022 Cross-account access \u2013 You can use an IAM role to allow someone (a trusted principal) in a\ndifferent account to access resources in your account. Roles are the primary way to grant cross-\naccount access.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 206,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5406920539008246
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_258",
      "text": "However, with some AWS services, you can attach a policy directly to a resource\n(instead of using a role as a proxy). To learn the difference between roles and resource-based\npolicies for cross-account access, see Cross account resource access in IAM in the IAM User Guide. \u2022 Cross-service access \u2013 Some AWS services use features in other AWS services. For example, when\nyou make a call in a service, it's common for that service to run applications in Amazon EC2 or\nstore objects in Amazon S3. A service might do this using the calling principal's permissions,\nusing a service role, or using a service-linked role. \u2022 Forward access sessions (FAS) \u2013 When you use an IAM user or role to perform actions in\nAWS, you are considered a principal. When you use some services, you might perform an\naction that then initiates another action in a different service. FAS uses the permissions of the\nprincipal calling an AWS service, combined with the requesting AWS service to make requests\nto downstream services. FAS requests are only made when a service receives a request that\nrequires interactions with other AWS services or resources to complete. In this case, you must\nhave permissions to perform both actions.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.387647459242079
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_259",
      "text": "For policy details when making FAS requests, see\nForward access sessions. \u2022 Service role \u2013 A service role is an IAM role that a service assumes to perform actions on your\nbehalf. An IAM administrator can create, modify, and delete a service role from within IAM. For\nmore information, see Creating a role to delegate permissions to an AWS service in the IAM\nUser Guide. Authenticating with identities API Version 2012-06-01 284\n\nAmazon S3 Glacier Developer Guide\n\u2022 Service-linked role \u2013 A service-linked role is a type of service role that is linked to an AWS\nservice. The service can assume the role to perform an action on your behalf. Service-linked\nroles appear in your AWS account and are owned by the service. An IAM administrator can\nview, but not edit the permissions for service-linked roles. \u2022 Applications running on Amazon EC2 \u2013 You can use an IAM role to manage temporary\ncredentials for applications that are running on an EC2 instance and making AWS CLI or AWS API\nrequests. This is preferable to storing access keys within the EC2 instance.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 181,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4489407009548611
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_260",
      "text": "To assign an AWS role\nto an EC2 instance and make it available to all of its applications, you create an instance profile\nthat is attached to the instance. An instance profile contains the role and enables programs that\nare running on the EC2 instance to get temporary credentials. For more information, see Using\nan IAM role to grant permissions to applications running on Amazon EC2 instances in the IAM\nUser Guide. Managing access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources. A policy is an object in AWS that, when associated with an identity or resource, defines their\npermissions. AWS evaluates these policies when a principal (user, root user, or role session) makes\na request. Permissions in the policies determine whether the request is allowed or denied. Most\npolicies are stored in AWS as JSON documents. For more information about the structure and\ncontents of JSON policy documents, see Overview of JSON policies in the IAM User Guide. Administrators can use AWS JSON policies to specify who has access to what.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 182,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5050034417046441
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_261",
      "text": "That is, which\nprincipal can perform actions on what resources, and under what conditions. By default, users and roles have no permissions. To grant users permission to perform actions on\nthe resources that they need, an IAM administrator can create IAM policies. The administrator can\nthen add the IAM policies to roles, and users can assume the roles. IAM policies define permissions for an action regardless of the method that you use to perform the\noperation. For example, suppose that you have a policy that allows the iam:GetRole action. A\nuser with that policy can get role information from the AWS Management Console, the AWS CLI, or\nthe AWS API. Identity-based policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role. These policies control what actions users and roles can\nManaging access using policies API Version 2012-06-01 285\n\nAmazon S3 Glacier Developer Guide\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 188,
        "chunk_type": "semantic_split",
        "coherence_score": 0.47896673414442276
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_262",
      "text": "Identity-based policies can be further categorized as inline policies or managed policies. Inline\npolicies are embedded directly into a single user, group, or role. Managed policies are standalone\npolicies that you can attach to multiple users, groups, and roles in your AWS account. Managed\npolicies include AWS managed policies and customer managed policies. To learn how to choose\nbetween a managed policy or an inline policy, see Choose between managed policies and inline\npolicies in the IAM User Guide. Resource-based policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions. You must specify a principal\nin a resource-based policy.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 159,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5128263685438368
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_263",
      "text": "Principals can include accounts, users, roles, federated users, or AWS\nservices. Resource-based policies are inline policies that are located in that service. You can't use AWS\nmanaged policies from IAM in a resource-based policy. Access control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format. Amazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. To learn more\nabout ACLs, see Access control list (ACL) overview in the Amazon Simple Storage Service Developer\nGuide. Other policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum\npermissions granted to you by the more common policy types. \u2022 Permissions boundaries \u2013 A permissions boundary is an advanced feature in which you set\nthe maximum permissions that an identity-based policy can grant to an IAM entity (IAM user\nor role).",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4452062818739149
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_264",
      "text": "You can set a permissions boundary for an entity. The resulting permissions are the\nManaging access using policies API Version 2012-06-01 286\n\nAmazon S3 Glacier Developer Guide\nintersection of an entity's identity-based policies and its permissions boundaries. Resource-based\npolicies that specify the user or role in the Principal field are not limited by the permissions\nboundary. An explicit deny in any of these policies overrides the allow. For more information\nabout permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide. \u2022 Service control policies (SCPs) \u2013 SCPs are JSON policies that specify the maximum permissions\nfor an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a\nservice for grouping and centrally managing multiple AWS accounts that your business owns. If\nyou enable all features in an organization, then you can apply service control policies (SCPs) to\nany or all of your accounts. The SCP limits permissions for entities in member accounts, including\neach AWS account root user. For more information about Organizations and SCPs, see Service\ncontrol policies in the AWS Organizations User Guide.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 181,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40606892903645836
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_265",
      "text": "\u2022 Session policies \u2013 Session policies are advanced policies that you pass as a parameter when you\nprogrammatically create a temporary session for a role or federated user. The resulting session's\npermissions are the intersection of the user or role's identity-based policies and the session\npolicies. Permissions can also come from a resource-based policy. An explicit deny in any of these\npolicies overrides the allow. For more information, see Session policies in the IAM User Guide. Multiple policy types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated\nto understand. To learn how AWS determines whether to allow a request when multiple policy\ntypes are involved, see Policy evaluation logic in the IAM User Guide. How Amazon S3 Glacier works with IAM\nBefore you use IAM to manage access to S3 Glacier, learn what IAM features are available to use\nwith S3 Glacier. IAM features you can use with Amazon S3 Glacier\nIAM feature S3 Glacier support\nIdentity-based policies Yes\nResource-based policies Yes\nPolicy actions Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 287\n\nAmazon S3 Glacier Developer Guide\nIAM feature S3 Glacier support\nPolicy resources Yes\nPolicy condition keys (service-specific) Yes\nACLs No\nABAC (tags in policies) No\nTemporary credentials Yes\nPrincipal permissions No\nService roles No\nService-linked roles No\nTo get a high-level view of how S3 Glacier and other AWS services work with most IAM features,\nsee AWS services that work with IAM in the IAM User Guide. Identity-based policies for S3 Glacier\nSupports identity-based policies: Yes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 283,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4091651916503906
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_266",
      "text": "These policies control what actions users and roles can\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide. With IAM identity-based policies, you can specify allowed or denied actions and resources as well\nas the conditions under which actions are allowed or denied. You can't specify the principal in an\nidentity-based policy because it applies to the user or role to which it is attached. To learn about all\nof the elements that you can use in a JSON policy, see IAM JSON policy elements reference in the\nIAM User Guide. Identity-based policy examples for S3 Glacier\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier. How Amazon S3 Glacier works with IAM API Version 2012-06-01 288\n\nAmazon S3 Glacier Developer Guide\nResource-based policies within S3 Glacier\nSupports resource-based policies: Yes\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4945045895046658
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_267",
      "text": "You must specify a principal\nin a resource-based policy. Principals can include accounts, users, roles, federated users, or AWS\nservices. To enable cross-account access, you can specify an entire account or IAM entities in another\naccount as the principal in a resource-based policy. Adding a cross-account principal to a resource-\nbased policy is only half of establishing the trust relationship. When the principal and the resource\nare in different AWS accounts, an IAM administrator in the trusted account must also grant\nthe principal entity (user or role) permission to access the resource. They grant permission by\nattaching an identity-based policy to the entity. However, if a resource-based policy grants access\nto a principal in the same account, no additional identity-based policy is required. For more\ninformation, see Cross account resource access in IAM in the IAM User Guide. The S3 Glacier service supports only one type of resource-based policy called a vault policy, which\nis attached to a vault. This policy defines which principals can perform actions on the vault.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4657352023654514
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_268",
      "text": "S3 Glacier vault policies manage permissions in the following ways:\n\u2022 Manage user permissions in an account using a single vault policy, instead of more than one\nindividual user policies. \u2022 Manage cross-account permissions as an alternative to using IAM roles. Resource-based policy examples within S3 Glacier\nTo view examples of S3 Glacier resource-based policies, see Resource-based policy examples for\nAmazon S3 Glacier. Policy actions for S3 Glacier\nSupports policy actions: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 289\n\nAmazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions. The Action element of a JSON policy describes the actions that you can use to allow or deny\naccess in a policy. Policy actions usually have the same name as the associated AWS API operation. There are some exceptions, such as permission-only actions that don't have a matching API\noperation. There are also some operations that require multiple actions in a policy. These\nadditional actions are called dependent actions. Include actions in a policy to grant permissions to perform the associated operation. To see a list of S3 Glacier actions, see Actions defined by Amazon S3 Glacier in the Service\nAuthorization Reference. Policy actions in S3 Glacier use the following prefix before the action:\nglacier\nTo specify multiple actions in a single statement, separate them with commas. \"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all actions that begin\nwith the word Describe, include the following action:\n\"Action\": \"glacier:GetVault*\"\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier. Policy resources for S3 Glacier\nSupports policy resources: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 290\n\nAmazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.",
      "start_idx": 451369,
      "end_idx": 467929,
      "metadata": {
        "num_sentences": 17,
        "num_words": 342,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41988686954273896
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_269",
      "text": "The Resource JSON policy element specifies the object or objects to which the action applies. Statements must include either a Resource or a NotResource element. As a best practice,\nspecify a resource using its Amazon Resource Name (ARN). You can do this for actions that support\na specific resource type, known as resource-level permissions. For actions that don't support resource-level permissions, such as listing operations, use a wildcard\n(*) to indicate that the statement applies to all resources. \"Resource\": \"*\"\nTo see a list of S3 Glacier resource types and their ARNs, see Resources defined by Amazon S3\nGlacier in the Service Authorization Reference. To learn which actions you can specify the ARN of\neach resource, see Actions defined by Amazon S3 Glacier. In S3 Glacier, the primary resource is a vault. S3 Glacier supports policies only at the vault level. That is, in an IAM policy, the Resource value that you specify can be a specific vault or a set of\nvaults in a specific AWS Region.",
      "start_idx": 467930,
      "end_idx": 470255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.378079096476237
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_270",
      "text": "S3 Glacier doesn't support archive-level permissions. For all S3 Glacier actions, Resource specifies the vault on which you want to grant the\npermissions. These resources have unique Amazon Resource Names (ARNs) associated with them\nas shown in the following table, and you can use a wildcard character (*) in the ARN to match vault\nnames that start with the same prefix. S3 Glacier provides a set of operations to work with the S3 Glacier resources. For information on\nthe available operations, see API Reference for Amazon S3 Glacier. Some S3 Glacier API actions support multiple resources. For example, glacier:AddTagsToVault\naccesses examplevault1 and examplevault2, so a principal must have permissions to access both\nresources. To specify multiple resources in a single statement, separate the ARNs with commas. \"Resource\": [\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault1\",\",\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault2\",\"\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 291\n\nAmazon S3 Glacier Developer Guide\n]\nPolicy condition keys for S3 Glacier\nSupports service-specific policy condition keys: Yes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.",
      "start_idx": 467930,
      "end_idx": 470255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42617501152886283
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_271",
      "text": "The Condition element (or Condition block) lets you specify conditions in which a statement\nis in effect. The Condition element is optional. You can create conditional expressions that use\ncondition operators, such as equals or less than, to match the condition in the policy with values in\nthe request. If you specify multiple Condition elements in a statement, or multiple keys in a single\nCondition element, AWS evaluates them using a logical AND operation. If you specify multiple\nvalues for a single condition key, AWS evaluates the condition using a logical OR operation. All of\nthe conditions must be met before the statement's permissions are granted. You can also use placeholder variables when you specify conditions. For example, you can grant\nan IAM user permission to access a resource only if it is tagged with their IAM user name. For more\ninformation, see IAM policy elements: variables and tags in the IAM User Guide. AWS supports global condition keys and service-specific condition keys. To see all AWS global\ncondition keys, see AWS global condition context keys in the IAM User Guide. To see a list of S3 Glacier condition keys, see Condition keys for Amazon S3 Glacier in the Service\nAuthorization Reference. To learn with which actions and resources you can use a condition key, see\nActions defined by Amazon S3 Glacier.",
      "start_idx": 470256,
      "end_idx": 473174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36245067302997297
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_272",
      "text": "For examples of using the glacier\u2013specific condition keys, see Vault Lock Policies. ACLs in S3 Glacier\nSupports ACLs: No\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format. How Amazon S3 Glacier works with IAM API Version 2012-06-01 292\n\nAmazon S3 Glacier Developer Guide\nABAC with S3 Glacier\nSupports ABAC (tags in policies): No\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions based\non attributes. In AWS, these attributes are called tags. You can attach tags to IAM entities (users or\nroles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then\nyou design ABAC policies to allow operations when the principal's tag matches the tag on the\nresource that they are trying to access. ABAC is helpful in environments that are growing rapidly and helps with situations where policy\nmanagement becomes cumbersome. To control access based on tags, you provide tag information in the condition element of a policy\nusing the aws:ResourceTag/key-name, aws:RequestTag/key-name, or aws:TagKeys\ncondition keys. If a service supports all three condition keys for every resource type, then the value is Yes for the\nservice. If a service supports all three condition keys for only some resource types, then the value is\nPartial. For more information about ABAC, see Define permissions with ABAC authorization in the IAM User\nGuide.",
      "start_idx": 470256,
      "end_idx": 473174,
      "metadata": {
        "num_sentences": 13,
        "num_words": 246,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3285477467072316
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_273",
      "text": "To view a tutorial with steps for setting up ABAC, see Use attribute-based access control\n(ABAC) in the IAM User Guide. Using temporary credentials with S3 Glacier\nSupports temporary credentials: Yes\nSome AWS services don't work when you sign in using temporary credentials. For additional\ninformation, including which AWS services work with temporary credentials, see AWS services that\nwork with IAM in the IAM User Guide. You are using temporary credentials if you sign in to the AWS Management Console using\nany method except a user name and password. For example, when you access AWS using your\ncompany's single sign-on (SSO) link, that process automatically creates temporary credentials. You\nalso automatically create temporary credentials when you sign in to the console as a user and then\nswitch roles. For more information about switching roles, see Switch from a user to an IAM role\n(console) in the IAM User Guide. How Amazon S3 Glacier works with IAM API Version 2012-06-01 293\n\nAmazon S3 Glacier Developer Guide\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can then use\nthose temporary credentials to access AWS. AWS recommends that you dynamically generate\ntemporary credentials instead of using long-term access keys.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5062185499403212
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_274",
      "text": "For more information, see\nTemporary security credentials in IAM. Cross-service principal permissions for S3 Glacier\nSupports forward access sessions (FAS): No\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal. When you use some services, you might perform an action that then initiates another action in a\ndifferent service. FAS uses the permissions of the principal calling an AWS service, combined with\nthe requesting AWS service to make requests to downstream services. FAS requests are only made\nwhen a service receives a request that requires interactions with other AWS services or resources to\ncomplete. In this case, you must have permissions to perform both actions. For policy details when\nmaking FAS requests, see Forward access sessions. Service roles for S3 Glacier\nSupports service roles: No\nA service role is an IAM role that a service assumes to perform actions on your behalf. An IAM\nadministrator can create, modify, and delete a service role from within IAM. For more information,\nsee Creating a role to delegate permissions to an AWS service in the IAM User Guide.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37512711418999567
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_275",
      "text": "Warning\nChanging the permissions for a service role might break S3 Glacier functionality. Edit\nservice roles only when S3 Glacier provides guidance to do so. Service-linked roles for S3 Glacier\nSupports service-linked roles: No\nA service-linked role is a type of service role that is linked to an AWS service. The service can\nassume the role to perform an action on your behalf. Service-linked roles appear in your AWS\naccount and are owned by the service. An IAM administrator can view, but not edit the permissions\nfor service-linked roles. How Amazon S3 Glacier works with IAM API Version 2012-06-01 294\n\nAmazon S3 Glacier Developer Guide\nFor details about creating or managing service-linked roles, see AWS services that work with IAM. Find a service in the table that includes a Yes in the Service-linked role column. Choose the Yes\nlink to view the service-linked role documentation for that service. Identity-based policy examples for Amazon S3 Glacier\nBy default, users and roles don't have permission to create or modify S3 Glacier resources.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5127794477674696
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_276",
      "text": "They\nalso can't perform tasks by using the AWS Management Console, AWS Command Line Interface\n(AWS CLI), or AWS API. To grant users permission to perform actions on the resources that they\nneed, an IAM administrator can create IAM policies. The administrator can then add the IAM\npolicies to roles, and users can assume the roles. To learn how to create an IAM identity-based policy by using these example JSON policy\ndocuments, see Create IAM policies (console) in the IAM User Guide. For details about actions and resource types defined by S3 Glacier, including the format of the\nARNs for each of the resource types, see Actions, resources, and condition keys for Amazon S3\nGlacier in the Service Authorization Reference. The following is an example policy that grants permissions for three S3 Glacier vault-related\nactions (glacier:CreateVault, glacier:DescribeVault and glacier:ListVaults) on\na resource, using the Amazon Resource Name (ARN) that identifies all of the vaults in the us-\nwest-2 AWS Region. ARNs uniquely identify AWS resources. For more information about ARNs\nused with S3 Glacier, see Policy resources for S3 Glacier. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n],\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\"\n}\n]\n}\nIdentity-based policy examples API Version 2012-06-01 295\n\nAmazon S3 Glacier Developer Guide\nThe policy grants permissions to create, list, and obtain descriptions of vaults in the us-west-2\nRegion. The wildcard character (*) at the end of the ARN means that this statement can match any\nvault name.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 246,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4059257083468967
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_277",
      "text": "Important\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) because you don't know the vault name\nuntil after you create the vault. Topics\n\u2022 Policy best practices\n\u2022 Using the S3 Glacier console\n\u2022 Allow users to view their own permissions\n\u2022 Customer Managed Policy Examples\nPolicy best practices\nIdentity-based policies determine whether someone can create, access, or delete S3 Glacier\nresources in your account. These actions can incur costs for your AWS account. When you create or\nedit identity-based policies, follow these guidelines and recommendations:\n\u2022 Get started with AWS managed policies and move toward least-privilege permissions \u2013 To\nget started granting permissions to your users and workloads, use the AWS managed policies\nthat grant permissions for many common use cases. They are available in your AWS account. We\nrecommend that you reduce permissions further by defining AWS customer managed policies\nthat are specific to your use cases. For more information, see AWS managed policies or AWS\nmanaged policies for job functions in the IAM User Guide. \u2022 Apply least-privilege permissions \u2013 When you set permissions with IAM policies, grant only the\npermissions required to perform a task. You do this by defining the actions that can be taken on\nspecific resources under specific conditions, also known as least-privilege permissions. For more\ninformation about using IAM to apply permissions, see Policies and permissions in IAM in the\nIAM User Guide.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 242,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4171532524956597
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_278",
      "text": "\u2022 Use conditions in IAM policies to further restrict access \u2013 You can add a condition to your\npolicies to limit access to actions and resources. For example, you can write a policy condition to\nIdentity-based policy examples API Version 2012-06-01 296\n\nAmazon S3 Glacier Developer Guide\nspecify that all requests must be sent using SSL. You can also use conditions to grant access to\nservice actions if they are used through a specific AWS service, such as AWS CloudFormation. For\nmore information, see IAM JSON policy elements: Condition in the IAM User Guide. \u2022 Use IAM Access Analyzer to validate your IAM policies to ensure secure and functional\npermissions \u2013 IAM Access Analyzer validates new and existing policies so that the policies\nadhere to the IAM policy language (JSON) and IAM best practices. IAM Access Analyzer provides\nmore than 100 policy checks and actionable recommendations to help you author secure and\nfunctional policies. For more information, see Validate policies with IAM Access Analyzer in the\nIAM User Guide. \u2022 Require multi-factor authentication (MFA) \u2013 If you have a scenario that requires IAM users or\na root user in your AWS account, turn on MFA for additional security. To require MFA when API\noperations are called, add MFA conditions to your policies. For more information, see Secure API\naccess with MFA in the IAM User Guide.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 226,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5040521409776476
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_279",
      "text": "For more information about best practices in IAM, see Security best practices in IAM in the IAM User\nGuide. Using the S3 Glacier console\nTo access the Amazon S3 Glacier console, you must have a minimum set of permissions. These\npermissions must allow you to list and view details about the S3 Glacier resources in your AWS\naccount. If you create an identity-based policy that is more restrictive than the minimum required\npermissions, the console won't function as intended for entities (users or roles) with that policy. You don't need to allow minimum console permissions for users that are making calls only to the\nAWS CLI or the AWS API. Instead, allow access to only the actions that match the API operation\nthat they're trying to perform. The S3 Glacier console provides an integrated environment for you to create and manage S3\nGlacier vaults. At a minimum IAM identities that you create must be granted permissions for the\nglacier:ListVaults action to view the S3 Glacier console as shown in the following example. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Action\": [\nIdentity-based policy examples API Version 2012-06-01 297\n\nAmazon S3 Glacier Developer Guide\n\"glacier:ListVaults\"\n],\n\"Effect\": \"Allow\",\n\"Resource\": \"*\"\n}\n]\n}\nAWS addresses many common use cases by providing standalone IAM policies that are created\nand administered by AWS. Managed policies grant necessary permissions for common use cases so\nyou can avoid having to investigate what permissions are needed.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 239,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39457715352376305
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_280",
      "text": "For more information, see AWS\nManaged Policies in the IAM User Guide. The following AWS managed policies, which you can attach to users in your account, are specific to\nS3 Glacier:\n\u2022 AmazonGlacierReadOnlyAccess \u2013 Grants read only access to S3 Glacier through the AWS\nManagement Console. \u2022 AmazonGlacierFullAccess \u2013 Grants full access to S3 Glacier through the AWS Management\nConsole. You can also create your own custom IAM policies to allow permissions for S3 Glacier API actions\nand resources. You can attach these custom policies to the custom IAM roles that you create for\nyour S3 Glacier vaults. Both of the S3 Glacier AWS Managed policies discussed in the next section grant permissions for\nglacier:ListVaults. For more information, see Adding permissions to a user in the IAM User Guide. Allow users to view their own permissions\nThis example shows how you might create a policy that allows IAM users to view the inline and\nmanaged policies that are attached to their user identity. This policy includes permissions to\ncomplete this action on the console or programmatically using the AWS CLI or AWS API. {\nIdentity-based policy examples API Version 2012-06-01 298\n\nAmazon S3 Glacier Developer Guide\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ViewOwnUserInfo\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetUserPolicy\",\n\"iam:ListGroupsForUser\",\n\"iam:ListAttachedUserPolicies\",\n\"iam:ListUserPolicies\",\n\"iam:GetUser\"\n],\n\"Resource\": [\"arn:aws:iam::*:user/${aws:username}\"]\n},\n{\n\"Sid\": \"NavigateInConsole\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetGroupPolicy\",\n\"iam:GetPolicyVersion\",\n\"iam:GetPolicy\",\n\"iam:ListAttachedGroupPolicies\",\n\"iam:ListGroupPolicies\",\n\"iam:ListPolicyVersions\",\n\"iam:ListPolicies\",\n\"iam:ListUsers\"\n],\n\"Resource\": \"*\"\n}\n]\n}\nCustomer Managed Policy Examples\nIn this section, you can find example user policies that grant permissions for various S3 Glacier\nactions.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 258,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5843570709228516
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_281",
      "text": "These policies work when you are using S3 Glacier REST API, the Amazon SDKs, the AWS\nCLI, or, if applicable, the S3 Glacier management console. Note\nAll examples use the US West (Oregon) Region (us-west-2) and contain fictitious account\nIDs. Identity-based policy examples API Version 2012-06-01 299\n\nAmazon S3 Glacier Developer Guide\nExamples\n\u2022 Example 1: Allow a User to Download Archives from a Vault\n\u2022 Example 2: Allow a User to Create a Vault and Configure Notifications\n\u2022 Example 3: Allow a User to Upload Archives to a Specific Vault\n\u2022 Example 4: Allow a User Full Permissions on a Specific Vault\nExample 1: Allow a User to Download Archives from a Vault\nTo download an archive, you first initiate a job to retrieve the archive. After the retrieval job\nis complete, you can download the data. The following example policy grants permissions\nfor the glacier:InitiateJob action to initiate a job (which allows the user to retrieve an\narchive or a vault inventory from the vault), and permissions for the glacier:GetJobOutput\naction to download the retrieved data. The policy also grants permissions to perform the\nglacier:DescribeJob action so that the user can get the job status. For more information, see\nInitiate Job (POST jobs). The policy grants these permissions on a vault named examplevault. You can get the vault ARN\nfrom the Amazon S3 Glacier console, or programmatically by calling either the Describe Vault (GET\nvault) or the List Vaults (GET vaults) API actions. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:InitiateJob\",\n\"glacier:GetJobOutput\",\n\"glacier:DescribeJob\"]\n}\n]\n}\nExample 2: Allow a User to Create a Vault and Configure Notifications\nThe following example policy grants permissions to create a vault in the us-west-2 Region as\nspecified in the Resource element and configure notifications.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 296,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36016345553927953
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_282",
      "text": "For more information about\nIdentity-based policy examples API Version 2012-06-01 300\n\nAmazon S3 Glacier Developer Guide\nworking with notifications, see Configuring Vault Notifications in Amazon S3 Glacier. The policy\nalso grants permissions to list vaults in the AWS Region and get a specific vault description. Important\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) in the Resource value because you\ndon't know the vault name until after you create the vault. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\",\n\"Action\":[\"glacier:CreateVault\",\n\"glacier:SetVaultNotifications\",\n\"glacier:GetVaultNotifications\",\n\"glacier:DeleteVaultNotifications\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"]\n}\n]\n}\nExample 3: Allow a User to Upload Archives to a Specific Vault\nThe following example policy grants permissions to upload archives to a specific vault in the\nus-west-2 Region. These permissions allow a user to upload an archive all at once using the\nUpload Archive (POST archive) API operation or in parts using the Initiate Multipart Upload (POST\nmultipart-uploads) API operation. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\nIdentity-based policy examples API Version 2012-06-01 301\n\nAmazon S3 Glacier Developer Guide\n\"Action\":[\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:UploadMultipartPart\",\n\"glacier:ListParts\",\n\"glacier:ListMultipartUploads\",\n\"glacier:CompleteMultipartUpload\"]\n}\n]\n}\nExample 4: Allow a User Full Permissions on a Specific Vault\nThe following example policy grants permissions for all S3 Glacier actions on a vault named\nexamplevault. {\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:*\"]\n}\n]\n}\nResource-based policy examples for Amazon S3 Glacier\nA S3 Glacier vault can have one vault access policy and one Vault Lock policy associated with it. A Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault. A Vault Lock policy is vault access policy that can be locked. After you\nlock a Vault Lock policy, the policy can't be changed.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 303,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5506034003363716
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_283",
      "text": "You can use a Vault Lock Policy to enforce\ncompliance controls. Topics\n\u2022 Vault Access Policies\n\u2022 Vault Lock Policies\nResource-based policy examples API Version 2012-06-01 302\n\nAmazon S3 Glacier Developer Guide\nVault Access Policies\nAn Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault. You can create one vault access policy for each vault to manage permissions. You can modify\npermissions in a vault access policy at any time. S3 Glacier also supports a Vault Lock policy on\neach vault that, after you lock it, cannot be altered. For more information about working with Vault\nLock policies, see Vault Lock Policies. Examples\n\u2022 Example 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\n\u2022 Example 2: Grant Cross-Account Permissions for MFA Delete Operations\nExample 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\nThe following example policy grants cross-account permissions to two AWS accounts for a set of S3\nGlacier operations on a vault named examplevault. Note\nThe account that owns the vault is billed for all costs associated with the vault. All requests,\ndata transfer, and retrieval costs made by allowed external accounts are billed to the\naccount that owns the vault. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\":\"cross-account-upload\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\",\n\"arn:aws:iam::444455556666:root\"\n]\n},\n\"Effect\":\"Allow\",\n\"Action\": [\nResource-based policy examples API Version 2012-06-01 303\n\nAmazon S3 Glacier Developer Guide\n\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:AbortMultipartUpload\",\n\"glacier:CompleteMultipartUpload\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n]\n}\n]\n}\nExample 2: Grant Cross-Account Permissions for MFA Delete Operations\nYou can use multi-factor authentication (MFA) to protect your S3 Glacier resources.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 268,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5325771331787109
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_284",
      "text": "To provide\nan extra level of security, MFA requires users to prove physical possession of an MFA device by\nproviding a valid MFA code. For more information about configuring MFA access, see Configuring\nMFA-Protected API Access in the IAM User Guide. The example policy grants an AWS account with temporary credentials permission to delete\narchives from a vault named examplevault, provided the request is authenticated with an MFA\ndevice. The policy uses the aws:MultiFactorAuthPresent condition key to specify this\nadditional requirement. For more information, see Available Keys for Conditions in the IAM User\nGuide. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"add-mfa-delete-requirement\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\"\n]\n},\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:Delete*\"\n],\nResource-based policy examples API Version 2012-06-01 304\n\nAmazon S3 Glacier Developer Guide\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/\nexamplevault\"\n],\n\"Condition\": {\n\"Bool\": {\n\"aws:MultiFactorAuthPresent\": true\n}\n}\n}\n]\n}\nVault Lock Policies\nAn Amazon S3 Glacier (S3 Glacier) vault can have one resource-based vault access policy and one\nVault Lock policy attached to it. A Vault Lock policy is a vault access policy that you can lock. Using\na Vault Lock policy can help you enforce regulatory and compliance requirements. Amazon S3\nGlacier provides a set of API operations for you to manage the Vault Lock policies, see Locking a\nVault by Using the S3 Glacier API. As an example of a Vault Lock policy, suppose that you are required to retain archives for one\nyear before you can delete them.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 245,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43419121636284724
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_285",
      "text": "To implement this requirement, you can create a Vault Lock\npolicy that denies users permissions to delete an archive until the archive has existed for one\nyear. You can test this policy before locking it down. After you lock the policy, the policy becomes\nimmutable. For more information about the locking process, see Vault Lock Policies. If you want to\nmanage other user permissions that can be changed, you can use the vault access policy (see Vault\nAccess Policies). You can use the S3 Glacier API, Amazon SDKs, AWS CLI, or the S3 Glacier console to create and\nmanage Vault Lock policies. For a list of S3 Glacier actions allowed for vault resource-based\npolicies, see API Permissions Reference. Examples\n\u2022 Example 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\n\u2022 Example 2: Deny Deletion Permissions Based on a Tag\nResource-based policy examples API Version 2012-06-01 305\n\nAmazon S3 Glacier Developer Guide\nExample 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\nSuppose that you have a regulatory requirement to retain archives for up to one year before you\ncan delete them. You can enforce that requirement by implementing the following Vault Lock\npolicy. The policy denies the glacier:DeleteArchive action on the examplevault vault if the\narchive being deleted is less than one year old.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 219,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4916849348280165
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_286",
      "text": "The policy uses the S3 Glacier-specific condition key\nArchiveAgeInDays to enforce the one-year retention requirement. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\": \"deny-based-on-archive-age\",\n\"Principal\": \"*\",\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThan\" : {\n\"glacier:ArchiveAgeInDays\" : \"365\"\n}\n}\n}\n]\n}\nExample 2: Deny Deletion Permissions Based on a Tag\nSuppose that you have a time-based retention rule that an archive can be deleted if it is less than a\nyear old. At the same time, suppose that you need to place a legal hold on your archives to prevent\ndeletion or modification for an indefinite duration during a legal investigation. In this case, the\nlegal hold takes precedence over the time-based retention rule specified in the Vault Lock policy. To put these two rules in place, the following example policy has two statements:\n\u2022 The first statement denies deletion permissions for everyone, locking the vault. This lock is\nperformed by using the LegalHold tag. Resource-based policy examples API Version 2012-06-01 306\n\nAmazon S3 Glacier Developer Guide\n\u2022 The second statement grants deletion permissions when the archive is less than 365 days old. But even when archives are less than 365 days old, no one can delete them when the condition\nin the first statement is met. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\": \"lock-vault\",\n\"Principal\": \"*\",\n\"Effect\": \"Deny\",\n\"Action\": [\n\"glacier:DeleteArchive\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"StringLike\": {\n\"glacier:ResourceTag/LegalHold\": [\n\"true\",\n\"\"\n]\n}\n}\n},\n{\n\"Sid\": \"you-can-delete-archive-less-than-1-year-old\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::123456789012:root\"\n},\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:DeleteArchive\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThan\": {\n\"glacier:ArchiveAgeInDays\": \"365\"\nResource-based policy examples API Version 2012-06-01 307\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\n]\n}\nTroubleshooting Amazon S3 Glacier identity and access\nUse the following information to help you diagnose and fix common issues that you might\nencounter when working with S3 Glacier and IAM. Topics\n\u2022 I am not authorized to perform an action in S3 Glacier\n\u2022 I am not authorized to perform iam:PassRole\n\u2022 I want to allow people outside of my AWS account to access my S3 Glacier resources\nI am not authorized to perform an action in S3 Glacier\nIf you receive an error that you're not authorized to perform an action, your policies must be\nupdated to allow you to perform the action.",
      "start_idx": 473175,
      "end_idx": 496512,
      "metadata": {
        "num_sentences": 10,
        "num_words": 385,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42607782151963974
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_287",
      "text": "The following example error occurs when the mateojackson IAM user tries to use the console\nto view details about a fictional my-example-widget resource but doesn't have the fictional\nglacier:GetWidget permissions. User: arn:aws:iam::123456789012:user/mateojackson is not authorized to perform:\nglacier:GetWidget on resource: my-example-widget\nIn this case, the policy for the mateojackson user must be updated to allow access to the my-\nexample-widget resource by using the glacier:GetWidget action. If you need help, contact your AWS administrator. Your administrator is the person who provided\nyou with your sign-in credentials. I am not authorized to perform iam:PassRole\nIf you receive an error that you're not authorized to perform the iam:PassRole action, your\npolicies must be updated to allow you to pass a role to S3 Glacier. Troubleshooting API Version 2012-06-01 308\n\nAmazon S3 Glacier Developer Guide\nSome AWS services allow you to pass an existing role to that service instead of creating a new\nservice role or service-linked role. To do this, you must have permissions to pass the role to the\nservice. The following example error occurs when an IAM user named marymajor tries to use the console\nto perform an action in S3 Glacier. However, the action requires the service to have permissions\nthat are granted by a service role. Mary does not have permissions to pass the role to the service. User: arn:aws:iam::123456789012:user/marymajor is not authorized to perform:\niam:PassRole\nIn this case, Mary's policies must be updated to allow her to perform the iam:PassRole action. If you need help, contact your AWS administrator.",
      "start_idx": 496513,
      "end_idx": 498153,
      "metadata": {
        "num_sentences": 12,
        "num_words": 252,
        "breakpoint_idx": 2978,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3909401749119614
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_288",
      "text": "Your administrator is the person who provided\nyou with your sign-in credentials. I want to allow people outside of my AWS account to access my S3 Glacier\nresources\nYou can create a role that users in other accounts or people outside of your organization can use to\naccess your resources. You can specify who is trusted to assume the role. For services that support\nresource-based policies or access control lists (ACLs), you can use those policies to grant people\naccess to your resources. To learn more, consult the following:\n\u2022 To learn whether S3 Glacier supports these features, see How Amazon S3 Glacier works with IAM. \u2022 To learn how to provide access to your resources across AWS accounts that you own, see\nProviding access to an IAM user in another AWS account that you own in the IAM User Guide. \u2022 To learn how to provide access to your resources to third-party AWS accounts, see Providing\naccess to AWS accounts owned by third parties in the IAM User Guide. \u2022 To learn how to provide access through identity federation, see Providing access to externally\nauthenticated users (identity federation) in the IAM User Guide. \u2022 To learn the difference between using roles and resource-based policies for cross-account access,\nsee Cross account resource access in IAM in the IAM User Guide. Troubleshooting API Version 2012-06-01 309\n\nAmazon S3 Glacier Developer Guide\nAPI Permissions Reference\nWhen you are setting up How Amazon S3 Glacier works with IAM and writing a permissions policy\nthat you can attach to an IAM identity (identity-based policies) or a resource (resource-based\npolicies), you can use the following table as a reference.",
      "start_idx": 498154,
      "end_idx": 500804,
      "metadata": {
        "num_sentences": 10,
        "num_words": 274,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4508933597140842
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_289",
      "text": "The list includes each S3 Glacier API\noperation, the corresponding actions for which you can grant permissions to perform the action,\nand the AWS resource for which you can grant the permissions. You specify the actions in the policy's Action element, and you specify the resource value in the\npolicy's Resource element. Also, you can use the IAM policy language Condition element to\nspecify when a policy should take effect. To specify an action, use the glacier: prefix followed by the API operation name (for example,\nglacier:CreateVault). For most S3 Glacier actions, Resource is the vault on which you want\nto grant the permissions. You specify a vault as the Resource value by using the vault ARN. To\nexpress conditions, you use predefined condition keys. For more information, see Resource-based\npolicies within S3 Glacier. The following table lists actions that can be used with identity-based policies and resource-based\npolicies. Note\nSome actions can only be used with identity-based policies.",
      "start_idx": 498154,
      "end_idx": 500804,
      "metadata": {
        "num_sentences": 10,
        "num_words": 159,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3582699245876736
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_290",
      "text": "These actions are marked by an\nasterisk (*) after the name of the API operation in the first column. S3 Glacier API and Required Permissions for Actions\nAbort Multipart Upload (DELETE uploadID)\nRequired Permissions (API Actions): glacier:AbortMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 310\n\nAmazon S3 Glacier Developer Guide\nAbort Vault Lock (DELETE lock-policy)\nRequired Permissions (API Actions): glacier:AbortVaultLock\nResources:\nS3 Glacier Condition Keys:\nAdd Tags To Vault (POST tags add)\nRequired Permissions (API Actions):glacier:AddTagsToVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nComplete Multipart Upload (POST uploadID)\nRequired Permissions (API Actions):glacier:CompleteMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nComplete Vault Lock (POST lockId)\nRequired Permissions (API Actions):glacier:CompleteVaultLock\nResources:\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nCreate Vault (PUT vault) *\nRequired Permissions (API Actions):glacier:CreateVault\nResources:\nS3 Glacier Condition Keys:\nDelete Archive (DELETE archive)\nRequired Permissions (API Actions):glacier:DeleteArchive\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 311\n\nAmazon S3 Glacier Developer Guide\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ArchiveAgeInDays, glacier:ResourceTag/TagKey\nDelete Vault (DELETE vault)\nRequired Permissions (API Actions):glacier:DeleteVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nDelete Vault Access Policy (DELETE access-policy)\nRequired Permissions (API Actions):glacier:DeleteVaultAccessPolicy\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nDelete Vault Notifications (DELETE notification-configuration)\nRequired Permissions (API Actions):glacier:DeleteVaultNotifications\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nDescribe Job (GET JobID)\nRequired Permissions (API Actions):glacier:DescribeJob\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 312\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Condition Keys:\nDescribe Vault (GET vault)\nRequired Permissions (API Actions):glacier:DescribeVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Data Retrieval Policy (GET policy) *\nRequired Permissions (API Actions):glacier:GetDataRetrievalPolicy\nResources: arn:aws:glacier:region:account-id:policies/retrieval-limit-\npolicy\nS3 Glacier Condition Keys:\nGet Job Output (GET output)\nRequired Permissions (API Actions):glacier:GetJobOutput\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Vault Access Policy (GET access-policy)\nRequired Permissions (API Actions):glacier:GetVaultAccessPolicy\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Vault Lock (GET lock-policy)\nRequired Permissions (API Actions):glacier:GetVaultLock\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 313\n\nAmazon S3 Glacier Developer Guide\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nGet Vault Notifications (GET notification-configuration)\nRequired Permissions (API Actions):glacier:GetVaultNotifications\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nInitiate Job (POST jobs)\nRequired Permissions (API Actions):glacier:InitiateJob\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ArchiveAgeInDays, glacier:ResourceTag/TagKey\nInitiate Multipart Upload (POST multipart-uploads)\nRequired Permissions (API Actions):glacier:InitiateMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nInitiate Vault Lock (POST lock-policy)\nRequired Permissions (API Actions):glacier:InitiateVaultLock\nResources:\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 314\n\nAmazon S3 Glacier Developer Guide\nList Jobs (GET jobs)\nRequired Permissions (API Actions):glacier:ListJobs\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Multipart Uploads (GET multipart-uploads)\nRequired Permissions (API Actions):glacier:ListMultipartUploads\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Parts (GET uploadID)\nRequired Permissions (API Actions):glacier:ListParts\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Tags For Vault (GET tags)\nRequired Permissions (API Actions):glacier:ListTagsForVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nList Vaults (GET vaults)\nRequired Permissions (API Actions):glacier:ListVaults\nResources:\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 315\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Condition Keys:\nRemove Tags From Vault (POST tags remove)\nRequired Permissions (API Actions):glacier:RemoveTagsFromVault\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nSet Data Retrieval Policy (PUT policy) *\nRequired Permissions (API Actions):glacier:SetDataRetrievalPolicy\nResources:arn:aws:glacier:region:account-id:policies/retrieval-limit-\npolicy\nS3 Glacier Condition Keys:\nSet Vault Access Policy (PUT access-policy)\nRequired Permissions (API Actions):glacier:SetVaultAccessPolicy\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nSet Vault Notification Configuration (PUT notification-configuration)\nRequired Permissions (API Actions):glacier:SetVaultNotifications\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nUpload Archive (POST archive)\nRequired Permissions (API Actions):glacier:UploadArchive\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 316\n\nAmazon S3 Glacier Developer Guide\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nUpload Part (PUT uploadID)\nRequired Permissions (API Actions):glacier:UploadMultipartPart\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys: glacier:ResourceTag/TagKey\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 317\n\nAmazon S3 Glacier Developer Guide\nLogging and Monitoring in Amazon S3 Glacier\nMonitoring is an important part of maintaining the reliability, availability, and performance of\nAmazon S3 Glacier (S3 Glacier) and your AWS solutions. You should collect monitoring data from\nall of the parts of your AWS solution so that you can more easily identify and debug the source of a\nfailure if one occurs.",
      "start_idx": 500805,
      "end_idx": 510523,
      "metadata": {
        "num_sentences": 3,
        "num_words": 762,
        "breakpoint_idx": 3001,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1482248306274414
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_291",
      "text": "AWS provides the following tools for monitoring your S3 Glacier resources and\nresponding to potential incidents:\nAmazon CloudWatch Alarms\nWhen using S3 Glacier via Amazon S3, you can use Amazon CloudWatch alarms to watch a\nsingle metric over a time period that you specify. If the metric exceeds a given threshold, a\nnotification is sent to an Amazon SNS topic or AWS Auto Scaling policy. CloudWatch alarms do\nnot invoke actions because they are in a particular state. Rather the state must have changed\nand been maintained for a specified number of periods. For more information, see Monitoring\nMetrics with Amazon CloudWatch. AWS CloudTrail Logs\nCloudTrail provides a record of actions taken by a user, role, or an AWS service in S3 Glacier. CloudTrail captures all API calls for S3 Glacier as events, including calls from the S3 Glacier\nconsole and from code calls to the S3 Glacier APIs. For more information, see Logging Amazon\nS3 Glacier API Calls with AWS CloudTrail. AWS Trusted Advisor\nTrusted Advisor draws upon best practices learned from serving hundreds of thousands of AWS\ncustomers. Trusted Advisor inspects your AWS environment and then makes recommendations\nwhen opportunities exist to save money, improve system availability and performance, or help\nclose security gaps. All AWS customers have access to five Trusted Advisor checks. Customers\nwith a Business or Enterprise support plan can view all Trusted Advisor checks. For more information, see AWS Trusted Advisor in the AWS Support User Guide.",
      "start_idx": 510524,
      "end_idx": 516176,
      "metadata": {
        "num_sentences": 13,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3804357479780148
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_292",
      "text": "Logging and Monitoring API Version 2012-06-01 318\n\nAmazon S3 Glacier Developer Guide\nCompliance Validation for Amazon S3 Glacier\nThe security and compliance of Amazon S3 Glacier (S3 Glacier) is assessed by third-party auditors\nas part of multiple AWS compliance programs, including the following:\n\u2022 System and Organization Controls (SOC)\n\u2022 Payment Card Industry Data Security Standard (PCI DSS)\n\u2022 Federal Risk and Authorization Management Program (FedRAMP)\n\u2022 Health Insurance Portability and Accountability Act (HIPAA)\nAWS provides a frequently updated list of AWS services in scope of specific compliance programs at\nAWS Services in Scope by Compliance Program. Third-party audit reports are available for you to download using AWS Artifact. For more\ninformation, see Downloading Reports in AWS Artifact in the AWS Artifact User Guide. For more information about AWS compliance programs, see AWS Compliance Programs. Your compliance responsibility when using S3 Glacier is determined by the sensitivity of your\ndata, your organization\u2019s compliance objectives, and applicable laws and regulations. If your use\nof S3 Glacier is subject to compliance with standards like HIPAA, PCI, or FedRAMP, AWS provides\nresources to help:\n\u2022 S3 Glacier Vault Lock allows you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a vault lock policy. You can specify controls such as \u201cwrite once read\nmany\u201d (WORM) in a vault lock policy and lock the policy from future edits. After the policy is\nlocked, it can no longer be changed. Vault lock policies can help you comply with regulatory\nframeworks such as SEC17a-4 and HIPAA. \u2022 Security and Compliance Quick Start Guides discuss architectural considerations and steps for\ndeploying security- and compliance-focused baseline environments on AWS. \u2022 Architecting for HIPAA Security and Compliance outlines how companies use AWS to help them\nmeet HIPAA requirements. \u2022 The AWS Well-Architected Tool (AWS WA Tool) is a service in the cloud that provides a consistent\nprocess for you to review and measure your architecture using AWS best practices. The AWS WA\nTool provides recommendations for making your workloads more reliable, secure, efficient, and\ncost-effective.",
      "start_idx": 510524,
      "end_idx": 516176,
      "metadata": {
        "num_sentences": 13,
        "num_words": 340,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3681612748366136
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_293",
      "text": "Compliance Validation API Version 2012-06-01 319\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Compliance Resources provide several different workbooks and guides that might apply to\nyour industry and location. \u2022 AWS Config can help you assess how well your resource configurations comply with internal\npractices, industry guidelines, and regulations. \u2022 AWS Security Hub provides you with a comprehensive view of your security state within AWS and\nhelps you check your compliance with security industry standards and best practices. Compliance Validation API Version 2012-06-01 320\n\nAmazon S3 Glacier Developer Guide\nResilience in Amazon S3 Glacier\nThe AWS global infrastructure is built around Regions and Availability Zones. AWS Regions provide\nmultiple, physically separated and isolated Availability Zones that are connected with low latency,\nhigh throughput, and highly redundant networking. These Availability Zones offer you an effective\nway to design and operate applications and databases. They are more highly available, fault\ntolerant, and scalable than traditional single data center infrastructures or multi-data center\ninfrastructures. S3 Glacier redundantly stores data in multiple devices spanning a minimum of\nthree Availability Zones. To increase durability, S3 Glacier synchronously stores your data across\nmultiple AZs before confirming a successful upload. For more information about AWS Regions and Availability Zones, see AWS Global Infrastructure. Resilience API Version 2012-06-01 321\n\nAmazon S3 Glacier Developer Guide\nInfrastructure Security in Amazon S3 Glacier\nAs a managed service, Amazon S3 Glacier (S3 Glacier) is protected by the AWS global network\nsecurity procedures that are described in the Amazon Web Services: Overview of Security\nProcesses. Access to S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2.",
      "start_idx": 510524,
      "end_idx": 516176,
      "metadata": {
        "num_sentences": 13,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40952486869616384
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_294",
      "text": "We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic\nCurve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later support\nthese modes. Additionally, requests must be signed using an access key ID and a secret access key\nthat is associated with an IAM principal, or you can use the AWS Security Token Service (AWS STS)\nto generate temporary security credentials to sign requests. VPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon S3 VPC endpoints if you\naccess S3 Glacier as a storage tier integrated with Amazon S3. For more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide. Infrastructure Security API Version 2012-06-01 322\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Data Retrieval Policies\nWith Amazon S3 Glacier data retrieval policies, you can easily set data retrieval quotas and manage\nthe data retrieval activities across your AWS account in each AWS Region. For more information\nabout S3 Glacier data retrieval charges, see S3 Glacier pricing. Important\nA data retrieval policy applies only to Standard retrievals and manages retrieval requests\nmade directly to S3 Glacier. For more information about the S3 Glacier storage classes, see Storage classes for archiving\nobjects and Transitioning objects in the Amazon Simple Storage Service User Guide.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 302,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29429447289669153
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_295",
      "text": "Topics\n\u2022 Choosing an S3 Glacier Data Retrieval Policy\n\u2022 Using the S3 Glacier Console to Set Up a Data Retrieval Policy\n\u2022 Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy\nChoosing an S3 Glacier Data Retrieval Policy\nYou can choose from three types of S3 Glacier data retrieval policies: No Retrieval Limit, Free Tier\nOnly, and Max Retrieval Rate. No Retrieval Limit is the default data retrieval policy that's used for retrievals. If you use the No\nRetrieval Limit policy, no retrieval quota is set, and all valid data retrieval requests are accepted. By using a Free Tier Only policy, you can keep your retrievals within your daily AWS Free Tier\nallowance and not incur any data retrieval costs. If you want to retrieve more data than is in your\nAWS Free Tier allowance, you can use a Max Retrieval Rate policy to set a bytes-per-hour retrieval-\nrate quota. The Max Retrieval Rate policy ensures that the peak retrieval rate from all retrieval jobs\nacross your account in an AWS Region does not exceed the bytes-per-hour quota that you set. With both the Free Tier Only and Max Retrieval Rate policies, data retrieval requests that exceed\nthe retrieval quotas that you specified are not accepted. If you use a Free Tier Only policy, S3\nGlacier synchronously rejects retrieval requests that exceed your AWS Free Tier allowance. If you\nChoosing an S3 Glacier Data Retrieval Policy API Version 2012-06-01 323\n\nAmazon S3 Glacier Developer Guide\nuse a Max Retrieval Rate policy, S3 Glacier rejects retrieval requests that cause the peak retrieval\nrate of the in-progress jobs to exceed the bytes-per-hour quota set by the policy. These policies\nhelp you simplify data retrieval cost management. The following are some useful facts about data retrieval policies:\n\u2022 Data retrieval policy settings do not change the 3- to 5-hour period that it takes to retrieve data\nfrom S3 Glacier by using Standard retrievals. \u2022 Setting a new data retrieval policy does not affect previously accepted retrieval jobs that are\nalready in progress.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 344,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5955483407685251
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_296",
      "text": "\u2022 If a retrieval job request is rejected because of a data retrieval policy, you are not charged for the\njob or the request. \u2022 You can set one data retrieval policy for each AWS Region, which will govern all data retrieval\nactivities in the AWS Region under your account. A data retrieval policy is specific to a particular\nAWS Region because data retrieval costs vary across AWS Regions. For more information, see\nAmazon S3 Glacier pricing. Free Tier Only Policy\nYou can set a data retrieval policy to Free Tier Only to ensure that your retrievals always stay within\nyour AWS Free Tier allowance, so that you don't incur data retrieval charges. If a retrieval request is\nrejected, you receive an error message stating that the request has been denied by the current data\nretrieval policy. You can set the data retrieval policy to Free Tier Only on a per-Region basis. After the policy is set,\nyou cannot retrieve more data in a day than your prorated daily AWS Free Tier retrieval allowance\nfor that AWS Region. You also do not incur data retrieval fees. You can also switch to a Free Tier Only policy after you have incurred data retrieval charges within\na month. In that case, the Free Tier Only policy takes effect for new retrieval requests, but does not\naffect past requests. You will be billed for the previously incurred charges.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 235,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4472564928459399
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_297",
      "text": "Max Retrieval Rate Policy\nYou can set your data retrieval policy to Max Retrieval Rate to control the peak retrieval rate by\nspecifying a data retrieval quota that has a bytes-per-hour maximum. When you set the data\nretrieval policy to Max Retrieval Rate, a new retrieval request is rejected if it would cause the peak\nFree Tier Only Policy API Version 2012-06-01 324\n\nAmazon S3 Glacier Developer Guide\nretrieval rate of the in-progress jobs to exceed the bytes-per-hour quota that's specified by the\npolicy. If a retrieval job request is rejected, you receive an error message stating that the request\nhas been denied by the current data retrieval policy. Setting your data retrieval policy to the Max Retrieval Rate policy can affect how much of your\nAWS Free Tier allowance that you can use in a day. For example, suppose you set Max Retrieval Rate\nto 1 MB per hour. This is less than the AWS Free Tier policy rate. To ensure that you make good use\nof the daily AWS Free Tier allowance, you can first set your policy to Free Tier Only, and then switch\nto the Max Retrieval Rate policy later if you need to. For more information about how your retrieval\nallowance is calculated, go to Amazon S3 Glacier FAQs. No Retrieval Limit Policy\nIf your data retrieval policy is set to No Retrieval Limit, all valid data retrieval requests are accepted\nand your data retrieval costs will vary based on your usage. Using the S3 Glacier Console to Set Up a Data Retrieval Policy\nTo create a data retrieval policy by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home. 2.",
      "start_idx": 516177,
      "end_idx": 523188,
      "metadata": {
        "num_sentences": 12,
        "num_words": 290,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41220855712890625
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_298",
      "text": "Under Select a Region, choose an AWS Region from the dropdown menu. You can configure a\ndata retrieval policy for each AWS Region. 3.",
      "start_idx": 523189,
      "end_idx": 523322,
      "metadata": {
        "num_sentences": 3,
        "num_words": 24,
        "breakpoint_idx": 3091,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.20566630363464355
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_299",
      "text": "In the left navigation pane, choose Data retrieval settings. 4. Choose Edit. The Edit data retrieval policies page appears. 5. Under Data retrieval policies, choose a policy. You can select one of the three data retrieval policies: No retrieval limit, Free Tier only, or\nSpecify a max retrieval rate. \u2022 If you choose No retrieval limit, all valid data retrieval requests are accepted. \u2022 If you choose Free Tier only, data retrieval requests that exceed the AWS Free Tier are not\naccepted. \u2022 If you choose Specify a max retrieval rate, data retrieval requests are rejected if they would\ncause the peak retrieval rate of the in-progress jobs to exceed the max retrieval rate that\nyou specify. You must specify a gigabytes (GB) per hour value in the GB/hour box under Max\nNo Retrieval Limit Policy API Version 2012-06-01 325\n\nAmazon S3 Glacier Developer Guide\nretrieval rate. When you enter a value for GB/hour, the console calculates an estimated cost\nfor you.",
      "start_idx": 523323,
      "end_idx": 524281,
      "metadata": {
        "num_sentences": 12,
        "num_words": 162,
        "breakpoint_idx": 3103,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.27463259841456555
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_300",
      "text": "6. Choose Save changes. Using the Amazon S3 Glacier API to Set Up a Data Retrieval\nPolicy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API or by using\nthe AWS SDKs. Using the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API. You can view\nan existing data retrieval policy by using the Get Data Retrieval Policy (GET policy) operation. You\nset a data retrieval policy by using the Set Data Retrieval Policy (PUT policy) operation. When using the PUT policy operation, you select the data retrieval policy type by setting the JSON\nStrategy field value to BytesPerHour, FreeTier, or None. BytesPerHour is equivalent to\nchoosing Specify a max retrieval rate in the console, FreeTier to choosing Free Tier only, and\nNone to choosing No retrieval limit. When you use the Initiate Job (POST jobs) operation to initiate a data retrieval job that will exceed\nthe maximum retrieval rate set in your data retrieval policy, the Initiate Job operation stops\nand throws an exception. Using the AWS SDKs to Set Up a Data Retrieval Policy\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. These SDKs provide\nlibraries that map to the underlying REST API and provide objects that enable you to easily\nconstruct requests and process responses.",
      "start_idx": 524282,
      "end_idx": 528205,
      "metadata": {
        "num_sentences": 11,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2813490780917081
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_301",
      "text": "For more information, see Using the AWS SDKs with\nAmazon S3 Glacier. Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy API Version 2012-06-01 326\n\nAmazon S3 Glacier Developer Guide\nTagging Amazon S3 Glacier Resources\nA tag is a label that you assign to an AWS resource. Each tag consists of a key and a value, both of\nwhich you define. You can assign the tags that you define to Amazon S3 Glacier (S3 Glacier) vault\nresources. Using tags is a simple yet powerful way to manage AWS resources and organize data,\nincluding billing data. Topics\n\u2022 Tagging Basics\n\u2022 Tag Restrictions\n\u2022 Tracking Costs Using Tagging\n\u2022 Managing Access Control with Tagging\n\u2022 Related Sections\nTagging Basics\nYou use the S3 Glacier console, AWS Command Line Interface (AWS CLI), or S3 Glacier API to\ncomplete the following tasks:\n\u2022 Adding tags to a vault\n\u2022 Listing the tags for a vault\n\u2022 Removing tags from a vault\nFor information about how to add, list, and remove tags, see Tagging Your S3 Glacier Vaults. You can use tags to categorize your vaults. For example, you can categorize vaults by purpose,\nowner, or environment. Because you define the key and value for each tag, you can create a custom\nset of categories to meet your specific needs. For example, you might define a set of tags that\nhelps you track vaults by owner and purpose for the vault. Following are a few examples of tags:\n\u2022 Owner: Name\n\u2022 Purpose: Video archives\n\u2022 Environment: Production\nTagging Basics API Version 2012-06-01 327\n\nAmazon S3 Glacier Developer Guide\nTag Restrictions\nBasic tag restrictions are as follows:\n\u2022 The maximum number of tags for a resource (vault) is 50.",
      "start_idx": 524282,
      "end_idx": 528205,
      "metadata": {
        "num_sentences": 11,
        "num_words": 289,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45384247519753196
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_302",
      "text": "\u2022 Tag keys and values are case-sensitive. Tag key restrictions are as follows:\n\u2022 Within a set of tags for a vault, each tag key must be unique. If you add a tag with a key that's\nalready in use, your new tag overwrites the existing key-value pair. \u2022 Tag keys cannot start with aws: because this prefix is reserved for use by AWS. AWS can create\ntags that begin with this prefix on your behalf, but you can't edit or delete them. \u2022 Tag keys must be from 1 to 128 Unicode characters in length. \u2022 Tag keys must consist of the following characters: Unicode letters, digits, spaces, and the\nfollowing special characters: _ . / = + - @. Tag value restrictions are as follows:\n\u2022 Tag values must be from 0 to 255 Unicode characters in length. \u2022 Tag values can be blank. Otherwise, they must consist of the following characters: Unicode\nletters, digits, spaces, and any of the following special characters: _ .",
      "start_idx": 524282,
      "end_idx": 528205,
      "metadata": {
        "num_sentences": 11,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4308772000399503
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_303",
      "text": "/ = + - @. Tracking Costs Using Tagging\nYou can use tags to categorize and track your AWS costs. When you apply tags to any AWS\nresources, including vaults, your AWS cost allocation report includes usage and costs aggregated\nby tags. You can apply tags that represent business categories (such as cost centers, application\nnames, and owners) to organize your costs across multiple services. For more information, see Use\nCost Allocation Tags for Custom Billing Reports in the AWS Billing User Guide. Managing Access Control with Tagging\nYou can use tags as a condition in an access policy statement. For example, you can set up a legal\nhold tag and include it as a condition in a data retention policy that states that \u201carchive deletion\nTag Restrictions API Version 2012-06-01 328\n\nAmazon S3 Glacier Developer Guide\nfrom everyone will be denied if the legal hold tag value is set to True.\u201d You can deploy the data\nretention policy and set the legal hold tag to False under normal conditions. If your data must be\nput on hold to assist an investigation, you can easily turn on the legal hold by setting the tag value\nto True and removing the hold in a similar way later on. For more information, see Controlling\nAccess Using Tags in the IAM User Guide. Related Sections\n\u2022 Tagging Your S3 Glacier Vaults\nRelated Sections API Version 2012-06-01 329\n\nAmazon S3 Glacier Developer Guide\nLogging Amazon S3 Glacier API Calls with AWS\nCloudTrail\nAmazon S3 Glacier (S3 Glacier) is integrated with AWS CloudTrail, a service that provides a record\nof actions taken by a user, role, or an AWS service in S3 Glacier.",
      "start_idx": 528206,
      "end_idx": 532430,
      "metadata": {
        "num_sentences": 10,
        "num_words": 278,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2917459699842665
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_304",
      "text": "CloudTrail captures all API calls\nfor S3 Glacier as events, including calls from the S3 Glacier console and from code calls to the S3\nGlacier APIs. If you create a trail, you can enable continuous delivery of CloudTrail events to an\nAmazon S3 bucket, including events for S3 Glacier. If you don't configure a trail, you can still view\nthe most recent events in the CloudTrail console in Event history. Using the information collected\nby CloudTrail, you can determine the request that was made to S3 Glacier, the IP address from\nwhich the request was made, who made the request, when it was made, and additional details. To learn more about CloudTrail, see the AWS CloudTrail User Guide. Amazon S3 Glacier Information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs in\nS3 Glacier, that activity is recorded in a CloudTrail event along with other AWS service events in\nEvent history. You can view, search, and download recent events in your AWS account. For more\ninformation, see Viewing Events with CloudTrail Event History. For an ongoing record of events in your AWS account, including events for S3 Glacier, create a\ntrail.",
      "start_idx": 528206,
      "end_idx": 532430,
      "metadata": {
        "num_sentences": 10,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6121731228298611
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_305",
      "text": "A trail enables CloudTrail to deliver log files to an Amazon S3 bucket. By default, when you\ncreate a trail in the console, the trail applies to all AWS Regions. The trail logs events from all AWS\nRegions in the AWS partition and delivers the log files to the Amazon S3 bucket that you specify. Additionally, you can configure other AWS services to further analyze and act upon the event data\ncollected in CloudTrail logs. For more information, see:\n\u2022 Overview for Creating a Trail\n\u2022 CloudTrail Supported Services and Integrations\n\u2022 Configuring Amazon SNS Notifications for CloudTrail\n\u2022 Receiving CloudTrail Log Files from Multiple Regions and Receiving CloudTrail Log Files from\nMultiple Accounts\nAmazon S3 Glacier Information in CloudTrail API Version 2012-06-01 330\n\nAmazon S3 Glacier Developer Guide\nAll S3 Glacier actions are logged by CloudTrail and are documented in the API Reference for\nAmazon S3 Glacier. For example, calls to the Create Vault (PUT vault), Delete Vault (DELETE vault),\nand List Vaults (GET vaults) actions generate entries in the CloudTrail log files. Every event or log entry contains information about who generated the request. The identity\ninformation helps you determine the following:\n\u2022 Whether the request was made with root user or other credentials. \u2022 Whether the request was made with temporary security credentials for a role or federated user. \u2022 Whether the request was made by another AWS service.",
      "start_idx": 528206,
      "end_idx": 532430,
      "metadata": {
        "num_sentences": 10,
        "num_words": 232,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3940140618218316
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_306",
      "text": "For more information, see the CloudTrail userIdentity Element. Understanding Amazon S3 Glacier Log File Entries\nA trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket that\nyou specify. CloudTrail log files contain one or more log entries. An event represents a single\nrequest from any source and includes information about the requested action, the date and time of\nthe action, request parameters, and so on. CloudTrail log files are not an ordered stack trace of the\npublic API calls, so they do not appear in any specific order. The following example shows a CloudTrail log entry that demonstrates the Create Vault (PUT\nvault), Delete Vault (DELETE vault), List Vaults (GET vaults), and Describe Vault (GET vault) actions. {\n\"Records\": [\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"52f8c821-002e-4549-857f-8193a15246fa\",\n\"eventName\": \"CreateVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"HJiLgvfXCY88QJAC6rRoexS9ThvI21Q1Nqukfly02hcUPPo\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 331\n\nAmazon S3 Glacier Developer Guide\n\"responseElements\": {\n\"location\": \"/999999999999/vaults/myVaultName\"\n},\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n},\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"cdd33060-4758-416a-b7b9-dafd3afcec90\",\n\"eventName\": \"DeleteVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"GGdw-VfhVfLCFwAM6iVUvMQ6-fMwSqSO9FmRd0eRSa_Fc7c\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\n\"responseElements\": null,\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n},\n{\n\"awsRegion\": \"us-east-1\",\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 332\n\nAmazon S3 Glacier Developer Guide\n\"eventID\": \"355750b4-e8b0-46be-9676-e786b1442470\",\n\"eventName\": \"ListVaults\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"yPTs22ghTsWprFivb-2u30FAaDALIZP17t4jM_xL9QJQyVA\",\n\"requestParameters\": {\n\"accountId\": \"-\"\n},\n\"responseElements\": null,\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n},\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"569e830e-b075-4444-a826-aa8b0acad6c7\",\n\"eventName\": \"DescribeVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"QRt1ZdFLGn0TCm784HmKafBmcB2lVaV81UU3fsOR3PtoIiM\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\n\"responseElements\": null,\n\"sourceIPAddress\": \"127.0.0.1\",\n\"userAgent\": \"aws-sdk-java/1.9.6 Mac_OS_X/10.9.5 Java_HotSpot(TM)_64-\nBit_Server_VM/25.25-b02/1.8.0_25\",\n\"userIdentity\": {\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 333\n\nAmazon S3 Glacier Developer Guide\n\"accountId\": \"999999999999\",\n\"arn\": \"arn:aws:iam::999999999999:user/myUserName\",\n\"principalId\": \"A1B2C3D4E5F6G7EXAMPLE\",\n\"type\": \"IAMUser\",\n\"userName\": \"myUserName\"\n}\n}\n]\n}\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 334\n\nAmazon S3 Glacier Developer Guide\nAPI Reference for Amazon S3 Glacier\nAmazon S3 Glacier supports a set of operations\u2014specifically, a set of RESTful API calls\u2014that\nenable you to interact with the service. You can use any programming library that can send HTTP requests to send your REST requests\nto S3 Glacier. When sending a REST request, S3 Glacier requires that you authenticate every\nrequest by signing the request. Additionally, when uploading an archive, you must also compute\nthe checksum of the payload and include it in your request. For more information, see Signing\nRequests. If an error occurs, you need to know what S3 Glacier sends in an error response so that you\ncan process it. This section provides all this information, in addition to documenting the REST\noperations, so that you can make REST API calls directly.",
      "start_idx": 532431,
      "end_idx": 537666,
      "metadata": {
        "num_sentences": 13,
        "num_words": 532,
        "breakpoint_idx": 3179,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32859518589117587
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_307",
      "text": "You can either use the REST API calls directly or use the Amazon SDKs that provide wrapper\nlibraries. These libraries sign each request you send and compute the checksum of the payload in\nyour request. Therefore, using the Amazon SDKs simplifies your coding task. This developer guide\nprovides working examples of basic S3 Glacier operations using the AWS SDK for Java and .NET. For\nmore information see, Using the AWS SDKs with Amazon S3 Glacier. Topics\n\u2022 Common Request Headers\n\u2022 Common Response Headers\n\u2022 Signing Requests\n\u2022 Computing Checksums\n\u2022 Error Responses\n\u2022 Vault Operations\n\u2022 Archive Operations\n\u2022 Multipart Upload Operations\n\u2022 Job Operations\n\u2022 Data Types Used in Job Operations\n\u2022 Data Retrieval Operations\nAPI Version 2012-06-01 335\n\nAmazon S3 Glacier Developer Guide\nCommon Request Headers\nAmazon S3 Glacier (S3 Glacier) REST requests include headers that contain basic information about\nthe request. The following table describes headers that can be used by all S3 Glacier REST requests. Header Name Description Required\nAuthorization The header that is required to sign requests. S3 Yes\nGlacier requires Signature Version 4. For more\ninformation, see Signing Requests. Type: String\nContent-Length The length of the request body (without the Conditional\nheaders). Type: String\nCondition: Required only for the Upload Archive\n(POST archive) API.",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32680262941302674
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_308",
      "text": "Date The date that can be used to create the signature Conditional\ncontained in the Authorization header. If the\nDate header is to be used for signing it must be\nspecified in the ISO 8601 basic format. In this\ncase, the x-amz-date header is not needed. Note that when x-amz-date is present, it\nalways overrides the value of the Date header. If the Date header is not used for signing, it can\nbe one of the full date formats specified by RFC\n2616, section 3.3. For example, the following\ndate/time W ed, 10 Feb 2017 12:00:00\nGMT is a valid date/time header for use with S3\nGlacier. If you are using the Date header for signing, then\nit must be in the ISO 8601 basic YYYYMMDD'\nT'HHMMSS'Z' format. Common Request Headers API Version 2012-06-01 336\n\nAmazon S3 Glacier Developer Guide\nHeader Name Description Required\nType: String\nCondition: If Date is specified but is not in ISO\n8601 basic format, then you must also include\nthe x-amz-date header. If D ate is specified\nin ISO 8601 basic format, then this is sufficien\nt for signing requests and you do not need the\nx-amz-date header. For more information,\nsee Handling Dates in Signature Version 4 in the\nAmazon Web Services Glossary. Host This header specifies the service endpoint to Yes\nwhich you send your requests. The value must\nbe of the form \"glacier.region.amazonaw\ns.com \", where region is replaced with an AWS\nRegion designation such as u s-west-2 .",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 247,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45929371226917615
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_309",
      "text": "Type: String\nx-amz-content-sha2 The computed SHA256 checksum of an entire Conditional\n56 payload that is uploaded with either Upload\nArchive (POST archive) or Upload Part (PUT\nuploadID). This header is not the same as the x-\namz-sha256-tree-hash header, though,\nfor some small payloads the values are the same. When x -amz-content-sha256 is required,\nboth x-amz-content-sha256 and x -amz-\nsha256-tree-hash must be specified. Type: String\nCondition: Required for streaming API, Upload\nArchive (POST archive) and Upload Part (PUT\nuploadID). Common Request Headers API Version 2012-06-01 337\n\nAmazon S3 Glacier Developer Guide\nHeader Name Description Required\nx-amz-date The date used to create the signature in the Conditional\nAuthorization header. The format must be ISO\n8601 basic in the YYYYMMDD'T'HHMMSS'Z'\nformat. For example, the following date/time\n20170210T120000Z is a valid x -amz-date\nfor use with S3 Glacier. Type: String\nCondition: x-amz-date is optional for all\nrequests; it can be used to override the date\nused for signing requests. If the Date header is\nspecified in the ISO 8601 basic format, then x -\namz-date is not needed. When x-amz-date\nis present, it always overrides the value of the\nDate header. For more information, see Handling\nDates in Signature Version 4 in the Amazon Web\nServices Glossary. x-amz-glacier-vers The S3 Glacier API version to use.",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35200327092950995
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_310",
      "text": "The current Yes\nion version is 2012-06-01 . Type: String\nx-amz-sha256-tree- The computed SHA256 tree-hash checksum for an Conditional\nhash uploaded archive (Upload Archive (POST archive))\nor archive part (Upload Part (PUT uploadID)\n). For more information about calculating this\nchecksum, see Computing Checksums. Type: String\nDefault: None\nCondition: Required for Upload Archive (POST\narchive) and Upload Part (PUT uploadID). Common Request Headers API Version 2012-06-01 338\n\nAmazon S3 Glacier Developer Guide\nCommon Response Headers\nThe following table describes response headers that are common to most API responses. Name Description\nContent-L The length in bytes of the response body. ength\nType: String\nDate The date and time Amazon S3 Glacier (S3 Glacier) responded, for example,\nWed, 10 Feb 2017 12:00:00 GMT. The format of the date must be\none of the full date formats specified by RFC 2616, section 3.3. Note that\nDate returned may drift slightly from other dates, so for example, the date\nreturned from an Upload Archive (POST archive) request may not match\nthe date shown for the archive in an inventory list for the vault. Type: String\nx-amzn-Re A value created by S3 Glacier that uniquely identifies your request. In the\nquestId event that you have a problem with S3 Glacier, AWS can use this value to\ntroubleshoot the problem. It is recommended that you log these values.",
      "start_idx": 537667,
      "end_idx": 543195,
      "metadata": {
        "num_sentences": 12,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23161995049678918
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_311",
      "text": "Type: String\nx-amz-sha The SHA256 tree-hash checksum of the archive or inventory body. For\n256-tree- more information about calculating this checksum, see Computing\nhash Checksums. Type: String\nSigning Requests\nS3 Glacier requires that you authenticate every request you send by signing the request. To sign a\nrequest, you calculate a digital signature using a cryptographic hash function. A cryptographic hash\nis a function that returns a unique hash value based on the input. The input to the hash function\nincludes the text of your request and your secret access key. The hash function returns a hash value\nCommon Response Headers API Version 2012-06-01 339\n\nAmazon S3 Glacier Developer Guide\nthat you include in the request as your signature. The signature is part of the Authorization\nheader of your request. After receiving your request, S3 Glacier recalculates the signature using the same hash function\nand input that you used to sign the request. If the resulting signature matches the signature in the\nrequest, S3 Glacier processes the request. Otherwise, the request is rejected. S3 Glacier supports authentication using AWS Signature Version 4.",
      "start_idx": 543196,
      "end_idx": 546138,
      "metadata": {
        "num_sentences": 12,
        "num_words": 181,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39010261766838306
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_312",
      "text": "The process for calculating a\nsignature can be broken into three tasks:\n\u2022 Task 1: Create a Canonical Request\nRearrange your HTTP request into a canonical format. Using a canonical form is necessary\nbecause S3 Glacier uses the same canonical form when it recalculates a signature to compare\nwith the one you sent. \u2022 Task 2: Create a String to Sign\nCreate a string that you will use as one of the input values to your cryptographic hash function. The string, called the string to sign, is a concatenation of the name of the hash algorithm, the\nrequest date, a credential scope string, and the canonicalized request from the previous task. The\ncredential scope string itself is a concatenation of date, AWS Region, and service information. \u2022 Task 3: Create a Signature\nCreate a signature for your request by using a cryptographic hash function that accepts two\ninput strings: your string to sign and a derived key. The derived key is calculated by starting with\nyour secret access key and using the credential scope string to create a series of hash-based\nmessage authentication codes (HMACs). Note that the hash function used in this signing step is\nnot the tree-hash algorithm used in S3 Glacier APIs that upload data. Topics\n\u2022 Example Signature Calculation\n\u2022 Calculating Signatures for the Streaming Operations\nSigning Requests API Version 2012-06-01 340\n\nAmazon S3 Glacier Developer Guide\nExample Signature Calculation\nThe following example walks you through the details of creating a signature for Create Vault (PUT\nvault). The example could be used as a reference to check your signature calculation method. For\nmore information, see Signing AWS API requests in the IAM User Guide. The example assumes the following:\n\u2022 The time stamp of the request is Fri, 25 May 2012 00:24:53 GMT.",
      "start_idx": 543196,
      "end_idx": 546138,
      "metadata": {
        "num_sentences": 12,
        "num_words": 297,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3646410450790868
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_313",
      "text": "\u2022 The endpoint is US East (N. Virginia) Region us-east-1. The general request syntax (including the JSON body) is:\nPUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Fri, 25 May 2012 00:24:53 GMT\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is:\nPUT\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-date:20120525T002453Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-date;x-amz-glacier-version\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nThe last line of the canonical request is the hash of the request body. Also, note the empty third\nline in the canonical request. This is because there are no query parameters for this API. The string to sign for Task 2: Create a String to Sign is:\nAWS4-HMAC-SHA256\n20120525T002453Z\nExample Signature Calculation API Version 2012-06-01 341\n\nAmazon S3 Glacier Developer Guide\n20120525/us-east-1/glacier/aws4_request\n5f1da1a2d0feb614dd03d71e87928b8e449ac87614479332aced3a701f916743\nThe first line of the string to sign is the algorithm, the second line is the time stamp, the third line\nis the credential scope, and the last line is a hash of the canonical request from Task 1: Create a\nCanonical Request. The service name to use in the credential scope is glacier. For Task 3: Create a Signature, the derived key can be represented as:\nderived key = HMAC(HMAC(HMAC(HMAC(\"AWS4\" + YourSecretAccessKey,\"20120525\"),\"us-\neast-1\"),\"glacier\"),\"aws4_request\")\nIf the secret access key, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY, is used, then the\ncalculated signature is:\n3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nThe final step is to construct the Authorization header. For the demonstration access key\nAKIAIOSFODNN7EXAMPLE, the header (with line breaks added for readability) is:\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/us-east-1/\nglacier/aws4_request,\nSignedHeaders=host;x-amz-date;x-amz-glacier-version,\nSignature=3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nCalculating Signatures for the Streaming Operations\nUpload Archive (POST archive) and Upload Part (PUT uploadID) are streaming operations that\nrequire you to include an additional header x-amz-content-sha256 when signing and sending\nyour request. The signing steps for the streaming operations are exactly the same as those for\nother operations, with the addition of the streaming header. The calculation of the streaming header x-amz-content-sha256 is based on the SHA256 hash\nof the entire content (payload) that is to be uploaded.",
      "start_idx": 546139,
      "end_idx": 550705,
      "metadata": {
        "num_sentences": 10,
        "num_words": 318,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3237065209282769
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_314",
      "text": "Note that this calculation is different from\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 342\n\nAmazon S3 Glacier Developer Guide\nthe SHA256 tree hash (Computing Checksums). Besides trivial cases, the SHA 256 hash value of the\npayload data will be different from the SHA256 tree hash of the payload data. If the payload data is specified as a byte array, you can use the following Java code snippet to\ncalculate the SHA256 hash. public static byte[] computePayloadSHA256Hash2(byte[] payload) throws\nNoSuchAlgorithmException, IOException {\nBufferedInputStream bis =\nnew BufferedInputStream(new ByteArrayInputStream(payload));\nMessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\nbyte[] buffer = new byte[4096];\nint bytesRead = -1;\nwhile ( (bytesRead = bis.read(buffer, 0, buffer.length)) != -1 ) {\nmessageDigest.update(buffer, 0, bytesRead);\n}\nreturn messageDigest.digest();\n}\nSimilarly, in C# you can calculate the SHA256 hash of the payload data as shown in the following\ncode snippet. public static byte[] CalculateSHA256Hash(byte[] payload)\n{\nSHA256 sha256 = System.Security.Cryptography.SHA256.Create();\nbyte[] hash = sha256.ComputeHash(payload);\nreturn hash;\n}\nExample Signature Calculation for Streaming API\nThe following example walks you through the details of creating a signature for Upload Archive\n(POST archive), one of the two streaming APIs in S3 Glacier. The example assumes the following:\n\u2022 The time stamp of the request is Mon, 07 May 2012 00:00:00 GMT. \u2022 The endpoint is the US East (N. Virginia) Region, us-east-1. \u2022 The content payload is a string \"Welcome to S3 Glacier.\" Calculating Signatures for the Streaming Operations API Version 2012-06-01 343\n\nAmazon S3 Glacier Developer Guide\nThe general request syntax (including the JSON body) is shown in the example below. Note that\nthe x-amz-content-sha256 header is included.",
      "start_idx": 546139,
      "end_idx": 550705,
      "metadata": {
        "num_sentences": 10,
        "num_words": 267,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37216199239095055
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_315",
      "text": "In this simplified example, the x-amz-sha256-\ntree-hash and x-amz-content-sha256 are the same value. However, for archive uploads\ngreater than 1 MB, this is not the case. POST /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Mon, 07 May 2012 00:00:00 GMT\nx-amz-archive-description: my archive\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 payload hash\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is shown\nbelow. Note that the streaming header x-amz-content-sha256 is included with its value. This\nmeans you must read the payload and calculate the SHA256 hash first and then compute the\nsignature. POST\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-date:20120507T000000Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-content-sha256;x-amz-date;x-amz-glacier-version\n726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nThe remainder of the signature calculation follows the steps outlined in Example Signature\nCalculation. The Authorization header using the secret access key wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY and the access key AKIAIOSFODNN7EXAMPLE is shown below (with line\nbreaks added for readability):\nAuthorization=AWS4-HMAC-SHA256\nCredential=AKIAIOSFODNN7EXAMPLE/20120507/us-east-1/glacier/aws4_request,\nSignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-glacier-version,\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 344\n\nAmazon S3 Glacier Developer Guide\nSignature=b092397439375d59119072764a1e9a144677c43d9906fd98a5742c57a2855de6\nComputing Checksums\nWhen uploading an archive, you must include both the x-amz-sha256-tree-hash and x-\namz-content-sha256 headers. The x-amz-sha256-tree-hash header is a checksum of the\npayload in your request body.",
      "start_idx": 550706,
      "end_idx": 552681,
      "metadata": {
        "num_sentences": 8,
        "num_words": 193,
        "breakpoint_idx": 3279,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4273219789777483
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_316",
      "text": "This topic describes how to calculate the x-amz-sha256-tree-\nhash header. The x-amz-content-sha256 header is a hash of the entire payload and is required\nfor authorization. For more information, see Example Signature Calculation for Streaming API. The payload of your request can be an:\n\u2022 Entire archive\u2014 When uploading an archive in a single request using the Upload Archive API,\nyou send the entire archive in the request body. In this case, you must include the checksum of\nthe entire archive. \u2022 Archive part\u2014 When uploading an archive in parts using the multipart upload API, you send\nonly a part of the archive in the request body. In this case, you include the checksum of the\narchive part. And after you upload all the parts, you send a Complete Multipart Upload request,\nwhich must include the checksum of the entire archive. The checksum of the payload is a SHA-256 tree hash. It is called a tree hash because in the process\nof computing the checksum you compute a tree of SHA-256 hash values. The hash value at the\nroot is the checksum for the entire archive. Note\nThis section describes a way to compute the SHA-256 tree hash.",
      "start_idx": 552682,
      "end_idx": 554734,
      "metadata": {
        "num_sentences": 12,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4247576395670573
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_317",
      "text": "However, you may use any\nprocedure as long as it produces the same result. You compute the SHA-256 tree hash as follows:\n1. For each 1 MB chunk of payload data, compute the SHA-256 hash. The last chunk of data can be\nless than 1 MB. For example, if you are uploading a 3.2 MB archive, you compute the SHA-256\nComputing Checksums API Version 2012-06-01 345\n\nAmazon S3 Glacier Developer Guide\nhash values for each of the first three 1 MB chunks of data, and then compute the SHA-256 hash\nof the remaining 0.2 MB data. These hash values form the leaf nodes of the tree. 2. Build the next level of the tree. a. Concatenate two consecutive child node hash values and compute the SHA-256 hash of the\nconcatenated hash values. This concatenation and generation of the SHA-256 hash produces\na parent node for the two child nodes. b. If only one child node remains, promote that hash value to the next level in the tree. 3.",
      "start_idx": 552682,
      "end_idx": 554734,
      "metadata": {
        "num_sentences": 13,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2439900422707582
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_318",
      "text": "Repeat step 2 until the resulting tree has a root. The root of the tree provides a hash of the\nentire archive and a root of the appropriate subtree provides the hash for the part in a multipart\nupload. Topics\n\u2022 Tree Hash Example 1: Uploading an archive in a single request\n\u2022 Tree Hash Example 2: Uploading an archive using a multipart upload\n\u2022 Computing the Tree Hash of a File\n\u2022 Receiving Checksums When Downloading Data\nTree Hash Example 1: Uploading an archive in a single request\nWhen you upload an archive in a single request using the Upload Archive API (see Upload Archive\n(POST archive)), the request payload includes the entire archive. Accordingly, you must include\nthe tree hash of the entire archive in the x-amz-sha256-tree-hash request header. Suppose\nyou want to upload a 6.5 MB archive. The following diagram illustrates the process of creating\nthe SHA-256 hash of the archive. You read the archive and compute the SHA-256 hash for each\n1 MB chunk. You also compute the hash for the remaining 0.5 MB data and then build the tree as\noutlined in the preceding procedure. Tree Hash Example 1: Uploading an archive in a single request API Version 2012-06-01 346\n\nAmazon S3 Glacier Developer Guide\nTree Hash Example 2: Uploading an archive using a multipart upload\nThe process of computing the tree hash when uploading an archive using multipart upload is the\nsame when uploading the archive in a single request. The only difference is that in a multipart\nupload you upload only a part of the archive in each request (using the Upload Part (PUT uploadID)\nAPI), and therefore you provide the checksum of only the part in the x-amz-sha256-tree-hash\nrequest header.",
      "start_idx": 554735,
      "end_idx": 560683,
      "metadata": {
        "num_sentences": 10,
        "num_words": 288,
        "chunk_type": "semantic_split",
        "coherence_score": 0.48318570454915366
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_319",
      "text": "However, after you upload all parts, you must send the Complete Multipart Upload\n(see Complete Multipart Upload (POST uploadID)) request with a tree hash of the entire archive in\nthe x-amz-sha256-tree-hash request header. Tree Hash Example 2: Uploading an archive using a multipart upload API Version 2012-06-01 347\n\nAmazon S3 Glacier Developer Guide\nComputing the Tree Hash of a File\nThe algorithms shown here are selected for demonstration purposes. You can optimize the code\nas needed for your implementation scenario. If you are using an Amazon SDK to program against\nAmazon S3 Glacier (S3 Glacier), the tree hash calculation is done for you and you only need to\nprovide the file reference. Example 1: Java Example\nThe following example shows how to calculate the SHA256 tree hash of a file using Java. You\ncan run this example by either supplying a file location as an argument or you can use the\nTreeHashExample.computeSHA256TreeHash method directly from your code. import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nComputing the Tree Hash of a File API Version 2012-06-01 348\n\nAmazon S3 Glacier Developer Guide\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\npublic class TreeHashExample {\nstatic final int ONE_MB = 1024 * 1024;\n/**\n* Compute the Hex representation of the SHA-256 tree hash for the specified\n* File\n*\n* @param args\n* args[0]: a file to compute a SHA-256 tree hash for\n*/\npublic static void main(String[] args) {\nif (args.length < 1) {\nSystem.err.println(\"Missing required filename argument\");\nSystem.exit(-1);\n}\nFile inputFile = new File(args[0]);\ntry {\nbyte[] treeHash = computeSHA256TreeHash(inputFile);\nSystem.out.printf(\"SHA-256 Tree Hash = %s\\n\", toHex(treeHash));\n} catch (IOException ioe) {\nSystem.err.format(\"Exception when reading from file %s: %s\", inputFile,\nioe.getMessage());\nSystem.exit(-1);\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256: %s\",\nnsae.getMessage());\nSystem.exit(-1);\n}\n}\n/**\n* Computes the SHA-256 tree hash for the given file\n*\n* @param inputFile\n* a File to compute the SHA-256 tree hash for\nComputing the Tree Hash of a File API Version 2012-06-01 349\n\nAmazon S3 Glacier Developer Guide\n* @return a byte[] containing the SHA-256 tree hash\n* @throws IOException\n* Thrown if there's an issue reading the input file\n* @throws NoSuchAlgorithmException\n*/\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB. *\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1 MB chunk\n* @throws IOException\n* Thrown if there's an IOException when reading the file\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nComputing the Tree Hash of a File API Version 2012-06-01 350\n\nAmazon S3 Glacier Developer Guide\nint bytesRead;\nint idx = 0;\nint offset = 0;\nwhile ((bytesRead = fileStream.read(buff, offset, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\noffset += bytesRead;\n}\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums. *\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level.",
      "start_idx": 554735,
      "end_idx": 560683,
      "metadata": {
        "num_sentences": 10,
        "num_words": 627,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40199305216471354
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_320",
      "text": "Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level. *\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\nComputing the Tree Hash of a File API Version 2012-06-01 351\n\nAmazon S3 Glacier Developer Guide\npublic static byte[] computeSHA256TreeHash(byte[][] chunkSHA256Hashes)\nthrows NoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.length > 1) {\nint len = prevLvlHashes.length / 2;\nif (prevLvlHashes.length % 2 != 0) {\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.length; i = i + 2, j++) {\n// If there are at least two elements remaining\nif (prevLvlHashes.length - i > 1) {\n// Calculate a digest of the concatenated nodes\nmd.reset();\nmd.update(prevLvlHashes[i]);\nmd.update(prevLvlHashes[i + 1]);\ncurrLvlHashes[j] = md.digest();\n} else { // Take care of remaining odd chunk\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*\n* @param data\n* a byte[] to convert to Hex characters\nComputing the Tree Hash of a File API Version 2012-06-01 352\n\nAmazon S3 Glacier Developer Guide\n* @return A String containing Hex characters\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (int i = 0; i < data.length; i++) {\nString hex = Integer.toHexString(data[i] & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero. sb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\nExample 2: C# .NET Example\nThe following example shows how to calculate the SHA256 tree hash of a file. You can run this\nexample by supplying a file location as an argument. using System;\nusing System.IO;\nusing System.Security.Cryptography;\nnamespace ExampleTreeHash\n{\nclass Program\n{\nstatic int ONE_MB = 1024 * 1024;\n/**\n* Compute the Hex representation of the SHA-256 tree hash for the\n* specified file\n*\n* @param args\n* args[0]: a file to compute a SHA-256 tree hash for\n*/\npublic static void Main(string[] args)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 353\n\nAmazon S3 Glacier Developer Guide\nif (args.Length < 1)\n{\nConsole.WriteLine(\"Missing required filename argument\");\nEnvironment.Exit(-1);\n}\nFileStream inputFile = File.Open(args[0], FileMode.Open, FileAccess.Read);\ntry\n{\nbyte[] treeHash = ComputeSHA256TreeHash(inputFile);\nConsole.WriteLine(\"SHA-256 Tree Hash = {0}\",\nBitConverter.ToString(treeHash).Replace(\"-\", \"\").ToLower());\nConsole.ReadLine();\nEnvironment.Exit(-1);\n}\ncatch (IOException ioe)\n{\nConsole.WriteLine(\"Exception when reading from file {0}: {1}\",\ninputFile, ioe.Message);\nConsole.ReadLine();\nEnvironment.Exit(-1);\n}\ncatch (Exception e)\n{\nConsole.WriteLine(\"Cannot locate MessageDigest algorithm for SHA-256:\n{0}\",\ne.Message);\nConsole.WriteLine(e.GetType());\nConsole.ReadLine();\nEnvironment.Exit(-1);\n}\nConsole.ReadLine();\n}\n/**\n* Computes the SHA-256 tree hash for the given file\n*\n* @param inputFile\n* A file to compute the SHA-256 tree hash for\n* @return a byte[] containing the SHA-256 tree hash\n*/\npublic static byte[] ComputeSHA256TreeHash(FileStream inputFile)\n{\nbyte[][] chunkSHA256Hashes = GetChunkSHA256Hashes(inputFile);\nComputing the Tree Hash of a File API Version 2012-06-01 354\n\nAmazon S3 Glacier Developer Guide\nreturn ComputeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB.",
      "start_idx": 560684,
      "end_idx": 564674,
      "metadata": {
        "num_sentences": 7,
        "num_words": 577,
        "breakpoint_idx": 3331,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2926035381498791
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_321",
      "text": "*\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1MB chunk\n*/\npublic static byte[][] GetChunkSHA256Hashes(FileStream file)\n{\nlong numChunks = file.Length / ONE_MB;\nif (file.Length % ONE_MB > 0)\n{\nnumChunks++;\n}\nif (numChunks == 0)\n{\nreturn new byte[][] { CalculateSHA256Hash(null, 0) };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int)numChunks][];\ntry\n{\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = file.Read(buff, 0, ONE_MB)) > 0)\n{\nchunkSHA256Hashes[idx++] = CalculateSHA256Hash(buff, bytesRead);\n}\nreturn chunkSHA256Hashes;\n}\nfinally\n{\nif (file != null)\n{\ntry\nComputing the Tree Hash of a File API Version 2012-06-01 355\n\nAmazon S3 Glacier Developer Guide\n{\nfile.Close();\n}\ncatch (IOException ioe)\n{\nthrow ioe;\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1MB chunk\n* checksums. *\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level. Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level. *\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n*/\npublic static byte[] ComputeSHA256TreeHash(byte[][] chunkSHA256Hashes)\n{\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.GetLength(0) > 1)\n{\nint len = prevLvlHashes.GetLength(0) / 2;\nif (prevLvlHashes.GetLength(0) % 2 != 0)\n{\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.GetLength(0); i = i + 2, j++)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 356\n\nAmazon S3 Glacier Developer Guide\n// If there are at least two elements remaining\nif (prevLvlHashes.GetLength(0) - i > 1)\n{\n// Calculate a digest of the concatenated nodes\nbyte[] firstPart = prevLvlHashes[i];\nbyte[] secondPart = prevLvlHashes[i + 1];\nbyte[] concatenation = new byte[firstPart.Length +\nsecondPart.Length];\nSystem.Buffer.BlockCopy(firstPart, 0, concatenation, 0,\nfirstPart.Length);\nSystem.Buffer.BlockCopy(secondPart, 0, concatenation,\nfirstPart.Length, secondPart.Length);\ncurrLvlHashes[j] = CalculateSHA256Hash(concatenation,\nconcatenation.Length);\n}\nelse\n{ // Take care of remaining odd chunk\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\npublic static byte[] CalculateSHA256Hash(byte[] inputBytes, int count)\n{\nSHA256 sha256 = System.Security.Cryptography.SHA256.Create();\nbyte[] hash = sha256.ComputeHash(inputBytes, 0, count);\nreturn hash;\n}\n}\n}\nComputing the Tree Hash of a File API Version 2012-06-01 357\n\nAmazon S3 Glacier Developer Guide\nReceiving Checksums When Downloading Data\nWhen you retrieve an archive using the Initiate Job API (see Initiate Job (POST jobs)), you can\noptionally specify a range to retrieve of the archive. Similarly, when you download your data using\nthe Get Job Output API (see Get Job Output (GET output)), you can optionally specify a range of\ndata to download.",
      "start_idx": 564675,
      "end_idx": 567899,
      "metadata": {
        "num_sentences": 6,
        "num_words": 484,
        "breakpoint_idx": 3337,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.34515730539957684
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_322",
      "text": "There are two characteristics of these ranges that are important to understand\nwhen you are retrieving and downloading your archive's data. The range to retrieve is required to\nbe megabyte aligned to the archive. Both the range to retrieve and the range to download must be\ntree hash aligned in order to receive checksum values when you download your data. The definition\nof these two types of range alignments are as follows:\n\u2022 Megabyte aligned - A range [StartByte, EndBytes] is megabyte (1024*1024) aligned when\nStartBytes is divisible by 1 MB and EndBytes plus 1 is divisible by 1 MB or is equal to the end of\nthe archive specified (archive byte size minus 1). A range used in the Initiate Job API, if specified,\nis required to be megabyte aligned. \u2022 Tree-hash aligned - A range [StartBytes, EndBytes] is tree hash aligned with respect to an archive\nif and only if the root of the tree hash built over the range is equivalent to a node in the tree\nhash of the whole archive. Both the range to retrieve and range to download must be tree hash\naligned in order to receive checksum values for the data you download. For an example of ranges\nand their relationship to the archive tree hash, see Tree Hash Example: Retrieving an archive\nrange that is tree-hash aligned. Note that a range that is tree-hash aligned is also megabyte aligned. However, a megabyte\naligned range is not necessarily tree-hash aligned. The following cases describe when you receive a checksum value when you download your archive\ndata:\n\u2022 If you do not specify a range to retrieve in the Initiate Job request and you download the whole\narchive in the Get Job Request. \u2022 If you do not specify a range to retrieve in the Initiate Job request and you do specify a tree-hash\naligned range to download in the Get Job Request. \u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you download\nthe whole range in the Get Job Request. Receiving Checksums When Downloading Data API Version 2012-06-01 358\n\nAmazon S3 Glacier Developer Guide\n\u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you specify a\ntree-hash aligned range to download in the Get Job Request.",
      "start_idx": 567900,
      "end_idx": 572258,
      "metadata": {
        "num_sentences": 14,
        "num_words": 388,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5119437752189216
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_323",
      "text": "If you specify a range to retrieve in the Initiate Job request that is not tree hash aligned, then you\ncan still get your archive data but no checksum values are returned when you download data in the\nGet Job Request. Tree Hash Example: Retrieving an archive range that is tree-hash aligned\nSuppose you have a 6.5 MB archive in your vault and you want to retrieve 2 MB of the archive. How\nyou specify the 2 MB range in the Initiate Job request determines if you receive data checksum\nvalues when you download your data. The following diagram illustrates two 2 MB ranges for the\n6.5 MB archive that you could download. Both ranges are megabyte aligned, but only one is tree-\nhash aligned. Tree-Hash Aligned Range Specification\nThis section gives the exact specification for what constitutes a tree-hash aligned range. Tree-hash\naligned ranges are important when you are downloading a portion of an archive and you specify\nReceiving Checksums When Downloading Data API Version 2012-06-01 359\n\nAmazon S3 Glacier Developer Guide\nthe range of data to retrieve and the range to download from the retrieved data. If both of these\nranges are tree-hash aligned, then you will receive checksum data when you download the data. A range [A, B] is tree-hash aligned with respect to an archive if and only if when a new tree hash\nis built over [A, B], the root of the tree hash of that range is equivalent to a node in the tree hash\nof the whole archive. You can see this shown in the diagram in Tree Hash Example: Retrieving an\narchive range that is tree-hash aligned. In this section, we provide the specification for tree-hash\nalignment. Consider [P, Q) as the range query for an archive of N megabytes (MB) and P and Q are multiples of\none MB. Note that the actual inclusive range is [P MB, Q MB \u2013 1 byte], but for simplicity, we show it\nas [P, Q). With these considerations, then\n\u2022 If P is an odd number, there is only one possible tree-hash aligned range\u2014that is [P, P + 1 MB). \u2022 If P is an even number and k is the maximum number, where P can be written as 2k * X, then\nthere are at most k tree-hash aligned ranges that start with P. X is an integer greater than 0.",
      "start_idx": 567900,
      "end_idx": 572258,
      "metadata": {
        "num_sentences": 15,
        "num_words": 398,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4658140636625744
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_324",
      "text": "The\ntree-hash aligned ranges fall in the following categories:\n\u2022 i i\nFor each i, where (0 <= i <= k) and where P + 2 < N, then [P, Q + 2) is a tree-hash aligned\nrange. \u2022 P = 0 is the special case where A = 2[lgN]*0\nError Responses\nIn the event of an error, the API returns one of the following exceptions:\nCode Description HTTP Status Type\nCode\nAccessDeniedException Returned if there was an attempt 403 Client\nto access a resource not allowed Forbidden\nby an AWS Identity and Access\nManagement (IAM) policy, or the\nincorrect AWS account ID was\nused in the request URI. For more\ninformation, see Identity and\nError Responses API Version 2012-06-01 360\n\nAmazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nAccess Management for Amazon\nS3 Glacier. BadRequest Returned if the request cannot 400 Bad Client\nbe processed.",
      "start_idx": 572259,
      "end_idx": 573096,
      "metadata": {
        "num_sentences": 4,
        "num_words": 149,
        "breakpoint_idx": 3370,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.22528056303660074
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_325",
      "text": "Request\nExpiredTokenException Returned if the security token 403 Client\nused in the request has expired. Forbidden\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process the expedited Unavailab\nrequest. This error only applies le\nto expedited retrievals and not\nto standard or bulk retrievals. InvalidParameterVa Returned if a parameter of the 400 Bad Client\nlueException request is incorrectly specified. Request\nInvalidSignatureEx Returned if the request signature 403 Client\nception is invalid. Forbidden\nLimitExceededException Returned if the request results in 400 Bad Client\none of the following limits being Request\nexceeded, a vault limit, a tags\nlimit, or the provisioned capacity\nlimit. MissingAuthenticat Returned if no authentication 400 Bad Client\nionTokenException data is found for the request. Request\nMissingParameterVa Returned if a required header or 400 Bad Client\nlueException parameter is missing from the Request\nrequest. Error Responses API Version 2012-06-01 361\n\nAmazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nPolicyEnforcedExce Returned if a retrieval job will 400 Bad Client\nption exceed the current data policy's Request\nretrieval rate limit. For more\ninformation about data retrieval\npolicies, see S3 Glacier Data\nRetrieval Policies.",
      "start_idx": 573097,
      "end_idx": 577243,
      "metadata": {
        "num_sentences": 10,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3760635799831814
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_326",
      "text": "ResourceNotFoundEx Returned if the specified 404 Not Client\nception resource such as a vault, upload Found\nID, or job ID does not exist. RequestTimeoutExce Returned if uploading an archive 408 Request Client\nption and Amazon S3 Glacier (S3 Timeout\nGlacier) times out while receiving\nthe upload. SerializationException Returned if the body of the 400 Bad Client\nrequest is invalid. If including a Request\nJSON payload, check that it is\nwell-formed. ServiceUnavailable Returned if the service cannot 500 Server\nException complete the request. Internal\nServer\nError\nThrottlingException Returned if you need to reduce 400 Bad Client\nyour rate of requests to S3 Request\nGlacier. UnrecognizedClient Returned if the Access Key ID or 400 Bad Client\nException security token is invalid. Request\nVarious S3 Glacier APIs return the same exception, but with different exception messages to help\nyou troubleshoot the specific error encountered. Error Responses API Version 2012-06-01 362\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier returns error information in the response body. The following examples show some of\nthe error responses.",
      "start_idx": 573097,
      "end_idx": 577243,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37553719414605036
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_327",
      "text": "Example 1: Describe Job request with a job ID that does not exist\nSuppose you send a Describe Job (GET JobID) request for a job that does not exist. That is, you\nspecify a job ID that does not exist. GET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nIn response, S3 Glacier returns the following error response. HTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABaZ9N92Iiyv4N7sru3ABEpSQkuFtmH3NP6aAC51ixfjg\nContent-Type: application/json\nContent-Length: 185\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"The job ID was not found: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID\",\n\"type\": \"Client\"\n}\nWhere:\nCode\nOne of the general exceptions. Type: String\nMessage\nA generic description of the error condition specific to the API that returns the error. Example 1: Describe Job request with a job ID that does not exist API Version 2012-06-01 363\n\nAmazon S3 Glacier Developer Guide\nType: String\nType\nThe source of the error. The field can be one of the following values: Client, Server, or\nUnknown. Type: String. Note the following in the preceding response:\n\u2022 For the error response, S3 Glacier returns status code values of 4xx and 5xx. In this example, the\nstatus code is 404 Not Found.",
      "start_idx": 573097,
      "end_idx": 577243,
      "metadata": {
        "num_sentences": 10,
        "num_words": 198,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3257205115424262
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_328",
      "text": "\u2022 The Content-Type header value application/json indicates JSON in the body\n\u2022 The JSON in the body provides the error information. In the previous request, instead of a bad job ID, suppose you specify a vault that does not exist. The\nresponse returns a different message. HTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABBeC9Zw0rp_5D0L8VfB3FA_WlTupqTKAUehMcPhdgni0\nContent-Type: application/json\nContent-Length: 154\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"Vault not found for ARN: arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault\",\n\"type\": \"Client\"\n}\nExample 2: List Jobs request with an invalid value for the request\nparameter\nIn this example you send a List Jobs (GET jobs) request to retrieve vault jobs with a specific\nstatuscode, and you provide an incorrect statuscode value finished, instead of the\nacceptable values InProgress, Succeeded, or Failed. GET /-/vaults/examplevault/jobs?statuscode=finished HTTP/1.1\nExample 2: List Jobs request with an invalid value for the request parameter API Version 2012-06-01 364\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.us-west-2.amazonaws.com\nDate: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nS3 Glacier returns the InvalidParameterValueException with an appropriate message. HTTP/1.1 400 Bad Request\nx-amzn-RequestId: AAABaZ9N92Iiyv4N7sru3ABEpSQkuFtmH3NP6aAC51ixfjg\nContent-Type: application/json\nContent-Length: 141\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"InvalidParameterValueException\",\n\"message\": \"The job status code is not valid: finished\",\n\"type: \"Client\"\n}\nVault Operations\nThe following are the vault operations available in S3 Glacier. Topics\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 Create Vault (PUT vault)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Describe Vault (GET vault)\n\u2022 Get Vault Access Policy (GET access-policy)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Get Vault Notifications (GET notification-configuration)\nVault Operations API Version 2012-06-01 365\n\nAmazon S3 Glacier Developer Guide\n\u2022 Initiate Vault Lock (POST lock-policy)\n\u2022 List Tags For Vault (GET tags)\n\u2022 List Vaults (GET vaults)\n\u2022 Remove Tags From Vault (POST tags remove)\n\u2022 Set Vault Access Policy (PUT access-policy)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\nAbort Vault Lock (DELETE lock-policy)\nDescription\nThis operation stops the vault locking process if the vault lock is not in the Locked state. If the\nvault lock is in the Locked state when this operation is requested, the operation returns an\nAccessDeniedException error. Stopping the vault locking process removes the vault lock policy\nfrom the specified vault. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can get\nthe state of a vault lock by calling Get Vault Lock (GET lock-policy).",
      "start_idx": 577244,
      "end_idx": 581941,
      "metadata": {
        "num_sentences": 12,
        "num_words": 439,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38488627925063623
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_329",
      "text": "For more information about the\nvault locking process, see S3 Glacier Vault Lock. For more information about vault lock policies, see\nVault Lock Policies. This operation is idempotent. You can successfully invoke this operation multiple times, if the vault\nlock is in the InProgress state or if there is no policy associated with the vault. Requests\nTo delete the vault lock policy, send an HTTP DELETE request to the URI of the vault's lock-\npolicy subresource. Syntax\nDELETE /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nAbort Vault Lock API Version 2012-06-01 366\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 577244,
      "end_idx": 581941,
      "metadata": {
        "num_sentences": 12,
        "num_words": 208,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24941161184599905
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_330",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIf the policy is successfully deleted, S3 Glacier returns an HTTP 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 581942,
      "end_idx": 582271,
      "metadata": {
        "num_sentences": 3,
        "num_words": 49,
        "breakpoint_idx": 3427,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.37898604075113934
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_331",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Abort Vault Lock API Version 2012-06-01 367\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to stop the vault locking process. Example Request\nIn this example, a DELETE request is sent to the lock-policy subresource of the vault named\nexamplevault. DELETE /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nx-amz-glacier-version: 2012-06-01\nExample Response\nIf the policy is successfully deleted S3 Glacier returns an HTTP 204 No Content response, as\nshown in the following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nAbort Vault Lock API Version 2012-06-01 368\n\nAmazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nAdd Tags To Vault (POST tags add)\nThis operation adds the specified tags to a vault. Each tag is composed of a key and a value.",
      "start_idx": 582272,
      "end_idx": 583925,
      "metadata": {
        "num_sentences": 8,
        "num_words": 209,
        "breakpoint_idx": 3435,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2748745509556362
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_332",
      "text": "Each\nvault can have up to 50 tags. If your request would cause the tag limit for the vault to be exceeded,\nthe operation throws the LimitExceededException error. If a tag already exists on the vault under a specified key, the existing key value will be overwritten. For more information about tags, see Tagging Amazon S3 Glacier Resources. Request Syntax\nTo add tags to a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example. POST /AccountId/vaults/vaultName/tags?operation=add HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"string\": \"string\",\n\"string\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\nAdd Tags To Vault API Version 2012-06-01 369\n\nAmazon S3 Glacier Developer Guide\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nName Description Required\noperation=add A single query string parameter operation with a value Yes\nof add to distinguish it from Remove Tags From Vault (POST\ntags remove). Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 583926,
      "end_idx": 585415,
      "metadata": {
        "num_sentences": 11,
        "num_words": 235,
        "breakpoint_idx": 3446,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3700901378284801
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_333",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. Tags\nThe tags to add to the vault. Each tag is composed of a key and a value.",
      "start_idx": 585416,
      "end_idx": 585633,
      "metadata": {
        "num_sentences": 4,
        "num_words": 38,
        "breakpoint_idx": 3450,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23721845944722494
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_334",
      "text": "The value can be an\nempty string. Type: String to String map\nLength constraints: Minimum length of 1. Maximum length 10.",
      "start_idx": 585634,
      "end_idx": 585754,
      "metadata": {
        "num_sentences": 3,
        "num_words": 21,
        "breakpoint_idx": 3453,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3151262601216634
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_335",
      "text": "Required: Yes\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nAdd Tags To Vault API Version 2012-06-01 370\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP POST request with the tags to add to the vault. POST /-/vaults/examplevault/tags?operation=add HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"examplekey1\": \"examplevalue1\",\n\"examplekey2\": \"examplevalue2\"\n}\n}\nExample Response\nIf the request was successful S3 Glacier returns a HTTP 204 No Content as shown in the\nfollowing example. Add Tags To Vault API Version 2012-06-01 371\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 List Tags For Vault (GET tags)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nCreate Vault (PUT vault)\nDescription\nThis operation creates a new vault with the specified name. The name of the vault must be unique\nwithin an AWS Region for an AWS account. You can create up to 1,000 vaults per account. For\ninformation on creating more vaults, go to the Amazon S3 Glacier product detail page. You must use the following guidelines when naming a vault. \u2022 Names can be between 1 and 255 characters long. \u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.'",
      "start_idx": 585755,
      "end_idx": 588028,
      "metadata": {
        "num_sentences": 14,
        "num_words": 308,
        "breakpoint_idx": 3467,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2717666206779061
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_336",
      "text": "(period). This operation is idempotent, you can send the same request multiple times and it has no further\neffect after the first time Amazon S3 Glacier (S3 Glacier) creates the specified vault. Create Vault API Version 2012-06-01 372\n\nAmazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo create a vault, send an HTTP PUT request to the URI of the vault to be created. PUT /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 588029,
      "end_idx": 589219,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "breakpoint_idx": 3477,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2888029310438368
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_337",
      "text": "Request Body\nThe request body for this operation must be empty (0 bytes). Responses\nSyntax\nHTTP/1.1 201 Created\nCreate Vault API Version 2012-06-01 373\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation The relative URI path of the vault that was created. Type: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP PUT request to create a vault named examplevault. PUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nContent-Length: 0\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nCreate Vault API Version 2012-06-01 374\n\nAmazon S3 Glacier Developer Guide\nExample Response\nS3 Glacier creates the vault and returns the relative URI path of the vault in the Location header. The account ID is always displayed in the Location header regardless of whether the account ID or\na hyphen ('-') was specified in the request. HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nLocation: /111122223333/vaults/examplevault\nRelated Sections\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nComplete Vault Lock (POST lockId)\nDescription\nThis operation completes the vault locking process by transitioning the vault lock from\nthe InProgress state to the Locked state, which causes the vault lock policy to become\nunchangeable. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST\nlock-policy). You can obtain the state of the vault lock by calling Get Vault Lock (GET lock-policy).",
      "start_idx": 589220,
      "end_idx": 593256,
      "metadata": {
        "num_sentences": 12,
        "num_words": 322,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30068302154541016
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_338",
      "text": "For more information about the vault locking process, see S3 Glacier Vault Lock. This operation is idempotent. This request is always successful if the vault lock is in the Locked\nstate and the provided lock ID matches the lock ID originally used to lock the vault. Complete Vault Lock API Version 2012-06-01 375\n\nAmazon S3 Glacier Developer Guide\nIf an invalid lock ID is passed in the request when the vault lock is in the Locked state, the\noperation returns an AccessDeniedException error. If an invalid lock ID is passed in the request\nwhen the vault lock is in the InProgress state, the operation throws an InvalidParameter\nerror. Requests\nTo complete the vault locking process, send an HTTP POST request to the URI of the vault's lock-\npolicy subresource with a valid lock ID. Syntax\nPOST /AccountId/vaults/vaultName/lock-policy/lockId HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. The lockId value is the lock ID obtained from a Initiate Vault Lock (POST lock-policy) request. Request Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 589220,
      "end_idx": 593256,
      "metadata": {
        "num_sentences": 12,
        "num_words": 255,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3733645930434718
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_339",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Complete Vault Lock API Version 2012-06-01 376\n\nAmazon S3 Glacier Developer Guide\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 593257,
      "end_idx": 593744,
      "metadata": {
        "num_sentences": 4,
        "num_words": 71,
        "breakpoint_idx": 3505,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.35347286860148114
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_340",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP POST request with the lock ID to complete the vault locking\nprocess. POST /-/vaults/examplevault/lock-policy/AE863rKkWZU53SLW5be4DUcW HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 204 No Content\nresponse, as shown in the following example. Complete Vault Lock API Version 2012-06-01 377\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault (DELETE vault)\nDescription\nThis operation deletes a vault. Amazon S3 Glacier (S3 Glacier) will delete a vault only if there are no\narchives in the vault as per the last inventory and there have been no writes to the vault since the\nlast inventory. If either of these conditions is not satisfied, the vault deletion fails (that is, the vault\nis not removed) and S3 Glacier returns an error. You can use the Describe Vault (GET vault) operation that provides vault information, including\nthe number of archives in the vault; however, the information is based on the vault inventory S3\nGlacier last generated.",
      "start_idx": 593745,
      "end_idx": 596893,
      "metadata": {
        "num_sentences": 9,
        "num_words": 270,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35577381981743705
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_341",
      "text": "This operation is idempotent. Delete Vault API Version 2012-06-01 378\n\nAmazon S3 Glacier Developer Guide\nNote\nWhen you delete a vault, the vault access policy attached to the vault is also deleted. For\nmore information about vault access policies, see Vault Access Policies. Requests\nTo delete a vault, send a DELETE request to the vault resource URI. Syntax\nDELETE /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 593745,
      "end_idx": 596893,
      "metadata": {
        "num_sentences": 10,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2484397464328342
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_342",
      "text": "Request Body\nThis operation does not have a request body. Delete Vault API Version 2012-06-01 379\n\nAmazon S3 Glacier Developer Guide\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example deletes a vault named examplevault. The example request is a DELETE\nrequest to the URI of the resource (the vault) to delete. DELETE /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nDelete Vault API Version 2012-06-01 380\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault Access Policy (DELETE access-policy)\nDescription\nThis operation deletes the access policy associated with the specified vault. The operation is\neventually consistent\u2014that is, it might take some time for Amazon S3 Glacier (S3 Glacier) to\ncompletely remove the access policy, and you might still see the effect of the policy for a short\ntime after you send the delete request.",
      "start_idx": 596894,
      "end_idx": 600067,
      "metadata": {
        "num_sentences": 9,
        "num_words": 258,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3523281945122613
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_343",
      "text": "This operation is idempotent. You can invoke delete multiple times, even if there is no policy\nassociated with the vault. For more information about vault access policies, see Vault Access\nPolicies. Requests\nTo delete the current vault access policy, send an HTTP DELETE request to the URI of the vault's\naccess-policy subresource. Syntax\nDELETE /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nDelete Vault Access Policy API Version 2012-06-01 381\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 596894,
      "end_idx": 600067,
      "metadata": {
        "num_sentences": 10,
        "num_words": 175,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24451811048719618
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_344",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIn response, S3 Glacier returns 204 No Content if the policy is successfully deleted. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 600068,
      "end_idx": 600392,
      "metadata": {
        "num_sentences": 3,
        "num_words": 48,
        "breakpoint_idx": 3546,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32821353276570636
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_345",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Delete Vault Access Policy API Version 2012-06-01 382\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to delete a vault access policy. Example Request\nIn this example, a DELETE request is sent to the access-policy subresource of the vault named\nexamplevault. DELETE /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nx-amz-glacier-version: 2012-06-01\nExample Response\nIn response, if the policy is successfully deleted S3 Glacier returns a 204 No Content as shown in\nthe following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Get Vault Access Policy (GET access-policy)\n\u2022 Set Vault Access Policy (PUT access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\nDelete Vault Access Policy API Version 2012-06-01 383\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nDelete Vault Notifications (DELETE notification-configuration)\nDescription\nThis operation deletes the notification configuration set for a vault Set Vault Notification\nConfiguration (PUT notification-configuration). The operation is eventually consistent\u2014that is, it\nmight take some time for Amazon S3 Glacier (S3 Glacier) to completely disable the notifications,\nand you might still receive some notifications for a short time after you send the delete request. Requests\nTo delete a vault's notification configuration, send a DELETE request to the vault's\nnotification-configuration subresource. Syntax\nDELETE /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 600393,
      "end_idx": 603206,
      "metadata": {
        "num_sentences": 14,
        "num_words": 358,
        "breakpoint_idx": 3560,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3327718043065333
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_346",
      "text": "For information about\ncommon request headers, see Common Request Headers. Delete Vault Notifications API Version 2012-06-01 384\n\nAmazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 603207,
      "end_idx": 603608,
      "metadata": {
        "num_sentences": 3,
        "num_words": 56,
        "breakpoint_idx": 3563,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3402221202850342
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_347",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to remove notification configuration for a vault. Example Request\nIn this example, a DELETE request is sent to the notification-configuration subresource of\nthe vault called examplevault. DELETE /111122223333/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Vault Notifications API Version 2012-06-01 385\n\nAmazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDescribe Vault (GET vault)\nDescription\nThis operation returns information about a vault, including the vault Amazon Resource Name\n(ARN), the date the vault was created, the number of archives contained within the vault, and the\ntotal size of all the archives in the vault. The number of archives and their total size are as of the\nlast vault inventory Amazon S3 Glacier (S3 Glacier) generated (see Working with Vaults in Amazon\nS3 Glacier).",
      "start_idx": 603609,
      "end_idx": 605512,
      "metadata": {
        "num_sentences": 7,
        "num_words": 228,
        "breakpoint_idx": 3570,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2809975941975911
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_348",
      "text": "S3 Glacier generates vault inventories approximately daily. This means that if you\nadd or remove an archive from a vault, and then immediately send a Describe Vault request, the\nresponse might not reflect the changes. Requests\nTo get information about a vault, send a GET request to the URI of the specific vault resource. Syntax\nGET /AccountId/vaults/VaultName HTTP/1.1\nDescribe Vault API Version 2012-06-01 386\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"CreationDate\" : String,\n\"LastInventoryDate\" : String,\n\"NumberOfArchives\" : Number,\n\"SizeInBytes\" : Number,\nDescribe Vault API Version 2012-06-01 387\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\" : String,\n\"VaultName\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. CreationDate\nThe UTC date when the vault was created.",
      "start_idx": 605513,
      "end_idx": 610231,
      "metadata": {
        "num_sentences": 14,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2970495119199648
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_349",
      "text": "Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. LastInventoryDate\nThe UTC date when S3 Glacier completed the last vault inventory. For information about\ninitiating an inventory for a vault, see Initiate Job (POST jobs). Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. NumberOfArchives\nThe number of archives in the vault as per the last vault inventory. This field will return null if\nan inventory has not yet run on the vault, for example, if you just created the vault. Type: Number\nSizeInBytes\nThe total size in bytes of the archives in the vault including any per-archive overhead, as of the\nlast inventory date. This field will return null if an inventory has not yet run on the vault, for\nexample, if you just created the vault. Type: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault. Describe Vault API Version 2012-06-01 388\n\nAmazon S3 Glacier Developer Guide\nType: String\nVaultName\nThe vault name that was specified at creation time. The vault name is also included in the\nvault's ARN. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example demonstrates how to get information about the vault named\nexamplevault. GET /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 260\n{\n\"CreationDate\" : \"2012-02-20T17:01:45.198Z\",\n\"LastInventoryDate\" : \"2012-03-20T17:03:43.221Z\",\n\"NumberOfArchives\" : 192,\n\"SizeInBytes\" : 78088912,\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"VaultName\" : \"examplevault\"\nDescribe Vault API Version 2012-06-01 389\n\nAmazon S3 Glacier Developer Guide\n}\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Access Policy (GET access-policy)\nDescription\nThis operation retrieves the access-policy subresource set on the vault\u2014for more information\non setting this subresource, see Set Vault Access Policy (PUT access-policy). If there is no access\npolicy set on the vault, the operation returns a 404 Not found error.",
      "start_idx": 605513,
      "end_idx": 610231,
      "metadata": {
        "num_sentences": 15,
        "num_words": 378,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3727108909970238
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_350",
      "text": "For more information about\nvault access policies, see Vault Access Policies. Requests\nTo return the current vault access policy, send an HTTP GET request to the URI of the vault's\naccess-policy subresource. Syntax\nGET /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nGet Vault Access Policy API Version 2012-06-01 390\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response. Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 610232,
      "end_idx": 614290,
      "metadata": {
        "num_sentences": 11,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33323856700550425
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_351",
      "text": "For information\nabout common response headers, see Common Response Headers. Get Vault Access Policy API Version 2012-06-01 391\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields. Policy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to get a vault access policy. Example Request\nIn this example, a GET request is sent to the URI of a vault's access-policy subresource. GET /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nSet Vault Access Policy (PUT access-policy) examples. However, the following example shows the\nreturned JSON string without escape characters for readability. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nGet Vault Access Policy API Version 2012-06-01 392\n\nAmazon S3 Glacier Developer Guide\nContent-Length: length\n{\n\"Policy\": \"\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"allow-time-based-deletes\",\n\"Principal\": {\n\"AWS\": \"999999999999\"\n},\n\"Effect\": \"Allow\",\n\"Action\": \"glacier:Delete*\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n],\n\"Condition\": {\n\"DateGreaterThan\": {\n\"aws:CurrentTime\": \"2018-12-31T00:00:00Z\"\n}\n}\n}\n]\n}\n\"\n}\nRelated Sections\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Set Vault Access Policy (PUT access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Access Policy API Version 2012-06-01 393\n\nAmazon S3 Glacier Developer Guide\nGet Vault Lock (GET lock-policy)\nDescription\nThis operation retrieves the following attributes from the lock-policy subresource set on the\nspecified vault:\n\u2022 The vault lock policy set on the vault. \u2022 The state of the vault lock, which is either InProgess or Locked.",
      "start_idx": 610232,
      "end_idx": 614290,
      "metadata": {
        "num_sentences": 11,
        "num_words": 330,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4105051214044744
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_352",
      "text": "\u2022 When the lock ID expires. The lock ID is used to complete the vault locking process. \u2022 When the vault lock was initiated and put into the InProgress state. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can stop\nthe vault locking process by calling Abort Vault Lock (DELETE lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock. If there is no vault lock policy set on the vault, the operation returns a 404 Not found error. For\nmore information about vault lock policies, see Vault Lock Policies. Requests\nTo return the current vault lock policy and other attributes, send an HTTP GET request to the URI\nof the vault's lock-policy subresource as shown in the following syntax example. Syntax\nGET /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nGet Vault Lock API Version 2012-06-01 394\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 614291,
      "end_idx": 615752,
      "metadata": {
        "num_sentences": 13,
        "num_words": 239,
        "breakpoint_idx": 3634,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.48515980060283953
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_353",
      "text": "Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response. Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\",\n\"State\": \"string\",\n\"ExpirationDate\": \"string\",\n\"CreationDate\":\"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Get Vault Lock API Version 2012-06-01 395\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields. Policy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nState\nThe state of the vault lock. Type: String\nValid values: InProgress|Locked\nExpirationDate\nThe UTC date and time at which the lock ID expires.",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 11,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31511722911487927
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_354",
      "text": "This value can be null if the vault lock is in\na Locked state. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. CreationDate\nThe UTC date and time at which the vault lock was put into the InProgress state. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to get a vault lock policy. Example Request\nIn this example, a GET request is sent to the URI of a vault's lock-policy subresource. Get Vault Lock API Version 2012-06-01 396\n\nAmazon S3 Glacier Developer Guide\nGET /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nInitiate Vault Lock (POST lock-policy) example request. However, the following example shows the\nreturned JSON string without escape characters for readability. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Define-vault-lock\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::999999999999:root\"\n},\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThanEquals\": {\n\"glacier:ArchiveAgeInDays\": \"365\"\n}\n}\n}\nGet Vault Lock API Version 2012-06-01 397\n\nAmazon S3 Glacier Developer Guide\n]\n}\n\",\n\"State\": \"InProgress\",\n\"ExpirationDate\": \"exampledate\",\n\"CreationDate\": \"exampledate\"\n}\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Notifications (GET notification-configuration)\nDescription\nThis operation retrieves the notification-configuration subresource set on the vault (see\nSet Vault Notification Configuration (PUT notification-configuration).",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 11,
        "num_words": 324,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34207354458895595
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_355",
      "text": "If notification configuration\nfor a vault is not set, the operation returns a 404 Not Found error. For more information about\nvault notifications, see Configuring Vault Notifications in Amazon S3 Glacier. Requests\nTo retrieve the notification configuration information, send a GET request to the URI of a vault's\nnotification-configuration subresource. Get Vault Notifications API Version 2012-06-01 398\n\nAmazon S3 Glacier Developer Guide\nSyntax\nGET /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\nGet Vault Notifications API Version 2012-06-01 399\n\nAmazon S3 Glacier Developer Guide\n\"Events\": [\nString,\n...\n],\n\"SNSTopic\": String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 11,
        "num_words": 230,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32593612670898436
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_356",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. Events\nA list of one or more events for which Amazon S3 Glacier (S3 Glacier) will send a notification\nto the specified Amazon SNS topic. For information about vault events for which you can\nconfigure a vault to publish notifications, see Set Vault Notification Configuration (PUT\nnotification-configuration). Type: Array\nSNSTopic\nThe Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN). For more information, see Getting Started with Amazon SNS in the Amazon Simple Notification\nService Getting Started Guide. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to retrieve the notification configuration for a vault. Get Vault Notifications API Version 2012-06-01 400\n\nAmazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to the notification-configuration subresource of a\nvault. GET /-/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the audit logging configuration document in the body of the response\nin JSON format. In this example, the configuration shows that notifications for two events\n(ArchiveRetrievalCompleted and InventoryRetrievalCompleted) are sent to the Amazon\nSNS topic arn:aws:sns:us-west-2:012345678901:mytopic. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 150\n{\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nRelated Sections\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Vault Notifications API Version 2012-06-01 401\n\nAmazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nInitiate Vault Lock (POST lock-policy)\nDescription\nThis operation initiates the vault locking process by doing the following:\n\u2022 Installing a vault lock policy on the specified vault. \u2022 Setting the lock state of vault lock to InProgress.",
      "start_idx": 615753,
      "end_idx": 624062,
      "metadata": {
        "num_sentences": 13,
        "num_words": 337,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3413998530461238
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_357",
      "text": "\u2022 Returning a lock ID, which is used to complete the vault locking process. You can set one vault lock policy for each vault and this policy can be up to 20 KB in size. For more\ninformation about vault lock policies, see Vault Lock Policies. You must complete the vault locking process within 24 hours after the vault lock enters the\nInProgress state. After the 24 hour window ends, the lock ID expires, the vault automatically\nexits the InProgress state, and the vault lock policy is removed from the vault. You call Complete\nVault Lock (POST lockId) to complete the vault locking process by setting the state of the vault lock\nto Locked. Note\nAfter a vault lock is in the Locked state, you cannot initiate a new vault lock for the vault. You can stop the vault locking process by calling Abort Vault Lock (DELETE lock-policy). You can\nget the state of the vault lock by calling Get Vault Lock (GET lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock.",
      "start_idx": 624063,
      "end_idx": 626454,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6243994818793402
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_358",
      "text": "If this operation is called when the vault lock is in the InProgress state, the operation returns an\nAccessDeniedException error. When the vault lock is in the InProgress state you must call\nAbort Vault Lock (DELETE lock-policy) before you can initiate a new vault lock policy. Initiate Vault Lock API Version 2012-06-01 402\n\nAmazon S3 Glacier Developer Guide\nRequests\nTo initiate the vault locking process, send an HTTP POST request to the URI of the lock-policy\nsubresource of the vault, as shown in the following syntax example. Syntax\nPOST /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 624063,
      "end_idx": 626454,
      "metadata": {
        "num_sentences": 10,
        "num_words": 213,
        "chunk_type": "semantic_split",
        "coherence_score": 0.287069574991862
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_359",
      "text": "Request Body\nThe request body contains the following JSON fields. Initiate Vault Lock API Version 2012-06-01 403\n\nAmazon S3 Glacier Developer Guide\nPolicy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nRequired: Yes\nResponses\nAmazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created response, if the policy is accepted. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-lock-id: lockId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nx-amz-lock-\nThe lock ID, which is used to complete the vault locking process. id\nType: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Initiate Vault Lock API Version 2012-06-01 404\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's lock-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character. PUT /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-\nlock\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\",\\\"Condition\\\":{\\\"NumericLessThanEquals\\\":\n{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\nExample Response\nIf the request was successful, S3 Glacier returns an HTTP 201 Created response, as shown in the\nfollowing example.",
      "start_idx": 626455,
      "end_idx": 630335,
      "metadata": {
        "num_sentences": 11,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34003923589533025
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_360",
      "text": "HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-lock-id: AE863rKkWZU53SLW5be4DUcW\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\nInitiate Vault Lock API Version 2012-06-01 405\n\nAmazon S3 Glacier Developer Guide\n\u2022 Get Vault Lock (GET lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Tags For Vault (GET tags)\nThis operation lists all the tags attached to a vault. The operation returns an empty map if there\nare no tags. For more information about tags, see Tagging Amazon S3 Glacier Resources. Request Syntax\nTo list the tags for a vault, send an HTTP GET request to the tags URI as shown in the following\nsyntax example. GET /AccountId/vaults/vaultName/tags HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. List Tags For Vault API Version 2012-06-01 406\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.",
      "start_idx": 626455,
      "end_idx": 630335,
      "metadata": {
        "num_sentences": 11,
        "num_words": 265,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33030118075284093
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_361",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIf the operation is successful, the service sends back an HTTP 200 OK response. Response Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Tags\":\n{\n\"string\" : \"string\",\n\"string\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. Tags\nThe tags attached to the vault.",
      "start_idx": 630336,
      "end_idx": 630947,
      "metadata": {
        "num_sentences": 6,
        "num_words": 90,
        "breakpoint_idx": 3728,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3347520192464193
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_362",
      "text": "Each tag is composed of a key and a value. Type: String to String map\nRequired: Yes\nList Tags For Vault API Version 2012-06-01 407\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample: List Tags For a Vault\nThe following example lists the tags for a vault. Example Request\nIn this example, a GET request is sent to retrieve a list of tags from the specified vault. GET /-/vaults/examplevault/tags HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 200 OK with a list of\ntags for the vault as shown in the following example. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"Tags\",\n{\n\"examplekey1\": \"examplevalue1\",\n\"examplekey2\": \"examplevalue2\"\n}\n}\nRelated Sections\nList Tags For Vault API Version 2012-06-01 408\n\nAmazon S3 Glacier Developer Guide\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Vaults (GET vaults)\nDescription\nThis operation lists all vaults owned by the calling user\u2019s account. The list returned in the response\nis ASCII-sorted by vault name. By default, this operation returns up to 10 items per request.",
      "start_idx": 630948,
      "end_idx": 633983,
      "metadata": {
        "num_sentences": 8,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4702847344534738
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_363",
      "text": "If there are more vaults to list, the\nmarker field in the response body contains the vault Amazon Resource Name (ARN) at which to\ncontinue the list with a new List Vaults request; otherwise, the marker field is null. In your next\nList Vaults request you set the marker parameter to the value Amazon S3 Glacier (S3 Glacier)\nreturned in the responses to your previous List Vaults request. You can also limit the number of\nvaults returned in the response by specifying the limit parameter in the request. Requests\nTo get a list of vaults, you send a GET request to the vaults resource. Syntax\nGET /AccountId/vaults HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nList Vaults API Version 2012-06-01 409\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 630948,
      "end_idx": 633983,
      "metadata": {
        "num_sentences": 8,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41503661019461496
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_364",
      "text": "Request Parameters\nThis operation uses the following request parameters. Name Description Required\nlimit No\nThe maximum number of vaults to be returned. The default\nlimit is 10. The number of vaults returned might be fewer\nthan the specified limit, but the number of returned vaults\nnever exceeds the limit. Type: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 10.\nmarker No\nA string used for pagination. marker specifies the vault ARN\nafter which the listing of vaults should begin. (The vault\nspecified by marker is not included in the returned list.) Get\nthe marker value from a previous List Vaults response. You\nneed to include the m arker only if you are continuing the\npagination of results started in a previous List Vaults request.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 127,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32152218288845485
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_365",
      "text": "Specifying an empty value (\"\") for the marker returns a list of\nvaults starting from the first vault. Type: String\nConstraints: None\nList Vaults API Version 2012-06-01 410\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Marker\": String\n\"VaultList\": [\n{\n\"CreationDate\": String,\n\"LastInventoryDate\": String,\n\"NumberOfArchives\": Number,\n\"SizeInBytes\": Number,\n\"VaultARN\": String,\n\"VaultName\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. List Vaults API Version 2012-06-01 411\n\nAmazon S3 Glacier Developer Guide\nCreationDate\nThe date the vault was created, in Coordinated Universal Time (UTC). Type: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 173,
        "chunk_type": "semantic_split",
        "coherence_score": 0.281854502360026
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_366",
      "text": "LastInventoryDate\nThe date of the last vault inventory, in Coordinated Universal Time (UTC). This field can be\nnull if an inventory has not yet run on the vault, for example, if you just created the vault. For\ninformation about initiating an inventory for a vault, see Initiate Job (POST jobs). Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Marker\nThe vaultARN that represents where to continue pagination of the results. You use the marker\nin another List Vaults request to obtain more vaults in the list. If there are no more vaults, this\nvalue is null. Type: String\nNumberOfArchives\nThe number of archives in the vault as of the last inventory date. Type: Number\nSizeInBytes\nThe total size, in bytes, of all the archives in the vault including any per-archive overhead, as of\nthe last inventory date. Type: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 153,
        "chunk_type": "semantic_split",
        "coherence_score": 0.415120612250434
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_367",
      "text": "Type: String\nVaultList\nAn array of objects, with each object providing a description of a vault. Type: Array\nList Vaults API Version 2012-06-01 412\n\nAmazon S3 Glacier Developer Guide\nVaultName\nThe vault name. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample: List All Vaults\nThe following example lists vaults. Because the marker and limit parameters are not specified in\nthe request, up to 10 vaults are returned. Example Request\nGET /-/vaults HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe Marker is null indicating there are no more vaults to list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 497\n{\n\"Marker\": null,\n\"VaultList\": [\n{\n\"CreationDate\": \"2012-03-16T22:22:47.214Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\nList Vaults API Version 2012-06-01 413\n\nAmazon S3 Glacier Developer Guide\n\"NumberOfArchives\": 2,\n\"SizeInBytes\": 12334,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault1\",\n\"VaultName\": \"examplevault1\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault2\",\n\"VaultName\": \"examplevault2\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-25T12:14:31.121Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault3\",\n\"VaultName\": \"examplevault3\"\n}\n]\n}\nExample: Partial List of Vaults\nThe following example returns two vaults starting at the vault specified by the marker. Example Request\nGET /-/vaults?limit=2&marker=arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nTwo vaults are returned in the list. The Marker contains the vault ARN to continue pagination in\nanother List Vaults request. List Vaults API Version 2012-06-01 414\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 497\n{\n\"Marker\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault3\",\n\"VaultList\": [\n{\n\"CreationDate\": \"2012-03-16T22:22:47.214Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 2,\n\"SizeInBytes\": 12334,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault1\",\n\"VaultName\": \"examplevault1\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault2\",\n\"VaultName\": \"examplevault2\"\n}\n]\n}\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\nList Vaults API Version 2012-06-01 415\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nRemove Tags From Vault (POST tags remove)\nThis operation removes one or more tags from the set of tags attached to a vault.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 388,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5151908874511719
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_368",
      "text": "For more\ninformation about tags, see Tagging Amazon S3 Glacier Resources. This operation is idempotent. The operation will be successful, even if there are no tags attached to\nthe vault. Request Syntax\nTo remove tags from a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example. POST /AccountId/vaults/vaultName/tags?operation=remove HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagKeys\": [\n\"string\",\n\"string\"\n]\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Remove Tags From Vault API Version 2012-06-01 416\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\noperation A single query string parameter operation with a value of Yes\n=remove remove to distinguish it from Add Tags To Vault (POST tags\nadd). Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 633984,
      "end_idx": 642255,
      "metadata": {
        "num_sentences": 10,
        "num_words": 206,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29341328938802086
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_369",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. TagKeys\nA list of tag keys. Each corresponding tag is removed from the vault. Type: array of Strings\nLength constraint: Minimum of 1 item in the list.",
      "start_idx": 642256,
      "end_idx": 642546,
      "metadata": {
        "num_sentences": 5,
        "num_words": 47,
        "breakpoint_idx": 3799,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.17402915954589843
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_370",
      "text": "Maximum of 10 items in the list. Required: Yes\nResponses\nIf the action is successful, the service sends back an HTTP 204 No Content response with an\nempty HTTP body. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nRemove Tags From Vault API Version 2012-06-01 417\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP POST request to remove the specified tags. POST /-/vaults/examplevault/tags?operation=remove HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagsKeys\": [\n\"examplekey1\",\n\"examplekey2\"\n]\n}\nExample Response\nIf the request was successful Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nRemove Tags From Vault API Version 2012-06-01 418\n\nAmazon S3 Glacier Developer Guide\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 List Tags For Vault (GET tags)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Access Policy (PUT access-policy)\nDescription\nThis operation configures an access policy for a vault and will overwrite an existing policy. To\nconfigure a vault access policy, send a PUT request to the access-policy subresource of the\nvault.",
      "start_idx": 642547,
      "end_idx": 644610,
      "metadata": {
        "num_sentences": 10,
        "num_words": 269,
        "breakpoint_idx": 3809,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28925302293565536
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_371",
      "text": "You can set one access policy per vault and the policy can be up to 20 KB in size. For more\ninformation about vault access policies, see Vault Access Policies. Requests\nSyntax\nTo set a vault access policy, send an HTTP PUT request to the URI of the vault's access-policy\nsubresource as shown in the following syntax example. PUT /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nSet Vault Access Policy API Version 2012-06-01 419\n\nAmazon S3 Glacier Developer Guide\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. Policy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character. Type: String\nRequired: Yes\nResponses\nIn response, S3 Glacier returns 204 No Content if the policy is accepted. Syntax\nHTTP/1.1 204 No Content\nSet Vault Access Policy API Version 2012-06-01 420\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 644611,
      "end_idx": 649459,
      "metadata": {
        "num_sentences": 14,
        "num_words": 276,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31232066730876545
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_372",
      "text": "Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's access-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character. PUT /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-owner-access-\nrights\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\"}]}\"}\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example. Set Vault Access Policy API Version 2012-06-01 421\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Get Vault Access Policy (GET access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Notification Configuration (PUT notification-configuration)\nDescription\nRetrieving an archive and a vault inventory are asynchronous operations in Amazon S3 Glacier\n(S3 Glacier) for which you must first initiate a job and wait for the job to complete before you\ncan download the job output. You can configure a vault to post a message to an Amazon Simple\nNotification Service (Amazon SNS) topic when these jobs complete. You can use this operation\nto set notification configuration on the vault. For more information, see Configuring Vault\nNotifications in Amazon S3 Glacier. To configure vault notifications, send a PUT request to the notification-configuration\nsubresource of the vault. A notification configuration is specific to a vault; therefore, it is also\nreferred to as a vault subresource. The request should include a JSON document that provides an\nAmazon Simple Notification Service (Amazon SNS) topic and the events for which you want S3\nGlacier to send notifications to the topic. You can configure a vault to publish a notification for the following vault events:\nSet Vault Notification Configuration API Version 2012-06-01 422\n\nAmazon S3 Glacier Developer Guide\n\u2022 ArchiveRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\narchive retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can be\nSucceeded or Failed.",
      "start_idx": 644611,
      "end_idx": 649459,
      "metadata": {
        "num_sentences": 14,
        "num_words": 377,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35715325324089975
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_373",
      "text": "The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID). \u2022 InventoryRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\ninventory retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can\nbe Succeeded or Failed. The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID). Amazon SNS topics must grant permission to the vault to be allowed to publish notifications to the\ntopic. Requests\nTo set notification configuration on your vault, send a PUT request to the URI of the vault's\nnotification-configuration subresource. You specify the configuration in the request\nbody. The configuration includes the Amazon SNS topic name and an array of events that trigger\nnotification to each topic. Syntax\nPUT /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\n{\n\"SNSTopic\": String,\n\"Events\":[String, ...]\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Set Vault Notification Configuration API Version 2012-06-01 423\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 649460,
      "end_idx": 651120,
      "metadata": {
        "num_sentences": 13,
        "num_words": 252,
        "breakpoint_idx": 3850,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28116681025578427
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_374",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThe JSON in the request body contains the following fields. Events\nAn array of one or more events for which you want S3 Glacier to send notification. Valid Values: ArchiveRetrievalCompleted | InventoryRetrievalCompleted\nRequired: yes\nType: Array\nSNSTopic\nThe Amazon SNS topic ARN. For more information, go to Getting Started with Amazon SNS in\nthe Amazon Simple Notification Service Getting Started Guide. Required: yes\nType: String\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns 204 No Content if the notification\nconfiguration is accepted. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nSet Vault Notification Configuration API Version 2012-06-01 424\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to configure vault notification. Example Request\nThe following request sets the examplevault notification configuration so that notifications for\ntwo events (ArchiveRetrievalCompleted and InventoryRetrievalCompleted ) are sent to\nthe Amazon SNS topic arn:aws:sns:us-west-2:012345678901:mytopic. PUT /-/vaults/examplevault/notification-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nExample Response\nA successful response returns a 204 No Content. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nSet Vault Notification Configuration API Version 2012-06-01 425\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nArchive Operations\nThe following are the archive operations available for use in S3 Glacier. Topics\n\u2022 Delete Archive (DELETE archive)\n\u2022 Upload Archive (POST archive)\nDelete Archive (DELETE archive)\nDescription\nThis operation deletes an archive from a vault.",
      "start_idx": 651121,
      "end_idx": 654022,
      "metadata": {
        "num_sentences": 15,
        "num_words": 345,
        "breakpoint_idx": 3865,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3130469549269903
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_375",
      "text": "You can delete one archive at a time from a vault. To delete the archive you must provide its archive ID in the delete request. You can get the archive\nID by downloading the vault inventory for the vault that contains the archive. For more information\nabout downloading the vault inventory, see Downloading a Vault Inventory in Amazon S3 Glacier. After you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail. Archive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\nArchive Operations API Version 2012-06-01 426\n\nAmazon S3 Glacier Developer Guide\n\u2022 If the archive retrieval job is actively preparing the data for download when Amazon S3 Glacier\n(S3 Glacier) receives the delete archive request, the archival retrieval operation might fail. \u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, you will be able to download the output. For more information about archive retrieval, see Downloading an Archive in S3 Glacier.",
      "start_idx": 654023,
      "end_idx": 656114,
      "metadata": {
        "num_sentences": 8,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.531071526663644
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_376",
      "text": "This operation is idempotent. Attempting to delete an already-deleted archive does not result in an\nerror. Requests\nTo delete an archive you send a DELETE request to the archive resource URI. Syntax\nDELETE /AccountId/vaults/VaultName/archives/ArchiveID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nx-amz-Date: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 654023,
      "end_idx": 656114,
      "metadata": {
        "num_sentences": 8,
        "num_words": 131,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2551795414515904
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_377",
      "text": "For information about\ncommon request headers, see Common Request Headers. Delete Archive API Version 2012-06-01 427\n\nAmazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 656115,
      "end_idx": 656504,
      "metadata": {
        "num_sentences": 3,
        "num_words": 55,
        "breakpoint_idx": 3884,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.380745808283488
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_378",
      "text": "For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to delete an archive from the vault named\nexamplevault. Example Request\nThe ID of the archive to be deleted is specified as a subresource of archives. DELETE /-/vaults/examplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Archive API Version 2012-06-01 428\n\nAmazon S3 Glacier Developer Guide\nExample Response\nIf the request is successful, S3 Glacier responds with 204 No Content to indicate that the archive\nis deleted. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Archive (POST archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Archive (POST archive)\nDescription\nThis operation adds an archive to a vault. For a successful upload, your data is durably persisted. In\nresponse, Amazon S3 Glacier (S3 Glacier) returns the archive ID in the x-amz-archive-id header\nof the response. You should save the archive ID returned so that you can access the archive later. You must provide a SHA256 tree hash of the data you are uploading.",
      "start_idx": 656505,
      "end_idx": 661042,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3083725669167259
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_379",
      "text": "For information about\ncomputing a SHA256 tree hash, see Computing Checksums. Note\nThe SHA256 tree hash is only required for the Upload Archive (POST archive) action when\nusing the API. It is not required when using the AWS CLI. When uploading an archive, you can optionally specify an archive description of up to 1,024\nprintable ASCII characters. S3 Glacier returns the archive description when you either retrieve the\narchive or get the vault inventory. S3 Glacier does not interpret the description in any way. An\narchive description does not need to be unique. You cannot use the description to retrieve or sort\nthe archive list. Upload Archive API Version 2012-06-01 429\n\nAmazon S3 Glacier Developer Guide\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. The archive ID is an opaque sequence of characters from which you cannot infer\nany meaning about the archive. So you might maintain metadata about the archives on the client-\nside.",
      "start_idx": 656505,
      "end_idx": 661042,
      "metadata": {
        "num_sentences": 11,
        "num_words": 164,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3218552676114169
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_380",
      "text": "For more information, see Working with Archives in Amazon S3 Glacier. Archives are immutable. After you upload an archive, you cannot edit the archive or its description. Requests\nTo upload an archive, you use the HTTP POST method and scope the request to the archives\nsubresource of the vault in which you want to save the archive. The request must include the\narchive payload size, checksum (SHA256 tree hash), and can optionally include a description of the\narchive. Syntax\nPOST /AccountId/vaults/VaultName/archives\nHost: glacier.Region.amazonaws.com\nx-amz-glacier-version: 2012-06-01\nDate: Date\nAuthorization: SignatureValue\nx-amz-archive-description: Description\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 linear hash\nContent-Length: Length\n<Request body.>\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis implementation of the operation does not use request parameters. Upload Archive API Version 2012-06-01 430\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nContent-Length Yes\nThe size of the object, in bytes. For more information, go\nto h ttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.",
      "start_idx": 656505,
      "end_idx": 661042,
      "metadata": {
        "num_sentences": 13,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25758107503255206
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_381",
      "text": "html#sec14.13. Type: Number\nDefault: None\nConstraints: None\nx-amz-archive- No\nThe optional description of the archive you are uploading\ndescription\n. It can be a plain language description or some identifier\nyou choose to assign. The description need not be unique\nacross archives. When you retrieve a vault inventory (see\nInitiate Job (POST jobs)), it includes this description for\neach of the archives it returns in response. Type: String\nDefault: None\nConstraints: The description must be less than or equal to\n1,024 characters. The allowable characters are 7-bit ASCII\nwithout control codes, specifically ASCII values 32\u2014126 de\ncimal or 0x20\u20140x7E hexadecimal. x-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the payload. This\nsha256\nis not the same value as you specify in the x-amz-sha\n256-tree-hash header. Upload Archive API Version 2012-06-01 431\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nThe user-computed checksum, SHA256 tree hash, of the\ntree-hash\npayload. For information on computing the SHA256 tree\nhash, see Computing Checksums. If S3 Glacier computes a\ndifferent checksum of the payload, it will reject the reque\nst. Type: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload.",
      "start_idx": 661043,
      "end_idx": 665744,
      "metadata": {
        "num_sentences": 13,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2498166744525616
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_382",
      "text": "Responses\nIn response, S3 Glacier durably stores the archive and returns a URI path to the archive ID. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nLocation: Location\nx-amz-archive-id: ArchiveId\nUpload Archive API Version 2012-06-01 432\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation\nThe relative URI path of the newly added archive resource. Type: String\nx-amz-arc\nThe ID of the archive. This value is also included as part of the Location\nhive-id\nheader. Type: String\nx-amz-sha\nThe checksum of the archive computed by S3 Glacier. 256-tree-\nhash\nType: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example shows a request to upload an archive. POST /-/vaults/examplevault/archives HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nUpload Archive API Version 2012-06-01 433\n\nAmazon S3 Glacier Developer Guide\nx-amz-content-sha256: 7f2fe580edb35154041fa3d4b41dd6d3adaef0c85d2ff6309f1d4b520eeecda3\nContent-Length: 2097152\nx-amz-glacier-version: 2012-06-01\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-\nversion,Signature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\n<Request body (2097152 bytes).>\nExample Response\nThe successful response below has a Location header where you can get the ID that S3 Glacier\nassigned to the archive. HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nLocation: /111122223333/vaults/examplevault/archives/\nNkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nx-amz-archive-id: NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nRelated Sections\n\u2022 Working with Archives in Amazon S3 Glacier\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nMultipart Upload Operations\nThe following are the multipart upload operations available for use in S3 Glacier. Topics\n\u2022 Abort Multipart Upload (DELETE uploadID)\nMultipart Upload Operations API Version 2012-06-01 434\n\nAmazon S3 Glacier Developer Guide\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\nAbort Multipart Upload (DELETE uploadID)\nDescription\nThis command for multipart upload operation stops a multipart upload identified by the upload ID.",
      "start_idx": 661043,
      "end_idx": 665744,
      "metadata": {
        "num_sentences": 13,
        "num_words": 358,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35216972155448717
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_383",
      "text": "After the Abort Multipart Upload request succeeds, you cannot use the upload ID to upload\nany more parts or perform any other operations. Stopping a completed multipart upload fails. However, stopping an already-stopped upload will succeed, for a short time. This operation is idempotent. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Requests\nTo stop a multipart upload, send an HTTP DELETE request to the URI of the multipart-uploads\nsubresource of the vault and identify the specific multipart upload ID as part of the URI. Syntax\nDELETE /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAbort Multipart Upload API Version 2012-06-01 435\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 665745,
      "end_idx": 666941,
      "metadata": {
        "num_sentences": 9,
        "num_words": 179,
        "breakpoint_idx": 3954,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.34860409630669487
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_384",
      "text": "Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Example\nExample Request\nIn the following example, a DELETE request is sent to the URI of a multipart upload ID resource. Abort Multipart Upload API Version 2012-06-01 436\n\nAmazon S3 Glacier Developer Guide\nDELETE /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nComplete Multipart Upload (POST uploadID)\nDescription\nYou call this multipart upload operation to inform Amazon S3 Glacier (S3 Glacier) that all the\narchive parts have been uploaded and S3 Glacier can now assemble the archive from the uploaded\nparts. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Complete Multipart Upload API Version 2012-06-01 437\n\nAmazon S3 Glacier Developer Guide\nAfter assembling and saving the archive to the vault, S3 Glacier returns the archive ID of the newly\ncreated archive resource.",
      "start_idx": 666942,
      "end_idx": 672828,
      "metadata": {
        "num_sentences": 12,
        "num_words": 297,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33614910010135535
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_385",
      "text": "After you upload an archive, you should save the archive ID returned to\nretrieve the archive at a later point. In the request, you must include the computed SHA256 tree hash of the entire archive you have\nuploaded. For information about computing a SHA256 tree hash, see Computing Checksums. On the server side, S3 Glacier also constructs the SHA256 tree hash of the assembled archive. If\nthe values match, S3 Glacier saves the archive to the vault; otherwise, it returns an error, and the\noperation fails. The List Parts (GET uploadID) operation returns list of parts uploaded for a specific\nmultipart upload. It includes checksum information for each uploaded part that can be used to\ndebug a bad checksum issue. Additionally, S3 Glacier also checks for any missing content ranges. When uploading parts, you\nspecify range values identifying where each part fits in the final assembly of the archive. When\nassembling the final archive S3 Glacier checks for any missing content ranges and if there are any\nmissing content ranges, S3 Glacier returns an error and the Complete Multipart Upload operation\nfails. Complete Multipart Upload is an idempotent operation. After your first successful complete\nmultipart upload, if you call the operation again within a short period, the operation will succeed\nand return the same archive ID.",
      "start_idx": 666942,
      "end_idx": 672828,
      "metadata": {
        "num_sentences": 12,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3569416855320786
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_386",
      "text": "This is useful in the event you experience a network issue or receive\na 500 server error, in which case you can repeat your Complete Multipart Upload request and get\nthe same archive ID without creating duplicate archives. Note, however, that after the multipart\nupload completes, you cannot call the List Parts operation and the multipart upload will not\nappear in List Multipart Uploads response, even if idempotent complete is possible. Requests\nTo complete a multipart upload, you send an HTTP POST request to the URI of the upload ID that\nS3 Glacier created in response to your Initiate Multipart Upload request. This is the same URI you\nused when uploading parts. In addition to the common required headers, you must include the\nresult of the SHA256 tree hash of the entire archive and the total size of the archive in bytes. Syntax\nPOST /AccountId/vaults/VaultName/multipart-uploads/uploadID\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: SignatureValue\nx-amz-sha256-tree-hash: SHA256 tree hash of the archive\nComplete Multipart Upload API Version 2012-06-01 438\n\nAmazon S3 Glacier Developer Guide\nx-amz-archive-size: ArchiveSize in bytes\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nx-amz-arc Yes\nThe total size, in bytes, of the entire archive. This value should\nhive-size\nbe the sum of all the sizes of the individual parts that you\nuploaded. Type: String\nDefault: None\nConstraints: None\nx-amz-sha Yes\nThe SHA256 tree hash of the entire archive.",
      "start_idx": 666942,
      "end_idx": 672828,
      "metadata": {
        "num_sentences": 14,
        "num_words": 331,
        "chunk_type": "semantic_split",
        "coherence_score": 0.279946044251159
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_387",
      "text": "It is the tree hash\n256-tree-\nof SHA256 tree hash of the individual parts. If the value you\nhash\nspecify in the request does not match the SHA256 tree hash\nof the final assembled archive as computed by S3 Glacier, S3\nGlacier returns an error and the request fails. Complete Multipart Upload API Version 2012-06-01 439\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nRequest Elements\nThis operation does not use request elements. Responses\nAmazon S3 Glacier (S3 Glacier) creates a SHA256 tree hash of the entire archive. If the value\nmatches the SHA256 tree hash of the entire archive you specified in the request, S3 Glacier adds\nthe archive to the vault. In response it returns the HTTP Location header with the URL path of\nthe newly added archive resource. If the archive size or SHA256 that you sent in the request does\nnot match, S3 Glacier will return an error and the upload remains in the incomplete state. It is\npossible to retry the Complete Multipart Upload operation later with correct values, at which point\nyou can successfully create an archive. If a multipart upload does not complete, then eventually S3\nGlacier will reclaim the upload ID. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-archive-id: ArchiveId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation\nComplete Multipart Upload API Version 2012-06-01 440\n\nAmazon S3 Glacier Developer Guide\nName Description\nThe relative URI path of the newly created archive. This URL includes the\narchive ID that is generated by S3 Glacier. Type: String\nx-amz-arc\nThe ID of the archive.",
      "start_idx": 672829,
      "end_idx": 674690,
      "metadata": {
        "num_sentences": 14,
        "num_words": 296,
        "breakpoint_idx": 4006,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4206986060509315
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_388",
      "text": "This value is also included as part of the Location\nhive-id\nheader. Type: String\nResponse Fields\nThis operation does not return a response body. Example\nExample Request\nIn this example, an HTTP POST request is sent to the URI that was returned by an Initiate Multipart\nUpload request. The request specifies both the SHA256 tree hash of the entire archive and the\ntotal archive size. POST /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nz-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:1ffc0f54dd5fdd66b62da70d25edacd0\nx-amz-archive-size:8388608\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following example response shows that S3 Glacier successfully created an archive from the\nparts you uploaded. The response includes the archive ID with complete path. Complete Multipart Upload API Version 2012-06-01 441\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/archives/\nNkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nx-amz-archive-id: NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can now send HTTP requests to the URI of the newly added resource/archive. For example, you\ncan send a GET request to retrieve the archive.",
      "start_idx": 674691,
      "end_idx": 676535,
      "metadata": {
        "num_sentences": 8,
        "num_words": 168,
        "breakpoint_idx": 4014,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3043744904654367
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_389",
      "text": "Related Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Multipart Upload (POST multipart-uploads)\nDescription\nThis operation initiates a multipart upload (see Uploading Large Archives in Parts (Multipart\nUpload)). Amazon S3 Glacier (S3 Glacier) creates a multipart upload resource and returns its ID in\nthe response. You use this Upload ID in subsequent multipart upload operations. When you initiate a multipart upload, you specify the part size in number of bytes. The part size\nmust be a mebibyte (MiB) (1024 kibibytes [KiB]) multiplied by a power of 2\u2014for example, 1048576\n(1 MiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 gibibytes (GiB). Initiate Multipart Upload API Version 2012-06-01 442\n\nAmazon S3 Glacier Developer Guide\nEvery part you upload using this upload ID, except the last one, must have the same size. The last\none can be the same size or smaller. For example, suppose you want to upload a 16.2 MiB file. If\nyou initiate the multipart upload with a part size of 4 MiB, you will upload four parts of 4 MiB each\nand one part of 0.2 MiB.",
      "start_idx": 676536,
      "end_idx": 679673,
      "metadata": {
        "num_sentences": 10,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43651385837131074
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_390",
      "text": "Note\nYou don't need to know the size of the archive when you start a multipart upload because\nS3 Glacier does not require you to specify the overall archive size. After you complete the multipart upload, S3 Glacier removes the multipart upload resource\nreferenced by the ID. S3 Glacier will also remove the multipart upload resource if you cancel the\nmultipart upload or it may be removed if there is no activity for a period of 24 hours. The ID may\nstill be available after 24 hours, but applications should not expect this behavior. Requests\nTo initiate a multipart upload, you send an HTTP POST request to the URI of the multipart-\nuploads subresource of the vault in which you want to save the archive. The request must include\nthe part size and can optionally include a description of the archive. Syntax\nPOST /AccountId/vaults/VaultName/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nx-amz-archive-description: ArchiveDescription\nx-amz-part-size: PartSize\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Initiate Multipart Upload API Version 2012-06-01 443\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations.",
      "start_idx": 676536,
      "end_idx": 679673,
      "metadata": {
        "num_sentences": 11,
        "num_words": 263,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3445914181795987
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_391",
      "text": "For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nx-amz-part-size Yes\nThe size of each part except the last, in\nbytes. The last part can be smaller than this\npart size. Type: String\nDefault: None\nConstraints: The part size must be a\nmebibyte (1024 KiB) multiplied by a power\nof 2\u2014for example, 1048576 (1 MiB),\n2097152 (2 MiB), 4194304 (4 MiB), 8388608\n(8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 GiB\n(4096 MiB). x-amz-archive-desc No\nArchive description you are uploading in\nription\nparts. It can be a plain-language description\nor some unique identifier you choose to\nassign. When you retrieve a vault inventory\n(see Initiate Job (POST jobs) ), the inventory\nincludes this description for each of the\narchives it returns in response. Leading\nspaces in archive descriptions are removed. Type: String\nInitiate Multipart Upload API Version 2012-06-01 444\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: The description must be less\nthan or equal to 1024 bytes. The allowable\ncharacters are 7 bit ASCII without control\ncodes, specifically ASCII values 32-126\ndecimal or 0x20-0x7E hexadecimal.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 11,
        "num_words": 195,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22518893155184658
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_392",
      "text": "Request Body\nThis operation does not have a request body. Responses\nIn the response, S3 Glacier creates a multipart upload resource identified by an ID and returns the\nrelative URI path of the multipart upload ID. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-multipart-upload-id: multiPartUploadId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nLocation\nThe relative URI path of the multipart upload ID S3 Glacier created. You use\nthis URI path to scope your requests to upload parts, and to complete the\nmultipart upload. Initiate Multipart Upload API Version 2012-06-01 445\n\nAmazon S3 Glacier Developer Guide\nName Description\nType: String\nx-amz-mul\nThe ID of the multipart upload. This value is also included as part of the\ntipart-up\nLocation header. load-id\nType: String\nResponse Body\nThis operation does not return a response body. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Example\nExample Request\nThe following example initiates a multipart upload by sending an HTTP POST request to the URI\nof the multipart-uploads subresource of a vault named examplevault.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.365079082142223
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_393",
      "text": "The request includes\nheaders to specify the part size of 4 MiB (4194304 bytes) and the optional archive description. POST /-/vaults/examplevault/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-archive-description: MyArchive-101\nx-amz-part-size: 4194304\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nS3 Glacier creates a multipart upload resource and adds it to the multipart-uploads\nsubresource of the vault. The Location response header includes the relative URI path to the\nmultipart upload ID. Initiate Multipart Upload API Version 2012-06-01 446\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nx-amz-multipart-upload-id:\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nFor information about uploading individual parts, see Upload Part (PUT uploadID). Related Sections\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Parts (GET uploadID)\nDescription\nThis multipart upload operation lists the parts of an archive that have been uploaded in a\nspecific multipart upload identified by an upload ID. For information about multipart upload, see\nUploading Large Archives in Parts (Multipart Upload). You can make this request at any time during an in-progress multipart upload before you complete\nthe multipart upload. S3 Glacier returns the part list sorted by range you specified in each part\nupload. If you send a List Parts request after completing the multipart upload, Amazon S3 Glacier\n(S3 Glacier) returns an error. List Parts API Version 2012-06-01 447\n\nAmazon S3 Glacier Developer Guide\nThe List Parts operation supports pagination. You should always check the Marker field in\nthe response body for a marker at which to continue the list.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 11,
        "num_words": 296,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4273912949995561
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_394",
      "text": "if there are no more items the\nmarker field is null. If the marker is not null, to fetch the next set of parts you sent another List\nParts request with the marker request parameter set to the marker value S3 Glacier returned in\nresponse to your previous List Parts request. You can also limit the number of parts returned in the response by specifying the limit parameter\nin the request. Requests\nSyntax\nTo list the parts of an in-progress multipart upload, you send a GET request to the URI of the\nmultipart upload ID resource. The multipart upload ID is returned when you initiate a multipart\nupload (Initiate Multipart Upload (POST multipart-uploads)). You may optionally specify marker\nand limit parameters. GET /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nName Description Required\nlimit No\nThe maximum number of parts to be returned. The default\nlimit is 50. The number of parts returned might be fewer than\nList Parts API Version 2012-06-01 448\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nthe specified limit, but the number of returned parts never\nexceeds the limit. Type: String\nConstraints: Minimum integer value of 1.",
      "start_idx": 679674,
      "end_idx": 686450,
      "metadata": {
        "num_sentences": 13,
        "num_words": 261,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22234701498960838
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_395",
      "text": "Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies\nthe part at which the listing of parts should begin. Get the\nmarker value from the response of a previous List Parts\nresponse. You need only include the marker if you are\ncontinuing the pagination of results started in a previous List\nParts request. Type: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 686451,
      "end_idx": 686919,
      "metadata": {
        "num_sentences": 5,
        "num_words": 78,
        "breakpoint_idx": 4086,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.357592248916626
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_396",
      "text": "For information\nabout common response headers, see Common Response Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Parts API Version 2012-06-01 449\n\nAmazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : String,\n\"CreationDate\" : String,\n\"Marker\": String,\n\"MultipartUploadId\" : String,\n\"PartSizeInBytes\" : Number,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : String,\n\"SHA256TreeHash\" : String\n},\n...\n],\n\"VaultARN\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. ArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation. Type: String\nCreationDate\nThe UTC time that the multipart upload was initiated. Type: String.",
      "start_idx": 686920,
      "end_idx": 688036,
      "metadata": {
        "num_sentences": 9,
        "num_words": 155,
        "breakpoint_idx": 4095,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3093218273586697
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_397",
      "text": "A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Marker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Parts request to obtain more jobs in the list.",
      "start_idx": 688037,
      "end_idx": 688292,
      "metadata": {
        "num_sentences": 3,
        "num_words": 42,
        "breakpoint_idx": 4098,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2170248826344808
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_398",
      "text": "If there are no more parts,\nthis value is null. List Parts API Version 2012-06-01 450\n\nAmazon S3 Glacier Developer Guide\nType: String\nMultipartUploadId\nThe ID of the upload to which the parts are associated. Type: String\nPartSizeInBytes\nThe part size in bytes. This is the same value that you specified in the Initiate Multipart Upload\nrequest. Type: Number\nParts\nA list of the part sizes of the multipart upload. Each object in the array contains a RangeBytes\nand sha256-tree-hash name/value pair. Type: Array\nRangeInBytes\nThe byte range of a part, inclusive of the upper value of the range. Type: String\nSHA256TreeHash\nThe SHA256 tree hash value that S3 Glacier calculated for the part. This field is never null. Type: String\nVaultARN\nThe Amazon Resource Name (ARN) of the vault to which the multipart upload was initiated. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. List Parts API Version 2012-06-01 451\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample: List Parts of a Multipart Upload\nThe following example lists all the parts of an upload. The example sends an HTTP GET request to\nthe URI of the specific multipart upload ID of an in-progress multipart upload and returns up to\n1,000 parts. Example Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts associated with the specified multipart\nupload ID. In this example, there are only two parts.",
      "start_idx": 688293,
      "end_idx": 690232,
      "metadata": {
        "num_sentences": 15,
        "num_words": 255,
        "breakpoint_idx": 4113,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31095966157459076
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_399",
      "text": "The returned Marker field is null indicating\nthat there are no more parts of the multipart upload. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 412\n{\n\"ArchiveDescription\" : \"archive description\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": null,\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\nList Parts API Version 2012-06-01 452\n\nAmazon S3 Glacier Developer Guide\n\"RangeInBytes\" : \"0-4194303\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n},\n{\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"0195875365afda349fc21c84c099987164\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nExample: List Parts of a Multipart Upload (Specify the Marker and the Limit Request\nParameters)\nThe following example demonstrates how to use pagination to get a limited number of results. The example sends an HTTP GET request to the URI of the specific multipart upload ID of an in-\nprogress multipart upload to return one part.",
      "start_idx": 690233,
      "end_idx": 691436,
      "metadata": {
        "num_sentences": 3,
        "num_words": 140,
        "breakpoint_idx": 4116,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.40664203961690265
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_400",
      "text": "A starting marker parameter specifies at which part\nto start the part list. You can get the marker value from the response of a previous request for a\npart list. Furthermore, in this example, the limit parameter is set to 1 and returns one part.",
      "start_idx": 691437,
      "end_idx": 691682,
      "metadata": {
        "num_sentences": 3,
        "num_words": 45,
        "breakpoint_idx": 4119,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3706727822621663
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_401",
      "text": "Note\nthat the Marker field is not null, indicating that there is at least one more part to obtain. Example Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE?marker=1001&limit=1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts that are associated with the specified in-\nprogress multipart upload ID. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: text/json\nContent-Length: 412\nList Parts API Version 2012-06-01 453\n\nAmazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : \"archive description 1\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": \"MfgsKHVjbQ6EldVl72bn3_n5h2TaGZQUO-Qb3B9j3TITf7WajQ\",\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Multipart Uploads (GET multipart-uploads)\nDescription\nThis multipart upload operation lists in-progress multipart uploads for the specified vault. An in-\nprogress multipart upload is a multipart upload that has been initiated by an Initiate Multipart\nUpload (POST multipart-uploads) request, but has not yet been completed or stopped.",
      "start_idx": 691683,
      "end_idx": 693863,
      "metadata": {
        "num_sentences": 4,
        "num_words": 216,
        "breakpoint_idx": 4123,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2557189464569092
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_402",
      "text": "The list\nreturned in the List Multipart Upload response has no guaranteed order. The List Multipart Uploads operation supports pagination. By default, this operation returns up to\n50 multipart uploads in the response. You should always check the marker field in the response\nList Multipart Uploads API Version 2012-06-01 454\n\nAmazon S3 Glacier Developer Guide\nbody for a marker at which to continue the list; if there are no more items the marker field is\nnull. If the marker is not null, to fetch the next set of multipart uploads you sent another List Multipart\nUploads request with the marker request parameter set to the marker value Amazon S3 Glacier\n(S3 Glacier) returned in response to your previous List Multipart Uploads request. Note the difference between this operation and the List Parts (GET uploadID)) operation. The List\nMultipart Uploads operation lists all multipart uploads for a vault. The List Parts operation returns\nparts of a specific multipart upload identified by an Upload ID. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Requests\nSyntax\nTo list multipart uploads, send a GET request to the URI of the multipart-uploads subresource\nof the vault. You may optionally specify marker and limit parameters.",
      "start_idx": 693864,
      "end_idx": 696481,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.458498798717152
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_403",
      "text": "GET /AccountId/vaults/VaultName/multipart-uploads HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nName Description Required\nlimit No\nList Multipart Uploads API Version 2012-06-01 455\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nSpecifies the maximum number of uploads returned in the\nresponse body. If not specified, the List Uploads operation\nreturns up to 50 uploads. Type: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies the\nupload at which the listing of uploads should begin. Get\nthe marker value from a previous List Uploads response. You need only include the marker if you are continuing\nthe pagination of results started in a previous List Uploads\nrequest. Type: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses.",
      "start_idx": 693864,
      "end_idx": 696481,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23214361017400567
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_404",
      "text": "For information\nabout common response headers, see Common Response Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Multipart Uploads API Version 2012-06-01 456\n\nAmazon S3 Glacier Developer Guide\n{\n\"Marker\": String,\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"MultipartUploadId\": String,\n\"PartSizeInBytes\": Number,\n\"VaultARN\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. ArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation. Type: String\nCreationDate\nThe UTC time that the multipart upload was initiated. Type: String.",
      "start_idx": 696482,
      "end_idx": 697559,
      "metadata": {
        "num_sentences": 9,
        "num_words": 145,
        "breakpoint_idx": 4154,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32717614703708225
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_405",
      "text": "A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Marker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Multipart Uploads request to obtain more uploads in the list. If there are\nno more uploads, this value is null. List Multipart Uploads API Version 2012-06-01 457\n\nAmazon S3 Glacier Developer Guide\nType: String\nPartSizeInBytes\nThe part size specified in the Initiate Multipart Upload (POST multipart-uploads) request. This is\nthe size of all the parts in the upload except the last part, which may be smaller than this size. Type: Number\nMultipartUploadId\nThe ID of the multipart upload. Type: String\nUploadsList\nA list of metadata about multipart upload objects. Each item in the list contains a set of name-\nvalue pairs for the corresponding upload, including ArchiveDescription, CreationDate,\nMultipartUploadId, PartSizeInBytes, and VaultARN. Type: Array\nVaultARN\nThe Amazon Resource Name (ARN) of the vault that contains the archive. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample: List All Multipart Uploads\nThe following example lists all the multipart uploads in progress for the vault.",
      "start_idx": 697560,
      "end_idx": 698843,
      "metadata": {
        "num_sentences": 12,
        "num_words": 195,
        "breakpoint_idx": 4166,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3190197800145005
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_406",
      "text": "The example shows\nan HTTP GET request to the URI of the multipart-uploads subresource of a specified vault. Because the marker and limit parameters are not specified in the request, up to 1,000 in-\nprogress multipart uploads are returned. Example Request\nGET /-/vaults/examplevault/multipart-uploads HTTP/1.1\nList Multipart Uploads API Version 2012-06-01 458\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response S3 Glacier returns a list of all in-progress multipart uploads for the specified vault. The marker field is null, which indicates that there are no more uploads to list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1054\n{\n\"Marker\": null,\n\"UploadsList\": [\n{\n\"ArchiveDescription\": \"archive 1\",\n\"CreationDate\": \"2012-03-19T23:20:59.130Z\",\n\"MultipartUploadId\":\n\"xsQdFIRsfJr20CW2AbZBKpRZAFTZSJIMtL2hYf8mvp8dM0m4RUzlaqoEye6g3h3ecqB_zqwB7zLDMeSWhwo65re4C4Ev\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"ArchiveDescription\": \"archive 2\",\n\"CreationDate\": \"2012-04-01T15:00:00.000Z\",\n\"MultipartUploadId\": \"nPyGOnyFcx67qqX7E-0tSGiRi88hHMOwOxR-\n_jNyM6RjVMFfV29lFqZ3rNsSaWBugg6OP92pRtufeHdQH7ClIpSF6uJc\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"ArchiveDescription\": \"archive 3\",\n\"CreationDate\": \"2012-03-20T17:03:43.221Z\",\n\"MultipartUploadId\": \"qt-RBst_7yO8gVIonIBsAxr2t-db0pE4s8MNeGjKjGdNpuU-\ncdSAcqG62guwV9r5jh5mLyFPzFEitTpNE7iQfHiu1XoV\",\n\"PartSizeInBytes\": 4194304,\nList Multipart Uploads API Version 2012-06-01 459\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nExample: Partial List of Multipart Uploads\nThe following example demonstrates how to use pagination to get a limited number of results. The\nexample shows an HTTP GET request to the URI of the multipart-uploads subresource for a\nspecified vault.",
      "start_idx": 698844,
      "end_idx": 701220,
      "metadata": {
        "num_sentences": 6,
        "num_words": 216,
        "breakpoint_idx": 4172,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4949455897013346
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_407",
      "text": "In this example, the limit parameter is set to 1, which means that only one upload\nis returned in the list, and the marker parameter indicates the multipart upload ID at which the\nreturned list begins. Example Request\nGET /-/vaults/examplevault/multipart-uploads? limit=1&marker=xsQdFIRsfJr20CW2AbZBKpRZAFTZSJIMtL2hYf8mvp8dM0m4RUzlaqoEye6g3h3ecqB_zqwB7zLDMeSWhwo65re4C4Ev\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, Amazon S3 Glacier (S3 Glacier) returns a list of no more than two in-progress\nmultipart uploads for the specified vault, starting at the specified marker and returning two results. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 470\n{\n\"Marker\": \"qt-RBst_7yO8gVIonIBsAxr2t-db0pE4s8MNeGjKjGdNpuU-\ncdSAcqG62guwV9r5jh5mLyFPzFEitTpNE7iQfHiu1XoV\",\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": \"archive 2\",\nList Multipart Uploads API Version 2012-06-01 460\n\nAmazon S3 Glacier Developer Guide\n\"CreationDate\": \"2012-04-01T15:00:00.000Z\",\n\"MultipartUploadId\": \"nPyGOnyFcx67qqX7E-0tSGiRi88hHMOwOxR-\n_jNyM6RjVMFfV29lFqZ3rNsSaWBugg6OP92pRtufeHdQH7ClIpSF6uJc\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Part (PUT uploadID)\nDescription\nThis multipart upload operation uploads a part of an archive. You can upload archive parts in any\norder because in your Upload Part request you specify the range of bytes in the assembled archive\nthat will be uploaded in this part.",
      "start_idx": 701221,
      "end_idx": 703432,
      "metadata": {
        "num_sentences": 5,
        "num_words": 231,
        "breakpoint_idx": 4177,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.33069758415222167
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_408",
      "text": "You can also upload these parts in parallel. You can upload up to\n10,000 parts for a multipart upload. For information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload). Amazon S3 Glacier (S3 Glacier) rejects your upload part request if any of the following conditions is\ntrue:\n\u2022 SHA256 tree hash does not match\u2014To ensure that part data is not corrupted in transmission,\nyou compute a SHA256 tree hash of the part and include it in your request. Upon receiving the\npart data, S3 Glacier also computes a SHA256 tree hash. If the two hash values don't match,\nUpload Part API Version 2012-06-01 461\n\nAmazon S3 Glacier Developer Guide\nthe operation fails. For information about computing a SHA256 tree hash, see Computing\nChecksums. \u2022 SHA256 linear hash does not match\u2014Required for authorization, you compute a SHA256\nlinear hash of the entire uploaded payload and include it in your request. For information about\ncomputing a SHA256 linear hash, see Computing Checksums. \u2022 Part size does not match\u2014The size of each part except the last must match the size that is\nspecified in the corresponding Initiate Multipart Upload (POST multipart-uploads) request.",
      "start_idx": 703433,
      "end_idx": 707600,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37901840209960935
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_409",
      "text": "The\nsize of the last part must be the same size as, or smaller than, the specified size. Note\nIf you upload a part whose size is smaller than the part size you specified in your initiate\nmultipart upload request and that part is not the last part, then the upload part request\nwill succeed. However, the subsequent Complete Multipart Upload request will fail. \u2022 Range does not align\u2014The byte range value in the request does not align with the part size\nspecified in the corresponding initiate request. For example, if you specify a part size of 4194304\nbytes (4 MB), then 0 to 4194303 bytes (4 MB \u20141) and 4194304 (4 MB) to 8388607 (8 MB \u20141)\nare valid part ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align\nwith the part size and the upload will fail. This operation is idempotent. If you upload the same part multiple times, the data included in the\nmost recent request overwrites the previously uploaded data. Requests\nYou send this HTTP PUT request to the URI of the upload ID that was returned by your Initiate\nMultipart Upload request. S3 Glacier uses the upload ID to associate part uploads with a specific\nmultipart upload.",
      "start_idx": 703433,
      "end_idx": 707600,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35823690626356336
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_410",
      "text": "The request must include a SHA256 tree hash of the part data (x-amz-SHA256-\ntree-hash header), a SHA256 linear hash of the entire payload (x-amz-content-sha256\nheader), the byte range (Content-Range header), and the length of the part in bytes (Content-\nLength header). Syntax\nPUT /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nUpload Part API Version 2012-06-01 462\n\nAmazon S3 Glacier Developer Guide\nAuthorization: SignatureValue\nContent-Range: ContentRange\nContent-Length: PayloadSize\nContent-Type: application/octet-stream\nx-amz-sha256-tree-hash: Checksum of the part\nx-amz-content-sha256: Checksum of the entire payload\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nContent-Length No\nIdentifies the length of the part in bytes. Type: String\nDefault: None\nConstraints: None\nContent-Range Yes\nIdentifies the range of bytes in the assembled\narchive that will be uploaded in this part. S3\nUpload Part API Version 2012-06-01 463\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nGlacier uses this information to assemble the\narchive in the proper sequence. The format of this\nheader follows RFC 2616.",
      "start_idx": 703433,
      "end_idx": 707600,
      "metadata": {
        "num_sentences": 11,
        "num_words": 260,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32346905795010655
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_411",
      "text": "An example header is\nContent-Range:bytes 0-4194303/* . Type: String\nDefault: None\nConstraints: The range cannot be greater than the\npart size that you specified when you initiated the\nmultipart upload. x-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the\nsha256\nuploaded payload. This is not the same value as\nyou specify in the x-amz-sha256-tree-hash\nheader. Type: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nSpecifies a SHA256 tree hash of the data being\ntree-hash\nuploaded. For information about computing a\nSHA256 tree hash, see Computing Checksums. Type: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload. Upload Part API Version 2012-06-01 464\n\nAmazon S3 Glacier Developer Guide\nResponses\nUpon a successful part upload, S3 Glacier returns a 204 No Content response. Syntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Name Description\nx-amz-sha256-\nThe SHA256 tree hash that S3 Glacier computed for the uploaded part. tree-hash\nType: String\nResponse Body\nThis operation does not return a response body.",
      "start_idx": 707601,
      "end_idx": 714232,
      "metadata": {
        "num_sentences": 12,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35049233292088366
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_412",
      "text": "Example\nThe following request uploads a 4 MB part. The request sets the byte range to make this the first\npart in the archive. Example Request\nThe example sends an HTTP PUT request to upload a 4 MB part. The request is sent to the URI of\nthe Upload ID that was returned by the Initiate Multipart Upload request. The Content-Range\nheader identifies the part as the first 4 MB data part of the archive. Upload Part API Version 2012-06-01 465\n\nAmazon S3 Glacier Developer Guide\nPUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 0-4194303/*\nx-amz-sha256-tree-hash:c06f7cd4baacb087002a99a5f48bf953\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nContent-Length: 4194304\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-\nversion,Signature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nTo upload the next part, the procedure is the same; however, you must calculate a new SHA256\ntree hash of the part you are uploading and also specify a new byte range to indicate where the\npart will go in the final assembly. The following request uploads another part using the same\nupload ID. The request specifies the next 4 MB of the archive after the previous request and a part\nsize of 4 MB. PUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 4194304-8388607/*\nContent-Length: 4194304\nx-amz-sha256-tree-hash:f10e02544d651e2c3ce90a4307427493\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-glacier-version: 2012-06-01\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/\nus-west-2/glacier/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-version,\nSignature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nThe parts can be uploaded in any order; S3 Glacier uses the range specification for each part to\ndetermine the order in which to assemble them. Example Response\nHTTP/1.1 204 No Content\nUpload Part API Version 2012-06-01 466\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nx-amz-sha256-tree-hash: c06f7cd4baacb087002a99a5f48bf953\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nJob Operations\nThe following are the job operations available in S3 Glacier. Topics\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Initiate Job (POST jobs)\n\u2022 List Jobs (GET jobs)\nDescribe Job (GET JobID)\nDescription\nThis operation returns information about a job you previously initiated, including the job initiation\ndate, the user who initiated the job, the job status code/message, and the Amazon Simple\nNotification Service (Amazon SNS) topic to notify after Amazon S3 Glacier (S3 Glacier) completes\nthe job. For more information about initiating a job, see Initiate Job (POST jobs).",
      "start_idx": 707601,
      "end_idx": 714232,
      "metadata": {
        "num_sentences": 12,
        "num_words": 419,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3860005754413027
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_413",
      "text": "Job Operations API Version 2012-06-01 467\n\nAmazon S3 Glacier Developer Guide\nNote\nThis operation enables you to check the status of your job. However, we strongly\nrecommend that you set up an Amazon SNS topic and specify it in your initiate job request\nso that S3 Glacier can notify the topic after it completes the job. A job ID will not expire for at least 24 hours after S3 Glacier completes the job. Requests\nSyntax\nTo obtain information about a job, you use the HTTP GET method and scope the request to the\nspecific job. Note that the relative URI path is the same one that S3 Glacier returned to you when\nyou initiated the job. GET /AccountID/vaults/VaultName/jobs/JobID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: signatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Note\nIn the request, if you omit the JobID, the response returns a list of all active jobs on the\nspecified vault. For more information about listing jobs, see List Jobs (GET jobs). Describe Job API Version 2012-06-01 468\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations.",
      "start_idx": 707601,
      "end_idx": 714232,
      "metadata": {
        "num_sentences": 12,
        "num_words": 259,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3564730557528409
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_414",
      "text": "For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\nDescribe Job API Version 2012-06-01 469\n\nAmazon S3 Glacier Developer Guide\n\"AccessControlList\": [\n{\n\"Grantee\": {\n\"DisplayName\": \"string\",\n\"EmailAddress\": \"string\",\n\"ID\": \"string\",\n\"Type\": \"string\",\n\"URI\": \"string\"\n},\n\"Permission\": \"string\"\n}\n],\n\"BucketName\": \"string\",\n\"CannedACL\": \"string\",\n\"Encryption\": {\n\"EncryptionType\": \"string\",\n\"KMSContext\": \"string\",\n\"KMSKeyId\": \"string\"\n},\n\"Prefix\": \"string\",\n\"StorageClass\": \"string\",\n\"Tagging\": {\n\"string\": \"string\"\n},\n\"UserMetadata\": {\n\"string\": \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\nDescribe Job API Version 2012-06-01 470\n\nAmazon S3 Glacier Developer Guide\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 714233,
      "end_idx": 716353,
      "metadata": {
        "num_sentences": 4,
        "num_words": 224,
        "breakpoint_idx": 4248,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3898591200510661
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_415",
      "text": "Response Body\nThe response body contains the following JSON fields. Action\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select. Type: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null. Type: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval job. For inventory retrieval\njobs, this field is null. Type: String\nDescribe Job API Version 2012-06-01 471\n\nAmazon S3 Glacier Developer Guide\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null. Type: Number\nCompleted\nThe job status. When an archive or inventory retrieval job is completed, you get the job's output\nusing the Get Job Output (GET output).",
      "start_idx": 716354,
      "end_idx": 719528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 130,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3245748346502131
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_416",
      "text": "Type: Boolean\nCompletionDate\nThe Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null. Type: String\nCreationDate\nThe UTC time that the job was created. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. InventoryRetrievalParameters\nInput parameters used for a range inventory retrieval. Type: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null. Type: Number\nJobDescription\nThe job description you provided when you initiated the job. Type: String\nDescribe Job API Version 2012-06-01 472\n\nAmazon S3 Glacier Developer Guide\nJobId\nThe ID that identifies the job in S3 Glacier. Type: String\nJobOutputPath\nContains the job output location. Type: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored.",
      "start_idx": 716354,
      "end_idx": 719528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 151,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3658223932439631
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_417",
      "text": "Type: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If you don't specify a range in the archive retrieval, then\nthe whole archive is retrieved; also StartByteValue equals 0, and EndByteValue equals the size of\nthe archive minus 1. For inventory retrieval or select jobs, this field is null. Type: String\nSelectParameters\nAn object that contains information about the parameters used for a select. Type: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value. For more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data. For the specific case when the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value. This field is null in the following situations:\nDescribe Job API Version 2012-06-01 473\n\nAmazon S3 Glacier Developer Guide\n\u2022 Archive retrieval jobs that specify a range that is not tree-hash aligned. \u2022 Archival jobs that specify a range that is equal to the whole archive and the job status is\nInProgress. \u2022 Inventory jobs.",
      "start_idx": 716354,
      "end_idx": 719528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 198,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3966703241521662
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_418",
      "text": "\u2022 Select jobs. Type: String\nSNSTopic\nAn Amazon SNS topic that receives notification. Type: String\nStatusCode\nThe code indicating the status of the job. Valid Values: InProgress | Succeeded | Failed\nType: String\nStatusMessage\nA friendly message that describes the job status. Type: String\nTier\nThe data access tier to use for the select or archive retrieval. Valid Values: Bulk | Expedited | Standard\nType: String\nVaultARN\nThe Amazon Resource Name (ARN) of the vault of which the job is a subresource. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Describe Job API Version 2012-06-01 474\n\nAmazon S3 Glacier Developer Guide\nExamples\nThe following example shows the request for a job that retrieves an archive. Example Request: Get job description\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe response body includes JSON that describes the specified job. Note that for both the inventory\nretrieval and archive retrieval jobs, the JSON fields are the same.",
      "start_idx": 719529,
      "end_idx": 720992,
      "metadata": {
        "num_sentences": 10,
        "num_words": 172,
        "breakpoint_idx": 4291,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.33348905775282117
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_419",
      "text": "However, when a field doesn't\napply to the type of job, its value is null. The following is an example response for an archive\nretrieval job. Note the following:\n\u2022 The Action field value is ArchiveRetrieval. \u2022 The ArchiveSizeInBytes field shows the size of the archive requested in the archive retrieval\njob. \u2022 The ArchiveSHA256TreeHash field shows the SHA256 tree hash for the entire archive. \u2022 The RetrievalByteRange field shows the range requested in the Initiate Job request. In this\nexample, the whole archive is requested. \u2022 The SHA256TreeHash field shows the SHA256 tree hash for the range requested in the Initiate\nJob request. In this example, it is the same as the ArchiveSHA256TreeHash field, which means\nthat the whole archive was requested. \u2022 The InventorySizeInBytes field value is null because it does not apply to an archive\nretrieval job. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nDescribe Job API Version 2012-06-01 475\n\nAmazon S3 Glacier Developer Guide\nContent-Length: 419\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"ArchiveSizeInBytes\": 16777216,\n\"ArchiveSHA256TreeHash\":\n\"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"Completed\": false,\n\"CompletionDate\": null,\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"My ArchiveRetrieval Job\",\n\"JobId\": \"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"RetrievalByteRange\": \"0-16777215\",\n\"SHA256TreeHash\": \"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\": \"InProgress\",\n\"StatusMessage\": \"Operation in progress. \",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nThe following is an example response for an inventory retrieval job.",
      "start_idx": 720993,
      "end_idx": 723085,
      "metadata": {
        "num_sentences": 12,
        "num_words": 221,
        "breakpoint_idx": 4303,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3932341662320224
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_420",
      "text": "Note the following:\n\u2022 The Action field value is InventoryRetrieval. \u2022 The ArchiveSizeInBytes, ArchiveSHA256TreeHash, and RetrievalByteRange field\nvalues are null because these fields do not apply to an inventory retrieval job. \u2022 The InventorySizeInBytes field value is null because the job is still in progress, and has\nnot fully prepared the inventory for download. If the job was completed before your describe job\nrequest, this field would give you the size of the output. {\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"Completed\": false,\n\"CompletionDate\": null,\nDescribe Job API Version 2012-06-01 476\n\nAmazon S3 Glacier Developer Guide\n\"CreationDate\": \"2012-05-15T23:18:13.224Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"Inventory Description\",\n\"JobId\": \"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"RetrievalByteRange\": null,\n\"SHA256TreeHash\": null,\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\": \"InProgress\",\n\"StatusMessage\": \"Operation in progress. \",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nThe following is an example response for a completed inventory retrieval job that contains a\nmarker used to continue pagination of the vault inventory retrieval. {\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"ArchiveSizeInBytes\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2013-12-05T21:51:13.591Z\",\n\"CreationDate\": \"2013-12-05T21:51:12.281Z\",\n\"InventorySizeInBytes\": 777062,\n\"JobDescription\": null,\n\"JobId\": \"sCC2RZNBF2nildYD_roe0J9bHRdPQUbDRkmTdg-mXi2u3lc49uW6TcEhDF2D9pB2phx-\nBN30JaBru7PMyOlfXHdStzu8\",\n\"NextInventoryRetrievalMarker\": null,\n\"RetrievalByteRange\": null,\n\"SHA256TreeHash\": null,\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier-devo:us-west-2:836579025725:vaults/inventory-\nicecube-2\",\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-11-12T13:43:12Z\",\n\"EndDate\": \"2013-11-20T08:12:45Z\",\n\"Limit\": \"120000\",\n\"Format\": \"JSON\",\nDescribe Job API Version 2012-06-01 477\n\nAmazon S3 Glacier Developer Guide\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n},\n}\nRelated Sections\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Job Output (GET output)\nDescription\nThis operation downloads the output of the job you initiated using Initiate Job (POST jobs). Depending on the job type you specified when you initiated the job, the output will be either the\ncontent of an archive or a vault inventory.",
      "start_idx": 723086,
      "end_idx": 725832,
      "metadata": {
        "num_sentences": 8,
        "num_words": 277,
        "breakpoint_idx": 4311,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4215897151402065
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_421",
      "text": "You can download all the job output or download a portion of the output by specifying a byte\nrange. For both archive and inventory retrieval jobs, you should verify the downloaded size against\nthe size returned in the headers from the Get Job Output response. For archive retrieval jobs, you should also verify that the size is what you expected. If you download\na portion of the output, the expected size is based on the range of bytes you specified. For\nexample, if you specify a range of bytes=0-1048575, you should verify your download size is\n1,048,576 bytes. If you download an entire archive, the expected size is the size of the archive\nwhen you uploaded it to Amazon S3 Glacier (S3 Glacier). The expected size is also returned in the\nheaders from the Get Job Output response. In the case of an archive retrieval job, depending on the byte range you specify, S3 Glacier returns\nthe checksum for the portion of the data. To ensure the portion you downloaded is the correct\ndata, compute the checksum on the client, verify that the values match, and verify that the size is\nwhat you expected. A job ID does not expire for at least 24 hours after S3 Glacier completes the job.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4513434516059028
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_422",
      "text": "That is, you can\ndownload the job output within the 24-hour period after S3 Glacier completes the job. Get Job Output API Version 2012-06-01 478\n\nAmazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo retrieve a job output, you send the HTTP GET request to the URI of the output of the specific\njob. GET /AccountId/vaults/VaultName/jobs/JobID/output HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nRange: ByteRangeToRetrieve\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers. Name Description Required\nRange No\nThe range of bytes to retrieve from the output. For example,\nif you want to download the first 1,048,576 bytes, specify\nthe range as bytes=0-1048575 .",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "chunk_type": "semantic_split",
        "coherence_score": 0.26598985460069446
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_423",
      "text": "For more information,\ngo to Range Header Field Definition. The range is relative to\nGet Job Output API Version 2012-06-01 479\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nany range specified in the Initiate Job request. By default,\nthis operation downloads the entire output. If the job output is large, then you can use the Range request\nheader to retrieve a portion of the output. This allows you\nto download the entire output in smaller chunks of bytes. For example, suppose you have 1 GB job output you want\nto download and you decide to download 128 MB chunks of\ndata at a time, a total of eight Get Job Output requests. You\nwill use the following process to download the job output:\n1. Download a 128 MB chunk of output by specifying the\nappropriate byte range using the R ange header. Verify\nthat all 128 MB of data was received. 2.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 153,
        "chunk_type": "semantic_split",
        "coherence_score": 0.310635248819987
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_424",
      "text": "Along with the data, the response will include a checksum\nof the payload. You compute the checksum of the\npayload on the client and compare it with the checksum\nyou received in the response to ensure you received all\nthe expected data. 3. Repeat steps 1 and 2 for all the eight 128 MB chunks of\noutput data, each time specifying the appropriate byte\nrange. 4. After downloading all the parts of the job output, you\nhave a list of eight checksum values. Compute the tree\nhash of these values to find the checksum of the entire\noutput. Using the Describe Job (GET JobID) operation,\nobtain job information of the job that provided you the\noutput. The response includes the checksum of the entire\narchive stored in S3 Glacier. You compare this value\nwith the checksum you computed to ensure you have\ndownloaded the entire archive content with no errors.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 150,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2941418117947049
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_425",
      "text": "Type: String\nGet Job Output API Version 2012-06-01 480\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: None\nRequest Body\nThis operation does not have a request body. Responses\nSyntax\nFor a retrieval request that returns all of the job data, the job output response returns a 200 OK\nresponse code. When partial content is requested, for example, if you specified the Range header\nin the request, then the response code 206 Partial Content is returned. HTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: ContentType\nContent-Length: Length\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\n[Body containing job output.] Response Headers\nHeader Description\nContent-Range\nThe range of bytes returned by S3 Glacier. If only partial output is\ndownloaded, the response provides the range of bytes S3 Glacier\nreturned. For example, bytes 0-1048575/8388608 returns the first 1 MB\nfrom 8 MB. For more information about the Content-Range header, go to\nContent-Range Header Field Definition. Get Job Output API Version 2012-06-01 481\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nType: String\nContent-Type\nThe Content-Type depends on whether the job output is an archive or\na vault inventory. \u2022\nFor archive data, the Content-Type is application/octet-\nstream .",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39791480170355903
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_426",
      "text": "\u2022\nFor vault inventory, if you requested CSV format when you initiated\nthe job, the Content-Type is text/csv. Otherwise, by default,\nvault inventory is returned as JSON, and the Content-Type is\napplication/json . Type: String\nGet Job Output API Version 2012-06-01 482\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nx-amz-sha256-\nThe checksum of the data in the response. This header is returned only\ntree-hash\nwhen retrieving the output for an archive retrieval job. Furthermore,\nthis header appears when the retrieved data range requested in the\nInitiate Job request is tree hash aligned and the range to download\nin the Get Job Output is also tree hash aligned. For more informati\non about tree hash aligned ranges, see Receiving Checksums When\nDownloading Data. For example, if in your Initiate Job request you specified a tree hash\naligned range to retrieve (which includes the whole archive), then\nyou will receive the checksum of the data you download under the\nfollowing conditions:\n\u2022\nYou get the entire range of the retrieved data. \u2022\nYou request a byte range of the retrieved data that has a size of a\nmegabyte (1024 KB) multiplied by a power of 2 and that starts and\nends on a multiple of the size of the requested range. For example,\nif you have 3.1 MB of retrieved data and you specify a range to\nreturn that starts at 1 MB and ends at 2 MB, then the x-amz-sha\n256-tree-hash is returned as a response header. \u2022\nYou request a range to return of the retrieved data that goes to the\nend of the data, and the start of the range is a multiple of the size\nof the range to retrieve rounded up to the next power of two but\nnot smaller than one megabyte (1024 KB).",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 10,
        "num_words": 298,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38817227681477867
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_427",
      "text": "For example, if you have\n3.1 MB of retrieved data and you specify a range that starts at 2\nMB and ends at 3.1 MB (the end of the data), then the x-amz-sha\n256-tree-hash is returned as a response header. Type: String\nGet Job Output API Version 2012-06-01 483\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nS3 Glacier returns the job output in the response body. Depending on the job type, the output can\nbe the archive contents or the vault inventory. In case of a vault inventory, by default the inventory\nlist is returned as the following JSON body. {\n\"VaultARN\": String,\n\"InventoryDate\": String,\n\"ArchiveList\": [\n{\"ArchiveId\": String,\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"Size\": Number,\n\"SHA256TreeHash\": String\n},\n...\n]\n}\nIf you requested the comma-separated values (CSV) output format when you initiated the vault\ninventory job, then the vault inventory is returned in CSV format in the body. The CSV format has\nfive columns \"ArchiveId\", \"ArchiveDescription\", \"CreationDate\", \"Size\", and \"SHA256TreeHash\" with\nthe same definitions as the corresponding JSON fields. Note\nIn the returned CSV format, fields may be returned with the whole field enclosed in double-\nquotes. Fields that contain a comma or double-quotes are always returned enclosed in\ndouble-quotes. For example, my archive description,1 is returned as \"my archive\ndescription,1\". Double-quote characters that are within returned double-quote\nenclosed fields are escaped by preceding them with a backslash character. For example, my\narchive description,1\"2 is returned as \"my archive description,1\\\"2\" and my\narchive description,1\\\"2 is returned as \"my archive description,1\\\\\"2\". The\nbackslash character is not escaped. The JSON response body contains the following JSON fields. Get Job Output API Version 2012-06-01 484\n\nAmazon S3 Glacier Developer Guide\nArchiveDescription\nThe description of an archive. Type: String\nArchiveId\nThe ID of an archive.",
      "start_idx": 725833,
      "end_idx": 734970,
      "metadata": {
        "num_sentences": 15,
        "num_words": 292,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3256341843377976
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_428",
      "text": "Type: String\nArchiveList\nAn array of archive metadata. Each object in the array represents metadata for one archive\ncontained in the vault. Type: Array\nCreationDate\nThe UTC date and time the archive was created. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. InventoryDate\nThe UTC date and time of the last inventory for the vault that was completed after changes\nto the vault. Even though S3 Glacier prepares a vault inventory once a day, the inventory date\nis only updated if there have been archive additions or deletions to the vault since the last\ninventory. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.",
      "start_idx": 734971,
      "end_idx": 735681,
      "metadata": {
        "num_sentences": 7,
        "num_words": 113,
        "breakpoint_idx": 4393,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4321000235421317
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_429",
      "text": "SHA256TreeHash\nThe tree hash of the archive. Type: String\nSize\nThe size in bytes of the archive. Get Job Output API Version 2012-06-01 485\n\nAmazon S3 Glacier Developer Guide\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) resource from which the archive retrieval was requested. Type: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example shows the request for a job that retrieves an archive. Example 1: Download output\nThis example retrieves data prepared by S3 Glacier in response to your initiate archive retrieval job\nrequest. Example Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following is an example response of an archive retrieval job. Note that the Content-Type\nheader is application/octet-stream and that x-amz-sha256-tree-hash header is included\nin the response, which means that all the job data is returned. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nGet Job Output API Version 2012-06-01 486\n\nAmazon S3 Glacier Developer Guide\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/octet-stream\nContent-Length: 1048576\n[Archive data.] The following is an example response of an inventory retrieval job. Note that the Content-Type\nheader is application/json.",
      "start_idx": 735682,
      "end_idx": 737539,
      "metadata": {
        "num_sentences": 11,
        "num_words": 201,
        "breakpoint_idx": 4404,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3748971418900923
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_430",
      "text": "Also note that the response does not include the x-amz-sha256-\ntree-hash header. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 906\n{\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"InventoryDate\": \"2011-12-12T14:19:01Z\",\n\"ArchiveList\": [\n{\n\"ArchiveId\": \"DMTmICA2n5Tdqq5BV2z7og-\nA20xnpAPKt3UXwWxdWsn_D6auTUrW6kwy5Qyj9xd1MCE1mBYvMQ63LWaT8yTMzMaCxB_9VBWrW4Jw4zsvg5kehAPDVKcppUD1X7b24JukOr4mMAq-\noA\",\n\"ArchiveDescription\": \"my archive1\",\n\"CreationDate\": \"2012-05-15T17:19:46.700Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"6b9d4cf8697bd3af6aa1b590a0b27b337da5b18988dbcc619a3e608a554a1e62\"\n},\n{\n\"ArchiveId\": \"2lHzwhKhgF2JHyvCS-\nZRuF08IQLuyB4265Hs3AXj9MoAIhz7tbXAvcFeHusgU_hViO1WeCBe0N5lsYYHRyZ7rrmRkNRuYrXUs_sjl2K8ume_7mKO_0i7C-\nuHE1oHqaW9d37pabXrSA\",\n\"ArchiveDescription\": \"my archive2\",\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"7f2fe580edb35154041fa3d4b41dd6d3adaef0c85d2ff6309f1d4b520eeecda3\"\n}\n]\nGet Job Output API Version 2012-06-01 487\n\nAmazon S3 Glacier Developer Guide\n}\nExample 2: Download only partial output\nThis example retrieves only a portion of the archive prepared by S3 Glacier in response to your\ninitiate archive retrieval job request. The request uses the optional Range header to retrieve only\nthe first 1,024 bytes. Example Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nRange: bytes=0-1023\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following successful response shows the 206 Partial Content response. In this case, the\nresponse also includes a Content-Range header that specifies the range of bytes S3 Glacier\nreturns. HTTP/1.1 206 Partial Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range: bytes 0-1023/8388608\nContent-Type: application/octet-stream\nContent-Length: 1024\n[Archive data.] Related Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Initiate Job (POST jobs)\nGet Job Output API Version 2012-06-01 488\n\nAmazon S3 Glacier Developer Guide\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Job (POST jobs)\nThis operation initiates the following types of Amazon S3 Glacier (S3 Glacier) jobs:\n\u2022 archive-retrieval\u2014 Retrieve an archive\n\u2022 inventory-retrieval\u2014 Inventory a vault\nTopics\n\u2022 Initializing an Archive or Vault Inventory Retrieval Job\n\u2022 Requests\n\u2022 Responses\n\u2022 Examples\n\u2022 Related Sections\nInitializing an Archive or Vault Inventory Retrieval Job\nRetrieving an archive or a vault inventory are asynchronous operations that require you to initiate a\njob. Once started, job cannot be cancelled. Retrieval is a two-step process:\n1. Initiate a retrieval job by using the Initiate Job (POST jobs) operation. Important\nA data retrieval policy can cause your initiate retrieval job request to fail with\na PolicyEnforcedException. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.",
      "start_idx": 737540,
      "end_idx": 741042,
      "metadata": {
        "num_sentences": 13,
        "num_words": 361,
        "breakpoint_idx": 4417,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28288948841584033
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_431",
      "text": "2. After the job completes, download the bytes using the Get Job Output (GET output) operation. The retrieval request is ran asynchronously. When you initiate a retrieval job, S3 Glacier creates\na job and returns a job ID in the response. When S3 Glacier completes the job, you can get the\nInitiate Job API Version 2012-06-01 489\n\nAmazon S3 Glacier Developer Guide\njob output (archive or inventory data). For information about getting job output, see the Get Job\nOutput (GET output) operation. The job must complete before you can get its output. To determine when a job is complete, you\nhave the following options:\n\u2022 Use an Amazon SNS notification\u2014 You can specify an Amazon SNS topic to which S3 Glacier\ncan post a notification after the job is completed. You can specify an SNS topic per job request. The notification is sent only after S3 Glacier completes the job. In addition to specifying an SNS\ntopic per job request, you can configure vault notifications for a vault so that job notifications\nare sent for all retrievals.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3506131952459162
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_432",
      "text": "For more information, see Set Vault Notification Configuration (PUT\nnotification-configuration). \u2022 Get job details\u2014 You can make a Describe Job (GET JobID) request to obtain job status\ninformation while a job is in progress. However, it is more efficient to use an Amazon SNS\nnotification to determine when a job is complete. Note\nThe information you get via notification is same that you get by calling Describe Job (GET\nJobID). If for a specific event, you add both the notification configuration on the vault and also specify an\nSNS topic in your initiate job request, S3 Glacier sends both notifications. For more information,\nsee Set Vault Notification Configuration (PUT notification-configuration). The Vault Inventory\nS3 Glacier updates a vault inventory approximately once a day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata. After S3 Glacier creates the first inventory for the vault, it typically takes half a day and up to a day\nbefore that inventory is available for retrieval. Initiate Job API Version 2012-06-01 490\n\nAmazon S3 Glacier Developer Guide\nYou might not find it useful to retrieve a vault inventory for each archive upload.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 237,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39262549660422585
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_433",
      "text": "However, suppose\nthat you maintain a database on the client-side associating metadata about the archives you\nupload to S3 Glacier. Then, you might find the vault inventory useful to reconcile information, as\nneeded, in your database with the actual vault inventory. For more information about the data\nfields returned in an inventory job output, see Response Body. Range Inventory Retrieval\nYou can limit the number of inventory items retrieved by filtering on the archive creation date or\nby setting a limit. Filtering by Archive Creation Date\nYou can retrieve inventory items for archives created between StartDate and EndDate by\nspecifying values for these parameters in the Initiate Job request. Archives created on or after the\nStartDate and before the EndDate are returned. If you provide only the StartDate without\nthe EndDate, you retrieve the inventory for all archives created on or after the StartDate. If you\nprovide only the EndDate without the StartDate, you get back the inventory for all archives\ncreated before the EndDate. Limiting Inventory Items per Retrieval\nYou can limit the number of inventory items returned by setting the Limit parameter in the\nInitiate Job request. The inventory job output contains inventory items up to the specified Limit. If there are more inventory items available, the result is paginated.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4432390733198686
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_434",
      "text": "After a job is complete, you can\nuse the Describe Job (GET JobID) operation to get a marker that you use in a subsequent Initiate\nJob request. The marker indicates the starting point to retrieve the next set of inventory items. You can page through your entire inventory by repeatedly making Initiate Job requests with the\nmarker from the previous Describe Job output. You do so until you get a marker from Describe Job\nthat returns null, indicating that there are no more inventory items available. You can use the Limit parameter together with the date range parameters. Ranged Archive Retrieval\nYou can initiate archive retrieval for the whole archive or a range of the archive. In the case of\nranged archive retrieval, you specify a byte range to return or the whole archive. The range\nspecified must be megabyte (MB) aligned. In other words, the range start value must be divisible\nby 1 MB and the range end value plus 1 must be divisible by 1 MB or equal the end of the archive. If the ranged archive retrieval is not megabyte-aligned, this operation returns a 400 response. Initiate Job API Version 2012-06-01 491\n\nAmazon S3 Glacier Developer Guide\nFurthermore, to ensure that you get checksum values for data you download using Get Job Output\n(Get Job Output (GET output)), the range must be tree-hash aligned.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27776503129438923
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_435",
      "text": "For more information about\ntree-hash aligned ranges, see Receiving Checksums When Downloading Data. Expedited, Standard, and Bulk Tiers\nWhen initiating an archive retrieval job, you can specify one of the following options in the Tier\nfield of the request body:\n\u2022 Expedited \u2013 Expedited allows you to quickly access your data when occasional urgent requests\nfor restoring archives are required. For all but the largest archives (250 MB+), data accessed using\nthe Expedited tier is typically made available within 1\u20135 minutes. \u2022 Standard \u2013 Standard allows you to access any of your archives within several hours. Data\naccessed using the Standard tier typically made available within 3\u20135 hours. This option is the\ndefault one for job requests that don't specify the tier option. \u2022 Bulk \u2013 Bulk is the lowest-cost tier for S3 Glacier, enabling you to retrieve large amounts, even\npetabytes, of data inexpensively in a day. Data accessed using the Bulk tier is typically made\navailable within 5\u201312 hours. For more information about expedited and bulk retrievals, see Retrieving S3 Glacier Archives Using\nAWS Console. Requests\nTo initiate a job, you use the HTTP POST method and scope the request to the vault's jobs\nsubresource. You specify details of the job request in the JSON document of your request.",
      "start_idx": 741043,
      "end_idx": 747482,
      "metadata": {
        "num_sentences": 11,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3273902893066406
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_436",
      "text": "The job\ntype is specified with the Type field. Optionally, you can specify an SNSTopic field to indicate an\nAmazon SNS topic to which S3 Glacier can post notification after it completes the job. Note\nTo post a notification to Amazon SNS, you must create the topic yourself if it doesn't\nalready exist. S3 Glacier doesn't create the topic for you. The topic must have permissions\nto receive publications from a S3 Glacier vault. S3 Glacier doesn't verify if the vault has\npermission to publish to the topic. If the permissions are not configured appropriately, you\nmight not receive notification even after the job completes. Initiate Job API Version 2012-06-01 492\n\nAmazon S3 Glacier Developer Guide\nSyntax\nThe following is the request syntax for initiating a job. POST /AccountId/vaults/VaultName/jobs HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\n{\n\"jobParameters\": {\n\"ArchiveId\": \"string\",\n\"Description\": \"string\",\n\"Format\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"OutputLocation\": {\n\"S3\": {\n\"AccessControlList\": [\n{\n\"Grantee\": {\n\"DisplayName\": \"string\",\n\"EmailAddress\": \"string\",\n\"ID\": \"string\",\n\"Type\": \"string\",\n\"URI\": \"string\"\n},\n\"Permission\": \"string\"\n}\n],\n\"BucketName\": \"string\",\n\"CannedACL\": \"string\",\n\"Encryption\": {\n\"EncryptionType\": \"string\",\n\"KMSContext\": \"string\",\n\"KMSKeyId\": \"string\"\n},\n\"Prefix\": \"string\",\n\"StorageClass\": \"string\",\nInitiate Job API Version 2012-06-01 493\n\nAmazon S3 Glacier Developer Guide\n\"Tagging\": {\n\"string\" : \"string\"\n},\n\"UserMetadata\": {\n\"string\" : \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SNSTopic\": \"string\",\n\"Tier\": \"string\",\n\"Type\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nInitiate Job API Version 2012-06-01 494\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request.",
      "start_idx": 747483,
      "end_idx": 755115,
      "metadata": {
        "num_sentences": 10,
        "num_words": 336,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40542594061957465
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_437",
      "text": "If you use an account ID, do not include any hyphens ('-') in the ID. Request Body\nThe request accepts the following data in JSON format in the body of the request. jobParameters\nProvides options for specifying job information. Type: jobParameters object\nRequired: Yes\nResponses\nS3 Glacier creates the job. In the response, it returns the URI of the job. Syntax\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: location\nx-amz-job-id: jobId\nx-amz-job-output-path: jobOutputPath\nResponse Headers\nHeader Description\nLocation\nThe relative URI path of the job. You can use this URI path to find the job\nstatus. For more information, see Describe Job (GET JobID). Type: String\nDefault: None\nInitiate Job API Version 2012-06-01 495\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nx-amz-job-id\nThe ID of the job. This value is also included as part of the Location\nheader.",
      "start_idx": 747483,
      "end_idx": 755115,
      "metadata": {
        "num_sentences": 10,
        "num_words": 139,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3684884813096788
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_438",
      "text": "Type: String\nDefault: None\nx-amz-job-\nThe path to the location of where the select results are stored. output-path\nType: String\nDefault: None\nResponse Body\nThis operation does not return a response body. Errors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses. Code Description HTTP Status Type\nCode\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process this exped Unavailab\nited request. This error only le\napplies to expedited retrieval\ns and not to standard or bulk\nretrievals. Initiate Job API Version 2012-06-01 496\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample Request: Initiate an archive retrieval job\nPOST /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Type\": \"archive-retrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"Description\": \"My archive description\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-ArchiveRetrieval-topic-\nExample\",\n\"Tier\" : \"Bulk\"\n}\nThe following is an example of the body of a request that specifies a range of the archive to\nretrieve using the RetrievalByteRange field. {\n\"Type\": \"archive-retrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"Description\": \"My archive description\",\n\"RetrievalByteRange\": \"2097152-4194303\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-ArchiveRetrieval-topic-\nExample\",\n\"Tier\" : \"Bulk\"\n}\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nInitiate Job API Version 2012-06-01 497\n\nAmazon S3 Glacier Developer Guide\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nExample Request: Initiate an inventory retrieval job\nThe following request initiates an inventory retrieval job to get a list of archives from the\nexamplevault vault. The Format set to CSV in the body of the request indicates that the\ninventory is returned in CSV format. POST /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nContent-Type: application/x-www-form-urlencoded\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Type\": \"inventory-retrieval\",\n\"Description\": \"My inventory job\",\n\"Format\": \"CSV\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-InventoryRetrieval-topic-\nExample\"\n}\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nInitiate Job API Version 2012-06-01 498\n\nAmazon S3 Glacier Developer Guide\nExample Requests: Initiate an inventory retrieval job by using date filtering with a set limit, and\na subsequent request to retrieve the next page of inventory items. The following request initiates a vault inventory retrieval job by using date filtering and setting a\nlimit.",
      "start_idx": 747483,
      "end_idx": 755115,
      "metadata": {
        "num_sentences": 11,
        "num_words": 383,
        "chunk_type": "semantic_split",
        "coherence_score": 0.337599667635831
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_439",
      "text": "{\n\"ArchiveId\": null,\n\"Description\": null,\n\"Format\": \"CSV\",\n\"RetrievalByteRange\": null,\n\"SNSTopic\": null,\n\"Type\": \"inventory-retrieval\",\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-12-04T21:25:42Z\",\n\"EndDate\": \"2013-12-05T21:25:42Z\",\n\"Limit\" : \"10000\"\n},\n}\nThe following request is an example of a subsequent request to retrieve the next page of inventory\nitems using a marker obtained from Describe Job (GET JobID). {\n\"ArchiveId\": null,\n\"Description\": null,\n\"Format\": \"CSV\",\n\"RetrievalByteRange\": null,\n\"SNSTopic\": null,\n\"Type\": \"inventory-retrieval\",\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-12-04T21:25:42Z\",\n\"EndDate\": \"2013-12-05T21:25:42Z\",\n\"Limit\": \"10000\",\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n},\n}\nInitiate Job API Version 2012-06-01 499\n\nAmazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-output-path: test/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Jobs (GET jobs)\nDescription\nThis operation lists jobs for a vault, including jobs that are in-progress and jobs that have recently\nfinished. Note\nAmazon S3 Glacier (S3 Glacier) retains recently completed jobs for a period before deleting\nthem; however, it eventually removes completed jobs.",
      "start_idx": 755116,
      "end_idx": 756968,
      "metadata": {
        "num_sentences": 3,
        "num_words": 177,
        "breakpoint_idx": 4506,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.45177435874938965
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_440",
      "text": "The output of completed jobs can be\nretrieved. Retaining completed jobs for a period of time after they have completed enables\nyou to get a job output in the event you miss the job completion notification, or your first\nattempt to download it fails. For example, suppose that you start an archive retrieval job\nto download an archive. After the job completes, you start to download the archive but\nencounter a network error.",
      "start_idx": 756969,
      "end_idx": 757393,
      "metadata": {
        "num_sentences": 4,
        "num_words": 73,
        "breakpoint_idx": 4510,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.542255719502767
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_441",
      "text": "In this scenario, you can retry and download the archive while\nthe job exists. List Jobs API Version 2012-06-01 500\n\nAmazon S3 Glacier Developer Guide\nThe List Jobs operation supports pagination. You should always check the response Marker\nfield. If there are no more jobs to list, the Marker field is set to null. If there are more jobs to list,\nthe Marker field is set to a non-null value, which you can use to continue the pagination of the\nlist. To return a list of jobs that begins at a specific job, set the marker request parameter to the\nMarker value for that job that you obtained from a previous List Jobs request. You can set a maximum limit for the number of jobs returned in the response by specifying the\nlimit parameter in the request. The default limit is 50. The number of jobs returned might be\nfewer than the limit, but the number of returned jobs never exceeds the limit. Additionally, you can filter the jobs list returned by specifying the optional statuscode parameter\nor completed parameter, or both. Using the statuscode parameter, you can specify to\nreturn only jobs that match either the InProgress, Succeeded, or Failed status. Using the\ncompleted parameter, you can specify to return only jobs that were completed (true) or jobs that\nwere not completed (false). Requests\nSyntax\nTo return a list of jobs of all types, send a GET request to the URI of the vault's jobs subresource.",
      "start_idx": 757394,
      "end_idx": 760197,
      "metadata": {
        "num_sentences": 13,
        "num_words": 247,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35898697681916064
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_442",
      "text": "GET /AccountId/vaults/VaultName/jobs HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID. List Jobs API Version 2012-06-01 501\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\ncompleted No\nThe state of the jobs to return. You can specify true or\nfalse. Type: Boolean\nConstraints: None\nlimit No\nThe maximum number of jobs to be returned. The default limit\nis 50. The number of jobs returned might be fewer than the\nspecified limit, but the number of returned jobs never exceeds\nthe limit. Type: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 50.\nmarker No\nAn opaque string used for pagination that specifies the job at\nwhich the listing of jobs should begin. You get the marker\nvalue from a previous List Jobs response. You only need to\ninclude the marker if you are continuing the pagination of\nthe results started in a previous List Jobs request. Type: String\nConstraints: None\nstatuscode No\nThe type of job status to return.",
      "start_idx": 757394,
      "end_idx": 760197,
      "metadata": {
        "num_sentences": 13,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.22506310389592096
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_443",
      "text": "Type: String\nConstraints: One of the values InProgress , Succeeded ,\nor Failed. List Jobs API Version 2012-06-01 502\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nContent-Type: application/json\nContent-Length: Length\n{\n\"JobList\": [\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\n\"AccessControlList\": [\nList Jobs API Version 2012-06-01 503\n\nAmazon S3 Glacier Developer Guide\n{\n\"Grantee\": {\n\"DisplayName\": \"string\",\n\"EmailAddress\": \"string\",\n\"ID\": \"string\",\n\"Type\": \"string\",\n\"URI\": \"string\"\n},\n\"Permission\": \"string\"\n}\n],\n\"BucketName\": \"string\",\n\"CannedACL\": \"string\",\n\"Encryption\": {\n\"EncryptionType\": \"string\",\n\"KMSContext\": \"string\",\n\"KMSKeyId\": \"string\"\n},\n\"Prefix\": \"string\",\n\"StorageClass\": \"string\",\n\"Tagging\": {\n\"string\": \"string\"\n},\n\"UserMetadata\": {\n\"string\": \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\n\"csv\": {\nList Jobs API Version 2012-06-01 504\n\nAmazon S3 Glacier Developer Guide\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\n],\n\"Marker\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 760198,
      "end_idx": 762612,
      "metadata": {
        "num_sentences": 6,
        "num_words": 271,
        "breakpoint_idx": 4542,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31512657801310223
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_444",
      "text": "Response Body\nThe response body contains the following JSON fields. JobList\nA list of job objects. Each job object contains metadata describing the job. Type: Array of GlacierJobDescription objects\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker value in a new List Jobs request to obtain more jobs in the list. If there are no more\njobs to list, this value is null. Type: String\nList Jobs API Version 2012-06-01 505\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following examples demonstrate how to return information about vault jobs.",
      "start_idx": 762613,
      "end_idx": 763307,
      "metadata": {
        "num_sentences": 8,
        "num_words": 111,
        "breakpoint_idx": 4550,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3231997489929199
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_445",
      "text": "The first example\nreturns a list of two jobs, and the second example returns a subset of jobs. Example: Return All Jobs\nExample Request\nThe following GET request returns the jobs for a vault. GET /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response includes an archive retrieval job and an inventory retrieval job that contains\na marker used to continue pagination of the vault inventory retrieval. The response also shows the\nMarker field set to null, which indicates there are no more jobs to list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1444\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"BDfaUQul0dVzYwAMr8YSa_6_8abbhZq-\ni1oT69g8ByClfJyBgAGBkWl2QbF5os851P7Y7KdZDOHWJIn4rh1ZHaOYD3MgFhK_g0oDPesW34uHQoVGwoIqubf6BgUEfQm_wrU4Jlm3cA\",\n\"ArchiveSizeInBytes\": 1048576,\nList Jobs API Version 2012-06-01 506\n\nAmazon S3 Glacier Developer Guide\n\"ArchiveSHA256TreeHash\":\n\"25499381569ab2f85e1fd0eb93c5406a178ab77c5933056eb5d6e7d4adda609b\",\n\"Completed\": true,\n\"CompletionDate\": \"2012-05-01T00:00:09.304Z\",\n\"CreationDate\": \"2012-05-01T00:00:06.663Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": null,\n\"JobId\": \"hDe9t9DTHXqFw8sBGpLQQOmIM0-\nJrGtu1O_YFKLnzQ64548qJc667BRWTwBLZC76Ygy1jHYruqXkdcAhRsh0hYv4eVRU\",\n\"RetrievalByteRange\": \"0-1048575\",\n\"SHA256TreeHash\":\n\"25499381569ab2f85e1fd0eb93c5406a178ab77c5933056eb5d6e7d4adda609b\",\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2013-05-11T00:25:18.831Z\",\n\"CreationDate\": \"2013-05-11T00:25:14.981Z\",\n\"InventorySizeInBytes\": 1988,\n\"JobDescription\": null,\n\"JobId\":\n\"2cvVOnBL36btzyP3pobwIceiaJebM1bx9vZOOUtmNAr0KaVZ4WkWgVjiPldJ73VU7imlm0pnZriBVBebnqaAcirZq_C5\",\n\"RetrievalByteRange\": null,\n\"SHA256TreeHash\": null,\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n\"InventoryRetrievalParameters\": {\n\"StartDate\": \"2013-11-12T13:43:12Z\",\n\"EndDate\": \"2013-11-20T08:12:45Z\",\n\"Limit\": \"120000\",\n\"Format\": \"JSON\",\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n}\nList Jobs API Version 2012-06-01 507\n\nAmazon S3 Glacier Developer Guide\n],\n\"Marker\": null\n}\nExample: Return a Partial List of Jobs\nExample Request\nThe following GET request returns the job specified by the marker parameter. Setting the limit\nparameter as 2 specifies that up to two jobs are returned. GET /-/vaults/examplevault/jobs?marker=HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID&limit=2\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response shows two jobs returned and the Marker field set to a non-null value that\ncan be used to continue pagination of the job list. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1744\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"58-3KpZfcMPUznvMZNPaKyJx9wODCsWTnqcjtx2CjKZ6b-\nXgxEuA8yvZOYTPQfd7gWR4GRm2XR08gcnWbLV4VPV_kDWtZJKi0TFhKKVPzwrZnA4-\nFXuIBfViYUIVveeiBE51FO4bvg\",\n\"ArchiveSizeInBytes\": 8388608,\n\"ArchiveSHA256TreeHash\":\n\"106086b256ddf0fedf3d9e72f461d5983a2566247ebe7e1949246bc61359b4f4\",\n\"Completed\": true,\nList Jobs API Version 2012-06-01 508\n\nAmazon S3 Glacier Developer Guide\n\"CompletionDate\": \"2012-05-01T00:25:20.043Z\",\n\"CreationDate\": \"2012-05-01T00:25:16.344Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"aaabbbccc\",\n\"JobId\": \"s4MvaNHIh6mOa1f8iY4ioG2921SDPihXxh3Kv0FBX-\nJbNPctpRvE4c2_BifuhdGLqEhGBNGeB6Ub-JMunR9JoVa8y1hQ\",\n\"RetrievalByteRange\": \"0-8388607\",\n\"SHA256TreeHash\":\n\"106086b256ddf0fedf3d9e72f461d5983a2566247ebe7e1949246bc61359b4f4\",\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n},\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"2NVGpf83U6qB9M2u-\nIhh61yoFLRDEoh7YLZWKBn80A2i1xG8uieBwGjAr4RkzOHA0E07ZjtI267R03Z-6Hxd8pyGQkBdciCSH1-\nLw63Kx9qKpZbPCdU0uTW_WAdwF6lR6w8iSyKdvw\",\n\"ArchiveSizeInBytes\": 1048576,\n\"ArchiveSHA256TreeHash\":\n\"3d2ae052b2978727e0c51c0a5e32961c6a56650d1f2e4ceccab6472a5ed4a0\",\n\"Completed\": true,\n\"CompletionDate\": \"2012-05-01T16:59:48.444Z\",\n\"CreationDate\": \"2012-05-01T16:59:42.977Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"aaabbbccc\",\n\"JobId\":\n\"CQ_tf6fOR4jrJCL61Mfk6VM03oY8lmnWK93KK4gLig1UPAbZiN3UV4G_5nq4AfmJHQ_dOMLOX5k8ItFv0wCPN0oaz5dG\",\n\"RetrievalByteRange\": \"0-1048575\",\n\"SHA256TreeHash\":\n\"3d2ae052b2978727e0c51c0a5e32961c6a56650d1f2e4ceccab6472a5ed4a0\",\n\"SNSTopic\": null,\n\"StatusCode\": \"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"Tier\": \"Standard\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n],\n\"Marker\":\n\"CQ_tf6fOR4jrJCL61Mfk6VM03oY8lmnWK93KK4gLig1UPAbZiN3UV4G_5nq4AfmJHQ_dOMLOX5k8ItFv0wCPN0oaz5dG\"\n}\nList Jobs API Version 2012-06-01 509\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nData Types Used in Job Operations\nThe following are data types used with the job operations in S3 Glacier.",
      "start_idx": 763308,
      "end_idx": 769513,
      "metadata": {
        "num_sentences": 8,
        "num_words": 460,
        "breakpoint_idx": 4558,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.44714750562395367
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_446",
      "text": "Topics\n\u2022 CSVInput\n\u2022 CSVOutput\n\u2022 Encryption\n\u2022 GlacierJobDescription\n\u2022 Grant\n\u2022 Grantee\n\u2022 InputSerialization\n\u2022 InventoryRetrievalJobInput\n\u2022 jobParameters\n\u2022 OutputLocation\n\u2022 OutputSerialization\n\u2022 S3Location\n\u2022 SelectParameters\nCSVInput\nContains information about the comma-separated values (CSV) file. Contents\nComments\nA single character used to indicate that a row should be ignored when the character is present\nat the start of that row. Data Types Used in Job Operations API Version 2012-06-01 510\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nFieldDelimiter\nA single character used to separate individual fields from each other within a record. The\ncharacter must be a \\n, \\r, or an ASCII character in the range 32\u2013126.",
      "start_idx": 769514,
      "end_idx": 770248,
      "metadata": {
        "num_sentences": 4,
        "num_words": 110,
        "breakpoint_idx": 4562,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.29396724700927734
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_447",
      "text": "The default is a comma\n(,). Type: String\nDefault: ,\nRequired: no\nFileHeaderInfo\nA value that describes what to do with the first line of the input. Type: String\nValid Values: Use | Ignore | None\nRequired: no\nQuoteCharacter\nA single character used as an escape character where the field delimiter is part of the value. Type: String\nRequired: no\nQuoteEscapeCharacter\nA single character used for escaping the quotation-mark character inside an already escaped\nvalue. Type: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other. CSVInput API Version 2012-06-01 511\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nCSVOutput\nContains information about the comma-separated values (CSV) format that the job results are\nstored in. Contents\nFieldDelimiter\nA single character used to separate individual fields from each other within a record.",
      "start_idx": 770249,
      "end_idx": 771184,
      "metadata": {
        "num_sentences": 7,
        "num_words": 144,
        "breakpoint_idx": 4569,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3587750026157924
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_448",
      "text": "Type: String\nRequired: no\nQuoteCharacter\nA single character used as an escape character where the field delimiter is part of the value. Type: String\nRequired: no\nQuoteEscapeCharacter\nA single character used for escaping the quotation-mark character inside an already escaped\nvalue. Type: String\nRequired: no\nQuoteFields\nA value that indicates whether all output fields should be contained within quotation marks. CSVOutput API Version 2012-06-01 512\n\nAmazon S3 Glacier Developer Guide\nValid Values: ALWAYS | ASNEEDED\nType: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other. Type: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nEncryption\nContains information about the encryption used to store the job results in Amazon S3. Contents\nEncryption\nThe server-side encryption algorithm used when storing job results in Amazon S3. The default is\nno encryption. Type: String\nValid Values: aws:kms | AES256\nRequired: no\nKMSContext\nOptional. If the encryption type is aws:kms, you can use this value to specify the encryption\ncontext for the job results. Type: String\nEncryption API Version 2012-06-01 513\n\nAmazon S3 Glacier Developer Guide\nRequired: no\nKMSKeyId\nThe AWS Key Management Service (AWS KMS) key ID to use for object encryption.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 196,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3640677558051215
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_449",
      "text": "Type: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nGlacierJobDescription\nContains the description of an Amazon S3 Glacier (S3 Glacier) job. Contents\nAction\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select. Type: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null. Type: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval. For inventory retrieval jobs,\nthis field is null. Type: String\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null. GlacierJobDescription API Version 2012-06-01 514\n\nAmazon S3 Glacier Developer Guide\nType: Number\nCompleted\ntrue if the job is completed; false otherwise.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 126,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3381383260091146
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_450",
      "text": "Type: Boolean\nCompletionDate\nThe date when the job completed. The Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. CreationDate\nThe Universal Coordinated Time (UTC) date the job started. Type: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. InventoryRetrievalParameters\nInput parameters used for a range inventory retrieval. Type: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null. Type: Number\nJobDescription\nThe job description that you provided when you initiated the job.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 119,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35125982496473523
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_451",
      "text": "Type: String\nJobId\nThe ID that identifies the job in S3 Glacier. GlacierJobDescription API Version 2012-06-01 515\n\nAmazon S3 Glacier Developer Guide\nType: String\nJobOutputPath\nContains the job output location. Type: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored. Type: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If no range was specified in the archive retrieval, then the\nwhole archive is retrieved and StartByteValue equals 0 and EndByteValue equals the size of the\narchive minus 1. For inventory retrieval jobs, this field is null. Type: String\nSelectParameters\nAn object that contains information about the parameters used for a select. Type: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value. For more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36199315388997394
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_452",
      "text": "For the specific case in which the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value. This field is null in the following situations:\n\u2022 Archive retrieval jobs that specify a range that is not tree-hash aligned. \u2022 Archival jobs that specify a range that is equal to the whole archive and the job status is\nInProgress. GlacierJobDescription API Version 2012-06-01 516\n\nAmazon S3 Glacier Developer Guide\n\u2022 Inventory jobs. \u2022 Select jobs. Type: String\nSNSTopic\nThe Amazon Resource Name (ARN) that represents an Amazon SNS topic where notification of\njob completion or failure is sent, if notification was configured in the job initiation (Initiate Job\n(POST jobs)). Type: String\nStatusCode\nThe code indicating the status of the job. Valid Values: InProgress | Succeeded | Failed\nType: String\nStatusMessage\nThe job status message. Type: String\nTier\nThe data access tier to use for the select or archive retrieval. Valid Values: Expedited | Standard | Bulk\nType: String\nVaultARN\nThe ARN of the vault of which the job is a subresource. Type: String\nMore Info\n\u2022 Initiate Job (POST jobs)\nGlacierJobDescription API Version 2012-06-01 517\n\nAmazon S3 Glacier Developer Guide\nGrant\nContains information about a grant. Contents\nGrantee\nThe grantee.",
      "start_idx": 771185,
      "end_idx": 776629,
      "metadata": {
        "num_sentences": 12,
        "num_words": 203,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3222314372207179
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_453",
      "text": "Type: Grantee object\nRequired: no\nPermission\nThe permission given to the grantee. Type: String\nValid Values: FULL_CONTROL | WRITE | WRITE_ACP | READ | READ_ACP\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nGrantee\nContains information about a grantee. Contents\nDisplayName\nThe screen name of the grantee. Type: String\nRequired: no\nGrant API Version 2012-06-01 518\n\nAmazon S3 Glacier Developer Guide\nEmailAddress\nThe email address of the grantee. Type: String\nRequired: no\nID\nThe canonical user ID of the grantee. Type: String\nRequired: no\nType\nThe type of the grantee. Type: String\nValid Values: AmazonCustomerByEmail | CanonicalUser | Group\nRequired: no\nURI\nThe URI of the grantee group. Type: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nInputSerialization\nDescribes how the archive is serialized. InputSerialization API Version 2012-06-01 519\n\nAmazon S3 Glacier Developer Guide\nContents\nCSV\nAn object that describes the serialization of a CSV-encoded object. Type: CSVInput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nInventoryRetrievalJobInput\nProvides options for specifying a range inventory retrieval job. Contents\nEndDate\nThe end of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated before this date.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 194,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3370160536332564
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_454",
      "text": "Valid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z. Type: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z. Required: no\nFormat\nThe output format for the vault inventory list, which is set by the Initiate Job (POST jobs)\nrequest when initiating a job to retrieve a vault inventory. Valid Values: CSV | JSON\nRequired: no\nInventoryRetrievalJobInput API Version 2012-06-01 520\n\nAmazon S3 Glacier Developer Guide\nType: String\nLimit\nThe maximum number of inventory items that can be returned for each vault inventory retrieval\nrequest. Valid Values: An integer value greater than or equal to 1. Type: String\nRequired: no\nMarker\nAn opaque string that represents where to continue pagination of the vault inventory retrieval\nresults. You use this marker in a new Initiate Job request to obtain additional inventory\nitems. If there are no more inventory items, this value is null. Type: String\nRequired: no\nStartDate\nThe start of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated on or after this date. Valid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3334779912775213
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_455",
      "text": "Type: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z. Required: no\nMore Info\n\u2022 Initiate Job (POST jobs)\njobParameters\nProvides options for defining a job. jobParameters API Version 2012-06-01 521\n\nAmazon S3 Glacier Developer Guide\nContents\nArchiveId\nThe ID of the archive that you want. This field is required if the Type field is set to select or\narchive-retrieval. An error occurs if you specify this field for an inventory retrieval job\nrequest. Valid Values: Must be a valid archive ID that you obtained from a previous request to Amazon S3\nGlacier (S3 Glacier). Type: String\nRequired: Yes when Type is set to select or archive-retrieval. Description\nThe optional description for the job. Valid Values: The description must be less than or equal to 1,024 bytes. The allowable\ncharacters are 7-bit ASCII without control codes\u2014specifically, ASCII values 32\u2013126 decimal or\n0x20\u20130x7E hexadecimal.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 150,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25949616865678266
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_456",
      "text": "Type: String\nRequired: no\nFormat\n(Optional) The output format, when initiating a job to retrieve a vault inventory. If you are\ninitiating an inventory job and don't specify a Format field, JSON is the default format. Valid Values: CSV | JSON\nType: String\nRequired: no\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval. Type: InventoryRetrievalJobInput object\njobParameters API Version 2012-06-01 522\n\nAmazon S3 Glacier Developer Guide\nRequired: no\nOutputLocation\nAn object that contains information about the location where the select job results are stored. Type: OutputLocation object\nRequired: Yes, for select jobs. RetrievalByteRange\nThe byte range to retrieve for an archive-retrieval, in the form\n\"StartByteValue-EndByteValue\". If this field isn't specified, the whole archive is retrieved. If this field is specified, the byte range must be megabyte (1024*1024) aligned. Megabyte-\naligned means that StartByteValue must be divisible by 1 MB, and EndByteValue plus 1 must be\ndivisible by 1 MB or be the end of the archive specified as the archive byte size value minus 1. If\nRetrievalByteRange is not megabyte-aligned, this operation returns a 400 response. An error occurs if you specify this field for an inventory-retrieval or select job request.",
      "start_idx": 776630,
      "end_idx": 781518,
      "metadata": {
        "num_sentences": 11,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3370841979980469
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_457",
      "text": "Type: String\nRequired: no\nSelectParameters\nAn object that contains information about the parameters used for a select. Type: SelectParameters object\nRequired: no\nSNSTopic\nThe Amazon Resource Name (ARN) of the Amazon SNS topic where S3 Glacier sends a\nnotification when the job is completed and output is ready for you to download. The specified\ntopic publishes the notification to its subscribers. The SNS topic must exist. If it doesn't, S3 Glacier doesn't create it for you. Additionally, the\nSNS topic must have a policy that allows the account that created the job to publish messages\nto the topic. For information about SNS topic names, see CreateTopic in the Amazon Simple\nNotification Service API Reference. jobParameters API Version 2012-06-01 523\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nTier\nThe tier to use for a select or an archive retrieval job. Standard is the default value used. Valid Values: Expedited | Standard | Bulk\nType: String\nRequired: no\nType\nThe job type. You can initiate a job to perform a select query on an archive, retrieve an archive,\nor get an inventory of a vault.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 11,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23652877807617187
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_458",
      "text": "Valid Values: select | archive-retrieval | inventory-retrieval\nType: String\nRequired: yes\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputLocation\nContains information about the location where the job results and errors are stored. Contents\nS3\nAn object that describes an Amazon S3 location to receive the results of the restore request. Type: S3Location\nRequired: yes\nOutputLocation API Version 2012-06-01 524\n\nAmazon S3 Glacier Developer Guide\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputSerialization\nDescribes how the output is serialized. Contents\nCSV\nAn object that describes the serialization of the comma-separated values (CSV)-encoded query\nresults. Type: CSVOutput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nS3Location\nContains information about the location in Amazon S3 where the job results are stored. Contents\nAccessControlList\nA list of grants that control access to the stored results. Type: Array of Grant objects\nRequired: no\nBucketName\nThe name of the Amazon S3 bucket where the job results are stored. The bucket must be in the\nsame AWS Region as the vault that contains the input archive object. OutputSerialization API Version 2012-06-01 525\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: yes\nCannedACL\nThe canned access control list (ACL) to apply to the job results. Type: String\nValid Values: private | public-read | public-read-write | aws-exec-read |\nauthenticated-read | bucket-owner-read | bucket-owner-full-control\nRequired: no\nEncryption\nAn object that contains information about the encryption used to store the job results in\nAmazon S3. Type: Encryption object\nRequired: no\nPrefix\nThe prefix that is prepended to the results for this request.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 11,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37068606289950284
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_459",
      "text": "The maximum length for the prefix\nis 512 bytes. Type: String\nRequired: yes\nStorageClass\nThe class of storage used to store the job results. Type: String\nValid Values: STANDARD | REDUCED_REDUNDANCY | STANDARD_IA\nRequired: no\nTagging\nThe tag set that is applied to the job results. S3Location API Version 2012-06-01 526\n\nAmazon S3 Glacier Developer Guide\nType: String to string map\nRequired: no\nUserMetadata\nA map of metadata to store with the job results in Amazon S3. Type: String to string map\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nSelectParameters\nContains information about the parameters used for the select. Contents\nExpression\nThe expression that is used to select the object. The expression must not exceed the quota of\n128,000 characters. Type: String\nRequired: yes\nExpressionType\nThe type of the provided expression, for example SQL. Valid Values: SQL\nType: String\nRequired: yes\nSelectParameters API Version 2012-06-01 527\n\nAmazon S3 Glacier Developer Guide\nInputSerialization\nDescribes the serialization format of the object in the select. Type: InputSerialization object\nRequired: no\nOutputSerialization\nDescribes how the results of the select job are serialized. Required: no\nType: OutputSerialization object\nMore Info\n\u2022 Initiate Job (POST jobs)\nData Retrieval Operations\nThe following are the data retrieval\u2013related operations available in S3 Glacier.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 11,
        "num_words": 206,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31074288108132103
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_460",
      "text": "Topics\n\u2022 Get Data Retrieval Policy (GET policy)\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\n\u2022 Set Data Retrieval Policy (PUT policy)\nGet Data Retrieval Policy (GET policy)\nDescription\nThis operation returns the current data retrieval policy for the AWS account and AWS Region\nspecified in the GET request. For more information about data retrieval policies, see S3 Glacier Data\nRetrieval Policies. Data Retrieval Operations API Version 2012-06-01 528\n\nAmazon S3 Glacier Developer Guide\nRequests\nTo return the current data retrieval policy, send an HTTP GET request to the data retrieval policy\nURI as shown in the following syntax example. Syntax\nGET /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nSyntax\nHTTP/1.1 200 OK\nGet Data Retrieval Policy API Version 2012-06-01 529\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"BytesPerHour\": Number,\n\"Strategy\": String\n}\n]\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.",
      "start_idx": 781519,
      "end_idx": 787761,
      "metadata": {
        "num_sentences": 13,
        "num_words": 298,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3576663579696264
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_461",
      "text": "Response Body\nThe response body contains the following JSON fields. BytesPerHour\nThe maximum number of bytes that can be retrieved in an hour. This field will be present only if the value of the Strategy field is BytesPerHour. Type: Number\nRules\nThe policy rule. Although this is a list type, currently there will be only one rule, which contains\na Strategy field and optionally a BytesPerHour field. Type: Array\nStrategy\nThe type of data retrieval policy. Get Data Retrieval Policy API Version 2012-06-01 530\n\nAmazon S3 Glacier Developer Guide\nType: String\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console.",
      "start_idx": 787762,
      "end_idx": 790091,
      "metadata": {
        "num_sentences": 8,
        "num_words": 105,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2825577599661691
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_462",
      "text": "FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example demonstrates how to get a data retrieval policy. Example Request\nIn this example, a GET request is sent to the URI of a policy's location. GET /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the data retrieval policy in the body of the response in JSON format. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 85\n{\n\"Policy\":\n{\nGet Data Retrieval Policy API Version 2012-06-01 531\n\nAmazon S3 Glacier Developer Guide\n\"Rules\":[\n{\n\"BytesPerHour\":10737418240,\n\"Strategy\":\"BytesPerHour\"\n}\n]\n}\n}\nRelated Sections\n\u2022 Set Data Retrieval Policy (PUT policy)\n\u2022 Initiate Job (POST jobs)\nList Provisioned Capacity (GET provisioned-capacity)\nThis operation lists the provisioned capacity units for the specified AWS account. For more\ninformation about provisioned capacity, see Archive Retrieval Options.",
      "start_idx": 787762,
      "end_idx": 790091,
      "metadata": {
        "num_sentences": 9,
        "num_words": 196,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3382270071241591
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_463",
      "text": "A provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date. The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second. If the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28.",
      "start_idx": 790092,
      "end_idx": 790574,
      "metadata": {
        "num_sentences": 5,
        "num_words": 92,
        "breakpoint_idx": 4733,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.6273193359375
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_464",
      "text": "You can see this functionality in the Example\nResponse. Request Syntax\nTo list the provisioned retrieval capacity for an account, send an HTTP GET request to the\nprovisioned-capacity URI as shown in the following syntax example. GET /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nList Provision Capacity API Version 2012-06-01 532\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body.",
      "start_idx": 790575,
      "end_idx": 792816,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33499170939127604
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_465",
      "text": "Responses\nIf the operation is successful, the service sends back an HTTP 200 OK response. Response Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"ProvisionedCapacityList\":\n{\n\"CapacityId\" : \"string\",\nList Provision Capacity API Version 2012-06-01 533\n\nAmazon S3 Glacier Developer Guide\n\"StartDate\" : \"string\"\n\"ExpirationDate\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThe response body contains the following JSON fields. CapacityId\nThe ID that identifies the provisioned capacity unit. Type: String. StartDate\nThe date that the provisioned capacity unit was purchased, in Coordinated Universal Time\n(UTC). Type: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. ExpirationDate\nThe date that the provisioned capacity unit expires, in Coordinated Universal Time (UTC). Type: String.",
      "start_idx": 790575,
      "end_idx": 792816,
      "metadata": {
        "num_sentences": 11,
        "num_words": 144,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2332611083984375
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_466",
      "text": "A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z. Errors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nThe following example lists the provisioned capacity units for an account. List Provision Capacity API Version 2012-06-01 534\n\nAmazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to retrieve a list of the provisioned capacity units for the\nspecified account. GET /123456789012/priority-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 200 OK with a list of\nprovisioned capacity units for the account as shown in the following example. The provisioned capacity unit listed first is an example of a unit with a start date of January 31,\n2017 and expiration date of February 28, 2017. As stated earlier, if the start date is on the 31st day\nof a month, the expiration date is the last day of the next month. HTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"ProvisionedCapacityList\",\n{\n\"CapacityId\": \"zSaq7NzHFQDANTfQkDen4V7z\",\n\"StartDate\": \"2017-01-31T14:26:33.031Z\",\n\"ExpirationDate\": \"2017-02-28T14:26:33.000Z\",\n},\n{\n\"CapacityId\": \"yXaq7NzHFQNADTfQkDen4V7z\",\n\"StartDate\": \"2016-12-13T20:11:51.095Z\"\",\n\"ExpirationDate\": \"2017-01-13T20:11:51.000Z\" \",\n},\n...\n}\nList Provision Capacity API Version 2012-06-01 535\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\nPurchase Provisioned Capacity (POST provisioned-capacity)\nThis operation purchases a provisioned capacity unit for an AWS account. A provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date.",
      "start_idx": 792817,
      "end_idx": 795042,
      "metadata": {
        "num_sentences": 9,
        "num_words": 267,
        "breakpoint_idx": 4763,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.34562672509087455
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_467",
      "text": "The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second. If the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28. Provisioned capacity helps ensure that your retrieval capacity for expedited retrievals is available\nwhen you need it. Each unit of capacity ensures that at least three expedited retrievals can be\nperformed every five minutes and provides up to 150 MB/s of retrieval throughput. For more\ninformation about provisioned capacity, see Archive Retrieval Options. Note\nThere is a limit of two provisioned capacity units per AWS account. Requests\nTo purchase provisioned capacity unit for an AWS account send an HTTP POST request to the\nprovisioned-capacity URI. Syntax\nPOST /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nPurchase Provisioned Capacity API Version 2012-06-01 536\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.",
      "start_idx": 795043,
      "end_idx": 796659,
      "metadata": {
        "num_sentences": 13,
        "num_words": 257,
        "breakpoint_idx": 4776,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23352838173890725
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_468",
      "text": "Request Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThis operation does not have a request body. Responses\nIf the operation request is successful, the service returns an HTTP 201 Created response. Syntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-capacity-id: CapacityId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers. Purchase Provisioned Capacity API Version 2012-06-01 537\n\nAmazon S3 Glacier Developer Guide\nName Description\nx-amz-capacity-id The ID that identifies the provisioned capacity unit. Type: String\nResponse Body\nThis operation does not return a response body. Errors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses. Code Description HTTP Status Type\nCode\nLimitExceededException Returned if the given request 400 Bad Client\nwould exceed the account's limit Request\nof provisioned capacity units.",
      "start_idx": 796660,
      "end_idx": 801223,
      "metadata": {
        "num_sentences": 11,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34666914506392044
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_469",
      "text": "Examples\nThe following example purchases provisioned capacity for an account. Example Request\nThe following example sends an HTTP POST request to purchase a provisioned capacity unit. POST /123456789012/provisioned-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nPurchase Provisioned Capacity API Version 2012-06-01 538\n\nAmazon S3 Glacier Developer Guide\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created\nresponse, as shown in the following example. HTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-capacity-id: zSaq7NzHFQDANTfQkDen4V7z\nRelated Sections\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\nSet Data Retrieval Policy (PUT policy)\nDescription\nThis operation sets and then enacts a data retrieval policy in the AWS Region specified in the PUT\nrequest. You can set one policy per AWS Region for an AWS account. The policy is enacted within a\nfew minutes of a successful PUT operation. The set policy operation does not affect retrieval jobs that were in progress before the policy was\nenacted. For more information about data retrieval policies, see S3 Glacier Data Retrieval Policies. Requests\nSyntax\nTo set a data retrieval policy, send an HTTP PUT request to the data retrieval policy URI as shown in\nthe following syntax example. PUT /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\":\nSet Data Retrieval Policy API Version 2012-06-01 539\n\nAmazon S3 Glacier Developer Guide\n{\n\"Rules\":[\n{\n\"Strategy\": String,\n\"BytesPerHour\": Number\n}\n]\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request.",
      "start_idx": 796660,
      "end_idx": 801223,
      "metadata": {
        "num_sentences": 11,
        "num_words": 273,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3225836320356889
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_470",
      "text": "You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID. Request Parameters\nThis operation does not use request parameters. Request Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers. Request Body\nThe request body contains the following JSON fields. BytesPerHour\nThe maximum number of bytes that can be retrieved in an hour. This field is required only if the value of the Strategy field is BytesPerHour. Your PUT\noperation will be rejected if the Strategy field is not set to BytesPerHour and you set this\nfield. Type: Number\nSet Data Retrieval Policy API Version 2012-06-01 540\n\nAmazon S3 Glacier Developer Guide\nRequired: Yes, if the Strategy field is set to BytesPerHour. Otherwise, no.",
      "start_idx": 796660,
      "end_idx": 801223,
      "metadata": {
        "num_sentences": 11,
        "num_words": 166,
        "chunk_type": "semantic_split",
        "coherence_score": 0.21790046691894532
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_471",
      "text": "Valid Values: Minimum integer value of 1. Maximum integer value of 2^63 - 1 inclusive. Rules\nThe policy rule. Although this is a list type, currently there must be only one rule, which\ncontains a Strategy field and optionally a BytesPerHour field. Type: Array\nRequired: Yes\nStrategy\nThe type of data retrieval policy to set. Type: String\nRequired: Yes\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console. FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 112,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2263474570380317
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_472",
      "text": "Responses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers. Response Body\nThis operation does not return a response body. Set Data Retrieval Policy API Version 2012-06-01 541\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses. Examples\nExample Request\nThe following example sends an HTTP PUT request with the Strategy field set to BytesPerHour. PUT /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"Strategy\":\"BytesPerHour\",\n\"BytesPerHour\":10737418240\n}\n]\n}\n}\nThe following example sends an HTTP PUT request with the Strategy field set to FreeTier. PUT /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Policy\":\n{\nSet Data Retrieval Policy API Version 2012-06-01 542\n\nAmazon S3 Glacier Developer Guide\n\"Rules\":[\n{\n\"Strategy\":\"FreeTier\"\n}\n]\n}\n}\nThe following example sends an HTTP PUT request with the Strategy field set to None. PUT /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"Strategy\":\"None\"\n}\n]\n}\n}\nExample Response\nIf the request was successful Amazon S3 Glacier (S3 Glacier) sets the policy and returns a HTTP\n204 No Content as shown in the following example. HTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Get Data Retrieval Policy (GET policy)\nSet Data Retrieval Policy API Version 2012-06-01 543\n\nAmazon S3 Glacier Developer Guide\n\u2022 Initiate Job (POST jobs)\nSet Data Retrieval Policy API Version 2012-06-01 544\n\nAmazon S3 Glacier Developer Guide\nDocument History\n\u2022 Current product version: 2012-06-01\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide from July 5, 2018, onward. For notification about updates to this documentation,\nyou can subscribe to an RSS feed.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 329,
        "chunk_type": "semantic_split",
        "coherence_score": 0.36241544087727867
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_473",
      "text": "Change Description Date\nImproved start times for Standard retrievals for restore August 9, 2023\nStandard restore requests requests that are made\nmade through S3 Batch through S3 Batch Operations\nOperations now can start within minutes. For more information, see\nArchive Retrieval Options. Amazon S3 supports higher Amazon S3 supports restore November 15, 2022\nrestore request rates for S3 requests at a rate of up\nGlacier Flexible Retrieval and to 1,000 transactions per\nS3 Glacier Deep Archive second, per AWS account\nfor the S3 Glacier Flexible\nRetrieval and S3 Glacier Deep\nArchive storage classes. Amazon Glacier name change Amazon Glacier is now November 20, 2018\nAmazon S3 Glacier to better\nreflect Glacier's integration\nwith Amazon S3. Updates now available over You can now subscribe to an July 5, 2018\nRSS RSS feed to receive notificat\nions about updates to the\nAmazon S3 Glacier Developer\nGuide guide. API Version 2012-06-01 545\n\nAmazon S3 Glacier Developer Guide\nEarlier Updates\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide before July 5, 2018. Change Description Release Date\nExpedited S3 Glacier now supports Expedited and Bulk data November 21,\nand Bulk Data retrievals in addition to Standard retrievals. For more 2016\nRetrievals information, see Archive Retrieval Options. Vault Lock S3 Glacier now supports Vault Lock, which allows you July 8, 2015\nto easily deploy and enforce compliance controls on\nindividual S3 Glacier vaults with a Vault Lock policy. For more information, see S3 Glacier Vault Lock and\nVault Lock Policies.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44697108798556856
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_474",
      "text": "Vault tagging S3 Glacier now allows you to tag your S3 Glacier June 22, 2015\nvaults for easier resource and cost management. Tags are labels that you can define and associate\nwith your vaults, and using tags adds filtering\ncapabilities to operations such as AWS cost reports. For more information, see Tagging Amazon S3 Glacier\nResources and Tagging Your S3 Glacier Vaults. Vault access S3 Glacier now supports managing access to your April 27, 2015\npolicies individual S3 Glacier vaults by using vault access\npolicies. You can now define an access policy directly\non a vault, making it easier to grant vault access to\nusers and business groups internal to your organizat\nion, as well as to your external business partners. For\nmore information, see Vault Access Policies. Data retrieval S3 Glacier now supports data retrieval policies and December 11,\npolicies and audit audit logging. Data retrieval policies allow you to 2014\nlogging easily set data retrieval limits and simplify data\nretrieval cost management. You can define your own\ndata retrieval limits with a few clicks in the AWS\nEarlier Updates API Version 2012-06-01 546\n\nAmazon S3 Glacier Developer Guide\nChange Description Release Date\nManagement Console or by using the S3 Glacier API. For more information, see S3 Glacier Data Retrieval\nPolicies.",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 212,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4409185621473524
      }
    },
    {
      "chunk_id": "b1ca4c82-c1f1-4c9a-a31f-c41a2382464e_chunk_475",
      "text": "In addition, S3 Glacier now supports audit logging\nwith AWS CloudTrail, which records S3 Glacier API\ncalls for your account and delivers the log files to\nan Amazon S3 bucket that you specify. For more\ninformation, see Logging Amazon S3 Glacier API Calls\nwith AWS CloudTrail. Updates to Java Updated the Java code examples in this guide that June 27, 2014\nsamples use the AWS SDK for Java. Limiting vault You can now limit the number of vault inventory December 31,\ninventory retrieval items retrieved by filtering on the archive creation 2013\ndate or by setting a limit. For more information\nabout limiting inventory retrieval, see Range Invento\nry Retrieval in the Initiate Job (POST jobs) topic. Removed Removed the URLs that pointed to the old security July 26, 2013\noutdated URLs credentials page from code examples. Support for range S3 Glacier now supports retrieval of specific ranges November 13,\nretrievals of your archives. You can initiate a job requesting 2012\nS3 Glacier to prepare an entire archive or a portion\nof the archive for subsequent download. When an\narchive is very large, you may find it cost effective\nto initiate several sequential jobs to prepare your\narchive. For more information, see Downloading an Archive in\nS3 Glacier. New Guide This is the first release of the A mazon S3 Glacier August 20, 2012\nDeveloper Guide. Earlier Updates API Version 2012-06-01 547\n\nAmazon S3 Glacier Developer Guide\nAWS Glossary\nFor the latest AWS terminology, see the AWS glossary in the AWS Glossary Reference. API Version 2012-06-01 548",
      "start_idx": 801224,
      "end_idx": 809450,
      "metadata": {
        "num_sentences": 13,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2917740650666066
      }
    }
  ],
  "metadata": {
    "total_chunks": 476,
    "avg_chunk_size": 231.23739495798318,
    "chunking_method": "SemanticChunker",
    "processed_at": "2025-05-04T17:50:26.869975",
    "total_sentences": 4863,
    "total_words": 109977,
    "chunking_strategy": "semantic",
    "embedding_model": "all-MiniLM-L6-v2",
    "percentile_threshold": 95,
    "original_breakpoints": 218,
    "final_chunks": 476,
    "avg_chunk_size_sentences": 10.216386554621849
  }
}