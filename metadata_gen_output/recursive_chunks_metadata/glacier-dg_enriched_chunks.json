{
  "document_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933",
  "document_name": "glacier-dg.txt",
  "chunks": [
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_0",
      "text": "Developer Guide\nAmazon S3 Glacier\nAPI Version 2012-06-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier: Developer Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.\nAmazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon.",
      "start_idx": 0,
      "end_idx": 699,
      "metadata": {
        "num_sentences": 6,
        "num_words": 112,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Legal",
              "Trademark"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "API Version 2012-06-01",
            "AWS",
            "trademarks",
            "copyright",
            "trade dress",
            "affiliates",
            "services",
            "property"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Web Services",
            "API Version 2012-06-01",
            "Amazon",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Legal Notices"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a developer guide for Amazon S3 Glacier, including legal and trademark information related to its usage and ownership rights.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the API version for Amazon S3 Glacier?",
            "What are the trademark restrictions for using Amazon's branding?",
            "Who owns the rights to Amazon S3 Glacier documentation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Web Services",
          "Developer Guide",
          "trade dress",
          "API Version 2012-06-01",
          "trademarks",
          "Amazon S3 Glacier",
          "property",
          "services",
          "AWS",
          "affiliates",
          "Amazon",
          "copyright"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_1",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTable of Contents\n.......................................................................................................................................................... x\nWhat Is Amazon S3 Glacier? ........................................................................................................... 1\nDo You Currently Use S3 Glacier? ............................................................................................................. 1\nData Model ..................................................................................................................................................... 3\nVault........................................................................................................................................................... 3\nArchive....................................................................................................................................................... 4\nJob.............................................................................................................................................................. 4\nNotification Configuration ..................................................................................................................... 5\nSupported Operations................................................................................................................................. 6\nVault Operations..................................................................................................................................... 6\nArchive Operations .................................................................................................................................. 7\nJobs ............................................................................................................................................................ 7\nAccessing S3 Glacier .................................................................................................................................... 7\nRegions and Endpoints .......................................................................................................................... 8\nGetting Started................................................................................................................................ 9\nStep 1: Before You Begin ......................................................................................................................... 10\nSet Up an AWS account ...................................................................................................................... 10\nDownload the Appropriate AWS SDK ............................................................................................... 12\nStep 2: Create a Vault ............................................................................................................................... 13\nStep 3: Upload an Archive to a Vault .................................................................................................... 14\nUpload an Archive by Using Java ...................................................................................................... 15\nUpload an Archive by Using .NET ...................................................................................................... 20\nStep 4: Download an Archive from a Vault .......................................................................................... 22\nDownload an Archive by Using Java................................................................................................. 23\nDownload an Archive by Using .NET ................................................................................................ 25\nStep 5: Delete an Archive from a Vault ................................................................................................ 27\nRelated Sections .................................................................................................................................... 27\nDelete an Archive by Using Java....................................................................................................... 28\nDelete an Archive by Using .NET ....................................................................................................... 29\nDeleting an Archive by Using the AWS CLI ..................................................................................... 30\nStep 6: Delete a Vault ............................................................................................................................... 33\nWhere Do I Go From Here? ...................................................................................................................... 34\nWorking with Vaults ...................................................................................................................... 35\nVault Operations in S3 Glacier ................................................................................................................ 36\nAPI Version 2012-06-01 iii",
      "start_idx": 699,
      "end_idx": 5774,
      "metadata": {
        "num_sentences": 4,
        "num_words": 214,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "API Integration",
              "SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Archive",
            "Job",
            "Notification Configuration",
            "AWS SDK",
            "Regions",
            "Endpoints",
            "API Version",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "AWS CLI",
            "Vault Operations",
            "Archive Operations"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Java",
            ".NET",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a detailed guide on using Amazon S3 Glacier, including steps for creating vaults, uploading, downloading, and deleting archives, and integrating with AWS SDKs and CLI tools.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What are the steps to upload an archive using Java?",
            "How can I delete an archive using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Endpoints",
          "Vault Operations",
          "Archive Operations",
          "Amazon S3 Glacier",
          "Vault",
          "Archive",
          "AWS CLI",
          "API Version",
          "Notification Configuration",
          "AWS SDK",
          "Job",
          "Regions"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_2",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTagging Vaults by Using the AWS CLI .............................................................................................. 97\nTagging Vaults by Using the Amazon S3 Glacier API .................................................................... 98\nRelated Sections .................................................................................................................................... 98\nVault Lock.................................................................................................................................................... 99\nVault Locking Overview ....................................................................................................................... 99\nVault Locking by Using the API ....................................................................................................... 100\nVault Locking Using the CLI ............................................................................................................. 101\nVault Locking by Using the Console .............................................................................................. 103\nWorking with Archives ................................................................................................................ 106\nArchive Operations.................................................................................................................................. 107\nUploading an Archive ........................................................................................................................ 107\nFinding an Archive .............................................................................................................................. 107\nDownloading an Archive ................................................................................................................... 107\nDeleting an Archive ............................................................................................................................ 108\nUpdating an Archive .......................................................................................................................... 108\nMaintaining Client-Side Archive Metadata ......................................................................................... 108\nUploading an Archive .............................................................................................................................. 108\nOptions for Uploading an Archive .................................................................................................. 109\nUploading an Archive in a Single Operation ................................................................................ 110\nUploading Large Archives in Parts .................................................................................................. 120\nDownloading an Archive ........................................................................................................................ 137\nRetrieving Archives in Console ........................................................................................................ 138\nDownloading an Archive Using Java .............................................................................................. 142\nDownloading an Archive Using .NET .............................................................................................. 159\nDownloading an Archive by Using REST ....................................................................................... 175\nDownloading an Archive Using the AWS CLI ................................................................................ 176\nDeleting an Archive ................................................................................................................................. 179\nDeleting an Archive Using Java ....................................................................................................... 180\nDeleting an Archive Using .NET ....................................................................................................... 182\nDeleting an Archive Using REST ...................................................................................................... 185\nDeleting an Archive Using the AWS CLI ........................................................................................ 185\nUsing the AWS SDKs ................................................................................................................... 189\nAWS SDK Libraries for Java and .NET .................................................................................................. 189\nWhat Is the Low-Level API? ............................................................................................................. 189\nWhat Is the High-Level API? ............................................................................................................ 190\nWhen to Use the High-Level and Low-Level API ......................................................................... 190\nAPI Version 2012-06-01 v",
      "start_idx": 10803,
      "end_idx": 15903,
      "metadata": {
        "num_sentences": 3,
        "num_words": 247,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step Instructions",
              "API Usage",
              "CLI Commands"
            ]
          },
          "keywords": [
            "Vault Lock",
            "Archive Operations",
            "AWS CLI",
            "Amazon S3 Glacier API",
            "Uploading Archives",
            "Downloading Archives",
            "Deleting Archives",
            "AWS SDKs",
            "High-Level API",
            "Low-Level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS CLI",
            "AWS SDKs",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDKs"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides detailed instructions for managing Amazon S3 Glacier vaults and archives using various tools such as AWS CLI, APIs, and SDKs. It includes procedural guidance for uploading, downloading, deleting archives, and implementing Vault Lock features.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I tag vaults in Amazon S3 Glacier using the AWS CLI?",
            "What are the steps to upload large archives in parts?",
            "How do I delete an archive using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Downloading Archives",
          "Deleting Archives",
          "Low-Level API",
          "Amazon S3 Glacier API",
          "API Version 2012-06-01",
          "Archive Operations",
          "Uploading Archives",
          "Amazon S3 Glacier",
          "AWS CLI",
          "Vault Lock",
          "AWS SDKs",
          "High-Level API"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_3",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThis page is only for existing customers of the S3 Glacier service using Vaults and the original\nREST API from 2012.\nIf you're looking for archival storage solutions we suggest using the S3 Glacier storage classes\nin Amazon S3, S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive. To learn more about these storage options, see S3 Glacier storage classes and Long-term\ndata storage using S3 Glacier storage classes in the Amazon S3 User Guide. These storage classes\nuse the Amazon S3 API, are available in all regions, and can be managed within the Amazon S3\nconsole. They offer features like Storage Cost Analysis, Storage Lens, advanced optional encryption\nfeatures, and more.\nAPI Version 2012-06-01 x",
      "start_idx": 34071,
      "end_idx": 34847,
      "metadata": {
        "num_sentences": 6,
        "num_words": 125,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vaults",
            "REST API",
            "archival storage",
            "storage classes",
            "Instant Retrieval",
            "Flexible Retrieval",
            "Deep Archive",
            "encryption",
            "Storage Cost Analysis"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon S3",
            "Vaults",
            "S3 Glacier Instant Retrieval",
            "S3 Glacier Flexible Retrieval"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archival",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "Amazon S3 API"
          ]
        },
        "semantic": {
          "summary": "This documentation is intended for existing users of the original S3 Glacier REST API and provides guidance on transitioning to modern S3 Glacier storage classes for archival solutions available via the Amazon S3 API and console.",
          "intents": [
            "Reference",
            "Compare",
            "How-To"
          ],
          "potential_questions": [
            "What are the differences between S3 Glacier storage classes?",
            "How can I transition from the original S3 Glacier REST API to the S3 API?",
            "What features do the S3 Glacier storage classes offer?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier Instant Retrieval",
          "Vaults",
          "Amazon S3 Glacier",
          "Amazon S3",
          "REST API",
          "archival storage",
          "encryption",
          "S3 Glacier Flexible Retrieval",
          "storage classes",
          "Storage Cost Analysis",
          "Deep Archive",
          "S3 Glacier",
          "Instant Retrieval",
          "Flexible Retrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_4",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nWhat Is Amazon S3 Glacier?\nIf you're currently using the Amazon S3 Glacier (S3 Glacier) service and want to learn more, you'll\nfind the information that you need in this guide. S3 Glacier is a secure and durable service for low-\ncost data archiving and long-term backup using vaults. For more information about S3 Glacier\nservice pricing, see S3 Glacier pricing.\nTopics\n\u2022 Do You Currently Use S3 Glacier?\n\u2022 Amazon S3 Glacier Data Model\n\u2022 Supported Operations in S3 Glacier\n\u2022 Accessing Amazon S3 Glacier\nDo You Currently Use S3 Glacier?\nNote\nThis section is about the S3 Glacier service. If you currently use the S3 Glacier storage\nclasses (S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive), see Storage classes for archiving objects in the Amazon S3 User Guide.\nIf you currently use the S3 Glacier service and want to learn more, we recommend that you begin\nby reading the following sections:\n\u2022 What is Amazon S3 Glacier \u2013 The rest of this section describes the underlying data model, the\noperations it supports, and the AWS SDKs that you can use to interact with the service.\n\u2022 Getting Started \u2013 The Getting Started with Amazon S3 Glacier section walks you through the\nprocess of creating a vault, uploading archives, creating jobs to download archives, retrieving the\njob output, and deleting archives.\nImportant\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI)\nDo You Currently Use S3 Glacier? API Version 2012-06-01 1",
      "start_idx": 34847,
      "end_idx": 36462,
      "metadata": {
        "num_sentences": 13,
        "num_words": 270,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data archiving",
            "long-term backup",
            "vaults",
            "AWS CLI",
            "storage classes",
            "S3 Glacier pricing",
            "archives",
            "retrieval",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "S3 Glacier Instant Retrieval",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "The Amazon S3 Glacier Developer Guide provides information on using S3 Glacier for secure, durable, and low-cost data archiving and long-term backup, including details on its data model, supported operations, and access methods.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 Glacier and how does it work?",
            "How can I create and manage vaults in Amazon S3 Glacier?",
            "What tools are required for performing archive operations in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Glacier Instant Retrieval",
          "AWS Command Line Interface",
          "Amazon S3 Glacier",
          "S3 Glacier Flexible Retrieval",
          "AWS CLI",
          "S3 Glacier Deep Archive",
          "AWS SDKs",
          "storage classes",
          "vaults",
          "archives",
          "retrieval",
          "S3 Glacier pricing",
          "data archiving",
          "long-term backup"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_5",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nor write code. There is no console support for archive operations. For example, to upload\ndata, such as photos, videos, and other documents, you must either use the AWS CLI or\nwrite code to make requests, by using either the REST API directly or by using the AWS\nSDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For\nexamples of using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with\nthe AWS Command Line Interface.\nBeyond the getting started section, you'll probably want to learn more about S3 Glacier\noperations. The following sections provide detailed information about working with S3 Glacier by\nusing the REST API and the AWS SDKs for Java and Microsoft .NET:\n\u2022 Using the AWS SDKs with Amazon S3 Glacier\nThis section provides an overview of the AWS SDKs used in various code examples in this guide.\nA review of this section will help when reading the following sections. It includes an overview\nof the high-level and the low-level APIs that these SDKs offer, when to use them, and common\nsteps for running the code examples provided in this guide.\n\u2022 Working with Vaults in Amazon S3 Glacier\nThis section provides details of various vault operations, such as creating a vault, retrieving vault\nmetadata, using jobs to retrieve vault inventory, and configuring vault notifications. In addition\nto using the S3 Glacier console, you can use the AWS SDKs for various vault operations. This\nsection describes the API and provides working samples by using the AWS SDK for Java and the\nAWS SDK for .NET.\n\u2022 Working with Archives in Amazon S3 Glacier\nThis section provides details of archive operations, such as uploading an archive in a single\nrequest or using a multipart upload operation to upload large archives in parts. The section also\nexplains how to create jobs to download archives asynchronously. The section provides examples\nby using the AWS SDK for Java and the AWS SDK for .NET.\n\u2022 API Reference for Amazon S3 Glacier\nDo You Currently Use S3 Glacier? API Version 2012-06-01 2",
      "start_idx": 36462,
      "end_idx": 38622,
      "metadata": {
        "num_sentences": 18,
        "num_words": 371,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "API Usage",
              "Examples"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "REST API",
            "AWS SDKs",
            "Vault Operations",
            "Archive Operations",
            "Multipart Upload",
            "Vault Notifications",
            "Java SDK",
            ".NET SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDKs"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This guide provides information on using Amazon S3 Glacier for data archival via AWS CLI, REST API, and AWS SDKs, including details on vault and archive operations with code examples.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload archives to S3 Glacier using the AWS CLI?",
            "What are the steps to create a vault in Amazon S3 Glacier?",
            "How do I use the AWS SDKs for Java and .NET with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Vault Operations",
          "API Version 2012-06-01",
          "Archive Operations",
          "Amazon S3 Glacier",
          "REST API",
          "AWS CLI",
          "AWS SDK for Java",
          "AWS SDKs",
          "Multipart Upload",
          "Vault Notifications",
          "Java SDK",
          "S3 Glacier",
          "AWS SDK for .NET",
          ".NET SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_6",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier is a RESTful service. This section describes the REST operations, including the syntax,\nand example requests and responses for all the operations. The AWS SDK libraries wrap this API,\nsimplifying your programming tasks.\nAmazon S3 Glacier Data Model\nThe Amazon S3 Glacier data model core components include vaults and archives. S3 Glacier is\na REST-based web service. In terms of REST, vaults and archives are the resources. In addition,\nthe S3 Glacier data model includes job and notification-configuration resources. These resources\ncomplement the core resources.\nTopics\n\u2022 Vault\n\u2022 Archive\n\u2022 Job\n\u2022 Notification Configuration\nVault\nIn S3 Glacier, a vault is a container for storing archives. A vault is similar to an Amazon S3 bucket.\nWhen you create a vault, you specify a name and choose an AWS Region where you want to create\nthe vault.\nEach vault resource has a unique address. The general form is:\nhttps://region-specific-endpoint/account-id/vaults/vault-name\nFor example, suppose that you create a vault (examplevault) in the US West (Oregon) Region in\nyour account with the ID 111122223333. You can address this vault by using the following URI:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault\nHere is what the various components of the URI mean:\n\u2022 glacier.us-west-2.amazonaws.com identifies the US West (Oregon) Region.\n\u2022 111122223333 is the AWS account ID that owns the vault.\nData Model API Version 2012-06-01 3",
      "start_idx": 38622,
      "end_idx": 40114,
      "metadata": {
        "num_sentences": 16,
        "num_words": 224,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "archive",
            "RESTful service",
            "AWS Region",
            "URI",
            "job",
            "notification configuration",
            "data model",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "US West (Oregon) Region",
            "vault",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "REST APIs",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The document explains the RESTful operations, data model components, and resource structure of Amazon S3 Glacier, including vaults and archives as core resources and their corresponding URIs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is a vault in Amazon S3 Glacier?",
            "How do I construct a URI for an S3 Glacier vault?",
            "What components are included in the S3 Glacier data model?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "URI",
          "job",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "endpoint",
          "notification configuration",
          "data model",
          "RESTful service",
          "S3 Glacier",
          "AWS SDK",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_7",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 vaults refers to the collection of vaults that are owned by the AWS account.\n\u2022 examplevault identifies a specific vault in the vaults collection.\nAn AWS account can create vaults in any supported AWS Region. For list of supported AWS\nRegions, see Accessing Amazon S3 Glacier. Within a Region, an account must use unique vault\nnames. An AWS account can create same-named vaults in different Regions.\nYou can store an unlimited number of archives in a vault. Depending on your business or\napplication needs, you can store these archives in one vault or multiple vaults.\nS3 Glacier supports various vault operations. Vault operations are Region-specific. For example,\nwhen you create a vault, you create it in a specific Region. When you request a vault list, you\nrequest it from a specific AWS Region, and the resulting list includes only vaults created in that\nspecific Region.\nArchive\nAn archive can be any data, such as a photo, video, or document. An archive is similar to an Amazon\nS3 object, and is the base unit of storage in S3 Glacier. Each archive has a unique ID and an\noptional description. You can specify this optional description only during the upload of an archive.\nS3 Glacier assigns the archive an ID, which is unique in the AWS Region in which the archive is\nstored.\nEach archive has a unique address. The general form is as follows:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/archives/archive-id\nThe following is an example URI of an archive stored in the examplevault vault in the US West\n(Oregon) Region in account 111122223333:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/\nexamplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can store an unlimited number of archives in a vault.\nJob\nAn S3 Glacier job can retrieve an archive, or get an inventory of a vault.\nArchive API Version 2012-06-01 4",
      "start_idx": 40114,
      "end_idx": 42113,
      "metadata": {
        "num_sentences": 21,
        "num_words": 298,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "vaults",
            "AWS Regions",
            "archives",
            "S3 Glacier",
            "vault operations",
            "archive ID",
            "archive URI",
            "vault inventory",
            "Region-specific",
            "AWS account"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Regions",
            "examplevault",
            "US West (Oregon)",
            "Archive API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the structure and operations of Amazon S3 Glacier vaults and archives, including their region-specific behavior and unique identifiers.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What is the structure of an archive URI in S3 Glacier?",
            "Can I store multiple archives in a single vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Regions",
          "AWS account",
          "examplevault",
          "vault operations",
          "US West (Oregon)",
          "Amazon S3 Glacier",
          "Region-specific",
          "vault inventory",
          "Archive API Version 2012-06-01",
          "archive ID",
          "vaults",
          "archives",
          "S3 Glacier",
          "archive URI"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_8",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRetrieving archives and vault inventories (lists of archives) are asynchronous operations in S3\nGlacier, in which you first initiate a job, and then download the job output after S3 Glacier\ncompletes the job.\nNote\nS3 Glacier offers a cold-storage data-archival solution. If your application needs a storage\nsolution that requires real-time data retrieval, you might consider using Amazon S3. For\nmore information, see Amazon Simple Storage Service (Amazon S3).\nTo initiate a vault inventory job, you provide a vault name. Archive retrieval jobs require both the\nvault name and the archive ID. You can also provide an optional job description to help identify the\njobs.\nArchive retrieval and vault inventory jobs are associated with a vault. A vault can have multiple jobs\nin progress at any point in time. When you send a job request (initiate a job), S3 Glacier returns to\nyou a job ID to track the job. Each job is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/jobs/job-id\nThe following is an example of a job associated with an examplevault vault in the US West\n(Oregon) Region in account 111122223333.\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault/jobs/\nHkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nFor each job, S3 Glacier maintains information, such as the job type, description, creation date,\ncompletion date, and job status. You can obtain information about a specific job or obtain a list\nof all your jobs associated with a vault. The list of jobs that S3 Glacier returns includes all the in-\nprogress and recently finished jobs.\nNotification Configuration\nBecause jobs take time to run, S3 Glacier supports a notification mechanism to notify you when a\njob is completed. You can configure a vault to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when a job is completed. You can specify one Amazon SNS topic per\nvault in the notification configuration.\nNotification Configuration API Version 2012-06-01 5",
      "start_idx": 42113,
      "end_idx": 44232,
      "metadata": {
        "num_sentences": 17,
        "num_words": 313,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference",
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "archive retrieval",
            "job ID",
            "notification configuration",
            "Amazon SNS",
            "cold-storage",
            "vault name",
            "job status",
            "URI"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon S3",
            "Amazon Simple Notification Service",
            "US West (Oregon) Region",
            "Notification Configuration API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archival",
            "Asynchronous Operations"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "Amazon S3",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains how to retrieve archives and vault inventories in Amazon S3 Glacier using asynchronous operations, including job initiation, tracking, and notification configuration via Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archives from S3 Glacier?",
            "What is a vault inventory job in S3 Glacier?",
            "How can I configure notifications for completed jobs in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "Amazon Simple Notification Service",
          "job status",
          "URI",
          "cold-storage",
          "Amazon SNS",
          "Amazon S3",
          "vault name",
          "vault inventory",
          "notification configuration",
          "archive retrieval",
          "job ID",
          "Notification Configuration API",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_9",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier stores the notification configuration as a JSON document. The following is an example\nvault notification configuration:\n{\n\"Topic\": \"arn:aws:sns:us-west-2:111122223333:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nNotification configurations are associated with vaults; you can have one for each vault. Each\nnotification configuration resource is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/notification-\nconfiguration\nS3 Glacier supports operations to set, get, and delete a notification configuration. When you delete\na notification configuration, no notifications are sent when any data retrieval operation on the\nvault is completed.\nSupported Operations in S3 Glacier\nTo work with vaults and archives (see Amazon S3 Glacier Data Model), Amazon S3 Glacier supports\na set of operations. Among all the supported operations, only the following operations are\nasynchronous:\n\u2022 Retrieving an archive\n\u2022 Retrieving a vault inventory (list of archives)\nThese operations require you to first initiate a job and then download the job output. The following\nsections summarize the S3 Glacier operations.\nVault Operations\nS3 Glacier provides operations to create and delete vaults. You can obtain a vault description for a\nspecific vault or for all vaults in an AWS Region. The vault description provides information, such\nas the creation date, the number of archives in the vault, the total size in bytes used by all the\narchives in the vault, and the date that S3 Glacier generated the vault inventory. S3 Glacier also\nprovides operations to set, retrieve, and delete a notification configuration on the vault. For more\ninformation, see Working with Vaults in Amazon S3 Glacier.\nSupported Operations API Version 2012-06-01 6",
      "start_idx": 44232,
      "end_idx": 46090,
      "metadata": {
        "num_sentences": 13,
        "num_words": 263,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Operations",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "notification configuration",
            "JSON document",
            "URI",
            "asynchronous operations",
            "archive retrieval",
            "vault inventory",
            "API version",
            "SNS topic"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vaults",
            "archives",
            "SNS topic",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This document explains the configuration and operations supported by Amazon S3 Glacier, including vault notification settings and asynchronous data retrieval processes. It provides examples and details about API usage for managing vaults and archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure notifications for an S3 Glacier vault?",
            "What operations are supported by Amazon S3 Glacier?",
            "How can I retrieve data asynchronously from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "URI",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault",
          "asynchronous operations",
          "vaults",
          "vault inventory",
          "notification configuration",
          "archive retrieval",
          "JSON document",
          "archives",
          "S3 Glacier",
          "AWS Region",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_10",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nArchive Operations\nS3 Glacier provides operations for you to upload and delete archives. You cannot update an\nexisting archive; you must delete the existing archive and upload a new archive. Each time that you\nupload an archive, S3 Glacier generates a new archive ID. For more information, see Working with\nArchives in Amazon S3 Glacier.\nJobs\nYou can initiate an S3 Glacier job to perform a retrieval on an archive or get an inventory of a vault.\nThe following are the types of S3 Glacier jobs:\n\u2022 archive-retrieval \u2013 Retrieve an archive.\nFor more information, see Downloading an Archive in S3 Glacier.\n\u2022 inventory-retrieval \u2013 Inventory a vault.\nFor more information, see Downloading a Vault Inventory in Amazon S3 Glacier.\nAccessing Amazon S3 Glacier\nAmazon S3 Glacier is a RESTful web service that uses HTTP and HTTPS as a transport protocol and\nJavaScript Object Notation (JSON) as a message-serialization format. Your application code can\nmake requests directly to the S3 Glacier web service API. When using the REST API directly, you\nmust write the necessary code to sign and authenticate your requests. For more information about\nthe API, see API Reference for Amazon S3 Glacier.\nAlternatively, you can simplify application development by using the AWS SDKs that wrap the S3\nGlacier REST API calls. You provide your credentials, and these libraries take care of authentication\nand request signing. For more information about using the AWS SDKs, see Using the AWS SDKs\nwith Amazon S3 Glacier.\nS3 Glacier also provides a console. However, all archive and job operations require you to write\ncode and make requests by using either the REST API directly or the AWS SDK wrapper libraries. To\naccess the S3 Glacier console, go to S3 Glacier Console.\nArchive Operations API Version 2012-06-01 7",
      "start_idx": 46090,
      "end_idx": 47918,
      "metadata": {
        "num_sentences": 20,
        "num_words": 300,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive operations",
            "archive ID",
            "vault inventory",
            "REST API",
            "AWS SDKs",
            "authentication",
            "request signing",
            "retrieval",
            "console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "REST API",
            "AWS SDKs",
            "archive-retrieval",
            "inventory-retrieval"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "The document provides an overview of Amazon S3 Glacier's archive operations, job types, and methods for accessing the service, including REST API and AWS SDKs. It highlights the need for code-based interactions for archive and job operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I upload and delete archives in Amazon S3 Glacier?",
            "What are the types of jobs available in Amazon S3 Glacier?",
            "How can I access Amazon S3 Glacier using the REST API or AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "authentication",
          "archive-retrieval",
          "inventory-retrieval",
          "Amazon S3 Glacier",
          "REST API",
          "retrieval",
          "vault inventory",
          "AWS SDKs",
          "archive ID",
          "archive operations",
          "request signing",
          "console"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_11",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRegions and Endpoints\nYou create a vault in a specific AWS Region. You always send your S3 Glacier requests to an\nendpoint specific to an AWS Region. For a list of the AWS Regions supported by S3 Glacier, see\nAmazon S3 Glacier endpoints and quotas in the AWS General Reference.\nRegions and Endpoints API Version 2012-06-01 8",
      "start_idx": 47918,
      "end_idx": 48278,
      "metadata": {
        "num_sentences": 4,
        "num_words": 62,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual"
            ]
          },
          "keywords": [
            "AWS Region",
            "S3 Glacier",
            "vault",
            "endpoint",
            "API Version",
            "Amazon S3",
            "quotas",
            "developer guide",
            "regions",
            "reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "API Version 2012-06-01",
            "vault",
            "endpoints"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to create a vault in a specific AWS Region and use region-specific endpoints for requests. It references supported AWS Regions and endpoints for S3 Glacier operations.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the supported AWS Regions for S3 Glacier?",
            "How do I send S3 Glacier requests to region-specific endpoints?",
            "What is the API version used in S3 Glacier documentation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "quotas",
          "regions",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Amazon S3",
          "endpoints",
          "vault",
          "endpoint",
          "reference",
          "API Version",
          "developer guide",
          "S3 Glacier",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_12",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nGetting Started with Amazon S3 Glacier\nYou can get started with Amazon S3 Glacier (S3 Glacier) by working with vaults and archives. A\nvault is a container for storing archives, and an archive is any object, such as a photo, video, or\ndocument, that you store in a vault. An archive is the base unit of storage in S3 Glacier. This getting\nstarted exercise provides instructions for you to explore basic S3 Glacier operations on vaults and\narchives. For more information about these resources, see the Amazon S3 Glacier Data Model\nsection.\nIn the getting started exercise, you will create a vault, upload and download an archive, and then\ndelete the archive and the vault. You can do all these operations programmatically. However, the\ngetting started exercise uses the S3 Glacier management console to create and delete a vault.\nFor uploading and downloading an archive, this getting started section uses the high-level API\nfor the AWS SDK for Java and the AWS SDK for .NET. The high-level API provides a simplified\nprogramming experience when working with S3 Glacier. For more information about using the\nhigh-level API with the AWS SDKs, see Using the AWS SDKs with Amazon S3 Glacier.\nImportant\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nThis getting started exercise provides code examples in Java and C# for you to upload and\ndownload an archive. The last section of the getting started exercise provides steps where you can\nlearn more about the developer experience with S3 Glacier.\nTopics\n\u2022 Step 1: Before You Begin with S3 Glacier\nAPI Version 2012-06-01 9",
      "start_idx": 48278,
      "end_idx": 50550,
      "metadata": {
        "num_sentences": 21,
        "num_words": 387,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Getting Started",
              "Step-by-Step Instructions",
              "SDK Usage"
            ]
          },
          "keywords": [
            "vault",
            "archive",
            "S3 Glacier",
            "AWS CLI",
            "high-level API",
            "REST API",
            "AWS SDK",
            "Java",
            "C#",
            "management console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "S3 Glacier Data Model"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS SDKs"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to getting started with Amazon S3 Glacier, including creating and managing vaults and archives using the AWS CLI and SDKs for Java and .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What tools can I use to upload archives to S3 Glacier?",
            "How do I use the AWS SDKs for working with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "high-level API",
          "Amazon S3 Glacier",
          "Java",
          "REST API",
          "vault",
          "archive",
          "AWS CLI",
          "AWS SDK for Java",
          "management console",
          "AWS SDK for .NET",
          "S3 Glacier Data Model",
          "AWS SDKs",
          "S3 Glacier",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_13",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Step 2: Create a Vault in S3 Glacier\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Step 4: Download an Archive from a Vault in S3 Glacier\n\u2022 Step 5: Delete an Archive from a Vault in S3 Glacier\n\u2022 Step 6: Delete a Vault in S3 Glacier\n\u2022 Where Do I Go From Here?\nStep 1: Before You Begin with S3 Glacier\nBefore you can start with this exercise, you must sign up for an AWS account (if you don't already\nhave one), and then download one of the AWS SDKs. See the following sections for instructions.\nTopics\n\u2022 Set Up an AWS account and an Administrator User\n\u2022 Download the Appropriate AWS SDK\nSet Up an AWS account and an Administrator User\nIf you have not already done so, you must sign up for an AWS account and create an administrator\nuser in the account.\nTo complete the setup, follow the instructions in the following topics.\nSet Up an AWS account and Create an Administrator User\nSign up for AWS\nWhen you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up\nfor all services in AWS, including S3 Glacier. You are charged only for the services that you use. For\nmore information about S3 Glacier usage rates, see the Amazon S3 Glacier pricing page.\nIf you already have an AWS account, skip to Download the Appropriate AWS SDK. If you don't have\nan AWS account, use the following procedure to create one.\nIf you do not have an AWS account, complete the following steps to create one.\nStep 1: Before You Begin API Version 2012-06-01 10",
      "start_idx": 50550,
      "end_idx": 52058,
      "metadata": {
        "num_sentences": 12,
        "num_words": 284,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "AWS account",
            "S3 Glacier",
            "Vault",
            "Archive",
            "AWS SDK",
            "Administrator User",
            "Sign up",
            "Setup",
            "Pricing",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS account",
            "S3 Glacier",
            "AWS SDK",
            "Amazon Web Services",
            "Administrator User"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for setting up and using Amazon S3 Glacier, including creating and managing vaults and archives, and setting up an AWS account with an administrator user.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What steps are required to set up an AWS account for S3 Glacier?",
            "How can I upload or delete an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS account",
          "Setup",
          "Sign up",
          "Amazon Web Services",
          "Pricing",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Vault",
          "Archive",
          "Administrator User",
          "AWS",
          "S3 Glacier",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_14",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTo sign up for an AWS account\n1. Open https://portal.aws.amazon.com/billing/signup.\n2. Follow the online instructions.\nPart of the sign-up procedure involves receiving a phone call and entering a verification code\non the phone keypad.\nWhen you sign up for an AWS account, an AWS account root user is created. The root user\nhas access to all AWS services and resources in the account. As a security best practice, assign\nadministrative access to a user, and use only the root user to perform tasks that require root\nuser access.\nTo create an administrator user, choose one of the following options.\nChoose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\nIn IAM Use short-term Following the instructions Configure programmatic\nIdentity credentials to access in Getting started in the access by Configuring the\nCenter AWS. AWS IAM Identity Center AWS CLI to use AWS IAM\nUser Guide. Identity Center in the AWS\n(RecommenT his aligns with the\nCommand Line Interface User\nded) security best practices\nGuide.\n. For information\nabout best practices\n, see Security best\npractices in IAM in the\nIAM User Guide.\nIn IAM Use long-term Following the instructions Configure programmatic\ncredentials to access in Creating your first IAM access by Managing access\nAWS.\nSet Up an AWS account API Version 2012-06-01 11",
      "start_idx": 52058,
      "end_idx": 53401,
      "metadata": {
        "num_sentences": 16,
        "num_words": 221,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Security"
            ]
          },
          "keywords": [
            "AWS account",
            "root user",
            "IAM",
            "Identity Center",
            "administrator user",
            "programmatic access",
            "verification code",
            "AWS CLI",
            "security best practices",
            "IAM User Guide"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account root user",
            "AWS IAM Identity Center",
            "AWS CLI",
            "IAM User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Account Management",
          "secondary_categories": [
            "Identity and Access Management",
            "Security Best Practices"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM Identity Center",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the steps to sign up for an AWS account, create an administrator user, and configure access using IAM Identity Center or IAM with a focus on security best practices.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I sign up for an AWS account?",
            "What are the best practices for managing an AWS root user?",
            "How can I configure programmatic access using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Account Management]",
        "tf_idf_keywords": [
          "security best practices",
          "AWS account",
          "IAM User Guide",
          "Identity Center",
          "AWS account root user",
          "Amazon S3 Glacier",
          "administrator user",
          "root user",
          "IAM",
          "programmatic access",
          "AWS CLI",
          "AWS IAM Identity Center",
          "verification code"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_15",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nChoose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\n(Not admin user and user group keys for IAM users in the IAM\nrecommend in the IAM User Guide. User Guide.\ned)\nDownload the Appropriate AWS SDK\nTo try the getting started exercise, you must decide which programming language you want to use,\nand then download the appropriate AWS SDK for your development platform.\nThe getting started exercise provides examples in Java and C#.\nDownloading the AWS SDK for Java\nTo test the Java examples in this developer guide, you need the AWS SDK for Java. You have the\nfollowing download options:\n\u2022 If you are using Eclipse, you can download and install the AWS Toolkit for Eclipse by using the\nupdate site http://aws.amazon.com/eclipse/. For more information, see AWS Toolkit for Eclipse.\n\u2022 If you are using any other IDE to create your application, download the AWS SDK for Java.\nDownloading the AWS SDK for .NET\nTo test the C# examples in this developer guide, you need the AWS SDK for .NET. You have the\nfollowing download options:\n\u2022 If you are using Visual Studio, you can install both the AWS SDK for .NET and the AWS Toolkit for\nVisual Studio. The toolkit provides AWS Explorer for Visual Studio and project templates that you\ncan use for development. To download the AWS SDK for .NET, go to http://aws.amazon.com/\nsdkfornet. By default, the installation script installs both the AWS SDK and the AWS Toolkit for\nVisual Studio. To learn more about the toolkit, see the AWS Toolkit for Visual Studio User Guide.\nDownload the Appropriate AWS SDK API Version 2012-06-01 12",
      "start_idx": 53401,
      "end_idx": 55011,
      "metadata": {
        "num_sentences": 15,
        "num_words": 278,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Download Instructions"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Java",
            "C#",
            "Eclipse",
            "Visual Studio",
            "AWS Toolkit",
            "AWS Explorer",
            "project templates",
            "installation script",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Toolkit for Eclipse",
            "AWS Toolkit for Visual Studio",
            "AWS Explorer"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Development",
          "secondary_categories": [
            "Software Development",
            "Cloud Computing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Eclipse",
            "Visual Studio",
            "AWS Toolkit"
          ]
        },
        "semantic": {
          "summary": "This guide provides instructions for downloading and setting up the AWS SDK for Java and .NET to test examples in the Amazon S3 Glacier Developer Guide. It includes details for using IDEs like Eclipse and Visual Studio.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download the AWS SDK for Java?",
            "What tools are recommended for using the AWS SDK for .NET?",
            "Where can I find the AWS Toolkit for Eclipse?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Development]",
        "tf_idf_keywords": [
          "AWS Explorer",
          "AWS Toolkit for Eclipse",
          "AWS Toolkit",
          "Eclipse",
          "installation script",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Java",
          "AWS SDK for Java",
          "AWS Toolkit for Visual Studio",
          "AWS SDK for .NET",
          "AWS SDK",
          "Visual Studio",
          "C#",
          "project templates"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_16",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 If you are using any other IDE to create your application, you can use the same link provided in\nthe preceding step and install only the AWS SDK for .NET.\nStep 2: Create a Vault in S3 Glacier\nA vault is a container for storing archives. Your first step is to create a vault in one of the supported\nAWS Regions. For a list of the AWS Regions that are supported by Amazon S3 Glacier, see Amazon\nS3 Glacier endpoints and quotas in the AWS General Reference.\nYou can create vaults programmatically or by using the S3 Glacier console. This section uses the\nconsole to create a vault.\nTo create a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. In the left navigation pane, choose Vaults.\n3. Choose Create vault.\nThe Create vault page opens.\n4. Under Select a Region, select an AWS Region from the Region selector. Your vault will be\nlocated in the Region that you select.\n5. For Vault name, enter a name for your vault.\nThe following are the vault-naming requirements:\n\u2022 A vault name must be unique within an AWS account and the AWS Region in which the vault\nis created.\n\u2022 A vault name must be between 1 and 255 characters long.\n\u2022 A vault name can contain only the following characters: a\u2013z, A\u2013Z, 0\u20139, _ (underscore), -\n(hyphen), and . (period).\n6. Under Event notifications, to turn on or off notifications on a vault for when a job is\ncompleted, choose one of the following settings:\n\u2022 Turn off notifications \u2013 Notifications are turned off, and notifications are not sent to an\nAmazon Simple Notification Service (Amazon SNS) topic when a specified job is completed.\nStep 2: Create a Vault API Version 2012-06-01 13",
      "start_idx": 55011,
      "end_idx": 56744,
      "metadata": {
        "num_sentences": 25,
        "num_words": 308,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Instructional"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS Region",
            "Amazon SNS",
            "notifications",
            "vault-naming",
            "AWS SDK",
            "management console",
            "API version",
            "event notifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Regions",
            "AWS Management Console",
            "Amazon SNS",
            "AWS SDK for .NET"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Application Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create a vault in Amazon S3 Glacier using the AWS Management Console, including vault naming requirements and notification settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What are the naming requirements for an S3 Glacier vault?",
            "How can I enable or disable notifications for a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "vault-naming",
          "AWS Regions",
          "AWS Management Console",
          "event notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "AWS SDK for .NET",
          "vault",
          "management console",
          "notifications",
          "S3 Glacier",
          "AWS SDK",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_17",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Turn on notifications \u2013 Notifications are turned on, and notifications are sent to the\nprovided Amazon SNS topic when a specified job is completed.\nIf you chose Turn on notifications, see Configuring Vault Notifications by Using the Amazon\nS3 Glacier Console.\n7. If the AWS Region and vault name are correct, then choose Create vault.\nYour new vault is now listed on the Vaults page in the S3 Glacier console.\nStep 3: Upload an Archive to a Vault in S3 Glacier\nIn this step, you'll upload a sample archive to the vault that you created in the preceding step (see\nStep 2: Create a Vault in S3 Glacier). Depending on the development platform that you're using,\nchoose one of the links at the end of this section.\nImportant\nAny archive operation, such as upload, download, or deletion, requires you to use the\nAWS Command Line Interface (CLI) or write code. There is no console support for archive\noperations. For example, to upload data, such as photos, videos, and other documents, you\nmust either use the AWS CLI or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nAn archive is any object, such as a photo, video, or document, that you store in a vault. An archive\nis the base unit of storage in S3 Glacier. You can upload an archive in a single request. For large\narchives, S3 Glacier provides a multipart upload API operation that enables you to upload an\narchive in parts.\nIn this getting started section, you upload a sample archive in a single request. For this exercise,\nyou specify a file that is smaller in size. For larger files, multipart upload is suitable. For more\ninformation, see Uploading Large Archives in Parts (Multipart Upload).\nStep 3: Upload an Archive to a Vault API Version 2012-06-01 14",
      "start_idx": 56744,
      "end_idx": 58820,
      "metadata": {
        "num_sentences": 22,
        "num_words": 367,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step guide",
              "Important notes"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "AWS CLI",
            "multipart upload",
            "SNS notifications",
            "REST API",
            "SDKs",
            "Command Line Interface",
            "multipart upload API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "Vaults",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to create a vault, enable notifications, and upload an archive using the AWS CLI or SDKs, emphasizing the lack of console support for archive operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What tools can I use to upload archives to S3 Glacier?",
            "How can I enable notifications for vault operations in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Command Line Interface",
          "multipart upload",
          "Vaults",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "SDKs",
          "REST API",
          "vault",
          "archive",
          "AWS CLI",
          "SNS notifications",
          "multipart upload API",
          "Amazon SNS"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_18",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTopics\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for .NET\nUpload an Archive to a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following Java code example uses the high-level API of the AWS SDK for Java to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class.\n\u2022 The example uses the upload API operation of the ArchiveTransferManager class from the\nhigh-level API of the AWS SDK for Java.\n\u2022 The example uses the US West (Oregon) Region (us-west-2).\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the name of the archive file that\nyou want to upload.\nNote\nAmazon S3 Glacier keeps an inventory of all the archives in your vaults. When you upload\nthe archive in the following example, it will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday.\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run in\nthe AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nUpload an Archive by Using Java API Version 2012-06-01 15",
      "start_idx": 58820,
      "end_idx": 60235,
      "metadata": {
        "num_sentences": 12,
        "num_words": 253,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Note"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "vault",
            "upload API operation",
            "US West (Oregon) Region",
            "inventory",
            "Eclipse",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for uploading archives to an Amazon S3 Glacier vault using the AWS SDK for Java, utilizing the high-level API and specifying the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to an Amazon S3 Glacier vault using Java?",
            "What is the role of the ArchiveTransferManager class in the AWS SDK for Java?",
            "How does Amazon S3 Glacier update vault inventories?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "AmazonGlacierClient",
          "Eclipse",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "inventory",
          "vault",
          "AWS SDK for Java",
          "GitHub",
          "upload API operation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_21",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB.\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\n}\nUpload an Archive by Using Java API Version 2012-06-01 18",
      "start_idx": 62917,
      "end_idx": 64056,
      "metadata": {
        "num_sentences": 3,
        "num_words": 151,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Checksum Calculation"
            ]
          },
          "keywords": [
            "SHA256",
            "Tree Hash",
            "Checksum",
            "Chunks",
            "Amazon S3 Glacier",
            "Java API",
            "File Input",
            "MessageDigest",
            "File Stream",
            "ONE_MB"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 Tree Hash",
            "Java API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "MessageDigest"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA256 tree hashes for files in chunks using Java for Amazon S3 Glacier, including handling files smaller than 1 MB.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute a SHA256 tree hash for a file in Java?",
            "What is the process for uploading an archive to Amazon S3 Glacier?",
            "How does chunk-based hashing work for data integrity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "MessageDigest",
          "SHA256 Tree Hash",
          "Checksum",
          "Java API",
          "Amazon S3 Glacier",
          "File Input",
          "Tree Hash",
          "File Stream",
          "ONE_MB",
          "SHA256",
          "Chunks"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_23",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (byte datum : data) {\nString hex = Integer.toHexString(datum & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero.\nsb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for Java 2.x API Reference.\nUpload an Archive to a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint.\n\u2022 The code example uses the US West (Oregon) Region (us-west-2).\nUpload an Archive by Using .NET API Version 2012-06-01 20",
      "start_idx": 65177,
      "end_idx": 66236,
      "metadata": {
        "num_sentences": 6,
        "num_words": 170,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadArchive",
            "AWS SDK",
            "ArchiveTransferManager",
            "us-west-2",
            "Vault",
            "C#",
            "Java",
            "hexadecimal",
            "Region endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming Languages",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of uploading an archive to Amazon S3 Glacier using the AWS SDK for Java and .NET, including code snippets and key implementation details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the process for converting a byte array to hexadecimal in Java?",
            "Which region is used in the provided S3 Glacier code example?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "us-west-2",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "Vault",
          "Java",
          "Region endpoint",
          "AWS SDK for Java",
          "AWS SDK for .NET",
          "AWS SDK",
          "UploadArchive",
          "C#",
          "hexadecimal"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_24",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 The example uses the Upload API operation of the ArchiveTransferManager class to upload\nyour archive. For small archives, this operation uploads the archive directly to S3 Glacier. For\nlarger archives, this operation uses the multipart upload API operation in S3 Glacier to split\nthe upload into multiple parts for better error recovery, if any errors are encountered while\nstreaming the data to S3 Glacier.\nFor step-by-step instructions on how to run the following example, see Running Code Examples.\nYou must update the code as shown with the name of your vault and the name of the archive file\nto upload.\nNote\nS3 Glacier keeps an inventory of all the archives in your vaults. When you upload the\narchive in the following example, the archive will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday.\nExample \u2014 Uploading an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to\nupload ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new\nArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive.\nUpload an Archive by Using .NET API Version 2012-06-01 21",
      "start_idx": 66236,
      "end_idx": 67745,
      "metadata": {
        "num_sentences": 10,
        "num_words": 230,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Sample",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "ArchiveTransferManager",
            "multipart upload",
            "vault inventory",
            "AWS SDK for .NET",
            "archive upload",
            "high-level API",
            "Amazon.RegionEndpoint",
            "vault",
            "management console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AWS SDK for .NET",
            "Amazon.RegionEndpoint.USWest2",
            "vault inventory"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to upload an archive to Amazon S3 Glacier, leveraging the ArchiveTransferManager class for both direct and multipart uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using .NET?",
            "What is the ArchiveTransferManager class used for?",
            "How does multipart upload work in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "high-level API",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "vault",
          "vault inventory",
          "Amazon.RegionEndpoint",
          "management console",
          "Amazon.RegionEndpoint.USWest2",
          "archive upload",
          "S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_25",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nstring archiveId = manager.Upload(vaultName, \"getting started archive\ntest\", archiveToUpload).ArchiveId;\nConsole.WriteLine(\"Copy and save the following Archive ID for the next\nstep.\");\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nStep 4: Download an Archive from a Vault in S3 Glacier\nIn this step, you'll download the sample archive that you uploaded previously in Step 3: Upload an\nArchive to a Vault in S3 Glacier.\nImportant\nAmazon S3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nIn general, retrieving your data from S3 Glacier is a two-step process:\n1. Initiate a retrieval job.\n2. After the job is completed, download the bytes of data.\nStep 4: Download an Archive from a Vault API Version 2012-06-01 22",
      "start_idx": 67745,
      "end_idx": 69488,
      "metadata": {
        "num_sentences": 14,
        "num_words": 264,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "AWS CLI",
            "retrieval job",
            "data download",
            "REST API",
            "AWS SDKs",
            "archive operations",
            "code snippet"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS SDKs",
            "REST API",
            "archive ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from an Amazon S3 Glacier vault, including code examples and a two-step process of initiating a retrieval job and downloading the data. It also highlights the need for AWS CLI or SDKs for archive operations, as there is no console support.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier?",
            "What tools are required for archive operations in S3 Glacier?",
            "What is the process for retrieving data from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Amazon S3 Glacier",
          "REST API",
          "vault",
          "archive",
          "AWS CLI",
          "code snippet",
          "AWS SDKs",
          "archive operations",
          "archive ID",
          "retrieval job",
          "data download"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_26",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTo retrieve an archive from S3 Glacier, you first initiate a job. After the job is completed, you\ndownload the data. For more information about archive retrievals, see Retrieving S3 Glacier\nArchives Using AWS Console.\nThe access time of your request depends on the retrieval option that you choose: Expedited,\nStandard, or Bulk retrievals. For all but the largest archives (250 MB+), archives accessed by using\nExpedited retrievals are typically made available within 1\u20135 minutes. Archives retrieved by using\nStandard retrievals typically are available between 3\u20135 hours. Bulk retrievals typically are available\nwithin 5\u201312 hours. For more information about the various retrieval options, see the S3 Glacier\nFAQ. For information about data retrieval charges, see the S3 Glacier pricing page.\nThe code examples shown in the following topics initiate the job, wait for it to be completed, and\nthen download the archive's data.\nTopics\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor Java\nThe following Java code example uses the high-level API of the AWS SDK for Java to download the\narchive that you uploaded in the previous step. In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class.\n\u2022 The code uses the US West (Oregon) Region (us-west-2) to match the location where you\ncreated the vault in Step 2: Create a Vault in S3 Glacier.\n\u2022 The example uses the download API operation of the ArchiveTransferManager class from\nthe high-level API of the AWS SDK for Java. The example creates an Amazon Simple Notification\nService (Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. If you created an AWS Identity and Access Management (IAM) admin\nuser as instructed in Step 1: Before You Begin with S3 Glacier, your user has the necessary IAM\npermissions for the creation and use of the Amazon SNS topic and Amazon SQS queue.\nDownload an Archive by Using Java API Version 2012-06-01 23",
      "start_idx": 69488,
      "end_idx": 71691,
      "metadata": {
        "num_sentences": 17,
        "num_words": 372,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "Expedited retrieval",
            "Standard retrieval",
            "Bulk retrieval",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "entities": [
            "S3 Glacier",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archives from Amazon S3 Glacier using different retrieval options and provides a Java code example for downloading an archive using the AWS SDK for Java. It also highlights the use of Amazon SNS and SQS for notifications and permissions via IAM.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from S3 Glacier?",
            "What are the differences between Expedited, Standard, and Bulk retrievals?",
            "How can I use the AWS SDK for Java to download an archive from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Standard retrieval",
          "AmazonGlacierClient",
          "Expedited retrieval",
          "ArchiveTransferManager",
          "Amazon SNS",
          "Amazon SQS",
          "IAM",
          "AWS SDK for Java",
          "archive retrieval",
          "S3 Glacier",
          "Bulk retrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_27",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier.\nExample \u2014 Downloading an Archive by Using the AWS SDK for Java\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class AmazonGlacierDownloadArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nDownload an Archive by Using Java API Version 2012-06-01 24",
      "start_idx": 71691,
      "end_idx": 73457,
      "metadata": {
        "num_sentences": 3,
        "num_words": 174,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "vaultName",
            "archiveId",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "downloadFilePath"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to download an archive from Amazon S3 Glacier using the AWS SDK for Java, with setup instructions for credentials and endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier using Java?",
            "What are the required AWS SDK components for interacting with S3 Glacier?",
            "How do I configure endpoints for AWS services in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonSNSClient",
          "AmazonGlacierClient",
          "ArchiveTransferManager",
          "vaultName",
          "ProfileCredentialsProvider",
          "Amazon S3 Glacier",
          "downloadFilePath",
          "Amazon SNS",
          "Amazon SQS",
          "AWS SDK for Java",
          "archiveId",
          "AmazonSQSClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_28",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to download the\narchive that you uploaded previously in Upload an Archive to a Vault in S3 Glacier by Using the\nAWS SDK for .NET. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint.\n\u2022 The code example uses the US West (Oregon) Region (us-west-2) to match the location where\nyou created the vault previously in Step 2: Create a Vault in S3 Glacier.\n\u2022 The example uses the Download API operation of the ArchiveTransferManager class to\ndownload your archive. The example creates an Amazon Simple Notification Service (Amazon\nSNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is subscribed to that\ntopic. If you created an AWS Identity and Access Management (IAM) admin user as instructed in\nStep 1: Before You Begin with S3 Glacier, your user has the necessary IAM permissions for the\ncreation and use of the Amazon SNS topic and Amazon SQS queue.\n\u2022 The example then initiates the archive retrieval job and polls the queue for the archive to be\navailable. When the archive is available, the download begins. For information about retrieval\ntimes, see Archive Retrieval Options.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier.\nExample \u2014 Download an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nDownload an Archive by Using .NET API Version 2012-06-01 25",
      "start_idx": 73457,
      "end_idx": 75310,
      "metadata": {
        "num_sentences": 12,
        "num_words": 319,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon)",
            "Amazon SNS",
            "Amazon SQS",
            "IAM permissions",
            "archive retrieval",
            "Download API",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Amazon SNS",
            "Amazon SQS",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide and code example for downloading an archive from an Amazon S3 Glacier vault using the AWS SDK for .NET. It includes details on setting up the required resources, initiating the retrieval job, and handling notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from S3 Glacier using AWS SDK for .NET?",
            "What permissions are required to use Amazon SNS and SQS in this process?",
            "What is the role of the ArchiveTransferManager class in S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Download API",
          "US West (Oregon)",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault",
          "Amazon SQS",
          "IAM",
          "IAM permissions",
          "archive retrieval",
          "S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_30",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nStep 5: Delete an Archive from a Vault in S3 Glacier\nIn this step, you'll delete the sample archive that you uploaded in Step 3: Upload an Archive to a\nVault in S3 Glacier.\nImportant\nYou cannot delete an archive by using the Amazon S3 Glacier console. Any archive\noperation, such as upload, download, or deletion, requires you to use the AWS Command\nLine Interface (CLI) or write code. To upload data, such as photos, videos, and other\ndocuments, you must either use the AWS CLI or write code to make requests, by using\neither the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nDelete the sample archive by following one of these SDKs or the AWS CLI:\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\n\u2022 Delete an Archive in S3 Glacier by Using the AWS CLI\nRelated Sections\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nStep 5: Delete an Archive from a Vault API Version 2012-06-01 27",
      "start_idx": 76792,
      "end_idx": 78208,
      "metadata": {
        "num_sentences": 8,
        "num_words": 262,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Warning",
              "Code Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS CLI",
            "archive",
            "vault",
            "SDK",
            "Java",
            ".NET",
            "REST API",
            "deletion",
            "upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This section provides a step-by-step guide on deleting an archive from a vault in Amazon S3 Glacier using the AWS CLI or SDKs. It emphasizes that archive operations cannot be performed via the S3 Glacier console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from a vault in Amazon S3 Glacier?",
            "What tools are required to perform archive operations in S3 Glacier?",
            "Can I use the S3 Glacier console to delete an archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "API Version 2012-06-01",
          "upload",
          "Java",
          "REST API",
          "AWS CLI",
          "archive",
          "SDK",
          "vault",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS SDK for .NET",
          "deletion",
          "S3 Glacier",
          ".NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_31",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following code example uses the AWS SDK for Java to delete the archive. In the code, note the\nfollowing:\n\u2022 The DeleteArchiveRequest object describes the delete request, including the vault name\nwhere the archive is located and the archive ID.\n\u2022 The deleteArchive API operation sends the request to Amazon S3 Glacier to delete the\narchive.\n\u2022 The example uses the US West (Oregon) Region (us-west-2).\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier.\nExample \u2014 Deleting an Archive by Using the AWS SDK for Java\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class AmazonGlacierDeleteArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nDelete an Archive by Using Java API Version 2012-06-01 28",
      "start_idx": 78208,
      "end_idx": 79776,
      "metadata": {
        "num_sentences": 7,
        "num_words": 209,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "DeleteArchiveRequest",
            "deleteArchive API",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "vault name",
            "archive ID",
            "US West (Oregon) Region",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "Java"
          ],
          "entities": [
            "DeleteArchiveRequest",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "US West (Oregon) Region",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for deleting an archive from an Amazon S3 Glacier vault using the AWS SDK for Java in the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from an S3 Glacier vault using Java?",
            "What is the DeleteArchiveRequest object in the AWS SDK for Java?",
            "Which region is used in this example for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "AmazonGlacierClient",
          "ProfileCredentialsProvider",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "Java",
          "vault name",
          "AWS SDK for Java",
          "archive ID",
          "deleteArchive API"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_32",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n// Delete the archive.\nclient.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully.\");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted.\");\nSystem.err.println(e);\n}\n}\n}\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete the\narchive that you uploaded in the previous step. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint.\n\u2022 The code example uses the US West (Oregon) Region (us-west-2).\n\u2022 The example uses the Delete API operation of the ArchiveTransferManager class that's\nprovided as part of the high-level API of the AWS SDK for .NET.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier.\nExample \u2014 Deleting an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nDelete an Archive by Using .NET API Version 2012-06-01 29",
      "start_idx": 79776,
      "end_idx": 81176,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "ArchiveTransferManager",
            "AWS SDK for .NET",
            "Vault",
            "Archive ID",
            "Region endpoint",
            "US West (Oregon)",
            "Delete API operation",
            "High-Level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon)",
            "DeleteArchiveRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide and code examples for deleting an archive from an Amazon S3 Glacier vault using the AWS SDK for .NET's high-level API.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the role of the ArchiveTransferManager class in deleting archives?",
            "Which AWS region is used in the code example for deleting archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon)",
          "ArchiveTransferManager",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "Vault",
          "Archive ID",
          "Region endpoint",
          "High-Level API",
          "AWS SDK for .NET",
          "Delete API operation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_33",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nclass ArchiveDeleteHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDelete an Archive in S3 Glacier by Using the AWS CLI\nYou can delete archives in Amazon S3 Glacier by using the AWS Command Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 30",
      "start_idx": 81176,
      "end_idx": 82540,
      "metadata": {
        "num_sentences": 7,
        "num_words": 191,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "CLI Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Archive",
            "Delete",
            "ArchiveTransferManager",
            "vaultName",
            "archiveId",
            "Amazon.RegionEndpoint",
            "AmazonGlacierException",
            "credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "ArchiveTransferManager",
            "Amazon.RegionEndpoint.USWest2",
            "AmazonGlacierException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using both the AWS CLI and a code example in C#. It includes setup instructions for the AWS CLI and error handling for programmatic archive deletion.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using C#?",
            "What are the prerequisites for setting up the AWS CLI?",
            "How do I handle errors when deleting an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Delete",
          "ArchiveTransferManager",
          "vaultName",
          "Amazon S3 Glacier",
          "Archive",
          "AWS CLI",
          "AmazonGlacierException",
          "Amazon.RegionEndpoint",
          "archiveId",
          "Amazon.RegionEndpoint.USWest2",
          "credentials"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_34",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Deleting an Archive by Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. For more information on\nthe initiate-job command, see Initiate Job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters \"{\\\"Type\\\": \\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check the status of the previous retrieval job. For more\ninformation on the describe-job command, see Describe Job.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 31",
      "start_idx": 82540,
      "end_idx": 83697,
      "metadata": {
        "num_sentences": 11,
        "num_words": 166,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Example Output"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "list-vaults",
            "initiate-job",
            "describe-job",
            "inventory retrieval",
            "vault",
            "account ID",
            "jobId",
            "configuration"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "job parameters",
            "account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Operations",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for managing S3 Glacier vaults and archives using AWS CLI commands, including listing vaults, initiating inventory retrieval jobs, and checking job statuses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list S3 Glacier vaults using AWS CLI?",
            "What are the steps to delete an archive in S3 Glacier?",
            "How can I check the status of an inventory retrieval job in AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "initiate-job",
          "account ID",
          "list-vaults",
          "inventory retrieval",
          "jobId",
          "job parameters",
          "AWS CLI",
          "vault",
          "describe-job",
          "configuration",
          "vaults",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_35",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to be completed.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified Amazon SNS topic anytime the specific event occurs.\n4. When the job is complete, use the get-job-output command to download the retrieval job\nto the file output.json. For more information on the get-job-output command, see Get\nJob Output.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"\"*** job completion date ***\"\",\n\"ArchiveList\":[{\n{\"ArchiveId\":\"\"*** archiveid ***\"\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"\"*** archive creation date ***\"\",\n\"Size\":\"\"*** archive size (in bytes) ***\"\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}],\n\"ArchiveId\": 123456789\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 32",
      "start_idx": 83697,
      "end_idx": 85367,
      "metadata": {
        "num_sentences": 12,
        "num_words": 226,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Command Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InventoryRetrieval",
            "VaultARN",
            "JobId",
            "Notification Configuration",
            "Amazon SNS",
            "get-job-output",
            "ArchiveList",
            "SHA256TreeHash",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "Amazon SNS",
            "AWS CLI",
            "InventoryRetrievalParameters"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on retrieving inventory data from Amazon S3 Glacier, including setting notifications and using the AWS CLI to download job outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve inventory data from Amazon S3 Glacier?",
            "What is the command to download job output using AWS CLI?",
            "How do I configure notifications for S3 Glacier vault events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrieval",
          "JobId",
          "ArchiveList",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "get-job-output",
          "AWS CLI",
          "VaultARN",
          "InventoryRetrievalParameters",
          "Notification Configuration",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_36",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\n5. Use the delete-archive command to delete each archive from a vault until none remain.\naws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nFor more information on the delete-archive command, see Delete Archive.\nStep 6: Delete a Vault in S3 Glacier\nA vault is a container for storing archives. To delete an Amazon S3 Glacier vault, you must first\ndelete all existing archives in the vault as of the last inventory that S3 Glacier computed.\nYou can delete a vault programmatically or by using the S3 Glacier console. For information about\ndeleting a vault programmatically, see Deleting a Vault in Amazon S3 Glacier.\nImportant\nIf you upload an archive to a vault or delete an archive from a vault within the recent\n24 hours, you must wait until the last vault inventory is updated to reflect the latest\ninformation. S3 Glacier prepares an inventory for each vault periodically, every 24 hours.\nTo delete an empty vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. From the Select a Region menu, choose the AWS Region for the vault that you want to delete.\nIn this getting started exercise, your example vault is in the US West (Oregon) Region.\n3. Select the option button next to the empty vault that you want to delete. If the vault is not\nempty, you must delete all archives before deleting the vault. For more information, see\nDeleting an Archive in Amazon S3 Glacier.\nStep 6: Delete a Vault API Version 2012-06-01 33",
      "start_idx": 85367,
      "end_idx": 86968,
      "metadata": {
        "num_sentences": 19,
        "num_words": 265,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "delete",
            "inventory",
            "API",
            "AWS Management Console",
            "Region",
            "delete-archive command",
            "S3 Glacier console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "delete-archive command",
            "vault inventory",
            "AWS Management Console",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "S3 Glacier console",
            "delete-archive command"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete archives and empty vaults in Amazon S3 Glacier, including step-by-step instructions and prerequisites for using the AWS Management Console or API commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What steps are required to delete an empty vault in S3 Glacier?",
            "What is the importance of the 24-hour inventory update in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "AWS Management Console",
          "API",
          "Region",
          "Amazon S3 Glacier",
          "inventory",
          "vault",
          "archive",
          "delete-archive command",
          "vault inventory",
          "S3 Glacier console",
          "delete"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_37",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nImportant\nDeleting a vault can't be undone.\n4. Choose Delete.\n5. The Delete vault dialog box appears. Choose Delete.\nTo delete a nonempty vault\n1. If you're deleting a nonempty vault, you must first delete all existing archives before deleting\nthe vault. You can do this by writing code to make a delete archive request by using either the\nREST API, the AWS SDK for Java, the AWS SDK for .NET or the AWS CLI. For information about\ndeleting archives, see Step 5: Delete an Archive from a Vault in S3 Glacier.\n2. After the vault is empty, follow the steps to delete an empty vault in the preceding procedure.\nWhere Do I Go From Here?\nNow that you have tried the getting started exercise, you can explore the following sections to\nlearn more about Amazon S3 Glacier.\n\u2022 Working with Vaults in Amazon S3 Glacier\n\u2022 Working with Archives in Amazon S3 Glacier\nWhere Do I Go From Here? API Version 2012-06-01 34",
      "start_idx": 86968,
      "end_idx": 87906,
      "metadata": {
        "num_sentences": 16,
        "num_words": 169,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "vault",
            "delete",
            "archive",
            "S3 Glacier",
            "REST API",
            "AWS SDK",
            "Java",
            ".NET",
            "AWS CLI",
            "empty vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "REST API",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides steps to delete an Amazon S3 Glacier vault, including handling nonempty vaults by first deleting all archives using various tools or APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a nonempty vault in Amazon S3 Glacier?",
            "What tools can I use to delete archives from a vault?",
            "What precautions should I take before deleting a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          ".NET",
          "Amazon S3 Glacier",
          "Java",
          "REST API",
          "vault",
          "archive",
          "AWS CLI",
          "AWS SDK for Java",
          "AWS SDK for .NET",
          "AWS SDK",
          "S3 Glacier",
          "delete",
          "empty vault"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_38",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nWorking with Vaults in Amazon S3 Glacier\nA vault is a container for storing archives. When you create a vault, you specify a vault name and\nthe AWS Region in which you want to create the vault. For a list of the AWS Regions supported by\nS3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General Reference.\nYou can store an unlimited number of archives in a vault.\nImportant\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI) or\nwrite code. There is no console support for archive operations. For example, to upload data,\nsuch as photos, videos, and other documents, you must either use the AWS CLI or write\ncode to make requests, by using either the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nTopics\n\u2022 Vault Operations in S3 Glacier\n\u2022 Creating a Vault in Amazon S3 Glacier\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier\n\u2022 Deleting a Vault in Amazon S3 Glacier\n\u2022 Tagging Your S3 Glacier Vaults\n\u2022 S3 Glacier Vault Lock\nAPI Version 2012-06-01 35",
      "start_idx": 87906,
      "end_idx": 89413,
      "metadata": {
        "num_sentences": 12,
        "num_words": 268,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "vault",
            "archive",
            "AWS CLI",
            "S3 Glacier",
            "REST API",
            "AWS SDKs",
            "vault notifications",
            "vault inventory",
            "vault lock",
            "tagging"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "AWS Regions"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Backup and Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This document provides an overview of working with vaults in Amazon S3 Glacier, including operations, requirements, and tools needed for managing archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What tools are required for archive operations in S3 Glacier?",
            "How can I configure vault notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Regions",
          "vault lock",
          "vault notifications",
          "Amazon S3 Glacier",
          "tagging",
          "REST API",
          "vault",
          "archive",
          "AWS CLI",
          "vault inventory",
          "AWS SDKs",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_39",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nVault Operations in S3 Glacier\nS3 Glacier supports various vault operations. Vault operations are specific to particular AWS\nRegions. In other words, when you create a vault, you create it in a specific AWS Region. When you\nlist vaults, S3 Glacier returns the vault list from the AWS Region that you specified in the request.\nCreating and Deleting Vaults\nAn AWS account can create up to 1,000 vaults per AWS Region. For a list of the AWS Regions\nsupported by S3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General\nReference.\nYou can delete a vault only if there are no archives in the vault as of the last inventory that S3\nGlacier computed and if there have been no writes to the vault since the last inventory.\nNote\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. Because the\ninventory might not reflect the latest information, S3 Glacier ensures that the vault is\nindeed empty by checking if there were any write operations since the last vault inventory.\nFor more information, see Creating a Vault in Amazon S3 Glacier and Deleting a Vault in Amazon\nS3 Glacier.\nRetrieving Vault Metadata\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. S3 Glacier provides API calls for you to retrieve\nthis information for a specific vault or all the vaults in a specific AWS Region in your account. For\nmore information, see Retrieving Vault Metadata in Amazon S3 Glacier.\nDownloading a Vault Inventory\nA vault inventory refers to the list of archives in a vault. For each archive in the list, the inventory\nprovides archive information, such as the archive ID, creation date, and size. S3 Glacier updates\nthe vault inventory once a day, starting on the day that the first archive is uploaded to the vault. A\nvault inventory must exist for you to be able to download it.\nVault Operations in S3 Glacier API Version 2012-06-01 36",
      "start_idx": 89413,
      "end_idx": 91420,
      "metadata": {
        "num_sentences": 18,
        "num_words": 348,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "vault operations",
            "AWS Region",
            "inventory",
            "archives",
            "vault metadata",
            "vault inventory",
            "API calls",
            "Amazon S3 Glacier",
            "endpoints",
            "quotas"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Region",
            "vault",
            "archive",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains vault operations in Amazon S3 Glacier, including creating, deleting, retrieving metadata, and downloading vault inventories within specific AWS Regions. It provides guidelines and API references for managing vaults and archives effectively.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or delete a vault in Amazon S3 Glacier?",
            "What metadata can be retrieved for a vault in S3 Glacier?",
            "How often is the vault inventory updated in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "quotas",
          "vault operations",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "inventory",
          "endpoints",
          "vault metadata",
          "vault",
          "archive",
          "vault inventory",
          "archives",
          "S3 Glacier",
          "AWS Region",
          "API calls"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_40",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDownloading a vault inventory is an asynchronous operation. You must first initiate a job to\ndownload the inventory. After receiving the job request, S3 Glacier prepares your inventory for\ndownload. After the job is completed, you can download the inventory data.\nGiven the asynchronous nature of the job, you can use Amazon Simple Notification Service\n(Amazon SNS) notifications to notify you when the job is completed. You can specify an Amazon\nSNS topic for each individual job request or configure your vault to send a notification when\nspecific vault events occur.\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. If there have been\nno archive additions or deletions to the vault since the last inventory, the inventory date is not\nupdated.\nWhen you initiate a job for a vault inventory, S3 Glacier returns the last inventory that it generated,\nwhich is a point-in-time snapshot and not real-time data. You might not find it useful to retrieve\nvault inventory for each archive upload. However, suppose that you maintain a database on the\nclient-side that contains metadata associated with the archives that you upload to S3 Glacier. In\nthat case, you might find the vault inventory useful to reconcile information in your database with\nthe actual vault inventory.\nFor more information about retrieving a vault inventory, see Downloading a Vault Inventory in\nAmazon S3 Glacier.\nConfiguring Vault Notifications\nRetrieving anything from S3 Glacier, such as an archive from a vault or a vault inventory, is a two-\nstep process. First, you initiate a job. After the job is completed, you download the output. To\nlearn when your job is complete, you can use S3 Glacier notifications. S3 Glacier sends notification\nmessages to an Amazon Simple Notification Service (Amazon SNS) topic that you provide.\nYou can configure notifications on a vault and identify vault events and the Amazon SNS topic to\nbe notified when the event occurs. Anytime the vault event occurs, S3 Glacier sends a notification\nto the specified Amazon SNS topic. For more information, see Configuring Vault Notifications in\nAmazon S3 Glacier.\nCreating a Vault in Amazon S3 Glacier\nCreating a vault adds a vault to the set of vaults in your account. An AWS account can create up to\n1,000 vaults per AWS Region. For a list of the AWS Regions supported by Amazon S3 Glacier (S3\nGlacier), see Regions and Endpoints in the AWS General Reference.\nConfiguring Vault Notifications API Version 2012-06-01 37",
      "start_idx": 91420,
      "end_idx": 93951,
      "metadata": {
        "num_sentences": 25,
        "num_words": 413,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification",
              "Job Management"
            ]
          },
          "keywords": [
            "vault inventory",
            "Amazon S3 Glacier",
            "Amazon SNS",
            "vault notifications",
            "job initiation",
            "archive",
            "AWS Regions",
            "point-in-time snapshot",
            "asynchronous operation",
            "retrieval process"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS Regions",
            "vault inventory",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to perform asynchronous operations in Amazon S3 Glacier, such as downloading a vault inventory and configuring vault notifications using Amazon SNS. It also describes the process of creating vaults and the periodic inventory updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download a vault inventory in Amazon S3 Glacier?",
            "How can I configure vault notifications using Amazon SNS?",
            "What is the process for creating a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Regions",
          "retrieval process",
          "asynchronous operation",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "job initiation",
          "archive",
          "vault inventory",
          "point-in-time snapshot"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_41",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nWhen you create a vault, you must provide a vault name. The following are the vault naming\nrequirements:\n\u2022 Names can be between 1 and 255 characters long.\n\u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.' (period).\nVault names must be unique within an account and the AWS Region in which the vault is being\ncreated. That is, an account can create vaults with the same name in different AWS Regions but not\nin the same AWS Region.\nTopics\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Creating a Vault in Amazon S3 Glacier Using the REST API\n\u2022 Creating a Vault Using the Amazon S3 Glacier Console\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nCreating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe low-level API provides methods for all the vault operations, including creating and deleting\nvaults, getting a vault description, and getting a list of vaults created in a specific AWS Region. The\nfollowing are the steps to create a vault using the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the CreateVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide to\nsign the request is used. For more information, see Using the AWS SDK for Java with Amazon S3\nGlacier.\n3. Run the createVault method by providing the request object as a parameter.\nCreating a Vault Using Java API Version 2012-06-01 38",
      "start_idx": 93951,
      "end_idx": 95840,
      "metadata": {
        "num_sentences": 20,
        "num_words": 336,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "API Usage",
              "SDK Integration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "AWS SDK for Java",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "AWS Region",
            "account ID",
            "createVault method",
            "vault naming requirements",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using the AWS SDK for Java, including the required vault naming conventions and API methods involved.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the naming requirements for Amazon S3 Glacier vaults?",
            "How can I create a vault using the AWS SDK for Java?",
            "What are the steps to use the createVault method in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "CreateVaultRequest",
          "AmazonGlacierClient",
          "createVault method",
          "Amazon S3 Glacier",
          "vault naming requirements",
          "vault",
          "REST API",
          "AWS SDK for Java",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_42",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe response S3 Glacier returns is available in the CreateVaultResult object.\nThe following Java code snippet illustrates the preceding steps. The snippet creates a vault in\nthe us-west-2 Region. The Location it prints is the relative URI of the vault that includes your\naccount ID, the AWS Region, and the vault name.\nAmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nCreateVaultResult result = client.createVault(request);\nSystem.out.println(\"Created vault successfully: \" + result.getLocation());\nNote\nFor information about the underlying REST API, see Create Vault (PUT vault).\nExample: Creating a Vault Using the AWS SDK for Java\nThe following Java code example creates a vault in the us-west-2 Region (for more information\non AWS Regions, see Accessing Amazon S3 Glacier). In addition, the code example retrieves the\nvault information, lists all vaults in the same AWS Region, and then deletes the vault created.\nFor step-by-step instructions on how to run the following example, see Running Java Examples for\nAmazon S3 Glacier Using Eclipse.\nExample\nimport java.io.IOException;\nimport java.util.List;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.CreateVaultRequest;\nimport com.amazonaws.services.glacier.model.CreateVaultResult;\nimport com.amazonaws.services.glacier.model.DeleteVaultRequest;\nimport com.amazonaws.services.glacier.model.DescribeVaultOutput;\nCreating a Vault Using Java API Version 2012-06-01 39",
      "start_idx": 95840,
      "end_idx": 97594,
      "metadata": {
        "num_sentences": 9,
        "num_words": 198,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVaultResult",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "AWS Region",
            "vault",
            "REST API",
            "Java SDK",
            "Eclipse",
            "DeleteVaultRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult",
            "us-west-2 Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK for Java",
            "REST API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java SDK",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of creating, retrieving, listing, and deleting a vault in Amazon S3 Glacier using the AWS SDK for Java. It includes a code snippet and references related API operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using Java?",
            "What is the CreateVaultResult object in the AWS SDK for Java?",
            "How can I delete a vault in Amazon S3 Glacier programmatically?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "AmazonGlacierClient",
          "Eclipse",
          "CreateVaultResult",
          "Amazon S3 Glacier",
          "REST API",
          "vault",
          "us-west-2 Region",
          "DeleteVaultRequest",
          "Java SDK",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_45",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Creating a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Creating a Vault Using the Low-Level API of the AWS SDK for .NET\nCreating a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the CreateVault method\nyou can use to create a vault in an AWS Region.\nExample: Vault Operations Using the High-Level API of the AWS SDK for .NET\nThe following C# code example creates and delete a vault in the US West (Oregon) Region. For a\nlist of AWS Regions in which you can create vaults, see Accessing Amazon S3 Glacier.\nFor step-by-step instructions on how to run the following example, see Running Code Examples.\nYou need to update the code as shown with a vault name.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDeleteHighLevel\n{\nstatic string vaultName = \"*** Provide vault name ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.CreateVault(vaultName);\nConsole.WriteLine(\"Vault created. To delete the vault, press Enter\");\nConsole.ReadKey();\nmanager.DeleteVault(vaultName);\nConsole.WriteLine(\"\\nVault deleted. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nCreating a Vault Using .NET API Version 2012-06-01 42",
      "start_idx": 100780,
      "end_idx": 102283,
      "metadata": {
        "num_sentences": 8,
        "num_words": 211,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "Vault",
            "ArchiveTransferManager",
            "CreateVault",
            "DeleteVault",
            "Amazon S3 Glacier",
            "C#",
            "US West (Oregon)",
            "RegionEndpoint",
            "AmazonGlacierException"
          ],
          "entities": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "US West (Oregon)",
            "Vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to create and delete a vault using the high-level API of the AWS SDK for .NET, with a code example in C#.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the C# code example for creating and deleting a vault in AWS?",
            "Which AWS regions support vault creation in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon)",
          "ArchiveTransferManager",
          "DeleteVault",
          "Amazon S3 Glacier",
          "Vault",
          "AmazonGlacierException",
          "RegionEndpoint",
          "CreateVault",
          "AWS SDK for .NET",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_46",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nCreating a Vault Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the vault operations, including create and delete vaults,\nget a vault description, and get a list of vaults created in a specific AWS Region. The following are\nthe steps to create a vault using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the CreateVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then account ID associated with the credentials you provide to sign\nthe request is assumed. For more information, see Using the AWS SDK for .NET with Amazon S3\nGlacier.\n3. Run the CreateVault method by providing the request object as a parameter.\nThe response S3 Glacier returns is available in the CreateVaultResponse object.\nExample: Vault Operations Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example creates a vault in the US\nWest (Oregon) Region. In addition, the code example retrieves the vault information, lists all vaults\nin the same AWS Region, and then deletes the vault created. The Location printed is the relative\nURI of the vault that includes your account ID, the AWS Region, and the vault name.\nNote\nFor information about the underlying REST API, see Create Vault (PUT vault).\nCreating a Vault Using .NET API Version 2012-06-01 43",
      "start_idx": 102283,
      "end_idx": 104175,
      "metadata": {
        "num_sentences": 20,
        "num_words": 308,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "AmazonGlacierClient",
            "vault operations",
            "AWS Region",
            "low-level API",
            "account ID",
            "Create Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            ".NET Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create, manage, and delete Amazon S3 Glacier vaults using the low-level API of the AWS SDK for .NET, including a C# example for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the process for managing vaults in a specific AWS Region?",
            "What is the purpose of the CreateVaultRequest class in the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "CreateVaultRequest",
          "CreateVaultResponse",
          "AmazonGlacierClient",
          "low-level API",
          "vault operations",
          "Create Vault",
          "Amazon S3 Glacier",
          "AWS SDK for .NET",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_47",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run the following example, see Running Code Examples.\nYou need to update the code as shown with a vault name.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDelete\n{\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic AmazonGlacierClient client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Creating a vault.\");\nCreateAVault();\nDescribeVault();\nGetVaultsList();\nConsole.WriteLine(\"\\nVault created. Now press Enter to delete the vault...\");\nConsole.ReadKey();\nDeleteVault();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void CreateAVault()\n{\nCreateVaultRequest request = new CreateVaultRequest()\n{\nVaultName = vaultName\nCreating a Vault Using .NET API Version 2012-06-01 44",
      "start_idx": 104175,
      "end_idx": 105375,
      "metadata": {
        "num_sentences": 5,
        "num_words": 137,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Implementation",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "DeleteVault",
            "DescribeVault",
            "GetVaultsList",
            "Amazon.RegionEndpoint",
            "Exception Handling",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "VaultCreateDescribeListVaultsDelete",
            "CreateVaultRequest",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Amazon SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to create, describe, list, and delete a vault in Amazon S3 Glacier using the .NET SDK, including exception handling and user prompts.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier using .NET?",
            "What is the process for listing and describing vaults in Amazon S3 Glacier?",
            "How do I handle exceptions when working with Amazon S3 Glacier in .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "AmazonGlacierClient",
          "API Version 2012-06-01",
          "Exception Handling",
          "VaultCreateDescribeListVaultsDelete",
          "DeleteVault",
          "Amazon S3 Glacier",
          "Vault",
          "DescribeVault",
          "Amazon.RegionEndpoint",
          "Amazon.RegionEndpoint.USWest2",
          "GetVaultsList"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_48",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\n}\nstatic void DeleteVault()\n{\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = vaultName\n};\nDeleteVaultResponse response = client.DeleteVault(request);\n}\n}\n}\nCreating a Vault in Amazon S3 Glacier Using the REST API\nTo create a vault using the REST API, see Create Vault (PUT vault).\nCreating a Vault Using the Amazon S3 Glacier Console\nTo create a vault using the Amazon S3 Glacier (S3 Glacier) console, see Step 2: Create a Vault in S3\nGlacier in the Getting Started tutorial.\nCreating a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nFollow these steps to create a vault in Amazon S3 Glacier (S3 Glacier) using the AWS Command\nLine Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Creating a Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nCreating a Vault Using REST API Version 2012-06-01 46",
      "start_idx": 106715,
      "end_idx": 107816,
      "metadata": {
        "num_sentences": 6,
        "num_words": 182,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Execution"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "AWS CLI",
            "REST API",
            "DeleteVaultRequest",
            "DeleteVaultResponse",
            "Create Vault",
            "console",
            "AWS Command Line Interface",
            "configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "DeleteVaultRequest",
            "DeleteVaultResponse",
            "Create Vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and delete vaults in Amazon S3 Glacier using various methods, including the REST API, AWS CLI, and the S3 Glacier console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier using the AWS CLI?",
            "What are the steps to delete a vault in Amazon S3 Glacier?",
            "Which methods are available for creating a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteVaultResponse",
          "AWS Command Line Interface",
          "Create Vault",
          "Amazon S3 Glacier",
          "REST API",
          "vault",
          "AWS CLI",
          "configuration",
          "DeleteVaultRequest",
          "console"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_49",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Creating a Vault Using the AWS CLI\n1. Use the create-vault command to create a vault named awsexamplevault under account\n111122223333.\naws glacier create-vault --vault-name awsexamplevault --account-id 111122223333\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault\"\n}\n2. Verify creation using the describe-vault command.\nCreating a Vault Using the AWS CLI API Version 2012-06-01 47",
      "start_idx": 107816,
      "end_idx": 108879,
      "metadata": {
        "num_sentences": 11,
        "num_words": 157,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "credentials",
            "list-vaults",
            "create-vault",
            "describe-vault",
            "account ID",
            "configuration",
            "help command"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "account ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command-Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI to interact with Amazon S3 Glacier, including verifying setup, listing vaults, creating vaults, and checking configuration settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify my AWS CLI setup?",
            "What commands are used to create and verify a vault in S3 Glacier?",
            "How do I list S3 Glacier vaults using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "list-vaults",
          "API Version 2012-06-01",
          "help command",
          "describe-vault",
          "Amazon S3 Glacier",
          "AWS CLI",
          "create-vault",
          "configuration",
          "vaults",
          "S3 Glacier",
          "credentials"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_50",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nRetrieving Vault Metadata in Amazon S3 Glacier\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. Amazon S3 Glacier (S3 Glacier) provides API calls\nfor you to retrieve this information for a specific vault or all the vaults in a specific AWS Region in\nyour account.\nIf you retrieve a vault list, S3 Glacier returns the list sorted by the ASCII values of the vault names.\nThe list contains up to 1,000 vaults. You should always check the response for a marker at which\nto continue the list; if there are no more items the marker field is null. You can optionally limit\nthe number of vaults returned in the response. If there are more vaults than are returned in the\nresponse, the result is paginated. You need to send additional requests to fetch the next set of\nvaults.\nTopics\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Retrieving Vault Metadata Using the REST API\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS Command Line Interface\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for\nJava\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Amazon SDK for Java\nRetrieving Vault Metadata API Version 2012-06-01 48",
      "start_idx": 108879,
      "end_idx": 110452,
      "metadata": {
        "num_sentences": 9,
        "num_words": 270,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "vault creation date",
            "number of archives",
            "total archive size",
            "API calls",
            "AWS Region",
            "vault list",
            "pagination",
            "marker"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API",
            "AWS Command Line Interface"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for vaults in Amazon S3 Glacier, including details such as creation date, archive count, and total archive size, using various APIs and tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific vault in Amazon S3 Glacier?",
            "What tools can be used to access vault metadata in S3 Glacier?",
            "How does pagination work when listing vaults in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault list",
          "AWS Command Line Interface",
          "marker",
          "pagination",
          "Amazon S3 Glacier",
          "REST API",
          "vault metadata",
          "AWS SDK for Java",
          "vault creation date",
          "total archive size",
          "AWS SDK for .NET",
          "AWS Region",
          "number of archives",
          "API calls"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_51",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAmazon SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide request information by creating an instance of the DescribeVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for Java with\nAmazon S3 Glacier.\n3. Run the describeVault method by providing the request object as a parameter.\nThe vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object.\nThe following Java code snippet illustrates the preceding steps.\nDescribeVaultRequest request = new DescribeVaultRequest()\n.withVaultName(\"*** provide vault name***\");\nDescribeVaultResult result = client.describeVault(request);\nSystem.out.print(\n\"\\nCreationDate: \" + result.getCreationDate() +\n\"\\nLastInventoryDate: \" + result.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + result.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + result.getSizeInBytes() +\n\"\\nVaultARN: \" + result.getVaultARN() +\n\"\\nVaultName: \" + result.getVaultName());\nRetrieving Vault Metadata Using Java API Version 2012-06-01 49",
      "start_idx": 110452,
      "end_idx": 112111,
      "metadata": {
        "num_sentences": 16,
        "num_words": 237,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "DescribeVaultRequest",
            "DescribeVaultResult",
            "AmazonGlacierClient",
            "AWS Region",
            "Java SDK",
            "vault name",
            "account ID",
            "metadata retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DescribeVaultRequest",
            "DescribeVaultResult",
            "AmazonGlacierClient",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for a specific Amazon S3 Glacier vault using the AWS SDK for Java, including steps to create a client, form a request, and process the results.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for an Amazon S3 Glacier vault?",
            "What is the Java API process for describing a vault in Amazon S3 Glacier?",
            "What information does DescribeVaultResult provide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "metadata retrieval",
          "account ID",
          "AmazonGlacierClient",
          "DescribeVaultResult",
          "Amazon S3 Glacier",
          "vault metadata",
          "vault name",
          "AWS SDK for Java",
          "Java SDK",
          "AWS Region",
          "DescribeVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_52",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault).\nRetrieve Vault Metadata for All Vaults in a Region\nYou can also use the listVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion.\nThe following Java code snippet retrieves list of vaults in the us-west-2 Region. The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nlistVaults calls to retrieve the entire vault list from the AWS Region.\nAmazonGlacierClient client;\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nString marker = null;\ndo {\nListVaultsRequest request = new ListVaultsRequest()\n.withLimit(\"5\")\n.withMarker(marker);\nListVaultsResult listVaultsResult = client.listVaults(request);\nList<DescribeVaultOutput> vaultList = listVaultsResult.getVaultList();\nmarker = listVaultsResult.getMarker();\nfor (DescribeVaultOutput vault : vaultList) {\nSystem.out.println(\n\"\\nCreationDate: \" + vault.getCreationDate() +\n\"\\nLastInventoryDate: \" + vault.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + vault.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + vault.getSizeInBytes() +\n\"\\nVaultARN: \" + vault.getVaultARN() +\n\"\\nVaultName: \" + vault.getVaultName());\n}\n} while (marker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API. If there are more vaults to list, the response\nmarker field contains the vault Amazon Resource Name (ARN) at which to continue the list with a\nnew request; otherwise, the marker field is null.\nRetrieving Vault Metadata Using Java API Version 2012-06-01 50",
      "start_idx": 112111,
      "end_idx": 113817,
      "metadata": {
        "num_sentences": 8,
        "num_words": 233,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "listVaults",
            "AWS Region",
            "Java API",
            "DescribeVaultOutput",
            "VaultARN",
            "vault list",
            "REST API",
            "marker"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ListVaultsRequest",
            "ListVaultsResult",
            "DescribeVaultOutput",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for all vaults in a specific AWS Region using the Amazon S3 Glacier Java API, including a code snippet for listing vaults with pagination support.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a list of vaults in Amazon S3 Glacier using Java?",
            "What is the purpose of the marker field in the listVaults API response?",
            "How do I limit the number of vaults returned in a single API call?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "listVaults",
          "vault list",
          "Java API",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "ListVaultsResult",
          "REST API",
          "vault metadata",
          "DescribeVaultOutput",
          "VaultARN",
          "AWS Region",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_53",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote that the information returned for each vault in the list is the same as the information you get\nby calling the describeVault method for a specific vault.\nNote\nThe listVaults method calls the underlying REST API (see List Vaults (GET vaults)).\nExample: Retrieving Vault Metadata Using the Amazon SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java. The Java\ncode example creates a vault and retrieves the vault metadata.\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK for .NET\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide request information by creating an instance of the DescribeVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier.\nRetrieving Vault Metadata Using .NET API Version 2012-06-01 51",
      "start_idx": 113817,
      "end_idx": 115482,
      "metadata": {
        "num_sentences": 16,
        "num_words": 284,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "AWS SDK",
            ".NET API",
            "DescribeVaultRequest",
            "AmazonGlacierClient",
            "REST API",
            "vaults",
            "AWS Region",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "DescribeVaultRequest"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for vaults in Amazon S3 Glacier using the AWS SDKs for Java and .NET, including step-by-step instructions for the .NET low-level API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific vault in Amazon S3 Glacier?",
            "What steps are needed to use the AWS SDK for .NET to interact with Amazon S3 Glacier?",
            "What is the DescribeVaultRequest class used for?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          ".NET API",
          "AmazonGlacierClient",
          "Amazon S3 Glacier",
          "REST API",
          "vault metadata",
          "AWS SDK for Java",
          "vaults",
          "AWS SDK for .NET",
          "AWS SDK",
          "AWS Region",
          "DescribeVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_54",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n3. Run the DescribeVault method by providing the request object as a parameter.\nThe vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object.\nThe following C# code snippet illustrates the preceding steps. The snippet retrieves metadata\ninformation of an existing vault in the US West (Oregon) Region.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n{\nVaultName = \"*** Provide vault name ***\"\n};\nDescribeVaultResponse describeVaultResponse =\nclient.DescribeVault(describeVaultRequest);\nConsole.WriteLine(\"\\nVault description...\");\nConsole.WriteLine(\n\"\\nVaultName: \" + describeVaultResponse.VaultName +\n\"\\nVaultARN: \" + describeVaultResponse.VaultARN +\n\"\\nVaultCreationDate: \" + describeVaultResponse.CreationDate +\n\"\\nNumberOfArchives: \" + describeVaultResponse.NumberOfArchives +\n\"\\nSizeInBytes: \" + describeVaultResponse.SizeInBytes +\n\"\\nLastInventoryDate: \" + describeVaultResponse.LastInventoryDate\n);\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault).\nRetrieve Vault Metadata for All Vaults in a Region\nYou can also use the ListVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion.\nThe following C# code snippet retrieves list of vaults in the US West (Oregon) Region. The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nListVaults calls to retrieve the entire vault list from the AWS Region.\nRetrieving Vault Metadata Using .NET API Version 2012-06-01 52",
      "start_idx": 115482,
      "end_idx": 117152,
      "metadata": {
        "num_sentences": 11,
        "num_words": 211,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeVault",
            "DescribeVaultResult",
            "ListVaults",
            "Vault metadata",
            "US West (Oregon) Region",
            "C# code snippet",
            "AmazonGlacierClient",
            "VaultName",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DescribeVault",
            "ListVaults",
            "AmazonGlacierClient",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK for .NET",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for Amazon S3 Glacier vaults using the DescribeVault and ListVaults methods with the AWS SDK for .NET in the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific Amazon S3 Glacier vault?",
            "What is the C# implementation for using the DescribeVault method?",
            "How can I list all vaults in a specific AWS Region using the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "C# code snippet",
          "AmazonGlacierClient",
          "DescribeVaultResult",
          "DescribeVault",
          "Amazon S3 Glacier",
          "REST API",
          "ListVaults",
          "VaultName",
          "Vault metadata"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_55",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nstring lastMarker = null;\nConsole.WriteLine(\"\\n List of vaults in your account in the specific AWS Region ...\");\ndo\n{\nListVaultsRequest request = new ListVaultsRequest()\n{\nLimit = 5,\nMarker = lastMarker\n};\nListVaultsResponse response = client.ListVaults(request);\nforeach (DescribeVaultOutput output in response.VaultList)\n{\nConsole.WriteLine(\"Vault Name: {0} \\tCreation Date: {1} \\t #of archives: {2}\",\noutput.VaultName, output.CreationDate, output.NumberOfArchives);\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API.\nNote that the information returned for each vault in the list is the same as the information you get\nby calling the DescribeVault method for a specific vault.\nNote\nThe ListVaults method calls the underlying REST API (see List Vaults (GET vaults)).\nExample: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK\nfor .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example creates a vault and retrieves the vault metadata.\nRetrieving Vault Metadata Using .NET API Version 2012-06-01 53",
      "start_idx": 117152,
      "end_idx": 118532,
      "metadata": {
        "num_sentences": 6,
        "num_words": 200,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "API Usage",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaultsRequest",
            "ListVaultsResponse",
            "DescribeVaultOutput",
            "AWS SDK for .NET",
            "REST API",
            "Vault Metadata",
            "RegionEndpoint",
            "Marker",
            "CreationDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "AWS SDK for .NET",
            "ListVaultsRequest",
            "DescribeVaultOutput"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for listing vaults and retrieving metadata from Amazon S3 Glacier using the AWS SDK for .NET and its low-level API methods.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What information is returned when retrieving vault metadata from S3 Glacier?",
            "What is the default limit for the ListVaults API in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListVaultsResponse",
          "AmazonGlacierClient",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "REST API",
          "RegionEndpoint",
          "DescribeVaultOutput",
          "Marker",
          "CreationDate",
          "AWS SDK for .NET",
          "Vault Metadata"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_56",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRetrieving Vault Metadata Using the REST API\nTo list vaults using the REST API, see List Vaults (GET vaults). To describe one vault, see Describe\nVault (GET vault).\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nThis example shows how to retrieve vault information and metadata in Amazon S3 Glacier (S3\nGlacier) using the AWS Command Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Retrieving Vault Metadata Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\nRetrieving Vault Metadata Using REST API Version 2012-06-01 54",
      "start_idx": 118532,
      "end_idx": 119894,
      "metadata": {
        "num_sentences": 13,
        "num_words": 219,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "REST API",
            "AWS CLI",
            "list-vaults",
            "Describe Vault",
            "command line interface",
            "account ID",
            "configuration",
            "AWS credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "REST API",
            "List Vaults",
            "Describe Vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault metadata in Amazon S3 Glacier using both the REST API and AWS CLI, including setup instructions and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve vault metadata using the AWS CLI?",
            "What are the prerequisites for setting up the AWS CLI?",
            "How do I list vaults in Amazon S3 Glacier using the REST API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "command line interface",
          "account ID",
          "AWS Command Line Interface",
          "list-vaults",
          "Amazon S3 Glacier",
          "REST API",
          "vault metadata",
          "AWS CLI",
          "AWS credentials",
          "List Vaults",
          "configuration",
          "Describe Vault"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_57",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws configure list\nExample: Retrieving Vault Metadata Using the AWS CLI\n\u2022 Use the describe-vault command to describe a vault named awsexamplevault under\naccount 111122223333.\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nDownloading a Vault Inventory in Amazon S3 Glacier\nAfter you upload your first archive to your vault, Amazon S3 Glacier (S3 Glacier) automatically\ncreates a vault inventory and then updates it approximately once a day. After S3 Glacier creates\nthe first inventory, it typically takes half a day and up to a day before that inventory is available for\nretrieval. You can retrieve a vault inventory from S3 Glacier with the following two-step process:\n1. Initiate an inventory retrieval job by using the Initiate Job (POST jobs) operation.\nImportant\nA data retrieval policy can cause your initiate retrieval job request to fail with a\nPolicyEnforcedException exception. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.\n2. After the job completes, download the bytes using the Get Job Output (GET output) operation.\nFor example, retrieving an archive or a vault inventory requires you to first initiate a retrieval job.\nThe job request is run asynchronously. When you initiate a retrieval job, S3 Glacier creates a job and\nreturns a job ID in the response. When S3 Glacier completes the job, you can get the job output,\nthe archive bytes, or the vault inventory data.\nThe job must complete before you can get its output. To determine the status of the job, you have\nthe following options:\nDownloading a Vault Inventory API Version 2012-06-01 55",
      "start_idx": 119894,
      "end_idx": 121657,
      "metadata": {
        "num_sentences": 15,
        "num_words": 274,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "describe-vault",
            "AWS CLI",
            "Initiate Job",
            "PolicyEnforcedException",
            "Get Job Output",
            "retrieval job",
            "vault metadata",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "describe-vault command",
            "Initiate Job",
            "PolicyEnforcedException",
            "Get Job Output"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault metadata and inventory from Amazon S3 Glacier using the AWS CLI, including initiating and completing retrieval jobs and handling potential exceptions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve vault metadata using AWS CLI?",
            "What is the process for downloading a vault inventory in Amazon S3 Glacier?",
            "What causes a PolicyEnforcedException during a retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Get Job Output",
          "PolicyEnforcedException",
          "Amazon S3 Glacier",
          "Initiate Job",
          "AWS CLI",
          "vault metadata",
          "archive",
          "vault inventory",
          "describe-vault command",
          "retrieval job",
          "describe-vault"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_58",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Wait for job completion notification\u2014You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. You\ncan specify Amazon SNS topic using the following methods:\n\u2022 Specify an Amazon SNS topic per job basis.\nWhen you initiate a job, you can optionally specify an Amazon SNS topic.\n\u2022 Set notification configuration on the vault.\nYou can set notification configuration for specific events on the vault (see Configuring Vault\nNotifications in Amazon S3 Glacier). S3 Glacier sends a message to the specified SNS topic any\ntime the specific event occur.\nIf you have notification configuration set on the vault and you also specify an Amazon SNS topic\nwhen you initiate a job, S3 Glacier sends job completion message to both the topics.\nYou can configure the SNS topic to notify you via email or store the message in an Amazon\nSimple Queue Service (Amazon SQS) that your application can poll. When a message appears in\nthe queue, you can check if the job is completed successfully and then download the job output.\n\u2022 Request job information explicitly\u2014S3 Glacier also provides a describe job operation\n(Describe Job (GET JobID)) that enables you to poll for job information. You can periodically\nsend this request to obtain job information. However, using Amazon SNS notifications is the\nrecommended option.\nNote\nThe information you get via SNS notification is the same as what you get by calling\nDescribe Job.\nTopics\n\u2022 About the Inventory\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading a Vault Inventory Using the REST API\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS Command Line Interface\nDownloading a Vault Inventory API Version 2012-06-01 56",
      "start_idx": 121657,
      "end_idx": 123566,
      "metadata": {
        "num_sentences": 14,
        "num_words": 319,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Notification Configuration",
              "Job Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "vault notifications",
            "job completion",
            "Amazon SQS",
            "Describe Job",
            "AWS SDK",
            "REST API",
            "CLI",
            "inventory"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "REST API",
            "CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to configure Amazon SNS notifications for job completion in Amazon S3 Glacier and how to retrieve job information using APIs or polling techniques. It also details methods for downloading vault inventory using various tools and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure Amazon SNS notifications for S3 Glacier job completion?",
            "What are the methods to retrieve job information in Amazon S3 Glacier?",
            "How do I download a vault inventory using the AWS SDK or CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "job completion",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Describe Job",
          "REST API",
          "Amazon SQS",
          "inventory",
          "CLI",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_59",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAbout the Inventory\nS3 Glacier updates a vault inventory at least once per day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata. Note that after S3 Glacier creates the first inventory for the vault, it typically takes half a day\nand up to a day before that inventory is available for retrieval.\nYou might not find it useful to retrieve a vault inventory for each archive upload. However, suppose\nyou maintain a database on the client-side associating metadata about the archives you upload\nto S3 Glacier. Then, you might find the vault inventory useful to reconcile information, as needed,\nin your database with the actual vault inventory. You can limit the number of inventory items\nretrieved by filtering on the archive creation date or by setting a quota. For more information\nabout limiting inventory retrieval, see Range Inventory Retrieval.\nThe inventory can be returned in two formats, comma-separated values (CSV) or JSON. You can\noptionally specify the format when you initiate the inventory job. The default format is JSON. For\nmore information about the data fields returned in an inventory job output, see Response Body of\nthe Get Job Output API.\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK for\nJava. The high-level API does not support retrieving a vault inventory.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Initiate an inventory retrieval job by executing the initiateJob method.\nRun initiateJob by providing job information in an InitiateJobRequest object.\nAbout the Inventory API Version 2012-06-01 57",
      "start_idx": 123566,
      "end_idx": 125707,
      "metadata": {
        "num_sentences": 23,
        "num_words": 353,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Explanation"
            ]
          },
          "keywords": [
            "vault inventory",
            "S3 Glacier",
            "archive",
            "AWS Region",
            "InitiateJobRequest",
            "inventory retrieval",
            "JSON",
            "CSV",
            "AWS SDK for Java",
            "AmazonGlacierClient"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Region",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "Get Job Output API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault inventory in Amazon S3 Glacier, including details on inventory formats, filtering options, and usage with the AWS SDK for Java low-level API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory in Amazon S3 Glacier?",
            "What formats are available for vault inventory output?",
            "How do I use the AWS SDK for Java to initiate an inventory retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "AmazonGlacierClient",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "archive",
          "vault inventory",
          "InitiateJobRequest",
          "CSV",
          "AWS SDK for Java",
          "Get Job Output API",
          "S3 Glacier",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_60",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nNote that if an inventory has not been completed for the vault an error is returned.\nAmazon S3 Glacier (S3 Glacier) prepares an inventory for each vault periodically, every\n24 hours.\nS3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class.\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobParameters(\nnew JobParameters()\n.withType(\"inventory-retrieval\")\n.withSNSTopic(\"*** provide SNS topic ARN ****\")\n);\nInitiateJobResult initJobResult = client.initiateJob(initJobRequest);\nString jobId = initJobResult.getJobId();\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault, or specified an Amazon Simple Notification Service\n(Amazon SNS) topic when you initiated the job, S3 Glacier sends a message to the topic after it\ncompletes the job.\nYou can also poll S3 Glacier by calling the describeJob method to determine job completion\nstatus. However, using an Amazon SNS topic for notification is the recommended approach.\nThe code example given in the following section uses Amazon SNS for S3 Glacier to publish a\nmessage.\n4. Download the job output (vault inventory data) by executing the getJobOutput method.\nYou provide your account ID, job ID, and vault name by creating an instance of the\nGetJobOutputRequest class. If you don't provide an account ID, then the account ID\nDownloading a Vault Inventory Using Java API Version 2012-06-01 58",
      "start_idx": 125707,
      "end_idx": 127317,
      "metadata": {
        "num_sentences": 15,
        "num_words": 242,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "InitiateJobRequest",
            "Amazon SNS",
            "job ID",
            "describeJob",
            "GetJobOutputRequest",
            "Java API",
            "notification",
            "inventory-retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InitiateJobResult",
            "InitiateJobRequest",
            "JobParameters",
            "Amazon Simple Notification Service"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java API"
          ]
        },
        "semantic": {
          "summary": "This document provides step-by-step instructions on how to retrieve a vault inventory from Amazon S3 Glacier using the Java API, including job initiation, monitoring, and output retrieval with optional Amazon SNS notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory from Amazon S3 Glacier?",
            "What is the process for initiating and monitoring a job in S3 Glacier using Java?",
            "How can I use Amazon SNS for job completion notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Simple Notification Service",
          "inventory-retrieval",
          "Java API",
          "InitiateJobResult",
          "describeJob",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "JobParameters",
          "vault inventory",
          "InitiateJobRequest",
          "job ID",
          "GetJobOutputRequest",
          "S3 Glacier",
          "notification"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_61",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nassociated with the credentials you provide to sign the request is used. For more information,\nsee Using the AWS SDK for Java with Amazon S3 Glacier.\nThe output that S3 Glacier returns is available in the GetJobOutputResult object.\nGetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobId(\"*** provide job ID ***\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody(); provides the output stream.\nNote\nFor information about the job related underlying REST API, see Job Operations.\nExample: Retrieving a Vault Inventory Using the Amazon SDK for Java\nThe following Java code example retrieves the vault inventory for the specified vault.\nThe example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic.\nS3 Glacier sends notification to this topic after it completes the job.\n\u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue.\n\u2022 Initiates a job to download the specified archive.\nIn the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job.\n\u2022 Checks the Amazon SQS queue for a message that contains the job ID.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.\nDownloading a Vault Inventory Using Java API Version 2012-06-01 59",
      "start_idx": 127317,
      "end_idx": 128917,
      "metadata": {
        "num_sentences": 16,
        "num_words": 246,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Snippet",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "vault inventory",
            "Amazon SNS",
            "Amazon SQS",
            "job ID",
            "archive download",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for retrieving a vault inventory from Amazon S3 Glacier, detailing steps like creating an Amazon SNS topic, an Amazon SQS queue, and initiating a job to download the archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory using the AWS SDK for Java?",
            "What are the steps to download an archive from Amazon S3 Glacier?",
            "How do Amazon SNS and SQS work together in this example?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive download",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "REST API",
          "Amazon SQS",
          "vault inventory",
          "AWS SDK for Java",
          "GetJobOutputResult",
          "GetJobOutputRequest",
          "job ID"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_65",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK\nfor .NET. The high-level API does not support retrieving a vault inventory.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Initiate an inventory retrieval job by executing the InitiateJob method.\nYou provide job information in an InitiateJobRequest object. Amazon S3 Glacier\n(S3 Glacier) returns a job ID in response. The response is available in an instance of the\nInitiateJobResponse class.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"inventory-retrieval\",\nSNSTopic = \"*** Provide Amazon SNS topic arn ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 65",
      "start_idx": 136953,
      "end_idx": 138470,
      "metadata": {
        "num_sentences": 15,
        "num_words": 216,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "AWS SDK for .NET",
            "InitiateJobRequest",
            "AmazonGlacierClient",
            "InitiateJobResponse",
            "inventory-retrieval",
            "SNSTopic",
            "job output",
            "Amazon SNS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Cloud APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to retrieve a vault inventory from Amazon S3 Glacier using the AWS SDK for .NET's low-level API, including code examples and step-by-step instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory using AWS SDK for .NET?",
            "What is the process to initiate an inventory-retrieval job in Amazon S3 Glacier?",
            "What is the role of SNSTopic in an inventory-retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "job output",
          "AmazonGlacierClient",
          "inventory-retrieval",
          "InitiateJobResponse",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault inventory",
          "InitiateJobRequest",
          "AWS SDK for .NET",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_66",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n(Amazon SNS) topic, or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message.\nYou can also poll S3 Glacier by calling the DescribeJob method to determine job completion\nstatus. Although using Amazon SNS topic for notification is the recommended approach.\n4. Download the job output (vault inventory data) by executing the GetJobOutput method.\nYou provide your account ID, vault name, and the job ID information by creating an instance\nof the GetJobOutputRequest class. If you don't provide an account ID, then the account\nID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier.\nThe output that S3 Glacier returns is available in the GetJobOutputResponse object.\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nNote\nFor information about the job related underlying REST API, see Job Operations.\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 66",
      "start_idx": 138470,
      "end_idx": 139934,
      "metadata": {
        "num_sentences": 12,
        "num_words": 215,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "DescribeJob",
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "vault inventory",
            "AWS SDK for .NET",
            "REST API",
            "job completion"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS SDK for .NET",
            "GetJobOutputRequest",
            "GetJobOutputResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Notifications",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This section explains how to use Amazon SNS or the DescribeJob method to monitor job completion in Amazon S3 Glacier and provides a code example for downloading vault inventory data using the .NET SDK.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor job completion in Amazon S3 Glacier?",
            "What is the process to download vault inventory data using the AWS SDK for .NET?",
            "What are the steps to use Amazon SNS with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "job completion",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "REST API",
          "GetJobOutputResponse",
          "GetJobOutputRequest",
          "vault inventory",
          "GetJobOutput",
          "DescribeJob",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_67",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Retrieving a Vault Inventory Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example retrieves the vault inventory for the specified vault.\nThe example performs the following tasks:\n\u2022 Set up an Amazon SNS topic.\nS3 Glacier sends notification to this topic after it completes the job.\n\u2022 Set up an Amazon SQS queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages.\n\u2022 Initiate a job to download the specified archive.\nIn the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job.\n\u2022 Periodically check the Amazon SQS queue for a message.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON.\n\u2022 Clean up by deleting the Amazon SNS topic and the Amazon SQS queue it created.\nExample\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 67",
      "start_idx": 139934,
      "end_idx": 141336,
      "metadata": {
        "num_sentences": 13,
        "num_words": 212,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "AWS SDK for .NET",
            "job request",
            "notification",
            "archive download",
            "policy attachment"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET",
            "JSON.NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Services",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "JSON.NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a C# example for retrieving a vault inventory in Amazon S3 Glacier using the AWS SDK for .NET, involving Amazon SNS and SQS for notifications and queue management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory in Amazon S3 Glacier using C#?",
            "What is the role of Amazon SNS and SQS in the vault inventory retrieval process?",
            "How can I parse JSON responses in a vault inventory retrieval job using .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive download",
          "job request",
          "policy attachment",
          "JSON.NET",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Amazon SQS",
          "vault inventory",
          "AWS SDK for .NET",
          "notification"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_71",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest()\n{ QueueUrl = queueUrl, MaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n}\nelse if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the inventory.\");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 71",
      "start_idx": 145430,
      "end_idx": 147033,
      "metadata": {
        "num_sentences": 3,
        "num_words": 140,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Polling",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ProcessQueue",
            "ReceiveMessageRequest",
            "SQS queue",
            "jobId",
            "AmazonGlacierClient",
            "DownloadOutput",
            "Vault Inventory",
            "StatusCode",
            "GlacierUtils"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "SQS queue",
            "GlacierUtils",
            "Vault Inventory"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Queue Processing",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            ".NET",
            "JsonConvert"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to process messages from an Amazon SQS queue and handle job statuses for Amazon S3 Glacier using .NET API, including downloading job outputs and error handling for failed jobs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I process an Amazon SQS queue using .NET?",
            "What steps are needed to download a vault inventory from Amazon S3 Glacier?",
            "How can I handle job status codes when working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "StatusCode",
          "AmazonGlacierClient",
          "jobId",
          "Amazon S3 Glacier",
          "SQS queue",
          "ReceiveMessageRequest",
          "ProcessQueue",
          "GlacierUtils",
          "Amazon SQS",
          "DownloadOutput",
          "Vault Inventory"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_72",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading a Vault Inventory Using the REST API\nTo download a vault inventory using the REST API\nDownloading a vault inventory is a two-step process.\n1. Initiate a job of the inventory-retrieval type. For more information, see Initiate Job\n(POST jobs).\n2. After the job completes, download the inventory data. For more information, see Get Job\nOutput (GET output).\nDownloading a Vault Inventory Using REST API Version 2012-06-01 72",
      "start_idx": 147033,
      "end_idx": 148059,
      "metadata": {
        "num_sentences": 8,
        "num_words": 140,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Vault Inventory",
            "REST API",
            "GetJobOutputRequest",
            "Stream",
            "CopyStream",
            "JobId",
            "VaultName",
            "Inventory-Retrieval",
            "File.Write",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "Vault Inventory",
            "REST API Version 2012-06-01",
            "Amazon S3 Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API",
            "C# Code"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download a vault inventory from Amazon S3 Glacier using the REST API, including code examples for retrieving data and saving it locally.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download a vault inventory using the Amazon S3 Glacier REST API?",
            "What is the process to retrieve inventory data using GetJobOutputRequest?",
            "How can I save retrieved inventory data to a file in C#?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JobId",
          "Amazon S3 Glacier",
          "REST API Version 2012-06-01",
          "REST API",
          "Stream",
          "GetJobOutputResponse",
          "GetJobOutputRequest",
          "CopyStream",
          "VaultName",
          "Inventory-Retrieval",
          "File.Write",
          "Vault Inventory"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_73",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nFollow these steps to download a vault inventory in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Downloading a Vault Inventory Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 73",
      "start_idx": 148059,
      "end_idx": 149277,
      "metadata": {
        "num_sentences": 11,
        "num_words": 197,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example",
              "Command Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault inventory",
            "list-vaults",
            "aws configure",
            "command prompt",
            "API Version 2012-06-01",
            "credentials",
            "default profile",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault inventory",
            "AWS account ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download a vault inventory from Amazon S3 Glacier using the AWS CLI, including setup and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI for S3 Glacier?",
            "What commands are used to download a vault inventory in S3 Glacier?",
            "How can I verify my AWS CLI configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "list-vaults",
          "command prompt",
          "aws configure",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS CLI",
          "vault inventory",
          "AWS account ID",
          "S3 Glacier",
          "credentials",
          "default profile"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_74",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Downloading a Vault Inventory Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. The job ID does not expire\nfor at least 24 hours after S3 Glacier completes the job. If you have either set a notification\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 74",
      "start_idx": 149277,
      "end_idx": 150423,
      "metadata": {
        "num_sentences": 9,
        "num_words": 158,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "Vault Inventory",
            "initiate-job",
            "describe-job",
            "inventory-retrieval",
            "job parameters",
            "job status",
            "VaultARN",
            "job completion"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "Vault Inventory",
            "VaultARN",
            "jobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault inventory from Amazon S3 Glacier using the AWS CLI, including initiating, describing, and waiting for the job to complete.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory from Amazon S3 Glacier using AWS CLI?",
            "What commands are required to check the status of an inventory retrieval job?",
            "How long does a job ID remain valid after job completion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "initiate-job",
          "job status",
          "job completion",
          "inventory-retrieval",
          "job parameters",
          "jobId",
          "Amazon S3 Glacier",
          "AWS CLI",
          "describe-job",
          "VaultARN",
          "S3 Glacier",
          "Vault Inventory"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_75",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nconfiguration on the vault, or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set the notification configuration for specific events on the vault. For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a\nmessage to the specified SNS topic anytime the specific events occur.\n4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nConfiguring Vault Notifications in Amazon S3 Glacier\nRetrieving anything from Amazon S3 Glacier, such as an archive from a vault or a vault inventory, is\na two-step process.\n1. Initiate a retrieval job.\n2. After the job is completed, download the job output.\nConfiguring Vault Notifications API Version 2012-06-01 75",
      "start_idx": 150423,
      "end_idx": 151883,
      "metadata": {
        "num_sentences": 13,
        "num_words": 199,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Command Usage",
              "Notification Setup"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "retrieval job",
            "Amazon SNS",
            "job output",
            "Vault Notifications",
            "get-job-output",
            "InventoryDate",
            "ArchiveList",
            "SHA256TreeHash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "VaultARN",
            "ArchiveId",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Notifications",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications and retrieve data from Amazon S3 Glacier using AWS CLI commands, including job initiation and output retrieval processes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What is the process to retrieve data from an Amazon S3 Glacier vault?",
            "What AWS CLI command retrieves job output from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "ArchiveList",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "get-job-output",
          "vault",
          "AWS CLI",
          "Vault Notifications",
          "InventoryDate",
          "VaultARN",
          "retrieval job",
          "job output",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_76",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nYou can set a notification configuration on a vault so that when a job is completed, a message is\nsent to an Amazon Simple Notification Service (Amazon SNS) topic.\nTopics\n\u2022 Configuring Vault Notifications in S3 Glacier: General Concepts\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Configuring Vault Notifications in S3 Glacier Using the REST API\n\u2022 Configuring Vault Notifications by Using the S3 Glacier Console\n\u2022 Configuring Vault Notifications Using the AWS Command Line Interface\nConfiguring Vault Notifications in S3 Glacier: General Concepts\nA S3 Glacier retrieval job request is run asynchronously. You must wait until S3 Glacier completes\nthe job before you can get its output. You can periodically poll S3 Glacier to determine the job\nstatus, but that is not an optimal approach. S3 Glacier also supports notifications. When a job\nis completed, the job can post a message to an Amazon Simple Notification Service (Amazon\nSNS) topic. Using this feature requires you to set a notification configuration on the vault. In the\nconfiguration, you identify one or more events and an Amazon SNS topic to which you want S3\nGlacier to send a message when the event occurs.\nS3 Glacier defines events specifically related to job completion (ArchiveRetrievalCompleted,\nInventoryRetrievalCompleted) that you can add to the vault's notification configuration.\nWhen a specific job is completed, S3 Glacier publishes a notification message to the SNS topic.\nThe notification configuration is a JSON document as shown in the following example.\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nYou can configure only one Amazon SNS topic for a vault.\nGeneral Concepts API Version 2012-06-01 76",
      "start_idx": 151883,
      "end_idx": 153807,
      "metadata": {
        "num_sentences": 13,
        "num_words": 292,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Notification Configuration",
              "Event Handling",
              "JSON Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault notifications",
            "Amazon SNS",
            "job completion",
            "notification configuration",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "asynchronous job",
            "JSON document",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Notifications",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier, enabling event-based notifications through Amazon SNS when specific jobs are completed. It includes conceptual details, supported events, and an example JSON configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What events can trigger notifications in S3 Glacier?",
            "How do I use Amazon SNS with S3 Glacier for job completion notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "job completion",
          "AWS Command Line Interface",
          "API Version 2012-06-01",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "ArchiveRetrievalCompleted",
          "AWS SDK for Java",
          "notification configuration",
          "JSON document",
          "S3 Glacier",
          "AWS SDK for .NET",
          "asynchronous job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_77",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nAdding a notification configuration to a vault causes S3 Glacier to send a notification each\ntime the event specified in the notification configuration occurs. You can also optionally\nspecify an Amazon SNS topic in each job initiation request. If you add both the notification\nconfiguration on the vault and also specify an Amazon SNS topic in your initiate job\nrequest, S3 Glacier sends both notifications.\nThe job completion message S3 Glacier sends include information such as the type of job\n(InventoryRetrieval, ArchiveRetrieval), job completion status, SNS topic name, job status\ncode, and the vault ARN. The following is an example notification S3 Glacier sent to an SNS topic\nafter an InventoryRetrieval job is completed.\n{\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2012-06-12T22:20:40.790Z\",\n\"CreationDate\": \"2012-06-12T22:20:36.814Z\",\n\"InventorySizeInBytes\":11693,\n\"JobDescription\": \"my retrieval job\",\n\"JobId\":\"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"SHA256TreeHash\":null,\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\":\"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nIf the Completed field is true, you must also check the StatusCode to check if the job completed\nsuccessfully or failed.\nNote\nThe Amazon SNS topic must allow the vault to publish a notification. By default, only the\nAmazon SNS topic owner can publish a message to the topic. However, if the Amazon SNS\ntopic and the vault are owned by different AWS accounts, then you must configure the\nGeneral Concepts API Version 2012-06-01 77",
      "start_idx": 153807,
      "end_idx": 155582,
      "metadata": {
        "num_sentences": 9,
        "num_words": 224,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "notification configuration",
            "Amazon SNS",
            "InventoryRetrieval",
            "ArchiveRetrieval",
            "vault ARN",
            "job initiation",
            "job completion status",
            "SNS topic",
            "StatusCode"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon SNS",
            "ARN",
            "VaultARN",
            "JobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure notifications for Amazon S3 Glacier vaults, including optional integration with Amazon SNS, and provides an example of a job completion notification payload.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure notifications for an S3 Glacier vault?",
            "What information is included in an S3 Glacier job completion notification?",
            "How do I handle job completion status in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrieval",
          "StatusCode",
          "JobId",
          "SNS topic",
          "Amazon SNS",
          "job initiation",
          "Amazon S3 Glacier",
          "notification configuration",
          "job completion status",
          "ARN",
          "VaultARN",
          "vault ARN",
          "S3 Glacier",
          "ArchiveRetrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_78",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazon SNS topic to accept publications from the vault. You can configure the Amazon\nSNS topic policy in the Amazon SNS console.\nFor more information about Amazon SNS, see Getting Started with Amazon SNS.\nConfiguring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class.\nYou need to provide the vault name, notification configuration information, and account ID. In\nspecifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)).\n3. Run the setVaultNotifications method by providing the request object as a parameter.\nThe following Java code snippet illustrates the preceding steps. The snippet sets a notification\nconfiguration on a vault. The configuration requests Amazon S3 Glacier (S3 Glacier) to send a\nnotification to the specified Amazon SNS topic when either the ArchiveRetrievalCompleted\nevent or the InventoryRetrievalCompleted event occurs.\nSetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n.withAccountId(\"-\")\n.withVaultName(\"*** provide vault name ***\")\n.withVaultNotificationConfig(\nnew VaultNotificationConfig()\n.withSNSTopic(\"*** provide SNS topic ARN ***\")\n.withEvents(\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\")\nConfiguring Vault Notifications Using Java API Version 2012-06-01 78",
      "start_idx": 155582,
      "end_idx": 157520,
      "metadata": {
        "num_sentences": 19,
        "num_words": 265,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notifications",
            "AWS SDK for Java",
            "SetVaultNotificationsRequest",
            "VaultNotificationConfig",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "AWS Region",
            "Amazon SNS topic ARN"
          ],
          "entities": [
            "Amazon SNS",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "SetVaultNotificationsRequest",
            "VaultNotificationConfig"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Notification Systems",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the AWS SDK for Java, including setting up an Amazon SNS topic for event notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier using Java?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "How do I use the SetVaultNotificationsRequest class in AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "Amazon SNS topic ARN",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "ArchiveRetrievalCompleted",
          "AWS SDK for Java",
          "Vault Notifications",
          "VaultNotificationConfig",
          "AWS Region",
          "SetVaultNotificationsRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_79",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n);\nclient.setVaultNotifications(request);\nNote\nFor information about the underlying REST API, see Vault Operations.\nExample: Setting the Notification Configuration on a Vault Using the AWS SDK for\nJava\nThe following Java code example sets a vault's notifications configuration, deletes the\nconfiguration, and then restores the configuration. For step-by-step instructions on how to run the\nfollowing example, see Using the AWS SDK for Java with Amazon S3 Glacier.\nExample\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsResult;\nimport com.amazonaws.services.glacier.model.SetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.VaultNotificationConfig;\npublic class AmazonGlacierVaultNotifications {\npublic static AmazonGlacierClient client;\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String snsTopicARN = \"*** provide sns topic ARN ***\";\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\nConfiguring Vault Notifications Using Java API Version 2012-06-01 79",
      "start_idx": 157520,
      "end_idx": 159079,
      "metadata": {
        "num_sentences": 4,
        "num_words": 144,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Implementation",
              "Procedural Steps"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "AWS SDK for Java",
            "SNS Topic ARN",
            "ProfileCredentialsProvider",
            "DeleteVaultNotificationsRequest",
            "GetVaultNotificationsRequest",
            "SetVaultNotificationsRequest",
            "VaultNotificationConfig",
            "Java API Version 2012-06-01"
          ],
          "entities": [
            "AmazonGlacierClient",
            "VaultNotificationConfig",
            "SNS Topic ARN",
            "ProfileCredentialsProvider",
            "Java API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for configuring, deleting, and restoring vault notifications in Amazon S3 Glacier using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using Java?",
            "What is the process to delete and restore vault notifications in Amazon S3 Glacier?",
            "Which AWS SDK classes are involved in managing vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "SNS Topic ARN",
          "Java API Version 2012-06-01",
          "GetVaultNotificationsRequest",
          "AmazonGlacierClient",
          "ProfileCredentialsProvider",
          "DeleteVaultNotificationsRequest",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "AWS SDK for Java",
          "Vault Notifications",
          "VaultNotificationConfig",
          "SetVaultNotificationsRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_81",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Notifications configuration deleted for vault: \" +\nvaultName);\n}\n}\nConfiguring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class.\nYou need to provide the vault name, notification configuration information, and account ID. If\nyou don't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier.\nIn specifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)).\n3. Run the SetVaultNotifications method by providing the request object as a parameter.\n4. After setting notification configuration on a vault, you can retrieve configuration\ninformation by calling the GetVaultNotifications method, and remove it by calling the\nDeleteVaultNotifications method provided by the client.\nExample: Setting the Notification Configuration on a Vault Using the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example sets the\nnotification configuration on the vault (\"examplevault\") in the US West (Oregon) Region,\nretrieves the configuration, and then deletes it. The configuration requests Amazon S3\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 81",
      "start_idx": 160628,
      "end_idx": 162579,
      "metadata": {
        "num_sentences": 19,
        "num_words": 291,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "AWS SDK for .NET",
            "SetVaultNotifications",
            "GetVaultNotifications",
            "DeleteVaultNotifications",
            "AmazonGlacierClient",
            "SetVaultNotificationsRequest",
            "Amazon SNS",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Amazon SNS",
            "AmazonGlacierClient",
            "SetVaultNotificationsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS Development",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the AWS SDK for .NET, including examples of setting, retrieving, and deleting notification configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using AWS SDK for .NET?",
            "What are the steps to set a notification configuration on a vault?",
            "How can I retrieve or delete vault notification configurations in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "GetVaultNotifications",
          "AmazonGlacierClient",
          "vault notifications",
          "Amazon S3 Glacier",
          "DeleteVaultNotifications",
          "SetVaultNotifications",
          "Amazon SNS",
          "notification configuration",
          "AWS SDK for .NET",
          "SetVaultNotificationsRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_82",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nGlacier (S3 Glacier) to send a notification to the specified Amazon SNS topic when either the\nArchiveRetrievalCompleted event or the InventoryRetrievalCompleted event occurs.\nNote\nFor information about the underlying REST API, see Vault Operations.\nFor step-by-step instructions to run the following example, see Running Code Examples. You need\nto update the code as shown and provide an existing vault name and an Amazon SNS topic.\nExample\nusing System;\nusing System.Collections.Generic;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultNotificationSetGetDelete\n{\nstatic string vaultName = \"examplevault\";\nstatic string snsTopicARN = \"*** Provide Amazon SNS topic ARN ***\";\nstatic IAmazonGlacier client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Adding notification configuration to the vault.\");\nSetVaultNotificationConfig();\nGetVaultNotificationConfig();\nConsole.WriteLine(\"To delete vault notification configuration, press Enter\");\nConsole.ReadKey();\nDeleteVaultNotificationConfig();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 82",
      "start_idx": 162579,
      "end_idx": 163916,
      "metadata": {
        "num_sentences": 6,
        "num_words": 154,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notification",
            "Amazon SNS",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "Vault Operations",
            "REST API",
            "AmazonGlacierClient",
            "Notification Configuration",
            "ExampleVault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "VaultNotificationSetGetDelete",
            "AmazonGlacierClient",
            "USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the .NET API, including sending notifications to Amazon SNS topics for specific events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What code example demonstrates setting up notifications for an SNS topic?",
            "Which events trigger notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "Vault Notification",
          "VaultNotificationSetGetDelete",
          "AmazonGlacierClient",
          "Vault Operations",
          "USWest2",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "REST API",
          "ArchiveRetrievalCompleted",
          "ExampleVault",
          "Notification Configuration"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_83",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\nConfiguring Vault Notifications in S3 Glacier Using the REST API\nTo configure vault notifications using the REST API, see Set Vault Notification Configuration\n(PUT notification-configuration). Additionally, you can also get vault notifications (Get Vault\nNotifications (GET notification-configuration)) and delete vault notifications (Delete Vault\nNotifications (DELETE notification-configuration)).\nConfiguring Vault Notifications by Using the S3 Glacier Console\nThis section describes how to configure vault notifications by using the Amazon S3 Glacier console.\nWhen you configure notifications, you specify job-completion events that send a notification to an\nAmazon Simple Notification Service (Amazon SNS) topic. In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notifications to when you initiate a job. If your\nvault is configured to send a notification for a specific event and you also configure notifications in\nthe job-initiation request, then two notifications are sent.\nTo configure a vault notification\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. In the left navigation pane, choose Vaults.\n3. In the Vaults list, choose a vault.\n4. In the Notifications section, choose Edit.\n5. On the Event notifications page, choose Turn on notifications.\n6. In the Notifications section, choose one of the following Amazon Simple Notification Service\n(Amazon SNS) options, and then follow the corresponding steps:\nAmazon SNS options Action\nCreate new SNS topic\n1.\nChoose Create new SNS topic.\n2.\nFor Topic name, enter the name of the new topic.\nConfiguring Vault Notifications Using the REST API API Version 2012-06-01 84",
      "start_idx": 165276,
      "end_idx": 167067,
      "metadata": {
        "num_sentences": 22,
        "num_words": 263,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault notifications",
            "REST API",
            "Amazon SNS",
            "job-completion events",
            "AWS Management Console",
            "Event notifications",
            "SNS topic",
            "notification-configuration",
            "job-initiation request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "Amazon SNS",
            "Vaults",
            "Event notifications"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Notifications",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the REST API and the AWS Management Console, enabling notifications for job-completion events via Amazon SNS topics.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What are the steps to set up Amazon SNS topics for S3 Glacier notifications?",
            "Can I use both vault and job-initiation notifications simultaneously?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "job-completion events",
          "AWS Management Console",
          "notification-configuration",
          "job-initiation request",
          "Vaults",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "REST API",
          "Event notifications",
          "S3 Glacier",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_84",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazon SNS options Action\nTopic names can be up to 256 characters.\nAlphanumeric characters, hyphens (-), and und\nerscores (_) are allowed. Topic names must be\nunique within the account and AWS Region.\n3.\n(Optional) If you want to subscribe to the topic by\nusing SMS messages, enter a name for Display\nname.\nA display name can have up to 100 characters.\nChoose an existing SNS topic\n1.\nChoose Choose an existing SNS topic.\n2.\nUnder Specify SNS topic, choose one of the fol\nlowing options:\n\u2022\nChoose from your SNS topics\nAn SNS topic dropdown list appears.\nChoose an existing topic from the dropdown\nlist.\n\u2022\nEnter SNS topic ARN\nAn Amazon SNS topic ARN text box appears.\nEnter the Amazon Resource Name (ARN) for\nyour SNS topic. An SNS topic ARN has the\nfollowing format:\narn:aws:sns: region:account-i\nd :topic-name\nYou can find the SNS topic ARN in the Amazon\nSNS console.\nConfiguring Vault Notifications by Using the Console API Version 2012-06-01 85",
      "start_idx": 167067,
      "end_idx": 168050,
      "metadata": {
        "num_sentences": 15,
        "num_words": 169,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "ARN",
            "AWS Region",
            "Display name",
            "Amazon SNS console",
            "Vault notifications",
            "Console API",
            "2012-06-01",
            "Dropdown list"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "ARN",
            "AWS Region",
            "Console API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions on configuring Amazon SNS topics and vault notifications for Amazon S3 Glacier, including naming conventions and ARN formats.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an SNS topic for Amazon S3 Glacier?",
            "What is the format of an Amazon SNS topic ARN?",
            "What are the naming rules for SNS topics?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Console API Version 2012-06-01",
          "Vault notifications",
          "Console API",
          "Dropdown list",
          "2012-06-01",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "ARN",
          "Display name",
          "Amazon SNS console",
          "AWS Region",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_85",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n7. Under Events, select one or both events that you want to send notifications:\n\u2022 To send a notification only when archive retrieval jobs are complete, select Archive Retrieval\nJob Complete.\n\u2022 To send a notification only when vault inventory jobs are complete, select Vault Inventory\nRetrieval Job Complete.\nConfiguring Vault Notifications Using the AWS Command Line Interface\nThis section describes how to configure vault notifications using the AWS Command Line Interface.\nWhen you configure notifications, you specify job completion events that trigger notification to an\nAmazon Simple Notification Service (Amazon SNS) topic. In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notification to when you initiate a job. If your\nvault is configured to notify for a specific event and you specify notification in the job initiation\nrequest, then two notifications are sent.\nFollow these steps to configure vault notification using the AWS CLI.\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Configure Vault Notifications Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\nConfiguring Vault Notifications Using the CLI API Version 2012-06-01 86",
      "start_idx": 168050,
      "end_idx": 169734,
      "metadata": {
        "num_sentences": 15,
        "num_words": 261,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "vault notifications",
            "AWS CLI",
            "Amazon S3 Glacier",
            "SNS topic",
            "job completion events",
            "archive retrieval",
            "vault inventory",
            "job initiation",
            "AWS Command Line Interface",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "Vault Notifications",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Notification Systems",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to configure vault notifications using the AWS Command Line Interface (CLI). It includes steps for setting up the CLI, specifying job completion events, and integrating with Amazon SNS topics.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using the AWS CLI?",
            "What are the prerequisites for setting up the AWS CLI for vault notifications?",
            "What types of events can trigger vault notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "job completion events",
          "API Version 2012-06-01",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "job initiation",
          "AWS CLI",
          "vault inventory",
          "notification configuration",
          "archive retrieval",
          "Vault Notifications",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_86",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Configure Vault Notifications Using the AWS CLI\n1. Use the set-vault-notifications command to configure notifications that will be sent\nwhen specific events happen to a vault. By default, you don't get any notifications.\naws glacier set-vault-notifications --vault-name examplevault --account-\nid 111122223333 --vault-notification-config file://notificationconfig.json\n2. The notification configuration is a JSON document as shown in the following example.\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nFor more information about using Amazon SNS topics for S3 Glacier see, Configuring Vault\nNotifications in S3 Glacier: General Concepts\nFor more information about Amazon SNS, see Getting Started with Amazon SNS.\nDeleting a Vault in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) deletes a vault only if there are no archives in the vault as of the\nlast inventory it computed and there have been no writes to the vault since the last inventory. For\ninformation about deleting archives, see Deleting an Archive in Amazon S3 Glacier. For information\nabout downloading a vault inventory, Downloading a Vault Inventory in Amazon S3 Glacier.\nDeleting a Vault API Version 2012-06-01 87",
      "start_idx": 169734,
      "end_idx": 171350,
      "metadata": {
        "num_sentences": 13,
        "num_words": 230,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS CLI",
            "notifications",
            "SNS",
            "JSON",
            "inventory",
            "archives",
            "deleting",
            "commands"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SNS Topic",
            "Vault Notification",
            "Vault Inventory"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage Amazon S3 Glacier vaults using AWS CLI, including listing vaults, configuring notifications, and deleting vaults under specific conditions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list all S3 Glacier vaults using AWS CLI?",
            "What are the steps to configure vault notifications in Amazon S3 Glacier?",
            "What are the conditions required to delete a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "deleting",
          "Vault Notification",
          "SNS Topic",
          "Amazon S3 Glacier",
          "SNS",
          "inventory",
          "vault",
          "AWS CLI",
          "Amazon SNS",
          "notifications",
          "commands",
          "archives",
          "S3 Glacier",
          "Vault Inventory"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_87",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. Because the\ninventory might not reflect the latest information, S3 Glacier ensures the vault is indeed\nempty by checking if there were any write operations since the last vault inventory.\nTopics\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting a Vault in S3 Glacier Using the REST API\n\u2022 Deleting an Empty Vault by Using the S3 Glacier Console\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nDeleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete a vault using the low-level API of the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteVaultRequest class.\nYou need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for Java with Amazon S3 Glacier.\n3. Run the deleteVault method by providing the request object as a parameter.\nAmazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault).\nThe following Java code snippet illustrates the preceding steps.\ntry {\nDeleting a Vault Using Java API Version 2012-06-01 88",
      "start_idx": 171350,
      "end_idx": 173029,
      "metadata": {
        "num_sentences": 18,
        "num_words": 294,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "AWS SDK for Java",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "deleteVault method",
            "AWS Region",
            "account ID",
            "REST API",
            "AWS Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS Command Line Interface",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an empty vault in Amazon S3 Glacier using various methods, including the AWS SDK for Java, REST API, and AWS CLI. It provides step-by-step instructions for using the low-level API of the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What are the prerequisites for deleting an empty vault in S3 Glacier?",
            "What steps are involved in using the deleteVault method in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "AWS Command Line Interface",
          "AmazonGlacierClient",
          "deleteVault method",
          "Amazon S3 Glacier",
          "REST API",
          "vault",
          "AWS SDK for Java",
          "DeleteVaultRequest",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_88",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDeleteVaultRequest request = new DeleteVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nclient.deleteVault(request);\nSystem.out.println(\"Deleted vault: \" + vaultName);\n} catch (Exception e) {\nSystem.err.println(e.getMessage());\n}\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault).\nExample: Deleting a Vault Using the AWS SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java. The Java\ncode example shows basic vault operations including create and delete vault.\nDeleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete a vault.\nTopics\n\u2022 Deleting a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nDeleting a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteVault method\nyou can use to delete a vault.\nExample: Deleting a Vault Using the High-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the High-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault.\nDeleting a Vault Using .NET API Version 2012-06-01 89",
      "start_idx": 173029,
      "end_idx": 174439,
      "metadata": {
        "num_sentences": 8,
        "num_words": 228,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteVaultRequest",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "REST API",
            "DeleteVault method",
            "vault operations",
            "high-level API",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DeleteVaultRequest",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using the AWS SDKs for Java and .NET, providing both high-level and low-level API examples.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What methods are available for deleting a vault using the AWS SDK for .NET?",
            "Where can I find code examples for vault operations in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteVault method",
          "high-level API",
          "low-level API",
          "vault operations",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "REST API",
          "AWS SDK for Java",
          "DeleteVaultRequest",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_89",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDeleting a Vault Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps to delete a vault using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteVaultRequest class.\nYou need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier.\n3. Run the DeleteVault method by providing the request object as a parameter.\nAmazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault).\nThe following C# code snippet illustrates the preceding steps. The snippet retrieves metadata\ninformation of a vault that exists in the default AWS Region.\nAmazonGlacier client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = \"*** provide vault name ***\"\n};\nDeleteVaultResponse response = client.DeleteVault(request);\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault).\nDeleting a Vault Using .NET API Version 2012-06-01 90",
      "start_idx": 174439,
      "end_idx": 175915,
      "metadata": {
        "num_sentences": 18,
        "num_words": 232,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "AWS SDK for .NET",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "DeleteVault method",
            "account ID",
            "AWS Region",
            "metadata",
            "C#"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "DeleteVaultRequest",
            "DeleteVault method"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using the AWS SDK for .NET, including the necessary steps, request setup, and a C# code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using AWS SDK for .NET?",
            "What are the prerequisites for deleting a vault in S3 Glacier?",
            "Can you provide a C# example for deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "DeleteVault method",
          "AmazonGlacierClient",
          "Amazon S3 Glacier",
          "vault",
          "metadata",
          "DeleteVaultRequest",
          "AWS SDK for .NET",
          "AWS Region",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_90",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault.\nDeleting a Vault in S3 Glacier Using the REST API\nTo delete a vault using the REST API, see Delete Vault (DELETE vault).\nDeleting an Empty Vault by Using the S3 Glacier Console\nNote\nBefore deleting a vault, you must delete all existing archives within the vault. You can do\nthis by writing code to make a delete archive request by using either the REST API, the AWS\nSDK for Java, the AWS SDK for .NET, or by using the AWS Command Line Interface (AWS\nCLI). For information about deleting archives, see Step 5: Delete an Archive from a Vault in\nS3 Glacier.\nAfter your vault is empty, you can delete it by using the following steps.\nTo delete an empty vault by using the Amazon S3 Glacier console\n1. Sign into the AWS Management Console and open the S3 Glacier console at S3 Glacier\nConsole.\n2. Under Select a Region, choose the AWS Region where the vault exists.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, select the option button next to the name of the vault that you want to\ndelete, and then choose Delete at the top of the page.\n5. In the Delete vault dialog box, confirm that you want to delete the vault by choosing Delete.\nImportant\nDeleting a vault can't be undone.\n6. To verify that you've deleted the vault, open the Vaults list and enter the name of the vault\nthat you deleted. If the vault can't be found, your deletion was successful.\nDeleting a Vault Using REST API Version 2012-06-01 91",
      "start_idx": 175915,
      "end_idx": 177642,
      "metadata": {
        "num_sentences": 22,
        "num_words": 315,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "delete vault",
            "AWS SDK for .NET",
            "REST API",
            "AWS CLI",
            "archive",
            "Amazon Management Console",
            "delete archive",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for deleting a vault in Amazon S3 Glacier using various methods, including the REST API, AWS SDK for .NET, and the AWS Management Console. It emphasizes the need to delete all archives within the vault before proceeding with the deletion process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier?",
            "What steps are required to delete an empty vault using the S3 Glacier console?",
            "What tools can be used to delete archives from a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "AWS Region",
          "Amazon S3 Glacier",
          "Amazon Management Console",
          "REST API",
          "vault",
          "AWS CLI",
          "archive",
          "delete vault",
          "S3 Glacier",
          "AWS SDK for .NET",
          "delete archive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_91",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDeleting a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nYou can delete empty and nonempty vaults in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Empty Vault Using the AWS CLI\n\u2022 Example: Deleting a Nonempty Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 92",
      "start_idx": 177642,
      "end_idx": 178875,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Execution",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "vault",
            "list-vaults",
            "delete vault",
            "configuration",
            "account ID",
            "credentials",
            "help command",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vaults",
            "account ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete empty and nonempty vaults in Amazon S3 Glacier using the AWS CLI, including setup instructions and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using the AWS CLI?",
            "What are the prerequisites for setting up the AWS CLI?",
            "How can I verify my AWS CLI configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "list-vaults",
          "API Version 2012-06-01",
          "help command",
          "Amazon S3 Glacier",
          "AWS CLI",
          "vault",
          "configuration",
          "vaults",
          "delete vault",
          "credentials"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_92",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting an Empty Vault Using the AWS CLI\n\u2022 Use the delete-vault command to delete a vault that contains no archives.\n\u2022\naws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nExample: Deleting a Nonempty Vault Using the AWS CLI\nS3 Glacier deletes a vault only if there are no archives in the vault as of the last inventory\nit computed, and there have been no writes to the vault since the last inventory. Deleting a\nnonempty vault is a three-step process: retrieving archive IDs from a vault's inventory report,\ndeleting each archive, and then deleting the vault.\n1. Use the initiate-job command to start an inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 93",
      "start_idx": 178875,
      "end_idx": 180143,
      "metadata": {
        "num_sentences": 8,
        "num_words": 179,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "delete-vault",
            "AWS CLI",
            "S3 Glacier",
            "inventory retrieval",
            "archives",
            "vault",
            "job-parameters",
            "jobId",
            "describe-job",
            "initiate-job"
          ],
          "entities": [
            "aws glacier",
            "awsexamplevault",
            "111122223333",
            "inventory-retrieval",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Command Line Interfaces"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete empty and non-empty vaults in Amazon S3 Glacier using AWS CLI, including the necessary steps and commands for inventory retrieval and archive deletion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an empty vault in Amazon S3 Glacier using AWS CLI?",
            "What is the process for deleting a non-empty vault in S3 Glacier?",
            "How can I retrieve an inventory report from a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "initiate-job",
          "aws glacier",
          "inventory-retrieval",
          "API Version 2012-06-01",
          "inventory retrieval",
          "jobId",
          "Amazon S3 Glacier",
          "AWS CLI",
          "vault",
          "awsexamplevault",
          "delete-vault",
          "describe-job",
          "111122223333",
          "job-parameters",
          "archives"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_93",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.\n4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 94",
      "start_idx": 180143,
      "end_idx": 181649,
      "metadata": {
        "num_sentences": 11,
        "num_words": 206,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step instructions",
              "Command usage",
              "Output explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "InventoryRetrieval",
            "JobId",
            "SNS topic",
            "get-job-output",
            "AWS CLI",
            "ArchiveList",
            "Vault notifications",
            "SHA256TreeHash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "SNS topic",
            "AWS CLI",
            "ArchiveList"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for retrieving an inventory from an Amazon S3 Glacier vault using the AWS CLI, including setting up notifications and downloading job output.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an inventory from an Amazon S3 Glacier vault?",
            "What commands are used to download job output in AWS Glacier?",
            "How can I configure vault notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Vault notifications",
          "InventoryRetrieval",
          "JobId",
          "ArchiveList",
          "Amazon S3 Glacier",
          "get-job-output",
          "Amazon SNS",
          "AWS CLI",
          "VaultARN",
          "SNS topic",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_94",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n5. Use the delete-archive command to delete each archive from a vault until none remain.\naws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nNote\nIf your Archive ID starts with a hyphen or another special character you will need to put\nit in quotes in order to run this command.\n6. Use the initiate-job command to start a new inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\n7. When it's complete, use the delete-vault command to delete a vault with no archives.\naws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nTagging Your S3 Glacier Vaults\nYou can assign your own metadata to Amazon S3 Glacier vaults in the form of tags. A tag is a key-\nvalue pair that you define for a vault. For basic information about tagging, including restrictions on\ntags, see Tagging Amazon S3 Glacier Resources.\nThe following topics describe how you can add, list, and remove tags for vaults.\nTopics\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier Console\n\u2022 Tagging Vaults by Using the AWS CLI\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier API\n\u2022 Related Sections\nTagging Vaults API Version 2012-06-01 95",
      "start_idx": 181649,
      "end_idx": 182971,
      "metadata": {
        "num_sentences": 12,
        "num_words": 202,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Tagging"
            ]
          },
          "keywords": [
            "delete-archive",
            "vault",
            "inventory retrieval",
            "delete-vault",
            "tags",
            "metadata",
            "AWS CLI",
            "Amazon S3 Glacier",
            "job-parameters",
            "archive ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Vaults",
            "Archive ID",
            "Inventory Retrieval Job"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Tagging Resources",
            "Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for managing Amazon S3 Glacier vaults, including deleting archives, retrieving inventory, and tagging vaults via the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault?",
            "What is the process to initiate an inventory retrieval job in AWS Glacier?",
            "How can I tag an Amazon S3 Glacier vault using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Vaults",
          "inventory retrieval",
          "delete-archive",
          "Amazon S3 Glacier",
          "vault",
          "metadata",
          "AWS CLI",
          "delete-vault",
          "Archive ID",
          "archive ID",
          "job-parameters",
          "Inventory Retrieval Job",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_95",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTagging Vaults by Using the Amazon S3 Glacier Console\nYou can add, list, and remove tags using the S3 Glacier console, as described in the following\nprocedures.\nTo view the tags for a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose a vault.\n5. Choose the Vaults properties tab. Scroll to the Tags section to view the tags associated with\nthe vault.\nTo add a tag to a vault\nYou can associate up to 50 tags to a vault. Tags that are associated with a vault must have unique\ntag keys.\nFor more information about tag restrictions, see Tagging Amazon S3 Glacier Resources.\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose the name of the vault that you want to add tags to.\n5. Choose the Vault properties tab.\n6. In the Tags section, choose Add. The Add tags page appears.\n7. On the Add tags page, specify the tag key in the Key field, and optionally specify a tag value\nin the Value field.\n8. Choose Save changes.\nTagging Vaults by Using the Amazon S3 Glacier Console API Version 2012-06-01 96",
      "start_idx": 182971,
      "end_idx": 184449,
      "metadata": {
        "num_sentences": 33,
        "num_words": 260,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "tags",
            "AWS Management Console",
            "region selector",
            "Vault properties",
            "Add tags",
            "tag key",
            "tag value",
            "tag restrictions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "Vaults",
            "Tags",
            "Region selector"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Tagging",
            "AWS Console Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to add, view, and remove tags for Amazon S3 Glacier vaults using the AWS Management Console. It includes step-by-step instructions for managing tags and highlights important restrictions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Amazon S3 Glacier vault?",
            "What are the steps to view tags associated with a vault?",
            "Are there any restrictions on tagging Amazon S3 Glacier resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Region selector",
          "tag key",
          "AWS Management Console",
          "Vaults",
          "region selector",
          "Vault properties",
          "tag value",
          "Amazon S3 Glacier",
          "vault",
          "Tags",
          "tags",
          "tag restrictions",
          "Add tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_96",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTo edit a tag\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose a vault name.\n5. Choose the Vault properties tab, and then scroll down to the Tags section.\n6. Under Tags, select the check box next to the tags that you want to change, then choose Edit.\nThe Edit tags page appears.\n7. Update the tag key in the Key field, and optionally update the tag value in the Value field.\n8. Choose Save changes.\nTo remove a tag from a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose the name of the vault that you want to remove tags from.\n5. Choose the Vault properties tab. Scroll down to the Tags section.\n6. Under Tags, select the check box next to the tags that you want to remove, then choose\nDelete.\n7. The Delete tags dialog box opens. To confirm that you want to delete the selected tags,\nchoose Delete.\nTagging Vaults by Using the AWS CLI\nFollow these steps to add, list, or remove tags by using the AWS Command Line Interface (AWS\nCLI).\nEach tag is composed of a key and a value. Each vault can have up to 50 tags.\n1. To add tags to a vault, use the add-tags-to-vault command.\nTagging Vaults by Using the AWS CLI API Version 2012-06-01 97",
      "start_idx": 184449,
      "end_idx": 186074,
      "metadata": {
        "num_sentences": 39,
        "num_words": 295,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Configuration"
            ]
          },
          "keywords": [
            "AWS Management Console",
            "S3 Glacier",
            "Vault",
            "Tags",
            "Region selector",
            "Vault properties",
            "AWS CLI",
            "add-tags-to-vault",
            "delete tags",
            "Edit tags"
          ],
          "entities": [
            "AWS Management Console",
            "S3 Glacier",
            "Vaults",
            "AWS CLI",
            "Tags"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Tagging",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for editing, removing, and managing tags on S3 Glacier vaults using the AWS Management Console and AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit tags on an S3 Glacier vault?",
            "What steps are needed to remove tags from a vault in AWS Glacier?",
            "How can I use the AWS CLI to manage tags on S3 Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Region selector",
          "AWS Management Console",
          "Vaults",
          "Vault properties",
          "Edit tags",
          "Vault",
          "Amazon S3 Glacier",
          "AWS CLI",
          "add-tags-to-vault",
          "Tags",
          "S3 Glacier",
          "delete tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_97",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier add-tags-to-vault --vault-name examplevault --account-id 111122223333\n--tags id=1234,date=2020\nFor more information on this vault operation, see Add Tags To Vault .\n2. To list all the tags attached to a vault, use the list-tags-for-vault command.\naws glacier list-tags-for-vault --vault-name examplevault --account-id 111122223333\nFor more information on this vault operation, see List Tags For Vault.\n3. To remove one or more tags from the set of tags attached to a vault, use the remove-tags-\nfrom-vault command.\naws glacier remove-tags-from-vault --vault-name examplevault --account-\nid 111122223333 --tag-keys date\nFor more information on this vault operation, see Remove Tags From Vault.\nTagging Vaults by Using the Amazon S3 Glacier API\nYou can add, list, and remove tags by using the S3 Glacier API. For examples, see the following\ndocumentation:\nAdd Tags To Vault (POST tags add)\nAdds or updates tags for the specified vault.\nList Tags For Vault (GET tags)\nLists the tags for the specified vault.\nRemove Tags From Vault (POST tags remove)\nRemoves tags from the specified vault.\nRelated Sections\n\u2022 Tagging Amazon S3 Glacier Resources\nTagging Vaults by Using the Amazon S3 Glacier API API Version 2012-06-01 98",
      "start_idx": 186074,
      "end_idx": 187338,
      "metadata": {
        "num_sentences": 12,
        "num_words": 193,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "API Interaction"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "tags",
            "add-tags-to-vault",
            "list-tags-for-vault",
            "remove-tags-from-vault",
            "API",
            "tagging",
            "account-id",
            "command"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Add Tags To Vault",
            "List Tags For Vault",
            "Remove Tags From Vault",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Operations",
            "Tagging Resources"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage vault tags in Amazon S3 Glacier using AWS CLI commands and the S3 Glacier API, including adding, listing, and removing tags.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to a vault in Amazon S3 Glacier?",
            "What command lists all tags attached to a vault?",
            "How can I remove specific tags from an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "API",
          "account-id",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "tagging",
          "vault",
          "command",
          "add-tags-to-vault",
          "remove-tags-from-vault",
          "Add Tags To Vault",
          "Remove Tags From Vault",
          "list-tags-for-vault",
          "tags",
          "List Tags For Vault"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_98",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Vault Lock\nThe following topics describe how to lock a vault in Amazon S3 Glacier and how to use Vault Lock\npolicies.\nTopics\n\u2022 Vault Locking Overview\n\u2022 Locking a Vault by Using the S3 Glacier API\n\u2022 Locking a Vault using the AWS Command Line Interface\n\u2022 Locking a Vault by Using the S3 Glacier Console\nVault Locking Overview\nS3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a Vault Lock policy. You can specify controls such as \"write once read\nmany\" (WORM) in a Vault Lock policy and lock the policy from future edits.\nImportant\nAfter a Vault Lock policy is locked, the policy can no longer be changed or deleted.\nS3 Glacier enforces the controls set in the Vault Lock policy to help achieve your compliance\nobjectives. For example, you can use Vault Lock policies to enforce data retention. You can deploy\na variety of compliance controls in a Vault Lock policy by using the AWS Identity and Access\nManagement (IAM) policy language. For more information about Vault Lock policies, see Vault Lock\nPolicies.\nA Vault Lock policy is different from a vault access policy. Both policies govern access controls to\nyour vault. However, a Vault Lock policy can be locked to prevent future changes, which provides\nstrong enforcement for your compliance controls. You can use the Vault Lock policy to deploy\nregulatory and compliance controls, which typically require tight controls on data access.\nImportant\nWe recommend that you first create a vault, complete a Vault Lock policy, and then upload\nyour archives to the vault so that the policy will be applied to them.\nVault Lock API Version 2012-06-01 99",
      "start_idx": 187338,
      "end_idx": 189051,
      "metadata": {
        "num_sentences": 14,
        "num_words": 291,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Warning",
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Vault Lock",
            "S3 Glacier",
            "compliance controls",
            "WORM",
            "IAM policy",
            "data retention",
            "Vault Lock policy",
            "vault access policy",
            "AWS CLI",
            "regulatory controls"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock policy",
            "IAM",
            "Vault Lock API",
            "AWS Command Line Interface"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Compliance",
          "secondary_categories": [
            "Data Governance",
            "Access Control Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use Amazon S3 Glacier Vault Lock to enforce compliance controls such as WORM policies, and provides guidance on locking vaults using various methods.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I lock a vault in Amazon S3 Glacier?",
            "What is the difference between a Vault Lock policy and a vault access policy?",
            "How can Vault Lock help with compliance requirements?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Compliance]",
        "tf_idf_keywords": [
          "data retention",
          "Vault Lock policy",
          "AWS Command Line Interface",
          "Amazon S3 Glacier",
          "compliance controls",
          "Vault Lock API",
          "AWS CLI",
          "IAM",
          "Vault Lock",
          "vault access policy",
          "IAM policy",
          "S3 Glacier",
          "WORM",
          "regulatory controls"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_99",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nIn contrast, you use a vault access policy to implement access controls that are not compliance\nrelated, temporary, and subject to frequent modification. You can use Vault lock and vault access\npolicies together. For example, you can implement time-based data-retention rules in the Vault\nLock policy (deny deletes), and grant read access to designated third parties or your business\npartners (allow reads) in your vault access policy.\nLocking a vault takes two steps:\n1. Initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24\nhours to validate your Vault Lock policy before the lock ID expires. To prevent your vault from\nexiting the in-progress state, you must complete the Vault Lock process within these 24 hours.\nOtherwise, your Vault Lock policy will be deleted.\n2. Use the lock ID to complete the lock process. If the Vault Lock policy doesn't work as expected,\nyou can stop the Vault Lock process and restart from the beginning. For information about how\nto use the S3 Glacier API to lock a vault, see Locking a Vault by Using the S3 Glacier API.\nLocking a Vault by Using the S3 Glacier API\nTo lock your vault with the Amazon S3 Glacier API, you first call Initiate Vault Lock (POST lock-\npolicy) with a Vault Lock policy that specifies the controls that you want to deploy. The Initiate\nVault Lock operation attaches the policy to your vault, transitions the Vault Lock to the in-\nprogress state, and returns a unique lock ID. After the Vault Lock enters the in-progress state, you\nhave 24 hours to complete the lock by calling Complete Vault Lock (POST lockId) with the lock ID\nthat was returned from the Initiate Vault Lock call.\nImportant\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.\n\u2022 After the Vault Lock policy is locked, it cannot be changed or deleted.\nIf you don't complete the Vault Lock process within 24 hours after entering the in-progress state,\nyour vault automatically exits the in-progress state, and the Vault Lock policy is removed. You can\ncall Initiate Vault Lock again to install a new Vault Lock policy and transition into the in-\nprogress state.\nVault Locking by Using the API API Version 2012-06-01 100",
      "start_idx": 189051,
      "end_idx": 191478,
      "metadata": {
        "num_sentences": 20,
        "num_words": 422,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "API Usage",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "Vault Lock",
            "Vault access policy",
            "S3 Glacier API",
            "lock ID",
            "data retention"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock policy",
            "Initiate Vault Lock",
            "Complete Vault Lock",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Data Management",
          "secondary_categories": [
            "API Integration",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Vault Lock policies with Amazon S3 Glacier to implement access controls and data retention rules, including step-by-step instructions for locking a vault using the S3 Glacier API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I lock a vault using the S3 Glacier API?",
            "What happens if I don\u2019t complete the Vault Lock process within 24 hours?",
            "Can Vault Lock policies be modified after being locked?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Data Management]",
        "tf_idf_keywords": [
          "data retention",
          "Vault Lock policy",
          "lock ID",
          "API Version 2012-06-01",
          "Initiate Vault Lock",
          "Complete Vault Lock",
          "Amazon S3 Glacier",
          "Vault access policy",
          "Vault Lock",
          "S3 Glacier API"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_100",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe in-progress state provides the opportunity to test your Vault Lock policy before you lock it.\nYour Vault Lock policy takes full effect during the in-progress state just as if the vault has been\nlocked, except that you can remove the policy by calling Abort Vault Lock (DELETE lock-policy).\nTo fine-tune your policy, you can repeat the Abort Vault Lock/Initiate Vault Lock\ncombination as many times as necessary to validate your Vault Lock policy changes.\nAfter you validate the Vault Lock policy, you can call Complete Vault Lock (POST lockId) with the\nmost recent lock ID to complete the vault locking process. Your vault transitions to a locked state,\nwhere the Vault Lock policy is unchangeable and can no longer be removed by calling Abort\nVault Lock.\nRelated Sections\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault using the AWS Command Line Interface\nYou can lock your vault using the AWS Command Line Interface. This will install a vault lock policy\non the specified vault and return the lock ID. You must complete the vault locking process within\n24 hours else the vault lock policy is removed from the vault.\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\nVault Locking Using the CLI API Version 2012-06-01 101",
      "start_idx": 191478,
      "end_idx": 193276,
      "metadata": {
        "num_sentences": 14,
        "num_words": 296,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Vault Lock policy",
            "Abort Vault Lock",
            "Complete Vault Lock",
            "AWS CLI",
            "lock ID",
            "vault locking process",
            "in-progress state",
            "locked state",
            "CLI API",
            "AWS Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS CLI",
            "lock ID",
            "Vault Lock policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "AWS Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to use the AWS CLI to apply and manage Vault Lock policies in Amazon S3 Glacier, including steps for testing, fine-tuning, and completing the vault locking process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I lock a vault in Amazon S3 Glacier using the AWS CLI?",
            "What is the process for testing and validating a Vault Lock policy?",
            "What happens if the vault locking process is not completed within 24 hours?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "locked state",
          "Vault Lock policy",
          "Abort Vault Lock",
          "lock ID",
          "vault locking process",
          "in-progress state",
          "AWS Command Line Interface",
          "Complete Vault Lock",
          "Amazon S3 Glacier",
          "CLI API",
          "AWS CLI",
          "Vault Lock"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_101",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\n1. Use the initiate-vault-lock to install a vault lock policy and sets the lock state of the\nvault lock to InProgress.\naws glacier initiate-vault-lock --vault-name examplevault --account-id 111122223333\n--policy file://lockconfig.json\n2. The lock configuration is a JSON document as shown in the following example. Before using\nthis command, replace the VAULT_ARN and Principal with the appropriate values for your\nuse case.\nTo find the ARN of the vault you wish to lock, you can use the list-vaults command.\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-lock\n\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::111122223333:root\\\"},\n\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"VAULT_ARN\\\",\\\"Condition\\\":\n{\\\"NumericLessThanEquals\\\":{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\n3. After initiating the vault lock you should see the lockId returned.\n{\n\"lockId\": \"LOCK_ID\"\n}\nVault Locking Using the CLI API Version 2012-06-01 102",
      "start_idx": 193276,
      "end_idx": 194628,
      "metadata": {
        "num_sentences": 13,
        "num_words": 169,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration",
              "Policy Definition"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault lock",
            "AWS CLI",
            "lock policy",
            "ARN",
            "Principal",
            "JSON document",
            "list-vaults",
            "vault lock state",
            "glacier:DeleteArchive"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "ARN",
            "lockId",
            "VAULT_ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural instructions on managing Amazon S3 Glacier vaults, including listing vaults, configuring vault lock policies, and using AWS CLI commands for configuration and policy enforcement.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list S3 Glacier vaults using AWS CLI?",
            "What is the process to configure a vault lock policy in S3 Glacier?",
            "How can I find the ARN of a specific S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "vault lock",
          "list-vaults",
          "vault lock state",
          "lock policy",
          "VAULT_ARN",
          "lockId",
          "AWS CLI",
          "glacier:DeleteArchive",
          "ARN",
          "Principal",
          "JSON document",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_102",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTo complete the vault lock You must run complete-vault-lock within 24 hours else the vault\nlock policy is removed from the vault.\naws glacier complete-vault-lock --vault-name examplevault --account-id 111122223333 --\nlock-id LOCK_ID\nRelated Sections\n\u2022 initiate-vault-lock in the AWS CLI Command Reference\n\u2022 list-vaults in the AWS CLI Command Reference\n\u2022 complete-vault-lock in the AWS CLI Command Reference\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault by Using the S3 Glacier Console\nAmazon S3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for\nindividual S3 Glacier vaults with a Vault Lock policy. For more information about S3 Glacier Vault\nLock, see Amazon S3 Glacier Access Control with Vault Lock Policies.\nImportant\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.\n\u2022 After the Vault Lock policy is locked, it cannot be changed or deleted.\nTo initiate a Vault Lock policy on your vault by using the S3 Glacier console\nYou initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24 hours\nto validate your Vault Lock policy before the lock ID expires.\nVault Locking by Using the Console API Version 2012-06-01 103",
      "start_idx": 194628,
      "end_idx": 196204,
      "metadata": {
        "num_sentences": 8,
        "num_words": 263,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "Vault Lock",
            "S3 Glacier",
            "Vault Lock policy",
            "complete-vault-lock",
            "lock ID",
            "AWS CLI",
            "initiate-vault-lock",
            "vault",
            "compliance controls",
            "archives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS CLI",
            "Vault Lock policy",
            "lock ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Compliance",
          "secondary_categories": [
            "AWS Services",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 Glacier Vault Lock to enforce compliance controls on vaults, including steps to initiate, validate, and complete a Vault Lock policy using the AWS CLI or console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete a Vault Lock policy in Amazon S3 Glacier?",
            "What is the purpose of a Vault Lock policy?",
            "What happens if I don't complete a Vault Lock within 24 hours?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Compliance]",
        "tf_idf_keywords": [
          "Vault Lock policy",
          "lock ID",
          "initiate-vault-lock",
          "Amazon S3 Glacier",
          "compliance controls",
          "AWS CLI",
          "vault",
          "Vault Lock",
          "complete-vault-lock",
          "archives",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_103",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. On the Vaults page, choose Create vault.\n5. Create a new vault.\nImportant\nWe recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.\n6. Choose your new vault from the Vaults list.\n7. Choose the Vault policies tab.\n8. In the Vault Lock policy section, choose Initiate Vault Lock policy.\n9. On the Initiate Vault Lock policy page, specify the record retention controls in your Vault Lock\npolicy in text format in the standard text box.\nNote\nYou can specify the record retention controls in a Vault Lock policy in text format\nand initiate the Vault Lock by calling the Initiate Vault Lock API operation or\nthrough the interactive UI in the S3 Glacier console. For information about formatting\nyour Vault Lock policy, see Amazon S3 Glacier Vault Lock Policy Examples.\n10. Choose Save changes.\n11. In the Record Vault Lock ID dialog box, copy your Lock ID and save it in a safe place.\nImportant\nAfter the Vault Lock policy has been initiated, you have 24 hours to validate the policy\nand complete the lock process. To complete the lock process, you must provide the\nlock ID. If it's not provided within 24 hours, the lock ID expires and your in-progress\npolicy is deleted.\n12. After saving your lock ID in a safe place, choose Close.\nVault Locking by Using the Console API Version 2012-06-01 104",
      "start_idx": 196204,
      "end_idx": 197877,
      "metadata": {
        "num_sentences": 31,
        "num_words": 291,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "AWS Management Console",
            "S3 Glacier",
            "Vault Lock policy",
            "Region selector",
            "Vaults",
            "Record retention controls",
            "Lock ID",
            "Initiate Vault Lock",
            "Vault Lock API",
            "Vault Lock policy examples"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "Vault Lock policy",
            "Lock ID",
            "Vaults"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Security",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for creating a vault, setting up a Vault Lock policy, and managing record retention controls in Amazon S3 Glacier using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What is the process for initiating a Vault Lock policy?",
            "How can I manage record retention controls in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Region selector",
          "Vault Lock policy",
          "AWS Management Console",
          "Vaults",
          "Initiate Vault Lock",
          "Vault Lock policy examples",
          "Vault Lock API",
          "Amazon S3 Glacier",
          "Record retention controls",
          "Lock ID",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_104",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n13. Test your Vault Lock policy within the next 24 hours. If the policy is working as intended,\nchoose Complete Vault Lock policy.\n14. In the Complete Vault Lock dialog box, select the check box to acknowledge that completing\nthe Vault Lock policy process is irreversible.\n15. Enter your provided Lock ID in the text box.\n16. Choose Complete Vault Lock.\nVault Locking by Using the Console API Version 2012-06-01 105",
      "start_idx": 197877,
      "end_idx": 198328,
      "metadata": {
        "num_sentences": 10,
        "num_words": 76,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Vault Lock",
            "policy",
            "Lock ID",
            "Amazon S3 Glacier",
            "Complete Vault Lock",
            "irreversible",
            "Console API",
            "dialog box",
            "test policy",
            "2012-06-01"
          ],
          "entities": [
            "Vault Lock",
            "Lock ID",
            "Amazon S3 Glacier",
            "Console API",
            "Complete Vault Lock"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "Data Management",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Console API"
          ]
        },
        "semantic": {
          "summary": "This section provides a step-by-step guide to testing and completing a Vault Lock policy in Amazon S3 Glacier using the Console API. It emphasizes the irreversible nature of the process upon completion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I test a Vault Lock policy in Amazon S3 Glacier?",
            "What steps are involved in completing a Vault Lock policy?",
            "What precautions should I take before completing a Vault Lock policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "Console API",
          "test policy",
          "Complete Vault Lock",
          "irreversible",
          "2012-06-01",
          "Amazon S3 Glacier",
          "dialog box",
          "Vault Lock",
          "Lock ID",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_105",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nWorking with Archives in Amazon S3 Glacier\nAn archive is any object, such as a photo, video, or document, that you store in a vault. It is a base\nunit of storage in Amazon S3 Glacier (S3 Glacier). Each archive has a unique ID and an optional\ndescription. When you upload an archive, S3 Glacier returns a response that includes an archive\nID. This archive ID is unique in the AWS Region in which the archive is stored. The following is an\nexample archive ID.\nTJgHcrOSfAkV6hdPqOATYfp_0ZaxL1pIBOc02iZ0gDPMr2ig-\nnhwd_PafstsdIf6HSrjHnP-3p6LCJClYytFT_CBhT9CwNxbRaM5MetS3I-\nGqwxI3Y8QtgbJbhEQPs0mJ3KExample\nArchive IDs are 138 bytes long. When you upload an archive, you can provide an optional\ndescription. You can retrieve an archive using its ID but not its description.\nImportant\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface.\nTopics\n\u2022 Archive Operations in Amazon S3 Glacier\n\u2022 Maintaining Client-Side Archive Metadata\n\u2022 Uploading an Archive in Amazon S3 Glacier\n\u2022 Downloading an Archive in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nAPI Version 2012-06-01 106",
      "start_idx": 198328,
      "end_idx": 199962,
      "metadata": {
        "num_sentences": 16,
        "num_words": 266,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "archive ID",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "metadata",
            "AWS Region",
            "management console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "Amazon SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the concept of archives in Amazon S3 Glacier, their unique IDs, and the tools available for interacting with them, such as the AWS CLI, REST API, and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is an archive in Amazon S3 Glacier?",
            "How do I upload and retrieve archives using AWS CLI?",
            "What tools are required to interact with S3 Glacier archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SDKs",
          "Amazon S3 Glacier",
          "REST API",
          "vault",
          "archive",
          "AWS CLI",
          "metadata",
          "management console",
          "archive ID",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_106",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nArchive Operations in Amazon S3 Glacier\nS3 Glacier supports the following basic archive operations: upload, download, and delete.\nDownloading an archive is an asynchronous operation.\nUploading an Archive in Amazon S3 Glacier\nYou can upload an archive in a single operation or upload it in parts. The API call you use to upload\nan archive in parts is referred as Multipart Upload. For more information, see Uploading an Archive\nin Amazon S3 Glacier.\nImportant\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface.\nFinding an Archive ID in Amazon S3 Glacier\nYou can get the archive ID by downloading the vault inventory for the vault that contains the\narchive. For more information about downloading the vault inventory, see Downloading a Vault\nInventory in Amazon S3 Glacier.\nDownloading an Archive in Amazon S3 Glacier\nDownloading an archive is an asynchronous operation. You must first initiate a job to download\na specific archive. After receiving the job request, S3 Glacier prepares your archive for download.\nAfter the job completes, you can download your archive data. Because of the asynchronous nature\nof the job, you can request S3 Glacier to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when the job completes. You can specify an SNS topic for each\nindividual job request or configure your vault to send a notification when specific events occur. For\nmore information about downloading an archive, see Downloading an Archive in S3 Glacier.\nArchive Operations API Version 2012-06-01 107",
      "start_idx": 199962,
      "end_idx": 202052,
      "metadata": {
        "num_sentences": 21,
        "num_words": 345,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "archive operations",
            "S3 Glacier",
            "vault inventory",
            "Multipart Upload",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "Amazon SNS",
            "asynchronous operation",
            "job request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SDKs",
            "Amazon SNS",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Asynchronous Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains archive operations in Amazon S3 Glacier, including uploading, downloading, and managing archives through APIs, AWS CLI, or SDKs. It also discusses asynchronous operations and notifications using Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What is the process for downloading an archive from S3 Glacier?",
            "How can I find the archive ID in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "job request",
          "asynchronous operation",
          "Amazon SDKs",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "REST API",
          "AWS CLI",
          "vault inventory",
          "Multipart Upload",
          "archive operations",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_107",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDeleting an Archive in Amazon S3 Glacier\nS3 Glacier provides an API call that you can use to delete one archive at a time. For more\ninformation, see Deleting an Archive in Amazon S3 Glacier.\nUpdating an Archive in S3 Glacier\nAfter you upload an archive, you cannot update its content or its description. The only way you\ncan update the archive content or its description is by deleting the archive and uploading another\narchive. Note that each time you upload an archive, S3 Glacier returns to you a unique archive ID.\nMaintaining Client-Side Archive Metadata\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. When you upload an archive S3 Glacier assigns an ID, an opaque sequence of\ncharacters, from which you cannot infer any meaning about the archive. You might maintain\nmetadata about the archives on the client-side. The metadata can include archive name and some\nother meaningful information about the archive.\nNote\nIf you are an Amazon Simple Storage Service (Amazon S3) customer, you know that\nwhen you upload an object to a bucket, you can assign the object an object key such as\nMyDocument.txt or SomePhoto.jpg. In S3 Glacier, you cannot assign a object key to the\narchives you upload.\nIf you maintain client-side archive metadata, note that S3 Glacier maintains a vault inventory\nthat includes archive IDs and any descriptions you provided during the archive upload. You might\noccasionally download the vault inventory to reconcile any issues in your client-side database you\nmaintain for the archive metadata. However, S3 Glacier takes vault inventory approximately daily.\nWhen you request a vault inventory, S3 Glacier returns the last inventory it prepared, a point in\ntime snapshot.\nUploading an Archive in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides a management console, which you can use to create\nand delete vaults. However, you cannot upload archives to S3 Glacier by using the management\nDeleting an Archive API Version 2012-06-01 108",
      "start_idx": 202052,
      "end_idx": 204123,
      "metadata": {
        "num_sentences": 17,
        "num_words": 336,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault inventory",
            "metadata",
            "API call",
            "archive ID",
            "client-side",
            "upload",
            "delete",
            "management console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault inventory",
            "archive ID",
            "Amazon Simple Storage Service",
            "management console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Storage Service"
          ],
          "mentioned_tools": [
            "management console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage archives in Amazon S3 Glacier, including uploading, deleting, and maintaining metadata. It highlights the limitations of updating archives and the use of client-side metadata management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "Can I update an archive after uploading it to S3 Glacier?",
            "What metadata does S3 Glacier support for archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "client-side",
          "Amazon S3 Glacier",
          "upload",
          "metadata",
          "archive",
          "vault inventory",
          "management console",
          "archive ID",
          "delete",
          "Amazon Simple Storage Service",
          "API call"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_108",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nconsole. To upload data, such as photos, videos, and other documents, you must either use the\nAWS CLI or write code to make requests, by using either the REST API directly or by using the\nAmazon SDKs.\nFor information about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3 Glacier.\nTo install the AWS CLI, go to AWS Command Line Interface. The following Uploading topics\ndescribe how to upload archives to S3 Glacier by using the Amazon SDK for Java, the Amazon SDK\nfor .NET, and the REST API.\nTopics\n\u2022 Options for Uploading an Archive to Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\nOptions for Uploading an Archive to Amazon S3 Glacier\nDepending on the size of the data you are uploading, S3 Glacier offers the following options:\n\u2022 Upload archives in a single operation \u2013 In a single operation, you can upload archives from 1\nbyte to up to 4 GB in size. However, we encourage S3 Glacier customers to use multipart upload\nto upload archives greater than 100 MB. For more information, see Uploading an Archive in a\nSingle Operation.\n\u2022 Upload archives in parts \u2013 Using the multipart upload API, you can upload large archives, up to\nabout 40,000 GB (10,000 * 4 GB).\nThe multipart upload API call is designed to improve the upload experience for larger archives.\nYou can upload archives in parts. These parts can be uploaded independently, in any order, and\nin parallel. If a part upload fails, you only need to upload that part again and not the entire\narchive. You can use multipart upload for archives from 1 byte to about 40,000 GB in size. For\nmore information, see Uploading Large Archives in Parts (Multipart Upload).\nImportant\nThe S3 Glacier vault inventory is only updated once a day. When you upload an archive,\nyou will not immediately see the new archive added to your vault (in the console or in your\ndownloaded vault inventory list) until the vault inventory has been updated.\nOptions for Uploading an Archive API Version 2012-06-01 109",
      "start_idx": 204123,
      "end_idx": 206195,
      "metadata": {
        "num_sentences": 18,
        "num_words": 363,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Upload Options",
              "Multipart Upload",
              "Single Operation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "multipart upload",
            "archive",
            "vault inventory",
            "upload operation",
            "large archives",
            "single operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SDK for Java",
            "Amazon SDK for .NET",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Amazon SDK for Java",
            "Amazon SDK for .NET",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using AWS CLI, REST API, or Amazon SDKs, with options for single operation or multipart upload depending on archive size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload data to Amazon S3 Glacier?",
            "What are the options for uploading large archives to S3 Glacier?",
            "How does multipart upload improve the upload experience?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "Amazon SDKs",
          "single operation",
          "Amazon SDK for .NET",
          "large archives",
          "Amazon S3 Glacier",
          "REST API",
          "AWS CLI",
          "archive",
          "vault inventory",
          "S3 Glacier",
          "Amazon SDK for Java",
          "upload operation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_109",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS Snowball Service\nAWS Snowball accelerates moving large amounts of data into and out of AWS using Amazon-\nowned devices, bypassing the internet. For more information, see AWS Snowball detail page.\nTo upload existing data to Amazon S3 Glacier (S3 Glacier), you might consider using one of the\nAWS Snowball device types to import data into Amazon S3, and then move it to the S3 Glacier\nstorage class for archival using lifecycle rules. When you transition Amazon S3 objects to the\nS3 Glacier storage class, Amazon S3 internally uses S3 Glacier for durable storage at lower cost.\nAlthough the objects are stored in S3 Glacier, they remain Amazon S3 objects that you manage in\nAmazon S3, and you cannot access them directly through S3 Glacier.\nFor more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide.\nUploading an Archive in a Single Operation\nAs described in Uploading an Archive in Amazon S3 Glacier, you can upload smaller archives\nin a single operation. However, we encourage Amazon S3 Glacier (S3 Glacier) customers to use\nMultipart Upload to upload archives greater than 100 MB.\nTopics\n\u2022 Uploading an Archive in a Single Operation Using the AWS Command Line Interface\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for .NET in Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation Using the REST API\nUploading an Archive in a Single Operation Using the AWS Command Line\nInterface\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Upload an Archive Using the AWS CLI\nUploading an Archive in a Single Operation API Version 2012-06-01 110",
      "start_idx": 206195,
      "end_idx": 208164,
      "metadata": {
        "num_sentences": 10,
        "num_words": 329,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "AWS Snowball",
            "Amazon S3 Glacier",
            "Lifecycle rules",
            "Multipart Upload",
            "AWS CLI",
            "Archive",
            "REST API",
            "Storage class",
            "AWS SDK",
            "Data transfer"
          ],
          "entities": [
            "AWS Snowball",
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Storage and Transfer",
          "secondary_categories": [
            "Cloud Storage",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS Snowball for transferring large data sets to Amazon S3 Glacier and details methods for uploading archives, including single-operation uploads via the AWS CLI and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use AWS Snowball to transfer data to Amazon S3 Glacier?",
            "What are the steps to upload an archive in Amazon S3 Glacier using the AWS CLI?",
            "What is the recommended method for uploading large archives to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Storage and Transfer]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Storage class",
          "AWS Snowball",
          "Amazon S3 Glacier",
          "Amazon S3",
          "Archive",
          "Lifecycle rules",
          "AWS CLI",
          "REST API",
          "AWS SDK for Java",
          "Data transfer",
          "Multipart Upload",
          "AWS SDK for .NET",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_110",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Upload an Archive Using the AWS CLI\nIn order to upload an archive you must have a vault created. For more information about creating\nvaults, see Creating a Vault in Amazon S3 Glacier.\n1. Use the upload-archive command to add an archive to an existing vault. In the below\nexample replace the vault name and account ID. For the body parameter specify a path to\nthe file you wish to upload.\naws glacier upload-archive --vault-name awsexamplevault --account-id 123456789012\n--body archive.zip\n2. Expected output:\nUploading an Archive in a Single Operation API Version 2012-06-01 111",
      "start_idx": 208164,
      "end_idx": 209571,
      "metadata": {
        "num_sentences": 17,
        "num_words": 226,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Command Usage",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "upload-archive",
            "list-vaults",
            "account ID",
            "configure",
            "credentials",
            "command prompt",
            "archive"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "archive.zip",
            "123456789012"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to set up and use the AWS CLI to interact with Amazon S3 Glacier, including listing vaults and uploading archives.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I configure the AWS CLI for S3 Glacier?",
            "What commands are used to list vaults in S3 Glacier?",
            "How can I upload an archive to a vault using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "list-vaults",
          "command prompt",
          "upload-archive",
          "Amazon S3 Glacier",
          "configure",
          "AWS CLI",
          "vault",
          "archive",
          "123456789012",
          "S3 Glacier",
          "credentials",
          "archive.zip"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_111",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\": \"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/123456789012/vaults/awsexamplevault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nWhen finished the command will output the archive ID, checksum, and location in S3 Glacier.\nFor more information about the upload-archive command, see upload-archive in the AWS CLI\nCommand Reference.\nUploading an Archive in a Single Operation Using the AWS SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload an archive.\nTopics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nUploading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the upload method, which\nyou can use to upload an archive to a vault.\nNote\nYou can use the upload method to upload small or large archives. Depending on the\narchive size you are uploading, this method determines whether to upload it in a single\noperation or use the multipart upload API to upload the archive in parts.\nUploading an Archive in a Single Operation API Version 2012-06-01 112",
      "start_idx": 209571,
      "end_idx": 211127,
      "metadata": {
        "num_sentences": 7,
        "num_words": 203,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive ID",
            "checksum",
            "location",
            "upload-archive",
            "AWS CLI",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "multipart upload",
            "high-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDKs",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using both high-level and low-level APIs of the AWS SDK for Java, as well as the AWS CLI. It covers single-operation uploads and multipart uploads based on archive size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the purpose of the ArchiveTransferManager class?",
            "What are the differences between single-operation and multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "high-level API",
          "API Version 2012-06-01",
          "upload-archive",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "checksum",
          "AWS CLI",
          "location",
          "AWS SDK for Java",
          "archive ID"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_112",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region (us-west-2). For a list of supported AWS Regions and endpoints, see Accessing\nAmazon S3 Glacier.\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You need to update the code as shown with the name of the vault you\nwant to upload to and the name of the file you want to upload.\nExample\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.glacier.transfer.UploadResult;\npublic class ArchiveUploadHighLevel {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String archiveToUpload = \"*** provide name of file to upload ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(client,\ncredentials);\nUploadResult result = atm.upload(vaultName, \"my archive \" + (new Date()),\nnew File(archiveToUpload));\nSystem.out.println(\"Archive ID: \" + result.getArchiveId());\nUploading an Archive in a Single Operation API Version 2012-06-01 113",
      "start_idx": 211127,
      "end_idx": 212817,
      "metadata": {
        "num_sentences": 5,
        "num_words": 200,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "archive upload",
            "vault",
            "US West (Oregon)",
            "API Version 2012-06-01",
            "ArchiveTransferManager",
            "ProfileCredentialsProvider",
            "UploadResult",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "US West (Oregon)",
            "ArchiveTransferManager",
            "ProfileCredentialsProvider"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to upload an archive to Amazon S3 Glacier using the high-level API of the AWS SDK for Java, specifically targeting the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using Java?",
            "What is the procedure for using the high-level API in AWS SDK for Java?",
            "What are the prerequisites for running the example code for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon)",
          "API Version 2012-06-01",
          "ArchiveTransferManager",
          "ProfileCredentialsProvider",
          "UploadResult",
          "Amazon S3 Glacier",
          "vault",
          "AWS SDK for Java",
          "endpoint",
          "archive upload"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_113",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the UploadArchiveRequest class.\nIn addition to the data you want to upload, you need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, the content length of the data, and your account ID.\nIf you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for Java\nwith Amazon S3 Glacier.\n3. Run the uploadArchive method by providing the request object as a parameter.\nIn response, Amazon S3 Glacier (S3 Glacier) returns an archive ID of the newly uploaded archive.\nThe following Java code snippet illustrates the preceding steps.\nAmazonGlacierClient client;\nUploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withChecksum(checksum)\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nUploading an Archive in a Single Operation API Version 2012-06-01 114",
      "start_idx": 212817,
      "end_idx": 214452,
      "metadata": {
        "num_sentences": 16,
        "num_words": 244,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step guide",
              "Code example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "UploadArchiveRequest",
            "archive operations",
            "checksum",
            "SHA-256 tree hash",
            "vault name",
            "account ID",
            "uploadArchive method"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "UploadArchiveRequest",
            "UploadArchiveResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to upload an archive to Amazon S3 Glacier using the low-level API of the AWS SDK for Java, including creating a client, preparing a request, and executing the upload operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using Java?",
            "What steps are involved in using the AWS SDK for Java to upload data?",
            "What is the purpose of the UploadArchiveRequest class in AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "uploadArchive method",
          "account ID",
          "AmazonGlacierClient",
          "UploadArchiveResult",
          "Amazon S3 Glacier",
          "checksum",
          "SHA-256 tree hash",
          "vault name",
          "UploadArchiveRequest",
          "AWS SDK for Java",
          "archive operations"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_114",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSystem.out.println(\"Location (includes ArchiveID): \" +\nuploadArchiveResult.getLocation());\nExample: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the vault you want to upload to and the name of the file you want to upload.\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.UploadArchiveRequest;\nimport com.amazonaws.services.glacier.model.UploadArchiveResult;\npublic class ArchiveUploadLowLevel {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveFilePath = \"*** provide to file upload ****\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\n// First open file and read.\nFile file = new File(archiveFilePath);\nInputStream is = new FileInputStream(file);\nbyte[] body = new byte[(int) file.length()];\nis.read(body);\nUploading an Archive in a Single Operation API Version 2012-06-01 115",
      "start_idx": 214452,
      "end_idx": 216202,
      "metadata": {
        "num_sentences": 5,
        "num_words": 199,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "UploadArchiveRequest",
            "UploadArchiveResult",
            "ProfileCredentialsProvider",
            "TreeHashGenerator",
            "AmazonGlacierClient",
            "vault",
            "archive",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "UploadArchiveRequest",
            "AmazonGlacierClient",
            "ProfileCredentialsProvider"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to upload an archive to an Amazon S3 Glacier vault using the low-level API of the AWS SDK for Java. It includes a code snippet and setup instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using Java?",
            "What is the low-level API in AWS SDK for Java for uploading archives?",
            "What setup is required to use AWS SDK for Java with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "TreeHashGenerator",
          "ProfileCredentialsProvider",
          "UploadArchiveResult",
          "Amazon S3 Glacier",
          "vault",
          "UploadArchiveRequest",
          "archive",
          "AWS SDK for Java",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_115",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n// Send request.\nUploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(vaultName)\n.withChecksum(TreeHashGenerator.calculateTreeHash(new\nFile(archiveFilePath)))\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nSystem.out.println(\"ArchiveID: \" + uploadArchiveResult.getArchiveId());\n} catch (Exception e)\n{\nSystem.err.println(\"Archive not uploaded.\");\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the AWS SDK for .NET in\nAmazon S3 Glacier\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload an archive in a single operation.\nTopics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nUploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Upload method that you\ncan use to upload an archive to a vault.\nNote\nYou can use the Upload method to upload small or large files. Depending on the file size\nyou are uploading, this method determines whether to upload it in a single operation or\nuse the multipart upload API to upload the file in parts.\nUploading an Archive in a Single Operation API Version 2012-06-01 116",
      "start_idx": 216202,
      "end_idx": 217651,
      "metadata": {
        "num_sentences": 7,
        "num_words": 203,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadArchiveRequest",
            "UploadArchiveResult",
            "TreeHashGenerator",
            "ArchiveTransferManager",
            "high-level API",
            "low-level API",
            "AWS SDK for .NET",
            "multipart upload",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "UploadArchiveRequest",
            "TreeHashGenerator"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using both high-level and low-level APIs of the AWS SDK for .NET, including a code example for a single-operation upload.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs for uploading archives?",
            "How does the Upload method handle large files in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "high-level API",
          "TreeHashGenerator",
          "low-level API",
          "ArchiveTransferManager",
          "UploadArchiveResult",
          "Amazon S3 Glacier",
          "vault",
          "UploadArchiveRequest",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_116",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive.\nstring archiveId = manager.Upload(vaultName, \"upload archive test\",\narchiveToUpload).ArchiveId;\nConsole.WriteLine(\"Archive ID: (Copy and save this ID for use in other\nexamples.) : {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\nUploading an Archive in a Single Operation API Version 2012-06-01 117",
      "start_idx": 217651,
      "end_idx": 219076,
      "metadata": {
        "num_sentences": 6,
        "num_words": 184,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon)",
            "vault",
            "archive",
            "C#",
            "Amazon.RegionEndpoint",
            "AmazonGlacierException",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "US West (Oregon) Region",
            "ArchiveTransferManager",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to upload an archive to an Amazon S3 Glacier vault using the high-level API of the AWS SDK for .NET in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using C#?",
            "What is the high-level API for Amazon S3 Glacier in AWS SDK for .NET?",
            "What exceptions should I handle when uploading an archive to Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "examplevault",
          "US West (Oregon)",
          "API Version 2012-06-01",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "AmazonGlacierException",
          "Amazon.RegionEndpoint",
          "AWS SDK for .NET",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_117",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the UploadArchiveRequest class.\nIn addition to the data you want to upload, You need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, and your account ID.\nIf you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier.\n3. Run the UploadArchive method by providing the request object as a parameter.\nIn response, S3 Glacier returns an archive ID of the newly uploaded archive.\nExample: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example uses the AWS SDK\nfor .NET to upload an archive to a vault (examplevault).\nNote\nFor information about the underlying REST API to upload an archive in a single request, see\nUpload Archive (POST archive).\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload.\nUploading an Archive in a Single Operation API Version 2012-06-01 118",
      "start_idx": 219076,
      "end_idx": 220779,
      "metadata": {
        "num_sentences": 20,
        "num_words": 293,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "UploadArchiveRequest",
            "AmazonGlacierClient",
            "checksum",
            "vault name",
            "account ID",
            "archive ID",
            "SHA-256 tree hash",
            "REST API"
          ],
          "entities": [
            "AmazonGlacierClient",
            "UploadArchiveRequest",
            "AWS SDK for .NET",
            "S3 Glacier",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to upload an archive to Amazon S3 Glacier in a single operation using the low-level API of the AWS SDK for .NET, including step-by-step instructions and a code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What are the required parameters for the UploadArchiveRequest class?",
            "Where can I find a code example for uploading archives to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "AmazonGlacierClient",
          "examplevault",
          "Amazon S3 Glacier",
          "checksum",
          "SHA-256 tree hash",
          "vault name",
          "UploadArchiveRequest",
          "REST API",
          "S3 Glacier",
          "archive ID",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_119",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nBody = fileStream,\nChecksum = treeHash\n};\nUploadArchiveResponse response = client.UploadArchive(request);\nstring archiveID = response.ArchiveId;\nreturn archiveID;\n}\n}\n}\n}\nUploading an Archive in a Single Operation Using the REST API\nYou can use the Upload Archive API call to upload an archive in a single operation. For more\ninformation, see Upload Archive (POST archive).\nUploading Large Archives in Parts (Multipart Upload)\nTopics\n\u2022 Multipart Upload Process\n\u2022 Quick Facts\n\u2022 Uploading Large Archives by Using the AWS CLI\n\u2022 Uploading Large Archives in Parts Using the Amazon SDK for Java\n\u2022 Uploading Large Archives Using the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the REST API\nMultipart Upload Process\nAs described in Uploading an Archive in Amazon S3 Glacier, we encourage Amazon S3 Glacier (S3\nGlacier) customers to use Multipart Upload to upload archives greater than 100 mebibytes (MiB).\n1. Initiate Multipart Upload\nWhen you send a request to initiate a multipart upload, S3 Glacier returns a multipart\nupload ID, which is a unique identifier for your multipart upload. Any subsequent multipart\nupload operations require this ID. This ID doesn't expire for at least 24 hours after S3 Glacier\ncompletes the job.\nUploading Large Archives in Parts API Version 2012-06-01 120",
      "start_idx": 222059,
      "end_idx": 223392,
      "metadata": {
        "num_sentences": 8,
        "num_words": 212,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Upload Archive",
            "REST API",
            "AWS CLI",
            "AWS SDK",
            "Java SDK",
            ".NET SDK",
            "archive ID",
            "treeHash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This document explains how to upload archives to Amazon S3 Glacier, including using the Upload Archive API for single operations and Multipart Upload for large archives exceeding 100 MiB. It provides procedural steps and references for various SDKs and tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier?",
            "What is the process for multipart uploads in Amazon S3 Glacier?",
            "Which tools or SDKs support uploading large archives to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Upload Archive",
          "Amazon S3 Glacier",
          "REST API",
          "AWS CLI",
          "treeHash",
          "AWS SDK for Java",
          "archive ID",
          "Multipart Upload",
          "Java SDK",
          "AWS SDK for .NET",
          "AWS SDK",
          ".NET SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_120",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nIn your request to start a multipart upload, specify the part size in number of bytes. Each part\nyou upload, except the last part, must be this size.\nNote\nYou don't need to know the overall archive size when using multipart uploads. This\nmeans that you can use multipart uploads in cases where you don't know the archive\nsize when you start uploading the archive. You only need to decide the part size at the\ntime you start the multipart upload.\nIn the initiate multipart upload request, you can also provide an optional archive description.\n2. Upload Parts\nFor each part upload request, you must include the multipart upload ID you obtained in step\n1. In the request, you must also specify the content range, in bytes, identifying the position of\nthe part in the final archive. S3 Glacier later uses the content range information to assemble\nthe archive in proper sequence. Because you provide the content range for each part that you\nupload, it determines the part's position in the final assembly of the archive, and therefore you\ncan upload parts in any order. You can also upload parts in parallel. If you upload a new part\nusing the same content range as a previously uploaded part, the previously uploaded part is\noverwritten.\n3. Complete (or stop) Multipart Upload\nAfter uploading all the archive parts, you use the complete operation. Again, you must\nspecify the upload ID in your request. S3 Glacier creates an archive by concatenating parts in\nascending order based on the content range you provided. S3 Glacier response to a Complete\nMultipart Upload request includes an archive ID for the newly created archive. If you provided\nan optional archive description in the Initiate Multipart Upload request, S3 Glacier associates\nit with the assembled archive. After you successfully complete a multipart upload, you cannot\nrefer to the multipart upload ID. That means you cannot access parts associated with the\nmultipart upload ID.\nIf you stop a multipart upload, you cannot upload any more parts using that multipart upload\nID. All storage consumed by any parts associated with the stopped multipart upload is freed. If\nany part uploads were in-progress, they can still succeed or fail even after stopped.\nUploading Large Archives in Parts API Version 2012-06-01 121",
      "start_idx": 223392,
      "end_idx": 225704,
      "metadata": {
        "num_sentences": 25,
        "num_words": 385,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "multipart upload",
            "archive",
            "content range",
            "upload ID",
            "S3 Glacier",
            "part size",
            "parallel upload",
            "archive description",
            "stop upload",
            "complete upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload ID",
            "archive ID",
            "API Version 2012-06-01",
            "content range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "File Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to perform multipart uploads to Amazon S3 Glacier, including specifying part sizes, uploading parts, and completing or stopping the upload process. It highlights flexibility in upload order and storage management upon stopping an upload.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I start a multipart upload in Amazon S3 Glacier?",
            "What happens if I stop a multipart upload?",
            "Can I upload parts in parallel using Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "archive description",
          "API Version 2012-06-01",
          "complete upload",
          "stop upload",
          "Amazon S3 Glacier",
          "archive",
          "part size",
          "multipart upload ID",
          "archive ID",
          "parallel upload",
          "S3 Glacier",
          "upload ID",
          "content range"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_121",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAdditional Multipart Upload Operations\nAmazon S3 Glacier (S3 Glacier) provides the following additional multipart upload API calls.\n\u2022 List Parts\u2014Using this operation, you can list the parts of a specific multipart upload. It returns\ninformation about the parts that you have uploaded for a multipart upload. For each list parts\nrequest, S3 Glacier returns information for up to 1,000 parts. If there are more parts to list for\nthe multipart upload, the result is paginated and a marker is returned in the response at which\nto continue the list. You need to send additional requests to retrieve subsequent parts. Note that\nthe returned list of parts doesn't include parts that haven't completed uploading.\n\u2022 List Multipart Uploads\u2014Using this operation, you can obtain a list of multipart uploads in\nprogress. An in-progress multipart upload is an upload that you have initiated, but have not yet\ncompleted or stopped. For each list multipart uploads request, S3 Glacier returns up to 1,000\nmultipart uploads. If there are more multipart uploads to list, then the result is paginated and\na marker is returned in the response at which to continue the list. You need to send additional\nrequests to retrieve the remaining multipart uploads.\nQuick Facts\nThe following table provides multipart upload core specifications.\nItem Specification\nMaximum archive size 10,000 x 4 gibibytes (GiB)\nMaximum number of parts per 10,000\nupload\nPart size 1 MiB to 4 GiB, last part can be < 1 MiB. You specify the\nsize value in bytes.\nThe part size must be a mebibyte (1024 kibibytes [KiB])\nmultiplied by a power of 2. For example, 1 048576 (1\nMiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8\nMiB).\nMaximum number of parts returned 1,000\nfor a list parts request\nUploading Large Archives in Parts API Version 2012-06-01 122",
      "start_idx": 225704,
      "end_idx": 227543,
      "metadata": {
        "num_sentences": 18,
        "num_words": 304,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specification",
              "API Operations",
              "Limits"
            ]
          },
          "keywords": [
            "multipart upload",
            "S3 Glacier",
            "List Parts",
            "List Multipart Uploads",
            "archive size",
            "part size",
            "pagination",
            "marker",
            "API version",
            "upload operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload API",
            "archive",
            "parts",
            "marker"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on additional multipart upload operations in Amazon S3 Glacier, including listing parts and multipart uploads, and specifies core limitations and requirements for uploads.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the specifications for multipart uploads in Amazon S3 Glacier?",
            "How can I list parts of a multipart upload in S3 Glacier?",
            "What is the maximum archive size allowed for multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "multipart upload",
          "pagination",
          "upload operations",
          "Amazon S3 Glacier",
          "multipart upload API",
          "parts",
          "archive",
          "part size",
          "archive size",
          "List Multipart Uploads",
          "S3 Glacier",
          "List Parts",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_122",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nItem Specification\nMaximum number of multipart 1,000\nuploads returned in a list multipart\nuploads request\nUploading Large Archives by Using the AWS CLI\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) by using the AWS Command Line\nInterface (AWS CLI). To improve the upload experience for larger archives, S3 Glacier provides\nseveral API operations to support multipart uploads. By using these API operations, you can upload\narchives in parts. These parts can be uploaded independently, in any order, and in parallel. If a part\nupload fails, you need to upload only that part again, not the entire archive. You can use multipart\nuploads for archives from 1 byte to about 40,000 gibibytes (GiB) in size.\nFor more information about S3 Glacier multipart uploads, see Uploading Large Archives in Parts\n(Multipart Upload).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 (Prerequisite) Install Python\n\u2022 (Prerequisite) Create an S3 Glacier Vault\n\u2022 Example: Uploading Large Archives in Parts by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\nUploading Large Archives in Parts API Version 2012-06-01 123",
      "start_idx": 227543,
      "end_idx": 229130,
      "metadata": {
        "num_sentences": 14,
        "num_words": 254,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example",
              "Instruction"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart uploads",
            "AWS CLI",
            "archives",
            "API operations",
            "Python",
            "S3 Glacier Vault",
            "upload experience",
            "gibibytes",
            "Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "S3 Glacier Vault",
            "Python",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using the AWS CLI, utilizing multipart uploads for improved efficiency and reliability.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives to Amazon S3 Glacier?",
            "What are the prerequisites for using multipart uploads with AWS CLI?",
            "What size limits apply to S3 Glacier multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Command Line Interface",
          "upload experience",
          "API Version 2012-06-01",
          "Python",
          "API operations",
          "Amazon S3 Glacier",
          "AWS CLI",
          "S3 Glacier Vault",
          "archives",
          "gibibytes",
          "multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_123",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\n(Prerequisite) Install Python\nTo complete a multipart upload, you must calculate the SHA256 tree hash of the archive that\nyou're uploading. Doing so is different than calculating the SHA256 tree hash of the file that you\nwant to upload. To calculate the SHA256 tree hash of the archive that you're uploading, you can\nuse Java, C# (with .NET), or Python. In this example, you will use Python. For instructions on using\nJava or C#, see Computing Checksums.\nFor more information about installing Python, see Install or update Python in the Boto3 Developer\nGuide.\n(Prerequisite) Create an S3 Glacier Vault\nTo use the following example, you must have at least one S3 Glacier vault created. For more\ninformation about creating vaults, see Creating a Vault in Amazon S3 Glacier.\nExample: Uploading Large Archives in Parts by Using the AWS CLI\nIn this example, you will create a file and use multipart upload API operations to upload this file, in\nparts, to Amazon S3 Glacier.\nImportant\nBefore starting this procedure, make sure that you've performed all of the prerequisite\nsteps. To upload an archive, you must have a vault created, the AWS CLI configured, and be\nprepared to use Java, C#, or Python to calculate a SHA256 tree hash.\nUploading Large Archives in Parts API Version 2012-06-01 124",
      "start_idx": 229130,
      "end_idx": 230764,
      "metadata": {
        "num_sentences": 15,
        "num_words": 272,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Prerequisite",
              "Example",
              "Command"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS CLI",
            "SHA256 tree hash",
            "multipart upload",
            "Python",
            "Java",
            "C#",
            "Boto3",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Python",
            "Boto3",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "Checksum Calculation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI and programming languages like Python to upload large archives to Amazon S3 Glacier using multipart upload and SHA256 tree hash calculations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list S3 Glacier vaults using the AWS CLI?",
            "What are the prerequisites for uploading large archives to Amazon S3 Glacier?",
            "How do I calculate the SHA256 tree hash for a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "API Version 2012-06-01",
          "SHA256 tree hash",
          "Python",
          "Amazon S3 Glacier",
          "Java",
          "vault",
          "AWS CLI",
          "archive",
          "Boto3",
          "S3 Glacier",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_124",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe following procedure uses the initiate-multipart-upload, upload-multipart-part,\nand complete-multipart-upload AWS CLI commands.\nFor more detailed information about each of these commands, see initiate-multipart-upload,\nupload-multipart-part, and complete-multipart-upload in the AWS CLI Command Reference.\n1. Use the initiate-multipart-upload command to create a multipart upload resource. In your\nrequest, specify the part size in number of bytes. Each part that you upload, except the last\npart, will be this size. You don't need to know the overall archive size when initiating an\nupload. However, you will need the total size, in bytes, of each part when completing the\nupload on the final step.\nIn the following command, replace the values for the --vault-name and --account-ID\nparameters with your own information. This command specifies that you will upload an archive\nwith a part size of 1 mebibyte (MiB) (1024 x 1024 bytes) per file. Replace this --part-size\nparameter value if needed.\naws glacier initiate-multipart-upload --vault-name awsexamplevault --part-\nsize 1048576 --account-id 123456789012\nExpected output:\n{\n\"location\": \"/123456789012/vaults/awsexamplevault/multipart-uploads/uploadId\",\n\"uploadId\": \"uploadId\"\n}\nWhen finished, the command will output the multipart upload resource's upload ID and\nlocation in S3 Glacier. You will use this upload ID in subsequent steps.\n2. For this example, you can use the following commands to create a 4.4 MiB file, split it into\n1 MiB chunks, and upload each chunk. To upload your own files, you can follow a similar\nprocedure of splitting your data into chunks and uploading each part.\nLinux or macOS\nThe following command creates a 4.4 MiB file, named file_to_upload, on Linux or macOS.\nmkfile -n 9000b file_to_upload\nUploading Large Archives in Parts API Version 2012-06-01 125",
      "start_idx": 230764,
      "end_idx": 232640,
      "metadata": {
        "num_sentences": 18,
        "num_words": 273,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Instructions",
              "File Upload",
              "AWS CLI Usage"
            ]
          },
          "keywords": [
            "multipart upload",
            "AWS CLI",
            "S3 Glacier",
            "initiate-multipart-upload",
            "upload-multipart-part",
            "complete-multipart-upload",
            "part size",
            "archive",
            "upload ID",
            "Linux or macOS"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "multipart upload",
            "upload ID",
            "Linux or macOS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command-Line Tools",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to use AWS CLI commands to perform a multipart upload to Amazon S3 Glacier, including initiating the upload, splitting files into parts, and completing the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload to Amazon S3 Glacier?",
            "What is the process for splitting files into chunks for upload?",
            "What AWS CLI commands are used for multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "complete-multipart-upload",
          "multipart upload",
          "Linux or macOS",
          "Amazon S3 Glacier",
          "AWS CLI",
          "archive",
          "part size",
          "upload ID",
          "S3 Glacier",
          "upload-multipart-part",
          "initiate-multipart-upload"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_125",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nWindows\nThe following command creates a 4.4 MiB file, named file_to_upload, on Windows.\nfsutil file createnew file_to_upload 4608000\n3. Next, you will split this file into 1 MiB chunks.\nsplit -b 1048576 file_to_upload chunk\nYou now have the following five chunks. The first four are 1 MiB, and the last is approximately\n400 kibibytes (KiB).\nchunkaa\nchunkab\nchunkac\nchunkad\nchunkae\n4. Use the upload-multipart-part command to upload a part of an archive. You can upload\narchive parts in any order. You can also upload them in parallel. You can upload up to 10,000\nparts for a multipart upload.\nIn the following command, replace the values for the --vault-name, --account-ID, and --\nupload-id parameters. The upload ID must match the ID given as output of the initiate-\nmultipart-upload command. The --range parameter specifies that you will upload a\npart with a size of 1 MiB (1024 x 1024 bytes). This size must match what you specified in the\ninitiate-multipart-upload command. Adjust this size value if needed. The --body\nparameter specifies the name of the part that you're uploading.\naws glacier upload-multipart-part --body chunkaa --range='bytes 0-1048575/*' --\nvault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nIf successful, the command will produce output that contains the checksum for the uploaded\npart.\n5. Run the upload-multipart-part command again to upload the remaining parts of your\nmultipart upload. Update the --range and \u2013-body parameter values for each command to\nmatch the part that you're uploading.\nUploading Large Archives in Parts API Version 2012-06-01 126",
      "start_idx": 232640,
      "end_idx": 234283,
      "metadata": {
        "num_sentences": 21,
        "num_words": 252,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "archive parts",
            "checksum",
            "vault-name",
            "upload-id",
            "fsutil",
            "split",
            "range parameter",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "aws glacier",
            "awsexamplevault",
            "upload ID",
            "account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "File Management",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "fsutil",
            "aws CLI",
            "split"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create and split a file into chunks, and upload those chunks to Amazon S3 Glacier using the multipart upload feature via the AWS CLI. It includes step-by-step commands and parameters for successful execution.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I split a file into chunks for Amazon S3 Glacier upload?",
            "What are the parameters required for the upload-multipart-part command?",
            "How can I upload archive parts in parallel using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "range parameter",
          "multipart upload",
          "account ID",
          "aws glacier",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "checksum",
          "vault-name",
          "split",
          "awsexamplevault",
          "archive parts",
          "upload-id",
          "upload ID",
          "fsutil"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_126",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier upload-multipart-part --body chunkab --range='bytes 1048576-2097151/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkac --range='bytes 2097152-3145727/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkad --range='bytes 3145728-4194303/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkae --range='bytes 4194304-4607999/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nNote\nThe final command's --range parameter value is smaller because the final part of\nour upload is less than 1 MiB. If successful, each command will produce output that\ncontains the checksum for each uploaded part.\n6. Next, you will assemble the archive and finish the upload. You must include the total size and\nSHA256 tree hash of the archive.\nTo calculate the SHA256 tree hash of the archive, you can use Java, C#, or Python. In this\nexample, you will use Python. For instructions on using Java or C#, see Computing Checksums.\nCreate the Python file checksum.py and insert the following code. If needed, replace the\nname of the original file.\nfrom botocore.utils import calculate_tree_hash\nchecksum = calculate_tree_hash(open('file_to_upload', 'rb'))\nprint(checksum)\n7. Run checksum.py to calculate the SHA256 tree hash. The following hash may not match your\noutput.\n$ python3 checksum.py\n$ 3d760edb291bfc9d90d35809243de092aea4c47b308290ad12d084f69988ae0c\nUploading Large Archives in Parts API Version 2012-06-01 127",
      "start_idx": 234283,
      "end_idx": 235979,
      "metadata": {
        "num_sentences": 14,
        "num_words": 209,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line",
              "Code Example",
              "Note"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "multipart upload",
            "checksum",
            "SHA256 tree hash",
            "Python",
            "botocore",
            "archive assembly",
            "upload ID",
            "range parameter",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Python",
            "botocore",
            "AWS CLI",
            "SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python",
            "botocore",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for uploading large archives to Amazon S3 Glacier using multipart uploads, calculating checksums, and assembling archives with Python and AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload in Amazon S3 Glacier?",
            "How can I calculate a SHA256 tree hash using Python?",
            "What is the purpose of the --range parameter in AWS CLI commands?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive assembly",
          "range parameter",
          "multipart upload",
          "Python",
          "SHA256 tree hash",
          "checksum",
          "Amazon S3 Glacier",
          "AWS CLI",
          "botocore",
          "S3 Glacier",
          "upload ID",
          "SHA256"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_127",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n8. Use the complete-multipart-upload command to finish the archive upload. Replace the values\nfor the --vault-name, --account-ID, --upload-ID, and --checksum parameters. The --\narchive parameter value specifies the total size, in bytes, of the archive. This value must be\nthe sum of all the sizes of the individual parts that you uploaded. Replace this value if needed.\naws glacier complete-multipart-upload --archive-size 4608000 --vault-\nname awsexamplevault --account-id 123456789012 --upload-id upload_ID --\nchecksum checksum\nWhen finished, the command will output the archive's ID, checksum, and location in S3 Glacier.\nUploading Large Archives in Parts Using the Amazon SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload a large archive (see Uploading an Archive in Amazon S3 Glacier).\n\u2022 The high-level API provides a method that you can use to upload archives of any size. Depending\non the file you are uploading, the method either uploads an archive in a single operation or uses\nthe multipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts.\n\u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API.\nFor more information about the high-level and low-level APIs, see Using the AWS SDK for Java with\nAmazon S3 Glacier.\nTopics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\n\u2022 Upload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nUploading Large Archives in Parts API Version 2012-06-01 128",
      "start_idx": 235979,
      "end_idx": 238093,
      "metadata": {
        "num_sentences": 16,
        "num_words": 342,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "API Usage"
            ]
          },
          "keywords": [
            "multipart upload",
            "archive size",
            "checksum",
            "AWS SDK for Java",
            "high-level API",
            "low-level API",
            "Amazon S3 Glacier",
            "upload-ID",
            "vault-name",
            "account-ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "upload-ID",
            "vault-name",
            "archive-size"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using multipart upload, detailing both high-level and low-level API methods provided by the AWS SDK for Java. It includes procedural steps and code examples for completing multipart uploads.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I complete a multipart upload in Amazon S3 Glacier?",
            "What is the difference between high-level and low-level APIs in the AWS SDK for Java?",
            "What parameters are required for the complete-multipart-upload command?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive-size",
          "multipart upload",
          "high-level API",
          "account-ID",
          "low-level API",
          "checksum",
          "Amazon S3 Glacier",
          "vault-name",
          "AWS SDK for Java",
          "archive size",
          "upload-ID"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_128",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for Java.\nUpload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nFor granular control of the upload you can use the low-level API where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Initiate multipart upload by calling the initiateMultipartUpload method.\nYou need to provide vault name in which you want to upload the archive, part size you want\nto use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID.\n3. Upload parts by calling the uploadMultipartPart method.\nFor each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID.\n4. Complete multipart upload by calling the completeMultipartUpload method.\nYou need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID.\nExample: Uploading a Large Archive in a Parts Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the file you want to upload.\nUploading Large Archives in Parts API Version 2012-06-01 129",
      "start_idx": 238093,
      "end_idx": 240168,
      "metadata": {
        "num_sentences": 24,
        "num_words": 353,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "AWS SDK for Java",
            "InitiateMultipartUploadRequest",
            "uploadMultipartPart",
            "completeMultipartUpload",
            "archive ID",
            "vault name",
            "checksum",
            "byte range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "multipart upload API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to upload large archives to Amazon S3 Glacier in parts via the multipart upload API, providing detailed steps and configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives in parts using the AWS SDK for Java?",
            "What are the steps for using the multipart upload API in Amazon S3 Glacier?",
            "What parameters are required for initiating a multipart upload in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "AmazonGlacierClient",
          "InitiateMultipartUploadRequest",
          "Amazon S3 Glacier",
          "checksum",
          "vault name",
          "byte range",
          "multipart upload API",
          "AWS SDK for Java",
          "archive ID",
          "uploadMultipartPart",
          "completeMultipartUpload"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_129",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nThis example is valid for part sizes from 1 MB to 1 GB. However, S3 Glacier supports part\nsizes up to 4 GB.\nExample\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.LinkedList;\nimport java.util.List;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartRequest;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartResult;\nimport com.amazonaws.util.BinaryUtils;\npublic class ArchiveMPU {\npublic static String vaultName = \"examplevault\";\n// This example works for part sizes up to 1 GB.\npublic static String partSize = \"1048576\"; // 1 MB.\npublic static String archiveFilePath = \"*** provide archive file path ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nUploading Large Archives in Parts API Version 2012-06-01 130",
      "start_idx": 240168,
      "end_idx": 241830,
      "metadata": {
        "num_sentences": 5,
        "num_words": 139,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "TreeHashGenerator",
            "CompleteMultipartUploadRequest",
            "InitiateMultipartUploadRequest",
            "UploadMultipartPartRequest",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "archive file path",
            "part size"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "ProfileCredentialsProvider",
            "TreeHashGenerator",
            "Multipart Upload API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of uploading large archives to Amazon S3 Glacier using the Multipart Upload API with Java code snippets and AWS SDK tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier?",
            "What is the maximum part size supported by S3 Glacier's Multipart Upload API?",
            "How do I use the AWS SDK for Java to initiate a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "TreeHashGenerator",
          "ProfileCredentialsProvider",
          "InitiateMultipartUploadRequest",
          "Amazon S3 Glacier",
          "UploadMultipartPartRequest",
          "archive file path",
          "part size",
          "Multipart Upload",
          "Multipart Upload API",
          "CompleteMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_130",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nSystem.out.println(\"Uploading an archive.\");\nString uploadId = initiateMultipartUpload();\nString checksum = uploadParts(uploadId);\nString archiveId = CompleteMultiPartUpload(uploadId, checksum);\nSystem.out.println(\"Completed an archive. ArchiveId: \" + archiveId);\n} catch (Exception e) {\nSystem.err.println(e);\n}\n}\nprivate static String initiateMultipartUpload() {\n// Initiate\nInitiateMultipartUploadRequest request = new InitiateMultipartUploadRequest()\n.withVaultName(vaultName)\n.withArchiveDescription(\"my archive \" + (new Date()))\n.withPartSize(partSize);\nInitiateMultipartUploadResult result = client.initiateMultipartUpload(request);\nSystem.out.println(\"ArchiveID: \" + result.getUploadId());\nreturn result.getUploadId();\n}\nprivate static String uploadParts(String uploadId) throws AmazonServiceException,\nNoSuchAlgorithmException, AmazonClientException, IOException {\nint filePosition = 0;\nlong currentPosition = 0;\nbyte[] buffer = new byte[Integer.valueOf(partSize)];\nList<byte[]> binaryChecksums = new LinkedList<byte[]>();\nFile file = new File(archiveFilePath);\nFileInputStream fileToUpload = new FileInputStream(file);\nString contentRange;\nint read = 0;\nwhile (currentPosition < file.length())\n{\nread = fileToUpload.read(buffer, filePosition, buffer.length);\nUploading Large Archives in Parts API Version 2012-06-01 131",
      "start_idx": 241830,
      "end_idx": 243312,
      "metadata": {
        "num_sentences": 3,
        "num_words": 138,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "ArchiveId",
            "InitiateMultipartUploadRequest",
            "checksum",
            "AmazonGlacierClient",
            "upload parts",
            "vaultName",
            "partSize",
            "archiveFilePath"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "FileInputStream",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "File Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide on how to use the Amazon S3 Glacier service to upload large archives in parts using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What is the process for uploading large archives in parts using AWS SDK?",
            "What is the role of checksum in completing a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "AmazonGlacierClient",
          "upload parts",
          "API Version 2012-06-01",
          "vaultName",
          "InitiateMultipartUploadRequest",
          "Amazon S3 Glacier",
          "checksum",
          "archiveFilePath",
          "FileInputStream",
          "Multipart Upload",
          "partSize"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_132",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nreturn compResult.getLocation();\n}\n}\nUploading Large Archives Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload large archives in parts (see Uploading an Archive in Amazon S3 Glacier).\n\u2022 The high-level API provides a method that you can use to upload archives of any size. Depending\non the file you are uploading, the method either uploads archive in a single operation or uses the\nmultipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts.\n\u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API.\nFor more information about the high-level and low-level APIs, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier.\nTopics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for .NET.\nUploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nFor granular control of the upload, you can use the low-level API, where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for .NET.\nUploading Large Archives in Parts API Version 2012-06-01 133",
      "start_idx": 244801,
      "end_idx": 246777,
      "metadata": {
        "num_sentences": 13,
        "num_words": 338,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "multipart upload",
            "high-level API",
            "low-level API",
            "upload archives",
            "REST implementation",
            "large archives",
            "API methods",
            "archive size"
          ],
          "entities": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "multipart upload API",
            "REST implementation",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using the AWS SDK for .NET, detailing both high-level and low-level APIs and their respective approaches to handling uploads based on archive size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives using the AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs in Amazon S3 Glacier?",
            "How does multipart upload work in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload archives",
          "multipart upload",
          "high-level API",
          "low-level API",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "large archives",
          "multipart upload API",
          "AWS SDK for .NET",
          "archive size",
          "API methods",
          "REST implementation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_133",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Initiate multipart upload by calling the InitiateMultipartUpload method.\nYou need to provide the vault name to which you want to upload the archive, the part size you\nwant to use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID.\n3. Upload parts by calling the UploadMultipartPart method.\nFor each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID.\n4. Complete the multipart upload by calling the CompleteMultipartUpload method.\nYou need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID.\nExample: Uploading a Large Archive in Parts Using the Amazon SDK for .NET\nThe following C# code example uses the AWS SDK for .NET to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Code\nExamples. You need to update the code as shown with the name of a file you want to upload.\nExample\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadMPU\n{\nUploading Large Archives in Parts API Version 2012-06-01 134",
      "start_idx": 246777,
      "end_idx": 248588,
      "metadata": {
        "num_sentences": 20,
        "num_words": 287,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "AWS Region",
            "vault name",
            "upload ID",
            "checksum",
            "archive ID",
            "InitiateMultipartUpload",
            "UploadMultipartPart",
            "CompleteMultipartUpload"
          ],
          "entities": [
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "AWS SDK for .NET",
            "S3 Glacier",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform a multipart upload to Amazon S3 Glacier using the AWS SDK for .NET, including initializing the client, uploading parts, and completing the upload process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives to Amazon S3 Glacier?",
            "What are the steps for multipart upload using AWS SDK for .NET?",
            "What parameters are required for initiating a multipart upload in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "InitiateMultipartUpload",
          "AmazonGlacierClient",
          "examplevault",
          "Amazon S3 Glacier",
          "checksum",
          "CompleteMultipartUpload",
          "vault name",
          "InitiateMultipartUploadRequest",
          "S3 Glacier",
          "archive ID",
          "AWS SDK for .NET",
          "upload ID",
          "AWS Region",
          "UploadMultipartPart"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_134",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\nstatic long partSize = 4194304; // 4 MB.\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\nList<string> partChecksumList = new List<string>();\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Uploading an archive.\");\nstring uploadId = InitiateMultipartUpload(client);\npartChecksumList = UploadParts(uploadId, client);\nstring archiveId = CompleteMPU(uploadId, client, partChecksumList);\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic string InitiateMultipartUpload(AmazonGlacierClient client)\n{\nInitiateMultipartUploadRequest initiateMPUrequest = new\nInitiateMultipartUploadRequest()\n{\nVaultName = vaultName,\nPartSize = partSize,\nArchiveDescription = \"Test doc uploaded using MPU.\"\n};\nInitiateMultipartUploadResponse initiateMPUresponse =\nclient.InitiateMultipartUpload(initiateMPUrequest);\nreturn initiateMPUresponse.UploadId;\nUploading Large Archives in Parts API Version 2012-06-01 135",
      "start_idx": 248588,
      "end_idx": 250068,
      "metadata": {
        "num_sentences": 5,
        "num_words": 147,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "archive",
            "vault",
            "checksum",
            "AmazonGlacierClient",
            "InitiateMultipartUpload",
            "CompleteMPU",
            "API Version 2012-06-01",
            "part size"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "InitiateMultipartUploadResponse",
            "USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using multipart upload with the AmazonGlacierClient in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large files to Amazon S3 Glacier?",
            "What is the process for initiating a multipart upload in Amazon S3 Glacier?",
            "What are the required parameters for the InitiateMultipartUploadRequest?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "CompleteMPU",
          "InitiateMultipartUpload",
          "AmazonGlacierClient",
          "API Version 2012-06-01",
          "USWest2",
          "Amazon S3 Glacier",
          "checksum",
          "InitiateMultipartUploadRequest",
          "vault",
          "archive",
          "part size",
          "InitiateMultipartUploadResponse"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_136",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\nUploadId = uploadID,\nArchiveSize = fileLength.ToString(),\nChecksum = TreeHashGenerator.CalculateTreeHash(partChecksumList),\nVaultName = vaultName\n};\nCompleteMultipartUploadResponse completeMPUresponse =\nclient.CompleteMultipartUpload(completeMPUrequest);\nreturn completeMPUresponse.ArchiveId;\n}\n}\n}\nUploading Large Archives in Parts Using the REST API\nAs described in Uploading Large Archives in Parts (Multipart Upload), multipart upload refers to a\nset of operations that enable you to upload an archive in parts and perform related operations. For\nmore information about these operations, see the following API reference topics:\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\nDownloading an Archive in S3 Glacier\nAmazon S3 Glacier provides a management console, which you can use to create and delete vaults.\nHowever, you cannot download archives from S3 Glacier by using the management console.\nTo download data, such as photos, videos, and other documents, you must either use the AWS\nCommand Line Interface (AWS CLI) or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs.\nFor information about using S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier.\nTo install the AWS CLI, see AWS Command Line Interface. The following topics describe how to\nDownloading an Archive API Version 2012-06-01 137",
      "start_idx": 251427,
      "end_idx": 253024,
      "metadata": {
        "num_sentences": 7,
        "num_words": 230,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "S3 Glacier",
            "REST API",
            "AWS CLI",
            "Archive",
            "Vault",
            "Checksum",
            "TreeHash",
            "UploadId",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "CompleteMultipartUploadResponse",
            "TreeHashGenerator",
            "VaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives in parts using Amazon S3 Glacier's REST API and provides guidance on downloading archives using AWS CLI or AWS SDKs. It includes code examples and references to relevant API operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives in parts using Amazon S3 Glacier?",
            "What API operations are available for multipart upload in S3 Glacier?",
            "How can I download archives from S3 Glacier using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "TreeHash",
          "Checksum",
          "UploadId",
          "TreeHashGenerator",
          "Amazon S3 Glacier",
          "Vault",
          "Archive",
          "AWS CLI",
          "REST API",
          "AWS SDKs",
          "Multipart Upload",
          "VaultName",
          "S3 Glacier",
          "CompleteMultipartUploadResponse"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_137",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ndownload archives to S3 Glacier by using the AWS SDK for Java, the AWS SDK for .NET, and the\nAmazon S3 Glacier REST API.\nTopics\n\u2022 Retrieving S3 Glacier Archives Using AWS Console\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading an Archive by Using the REST API\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS CLI\nRetrieving S3 Glacier Archives Using AWS Console\nRetrieving an archive from Amazon S3 Glacier is an asynchronous operation in which you first\ninitiate a job, and then download the output after the job is completed. To initiate an archive\nretrieval job, you use the Initiate Job (POST jobs) REST API operation or the equivalent in the AWS\nCLI, or the AWS SDKs.\nTopics\n\u2022 Archive Retrieval Options\n\u2022 Ranged Archive Retrievals\nRetrieving an archive from S3 Glacier is a two-step process.\nTo retrieve an archive\n1. Initiate an archive retrieval job.\na. Get the ID of the archive that you want to retrieve. You can get the archive ID from an\ninventory of the vault. You can get the archive ID with the REST API, AWS CLI, or AWS\nSDKs. For more information, see Downloading a Vault Inventory in Amazon S3 Glacier.\nb. Initiate a job that requests S3 Glacier to prepare an entire archive or a portion of the\narchive for subsequent download by using the Initiate Job (POST jobs) operation.\nWhen you initiate a job, S3 Glacier returns a job ID in the response and runs the job\nasynchronously. (You cannot download the job output until after the job is completed, as\ndescribed in Step 2.)\nRetrieving Archives in Console API Version 2012-06-01 138",
      "start_idx": 253024,
      "end_idx": 254729,
      "metadata": {
        "num_sentences": 15,
        "num_words": 303,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API",
            "AWS CLI",
            "Initiate Job",
            "vault inventory",
            "archive ID",
            "job ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archives from Amazon S3 Glacier using various tools such as AWS SDKs, REST API, and AWS CLI, detailing the asynchronous process of initiating and downloading retrieval jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What tools can be used to initiate archive retrieval jobs in S3 Glacier?",
            "What is the process for downloading archive retrieval job outputs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 Glacier",
          "Initiate Job",
          "REST API",
          "AWS CLI",
          "AWS SDK for Java",
          "vault inventory",
          "archive retrieval",
          "archive ID",
          "job ID",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_138",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nImportant\nFor Standard retrievals only, a data retrieval policy can cause your Initiate Job\nrequest to fail with a PolicyEnforcedException exception. For more information\nabout data retrieval policies, see S3 Glacier Data Retrieval Policies. For more\ninformation about the PolicyEnforcedException exception, see Error Responses.\nWhen required, you can restore large segments of the data stored in S3 Glacier. For more\ninformation about restoring data from the S3 Glacier storage classes, see Storage Classes for\nArchiving Objects in the Amazon Simple Storage Service User Guide.\n2. After the job is completed, download the bytes by using the Get Job Output (GET output)\noperation.\nYou can download all bytes or specify a byte range to download only a portion of the job\noutput. For larger output, downloading the output in chunks helps in the event of a download\nfailure, such as a network failure. If you get job output in a single request and there is a\nnetwork failure, you have to restart downloading the output from the beginning. However,\nif you download the output in chunks, in the event of any failure, you need only restart the\ndownload of the smaller portion and not the entire output.\nS3 Glacier must complete a job before you can get its output. After completion, a job does not\nexpire for at least 24 hours, which means that you can download the output within the 24-hour\nperiod after the job is completed. To determine if your job is complete, check its status by using\none of the following options:\n\u2022 Wait for a job-completion notification \u2013 You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. S3\nGlacier sends a notification only after it completes the job.\nYou can specify an Amazon SNS topic for a job when you initiate the job. In addition to\nspecifying an Amazon SNS topic in your job request, if your vault has notifications set for\narchive retrieval events, then S3 Glacier also publishes a notification to that SNS topic. For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier.\nRetrieving Archives in Console API Version 2012-06-01 139",
      "start_idx": 254729,
      "end_idx": 256941,
      "metadata": {
        "num_sentences": 19,
        "num_words": 368,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "data retrieval policy",
            "PolicyEnforcedException",
            "Get Job Output",
            "byte range",
            "network failure",
            "Amazon SNS",
            "vault notifications",
            "archive retrieval",
            "job-completion notification"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "PolicyEnforcedException",
            "Amazon Simple Notification Service",
            "Amazon SNS",
            "Storage Classes"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Retrieval",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve data from Amazon S3 Glacier, including handling retrieval policies, job output, and notifications for job completion using Amazon SNS. It provides guidance on managing large data downloads and handling potential failures.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What causes a PolicyEnforcedException in Amazon S3 Glacier?",
            "How can I retrieve job output from S3 Glacier in chunks?",
            "What is the role of Amazon SNS in S3 Glacier job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Amazon Simple Notification Service",
          "network failure",
          "Get Job Output",
          "PolicyEnforcedException",
          "job-completion notification",
          "vault notifications",
          "byte range",
          "Amazon SNS",
          "Amazon S3 Glacier",
          "Storage Classes",
          "archive retrieval",
          "S3 Glacier",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_139",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Request job information explicitly \u2013 You can also use the S3 Glacier Describe Job API\noperation (Describe Job (GET JobID)) to periodically poll for job information. However, we\nrecommend using Amazon SNS notifications.\nNote\nThe information that you get by using an Amazon SNS notification is the same as what you\nget by calling the Describe Job API operation.\nArchive Retrieval Options\nWhen initiating a job to retrieve an archive, you can specify one of the following retrieval options,\nbased on your access time and cost requirements. For information about retrieval pricing, see\nAmazon S3 Glacier Pricing.\n\u2022 Expedited \u2013 Expedited retrievals allow you to quickly access your data that's stored in the S3\nGlacier Flexible Retrieval storage class or the S3 Intelligent-Tiering Archive Access tier when\noccasional urgent requests for restoring archives are required. For all but the largest archives\n(more than 250 MB), data accessed by using Expedited retrievals is typically made available\nwithin 1\u20135 minutes. Provisioned capacity ensures that retrieval capacity for Expedited retrievals\nis available when you need it. For more information, see Provisioned Capacity.\n\u2022 Standard \u2013 Standard retrievals allow you to access any of your archives within several hours.\nStandard retrievals are typically completed within 3\u20135 hours. Standard is the default option for\nretrieval requests that do not specify the retrieval option.\n\u2022 Bulk \u2013 Bulk retrievals are the lowest-cost S3 Glacier retrieval option, which you can use to\nretrieve large amounts, even petabytes, of data inexpensively in a day. Bulk retrievals are\ntypically completed within 5\u201312 hours.\nThe following table summarizes the archive retrieval options. For information about pricing, see\nAmazon S3 Glacier pricing.\nTo make an Expedited, Standard, or Bulk retrieval, set the Tier request element in the\nRestoreObject REST API operation request to the option that you want, or the equivalent in the\nAWS Command Line Interface (AWS CLI) or AWS SDKs. If you purchased provisioned capacity, all\nExpedited retrievals are automatically served through your provisioned capacity.\nRetrieving Archives in Console API Version 2012-06-01 140",
      "start_idx": 256941,
      "end_idx": 259164,
      "metadata": {
        "num_sentences": 19,
        "num_words": 340,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Describe Job API",
            "SNS notifications",
            "archive retrieval",
            "Expedited retrievals",
            "Standard retrievals",
            "Bulk retrievals",
            "Provisioned Capacity",
            "RestoreObject REST API",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS notifications",
            "RestoreObject REST API",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "The documentation explains archive retrieval options in Amazon S3 Glacier, detailing Expedited, Standard, and Bulk retrieval tiers, and recommends using SNS notifications for job status updates instead of polling with the Describe Job API.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What are the archive retrieval options available in Amazon S3 Glacier?",
            "How does Expedited retrieval differ from Standard and Bulk retrievals?",
            "What is the recommended method for monitoring job status in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Expedited retrievals",
          "Bulk retrievals",
          "Standard retrievals",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "AWS CLI",
          "SNS notifications",
          "AWS SDKs",
          "archive retrieval",
          "Describe Job API",
          "RestoreObject REST API",
          "Provisioned Capacity"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_140",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nProvisioned Capacity\nProvisioned capacity helps ensure that your retrieval capacity for Expedited retrievals is available\nwhen you need it. Each unit of capacity provides that at least three Expedited retrievals can be\nperformed every 5 minutes and provides up to 150 megabytes per second (MBps) of retrieval\nthroughput.\nIf your workload requires highly reliable and predictable access to a subset of your data in minutes,\nwe recommend that you purchase provisioned retrieval capacity. Without provisioned capacity,\nExpedited retrievals are typically accepted, except for rare situations of unusually high demand.\nHowever, if you require access to Expedited retrievals under all circumstances, you must purchase\nprovisioned retrieval capacity.\nPurchasing Provisioned Capacity\nYou can purchase provisioned capacity units by using the S3 Glacier console, the Purchase\nProvisioned Capacity (POST provisioned-capacity) REST API operation, the AWS SDKs, or the AWS\nCLI. For provisioned capacity pricing information, see Amazon S3 Glacier Pricing.\nA provisioned capacity unit lasts for one month, starting at the date and time of purchase.\nIf the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28.\nTo purchase provisioned capacity by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. In the left navigation pane, choose Data retrieval settings.\n3. Under Provisioned capacity units (PCUs), choose Purchase PCU. The Purchase PCU dialog\nbox appears.\n4. If you want to purchase provisioned capacity, enter confirm in the To confirm purchase box.\n5. Choose Purchase PCU.\nRetrieving Archives in Console API Version 2012-06-01 141",
      "start_idx": 259164,
      "end_idx": 261125,
      "metadata": {
        "num_sentences": 23,
        "num_words": 300,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Purchasing"
            ]
          },
          "keywords": [
            "provisioned capacity",
            "Expedited retrievals",
            "retrieval throughput",
            "Amazon S3 Glacier",
            "AWS Management Console",
            "Purchase PCU",
            "REST API",
            "AWS SDKs",
            "AWS CLI",
            "pricing"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Provisioned Capacity",
            "Expedited retrievals",
            "AWS Management Console",
            "Purchase PCU"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to purchase and configure provisioned capacity for Amazon S3 Glacier to ensure reliable and predictable Expedited retrievals. It includes step-by-step instructions for using the AWS Management Console, REST API, AWS CLI, or SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I purchase provisioned capacity for Amazon S3 Glacier?",
            "What is the retrieval capacity provided by a provisioned capacity unit?",
            "What tools can I use to configure provisioned capacity in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "pricing",
          "AWS Management Console",
          "retrieval throughput",
          "Expedited retrievals",
          "Amazon S3 Glacier",
          "REST API",
          "AWS CLI",
          "AWS SDKs",
          "Provisioned Capacity",
          "Purchase PCU",
          "provisioned capacity"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_141",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRanged Archive Retrievals\nWhen you retrieve an archive from S3 Glacier, you can optionally specify a range, or portion, of the\narchive to retrieve. The default is to retrieve the whole archive. Specifying a range of bytes can be\nhelpful when you want to do the following:\n\u2022 Manage your data downloads \u2013 S3 Glacier allows retrieved data to be downloaded for 24 hours\nafter the retrieval request is completed. Therefore, you might want to retrieve only portions\nof the archive so that you can manage the schedule of downloads within the given download\nwindow.\n\u2022 Retrieve a targeted part of a large archive \u2013 For example, suppose you have previously\naggregated many files and uploaded them as a single archive, and now you want to retrieve a\nfew of the files. In this case, you can specify a range of the archive that contains the files that you\nare interested in by using one retrieval request. Or, you can initiate multiple retrieval requests,\neach with a range for one or more files.\nWhen initiating a retrieval job using range retrievals, you must provide a range that is megabyte\naligned. In other words, the byte range can start at zero (the beginning of your archive), or at any\n1-MB interval thereafter (1 MB, 2 MB, 3 MB, and so on).\nThe end of the range can either be the end of your archive or any 1 MB interval greater than the\nbeginning of your range. Furthermore, if you want to get checksum values when you download\nthe data (after the retrieval job is completed), the range that you request in the job initiation must\nalso be tree-hash aligned. You can use checksums to help ensure that your data was not corrupted\nduring transmission. For more information about megabyte alignment and tree-hash alignment,\nsee Receiving Checksums When Downloading Data.\nDownloading an Archive in Amazon S3 Glacier Using the AWS SDK for\nJava\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\ndownload an archive.\nTopics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for Java\nDownloading an Archive Using Java API Version 2012-06-01 142",
      "start_idx": 261125,
      "end_idx": 263328,
      "metadata": {
        "num_sentences": 15,
        "num_words": 384,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "range retrieval",
            "megabyte alignment",
            "tree-hash alignment",
            "download window",
            "checksum",
            "AWS SDK for Java",
            "retrieval job",
            "byte range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Java API Version 2012-06-01",
            "archive",
            "tree-hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform ranged archive retrievals in Amazon S3 Glacier, including byte range specifications, checksum validation, and using the AWS SDK for Java to download archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a specific range of an archive in Amazon S3 Glacier?",
            "What are the requirements for byte range alignment in S3 Glacier retrievals?",
            "How do I use the AWS SDK for Java to download an archive from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Java API Version 2012-06-01",
          "range retrieval",
          "checksum",
          "byte range",
          "Amazon S3 Glacier",
          "archive",
          "AWS SDK for Java",
          "archive retrieval",
          "retrieval job",
          "download window",
          "S3 Glacier",
          "tree-hash",
          "tree-hash alignment",
          "megabyte alignment"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_142",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDownloading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the download method you\ncan use to download an archive.\nImportant\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options.\nExample: Downloading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region (us-west-2).\nFor step-by-step instructions to run this sample, see Running Java Examples for Amazon S3 Glacier\nUsing Eclipse. You need to update the code as shown with an existing archive ID and the local file\npath where you want to save the downloaded archive.\nExample\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class ArchiveDownloadHighLevel {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\nDownloading an Archive Using Java API Version 2012-06-01 143",
      "start_idx": 263328,
      "end_idx": 265074,
      "metadata": {
        "num_sentences": 9,
        "num_words": 229,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for Java",
            "archive retrieval job",
            "vault",
            "archive ID",
            "download method",
            "Amazon S3 Glacier",
            "US West (Oregon) Region"
          ],
          "entities": [
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for Java",
            "Amazon S3 Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using the high-level API of the AWS SDK for Java, including setting up SNS and SQS for notifications and polling.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using Java?",
            "What is the role of Amazon SNS and SQS in archive retrieval?",
            "What code changes are needed to run the example?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "download method",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault",
          "Amazon SQS",
          "AWS SDK for Java",
          "archive ID",
          "archive retrieval job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_143",
      "text": "\n\nAmazon S3 Glacier Developer Guide\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nSystem.out.println(\"Downloaded file to \" + downloadFilePath);\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for Java\nThe following are the steps to retrieve a vault inventory using the AWS SDK for Java low-level API.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region.\n2. Initiate an archive-retrieval job by executing the initiateJob method.\nYou provide job information, such as the archive ID of the archive you want to download\nand the optional Amazon SNS topic to which you want Amazon S3 Glacier (S3 Glacier) to\nDownloading an Archive Using Java API Version 2012-06-01 144",
      "start_idx": 265074,
      "end_idx": 266669,
      "metadata": {
        "num_sentences": 8,
        "num_words": 192,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "AWS SDK for Java",
            "archive retrieval",
            "vault inventory",
            "Amazon SNS",
            "Amazon SQS",
            "ArchiveTransferManager",
            "Region endpoint",
            "low-level API"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "ArchiveTransferManager",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "ProfileCredentialsProvider",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on downloading archives from Amazon S3 Glacier using the AWS SDK for Java, including code snippets and steps for initiating archive retrieval jobs.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I use the AWS SDK for Java to download an archive from Amazon S3 Glacier?",
            "What are the required steps to retrieve a vault inventory using the low-level API?",
            "How do I configure endpoint settings for AWS services in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonSNSClient",
          "AmazonGlacierClient",
          "low-level API",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Amazon SQS",
          "vault inventory",
          "AWS SDK for Java",
          "archive retrieval",
          "Region endpoint",
          "AWS Region",
          "AmazonSQSClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_144",
      "text": "\n\nAmazon S3 Glacier Developer Guide\npost a job completion message, by creating an instance of the InitiateJobRequest\nclass. S3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class.\nJobParameters jobParameters = new JobParameters()\n.withArchiveId(\"*** provide an archive id ***\")\n.withDescription(\"archive retrieval\")\n.withRetrievalByteRange(\"*** provide a retrieval range***\") // optional\n.withType(\"archive-retrieval\");\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive. For example, you can update the preceding request by adding the following statement\nto request S3 Glacier to prepare only the 1 MB to 2 MB portion of the archive.\nint ONE_MEG = 1048576;\nString retrievalByteRange = String.format(\"%s-%s\", ONE_MEG, 2*ONE_MEG -1);\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withRetrievalByteRange(retrievalByteRange)\n.withSNSTopic(snsTopicARN);\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading an Archive Using Java API Version 2012-06-01 145",
      "start_idx": 266669,
      "end_idx": 268342,
      "metadata": {
        "num_sentences": 9,
        "num_words": 195,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "archive retrieval",
            "retrieval byte range",
            "SNS topic",
            "vault name",
            "job ID",
            "Amazon Simple Notification Service"
          ],
          "entities": [
            "S3 Glacier",
            "InitiateJobRequest",
            "InitiateJobResult",
            "Amazon SNS",
            "Java API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Amazon S3 Glacier Java API to initiate and manage archive retrieval jobs, including configuring retrieval parameters and handling job completion notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in S3 Glacier using Java?",
            "What parameters can I specify for archive retrieval in S3 Glacier?",
            "How do I configure notifications for job completion in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Simple Notification Service",
          "InitiateJobResult",
          "retrieval byte range",
          "JobParameters",
          "Amazon SNS",
          "vault name",
          "Amazon S3 Glacier",
          "InitiateJobRequest",
          "archive retrieval",
          "job ID",
          "S3 Glacier",
          "SNS topic",
          "Java API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_145",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job.\nYou can also poll S3 Glacier by calling the describeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach.\n4. Download the job output (archive data) by executing the getJobOutput method.\nYou provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResult object.\nGetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withVaultName(\"*** provide a vault name ****\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody() // Provides the input stream.\nThe preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest.\nGetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withRange(\"bytes=0-1048575\") // Download only the first 1 MB of the\noutput.\n.withVaultName(\"*** provide a vault name ****\");\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data.\nTo verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response.\nFor an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash). You can use this value\nDownloading an Archive Using Java API Version 2012-06-01 146",
      "start_idx": 268342,
      "end_idx": 270379,
      "metadata": {
        "num_sentences": 16,
        "num_words": 302,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code",
              "Notification",
              "Data Retrieval"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "describeJob",
            "getJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "checksum",
            "SHA256TreeHash",
            "byte range",
            "archive retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve data from Amazon S3 Glacier using the Java API, including job status polling, downloading job outputs, and verifying checksums for data integrity.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archive data from Amazon S3 Glacier?",
            "What is the purpose of the GetJobOutputRequest class?",
            "How can I verify the integrity of downloaded data using checksums?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 Glacier",
          "Amazon SNS",
          "describeJob",
          "checksum",
          "byte range",
          "GetJobOutputRequest",
          "GetJobOutputResult",
          "archive retrieval",
          "SHA256TreeHash",
          "getJobOutput"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_146",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier.\nFor a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for Java\u2014Download Output in Chunks .\nExample 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single getJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for Java\u2014Download Output in Chunks .\nThe example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic.\nS3 Glacier sends a notification to this topic after it completes the job.\n\u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue.\n\u2022 Initiates a job to download the specified archive.\nIn the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job.\n\u2022 Periodically checks the Amazon SQS queue for a message that contains the job ID.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.\n\u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue that it created.\nDownloading an Archive Using Java API Version 2012-06-01 147",
      "start_idx": 270379,
      "end_idx": 272461,
      "metadata": {
        "num_sentences": 18,
        "num_words": 362,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Verification"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "tree-hash",
            "checksum",
            "archive",
            "Amazon SNS",
            "Amazon SQS",
            "job request",
            "AWS SDK for Java",
            "GetJobOutput",
            "JSON"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for Java",
            "Java API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve an archive from Amazon S3 Glacier using the AWS SDK for Java, including verification of data integrity through checksums and examples of downloading output in chunks or as a whole.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using Java?",
            "How do I verify the integrity of data retrieved from S3 Glacier?",
            "What is the process for downloading S3 Glacier output in chunks?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "job request",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "checksum",
          "archive",
          "Amazon SQS",
          "AWS SDK for Java",
          "GetJobOutput",
          "tree-hash",
          "Java API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_149",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ntry {input.close();} catch (Exception e) {}\ntry {output.close();} catch (Exception e) {}\n}\nSystem.out.println(\"Retrieved archive to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\u2014Download\nOutput in Chunks\nThe following Java code example retrieves an archive from S3 Glacier. The code example\ndownloads the job output in chunks by specifying byte range in a GetJobOutputRequest object.\nimport java.io.BufferedInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nDownloading an Archive Using Java API Version 2012-06-01 153",
      "start_idx": 280381,
      "end_idx": 282042,
      "metadata": {
        "num_sentences": 3,
        "num_words": 135,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "GetJobOutputRequest",
            "byte range",
            "archive retrieval",
            "low-level API",
            "SNS",
            "SQS",
            "TreeHashGenerator",
            "ProfileCredentialsProvider"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "SNS",
            "SQS",
            "TreeHashGenerator"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "TreeHashGenerator",
            "ProfileCredentialsProvider"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for retrieving an archive from Amazon S3 Glacier using the low-level API, with job output downloaded in chunks based on specified byte ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using Java?",
            "What is the process for downloading job output in chunks with byte ranges?",
            "Which AWS services are involved in archive retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "low-level API",
          "SQS",
          "TreeHashGenerator",
          "ProfileCredentialsProvider",
          "byte range",
          "Amazon S3 Glacier",
          "SNS",
          "AWS SDK for Java",
          "GetJobOutputRequest",
          "archive retrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_153",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nstartRange = startRange + (long)totalRead;\nendRange = ((endRange + downloadChunkSize) > archiveSizeInBytes) ?\narchiveSizeInBytes : (endRange + downloadChunkSize);\nis.close();\n} while (endRange <= archiveSizeInBytes && startRange < archiveSizeInBytes);\nfstream.close();\nSystem.out.println(\"Retrieved file to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading an Archive in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndownload an archive.\nTopics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for .NET\nDownloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Download method you\ncan use to download an archive.\nImportant\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nDownloading an Archive Using .NET API Version 2012-06-01 159",
      "start_idx": 289792,
      "end_idx": 291233,
      "metadata": {
        "num_sentences": 5,
        "num_words": 196,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AWS SDK",
            "Amazon SNS",
            "Amazon SQS",
            "archive retrieval",
            "Download method",
            "high-level API",
            "low-level API",
            "UnsubscribeRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using the AWS SDK for .NET, highlighting both high-level and low-level API methods and associated configurations such as SNS topics and SQS queues.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive using the AWS SDK for .NET?",
            "What is the role of SNS and SQS in Amazon S3 Glacier archive retrieval?",
            "What methods does the ArchiveTransferManager class provide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "high-level API",
          "low-level API",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "UnsubscribeRequest",
          "Amazon SQS",
          "Download method",
          "archive retrieval",
          "AWS SDK for .NET",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_154",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options\nExample: Downloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need\nto update the code as shown with an existing archive ID and the local file path where you want to\nsave the downloaded archive.\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string downloadFilePath = \"*** Provide the file name and path to where to\nstore the download ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nvar options = new DownloadOptions();\noptions.StreamTransferProgress += ArchiveDownloadHighLevel.progress;\n// Download an archive.\nConsole.WriteLine(\"Intiating the archive retrieval job and then polling SQS\nqueue for the archive to be available.\");\nConsole.WriteLine(\"Once the archive is available, downloading will begin.\");\nmanager.Download(vaultName, archiveId, downloadFilePath, options);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\nDownloading an Archive Using .NET API Version 2012-06-01 160",
      "start_idx": 291233,
      "end_idx": 292834,
      "metadata": {
        "num_sentences": 9,
        "num_words": 210,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "vault",
            "archive ID",
            "download file path",
            "DownloadOptions",
            "StreamTransferProgress",
            "RegionEndpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "RegionEndpoint.USWest2",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Development APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a C# code example for downloading an archive from Amazon S3 Glacier using the AWS SDK for .NET, along with instructions for configuring the archive ID and download path.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier using C#?",
            "What is the process for retrieving an archive in AWS SDK for .NET?",
            "What code modifications are needed to specify the archive ID and download path?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "examplevault",
          "StreamTransferProgress",
          "DownloadOptions",
          "download file path",
          "ArchiveTransferManager",
          "RegionEndpoint.USWest2",
          "Amazon S3 Glacier",
          "vault",
          "RegionEndpoint",
          "archive retrieval",
          "archive ID",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_155",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic int currentPercentage = -1;\nstatic void progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != currentPercentage)\n{\ncurrentPercentage = args.PercentDone;\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps for downloading an Amazon S3 Glacier (S3 Glacier) archive using the\nlow-level API of the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region.\n2. Initiate an archive-retrieval job by executing the InitiateJob method.\nYou provide job information, such as the archive ID of the archive you want to download and the\noptional Amazon SNS topic to which you want S3 Glacier to post a job completion message, by\ncreating an instance of the InitiateJobRequest class. S3 Glacier returns a job ID in response.\nThe response is available in an instance of the InitiateJobResponse class.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nDownloading an Archive Using .NET API Version 2012-06-01 161",
      "start_idx": 292834,
      "end_idx": 294477,
      "metadata": {
        "num_sentences": 11,
        "num_words": 226,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "archive retrieval",
            "AmazonGlacierClient",
            "InitiateJob",
            "InitiateJobRequest",
            "StreamTransferProgressArgs",
            "AWS Region",
            "job ID",
            "Amazon SNS topic"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "InitiateJobResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDKs and APIs",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to download an archive from Amazon S3 Glacier using the low-level API of the AWS SDK for .NET, including code examples and step-by-step instructions.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the process for initiating an archive-retrieval job in Amazon S3 Glacier?",
            "How can I monitor the progress of an archive download using StreamTransferProgressArgs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "StreamTransferProgressArgs",
          "AmazonGlacierClient",
          "InitiateJob",
          "InitiateJobResponse",
          "Amazon SNS topic",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "InitiateJobRequest",
          "archive retrieval",
          "job ID",
          "AWS SDK for .NET",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_156",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive as shown in the following request. The request specifies S3 Glacier to prepare only the 1\nMB to 2 MB portion of the archive.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\n// Specify byte range.\nint ONE_MEG = 1048576;\ninitJobRequest.JobParameters.RetrievalByteRange = string.Format(\"{0}-{1}\", ONE_MEG, 2\n* ONE_MEG -1);\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\nDownloading an Archive Using .NET API Version 2012-06-01 162",
      "start_idx": 294477,
      "end_idx": 295987,
      "metadata": {
        "num_sentences": 7,
        "num_words": 210,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "InitiateJobRequest",
            "Amazon SNS",
            "VaultName",
            "ArchiveId",
            "RetrievalByteRange",
            "InitiateJobResponse",
            "AmazonGlacierClient",
            "JobParameters",
            "byte range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "InitiateJobRequest",
            "InitiateJobResponse",
            "Amazon RegionEndpoint"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for retrieving an archive from Amazon S3 Glacier using the .NET API, including setting up job parameters, specifying byte ranges, and handling job responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using .NET?",
            "What is the process to specify a byte range for retrieval in S3 Glacier?",
            "How do I use Amazon SNS for job completion notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "Amazon RegionEndpoint",
          "AmazonGlacierClient",
          "InitiateJobResponse",
          "byte range",
          "Amazon SNS",
          "JobParameters",
          "Amazon S3 Glacier",
          "InitiateJobRequest",
          "RetrievalByteRange",
          "VaultName",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_157",
      "text": "\n\nAmazon S3 Glacier Developer Guide\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message.\nYou can also poll S3 Glacier by calling the DescribeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach .\n4. Download the job output (archive data) by executing the GetJobOutput method.\nYou provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResponse object.\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse = client.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nThe preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest.\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\ngetJobOutputRequest.SetRange(0, 1048575); // Download only the first 1 MB chunk of\nthe output.\nDownloading an Archive Using .NET API Version 2012-06-01 163",
      "start_idx": 295987,
      "end_idx": 297488,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "DescribeJob",
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "archive data",
            "byte range",
            "job ID",
            "vault name"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            ".NET API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud APIs",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to download job output using the .NET API, with examples of retrieving the entire output or portions of it using byte ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve job output from Amazon S3 Glacier using .NET?",
            "What is the recommended way to get notified about job completion in S3 Glacier?",
            "How can I download a portion of the job output using byte ranges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive data",
          "Amazon S3 Glacier",
          "byte range",
          "Amazon SNS",
          "vault name",
          "GetJobOutputResponse",
          ".NET API Version 2012-06-01",
          "GetJobOutputRequest",
          "job ID",
          "GetJobOutput",
          "DescribeJob",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_158",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data.\nTo verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response.\nFor an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash).You can use this value\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier.\nFor a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for .NET\u2014Download Output in Chunks.\nExample 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single GetJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for .NET\u2014Download Output in Chunks.\nThe example performs the following tasks:\n\u2022 Sets up an Amazon Simple Notification Service (Amazon SNS) topic\nS3 Glacier sends a notification to this topic after it completes the job.\n\u2022 Sets up an Amazon Simple Queue Service (Amazon SQS) queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages.\n\u2022 Initiates a job to download the specified archive.\nDownloading an Archive Using .NET API Version 2012-06-01 164",
      "start_idx": 297488,
      "end_idx": 299684,
      "metadata": {
        "num_sentences": 15,
        "num_words": 372,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Verification",
              "Example"
            ]
          },
          "keywords": [
            "GetJobOutput",
            "checksum",
            "SHA256TreeHash",
            "archive retrieval",
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "tree hash",
            "byte range",
            "AWS SDK for .NET"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Cloud APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to verify data integrity when downloading archives from Amazon S3 Glacier using checksums and provides examples using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify the integrity of data downloaded from Amazon S3 Glacier?",
            "What is the process for retrieving an archive using the AWS SDK for .NET?",
            "How do I use checksums to ensure data accuracy in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 Glacier",
          "checksum",
          "Amazon SNS",
          "byte range",
          "Amazon SQS",
          "archive retrieval",
          "GetJobOutput",
          "tree hash",
          "AWS SDK for .NET",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_159",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nIn the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job.\n\u2022 Periodically checks the Amazon SQS queue for a message.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON.\n\u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue it created.\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSNSSQS\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveID = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\nDownloading an Archive Using .NET API Version 2012-06-01 165",
      "start_idx": 299684,
      "end_idx": 301114,
      "metadata": {
        "num_sentences": 7,
        "num_words": 198,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "archive download",
            "job request",
            "topic ARN",
            "queue URL",
            "vault name",
            "archive ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "AmazonSimpleNotificationServiceClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Services",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "JSON.NET",
            "AmazonSimpleNotificationServiceClient",
            "AmazonSQSClient"
          ]
        },
        "semantic": {
          "summary": "This guide provides a procedural example for downloading an archive from Amazon S3 Glacier using .NET, leveraging Amazon SNS and SQS for messaging and JSON.NET for JSON parsing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using .NET?",
            "What is the role of Amazon SNS and SQS in this process?",
            "How do I parse JSON messages with JSON.NET in this context?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive download",
          "job request",
          "JSON.NET",
          "AmazonSimpleNotificationServiceClient",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault name",
          "Amazon SQS",
          "archive ID",
          "queue URL",
          "topic ARN"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_160",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"Service\\\" : \\\"sns.amazonaws.com\\\" },\" +\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QueueArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue.\");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Retrieving...\");\nRetrieveArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue.\nsnsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nDownloading an Archive Using .NET API Version 2012-06-01 166",
      "start_idx": 301114,
      "end_idx": 302383,
      "metadata": {
        "num_sentences": 4,
        "num_words": 156,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS",
            "AWS",
            "AmazonGlacierClient",
            "QueueArn",
            "TopicArn",
            "AWS SDK",
            "Exception Handling",
            "RegionEndpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS",
            "AmazonGlacierClient",
            "RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Message Queuing",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide on setting up an SNS topic and SQS queue for Amazon S3 Glacier, including code examples and error handling techniques using AWS SDK in .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up an SNS topic and SQS queue for Amazon S3 Glacier?",
            "What is the process for retrieving an archive using the AWS SDK in .NET?",
            "How can I handle exceptions when working with Amazon S3 Glacier in .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "TopicArn",
          "AmazonGlacierClient",
          "SQS",
          "Exception Handling",
          "Amazon S3 Glacier",
          "SNS",
          "Amazon SNS",
          "Amazon SQS",
          "RegionEndpoint",
          "AWS",
          "QueueArn",
          "RegionEndpoint.USWest2",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_163",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n}\nelse if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive.\");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nDownloading an Archive Using .NET API Version 2012-06-01 169",
      "start_idx": 305337,
      "end_idx": 306691,
      "metadata": {
        "num_sentences": 3,
        "num_words": 129,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job output",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "DownloadOutput",
            "StatusCode",
            "JsonConvert",
            "VaultName",
            "Stream",
            "DeleteMessageRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierUtils",
            "AmazonGlacierClient",
            "GetJobOutputRequest",
            "GetJobOutputResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "File Streaming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET API",
            "JsonConvert"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to handle job outputs from Amazon S3 Glacier using .NET API, including downloading archives and error handling for failed jobs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download job output from Amazon S3 Glacier using .NET?",
            "What is the process for handling failed Glacier jobs?",
            "How do I use GetJobOutputRequest in a .NET application?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteMessageRequest",
          "StatusCode",
          "JsonConvert",
          "AmazonGlacierClient",
          "Amazon S3 Glacier",
          "VaultName",
          "Stream",
          "GetJobOutputResponse",
          "GlacierUtils",
          "GetJobOutputRequest",
          "DownloadOutput",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_164",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\u2014Download\nOutput in Chunks\nThe following C# code example retrieves an archive from S3 Glacier. The code example downloads\nthe job output in chunks by specifying the byte range in a GetJobOutputRequest object.\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nusing System.Collections.Specialized;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSQLSNSOutputUsingRange\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\nDownloading an Archive Using .NET API Version 2012-06-01 170",
      "start_idx": 306691,
      "end_idx": 308065,
      "metadata": {
        "num_sentences": 3,
        "num_words": 166,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS SDK for .NET",
            "GetJobOutputRequest",
            "archive",
            "byte range",
            "SNS",
            "SQS",
            "vault",
            "archive ID",
            "Amazon Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SimpleNotificationService",
            "Amazon SQS",
            "AWS SDK for .NET",
            "Newtonsoft.Json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Development",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SimpleNotificationService",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "Newtonsoft.Json",
            "Amazon Glacier Transfer Utility"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a C# code example for retrieving an archive from Amazon S3 Glacier using the AWS SDK for .NET, leveraging SNS and SQS for notifications and downloading data in chunks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using C#?",
            "What is the process for downloading job output in chunks with AWS SDK for .NET?",
            "How do SNS and SQS integrate with Amazon S3 Glacier for archive retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SimpleNotificationService",
          "SQS",
          "byte range",
          "SNS",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "Amazon SQS",
          "GetJobOutputRequest",
          "Newtonsoft.Json",
          "archive ID",
          "Amazon Glacier",
          "S3 Glacier",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_165",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"AWS\\\" : \\\"arn:aws:iam::123456789012:root\\\" },\"\n+\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QuernArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue.\");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Download archive\");\nDownloadAnArchive(archiveId, client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue.\nsnsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nDownloading an Archive Using .NET API Version 2012-06-01 171",
      "start_idx": 308065,
      "end_idx": 309318,
      "metadata": {
        "num_sentences": 4,
        "num_words": 160,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "SQS queue",
            "AmazonGlacierClient",
            "IAM policy",
            "SendMessage",
            "ArnLike",
            "archive download",
            "AWS SDK",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS",
            "AmazonGlacierClient",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Services",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for setting up and managing SNS topics and SQS queues for Amazon S3 Glacier operations, including downloading archives using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up an SNS topic and SQS queue for Amazon S3 Glacier?",
            "What is the process for downloading an archive using the AWS SDK for .NET?",
            "How can I handle errors when working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive download",
          "AmazonGlacierClient",
          "SQS",
          "ArnLike",
          "Amazon S3 Glacier",
          "SendMessage",
          "SNS",
          "SQS queue",
          "IAM",
          "AmazonServiceException",
          "Amazon SNS",
          "Amazon SQS",
          "IAM policy",
          "AWS SDK",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_168",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nlong archiveSize = Convert.ToInt64(fields[\"ArchiveSizeInBytes\"]);\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, archiveSize, client); // This where we save job\noutput to the specified file location.\n}\nelse if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive.\");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, long archiveSize,\nAmazonGlacierClient client)\n{\nlong partSize = 4 * (long)Math.Pow(2, 20); // 4 MB.\nusing (Stream fileToSave = new FileStream(fileName, FileMode.Create,\nFileAccess.Write))\n{\nlong currentPosition = 0;\ndo\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nDownloading an Archive Using .NET API Version 2012-06-01 174",
      "start_idx": 312173,
      "end_idx": 313709,
      "metadata": {
        "num_sentences": 4,
        "num_words": 146,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job output",
            "archive size",
            "GetJobOutputRequest",
            "AmazonGlacierClient",
            "StatusCode",
            "Message",
            "JSON deserialization",
            "SQS",
            "FileStream"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "GetJobOutputRequest",
            "SQS",
            "JSON"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "File Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            ".NET",
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a .NET code example for downloading job output from Amazon S3 Glacier using the AWS SDK. It includes error handling and deserialization of messages from Amazon SQS.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download job output from Amazon S3 Glacier using .NET?",
            "What is the process for handling job status codes in Amazon S3 Glacier?",
            "How do I deserialize SQS messages in a .NET application?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "StatusCode",
          "AmazonGlacierClient",
          "SQS",
          "Amazon S3 Glacier",
          "JSON deserialization",
          "Amazon SQS",
          "GetJobOutputRequest",
          "FileStream",
          "archive size",
          "job output",
          "Message"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_169",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nlong endPosition = currentPosition + partSize - 1;\nif (endPosition > archiveSize)\nendPosition = archiveSize;\ngetJobOutputRequest.SetRange(currentPosition, endPosition);\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nCopyStream(webStream, fileToSave);\n}\ncurrentPosition += partSize;\n} while (currentPosition < archiveSize);\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading an Archive by Using the REST API\nTo download an archive by using the REST API\nDownloading an archive is a two-step process.\n1. Initiate a job of the archive-retrieval type. For more information, see Initiate Job (POST\njobs).\n2. After the job is completed, download the archive data. For more information, see Get Job\nOutput (GET output).\nDownloading an Archive by Using REST API Version 2012-06-01 175",
      "start_idx": 313709,
      "end_idx": 314788,
      "metadata": {
        "num_sentences": 8,
        "num_words": 145,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "REST API",
            "GetJobOutput",
            "Initiate Job",
            "stream",
            "buffer",
            "partSize",
            "archiveSize",
            "job output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "REST API",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "CopyStream"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using a two-step process involving job initiation and retrieval via the REST API, with accompanying code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier using the REST API?",
            "What is the process for archive retrieval in Amazon S3 Glacier?",
            "How can I use GetJobOutput to retrieve archive data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "stream",
          "archiveSize",
          "Amazon S3 Glacier",
          "REST API",
          "GetJobOutputResponse",
          "GetJobOutputRequest",
          "archive retrieval",
          "GetJobOutput",
          "buffer",
          "CopyStream",
          "Initiate Job",
          "job output",
          "partSize"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_170",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDownloading an Archive in Amazon S3 Glacier Using the AWS CLI\nYou can download archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Download an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 176",
      "start_idx": 314788,
      "end_idx": 315941,
      "metadata": {
        "num_sentences": 11,
        "num_words": 188,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example",
              "Command Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "download archives",
            "list-vaults",
            "configure AWS CLI",
            "API Version 2012-06-01",
            "default profile",
            "command prompt",
            "credentials",
            "vaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "list-vaults command",
            "AWS account ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to download archives from Amazon S3 Glacier using the AWS CLI, including setup instructions and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI to work with Amazon S3 Glacier?",
            "What commands are used to download archives from S3 Glacier?",
            "How can I verify my AWS CLI configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "download archives",
          "list-vaults",
          "command prompt",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS CLI",
          "list-vaults command",
          "AWS account ID",
          "vaults",
          "credentials",
          "default profile",
          "configure AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_171",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Download an Archive Using the AWS CLI\nNote\nIn order to download your archives you must know your archive ids. Steps 1-4 will retrieve\nyour archive ids. If you already know the archive ids you wish to download skip to step 5.\n1. Use the initiate-job command to start an inventory-retrieval job. The inventory report will\nlist your archive ids.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous job command.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 177",
      "start_idx": 315941,
      "end_idx": 317085,
      "metadata": {
        "num_sentences": 9,
        "num_words": 152,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-Step",
              "Command Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "archive ids",
            "initiate-job",
            "describe-job",
            "inventory-retrieval",
            "vault-name",
            "account-id",
            "jobId",
            "VaultARN"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "archive ids",
            "VaultARN",
            "inventory-retrieval"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to download an archive from Amazon S3 Glacier using the AWS CLI, including steps to retrieve archive IDs and check job statuses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archive IDs in Amazon S3 Glacier?",
            "What commands are used to download an archive using AWS CLI?",
            "How can I check the status of an inventory-retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "initiate-job",
          "account-id",
          "inventory-retrieval",
          "jobId",
          "Amazon S3 Glacier",
          "vault-name",
          "AWS CLI",
          "archive ids",
          "describe-job",
          "VaultARN",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_172",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.\n4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. This file will contain your archive ids.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the initiate-job command to start the retrieval process each archive from a vault. You\nwill need to specify the job parameter as archive-retrieval as seen below.\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 178",
      "start_idx": 317085,
      "end_idx": 318625,
      "metadata": {
        "num_sentences": 15,
        "num_words": 220,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job output",
            "notification configuration",
            "Amazon SNS",
            "vault",
            "get-job-output",
            "initiate-job",
            "archive retrieval",
            "AWS CLI",
            "InventoryDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS CLI",
            "VaultARN",
            "ArchiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archives from an Amazon S3 Glacier vault using the AWS CLI, including steps to wait for job completion, download job outputs, and initiate retrieval jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What is the get-job-output command used for?",
            "How can I configure notifications for a Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "initiate-job",
          "ArchiveId",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "get-job-output",
          "vault",
          "AWS CLI",
          "InventoryDate",
          "notification configuration",
          "archive retrieval",
          "VaultARN",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_173",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333\n--job-parameters=\"{\\\"Type\\\":\\\"archive-retrieval\\\",\\\"ArchiveId\\\":\\\"*** archiveId\n***\\\"}\"\n6. Wait for the archive-retrieval job to complete. Use the describe-job command to\ncheck status of the previous command.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\n7. When the above job is complete use the get-job-output command to download your\narchive.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output_file_name\nDeleting an Archive in Amazon S3 Glacier\nYou cannot delete an archive using the Amazon S3 Glacier (S3 Glacier) management console.\nTo delete an archive you must use the AWS Command Line Interface (CLI) or write code to make\na delete request using either the REST API directly or the AWS SDK for Java and .NET wrapper\nlibraries. The following topics explain how to use the AWS SDK for Java and .NET wrapper libraries,\nthe REST API, and the AWS CLI.\nTopics\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting an Amazon S3 Glacier Archive Using the REST API\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS Command Line Interface\nYou can delete one archive at a time from a vault. To delete the archive you must provide its\narchive ID in your delete request. You can get the archive ID by downloading the vault inventory for\nthe vault that contains the archive. For more information about downloading the vault inventory,\nsee Downloading a Vault Inventory in Amazon S3 Glacier.\nDeleting an Archive API Version 2012-06-01 179",
      "start_idx": 318625,
      "end_idx": 320395,
      "metadata": {
        "num_sentences": 13,
        "num_words": 275,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "API Interaction",
              "SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive-retrieval",
            "delete request",
            "AWS CLI",
            "vault inventory",
            "REST API",
            "AWS SDK",
            "archive ID",
            "job output",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Command-Line Operations",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and delete archives in Amazon S3 Glacier using the AWS CLI, SDKs, and REST API. It provides step-by-step commands and guidance for managing archives programmatically.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier using the AWS CLI?",
            "What are the steps to delete an archive in Amazon S3 Glacier?",
            "How can I use the AWS SDK to manage archives in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "archive-retrieval",
          "Amazon S3 Glacier",
          "REST API",
          "AWS CLI",
          "vault",
          "delete request",
          "vault inventory",
          "AWS SDK for Java",
          "archive ID",
          "AWS SDK for .NET",
          "AWS SDK",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_174",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAfter you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail.\nArchive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\n\u2022 If the archive retrieval job is actively preparing the data for download when S3 Glacier receives\nthe delete archive request, then the archival retrieval operation might fail.\n\u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, then you will be able to download the output.\nFor more information about archive retrieval, see Downloading an Archive in S3 Glacier.\nThis operation is idempotent. Deleting an already-deleted archive does not result in an error.\nAfter you delete an archive, if you immediately download the vault inventory, it might include the\ndeleted archive in the list because S3 Glacier prepares vault inventory only about once a day.\nDeleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete an archive using the AWS SDK for Java low-level API.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteArchiveRequest class.\nYou need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDK for Java with Amazon S3 Glacier.\n3. Run the deleteArchive method by providing the request object as a parameter.\nThe following Java code snippet illustrates the preceding steps.\nAmazonGlacierClient client;\nDeleting an Archive Using Java API Version 2012-06-01 180",
      "start_idx": 320395,
      "end_idx": 322468,
      "metadata": {
        "num_sentences": 21,
        "num_words": 341,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "delete",
            "AWS SDK for Java",
            "archive retrieval",
            "vault inventory",
            "DeleteArchiveRequest",
            "AmazonGlacierClient",
            "idempotent",
            "Java API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteArchiveRequest",
            "AmazonGlacierClient",
            "Java API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the AWS SDK for Java, including key considerations and potential outcomes of archive deletion operations.",
          "intents": [
            "How-To",
            "Reference",
            "Warning"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using Java?",
            "What happens if I try to retrieve a deleted archive?",
            "Does deleting an already-deleted archive cause an error?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "Java API",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "archive",
          "AWS SDK for Java",
          "vault inventory",
          "archive retrieval",
          "idempotent",
          "delete",
          "Java API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_175",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n.withVaultName(\"*** provide a vault name ***\")\n.withArchiveId(\"*** provide an archive ID ***\");\nclient.deleteArchive(request);\nNote\nFor information about the underlying REST API, see Delete Archive (DELETE archive).\nExample: Deleting an Archive Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to delete an archive. For step-by-step\ninstructions on how to run this example, see Running Java Examples for Amazon S3 Glacier Using\nEclipse. You need to update the code as shown with a vault name and the archive ID of the archive\nyou want to delete.\nExample\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class ArchiveDelete {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\nDeleting an Archive Using Java API Version 2012-06-01 181",
      "start_idx": 322468,
      "end_idx": 323873,
      "metadata": {
        "num_sentences": 5,
        "num_words": 168,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "vault name",
            "archive ID",
            "AWS SDK for Java",
            "REST API",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "Java code",
            "delete archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "AmazonGlacierClient",
            "ProfileCredentialsProvider",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for deleting an archive in Amazon S3 Glacier using the AWS SDK for Java, along with instructions for setup and usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using Java?",
            "What code setup is required to use AWS SDK for Java with Amazon S3 Glacier?",
            "Where can I find the REST API documentation for deleting archives in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Java code",
          "AmazonGlacierClient",
          "ProfileCredentialsProvider",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "REST API",
          "vault name",
          "AWS SDK for Java",
          "archive ID",
          "delete archive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_176",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n// Delete the archive.\nclient.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully.\");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted.\");\nSystem.err.println(e);\n}\n}\n}\nDeleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete an archive.\nTopics\n\u2022 Deleting an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting an Archive Using the Low-Level API AWS SDK for .NET\nDeleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteArchive method\nyou can use to delete an archive.\nExample: Deleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete an\narchive. For step-by-step instructions on how to run this example, see Running Code Examples. You\nneed to update the code as shown with the archive ID of the archive you want to delete.\nExample\nusing System;\nusing Amazon.Glacier;\nDeleting an Archive Using .NET API Version 2012-06-01 182",
      "start_idx": 323873,
      "end_idx": 325155,
      "metadata": {
        "num_sentences": 9,
        "num_words": 198,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchive",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "high-level API",
            "low-level API",
            "archive ID",
            "C#",
            "delete operation",
            "2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "DeleteArchiveRequest",
            "C#"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming APIs",
            "Cloud Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the high-level and low-level APIs of the AWS SDK for .NET, including a C# code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs for deleting archives?",
            "Can you provide an example of deleting an archive using C#?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "high-level API",
          "low-level API",
          "delete operation",
          "ArchiveTransferManager",
          "2012-06-01",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "archive ID",
          "AWS SDK for .NET",
          "DeleteArchive",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_177",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDeleting an Archive Using the Low-Level API AWS SDK for .NET\nThe following are the steps to delete an using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteArchiveRequest class.\nYou need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDKs with Amazon S3 Glacier.\n3. Run the DeleteArchive method by providing the request object as a parameter.\nDeleting an Archive Using .NET API Version 2012-06-01 183",
      "start_idx": 325155,
      "end_idx": 326707,
      "metadata": {
        "num_sentences": 13,
        "num_words": 217,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveDeleteHighLevel",
            "DeleteArchiveRequest",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "vaultName",
            "archiveId",
            "RegionEndpoint",
            "DeleteArchive method"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "DeleteArchiveRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using both high-level and low-level APIs in AWS SDK for .NET, with a code example provided.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using AWS SDK for .NET?",
            "What are the steps to delete an archive using the low-level API in .NET?",
            "What is the purpose of the DeleteArchiveRequest class in AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveDeleteHighLevel",
          "AmazonGlacierClient",
          "DeleteArchive method",
          "ArchiveTransferManager",
          "DeleteArchiveRequest",
          "vaultName",
          "Amazon S3 Glacier",
          "RegionEndpoint",
          "archiveId",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_178",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample: Deleting an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example uses the low-level API of\nthe AWS SDK for .NET to delete an archive.\nNote\nFor information about the underlying REST API, see Delete Archive (DELETE archive).\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the archive ID of the archive you want to delete.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteLowLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Deleting the archive\");\nDeleteAnArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\nDeleting an Archive Using .NET API Version 2012-06-01 184",
      "start_idx": 326707,
      "end_idx": 327990,
      "metadata": {
        "num_sentences": 7,
        "num_words": 167,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Delete Archive",
            "C#",
            "AmazonGlacierClient",
            "archive ID",
            "vaultName",
            "Amazon.RegionEndpoint",
            "AmazonGlacierException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Delete Archive (DELETE archive)",
            "AmazonGlacierClient",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to use the low-level API of the AWS SDK for .NET to delete an archive in Amazon S3 Glacier, including necessary setup and error handling.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using C#?",
            "What is the low-level API approach for archive deletion in AWS SDK for .NET?",
            "How do I handle errors when deleting an archive in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "vaultName",
          "Amazon S3 Glacier",
          "Delete Archive",
          "AmazonGlacierException",
          "AmazonServiceException",
          "Amazon.RegionEndpoint",
          "archive ID",
          "Amazon.RegionEndpoint.USWest2",
          "Delete Archive (DELETE archive)",
          "AWS SDK for .NET",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_179",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void DeleteAnArchive(AmazonGlacierClient client)\n{\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n{\nVaultName = vaultName,\nArchiveId = archiveId\n};\nDeleteArchiveResponse response = client.DeleteArchive(request);\n}\n}\n}\nDeleting an Amazon S3 Glacier Archive Using the REST API\nYou can use the Delete Archive API to delete an archive.\n\u2022 For information about the Delete Archive API, see Delete Archive (DELETE archive).\n\u2022 For information about using the REST API, see API Reference for Amazon S3 Glacier.\nDeleting an Archive in Amazon S3 Glacier Using the AWS Command\nLine Interface\nYou can delete archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line Interface\n(AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nDeleting an Archive Using REST API Version 2012-06-01 185",
      "start_idx": 327990,
      "end_idx": 329171,
      "metadata": {
        "num_sentences": 7,
        "num_words": 175,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Delete Archive API",
            "AWS CLI",
            "REST API",
            "DeleteArchiveRequest",
            "DeleteArchiveResponse",
            "VaultName",
            "ArchiveId",
            "AWS Command Line Interface",
            "API Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Delete Archive API",
            "DeleteArchiveRequest",
            "DeleteArchiveResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete archives in Amazon S3 Glacier using the AWS CLI or the Delete Archive REST API, including setup instructions and code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using the AWS CLI?",
            "What is the Delete Archive API and how is it used?",
            "What are the prerequisites for using the AWS CLI with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Delete Archive API",
          "API Reference",
          "ArchiveId",
          "AWS Command Line Interface",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "REST API",
          "AWS CLI",
          "DeleteArchiveResponse",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_180",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Deleting an Archive Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job.\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 186",
      "start_idx": 329171,
      "end_idx": 330336,
      "metadata": {
        "num_sentences": 12,
        "num_words": 168,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "list-vaults",
            "initiate-job",
            "describe-job",
            "inventory retrieval",
            "vault",
            "credentials",
            "configuration",
            "archive deletion"
          ],
          "entities": [
            "AWS Command Line Interface",
            "Amazon S3 Glacier",
            "vault-name",
            "account-id",
            "job-parameters"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Command Line Interfaces",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for configuring and using the AWS CLI to manage Amazon S3 Glacier vaults, including listing vaults, retrieving inventory, and deleting archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the AWS CLI for Amazon S3 Glacier?",
            "What commands are used to delete an archive in S3 Glacier?",
            "How can I list all vaults in my AWS account using the CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "initiate-job",
          "AWS Command Line Interface",
          "account-id",
          "list-vaults",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "vault-name",
          "AWS CLI",
          "vault",
          "describe-job",
          "configuration",
          "job-parameters",
          "S3 Glacier",
          "credentials",
          "archive deletion"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_181",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.\n4. When it's complete, use the get-job-output command to download the retrieval job to the file\noutput.json.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 187",
      "start_idx": 330336,
      "end_idx": 331641,
      "metadata": {
        "num_sentences": 11,
        "num_words": 191,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Job Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Job Output",
            "Inventory Retrieval",
            "SNS Topic",
            "Command",
            "AWS CLI",
            "Notification Configuration",
            "Retrieval Job",
            "Archive Deletion"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SNS Topic",
            "VaultARN",
            "InventoryRetrievalParameters"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Job Management",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the steps to retrieve inventory data from an Amazon S3 Glacier vault using AWS CLI, including job creation, monitoring, and output retrieval processes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve inventory data from an Amazon S3 Glacier vault?",
            "What is the process for monitoring job completion in S3 Glacier?",
            "How can I configure notifications for a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalParameters",
          "Inventory Retrieval",
          "SNS Topic",
          "Amazon S3 Glacier",
          "Vault",
          "Archive Deletion",
          "AWS CLI",
          "Retrieval Job",
          "Amazon SNS",
          "VaultARN",
          "Command",
          "Job Output",
          "Notification Configuration"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_182",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the delete-archive command to delete each archive from a vault until none remain.\naws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id *** archiveid ***\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 188",
      "start_idx": 331641,
      "end_idx": 332325,
      "metadata": {
        "num_sentences": 3,
        "num_words": 77,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "InventoryDate",
            "ArchiveList",
            "delete-archive",
            "vault",
            "AWS CLI",
            "API Version 2012-06-01",
            "SHA256TreeHash",
            "ArchiveId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "AWS CLI",
            "awsexamplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete archives from an Amazon S3 Glacier vault using the AWS CLI, including the required commands and parameters.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault?",
            "What is the syntax for the AWS CLI delete-archive command?",
            "What metadata is associated with archives in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "ArchiveList",
          "API Version 2012-06-01",
          "delete-archive",
          "Amazon S3 Glacier",
          "vault",
          "AWS CLI",
          "awsexamplevault",
          "InventoryDate",
          "VaultARN",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_183",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS SDKs with Amazon S3 Glacier\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. The SDK libraries wrap\nthe underlying S3 Glacier API, simplifying your programming tasks. For example, for each request\nsent to S3 Glacier, you must include a signature to authenticate your requests. When you use the\nSDK libraries, you need to provide only your AWS security credentials in your code and the libraries\ncompute the necessary signature and include it in the request sent to S3 Glacier. The AWS SDKs\nprovide libraries that map to the underlying REST API and provide objects that you can use to\neasily construct requests and process responses.\nTopics\n\u2022 AWS SDK Libraries for Java and .NET\n\u2022 Using S3 Glacier with an AWS SDK\n\u2022 Using the AWS SDK for Java with Amazon S3 Glacier\n\u2022 Using the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS Command Line Interface (AWS CLI) is a unified tool to manage your AWS services,\nincluding S3 Glacier. For information about downloading the AWS CLI, see AWS Command Line\nInterface. For a list of the S3 Glacier CLI commands, see the AWS CLI Command Reference.\nAWS SDK Libraries for Java and .NET\nThe AWS SDKs for Java and .NET offer high-level and low-level wrapper libraries.\nYou can find examples of working with Amazon S3 Glacier by using the AWS SDK for Java and the\nAWS SDK for .NET throughout this developer guide.\nWhat Is the Low-Level API?\nThe low-level wrapper libraries map closely the underlying REST API (API Reference for Amazon\nS3 Glacier) supported by S3 Glacier. For each S3 Glacier REST operations, the low-level API\nprovides a corresponding method, a request object for you to provide request information and\na response object for you to process S3 Glacier response. The low-level wrapper libraries are the\nmost complete implementation of the underlying S3 Glacier operations.\nFor information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier.\nAWS SDK Libraries for Java and .NET API Version 2012-06-01 189",
      "start_idx": 332325,
      "end_idx": 334432,
      "metadata": {
        "num_sentences": 16,
        "num_words": 361,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Technical Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "REST API",
            "AWS CLI",
            "Java",
            ".NET",
            "Low-Level API",
            "SDK Libraries",
            "Authentication",
            "Command Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "Low-Level API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Development",
          "secondary_categories": [
            "Cloud Storage",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This section introduces the use of AWS SDKs and CLI for interacting with Amazon S3 Glacier, explaining the benefits of SDK libraries and their mapping to the REST API for ease of development.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of using AWS SDKs with Amazon S3 Glacier?",
            "How do the low-level wrapper libraries map to the S3 Glacier REST API?",
            "What tools are available for managing Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS Development]",
        "tf_idf_keywords": [
          ".NET",
          "Low-Level API",
          "Authentication",
          "Command Reference",
          "Amazon S3 Glacier",
          "Java",
          "REST API",
          "AWS CLI",
          "AWS SDK for Java",
          "AWS SDK for .NET",
          "AWS SDK",
          "SDK Libraries"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_184",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nWhat Is the High-Level API?\nTo further simplify application development, these libraries offer a higher-level abstraction for\nsome of the operations. For example:\n\u2022 Uploading an archive\u2014To upload an archive using the low-level API in addition to the file\nname and the vault name where you want to save the archive, You need to provide a checksum\n(SHA-256 tree hash) of the payload. However, the high-level API computes the checksum for you.\n\u2022 Downloading an archive or vault inventory\u2014To download an archive using the low-level API\nyou first initiate a job, wait for the job to complete, and then get the job output. You need to\nwrite additional code to set up an Amazon Simple Notification Service (Amazon SNS) topic for S3\nGlacier to notify you when the job is complete. You also need some polling mechanism to check\nif a job completion message was posted to the topic. The high-level API provides a method to\ndownload an archive that takes care of all these steps. You only specify an archive ID and a folder\npath where you want to save the downloaded data.\nFor information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier.\nWhen to Use the High-Level and Low-Level API\nIn general, if the high-level API provides methods you need to perform an operation, you should\nuse the high-level API because of the simplicity it provides. However, if the high-level API does\nnot offer the functionality, you can use the low-level API. Additionally, the low-level API allows\ngranular control of the operation such as retry logic in the event of a failure. For example, when\nuploading an archive the high-level API uses the file size to determine whether to upload the\narchive in a single operation or use the multipart upload API. The API also has built-in retry logic in\ncase an upload fails. However, your application might need granular control over these decisions, in\nwhich case you can use the low-level API.\nUsing S3 Glacier with an AWS SDK\nAWS software development kits (SDKs) are available for many popular programming languages.\nEach SDK provides an API, code examples, and documentation that make it easier for developers to\nbuild applications in their preferred language.\nWhat Is the High-Level API? API Version 2012-06-01 190",
      "start_idx": 334432,
      "end_idx": 336782,
      "metadata": {
        "num_sentences": 20,
        "num_words": 398,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Comparison",
              "Procedural"
            ]
          },
          "keywords": [
            "High-Level API",
            "Low-Level API",
            "Amazon S3 Glacier",
            "AWS SDK",
            "archive upload",
            "vault inventory",
            "checksum",
            "multipart upload",
            "retry logic",
            "Amazon SNS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon SNS",
            "SHA-256 tree hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the differences between the high-level and low-level APIs for Amazon S3 Glacier, detailing their use cases and benefits, and provides guidance on when to use each API. It also highlights the role of AWS SDKs in simplifying application development.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "What are the benefits of using the high-level API for Amazon S3 Glacier?",
            "When should I use the low-level API instead of the high-level API?",
            "How do AWS SDKs simplify working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "Low-Level API",
          "Amazon S3 Glacier",
          "checksum",
          "Amazon SNS",
          "SHA-256 tree hash",
          "vault inventory",
          "AWS SDK for Java",
          "High-Level API",
          "retry logic",
          "archive upload",
          "AWS SDK for .NET",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_186",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nUsing the AWS SDK for Java with Amazon S3 Glacier\nThe AWS SDK for Java provides both high-level and low-level APIs for Amazon S3 Glacier (S3\nGlacier) as described in Using the AWS SDKs with Amazon S3 Glacier. For information about\ndownloading the AWS SDK for Java, see Amazon SDK for Java.\nNote\nThe AWS SDK for Java provides thread-safe clients for accessing S3 Glacier. As a best\npractice, your applications should create one client and reuse the client between threads.\nTopics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\n\u2022 Running Java Examples for Amazon S3 Glacier Using Eclipse\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of S3 Glacier ( API Reference for Amazon S3 Glacier). When calling any of these\nmethods, you must create a corresponding request object and provide a response object in which\nthe method can return the S3 Glacier response to the operation.\nFor example, the AmazonGlacierClient class provides the createVault method to create a\nvault. This method maps to the underlying Create Vault REST operation (see Create Vault (PUT\nvault)). To use this method, you must create instances of the CreateVaultResult object that\nreceives the S3 Glacier response as shown in the following Java code snippet:\nAmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withAccountId(\"-\")\n.withVaultName(vaultName);\nUsing the AWS SDK for Java API Version 2012-06-01 192",
      "start_idx": 337821,
      "end_idx": 339478,
      "metadata": {
        "num_sentences": 9,
        "num_words": 248,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "thread-safe clients",
            "low-level API",
            "high-level API",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult",
            "REST operations",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java with Amazon S3 Glacier, including low-level API operations and thread-safe client setup, with code examples provided for creating vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault using the AWS SDK for Java with Amazon S3 Glacier?",
            "What is the best practice for using thread-safe clients in AWS SDK for Java?",
            "What are the differences between low-level and high-level APIs for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "high-level API",
          "AmazonGlacierClient",
          "low-level API",
          "REST operations",
          "CreateVaultResult",
          "Amazon S3 Glacier",
          "thread-safe clients",
          "AWS SDK for Java",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_187",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCreateVaultResult result = client.createVault(createVaultRequest);\nAll the low-level samples in the guide use this pattern.\nNote\nThe preceding code segment specifies AccountID when creating the request. However,\nwhen using the AWS SDK for Java, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request. You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor Java, if you don't provide the account ID, the library sets the account ID to '-'.\nUsing the High-Level API\nTo further simplify your application development, the AWS SDK for Java provides the\nArchiveTransferManager class that implements a higher-level abstraction for the some of\nthe methods in the low-level API. It provides useful methods, such as the upload and download\nmethods for archive operations.\nFor example, the following Java code snippet uses the upload high-level method to upload an\narchive.\nString vaultName = \"examplevault\";\nString archiveToUpload = \"c:/folder/exampleArchive.zip\";\nArchiveTransferManager atm = new ArchiveTransferManager(client, credentials);\nString archiveId = atm.upload(vaultName, \"Tax 2012 documents\", new\nFile(archiveToUpload)).getArchiveId();\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. If you don't specify any AWS Region, the AWS SDK for Java\nsets us-east-1 as the default AWS Region.\nAll the high-level examples in this guide use this pattern.\nUsing the High-Level API API Version 2012-06-01 193",
      "start_idx": 339478,
      "end_idx": 341387,
      "metadata": {
        "num_sentences": 15,
        "num_words": 288,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "AccountID",
            "ArchiveTransferManager",
            "createVaultRequest",
            "upload method",
            "archive operations",
            "AWS Region",
            "S3 Glacier",
            "credentials",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "ArchiveTransferManager",
            "AWS SDK for Java",
            "us-east-1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to interact with Amazon S3 Glacier, including low-level and high-level APIs for operations like vault creation and archive upload. It also highlights optional parameters and default behaviors such as region selection.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the default AWS Region when using the ArchiveTransferManager?",
            "Is the AccountID required when creating requests in AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "credentials",
          "createVaultRequest",
          "low-level API",
          "us-east-1",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "S3 Glacier",
          "AWS SDK for Java",
          "AWS account ID",
          "archive operations",
          "upload method",
          "AccountID",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_188",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nThe high-level ArchiveTransferManager class can be constructed with an\nAmazonGlacierClient instance or an AWSCredentials instance.\nRunning Java Examples for Amazon S3 Glacier Using Eclipse\nThe easiest way to get started with the Java code examples is to install the latest AWS Toolkit\nfor Eclipse. For information on installing or updating to the latest toolkit, go to http://\naws.amazon.com/eclipse. The following tasks guide you through the creation and testing of the\nJava code examples provided in this section.\nGeneral Process of Creating Java Code Examples\n1 Create a default credentials profile for your AWS credentials as described in the AWS\nSDK for Java topic Providing AWS Credentials in the Amazon SDK for Java.\n2 Create a new AWS Java project in Eclipse. The project is pre-configured with the AWS\nSDK for Java.\n3 Copy the code from the section you are reading to your project.\n4 Update the code by providing any required data. For example, if uploading a file,\nprovide the file path and the bucket name.\n5 Run the code. Verify that the object is created by using the AWS Management\nConsole. For more information about the AWS Management Console, go to http://a\nws.amazon.com/console/.\nSetting the Endpoint\nBy default, the AWS SDK for Java uses the endpoint https://glacier.us-\neast-1.amazonaws.com. You can set the endpoint explicitly as shown in the following Java code\nsnippets.\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API.\nRunning Java Examples Using Eclipse API Version 2012-06-01 194",
      "start_idx": 341387,
      "end_idx": 343003,
      "metadata": {
        "num_sentences": 17,
        "num_words": 260,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration",
              "Execution"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "AWSCredentials",
            "AWS Toolkit for Eclipse",
            "endpoint",
            "low-level API",
            "bucket name",
            "file path"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS Toolkit for Eclipse",
            "AmazonGlacierClient",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS Toolkit for Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for setting up and running Java examples for Amazon S3 Glacier using Eclipse, including configuring credentials, setting endpoints, and verifying operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up Java examples for Amazon S3 Glacier in Eclipse?",
            "What is the default endpoint for AWS SDK for Java with S3 Glacier?",
            "How do I configure AWS credentials for Java projects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US West (Oregon) Region",
          "AWS Toolkit for Eclipse",
          "AWS Management Console",
          "AmazonGlacierClient",
          "low-level API",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "endpoint",
          "bucket name",
          "file path",
          "AWSCredentials"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_189",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API.\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient, sqsClient,\nsnsClient);\nFor a list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier.\nUsing the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS SDK for .NET API is available in AWSSDK.dll. For information about downloading the\nAWS SDK for .NET, go to Sample Code Libraries. As described in Using the AWS SDKs with Amazon\nS3 Glacier, the AWS SDK for .NET provides both the high-level and low-level APIs.\nNote\nThe low-level API and high-level API provide thread-safe clients for accessing S3 Glacier.\nAs a best practice, your applications should create one client and reuse the client between\nthreads.\nTopics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\nUsing the AWS SDK for .NET API Version 2012-06-01 195",
      "start_idx": 343003,
      "end_idx": 344377,
      "metadata": {
        "num_sentences": 8,
        "num_words": 175,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "high-level API",
            "low-level API",
            "ArchiveTransferManager",
            "thread-safe clients",
            "AWS Regions",
            "endpoints",
            "AmazonSQSClient",
            "AmazonSNSClient"
          ],
          "entities": [
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "ArchiveTransferManager",
            "AWSSDK.dll"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWSSDK.dll"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of setting up and using the AWS SDK for .NET with Amazon S3 Glacier, including configuring endpoints for various AWS services and creating thread-safe clients.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS SDK for .NET with Amazon S3 Glacier?",
            "What is the best practice for creating thread-safe clients in AWS SDK?",
            "Which endpoints should I use for AWS services in the US West (Oregon) Region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonSNSClient",
          "AWS Regions",
          "high-level API",
          "AmazonGlacierClient",
          "low-level API",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "endpoints",
          "Amazon SNS",
          "thread-safe clients",
          "Amazon SQS",
          "AWSSDK.dll",
          "AWS SDK",
          "AmazonSQSClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_190",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Running Code Examples\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of Amazon S3 Glacier (S3 Glacier) ( API Reference for Amazon S3 Glacier). When\ncalling any of these methods, you must create a corresponding request object and provide a\nresponse object in which the method can return a S3 Glacier response to the operation.\nFor example, the AmazonGlacierClient class provides the CreateVault method to create\na vault. This method maps to the underlying Create Vault REST operation (see Create Vault\n(PUT vault)). To use this method, you must create instances of the CreateVaultRequest and\nCreateVaultResponse classes to provide request information and receive a S3 Glacier response\nas shown in the following C# code snippet:\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nCreateVaultRequest request = new CreateVaultRequest()\n{\nAccountId = \"-\",\nVaultName = \"*** Provide vault name ***\"\n};\nCreateVaultResponse response = client.CreateVault(request);\nAll the low-level samples in the guide use this pattern.\nNote\nThe preceding code segment specifies AccountId when creating the request. However,\nwhen using the AWS SDK for .NET, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request. You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nUsing the Low-Level API API Version 2012-06-01 196",
      "start_idx": 344377,
      "end_idx": 346164,
      "metadata": {
        "num_sentences": 10,
        "num_words": 274,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVault",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "AWS SDK for .NET",
            "AccountId",
            "REST operations",
            "vault",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This section provides guidance on using the low-level AmazonGlacierClient class to interact with Amazon S3 Glacier, including an example for creating a vault using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the purpose of the AccountId parameter in the CreateVaultRequest?",
            "What are the REST operations supported by AmazonGlacierClient?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "CreateVaultResponse",
          "AmazonGlacierClient",
          "REST operations",
          "API Version 2012-06-01",
          "AccountId",
          "Amazon S3 Glacier",
          "vault",
          "CreateVault",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_191",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor .NET, if you don't provide the account ID, the library sets the account ID to '-'.\nUsing the High-Level API\nTo further simplify your application development, the AWS SDK for .NET provides the\nArchiveTransferManager class that implements a higher-level abstraction for some of the\nmethods in the low-level API. It provides useful methods, such as Upload and Download, for the\narchive operations.\nFor example, the following C# code snippet uses the Upload high-level method to upload an\narchive.\nstring vaultName = \"examplevault\";\nstring archiveToUpload = \"c:\\folder\\exampleArchive.zip\";\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USEast1);\nstring archiveId = manager.Upload(vaultName, \"archive description\",\narchiveToUpload).ArchiveId;\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. All the high-level examples in this guide use this pattern.\nNote\nThe high-level ArchiveTransferManager class still needs the low-level\nAmazonGlacierClient client, which you can pass either explicitly or the\nArchiveTransferManager creates the client.\nRunning Code Examples\nThe easiest way to get started with the .NET code examples is to install the AWS SDK for .NET. For\nmore information, go to Amazon SDK for .NET.\nThe following procedure outlines steps for you to test the code examples provided in this guide.\nUsing the High-Level API API Version 2012-06-01 197",
      "start_idx": 346164,
      "end_idx": 347737,
      "metadata": {
        "num_sentences": 13,
        "num_words": 227,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "Upload",
            "Download",
            "archive operations",
            "vaultName",
            "high-level API",
            "low-level API",
            "RegionEndpoint"
          ],
          "entities": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "Amazon S3 Glacier",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "The document explains the use of the AWS SDK for .NET's ArchiveTransferManager class to simplify archive operations in Amazon S3 Glacier, with an example of uploading an archive using the high-level API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the ArchiveTransferManager class in AWS SDK for .NET?",
            "What is the difference between the high-level and low-level APIs in Amazon S3 Glacier?",
            "How can I upload an archive to Amazon S3 Glacier using C#?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "high-level API",
          "AmazonGlacierClient",
          "low-level API",
          "API Version 2012-06-01",
          "ArchiveTransferManager",
          "vaultName",
          "Amazon S3 Glacier",
          "RegionEndpoint",
          "Download",
          "archive operations",
          "AWS SDK for .NET",
          "Upload"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_192",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nGeneral Process of Creating .NET Code Examples (Using Visual Studio)\n1 Create a credentials profile for your AWS credentials as described in the Amazon SDK\nfor .NET topic Configuring AWS Credentials.\n2 Create a new Visual Studio project using the AWS Empty Project template.\n3 Replace the code in the project file, Program.cs , with the code in the section you\nare reading.\n4 Run the code. Verify that the object is created using the AWS Management Console.\nFor more information about AWS Management Console, go to http://aws.amazon\n.com/console/.\nSetting the Endpoint\nBy default, the AWS SDK for .NET sets the endpoint to the US West (Oregon) Region (https://\nglacier.us-west-2.amazonaws.com). You can set the endpoint to other AWS Regions as\nshown in the following C# snippets.\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API.\nExample\nAmazonGlacierClient client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API.\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nFor a current list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier.\nSetting the Endpoint API Version 2012-06-01 198",
      "start_idx": 347737,
      "end_idx": 349083,
      "metadata": {
        "num_sentences": 12,
        "num_words": 205,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Code Snippets"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "Visual Studio",
            "credentials profile",
            "endpoint",
            "US West (Oregon)",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "low-level API",
            "high-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Visual Studio",
            "AmazonGlacierClient",
            "ArchiveTransferManager"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "Cloud Computing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "Visual Studio"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for creating .NET code examples to interact with Amazon S3 Glacier using Visual Studio, including setting endpoints and using both low-level and high-level APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create .NET code examples for Amazon S3 Glacier?",
            "How can I set the endpoint for Amazon S3 Glacier in .NET?",
            "What tools and APIs are needed to interact with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "high-level API",
          "credentials profile",
          "AmazonGlacierClient",
          "US West (Oregon)",
          "low-level API",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "endpoint",
          "AWS SDK for .NET",
          "Visual Studio"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_193",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCode examples for S3 Glacier using AWS SDKs\nThe following code examples show how to use S3 Glacier with an AWS software development kit\n(SDK).\nBasics are code examples that show you how to perform the essential operations within a service.\nActions are code excerpts from larger programs and must be run in context. While actions show you\nhow to call individual service functions, you can see actions in context in their related scenarios.\nScenarios are code examples that show you how to accomplish specific tasks by calling multiple\nfunctions within a service or combined with other AWS services.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nGet started\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nAPI Version 2012-06-01 199",
      "start_idx": 349083,
      "end_idx": 350318,
      "metadata": {
        "num_sentences": 11,
        "num_words": 200,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Getting Started"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "code examples",
            "actions",
            "scenarios",
            "developer guide",
            "API Version 2012-06-01",
            ".NET",
            "GitHub",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "GitHub",
            "AWS Code Examples Repository",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples for using Amazon S3 Glacier with AWS SDKs, including a getting-started example for .NET developers.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I get started with Amazon S3 Glacier using .NET?",
            "Where can I find complete examples for Amazon S3 Glacier?",
            "What is the API version used in these examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          ".NET",
          "scenarios",
          "API Version 2012-06-01",
          "AWS Code Examples Repository",
          "actions",
          "Amazon S3 Glacier",
          "GitHub",
          "developer guide",
          "AWS SDK for .NET",
          "AWS SDK",
          "code examples"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_196",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nstatic async Task Main()\n{\nvar glacierService = new AmazonGlacierClient();\nConsole.WriteLine(\"Hello Amazon Glacier!\");\nConsole.WriteLine(\"Let's list your Glacier vaults:\");\n// You can use await and any of the async methods to get a response.\n// Let's get the vaults using a paginator.\nvar glacierVaultPaginator = glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nConsole.WriteLine($\"{vault.CreationDate}:{vault.VaultName}, ARN:\n{vault.VaultARN}\");\nHello Amazon S3 Glacier API Version 2012-06-01 202",
      "start_idx": 352945,
      "end_idx": 354024,
      "metadata": {
        "num_sentences": 7,
        "num_words": 149,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "GettingStarted"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "UploadArchive",
            "UploadMultipartPart",
            "ListVaults",
            "Paginator",
            "Vault",
            "GlacierClient",
            "VaultARN",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ListVaultsRequest",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Programming Examples"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for getting started with Amazon S3 Glacier using the AWS SDK for .NET, including listing Glacier vaults with a paginator.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS SDK for .NET to interact with Amazon S3 Glacier?",
            "What is an example of listing Glacier vaults using a paginator?",
            "Where can I find complete code examples for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "AccountId",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "Vault",
          "Paginator",
          "ListVaults",
          "VaultARN",
          "AWS SDK for .NET",
          "AWS SDK",
          "AWS Code Examples Repository",
          "UploadArchive",
          "UploadMultipartPart",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_197",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions for S3 Glacier using AWS SDKs\nThe following code examples demonstrate how to perform individual S3 Glacier actions with AWS\nSDKs. Each example includes a link to GitHub, where you can find instructions for setting up and\nrunning the code.\nThese excerpts call the S3 Glacier API and are code excerpts from larger programs that must be run\nin context. You can see actions in context in Scenarios for S3 Glacier using AWS SDKs .\nThe following examples include only the most commonly used actions. For a complete list, see the\nAmazon S3 Glacier API Reference.\nExamples\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\nActions API Version 2012-06-01 203",
      "start_idx": 354024,
      "end_idx": 355472,
      "metadata": {
        "num_sentences": 10,
        "num_words": 266,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Code Examples"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS SDK",
            "API Reference",
            "ListVaults",
            "CreateVault",
            "DeleteVault",
            "DescribeVault",
            "GetJobOutput",
            "InitiateJob",
            "ListJobs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListVaults",
            "GitHub",
            "Actions API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "APIs",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of Amazon S3 Glacier API actions, including links to code examples and API references for performing operations such as creating, deleting, and describing vaults using AWS SDKs or CLI.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I use the Amazon S3 Glacier API to manage vaults?",
            "What are the most common actions supported by the S3 Glacier API?",
            "Where can I find code examples for S3 Glacier API operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "ListJobs",
          "InitiateJob",
          "DeleteVault",
          "DescribeVault",
          "Amazon S3 Glacier",
          "AWS SDK for .NET",
          "Actions API Version 2012-06-01",
          "ListVaults",
          "GetJobOutput",
          "GitHub",
          "CreateVault",
          "S3 Glacier",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_198",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Use ListVaults with an AWS SDK or CLI\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nUse AddTagsToVault with an AWS SDK or CLI\nThe following code examples show how to use AddTagsToVault.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Add tags to the items in an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to add tags to.</param>\n/// <param name=\"key\">The name of the object to tag.</param>\n/// <param name=\"value\">The tag value to add.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> AddTagsToVaultAsync(string vaultName, string key,\nstring value)\n{\nvar request = new AddTagsToVaultRequest\n{\nTags = new Dictionary<string, string>\n{\n{ key, value },\n},\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.AddTagsToVaultAsync(request);\nActions API Version 2012-06-01 204",
      "start_idx": 355472,
      "end_idx": 356626,
      "metadata": {
        "num_sentences": 5,
        "num_words": 183,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaults",
            "SetVaultNotifications",
            "UploadArchive",
            "AddTagsToVault",
            "AWS SDK",
            "CLI",
            "Vault",
            "Tags",
            "AddTagsToVaultRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "AddTagsToVault",
            "AddTagsToVaultRequest",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Glacier",
          "secondary_categories": [
            "AWS SDK",
            "Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for using the AddTagsToVault API in Amazon S3 Glacier with an AWS SDK or CLI, including a .NET code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Amazon S3 Glacier vault?",
            "What is the syntax for using AddTagsToVault in .NET?",
            "Where can I find more code examples for AWS S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Glacier]",
        "tf_idf_keywords": [
          "Amazon S3 Glacier",
          "Vault",
          "SetVaultNotifications",
          "ListVaults",
          "CLI",
          "AddTagsToVaultRequest",
          "Tags",
          "AddTagsToVault",
          "AWS SDK",
          "AWS Code Examples Repository",
          "UploadArchive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_199",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nreturn response.HttpStatusCode == HttpStatusCode.NoContent;\n}\n\u2022 For API details, see AddTagsToVault in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command adds two tags to a vault named my-vault:\naws glacier add-tags-to-vault --account-id - --vault-name my-vault --\ntags id=1234,date=july2015\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see AddTagsToVault in AWS CLI Command Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse CreateVault with an AWS SDK or CLI\nThe following code examples show how to use CreateVault.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 205",
      "start_idx": 356626,
      "end_idx": 357708,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command",
              "API Reference",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AddTagsToVault",
            "CreateVault",
            "account ID",
            "tags",
            "vault",
            "SDK",
            "API Reference",
            "code example"
          ],
          "entities": [
            "AWS SDK for .NET",
            "AWS CLI",
            "Amazon Glacier",
            "S3 Glacier",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on using the AWS CLI and SDKs to add tags to Amazon S3 Glacier vaults and create new vaults, including example commands and code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 Glacier vault using AWS CLI?",
            "What is the syntax for using CreateVault in an AWS SDK?",
            "Where can I find API details for AddTagsToVault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "account ID",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS SDK for .NET",
          "AWS CLI",
          "vault",
          "SDK",
          "code example",
          "S3 Glacier",
          "Amazon Glacier",
          "CreateVault",
          "AddTagsToVault",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_200",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Create an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to create.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> CreateVaultAsync(string vaultName)\n{\nvar request = new CreateVaultRequest\n{\n// Setting the AccountId to \"-\" means that\n// the account associated with the current\n// account will be used.\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.CreateVaultAsync(request);\nConsole.WriteLine($\"Created {vaultName} at: {response.Location}\");\nreturn response.HttpStatusCode == HttpStatusCode.Created;\n}\n\u2022 For API details, see CreateVault in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command creates a new vault named my-vault:\nActions API Version 2012-06-01 206",
      "start_idx": 357708,
      "end_idx": 358723,
      "metadata": {
        "num_sentences": 6,
        "num_words": 146,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "CLI Command"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "CreateVaultAsync",
            "AWS SDK for .NET",
            "CreateVaultRequest",
            "AccountId",
            "HttpStatusCode",
            "CLI",
            "AWS Code Examples",
            "API Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "CreateVault",
            "AWS CLI",
            "CreateVaultRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using the AWS SDK for .NET and AWS CLI, including code examples and API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the CLI command to create a new vault in Amazon S3 Glacier?",
            "What parameters are required for the CreateVaultAsync method?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "CreateVaultRequest",
          "AccountId",
          "Amazon S3 Glacier",
          "vault",
          "AWS CLI",
          "CLI",
          "CreateVault",
          "AWS SDK for .NET",
          "HttpStatusCode",
          "AWS Code Examples",
          "CreateVaultAsync"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_201",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier create-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see CreateVault in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class CreateVault {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName>\nWhere:\nvaultName - The name of the vault to create.\nActions API Version 2012-06-01 207",
      "start_idx": 358723,
      "end_idx": 359956,
      "metadata": {
        "num_sentences": 7,
        "num_words": 147,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVault",
            "AWS CLI",
            "Java SDK",
            "GlacierClient",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "GlacierException",
            "Account ID",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Java SDK for AWS",
            "CreateVault API",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Development",
            "Command-Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using the AWS CLI and Java SDK, including a code example and setup instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS CLI?",
            "What is the Java SDK example for creating a Glacier vault?",
            "What is the purpose of the account ID in Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateVaultRequest",
          "CreateVaultResponse",
          "Account ID",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS CLI",
          "CreateVault API",
          "Java SDK",
          "CreateVault",
          "AWS Code Examples Repository",
          "Java SDK for AWS",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_203",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate the client.\nconst { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region.\nconst REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nCreate the vault.\n// Load the SDK for JavaScript\nimport { CreateVaultCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\nconst params = { vaultName: vaultname };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new CreateVaultCommand(params));\nconsole.log(\"Success, vault created!\");\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error\");\n}\n};\nrun();\nActions API Version 2012-06-01 209",
      "start_idx": 360794,
      "end_idx": 361775,
      "metadata": {
        "num_sentences": 8,
        "num_words": 143,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "CreateVaultCommand",
            "AWS SDK",
            "vault",
            "JavaScript",
            "AWS Region",
            "params",
            "API Version 2012-06-01",
            "repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "CreateVaultCommand",
            "AWS SDK for JavaScript",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Usage",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to create a vault in Amazon S3 Glacier using the AWS SDK for JavaScript (v3). It includes code examples and instructions for setting up the client and executing the CreateVaultCommand.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using JavaScript?",
            "What is the setup process for the AWS SDK for JavaScript (v3)?",
            "What parameters are required for the CreateVaultCommand?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version 2012-06-01",
          "AWS SDK for JavaScript",
          "AWS Code Examples Repository",
          "Amazon S3 Glacier",
          "vault",
          "CreateVaultCommand",
          "JavaScript",
          "AWS SDK",
          "AWS Region",
          "params",
          "repository",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_204",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference.\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n// Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\n// Call Glacier to create the vault\nglacier.createVault({ vaultName: \"YOUR_VAULT_NAME\" }, function (err) {\nif (!err) {\nconsole.log(\"Created vault!\");\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference.\nPowerShell\nTools for PowerShell\nExample 1: Creates a new vault for the user's account. As no value was supplied to the -\nAccountId parameter the cmdlets uses a default of \"-\" indicating the current account.\nNew-GLCVault -VaultName myvault\nOutput:\nActions API Version 2012-06-01 210",
      "start_idx": 361775,
      "end_idx": 362896,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "CreateVault",
            "API Reference",
            "PowerShell",
            "Glacier",
            "VaultName",
            "AccountId",
            "cmdlets",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "CreateVault",
            "PowerShell",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions and examples for creating a vault in Amazon S3 Glacier using AWS SDK for JavaScript and PowerShell. It includes code snippets and references to additional resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using AWS SDK for JavaScript?",
            "What is the default behavior of the -AccountId parameter in PowerShell for Glacier?",
            "Where can I find more examples for AWS SDK for JavaScript?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "PowerShell",
          "AWS SDK for JavaScript",
          "Glacier",
          "AccountId",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "cmdlets",
          "VaultName",
          "CreateVault",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_205",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n/01234567812/vaults/myvault\n\u2022 For API details, see CreateVault in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\ndef create_vault(self, vault_name):\n\"\"\"\nCreates a vault.\n:param vault_name: The name to give the vault.\n:return: The newly created vault.\n\"\"\"\ntry:\nvault = self.glacier_resource.create_vault(vaultName=vault_name)\nlogger.info(\"Created vault %s.\", vault_name)\nexcept ClientError:\nlogger.exception(\"Couldn't create vault %s.\", vault_name)\nraise\nelse:\nreturn vault\nActions API Version 2012-06-01 211",
      "start_idx": 362896,
      "end_idx": 363812,
      "metadata": {
        "num_sentences": 11,
        "num_words": 116,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVault",
            "Boto3",
            "Python SDK",
            "AWS Code Examples Repository",
            "glacier_resource",
            "vault",
            "ClientError",
            "API operations",
            "Cmdlet Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CreateVault",
            "Boto3",
            "AWS Code Examples Repository",
            "GlacierWrapper"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Tools for PowerShell",
            "Python SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example for creating a vault in Amazon S3 Glacier using Python's SDK (Boto3), including code snippets and references to additional resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using Boto3?",
            "What is the purpose of the GlacierWrapper class in Python?",
            "Where can I find complete examples for AWS services in Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Python SDK",
          "ClientError",
          "GlacierWrapper",
          "API operations",
          "Amazon S3 Glacier",
          "vault",
          "Cmdlet Reference",
          "CreateVault",
          "Boto3",
          "glacier_resource",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_206",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see CreateVault in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DeleteArchive with an AWS SDK or CLI\nThe following code examples show how to use DeleteArchive.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nTo delete an archive from a vault\nThe following delete-archive example removes the specified archive from\nexample_vault.\naws glacier delete-archive \\\n--account-id 111122223333 \\\n--vault-name example_vault \\\n--archive-id Sc0u9ZP8yaWkmh-XGlIvAVprtLhaLCGnNwNl5I5x9HqPIkX5mjc0DrId3Ln-\nGi_k2HzmlIDZUz117KSdVMdMXLuFWi9PJUitxWO73edQ43eTlMWkH0pd9zVSAuV_XXZBVhKhyGhJ7w\nThis command produces no output.\n\u2022 For API details, see DeleteArchive in AWS CLI Command Reference.\nActions API Version 2012-06-01 212",
      "start_idx": 363812,
      "end_idx": 364933,
      "metadata": {
        "num_sentences": 9,
        "num_words": 158,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchive",
            "AWS CLI",
            "vault",
            "archive",
            "AWS SDK",
            "Boto3",
            "API Reference",
            "delete-archive",
            "account-id"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Boto3",
            "example_vault",
            "DeleteArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions and examples for using the DeleteArchive operation in Amazon S3 Glacier via AWS CLI and SDKs like Boto3.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault?",
            "What is the AWS CLI command for the DeleteArchive operation?",
            "Where can I find API details for DeleteArchive in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "account-id",
          "Amazon S3 Glacier",
          "delete-archive",
          "AWS CLI",
          "archive",
          "vault",
          "Boto3",
          "AWS SDK",
          "DeleteArchive",
          "example_vault"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_207",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class DeleteArchive {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName> <accountId> <archiveId>\nWhere:\nvaultName - The name of the vault that contains the archive to\ndelete.\naccountId - The account ID value.\narchiveId - The archive ID value.\n\"\"\";\nif (args.length != 3) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nActions API Version 2012-06-01 213",
      "start_idx": 364933,
      "end_idx": 366030,
      "metadata": {
        "num_sentences": 7,
        "num_words": 133,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Java SDK",
            "DeleteArchiveRequest",
            "GlacierClient",
            "GlacierException",
            "vaultName",
            "accountId",
            "archiveId",
            "AWS Code Examples Repository",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SDK for Java 2.x",
            "GlacierClient",
            "DeleteArchiveRequest",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java example for using the AWS SDK to delete an archive from Amazon S3 Glacier, including setup instructions and code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using Java?",
            "What are the required parameters for the DeleteArchiveRequest?",
            "Where can I find more AWS SDK code examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "accountId",
          "API Version 2012-06-01",
          "DeleteArchiveRequest",
          "vaultName",
          "Amazon S3 Glacier",
          "GlacierException",
          "SDK for Java 2.x",
          "archiveId",
          "Java SDK",
          "AWS Code Examples Repository",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_208",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nString vaultName = args[0];\nString accountId = args[1];\nString archiveId = args[2];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ndeleteGlacierArchive(glacier, vaultName, accountId, archiveId);\nglacier.close();\n}\npublic static void deleteGlacierArchive(GlacierClient glacier, String\nvaultName, String accountId,\nString archiveId) {\ntry {\nDeleteArchiveRequest delArcRequest = DeleteArchiveRequest.builder()\n.vaultName(vaultName)\n.accountId(accountId)\n.archiveId(archiveId)\n.build();\nglacier.deleteArchive(delArcRequest);\nSystem.out.println(\"The archive was deleted.\");\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see DeleteArchive in AWS SDK for Java 2.x API Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nActions API Version 2012-06-01 214",
      "start_idx": 366030,
      "end_idx": 367045,
      "metadata": {
        "num_sentences": 5,
        "num_words": 113,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "DeleteArchiveRequest",
            "vaultName",
            "archiveId",
            "accountId",
            "AWS SDK for Java",
            "Boto3",
            "AWS Code Examples Repository",
            "GlacierException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "GlacierClient",
            "AWS SDK for Java 2.x",
            "Boto3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example of how to delete an archive from Amazon S3 Glacier using AWS SDK for Java and mentions Python's Boto3 SDK as an alternative.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using Java?",
            "What is the correct way to handle errors when using GlacierClient?",
            "Where can I find more examples for using AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "accountId",
          "vaultName",
          "DeleteArchiveRequest",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS SDK for Java",
          "AWS SDK for Java 2.x",
          "archiveId",
          "Boto3",
          "AWS Code Examples Repository",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_209",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef delete_archive(archive):\n\"\"\"\nDeletes an archive from a vault.\n:param archive: The archive to delete.\n\"\"\"\ntry:\narchive.delete()\nlogger.info(\n\"Deleted archive %s from vault %s.\", archive.id,\narchive.vault_name\n)\nexcept ClientError:\nlogger.exception(\"Couldn't delete archive %s.\", archive.id)\nraise\n\u2022 For API details, see DeleteArchive in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DeleteVault with an AWS SDK or CLI\nThe following code examples show how to use DeleteVault.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\nActions API Version 2012-06-01 215",
      "start_idx": 367045,
      "end_idx": 368184,
      "metadata": {
        "num_sentences": 12,
        "num_words": 162,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "delete_archive",
            "delete_vault",
            "ClientError",
            "glacier_resource",
            "AWS SDK",
            "API Reference",
            "vault",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "DeleteArchive",
            "DeleteVault",
            "AWS SDK for Python"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide to deleting archives and vaults in Amazon S3 Glacier using the Boto3 library and AWS CLI, including error handling and API references.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault?",
            "What is the correct way to handle errors when using the delete_archive method?",
            "Where can I find API details for DeleteArchive in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "AWS SDK for Python",
          "ClientError",
          "DeleteVault",
          "Amazon S3 Glacier",
          "delete_archive",
          "vault",
          "archive",
          "delete_vault",
          "AWS SDK",
          "Boto3",
          "glacier_resource",
          "DeleteArchive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_210",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command deletes a vault named my-vault:\naws glacier delete-vault --vault-name my-vault --account-id -\nThis command does not produce any output. Amazon Glacier requires an account ID\nargument when performing operations, but you can use a hyphen to specify the in-use\naccount.\n\u2022 For API details, see DeleteVault in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\nActions API Version 2012-06-01 216",
      "start_idx": 368184,
      "end_idx": 369332,
      "metadata": {
        "num_sentences": 7,
        "num_words": 144,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command",
              "SDK Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "delete vault",
            "AWS CLI",
            "Java SDK",
            "DeleteVaultRequest",
            "GlacierClient",
            "GlacierException",
            "account ID",
            "API Version 2012-06-01",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Java SDK",
            "DeleteVaultRequest",
            "GlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using both the AWS CLI and the Java SDK, including code examples and references to additional resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using AWS CLI?",
            "What is the Java SDK code example for deleting a Glacier vault?",
            "Where can I find additional resources for using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "account ID",
          "Java SDK",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS CLI",
          "DeleteVaultRequest",
          "delete vault",
          "AWS Code Examples Repository",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_212",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef delete_vault(vault):\n\"\"\"\nDeletes a vault.\n:param vault: The vault to delete.\n\"\"\"\ntry:\nvault.delete()\nlogger.info(\"Deleted vault %s.\", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't delete vault %s.\", vault.name)\nraise\n\u2022 For API details, see DeleteVault in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 218",
      "start_idx": 370265,
      "end_idx": 371245,
      "metadata": {
        "num_sentences": 12,
        "num_words": 138,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Operation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "delete_vault",
            "AWS SDK",
            "Python",
            "API Reference",
            "ClientError",
            "glacier_resource",
            "vault",
            "logger"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK",
            "DeleteVault",
            "Python"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "Python Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example of how to delete a vault in Amazon S3 Glacier using the Boto3 SDK for Python, including error handling and logging.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using Boto3?",
            "What is the error handling process for deleting a vault in S3 Glacier?",
            "Where can I find more examples for using AWS SDK with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "API Reference",
          "ClientError",
          "Python",
          "DeleteVault",
          "Amazon S3 Glacier",
          "vault",
          "delete_vault",
          "logger",
          "Boto3",
          "AWS SDK",
          "glacier_resource"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_213",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nUse DeleteVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use DeleteVaultNotifications.\nCLI\nAWS CLI\nTo remove the SNS notifications for a vault\nThe following delete-vault-notifications example removes notifications sent by\nAmazon Simple Notification Service (Amazon SNS) for the specified vault.\naws glacier delete-vault-notifications \\\n--account-id 111122223333 \\\n--vault-name example_vault\nThis command produces no output.\n\u2022 For API details, see DeleteVaultNotifications in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 219",
      "start_idx": 371245,
      "end_idx": 372229,
      "metadata": {
        "num_sentences": 9,
        "num_words": 133,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Usage",
              "SDK Example"
            ]
          },
          "keywords": [
            "DeleteVaultNotifications",
            "AWS CLI",
            "Amazon S3 Glacier",
            "SNS notifications",
            "Boto3",
            "vault",
            "AWS SDK",
            "API operations",
            "GlacierWrapper",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SNS",
            "Boto3",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the DeleteVaultNotifications operation to remove SNS notifications for an Amazon S3 Glacier vault using AWS CLI and Python SDK (Boto3). Code examples and references are provided for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I remove SNS notifications for an Amazon S3 Glacier vault?",
            "What is the AWS CLI command for DeleteVaultNotifications?",
            "How do I use Boto3 to manage Amazon S3 Glacier notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "API operations",
          "Amazon S3 Glacier",
          "DeleteVaultNotifications",
          "SNS",
          "AWS CLI",
          "vault",
          "Amazon SNS",
          "SNS notifications",
          "GitHub",
          "GlacierWrapper",
          "Boto3",
          "AWS SDK",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_214",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef stop_notifications(notification):\n\"\"\"\nStops notifications to the configured Amazon SNS topic.\n:param notification: The notification configuration to remove.\n\"\"\"\ntry:\nnotification.delete()\nlogger.info(\"Notifications stopped.\")\nexcept ClientError:\nlogger.exception(\"Couldn't stop notifications.\")\nraise\n\u2022 For API details, see DeleteVaultNotifications in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DescribeJob with an AWS SDK or CLI\nThe following code examples show how to use DescribeJob.\nCLI\nAWS CLI\nThe following command retrieves information about an inventory retrieval job on a vault\nnamed my-vault:\naws glacier describe-job --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\nOutput:\n{\nActions API Version 2012-06-01 220",
      "start_idx": 372229,
      "end_idx": 373304,
      "metadata": {
        "num_sentences": 9,
        "num_words": 136,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference",
              "Command Line Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "DescribeJob",
            "AWS CLI",
            "Boto3",
            "DeleteVaultNotifications",
            "inventory retrieval",
            "vault",
            "job-id",
            "ClientError"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SNS",
            "Boto3",
            "AWS CLI",
            "DeleteVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on stopping Amazon SNS notifications, using DescribeJob with AWS SDKs or CLI, and includes API references and code examples for Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I stop notifications to an Amazon SNS topic?",
            "How do I use DescribeJob with AWS CLI or SDK?",
            "What is the API reference for DeleteVaultNotifications in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ClientError",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "DeleteVaultNotifications",
          "AWS SNS",
          "AWS CLI",
          "vault",
          "Amazon SNS",
          "job-id",
          "DescribeJob",
          "Boto3",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_215",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-vault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"InProgress\"\n}\nThe job ID can be found in the output of aws glacier initiate-job and aws glacier\nlist-jobs. Amazon Glacier requires an account ID argument when performing operations,\nbut you can use a hyphen to specify the in-use account.\n\u2022 For API details, see DescribeJob in AWS CLI Command Reference.\nPowerShell\nTools for PowerShell\nExample 1: Returns details of the specified job. When the job completes successfully the\nRead-GCJobOutput cmdlet can be used to retrieve the contents of the job (an archive or\ninventory list) to the local file system.\nGet-GLCJob -VaultName myvault -JobId \"op1x...JSbthM\"\nOutput:\nAction : ArchiveRetrieval\nArchiveId : o9O9j...X-TpIhQJw\nArchiveSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nArchiveSizeInBytes : 38034480\nCompleted : False\nCompletionDate : 1/1/0001 12:00:00 AM\nCreationDate : 12/13/2018 11:00:14 AM\nInventoryRetrievalParameters :\nInventorySizeInBytes : 0\nJobDescription :\nJobId : op1x...JSbthM\nJobOutputPath :\nActions API Version 2012-06-01 221",
      "start_idx": 373304,
      "end_idx": 374675,
      "metadata": {
        "num_sentences": 6,
        "num_words": 161,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Command Output Example"
            ]
          },
          "keywords": [
            "InventoryRetrievalParameters",
            "VaultARN",
            "JobId",
            "Action",
            "CreationDate",
            "StatusCode",
            "ArchiveRetrieval",
            "AWS CLI",
            "PowerShell",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "JobId",
            "AWS CLI",
            "PowerShell"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on retrieving job information from Amazon S3 Glacier, including example commands for AWS CLI and PowerShell.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I retrieve job details from Amazon S3 Glacier?",
            "What is the format of inventory retrieval parameters in Amazon S3 Glacier?",
            "How do I use PowerShell to get job output for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "StatusCode",
          "JobId",
          "PowerShell",
          "Action",
          "Amazon S3 Glacier",
          "AWS CLI",
          "VaultARN",
          "CreationDate",
          "InventoryRetrievalParameters",
          "ArchiveRetrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_216",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nOutputLocation :\nRetrievalByteRange : 0-38034479\nSelectParameters :\nSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nSNSTopic :\nStatusCode : InProgress\nStatusMessage :\nTier : Standard\nVaultARN : arn:aws:glacier:us-west-2:012345678912:vaults/test\n\u2022 For API details, see DescribeJob in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef get_job_status(job):\n\"\"\"\nGets the status of a job.\n:param job: The job to query.\n:return: The current status of the job.\n\"\"\"\ntry:\njob.load()\nActions API Version 2012-06-01 222",
      "start_idx": 374675,
      "end_idx": 375606,
      "metadata": {
        "num_sentences": 9,
        "num_words": 124,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Code Example",
              "Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "RetrievalByteRange",
            "SHA256TreeHash",
            "VaultARN",
            "Boto3",
            "AWS Code Examples Repository",
            "DescribeJob",
            "GlacierWrapper",
            "Tier",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Tools for PowerShell",
            "VaultARN",
            "SNSTopic"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Python Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SNS"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Tools for PowerShell",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference details for Amazon S3 Glacier, including API usage, job status retrieval, and a Python code example using Boto3.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I retrieve the status of an Amazon S3 Glacier job?",
            "What is the purpose of the VaultARN parameter in Amazon S3 Glacier?",
            "Where can I find example code for Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SNSTopic",
          "API Version 2012-06-01",
          "AWS Tools for PowerShell",
          "Tier",
          "Amazon S3 Glacier",
          "AWS SNS",
          "VaultARN",
          "RetrievalByteRange",
          "DescribeJob",
          "GlacierWrapper",
          "Boto3",
          "AWS Code Examples Repository",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_217",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nlogger.info(\n\"Job %s is performing action %s and has status %s.\",\njob.id,\njob.action,\njob.status_code,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get status for job %s.\", job.id)\nraise\nelse:\nreturn job.status_code\n\u2022 For API details, see DescribeJob in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DescribeVault with an AWS SDK or CLI\nThe following code examples show how to use DescribeVault.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Describe an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to describe.</param>\n/// <returns>The Amazon Resource Name (ARN) of the vault.</returns>\npublic async Task<string> DescribeVaultAsync(string vaultName)\n{\nActions API Version 2012-06-01 223",
      "start_idx": 375606,
      "end_idx": 376701,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Code Example",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeJob",
            "AWS SDK",
            "Boto3",
            "DescribeVault",
            "ClientError",
            "vaultName",
            "job status",
            "AWS Code Examples Repository",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "AWS SDK for .NET",
            "Boto3",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "Boto3",
            ".NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference details and code examples for using Amazon S3 Glacier, including how to describe jobs and vaults using AWS SDKs and CLI tools.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How do I retrieve the status of a job in Amazon S3 Glacier?",
            "What is the API reference for DescribeJob in Boto3?",
            "How can I describe an Amazon S3 Glacier vault using .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "job status",
          "AWS SDK for Python",
          "ClientError",
          "API Version 2012-06-01",
          "vaultName",
          "DescribeVault",
          "Amazon S3 Glacier",
          "AWS SDK for .NET",
          "DescribeJob",
          "Boto3",
          "AWS SDK",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_218",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nvar request = new DescribeVaultRequest\n{\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.DescribeVaultAsync(request);\n// Display the information about the vault.\nConsole.WriteLine($\"{response.VaultName}\\tARN: {response.VaultARN}\");\nConsole.WriteLine($\"Created on: {response.CreationDate}\\tNumber\nof Archives: {response.NumberOfArchives}\\tSize (in bytes):\n{response.SizeInBytes}\");\nif (response.LastInventoryDate != DateTime.MinValue)\n{\nConsole.WriteLine($\"Last inventory: {response.LastInventoryDate}\");\n}\nreturn response.VaultARN;\n}\n\u2022 For API details, see DescribeVault in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command retrieves data about a vault named my-vault:\naws glacier describe-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see DescribeVault in AWS CLI Command Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 224",
      "start_idx": 376701,
      "end_idx": 377955,
      "metadata": {
        "num_sentences": 7,
        "num_words": 157,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Line Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeVault",
            "VaultARN",
            "NumberOfArchives",
            "SizeInBytes",
            "LastInventoryDate",
            "AWS SDK",
            "AWS CLI",
            "AccountId",
            "VaultName"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DescribeVaultRequest",
            "DescribeVaultAsync",
            "VaultARN",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the DescribeVault API in Amazon S3 Glacier using AWS SDK for .NET and AWS CLI, including code examples and command-line usage instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the DescribeVault API in AWS SDK for .NET?",
            "What is the command to retrieve vault details in AWS CLI?",
            "What information about a vault can be retrieved using DescribeVault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "LastInventoryDate",
          "SizeInBytes",
          "AccountId",
          "DescribeVaultAsync",
          "DescribeVault",
          "Amazon S3 Glacier",
          "NumberOfArchives",
          "AWS CLI",
          "VaultARN",
          "VaultName",
          "AWS SDK",
          "DescribeVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_219",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nUse GetJobOutput with an AWS SDK or CLI\nThe following code examples show how to use GetJobOutput.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command saves the output from a vault inventory job to a file in the current\ndirectory named output.json:\naws glacier get-job-output --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW output.json\nThe job-id is available in the output of aws glacier list-jobs. Note that the output\nfile name is a positional argument that is not prefixed by an option name. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account.\nOutput:\n{\n\"status\": 200,\n\"acceptRanges\": \"bytes\",\n\"contentType\": \"application/json\"\n}\noutput.json:\n{\"VaultARN\":\"arn:aws:glacier:us-west-2:0123456789012:vaults/\nmy-vault\",\"InventoryDate\":\"2015-04-07T00:26:18Z\",\"ArchiveList\":\n[{\"ArchiveId\":\"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\"ArchiveDescription\":\"multipart\nActions API Version 2012-06-01 225",
      "start_idx": 377955,
      "end_idx": 379333,
      "metadata": {
        "num_sentences": 6,
        "num_words": 161,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "CLI Command",
              "Output Example"
            ]
          },
          "keywords": [
            "GetJobOutput",
            "AWS SDK",
            "AWS CLI",
            "Amazon Glacier",
            "vault inventory job",
            "account ID",
            "job-id",
            "output.json",
            "ArchiveList",
            "InventoryDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "GetJobOutput",
            "vault inventory",
            "ArchiveList"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation describes how to use the AWS CLI to retrieve job output from Amazon S3 Glacier, including a specific example of saving inventory job output to a file.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS CLI to retrieve job output from Amazon Glacier?",
            "What is the command to save a vault inventory job output to a file?",
            "What parameters are needed for the get-job-output command?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "ArchiveList",
          "Amazon S3 Glacier",
          "AWS CLI",
          "job-id",
          "InventoryDate",
          "Amazon Glacier",
          "GetJobOutput",
          "vault inventory",
          "output.json",
          "AWS SDK",
          "vault inventory job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_220",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nupload\ntest\",\"CreationDate\":\"2015-04-06T22:24:34Z\",\"Size\":3145728,\"SHA256TreeHash\":\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\"}]}\n\u2022 For API details, see GetJobOutput in AWS CLI Command Reference.\nPowerShell\nTools for PowerShell\nExample 1: Downloads the archive content that was scheduled for retrieval in the\nspecified job and stores the contents into a file on disk. The download validates the\nchecksum for you, if one is available. If desired the entire response including the\nchecksum can be returned by specifying -Select '*'.\nRead-GLCJobOutput -VaultName myvault -JobId \"HSWjArc...Zq2XLiW\" -FilePath \"c:\n\\temp\\blue.bin\"\n\u2022 For API details, see GetJobOutput in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 226",
      "start_idx": 379333,
      "end_idx": 380510,
      "metadata": {
        "num_sentences": 10,
        "num_words": 150,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Example Usage",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GetJobOutput",
            "AWS CLI",
            "PowerShell",
            "Boto3",
            "Python SDK",
            "Checksum",
            "VaultName",
            "JobId",
            "FilePath"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "PowerShell",
            "Boto3",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "PowerShell",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and details on using the Amazon S3 Glacier service to retrieve archive content using AWS CLI, PowerShell, and Python SDK (Boto3). It includes code snippets and references to validate checksums and manage API operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve archive content from Amazon S3 Glacier using PowerShell?",
            "What is the process for validating checksums in archive downloads?",
            "Where can I find complete examples for using the Boto3 SDK with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Python SDK",
          "JobId",
          "Checksum",
          "PowerShell",
          "Amazon S3 Glacier",
          "FilePath",
          "AWS CLI",
          "GetJobOutput",
          "VaultName",
          "Boto3",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_221",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef get_job_output(job):\n\"\"\"\nGets the output of a job, such as a vault inventory or the contents of an\narchive.\n:param job: The job to get output from.\n:return: The job output, in bytes.\n\"\"\"\ntry:\nresponse = job.get_output()\nout_bytes = response[\"body\"].read()\nlogger.info(\"Read %s bytes from job %s.\", len(out_bytes), job.id)\nif \"archiveDescription\" in response:\nlogger.info(\n\"These bytes are described as '%s'\",\nresponse[\"archiveDescription\"]\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get output for job %s.\", job.id)\nraise\nelse:\nreturn out_bytes\n\u2022 For API details, see GetJobOutput in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse GetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use GetVaultNotifications.\nCLI\nAWS CLI\nThe following command gets a description of the notification configuration for a vault\nnamed my-vault:\nActions API Version 2012-06-01 227",
      "start_idx": 380510,
      "end_idx": 381666,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "job output",
            "vault inventory",
            "archive",
            "AWS SDK",
            "S3 Glacier",
            "Boto3",
            "GetJobOutput",
            "GetVaultNotifications",
            "AWS CLI",
            "ClientError"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "Boto3",
            "GetJobOutput",
            "GetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to retrieve job output from Amazon S3 Glacier, including vault inventory or archive contents, and provides code examples for using GetJobOutput and GetVaultNotifications APIs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve the output of a job in Amazon S3 Glacier?",
            "What is the purpose of the GetVaultNotifications API?",
            "How do I handle errors when retrieving job output using Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetVaultNotifications",
          "ClientError",
          "Amazon S3 Glacier",
          "AWS CLI",
          "archive",
          "vault inventory",
          "Boto3",
          "GetJobOutput",
          "S3 Glacier",
          "AWS SDK",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_222",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naws glacier get-vault-notifications --account-id - --vault-name my-vault\nOutput:\n{\n\"vaultNotificationConfig\": {\n\"Events\": [\n\"InventoryRetrievalCompleted\",\n\"ArchiveRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\"\n}\n}\nIf no notifications have been configured for the vault, an error is returned. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account.\n\u2022 For API details, see GetVaultNotifications in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 228",
      "start_idx": 381666,
      "end_idx": 382646,
      "metadata": {
        "num_sentences": 8,
        "num_words": 127,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Command Usage",
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "AWS CLI",
            "Boto3",
            "SNS topic",
            "InventoryRetrievalCompleted",
            "ArchiveRetrievalCompleted",
            "account ID",
            "GetVaultNotifications",
            "API operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Boto3",
            "SNS topic",
            "GetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault notification configurations in Amazon S3 Glacier using AWS CLI and Boto3, including example commands and error handling details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve vault notification configurations in Amazon S3 Glacier?",
            "What are the required parameters for the aws glacier get-vault-notifications command?",
            "How can I use Boto3 to interact with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "account ID",
          "GetVaultNotifications",
          "API operations",
          "vault notifications",
          "Amazon S3 Glacier",
          "SNS",
          "AWS CLI",
          "ArchiveRetrievalCompleted",
          "Boto3",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_223",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef get_notification(vault):\n\"\"\"\nGets the currently notification configuration for a vault.\n:param vault: The vault to query.\n:return: The notification configuration for the specified vault.\n\"\"\"\ntry:\nnotification = vault.Notification()\nlogger.info(\n\"Vault %s notifies %s on %s events.\",\nvault.name,\nnotification.sns_topic,\nnotification.events,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get notification data for %s.\",\nvault.name)\nraise\nelse:\nreturn notification\n\u2022 For API details, see GetVaultNotifications in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse InitiateJob with an AWS SDK or CLI\nThe following code examples show how to use InitiateJob.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 229",
      "start_idx": 382646,
      "end_idx": 383795,
      "metadata": {
        "num_sentences": 11,
        "num_words": 167,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "notification",
            "InitiateJob",
            "AWS SDK",
            "Boto3",
            "ClientError",
            "API Reference",
            "SNS topic",
            "events"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "InitiateJob",
            "GetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault's notification configuration and use the InitiateJob API with examples in the AWS SDK for Python (Boto3).",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I get the notification configuration for an S3 Glacier vault?",
            "What is an example of using the InitiateJob API in Boto3?",
            "How does a vault notify on specific events in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "GetVaultNotifications",
          "AWS SDK for Python",
          "ClientError",
          "InitiateJob",
          "Amazon S3 Glacier",
          "vault",
          "AWS SDK",
          "Boto3",
          "S3 Glacier",
          "notification",
          "SNS topic",
          "events"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_224",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nRetrieve an archive from a vault. This example uses the ArchiveTransferManager class. For\nAPI details see ArchiveTransferManager.\n/// <summary>\n/// Download an archive from an Amazon S3 Glacier vault using the Archive\n/// Transfer Manager.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault containing the object.</\nparam>\n/// <param name=\"archiveId\">The Id of the archive to download.</param>\n/// <param name=\"localFilePath\">The local directory where the file will\n/// be stored after download.</param>\n/// <returns>Async Task.</returns>\npublic async Task<bool> DownloadArchiveWithArchiveManagerAsync(string\nvaultName, string archiveId, string localFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\nvar options = new DownloadOptions\n{\nStreamTransferProgress = Progress!,\n};\n// Download an archive.\nConsole.WriteLine(\"Initiating the archive retrieval job and then\npolling SQS queue for the archive to be available.\");\nConsole.WriteLine(\"When the archive is available, downloading will\nbegin.\");\nawait manager.DownloadAsync(vaultName, archiveId, localFilePath,\noptions);\nActions API Version 2012-06-01 230",
      "start_idx": 383795,
      "end_idx": 385122,
      "metadata": {
        "num_sentences": 10,
        "num_words": 172,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Async Programming"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "vault",
            "archiveId",
            "DownloadAsync",
            "DownloadOptions",
            "StreamTransferProgress",
            "AWS SDK",
            "SQS queue",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AWS Code Examples Repository",
            "SQS queue",
            "DownloadOptions"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Usage",
            "Asynchronous Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve an archive from an Amazon S3 Glacier vault using the ArchiveTransferManager class in the AWS SDK for .NET, providing a code example for asynchronous download operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from an Amazon S3 Glacier vault?",
            "What is the ArchiveTransferManager class used for?",
            "How can I monitor progress during an archive download in AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "StreamTransferProgress",
          "DownloadOptions",
          "API Version 2012-06-01",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "vault",
          "SQS queue",
          "archiveId",
          "AWS SDK",
          "AWS Code Examples Repository",
          "DownloadAsync"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_227",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nRetrieve a vault inventory.\nimport software.amazon.awssdk.core.ResponseBytes;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.JobParameters;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputRequest;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputResponse;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class ArchiveDownload {\npublic static void main(String[] args) {\nActions API Version 2012-06-01 233",
      "start_idx": 387604,
      "end_idx": 389105,
      "metadata": {
        "num_sentences": 6,
        "num_words": 126,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InitiateJob",
            "AWS CLI",
            "SDK for Java 2.x",
            "vault inventory",
            "GlacierClient",
            "JobParameters",
            "DescribeJobRequest",
            "GetJobOutputRequest",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SDK for Java 2.x",
            "GlacierClient",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SDK for Java 2.x",
            "AWS CLI",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for retrieving a vault inventory from Amazon S3 Glacier, along with setup instructions and links to further resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory from Amazon S3 Glacier?",
            "What is the Java SDK code example for interacting with Amazon S3 Glacier?",
            "Where can I find additional AWS code examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InitiateJob",
          "DescribeJobRequest",
          "Amazon S3 Glacier",
          "JobParameters",
          "SDK for Java 2.x",
          "AWS CLI",
          "vault inventory",
          "GetJobOutputRequest",
          "AWS Code Examples Repository",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_230",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponseBytes<GetJobOutputResponse> objectBytes =\nglacier.getJobOutputAsBytes(jobOutputRequest);\n// Write the data to a local file.\nbyte[] data = objectBytes.asByteArray();\nFile myFile = new File(path);\nOutputStream os = new FileOutputStream(myFile);\nos.write(data);\nSystem.out.println(\"Successfully obtained bytes from a Glacier\nvault\");\nos.close();\n} catch (GlacierException | InterruptedException | IOException e) {\nSystem.out.println(e.getMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see InitiateJob in AWS SDK for Java 2.x API Reference.\nPowerShell\nTools for PowerShell\nExample 1: Starts a job to retrieve an archive from the specified vault owned by the\nuser. The status of the job can be checked using the Get-GLCJob cmdlet. When the\njob completes successfully the Read-GCJobOutput cmdlet can be used to retrieve the\ncontents of the archive to the local file system.\nStart-GLCJob -VaultName myvault -JobType \"archive-retrieval\" -JobDescription\n\"archive retrieval\" -ArchiveId \"o9O9j...TX-TpIhQJw\"\nOutput:\nJobId JobOutputPath Location\n----- ------------- --------\nop1x...JSbthM /012345678912/vaults/test/jobs/\nop1xe...I4HqCHkSJSbthM\nActions API Version 2012-06-01 236",
      "start_idx": 391287,
      "end_idx": 392503,
      "metadata": {
        "num_sentences": 6,
        "num_words": 149,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command-Line Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GetJobOutputResponse",
            "archive retrieval",
            "AWS SDK for Java",
            "PowerShell",
            "vault",
            "InitiateJob",
            "JobId",
            "Read-GCJobOutput",
            "GlacierException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "PowerShell",
            "GetJobOutputResponse",
            "GlacierException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code and command-line examples for retrieving data from an Amazon S3 Glacier vault using AWS SDK for Java and PowerShell tools.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve data from an Amazon S3 Glacier vault programmatically?",
            "What are the steps to use PowerShell for archive retrieval in Amazon S3 Glacier?",
            "What exceptions should be handled when using AWS SDK for Java with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JobId",
          "Read-GCJobOutput",
          "PowerShell",
          "InitiateJob",
          "Amazon S3 Glacier",
          "GlacierException",
          "vault",
          "GetJobOutputResponse",
          "AWS SDK for Java",
          "archive retrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_231",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nRetrieve a vault inventory.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_inventory_retrieval(vault):\n\"\"\"\nInitiates an inventory retrieval job. The inventory describes the\ncontents\nof the vault. Standard retrievals typically complete within 3\u20145 hours.\nWhen the job completes, you can get the inventory by calling\nget_output().\n:param vault: The vault to inventory.\n:return: The inventory retrieval job.\n\"\"\"\ntry:\njob = vault.initiate_inventory_retrieval()\nlogger.info(\"Started %s job with ID %s.\", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on vault %s.\", vault.name)\nraise\nActions API Version 2012-06-01 237",
      "start_idx": 392503,
      "end_idx": 393619,
      "metadata": {
        "num_sentences": 15,
        "num_words": 149,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "Boto3",
            "initiate_inventory_retrieval",
            "AWS Code Examples Repository",
            "inventory retrieval job",
            "get_output",
            "ClientError",
            "job action",
            "logger"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Code Examples Repository",
            "ClientError",
            "GlacierWrapper"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Python Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Tools for PowerShell",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide on initiating an inventory retrieval job for an Amazon S3 Glacier vault using the Boto3 SDK in Python, along with a code example and related references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in Amazon S3 Glacier?",
            "What is the purpose of the initiate_inventory_retrieval method in Boto3?",
            "Where can I find additional code examples for Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval job",
          "ClientError",
          "initiate_inventory_retrieval",
          "job action",
          "GlacierWrapper",
          "Amazon S3 Glacier",
          "vault inventory",
          "logger",
          "get_output",
          "Boto3",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_232",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nelse:\nreturn job\nRetrieve an archive from a vault.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output().\n:param archive: The archive to retrieve.\n:return: The archive retrieval job.\n\"\"\"\ntry:\njob = archive.initiate_archive_retrieval()\nlogger.info(\"Started %s job with ID %s.\", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on archive %s.\", archive.id)\nraise\nelse:\nreturn job\n\u2022 For API details, see InitiateJob in AWS SDK for Python (Boto3) API Reference.\nActions API Version 2012-06-01 238",
      "start_idx": 393619,
      "end_idx": 394577,
      "metadata": {
        "num_sentences": 12,
        "num_words": 123,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIUsage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "Boto3",
            "initiate_archive_retrieval",
            "vault",
            "AWS SDK",
            "ClientError",
            "get_output",
            "job",
            "logger"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK for Python",
            "InitiateJob",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK for Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Amazon S3 Glacier API via Boto3 to initiate an archive retrieval job and handle potential errors.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in Amazon S3 Glacier?",
            "What is the typical completion time for a standard archive retrieval?",
            "How can I handle errors when starting a job on an archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for Python",
          "ClientError",
          "InitiateJob",
          "Amazon S3 Glacier",
          "job",
          "vault",
          "initiate_archive_retrieval",
          "archive retrieval",
          "logger",
          "get_output",
          "Boto3",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_233",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse ListJobs with an AWS SDK or CLI\nThe following code examples show how to use ListJobs.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code examples:\n\u2022 Archive a file, get notifications, and initiate a job\n\u2022 Get archive content and delete the archive\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// List Amazon S3 Glacier jobs.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to list jobs for.</param>\n/// <returns>A list of Amazon S3 Glacier jobs.</returns>\npublic async Task<List<GlacierJobDescription>> ListJobsAsync(string\nvaultName)\n{\nvar request = new ListJobsRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the current account.\nAccountId = \"-\",\nVaultName = vaultName,\n};\nActions API Version 2012-06-01 239",
      "start_idx": 394577,
      "end_idx": 395819,
      "metadata": {
        "num_sentences": 9,
        "num_words": 206,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Developer Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListJobs",
            "AWS SDK",
            "vault",
            "ListJobsRequest",
            "AccountId",
            "GlacierJobDescription",
            "AWS CLI",
            "code examples",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListJobsRequest",
            "AWS Code Examples Repository",
            "Actions API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This document provides a procedural guide on using the ListJobs operation in Amazon S3 Glacier with AWS SDKs and CLI, including code examples and setup details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the ListJobs operation in Amazon S3 Glacier?",
            "What is the purpose of the ListJobsRequest in AWS SDK for .NET?",
            "Where can I find complete examples for Amazon S3 Glacier API usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListJobs",
          "ListJobsRequest",
          "AWS Code Examples Repository",
          "AccountId",
          "GlacierJobDescription",
          "Amazon S3 Glacier",
          "vault",
          "AWS CLI",
          "Actions API Version 2012-06-01",
          "GitHub",
          "AWS SDK for .NET",
          "AWS SDK",
          "code examples"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_235",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"StatusCode\": \"InProgress\"\n},\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"\"InProgress\"\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see ListJobs in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 241",
      "start_idx": 397023,
      "end_idx": 398058,
      "metadata": {
        "num_sentences": 7,
        "num_words": 120,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InventoryRetrieval",
            "VaultARN",
            "JobId",
            "StatusCode",
            "Boto3",
            "API Version",
            "AWS CLI",
            "Account ID",
            "JSON Format"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "AWS CLI",
            "Boto3",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Boto3",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "The documentation provides details on Amazon S3 Glacier operations, including inventory retrieval parameters, API usage, and code examples with Boto3 for Python.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve an inventory from an Amazon S3 Glacier vault?",
            "What is the format for specifying VaultARN in API calls?",
            "How can I use Boto3 to interact with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "StatusCode",
          "InventoryRetrieval",
          "JobId",
          "Account ID",
          "Amazon S3 Glacier",
          "AWS CLI",
          "VaultARN",
          "GitHub",
          "JSON Format",
          "API Version",
          "Boto3"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_236",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault.\n:param vault: The vault to query.\n:param job_type: The type of job to list.\n:return: The list of jobs of the requested type.\n\"\"\"\njob_list = []\ntry:\nif job_type == \"all\":\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get.\", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s.\", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s.\", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\n\u2022 For API details, see ListJobs in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 242",
      "start_idx": 398058,
      "end_idx": 399251,
      "metadata": {
        "num_sentences": 11,
        "num_words": 175,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "list_jobs",
            "vault",
            "job_type",
            "AWS SDK",
            "Boto3",
            "ClientError",
            "jobs",
            "API Reference",
            "completed_jobs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "ListJobs",
            "Actions API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list jobs of various types for a specified Amazon S3 Glacier vault using the AWS SDK for Python (Boto3). It includes a code example and references relevant API details.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list jobs in an Amazon S3 Glacier vault?",
            "What types of jobs can be queried using the AWS SDK for Python?",
            "What is the API reference for the ListJobs function in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "jobs",
          "API Reference",
          "AWS SDK for Python",
          "ListJobs",
          "ClientError",
          "list_jobs",
          "completed_jobs",
          "Amazon S3 Glacier",
          "Actions API",
          "vault",
          "Boto3",
          "job_type",
          "S3 Glacier",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_237",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nUse ListTagsForVault with an AWS SDK or CLI\nThe following code examples show how to use ListTagsForVault.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// List tags for an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to list tags for.</param>\n/// <returns>A dictionary listing the tags attached to each object in the\n/// vault and its tags.</returns>\npublic async Task<Dictionary<string, string>> ListTagsForVaultAsync(string\nvaultName)\n{\nvar request = new ListTagsForVaultRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the default user.\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.ListTagsForVaultAsync(request);\nreturn response.Tags;\n}\n\u2022 For API details, see ListTagsForVault in AWS SDK for .NET API Reference.\nActions API Version 2012-06-01 243",
      "start_idx": 399251,
      "end_idx": 400297,
      "metadata": {
        "num_sentences": 7,
        "num_words": 162,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListTagsForVault",
            "AWS SDK",
            ".NET",
            "vaultName",
            "AccountId",
            "tags",
            "ListTagsForVaultRequest",
            "API Reference",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListTagsForVaultRequest",
            "AccountId",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to list tags for an Amazon S3 Glacier vault, including code and setup instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list tags for an Amazon S3 Glacier vault using .NET?",
            "What is the purpose of ListTagsForVault in the AWS SDK?",
            "How do I configure the AccountId parameter for ListTagsForVault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListTagsForVault",
          "tags",
          ".NET",
          "ListTagsForVaultRequest",
          "API Reference",
          "AccountId",
          "vaultName",
          "Amazon S3 Glacier",
          "AWS CLI",
          "GitHub",
          "AWS SDK for .NET",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_238",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command lists the tags applied to a vault named my-vault:\naws glacier list-tags-for-vault --account-id - --vault-name my-vault\nOutput:\n{\n\"Tags\": {\n\"date\": \"july2015\",\n\"id\": \"1234\"\n}\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see ListTagsForVault in AWS CLI Command Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse ListVaults with an AWS SDK or CLI\nThe following code examples show how to use ListVaults.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 244",
      "start_idx": 400297,
      "end_idx": 401282,
      "metadata": {
        "num_sentences": 7,
        "num_words": 161,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Example",
              "API Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "ListTagsForVault",
            "vault",
            "tags",
            "account ID",
            "ListVaults",
            "SDK",
            "API",
            "job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "ListTagsForVault",
            "ListVaults",
            "Actions API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and instructions for using the AWS CLI and SDK to interact with Amazon S3 Glacier, including listing vault tags and vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list tags for a vault in Amazon S3 Glacier?",
            "What is the syntax for the AWS CLI ListTagsForVault command?",
            "What are the available SDKs for working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListTagsForVault",
          "account ID",
          "API",
          "job",
          "Amazon S3 Glacier",
          "AWS CLI",
          "vault",
          "ListVaults",
          "SDK",
          "Actions API Version 2012-06-01",
          "S3 Glacier",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_239",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// List the Amazon S3 Glacier vaults associated with the current account.\n/// </summary>\n/// <returns>A list containing information about each vault.</returns>\npublic async Task<List<DescribeVaultOutput>> ListVaultsAsync()\n{\nvar glacierVaultPaginator = _glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nvar vaultList = new List<DescribeVaultOutput>();\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nvaultList.Add(vault);\n}\nreturn vaultList;\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command lists the vaults in the default account and region:\naws glacier list-vaults --account-id -\nOutput:\nActions API Version 2012-06-01 245",
      "start_idx": 401282,
      "end_idx": 402207,
      "metadata": {
        "num_sentences": 5,
        "num_words": 129,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vaults",
            "AWS SDK for .NET",
            "ListVaults",
            "DescribeVaultOutput",
            "Paginator",
            "AWS CLI",
            "API Version 2012-06-01",
            "AccountId",
            "VaultList"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListVaults",
            "AWS CLI",
            "DescribeVaultOutput"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for listing Amazon S3 Glacier vaults using the AWS SDK for .NET and AWS CLI, including code examples and API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list Amazon S3 Glacier vaults using .NET?",
            "What is the AWS CLI command for listing Glacier vaults?",
            "What API version is used for interacting with Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "VaultList",
          "API Version 2012-06-01",
          "AccountId",
          "Amazon S3 Glacier",
          "Paginator",
          "ListVaults",
          "AWS CLI",
          "DescribeVaultOutput",
          "vaults",
          "AWS SDK for .NET"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_240",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"VaultList\": [\n{\n\"SizeInBytes\": 3178496,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"LastInventoryDate\": \"2015-04-07T00:26:19.028Z\",\n\"VaultName\": \"my-vault\",\n\"NumberOfArchives\": 1,\n\"CreationDate\": \"2015-04-06T21:23:45.708Z\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see ListVaults in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsRequest;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsResponse;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DescribeVaultOutput;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.util.List;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\nActions API Version 2012-06-01 246",
      "start_idx": 402207,
      "end_idx": 403417,
      "metadata": {
        "num_sentences": 6,
        "num_words": 123,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Code Example",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultList",
            "AWS CLI",
            "Java SDK",
            "ListVaults",
            "DescribeVaultOutput",
            "GlacierClient",
            "GlacierException",
            "LastInventoryDate",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Java SDK",
            "ListVaultsRequest",
            "GlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of Amazon S3 Glacier's API operations and includes a Java SDK example for listing vaults. It also explains account ID usage and references additional resources on GitHub.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier using Java SDK?",
            "What is the API structure for the ListVaults operation?",
            "Where can I find additional examples for Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "VaultList",
          "LastInventoryDate",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "GlacierException",
          "AWS CLI",
          "ListVaults",
          "DescribeVaultOutput",
          "VaultARN",
          "Java SDK",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_242",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nlistComplete = true;\n}\n}\nif (totalVaults == 0) {\nSystem.out.println(\"No vaults found.\");\n}\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for Java 2.x API Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\ndef list_vaults(self):\n\"\"\"\nLists vaults for the current account.\n\"\"\"\nActions API Version 2012-06-01 248",
      "start_idx": 404599,
      "end_idx": 405388,
      "metadata": {
        "num_sentences": 8,
        "num_words": 110,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaults",
            "Boto3",
            "AWS SDK for Java",
            "API Reference",
            "GlacierException",
            "vaults",
            "AWS Code Examples Repository",
            "GlacierWrapper",
            "Actions API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java 2.x",
            "Boto3",
            "AWS Code Examples Repository",
            "ListVaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of listing vaults in Amazon S3 Glacier using both Java and Python, along with error handling and API references.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier using Java?",
            "What is the Python implementation for listing vaults in S3 Glacier?",
            "Where can I find more code examples for AWS S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "Amazon S3 Glacier",
          "GlacierException",
          "ListVaults",
          "AWS SDK for Java",
          "AWS SDK for Java 2.x",
          "vaults",
          "Actions API",
          "GlacierWrapper",
          "Boto3",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_243",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ntry:\nfor vault in self.glacier_resource.vaults.all():\nlogger.info(\"Got vault %s.\", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't list vaults.\")\nraise\n\u2022 For API details, see ListVaults in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse SetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use SetVaultNotifications.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nCLI\nAWS CLI\nThe following command configures SNS notifications for a vault named my-vault:\naws glacier set-vault-notifications --account-id - --vault-name my-vault --vault-\nnotification-config file://notificationconfig.json\nnotificationconfig.json is a JSON file in the current folder that specifies an SNS topic\nand the events to publish:\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nActions API Version 2012-06-01 249",
      "start_idx": 405388,
      "end_idx": 406701,
      "metadata": {
        "num_sentences": 8,
        "num_words": 176,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "CLI Command",
              "JSON Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SetVaultNotifications",
            "SNS notifications",
            "vault",
            "AWS CLI",
            "notificationconfig.json",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "Boto3",
            "ListVaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS Topic",
            "AWS CLI",
            "Boto3",
            "notificationconfig.json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and instructions for configuring Amazon S3 Glacier vault notifications using AWS CLI and Boto3, including JSON configuration for SNS topics and event publishing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure SNS notifications for an Amazon S3 Glacier vault?",
            "What events can be published to SNS from an Amazon S3 Glacier vault?",
            "Where can I find API details for ListVaults in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "notificationconfig.json",
          "SNS Topic",
          "Amazon S3 Glacier",
          "SNS",
          "SetVaultNotifications",
          "vault",
          "AWS CLI",
          "ArchiveRetrievalCompleted",
          "SNS notifications",
          "ListVaults",
          "Boto3"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_244",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see SetVaultNotifications in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications. Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events.\n:param vault: The vault to set up to publish notifications.\n:param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications.\n:return: Data about the new notification configuration.\n\"\"\"\ntry:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\nActions API Version 2012-06-01 250",
      "start_idx": 406701,
      "end_idx": 407958,
      "metadata": {
        "num_sentences": 12,
        "num_words": 169,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "SNS Topic",
            "Vault Notifications",
            "Amazon Resource Name",
            "Notification Configuration",
            "AWS CLI",
            "Python SDK",
            "API Operations",
            "AWS Code Examples"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "SNS Topic",
            "AWS CLI",
            "Amazon Resource Name (ARN)"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Serverless Notifications",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on configuring Amazon S3 Glacier vault notifications using Python's Boto3 SDK and the AWS CLI, including a code example for setting an SNS topic for notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up notifications for an Amazon S3 Glacier vault?",
            "What is the Python code example for configuring SNS topics in Amazon Glacier?",
            "Where can I find more examples for Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Python SDK",
          "Amazon Resource Name",
          "Amazon Resource Name (ARN)",
          "SNS Topic",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "AWS CLI",
          "Vault Notifications",
          "API Operations",
          "Boto3",
          "AWS Code Examples",
          "Notification Configuration"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_245",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s.\",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s.\", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\n\u2022 For API details, see SetVaultNotifications in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse UploadArchive with an AWS SDK or CLI\nThe following code examples show how to use UploadArchive.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 251",
      "start_idx": 407958,
      "end_idx": 408980,
      "metadata": {
        "num_sentences": 8,
        "num_words": 149,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SetVaultNotifications",
            "AWS SDK",
            "Boto3",
            "UploadArchive",
            "SNS topic",
            "notifications",
            "ClientError",
            "API Reference",
            "job initiation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SetVaultNotifications",
            "AWS SDK for Python (Boto3)",
            "SNS topic",
            "Actions API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Development",
            "Event Notifications"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a reference for using Amazon S3 Glacier with AWS SDKs, including examples for setting vault notifications and uploading archives. It includes procedural guidance, code snippets, and links to additional resources.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I set up vault notifications in Amazon S3 Glacier?",
            "What is the process for uploading an archive using Boto3?",
            "Where can I find examples of using Amazon S3 Glacier with AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "AWS SDK for Python (Boto3)",
          "ClientError",
          "Amazon S3 Glacier",
          "SNS topic",
          "SetVaultNotifications",
          "job initiation",
          "Actions API Version 2012-06-01",
          "Amazon SNS",
          "notifications",
          "Boto3",
          "AWS SDK",
          "UploadArchive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_246",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Upload an object to an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the Amazon S3 Glacier vault to upload\n/// the archive to.</param>\n/// <param name=\"archiveFilePath\">The file path of the archive to upload to\nthe vault.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<string> UploadArchiveWithArchiveManager(string vaultName,\nstring archiveFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\n// Upload an archive.\nvar response = await manager.UploadAsync(vaultName, \"upload archive\ntest\", archiveFilePath);\nreturn response.ArchiveId;\n}\ncatch (AmazonGlacierException ex)\n{\nConsole.WriteLine(ex.Message);\nreturn string.Empty;\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for .NET API Reference.\nActions API Version 2012-06-01 252",
      "start_idx": 408980,
      "end_idx": 410030,
      "metadata": {
        "num_sentences": 6,
        "num_words": 144,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Implementation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "vaultName",
            "archiveFilePath",
            "UploadArchive",
            "AmazonGlacierException",
            "API Reference",
            "async",
            "archive upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "UploadArchive",
            "AmazonGlacierException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "GitHub",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an object to an Amazon S3 Glacier vault using AWS SDK for .NET, including code implementation and error handling.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the role of ArchiveTransferManager in uploading archives?",
            "How do I handle errors when uploading archives to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "async",
          "ArchiveTransferManager",
          "vaultName",
          "Amazon S3 Glacier",
          "archiveFilePath",
          "AmazonGlacierException",
          "archive upload",
          "AWS SDK for .NET",
          "UploadArchive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_247",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command uploads an archive in the current folder named archive.zip to a\nvault named my-vault:\naws glacier upload-archive --account-id - --vault-name my-vault --\nbody archive.zip\nOutput:\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--\nzM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\":\n\"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/0123456789012/vaults/my-vault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\nTo retrieve an uploaded archive, initiate a retrieval job with the aws glacier initiate-job\ncommand.\n\u2022 For API details, see UploadArchive in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nActions API Version 2012-06-01 253",
      "start_idx": 410030,
      "end_idx": 411194,
      "metadata": {
        "num_sentences": 6,
        "num_words": 129,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "upload-archive",
            "checksum",
            "account ID",
            "retrieval job",
            "AWS CLI",
            "SDK for Java",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "archive.zip",
            "my-vault",
            "SDK for Java 2.x"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example of using AWS CLI to upload an archive to an Amazon S3 Glacier vault and includes additional details about retrieval jobs and related SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to an Amazon S3 Glacier vault using AWS CLI?",
            "What is the format of the output for the upload-archive command?",
            "Where can I find additional examples for using the SDK for Java with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "API Version 2012-06-01",
          "my-vault",
          "upload-archive",
          "SDK for Java",
          "Amazon S3 Glacier",
          "checksum",
          "SDK for Java 2.x",
          "vault",
          "archive",
          "AWS CLI",
          "retrieval job",
          "archive.zip"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_250",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256:\n%s\", nsae.getMessage());\nSystem.exit(-1);\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws\nIOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB.\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nActions API Version 2012-06-01 256",
      "start_idx": 413723,
      "end_idx": 414908,
      "metadata": {
        "num_sentences": 3,
        "num_words": 152,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Snippet",
              "Algorithm Explanation"
            ]
          },
          "keywords": [
            "SHA-256",
            "checksum",
            "chunk",
            "MessageDigest",
            "FileInputStream",
            "computeSHA256TreeHash",
            "NoSuchAlgorithmException",
            "buffer",
            "hash",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "SHA-256",
            "FileInputStream",
            "MessageDigest",
            "Amazon S3 Glacier",
            "Actions API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cryptographic Hashing",
          "secondary_categories": [
            "File Processing",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA-256 tree hashes for files, including handling file chunks and edge cases, with a code example in Java.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a SHA-256 tree hash for a file in Java?",
            "What is the process for handling file chunks smaller than 1 MB?",
            "What exceptions should I handle when working with MessageDigest in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cryptographic Hashing]",
        "tf_idf_keywords": [
          "SHA-256",
          "MessageDigest",
          "hash",
          "checksum",
          "Amazon S3 Glacier",
          "FileInputStream",
          "NoSuchAlgorithmException",
          "Actions API Version 2012-06-01",
          "buffer",
          "computeSHA256TreeHash",
          "chunk"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_253",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate the client.\nconst { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region.\nconst REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nUpload the archive.\n// Load the SDK for JavaScript\nimport { UploadArchiveCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\n// Create a new service object and buffer\nconst buffer = new Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nconst params = { vaultName: vaultname, body: buffer };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new UploadArchiveCommand(params));\nconsole.log(\"Archive ID\", data.archiveId);\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error uploading archive!\", err);\n}\n};\nActions API Version 2012-06-01 259",
      "start_idx": 416706,
      "end_idx": 417837,
      "metadata": {
        "num_sentences": 8,
        "num_words": 167,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JavaScript SDK",
            "GlacierClient",
            "UploadArchiveCommand",
            "AWS Region",
            "Vault Name",
            "Buffer",
            "Archive",
            "API Version",
            "Error Handling"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "UploadArchiveCommand",
            "AWS Code Examples Repository",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Development",
          "secondary_categories": [
            "Cloud Storage",
            "JavaScript Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Code Examples Repository"
          ],
          "mentioned_tools": [
            "JavaScript SDK",
            "Node.js"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for using the AWS SDK for JavaScript to interact with Amazon S3 Glacier, including setting up a client and uploading archives.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a Glacier client in JavaScript?",
            "What are the steps to upload an archive to Amazon S3 Glacier?",
            "How can I handle errors when uploading archives using the AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Development]",
        "tf_idf_keywords": [
          "Error Handling",
          "UploadArchiveCommand",
          "AWS Code Examples Repository",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "API Version",
          "Archive",
          "Vault Name",
          "Buffer",
          "JavaScript SDK",
          "AWS Region",
          "GlacierClient"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_254",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nrun();\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference.\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n// Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object and buffer\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\nbuffer = Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nvar params = { vaultName: \"YOUR_VAULT_NAME\", body: buffer };\n// Call Glacier to upload the archive.\nglacier.uploadArchive(params, function (err, data) {\nif (err) {\nconsole.log(\"Error uploading archive!\", err);\n} else {\nconsole.log(\"Archive ID\", data.archiveId);\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference.\nActions API Version 2012-06-01 260",
      "start_idx": 417837,
      "end_idx": 418903,
      "metadata": {
        "num_sentences": 9,
        "num_words": 166,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "AWS SDK",
            "JavaScript",
            "S3 Glacier",
            "UploadArchive",
            "API Reference",
            "buffer",
            "vaultName",
            "region",
            "archiveId",
            "GitHub"
          ],
          "entities": [
            "AWS SDK for JavaScript",
            "S3 Glacier",
            "UploadArchive",
            "AWS Code Examples Repository",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development Tools",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "GitHub",
            "Buffer"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example demonstrating how to upload archives to Amazon S3 Glacier using the AWS SDK for JavaScript. It includes setup instructions, API usage, and links to further resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using JavaScript?",
            "What is the correct configuration for AWS SDK when using S3 Glacier?",
            "Where can I find more AWS code examples for JavaScript?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "region",
          "AWS SDK for JavaScript",
          "vaultName",
          "Amazon S3 Glacier",
          "archiveId",
          "JavaScript",
          "buffer",
          "GitHub",
          "S3 Glacier",
          "AWS SDK",
          "AWS Code Examples Repository",
          "UploadArchive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_255",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nPowerShell\nTools for PowerShell\nExample 1: Uploads a single file to the specified vault, returning the archive ID and\ncomputed checksum.\nWrite-GLCArchive -VaultName myvault -FilePath c:\\temp\\blue.bin\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nExample 2: Uploads the contents of a folder hierarchy to the specified vault in the user's\naccount. For each file uploaded the cmdlet emits the filename, corresponding archive ID\nand the computed checksum of the archive.\nWrite-GLCArchive -VaultName myvault -FolderPath . -Recurse\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nC:\\temp\\green.bin qXAfOdSG...czo729UHXrw d50a1...9184b9\nC:\\temp\\lum.bin 39aNifP3...q9nb8nZkFIg 28886...5c3e27\nC:\\temp\\red.bin vp7E6rU_...Ejk_HhjAxKA e05f7...4e34f5\nC:\\temp\\Folder1\\file1.txt _eRINlip...5Sxy7dD2BaA d0d2a...c8a3ba\nC:\\temp\\Folder2\\file2.iso -Ix3jlmu...iXiDh-XfOPA 7469e...3e86f1\n\u2022 For API details, see UploadArchive in AWS Tools for PowerShell Cmdlet Reference.\nActions API Version 2012-06-01 261",
      "start_idx": 418903,
      "end_idx": 420066,
      "metadata": {
        "num_sentences": 6,
        "num_words": 126,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Output"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "PowerShell",
            "Write-GLCArchive",
            "VaultName",
            "Archive ID",
            "Checksum",
            "FolderPath",
            "Recurse",
            "UploadArchive",
            "AWS Tools for PowerShell"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "PowerShell",
            "Write-GLCArchive",
            "VaultName",
            "AWS Tools for PowerShell Cmdlet Reference"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "File Management",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "PowerShell",
            "AWS Tools for PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides PowerShell examples for uploading files and folder hierarchies to an Amazon S3 Glacier vault, including details on archive IDs and checksums.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a single file to an Amazon S3 Glacier vault using PowerShell?",
            "What information is returned when uploading files to Amazon S3 Glacier with PowerShell?",
            "How can I recursively upload a folder to Amazon S3 Glacier using PowerShell?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Tools for PowerShell Cmdlet Reference",
          "Write-GLCArchive",
          "Checksum",
          "PowerShell",
          "AWS Tools for PowerShell",
          "Amazon S3 Glacier",
          "UploadArchive",
          "Archive ID",
          "VaultName",
          "FolderPath",
          "Recurse"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_256",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault.\n:param vault: The vault where the archive is put.\n:param archive_description: A description of the archive.\n:param archive_file: The archive file to put in the vault.\n:return: The uploaded archive.\n\"\"\"\ntry:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s.\",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\nActions API Version 2012-06-01 262",
      "start_idx": 420066,
      "end_idx": 421060,
      "metadata": {
        "num_sentences": 11,
        "num_words": 128,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "upload_archive",
            "vault",
            "archive_description",
            "archive_file",
            "glacier_resource",
            "SDK for Python",
            "AWS Code Examples Repository",
            "ClientError"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Code Examples Repository",
            "GlacierWrapper",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Python Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Python code example using the Boto3 SDK to upload an archive to an Amazon S3 Glacier vault, demonstrating how to encapsulate API operations in a class.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to an Amazon S3 Glacier vault using Python?",
            "What is the purpose of the GlacierWrapper class in Boto3?",
            "How can I handle errors when using the upload_archive method?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive_file",
          "upload_archive",
          "ClientError",
          "GlacierWrapper",
          "Amazon S3 Glacier",
          "vault",
          "SDK for Python",
          "Boto3",
          "archive_description",
          "AWS Code Examples Repository",
          "glacier_resource"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_257",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Couldn't upload %s to %s.\", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n\u2022 For API details, see UploadArchive in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse UploadMultipartPart with an AWS SDK or CLI\nThe following code examples show how to use UploadMultipartPart.\nCLI\nAWS CLI\nThe following command uploads the first 1 MiB (1024 x 1024 bytes) part of an archive:\naws glacier upload-multipart-part --body part1 --range 'bytes\n0-1048575/*' --account-id - --vault-name my-vault --upload-\nid 19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-\nOssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\nThe body parameter takes a path to a part file on the local filesystem. The range parameter\ntakes an HTTP content range indicating the bytes that the part occupies in the completed\narchive. The upload ID is returned by the aws glacier initiate-multipart-upload\ncommand and can also be obtained by using aws glacier list-multipart-uploads.\nFor more information on multipart uploads to Amazon Glacier using the AWS CLI, see Using\nAmazon Glacier in the AWS CLI User Guide.\n\u2022 For API details, see UploadMultipartPart in AWS CLI Command Reference.\nActions API Version 2012-06-01 263",
      "start_idx": 421060,
      "end_idx": 422606,
      "metadata": {
        "num_sentences": 12,
        "num_words": 231,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Explanation",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadMultipartPart",
            "AWS CLI",
            "multipart uploads",
            "archive",
            "UploadArchive",
            "account ID",
            "HTTP content range",
            "vault",
            "upload ID"
          ],
          "entities": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI",
            "Amazon Glacier",
            "UploadMultipartPart",
            "UploadArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Python (Boto3)"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using the AWS SDK or CLI, including both single and multipart upload methods. It provides example commands, API references, and detailed parameter descriptions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a part of an archive to Amazon S3 Glacier?",
            "What is the purpose of the range parameter in AWS CLI commands?",
            "Where can I find API details for UploadMultipartPart?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "AWS SDK for Python (Boto3)",
          "Amazon S3 Glacier",
          "HTTP content range",
          "UploadArchive",
          "AWS CLI",
          "archive",
          "vault",
          "Amazon Glacier",
          "upload ID",
          "multipart uploads",
          "UploadMultipartPart"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_258",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate a multipart upload of 1 megabyte chunks of a Buffer object.\n// Create a new service object and some supporting variables\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" }),\nvaultName = \"YOUR_VAULT_NAME\",\nbuffer = new Buffer(2.5 * 1024 * 1024), // 2.5MB buffer\npartSize = 1024 * 1024, // 1MB chunks,\nnumPartsLeft = Math.ceil(buffer.length / partSize),\nstartTime = new Date(),\nparams = { vaultName: vaultName, partSize: partSize.toString() };\n// Compute the complete SHA-256 tree hash so we can pass it\n// to completeMultipartUpload request at the end\nvar treeHash = glacier.computeChecksums(buffer).treeHash;\n// Initiate the multipart upload\nconsole.log(\"Initiating upload to\", vaultName);\n// Call Glacier to initiate the upload.\nglacier.initiateMultipartUpload(params, function (mpErr, multipart) {\nif (mpErr) {\nconsole.log(\"Error!\", mpErr.stack);\nreturn;\n}\nconsole.log(\"Got upload ID\", multipart.uploadId);\n// Grab each partSize chunk and upload it as a part\nfor (var i = 0; i < buffer.length; i += partSize) {\nvar end = Math.min(i + partSize, buffer.length),\npartParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\nrange: \"bytes \" + i + \"-\" + (end - 1) + \"/*\",\nbody: buffer.slice(i, end),\nActions API Version 2012-06-01 264",
      "start_idx": 422606,
      "end_idx": 424053,
      "metadata": {
        "num_sentences": 6,
        "num_words": 215,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "Buffer object",
            "SHA-256 tree hash",
            "AWS SDK for JavaScript",
            "vaultName",
            "initiateMultipartUpload",
            "computeChecksums",
            "uploadId",
            "chunks"
          ],
          "entities": [
            "AWS Glacier",
            "Buffer",
            "SHA-256",
            "AWS SDK for JavaScript",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example of uploading a large buffer to Amazon S3 Glacier using the AWS SDK for JavaScript, demonstrating multipart upload handling with 1MB chunks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload to Amazon S3 Glacier?",
            "What is the correct way to compute a SHA-256 tree hash for a buffer?",
            "How do I use the AWS SDK for JavaScript to manage large file uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SHA-256",
          "multipart upload",
          "computeChecksums",
          "Buffer",
          "AWS SDK for JavaScript",
          "AWS Code Examples Repository",
          "vaultName",
          "Amazon S3 Glacier",
          "SHA-256 tree hash",
          "uploadId",
          "initiateMultipartUpload",
          "Buffer object",
          "AWS Glacier",
          "chunks"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_259",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n};\n// Send a single part\nconsole.log(\"Uploading part\", i, \"=\", partParams.range);\nglacier.uploadMultipartPart(partParams, function (multiErr, mData) {\nif (multiErr) return;\nconsole.log(\"Completed part\", this.request.params.range);\nif (--numPartsLeft > 0) return; // complete only when all parts uploaded\nvar doneParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\narchiveSize: buffer.length.toString(),\nchecksum: treeHash, // the computed tree hash\n};\nconsole.log(\"Completing upload...\");\nglacier.completeMultipartUpload(doneParams, function (err, data) {\nif (err) {\nconsole.log(\"An error occurred while uploading the archive\");\nconsole.log(err);\n} else {\nvar delta = (new Date() - startTime) / 1000;\nconsole.log(\"Completed upload in\", delta, \"seconds\");\nconsole.log(\"Archive ID:\", data.archiveId);\nconsole.log(\"Checksum: \", data.checksum);\n}\n});\n});\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see UploadMultipartPart in AWS SDK for JavaScript API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 265",
      "start_idx": 424053,
      "end_idx": 425348,
      "metadata": {
        "num_sentences": 5,
        "num_words": 166,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "uploadMultipartPart",
            "completeMultipartUpload",
            "tree hash",
            "archive ID",
            "AWS SDK",
            "JavaScript",
            "multipart upload",
            "checksum",
            "vaultName"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "UploadMultipartPart",
            "completeMultipartUpload",
            "Actions API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide on performing a multipart upload to Amazon S3 Glacier using the AWS SDK for JavaScript, including handling parts, completing the upload, and verifying checksums.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload with Amazon S3 Glacier?",
            "What is the process of completing a multipart upload in AWS SDK for JavaScript?",
            "How can I compute and use a tree hash for uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "AWS SDK for JavaScript",
          "vaultName",
          "Amazon S3 Glacier",
          "checksum",
          "Actions API Version 2012-06-01",
          "archive ID",
          "uploadMultipartPart",
          "JavaScript",
          "completeMultipartUpload",
          "tree hash",
          "AWS SDK",
          "UploadMultipartPart"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_260",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nScenarios for S3 Glacier using AWS SDKs\nThe following code examples show you how to implement common scenarios in S3 Glacier with\nAWS SDKs. These scenarios show you how to accomplish specific tasks by calling multiple functions\nwithin S3 Glacier or combined with other AWS services. Each scenario includes a link to the\ncomplete source code, where you can find instructions on how to set up and run the code.\nScenarios target an intermediate level of experience to help you understand service actions in\ncontext.\nExamples\n\u2022 Archive a file to Amazon S3 Glacier, get notifications, and initiate a job using an AWS SDK\n\u2022 Get Amazon S3 Glacier archive content and delete the archive using an AWS SDK\nArchive a file to Amazon S3 Glacier, get notifications, and initiate a job\nusing an AWS SDK\nThe following code example shows how to:\n\u2022 Create an Amazon S3 Glacier vault.\n\u2022 Configure the vault to publish notifications to an Amazon SNS topic.\n\u2022 Upload an archive file to the vault.\n\u2022 Initiate an archive retrieval job.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate a class that wraps S3 Glacier operations.\nimport argparse\nScenarios API Version 2012-06-01 266",
      "start_idx": 425348,
      "end_idx": 426652,
      "metadata": {
        "num_sentences": 12,
        "num_words": 224,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Scenario Implementation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS SDK",
            "archive retrieval",
            "vault creation",
            "SNS topic",
            "Python",
            "Boto3",
            "notifications",
            "AWS Code Examples Repository",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "Amazon SNS",
            "Boto3",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS Code Examples Repository"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python",
            "argparse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on implementing common scenarios in Amazon S3 Glacier using AWS SDKs, including uploading archives, configuring notifications, and initiating retrieval jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Amazon S3 Glacier vault using Python?",
            "How can I configure notifications for an S3 Glacier vault?",
            "What steps are involved in initiating an archive retrieval job in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version 2012-06-01",
          "Python",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "AWS SDKs",
          "archive retrieval",
          "vault creation",
          "Boto3",
          "notifications",
          "S3 Glacier",
          "AWS SDK",
          "AWS Code Examples Repository",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_262",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nraise\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault.\n:param vault: The vault where the archive is put.\n:param archive_description: A description of the archive.\n:param archive_file: The archive file to put in the vault.\n:return: The uploaded archive.\n\"\"\"\ntry:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s.\",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't upload %s to %s.\", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output().\n:param archive: The archive to retrieve.\n:return: The archive retrieval job.\n\"\"\"\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 268",
      "start_idx": 427696,
      "end_idx": 428770,
      "metadata": {
        "num_sentences": 13,
        "num_words": 138,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "upload_archive",
            "initiate_archive_retrieval",
            "archive_description",
            "archive_file",
            "retrieval job",
            "ClientError",
            "get_output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "ClientError",
            "logger"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to an Amazon S3 Glacier vault and initiate archive retrieval jobs, including error handling and logging details.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What is the process to initiate an archive retrieval job?",
            "How can errors be handled during archive upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive_file",
          "upload_archive",
          "ClientError",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "initiate_archive_retrieval",
          "logger",
          "retrieval job",
          "get_output",
          "archive_description"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_264",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications. Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events.\n:param vault: The vault to set up to publish notifications.\n:param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications.\n:return: Data about the new notification configuration.\n\"\"\"\ntry:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s.\",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s.\", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\nCall functions on the wrapper class to create a vault and upload a file, then configure the\nvault to publish notifications and initiate a job to retrieve the archive.\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 270",
      "start_idx": 429946,
      "end_idx": 431185,
      "metadata": {
        "num_sentences": 9,
        "num_words": 160,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "vault",
            "notifications",
            "events",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "notification configuration",
            "ClientError",
            "Amazon Resource Name (ARN)"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "vault",
            "notification",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Notifications",
          "secondary_categories": [
            "AWS Services",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Python SDK",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure an Amazon S3 Glacier vault to send notifications to an Amazon SNS topic for specific events, such as archive retrieval completion. It includes a Python code example using the AWS SDK to implement the functionality.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I configure notifications for an Amazon S3 Glacier vault?",
            "What events can trigger notifications from Amazon S3 Glacier?",
            "How do I handle errors when setting up notifications in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Notifications]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "ClientError",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault",
          "ArchiveRetrievalCompleted",
          "notification configuration",
          "ARN",
          "notifications",
          "Amazon Resource Name (ARN)",
          "notification",
          "SNS topic",
          "events"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_265",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ndef upload_demo(glacier, vault_name, topic_arn):\n\"\"\"\nShows how to:\n* Create a vault.\n* Configure the vault to publish notifications to an Amazon SNS topic.\n* Upload an archive.\n* Start a job to retrieve the archive.\n:param glacier: A Boto3 Amazon S3 Glacier resource.\n:param vault_name: The name of the vault to create.\n:param topic_arn: The ARN of an Amazon SNS topic that receives notification\nof\nAmazon S3 Glacier events.\n\"\"\"\nprint(f\"\\nCreating vault {vault_name}.\")\nvault = glacier.create_vault(vault_name)\nprint(\"\\nList of vaults in your account:\")\nglacier.list_vaults()\nprint(f\"\\nUploading glacier_basics.py to {vault.name}.\")\nwith open(\"glacier_basics.py\", \"rb\") as upload_file:\narchive = glacier.upload_archive(vault, \"glacier_basics.py\", upload_file)\nprint(\n\"\\nStarting an archive retrieval request to get the file back from the \"\n\"vault.\"\n)\nglacier.initiate_archive_retrieval(archive)\nprint(\"\\nListing in progress jobs:\")\nglacier.list_jobs(vault, \"in_progress\")\nprint(\n\"\\nBecause Amazon S3 Glacier is intended for infrequent retrieval, an \"\n\"archive request with Standard retrieval typically completes within 3\u20135 \"\n\"hours.\"\n)\nif topic_arn:\nnotification = glacier.set_notifications(vault, topic_arn)\nprint(\nf\"\\nVault {vault.name} is configured to notify the \"\nf\"{notification.sns_topic} topic when {notification.events} \"\nf\"events occur. You can subscribe to this topic to receive \"\nf\"a message when the archive retrieval completes.\\n\"\n)\nelse:\nprint(\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 271",
      "start_idx": 431185,
      "end_idx": 432761,
      "metadata": {
        "num_sentences": 13,
        "num_words": 204,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "notifications",
            "Amazon SNS",
            "job retrieval",
            "Boto3",
            "upload_archive",
            "list_jobs",
            "set_notifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Boto3",
            "vault",
            "archive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This guide demonstrates how to create a vault in Amazon S3 Glacier, configure notifications using Amazon SNS, upload an archive, and initiate a job to retrieve the archive using Boto3.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "How can I configure Amazon S3 Glacier to send notifications using Amazon SNS?",
            "What is the process for retrieving an archive from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload_archive",
          "list_jobs",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault",
          "archive",
          "notifications",
          "Boto3",
          "job retrieval",
          "set_notifications"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_266",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nf\"\\nVault {vault.name} is not configured to notify an Amazon SNS\ntopic \"\nf\"when the archive retrieval completes so wait a few hours.\"\n)\nprint(\"\\nRetrieve your job output by running this script with the --retrieve\nflag.\")\n\u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference.\n\u2022 CreateVault\n\u2022 InitiateJob\n\u2022 ListJobs\n\u2022 ListVaults\n\u2022 SetVaultNotifications\n\u2022 UploadArchive\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nGet Amazon S3 Glacier archive content and delete the archive using an\nAWS SDK\nThe following code example shows how to:\n\u2022 List jobs for an Amazon S3 Glacier vault and get job status.\n\u2022 Get the output of a completed archive retrieval job.\n\u2022 Delete an archive.\n\u2022 Delete a vault.\nGet archive content and delete the archive API Version 2012-06-01 272",
      "start_idx": 432761,
      "end_idx": 433749,
      "metadata": {
        "num_sentences": 10,
        "num_words": 165,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "SNS topic",
            "archive retrieval",
            "AWS SDK",
            "Boto3",
            "InitiateJob",
            "ListJobs",
            "DeleteVault",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "SNS topic",
            "API Version 2012-06-01",
            "vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on using the AWS SDK for Python (Boto3) to interact with Amazon S3 Glacier, including listing jobs, retrieving archive content, and deleting archives or vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archive content from Amazon S3 Glacier?",
            "What API operations are used to manage Amazon S3 Glacier vaults?",
            "How can I delete an archive or vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for Python (Boto3)",
          "ListJobs",
          "API Version 2012-06-01",
          "InitiateJob",
          "DeleteVault",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault",
          "archive retrieval",
          "Boto3",
          "AWS SDK",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_267",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate a class that wraps S3 Glacier operations.\nimport argparse\nimport logging\nimport os\nimport boto3\nfrom botocore.exceptions import ClientError\nlogger = logging.getLogger(__name__)\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault.\n:param vault: The vault to query.\n:param job_type: The type of job to list.\n:return: The list of jobs of the requested type.\n\"\"\"\njob_list = []\ntry:\nif job_type == \"all\":\nGet archive content and delete the archive API Version 2012-06-01 273",
      "start_idx": 433749,
      "end_idx": 434679,
      "metadata": {
        "num_sentences": 10,
        "num_words": 136,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "Python SDK",
            "AWS Code Examples Repository",
            "GlacierWrapper",
            "list_jobs",
            "vault",
            "job_type",
            "archive",
            "ClientError"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Python Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using Python's Boto3 library to interact with Amazon S3 Glacier, including creating a wrapper class for operations and listing jobs by type for a specified vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I interact with Amazon S3 Glacier using Python?",
            "What is the purpose of the GlacierWrapper class in Boto3?",
            "How do I list jobs by type for a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Python SDK",
          "ClientError",
          "list_jobs",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "job_type",
          "GlacierWrapper",
          "Boto3",
          "AWS Code Examples Repository"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_270",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nShows how to:\n* List jobs for a vault and get job status.\n* Get the output of a completed archive retrieval job.\n* Delete an archive.\n* Delete a vault.\n:param glacier: A Boto3 Amazon S3 Glacier resource.\n:param vault_name: The name of the vault to query for jobs.\n\"\"\"\nvault = glacier.glacier_resource.Vault(\"-\", vault_name)\ntry:\nvault.load()\nexcept ClientError as err:\nif err.response[\"Error\"][\"Code\"] == \"ResourceNotFoundException\":\nprint(\nf\"\\nVault {vault_name} doesn't exist. You must first run this\nscript \"\nf\"with the --upload flag to create the vault.\"\n)\nreturn\nelse:\nraise\nprint(f\"\\nGetting completed jobs for {vault.name}.\")\njobs = glacier.list_jobs(vault, \"completed\")\nif not jobs:\nprint(\"\\nNo completed jobs found. Give it some time and try again\nlater.\")\nreturn\nretrieval_job = None\nfor job in jobs:\nif job.action == \"ArchiveRetrieval\" and job.status_code == \"Succeeded\":\nretrieval_job = job\nbreak\nif retrieval_job is None:\nprint(\n\"\\nNo ArchiveRetrieval jobs found. Give it some time and try again \"\n\"later.\"\n)\nreturn\nprint(f\"\\nGetting output from job {retrieval_job.id}.\")\narchive_bytes = glacier.get_job_output(retrieval_job)\nGet archive content and delete the archive API Version 2012-06-01 276",
      "start_idx": 436747,
      "end_idx": 437991,
      "metadata": {
        "num_sentences": 15,
        "num_words": 177,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive retrieval",
            "job status",
            "Boto3",
            "completed jobs",
            "ResourceNotFoundException",
            "ClientError",
            "archive",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "vault",
            "ResourceNotFoundException",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a guide for interacting with Amazon S3 Glacier, including listing jobs, retrieving archive outputs, and handling vault operations using Boto3.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I list jobs for a specific vault in Amazon S3 Glacier?",
            "What steps are needed to retrieve the output of a completed archive retrieval job?",
            "How do I handle ResourceNotFoundException when accessing a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "job status",
          "ClientError",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "ResourceNotFoundException",
          "archive retrieval",
          "Boto3",
          "completed jobs"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_271",
      "text": "\n\nAmazon S3 Glacier Developer Guide\narchive_str = archive_bytes.decode(\"utf-8\")\nprint(\"\\nGot archive data. Printing the first 10 lines.\")\nprint(os.linesep.join(archive_str.split(os.linesep)[:10]))\nprint(f\"\\nDeleting the archive from {vault.name}.\")\narchive = glacier.glacier_resource.Archive(\n\"-\", vault.name, retrieval_job.archive_id\n)\nglacier.delete_archive(archive)\nprint(f\"\\nDeleting {vault.name}.\")\nglacier.delete_vault(vault)\n\u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference.\n\u2022 DeleteArchive\n\u2022 DeleteVault\n\u2022 GetJobOutput\n\u2022 ListJobs\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nGet archive content and delete the archive API Version 2012-06-01 277",
      "start_idx": 437991,
      "end_idx": 438842,
      "metadata": {
        "num_sentences": 8,
        "num_words": 102,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "retrieval_job",
            "delete_archive",
            "delete_vault",
            "job_output",
            "AWS SDK",
            "Boto3",
            "API Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "DeleteArchive",
            "DeleteVault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance for retrieving and deleting archives from Amazon S3 Glacier using the AWS SDK for Python (Boto3). It includes code examples and references to relevant API methods.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from Amazon S3 Glacier using Boto3?",
            "What API methods are available for managing archives in Amazon S3 Glacier?",
            "How can I retrieve archive data and delete a vault in AWS Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Reference",
          "AWS SDK for Python",
          "DeleteVault",
          "Amazon S3 Glacier",
          "delete_archive",
          "vault",
          "archive",
          "job_output",
          "delete_vault",
          "Boto3",
          "retrieval_job",
          "AWS SDK",
          "DeleteArchive"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_272",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSecurity in Amazon S3 Glacier\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from a data center\nand network architecture that are built to meet the requirements of the most security-sensitive\norganizations.\nSecurity is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely. The\neffectiveness of our security is regularly tested and verified by third-party auditors as part of the\nAWS compliance programs. To learn about the compliance programs that apply to Amazon S3\nGlacier (S3 Glacier), see AWS Services in Scope by Compliance Program.\n\u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your organization\u2019s\nrequirements, and applicable laws and regulations.\nThis documentation will help you understand how to apply the shared responsibility model when\nusing S3 Glacier. The following topics show you how to configure S3 Glacier to meet your security\nand compliance objectives. You'll also learn how to use other AWS services that can help you to\nmonitor and secure your S3 Glacier resources.\nTopics\n\u2022 Data Protection in Amazon S3 Glacier\n\u2022 Identity and Access Management for Amazon S3 Glacier\n\u2022 Logging and Monitoring in Amazon S3 Glacier\n\u2022 Compliance Validation for Amazon S3 Glacier\n\u2022 Resilience in Amazon S3 Glacier\n\u2022 Infrastructure Security in Amazon S3 Glacier\nData Protection in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides highly durable cloud storage for data archiving and long-\nterm backup. S3 Glacier is designed to deliver 99.999999999 percent durability and provides\nData Protection API Version 2012-06-01 278",
      "start_idx": 438842,
      "end_idx": 440845,
      "metadata": {
        "num_sentences": 14,
        "num_words": 320,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Compliance",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS Cloud",
            "Shared Responsibility Model",
            "Data Protection",
            "Compliance",
            "Identity and Access Management",
            "Logging",
            "Monitoring",
            "Infrastructure Security",
            "Resilience"
          ],
          "entities": [
            "AWS",
            "Amazon S3 Glacier",
            "AWS Compliance Programs",
            "Data Protection API",
            "AWS Services in Scope"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Data Protection",
            "Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Compliance Programs"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the shared responsibility model for security in Amazon S3 Glacier and provides guidance on configuring S3 Glacier to meet security and compliance objectives. It also covers topics like data protection, IAM, logging, resilience, and infrastructure security.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the shared responsibility model for Amazon S3 Glacier?",
            "How can I configure S3 Glacier to meet compliance requirements?",
            "What security features does Amazon S3 Glacier offer?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Security]",
        "tf_idf_keywords": [
          "Shared Responsibility Model",
          "AWS Services in Scope",
          "Logging",
          "Data Protection API",
          "Amazon S3 Glacier",
          "Resilience",
          "Data Protection",
          "AWS Cloud",
          "AWS",
          "Compliance",
          "Monitoring",
          "Identity and Access Management",
          "Infrastructure Security",
          "AWS Compliance Programs"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_273",
      "text": "\n\nAmazon S3 Glacier Developer Guide\ncomprehensive security and compliance capabilities that can help you meet stringent regulatory\nrequirements. S3 Glacier redundantly stores data in multiple AWS Availability Zones (AZ) and on\nmultiple devices within each AZ. To increase durability, S3 Glacier synchronously stores your data\nacross multiple AZs before confirming a successful upload.\nFor more information about the AWS global cloud infrastructure, see Global Infrastructure.\nFor data protection purposes, we recommend that you protect AWS account credentials and give\nindividual users, groups, or roles only the permissions necessary to fulfill their job duties.\nIf you require FIPS 140-2 validated cryptographic modules when accessing AWS through a\ncommand line interface or an API, use a FIPS endpoint. For more information about the available\nFIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2.\nTopics\n\u2022 Data Encryption\n\u2022 Key Management\n\u2022 Internetwork Traffic Privacy\nData Encryption\nData protection refers to protecting data while in-transit (as it travels to and from Amazon S3\nGlacier) and at rest (while it is stored in AWS data centers). You can protect data in transit that is\nuploaded directly to S3 Glacier using Secure Sockets Layer (SSL) or client-side encryption.\nYou can also access S3 Glacier through Amazon S3. Amazon S3 supports lifecycle configuration on\nan Amazon S3 bucket, which enables you to transition objects to the S3 Glacier storage class for\narchival. Data in transit between Amazon S3 and S3 Glacier via lifecycle policies is encrypted using\nSSL.\nData at rest stored in S3 Glacier is automatically server-side encrypted using 256-bit Advanced\nEncryption Standard (AES-256) with keys maintained by AWS. If you prefer to manage your\nown keys, you can also use client-side encryption before storing data in S3 Glacier. For more\ninformation about how to setup default encryption for Amazon S3, see Amazon S3 Default\nEncryption in the Amazon Simple Storage Service User Guide.\nData Encryption API Version 2012-06-01 279",
      "start_idx": 440845,
      "end_idx": 442912,
      "metadata": {
        "num_sentences": 16,
        "num_words": 315,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Data Protection",
              "Encryption"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS Availability Zones",
            "FIPS 140-2",
            "SSL",
            "AES-256",
            "Data Encryption",
            "Key Management",
            "Lifecycle Configuration",
            "Server-Side Encryption",
            "Client-Side Encryption"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "FIPS 140-2",
            "Advanced Encryption Standard (AES-256)",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "Data Encryption",
            "AWS Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3",
            "AWS Availability Zones"
          ],
          "mentioned_tools": [
            "FIPS endpoints"
          ]
        },
        "semantic": {
          "summary": "The document explains the security and compliance features of Amazon S3 Glacier, focusing on data encryption at rest and in transit, key management, and compliance with FIPS 140-2 standards. It also highlights lifecycle management with Amazon S3 and SSL encryption for secure data transfer.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier ensure data encryption at rest?",
            "What are the compliance features of S3 Glacier with FIPS 140-2?",
            "How can I transition data to S3 Glacier using Amazon S3 lifecycle policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "Data Encryption",
          "Key Management",
          "AES-256",
          "Server-Side Encryption",
          "Amazon S3 Glacier",
          "Amazon S3",
          "Lifecycle Configuration",
          "FIPS 140-2",
          "AWS",
          "Client-Side Encryption",
          "Advanced Encryption Standard (AES-256)",
          "AWS Availability Zones",
          "SSL",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_274",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nKey Management\nServer-side encryption addresses data encryption at rest\u2014that is, Amazon S3 Glacier encrypts your\ndata as it writes it to its data centers and decrypts it for you when you access it. As long as you\nauthenticate your request and you have access permissions, there is no difference in the way you\naccess encrypted or unencrypted data.\nData at rest stored in S3 Glacier is automatically server-side encrypted using AES-256, using keys\nmaintained by AWS. As an additional safeguard, AWS encrypts the key itself with a root key that we\nregularly rotate.\nInternetwork Traffic Privacy\nAccess to Amazon S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2. We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS), such as Ephemeral Diffie-Hellman (DHE) or\nElliptic Curve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later\nsupport these modes. Additionally, you must sign requests using an access key ID and a secret\naccess key that are associated with an IAM principal, or you can use the AWS Security Token Service\n(AWS STS) to generate temporary security credentials to sign requests.\nVPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon Simple Storage Service\n(Amazon S3) VPC endpoints if you access S3 Glacier as a storage tier integrated with Amazon S3.\nFor more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide.\nIdentity and Access Management for Amazon S3 Glacier\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nKey Management API Version 2012-06-01 280",
      "start_idx": 442912,
      "end_idx": 445273,
      "metadata": {
        "num_sentences": 16,
        "num_words": 369,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Networking",
              "Storage"
            ]
          },
          "keywords": [
            "server-side encryption",
            "AES-256",
            "TLS 1.2",
            "Perfect Forward Secrecy",
            "VPC endpoints",
            "IAM",
            "AWS STS",
            "Amazon S3 Glacier",
            "root key",
            "AWS PrivateLink"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management (IAM)",
            "AWS Security Token Service (AWS STS)",
            "Amazon Simple Storage Service (Amazon S3)",
            "Amazon VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3",
            "AWS STS"
          ],
          "mentioned_tools": [
            "Java 7",
            "TLS 1.2",
            "TLS 1.3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the security and networking features of Amazon S3 Glacier, including server-side encryption, internetwork traffic privacy, and integration with VPC endpoints and IAM for access management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier handle server-side encryption?",
            "What networking protocols are required to access Amazon S3 Glacier?",
            "How can I use VPC endpoints with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "root key",
          "AES-256",
          "server-side encryption",
          "AWS Identity and Access Management (IAM)",
          "Amazon S3 Glacier",
          "Amazon S3",
          "AWS STS",
          "IAM",
          "TLS 1.2",
          "AWS PrivateLink",
          "AWS Security Token Service (AWS STS)",
          "Amazon VPC",
          "Perfect Forward Secrecy",
          "VPC endpoints",
          "Amazon Simple Storage Service (Amazon S3)"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_275",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nand authorized (have permissions) to use S3 Glacier resources. IAM is an AWS service that you can\nuse with no additional charge.\nTopics\n\u2022 Audience\n\u2022 Authenticating with identities\n\u2022 Managing access using policies\n\u2022 How Amazon S3 Glacier works with IAM\n\u2022 Identity-based policy examples for Amazon S3 Glacier\n\u2022 Resource-based policy examples for Amazon S3 Glacier\n\u2022 Troubleshooting Amazon S3 Glacier identity and access\n\u2022 API Permissions Reference\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you\ndo in S3 Glacier.\nService user \u2013 If you use the S3 Glacier service to do your job, then your administrator provides you\nwith the credentials and permissions that you need. As you use more S3 Glacier features to do your\nwork, you might need additional permissions. Understanding how access is managed can help you\nrequest the right permissions from your administrator. If you cannot access a feature in S3 Glacier,\nsee Troubleshooting Amazon S3 Glacier identity and access.\nService administrator \u2013 If you're in charge of S3 Glacier resources at your company, you probably\nhave full access to S3 Glacier. It's your job to determine which S3 Glacier features and resources\nyour service users should access. You must then submit requests to your IAM administrator to\nchange the permissions of your service users. Review the information on this page to understand\nthe basic concepts of IAM. To learn more about how your company can use IAM with S3 Glacier, see\nHow Amazon S3 Glacier works with IAM.\nIAM administrator \u2013 If you're an IAM administrator, you might want to learn details about how\nyou can write policies to manage access to S3 Glacier. To view example S3 Glacier identity-based\npolicies that you can use in IAM, see Identity-based policy examples for Amazon S3 Glacier.\nAudience API Version 2012-06-01 281",
      "start_idx": 445273,
      "end_idx": 447169,
      "metadata": {
        "num_sentences": 15,
        "num_words": 312,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "Access Management",
              "Policy Examples",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "IAM",
            "permissions",
            "identity-based policies",
            "resource-based policies",
            "troubleshooting",
            "API permissions",
            "service user",
            "service administrator",
            "IAM administrator"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management",
            "IAM policies",
            "API Permissions Reference",
            "S3 Glacier resources"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an overview of how to manage access to Amazon S3 Glacier using AWS Identity and Access Management (IAM), including examples of identity-based and resource-based policies, and troubleshooting access issues.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I manage access to Amazon S3 Glacier using IAM?",
            "What are examples of identity-based policies for S3 Glacier?",
            "How do I troubleshoot access issues in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "resource-based policies",
          "service administrator",
          "S3 Glacier resources",
          "permissions",
          "service user",
          "API permissions",
          "Amazon S3 Glacier",
          "AWS Identity and Access Management",
          "troubleshooting",
          "IAM",
          "identity-based policies",
          "IAM administrator",
          "IAM policies",
          "API Permissions Reference"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_276",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated (signed in to AWS) as the AWS account root user, as an IAM user, or by assuming an\nIAM role.\nYou can sign in to AWS as a federated identity by using credentials provided through an identity\nsource. AWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on\nauthentication, and your Google or Facebook credentials are examples of federated identities.\nWhen you sign in as a federated identity, your administrator previously set up identity federation\nusing IAM roles. When you access AWS by using federation, you are indirectly assuming a role.\nDepending on the type of user you are, you can sign in to the AWS Management Console or the\nAWS access portal. For more information about signing in to AWS, see How to sign in to your AWS\naccount in the AWS Sign-In User Guide.\nIf you access AWS programmatically, AWS provides a software development kit (SDK) and a\ncommand line interface (CLI) to cryptographically sign your requests by using your credentials. If\nyou don't use AWS tools, you must sign requests yourself. For more information about using the\nrecommended method to sign requests yourself, see AWS Signature Version 4 for API requests in\nthe IAM User Guide.\nRegardless of the authentication method that you use, you might be required to provide additional\nsecurity information. For example, AWS recommends that you use multi-factor authentication\n(MFA) to increase the security of your account. To learn more, see Multi-factor authentication in\nthe AWS IAM Identity Center User Guide and AWS Multi-factor authentication in IAM in the IAM User\nGuide.\nAWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to\nall AWS services and resources in the account. This identity is called the AWS account root user and\nis accessed by signing in with the email address and password that you used to create the account.\nWe strongly recommend that you don't use the root user for your everyday tasks. Safeguard your\nroot user credentials and use them to perform the tasks that only the root user can perform. For\nthe complete list of tasks that require you to sign in as the root user, see Tasks that require root\nuser credentials in the IAM User Guide.\nAuthenticating with identities API Version 2012-06-01 282",
      "start_idx": 447169,
      "end_idx": 449627,
      "metadata": {
        "num_sentences": 20,
        "num_words": 409,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "Identity Management"
            ]
          },
          "keywords": [
            "authentication",
            "IAM roles",
            "AWS account root user",
            "identity federation",
            "multi-factor authentication",
            "AWS Management Console",
            "SDK",
            "CLI",
            "AWS Signature Version 4",
            "IAM User Guide"
          ],
          "entities": [
            "AWS account root user",
            "IAM roles",
            "AWS IAM Identity Center",
            "AWS SDK",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Authentication",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM Identity Center",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to authenticate with AWS using various identity credentials, including IAM roles, federated identities, and multi-factor authentication, while emphasizing best practices for securing the AWS account root user credentials.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the methods to authenticate with AWS?",
            "How can I use federated identities to access AWS?",
            "What tasks require the AWS account root user credentials?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "authentication",
          "AWS Management Console",
          "identity federation",
          "IAM roles",
          "IAM User Guide",
          "AWS account root user",
          "Amazon S3 Glacier",
          "AWS CLI",
          "SDK",
          "IAM",
          "AWS IAM Identity Center",
          "CLI",
          "multi-factor authentication",
          "AWS Signature Version 4",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_277",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use\nfederation with an identity provider to access AWS services by using temporary credentials.\nA federated identity is a user from your enterprise user directory, a web identity provider, the AWS\nDirectory Service, the Identity Center directory, or any user that accesses AWS services by using\ncredentials provided through an identity source. When federated identities access AWS accounts,\nthey assume roles, and the roles provide temporary credentials.\nFor centralized access management, we recommend that you use AWS IAM Identity Center. You can\ncreate users and groups in IAM Identity Center, or you can connect and synchronize to a set of users\nand groups in your own identity source for use across all your AWS accounts and applications. For\ninformation about IAM Identity Center, see What is IAM Identity Center? in the AWS IAM Identity\nCenter User Guide.\nIAM users and groups\nAn IAM user is an identity within your AWS account that has specific permissions for a single person\nor application. Where possible, we recommend relying on temporary credentials instead of creating\nIAM users who have long-term credentials such as passwords and access keys. However, if you have\nspecific use cases that require long-term credentials with IAM users, we recommend that you rotate\naccess keys. For more information, see Rotate access keys regularly for use cases that require long-\nterm credentials in the IAM User Guide.\nAn IAM group is an identity that specifies a collection of IAM users. You can't sign in as a group. You\ncan use groups to specify permissions for multiple users at a time. Groups make permissions easier\nto manage for large sets of users. For example, you could have a group named IAMAdmins and give\nthat group permissions to administer IAM resources.\nUsers are different from roles. A user is uniquely associated with one person or application, but\na role is intended to be assumable by anyone who needs it. Users have permanent long-term\ncredentials, but roles provide temporary credentials. To learn more, see Use cases for IAM users in\nthe IAM User Guide.\nIAM roles\nAn IAM role is an identity within your AWS account that has specific permissions. It is similar to an\nIAM user, but is not associated with a specific person. To temporarily assume an IAM role in the\nAWS Management Console, you can switch from a user to an IAM role (console). You can assume a\nAuthenticating with identities API Version 2012-06-01 283",
      "start_idx": 449627,
      "end_idx": 452216,
      "metadata": {
        "num_sentences": 24,
        "num_words": 425,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Best Practice",
              "Identity Management",
              "Access Control"
            ]
          },
          "keywords": [
            "federated identity",
            "IAM Identity Center",
            "temporary credentials",
            "IAM users",
            "IAM roles",
            "access keys",
            "identity provider",
            "AWS Directory Service",
            "permissions",
            "identity source"
          ],
          "entities": [
            "AWS IAM Identity Center",
            "AWS Directory Service",
            "IAM users",
            "IAM roles",
            "Amazon S3 Glacier Developer Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Security",
            "AWS Services"
          ],
          "mentioned_services": [
            "AWS IAM Identity Center",
            "AWS Directory Service",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section discusses best practices for using federated identities, IAM users, and IAM roles to manage access to AWS services. It emphasizes the use of temporary credentials and centralized access management with AWS IAM Identity Center.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is a federated identity in AWS?",
            "How can IAM Identity Center be used for centralized access management?",
            "What are the differences between IAM users and IAM roles?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "temporary credentials",
          "Amazon S3 Glacier Developer Guide",
          "permissions",
          "identity source",
          "IAM roles",
          "AWS Directory Service",
          "Amazon S3 Glacier",
          "IAM Identity Center",
          "IAM users",
          "AWS IAM Identity Center",
          "federated identity",
          "access keys",
          "identity provider"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_278",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nrole by calling an AWS CLI or AWS API operation or by using a custom URL. For more information\nabout methods for using roles, see Methods to assume a role in the IAM User Guide.\nIAM roles with temporary credentials are useful in the following situations:\n\u2022 Federated user access \u2013 To assign permissions to a federated identity, you create a role\nand define permissions for the role. When a federated identity authenticates, the identity\nis associated with the role and is granted the permissions that are defined by the role. For\ninformation about roles for federation, see Creating a role for a third-party Identity Provider\nin the IAM User Guide. If you use IAM Identity Center, you configure a permission set. To control\nwhat your identities can access after they authenticate, IAM Identity Center correlates the\npermission set to a role in IAM. For information about permissions sets, see Permission sets in\nthe AWS IAM Identity Center User Guide.\n\u2022 Temporary IAM user permissions \u2013 An IAM user or role can assume an IAM role to temporarily\ntake on different permissions for a specific task.\n\u2022 Cross-account access \u2013 You can use an IAM role to allow someone (a trusted principal) in a\ndifferent account to access resources in your account. Roles are the primary way to grant cross-\naccount access. However, with some AWS services, you can attach a policy directly to a resource\n(instead of using a role as a proxy). To learn the difference between roles and resource-based\npolicies for cross-account access, see Cross account resource access in IAM in the IAM User Guide.\n\u2022 Cross-service access \u2013 Some AWS services use features in other AWS services. For example, when\nyou make a call in a service, it's common for that service to run applications in Amazon EC2 or\nstore objects in Amazon S3. A service might do this using the calling principal's permissions,\nusing a service role, or using a service-linked role.\n\u2022 Forward access sessions (FAS) \u2013 When you use an IAM user or role to perform actions in\nAWS, you are considered a principal. When you use some services, you might perform an\naction that then initiates another action in a different service. FAS uses the permissions of the\nprincipal calling an AWS service, combined with the requesting AWS service to make requests\nto downstream services. FAS requests are only made when a service receives a request that\nrequires interactions with other AWS services or resources to complete. In this case, you must\nhave permissions to perform both actions. For policy details when making FAS requests, see\nForward access sessions.\n\u2022 Service role \u2013 A service role is an IAM role that a service assumes to perform actions on your\nbehalf. An IAM administrator can create, modify, and delete a service role from within IAM. For\nmore information, see Creating a role to delegate permissions to an AWS service in the IAM\nUser Guide.\nAuthenticating with identities API Version 2012-06-01 284",
      "start_idx": 452216,
      "end_idx": 455189,
      "metadata": {
        "num_sentences": 26,
        "num_words": 503,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "IAM Roles",
              "Permissions"
            ]
          },
          "keywords": [
            "IAM roles",
            "temporary credentials",
            "cross-account access",
            "service role",
            "federated identity",
            "permission set",
            "forward access sessions",
            "resource-based policies",
            "AWS services",
            "principal"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EC2",
            "IAM Identity Center",
            "AWS CLI",
            "AWS API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "IAM and Permissions",
          "secondary_categories": [
            "Authentication",
            "Cross-Account Access"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EC2",
            "IAM Identity Center"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains IAM roles and their use cases, including federated access, cross-account access, and service roles, along with temporary credentials for authentication and permissions management in AWS services.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What are the use cases for IAM roles in AWS?",
            "How can IAM roles enable cross-account access?",
            "What is the difference between service roles and resource-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [IAM and Permissions]",
        "tf_idf_keywords": [
          "temporary credentials",
          "resource-based policies",
          "AWS API",
          "cross-account access",
          "IAM roles",
          "permission set",
          "service role",
          "Amazon S3",
          "forward access sessions",
          "IAM Identity Center",
          "AWS CLI",
          "principal",
          "Amazon EC2",
          "AWS services",
          "federated identity"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_279",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Service-linked role \u2013 A service-linked role is a type of service role that is linked to an AWS\nservice. The service can assume the role to perform an action on your behalf. Service-linked\nroles appear in your AWS account and are owned by the service. An IAM administrator can\nview, but not edit the permissions for service-linked roles.\n\u2022 Applications running on Amazon EC2 \u2013 You can use an IAM role to manage temporary\ncredentials for applications that are running on an EC2 instance and making AWS CLI or AWS API\nrequests. This is preferable to storing access keys within the EC2 instance. To assign an AWS role\nto an EC2 instance and make it available to all of its applications, you create an instance profile\nthat is attached to the instance. An instance profile contains the role and enables programs that\nare running on the EC2 instance to get temporary credentials. For more information, see Using\nan IAM role to grant permissions to applications running on Amazon EC2 instances in the IAM\nUser Guide.\nManaging access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources.\nA policy is an object in AWS that, when associated with an identity or resource, defines their\npermissions. AWS evaluates these policies when a principal (user, root user, or role session) makes\na request. Permissions in the policies determine whether the request is allowed or denied. Most\npolicies are stored in AWS as JSON documents. For more information about the structure and\ncontents of JSON policy documents, see Overview of JSON policies in the IAM User Guide.\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nBy default, users and roles have no permissions. To grant users permission to perform actions on\nthe resources that they need, an IAM administrator can create IAM policies. The administrator can\nthen add the IAM policies to roles, and users can assume the roles.\nIAM policies define permissions for an action regardless of the method that you use to perform the\noperation. For example, suppose that you have a policy that allows the iam:GetRole action. A\nuser with that policy can get role information from the AWS Management Console, the AWS CLI, or\nthe AWS API.\nIdentity-based policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role. These policies control what actions users and roles can\nManaging access using policies API Version 2012-06-01 285",
      "start_idx": 455189,
      "end_idx": 457848,
      "metadata": {
        "num_sentences": 25,
        "num_words": 444,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Definition",
              "Usage Explanation",
              "Policy Overview"
            ]
          },
          "keywords": [
            "service-linked role",
            "IAM role",
            "temporary credentials",
            "instance profile",
            "IAM policies",
            "JSON policy documents",
            "permissions",
            "principal",
            "identity-based policies",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon EC2",
            "AWS CLI",
            "IAM User Guide",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "AWS EC2",
            "AWS Policies and Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon EC2",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "The document explains the use of IAM roles, policies, and permissions in managing access to AWS services, including service-linked roles and identity-based policies. It highlights the importance of using temporary credentials and JSON policy documents for secure access management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is a service-linked role in AWS?",
            "How can IAM roles be used to manage temporary credentials for EC2 applications?",
            "What are identity-based policies in AWS IAM?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "temporary credentials",
          "AWS Management Console",
          "permissions",
          "service-linked role",
          "AWS IAM",
          "IAM role",
          "IAM User Guide",
          "Amazon S3 Glacier",
          "AWS CLI",
          "principal",
          "Amazon EC2",
          "identity-based policies",
          "JSON policy documents",
          "instance profile",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_280",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide.\nIdentity-based policies can be further categorized as inline policies or managed policies. Inline\npolicies are embedded directly into a single user, group, or role. Managed policies are standalone\npolicies that you can attach to multiple users, groups, and roles in your AWS account. Managed\npolicies include AWS managed policies and customer managed policies. To learn how to choose\nbetween a managed policy or an inline policy, see Choose between managed policies and inline\npolicies in the IAM User Guide.\nResource-based policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions. You must specify a principal\nin a resource-based policy. Principals can include accounts, users, roles, federated users, or AWS\nservices.\nResource-based policies are inline policies that are located in that service. You can't use AWS\nmanaged policies from IAM in a resource-based policy.\nAccess control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format.\nAmazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. To learn more\nabout ACLs, see Access control list (ACL) overview in the Amazon Simple Storage Service Developer\nGuide.\nOther policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum\npermissions granted to you by the more common policy types.\n\u2022 Permissions boundaries \u2013 A permissions boundary is an advanced feature in which you set\nthe maximum permissions that an identity-based policy can grant to an IAM entity (IAM user\nor role). You can set a permissions boundary for an entity. The resulting permissions are the\nManaging access using policies API Version 2012-06-01 286",
      "start_idx": 457848,
      "end_idx": 460316,
      "metadata": {
        "num_sentences": 24,
        "num_words": 379,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Types",
              "Access Control",
              "IAM Permissions"
            ]
          },
          "keywords": [
            "identity-based policies",
            "resource-based policies",
            "managed policies",
            "inline policies",
            "permissions boundaries",
            "Access control lists",
            "IAM roles",
            "AWS managed policies",
            "JSON policy documents",
            "principals"
          ],
          "entities": [
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC",
            "IAM User Guide",
            "AWS services"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "AWS Identity and Access Management (IAM)",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains various types of AWS policies, including identity-based, resource-based, and access control lists (ACLs), and their usage in managing permissions and access control. It also touches on less-common policy types like permissions boundaries.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What are the differences between managed and inline policies?",
            "How do resource-based policies differ from identity-based policies?",
            "What services support access control lists (ACLs)?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "resource-based policies",
          "IAM roles",
          "AWS managed policies",
          "IAM User Guide",
          "principals",
          "permissions boundaries",
          "Access control lists",
          "Amazon S3",
          "Amazon VPC",
          "managed policies",
          "identity-based policies",
          "AWS services",
          "JSON policy documents",
          "inline policies",
          "AWS WAF"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_281",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nintersection of an entity's identity-based policies and its permissions boundaries. Resource-based\npolicies that specify the user or role in the Principal field are not limited by the permissions\nboundary. An explicit deny in any of these policies overrides the allow. For more information\nabout permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide.\n\u2022 Service control policies (SCPs) \u2013 SCPs are JSON policies that specify the maximum permissions\nfor an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a\nservice for grouping and centrally managing multiple AWS accounts that your business owns. If\nyou enable all features in an organization, then you can apply service control policies (SCPs) to\nany or all of your accounts. The SCP limits permissions for entities in member accounts, including\neach AWS account root user. For more information about Organizations and SCPs, see Service\ncontrol policies in the AWS Organizations User Guide.\n\u2022 Session policies \u2013 Session policies are advanced policies that you pass as a parameter when you\nprogrammatically create a temporary session for a role or federated user. The resulting session's\npermissions are the intersection of the user or role's identity-based policies and the session\npolicies. Permissions can also come from a resource-based policy. An explicit deny in any of these\npolicies overrides the allow. For more information, see Session policies in the IAM User Guide.\nMultiple policy types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated\nto understand. To learn how AWS determines whether to allow a request when multiple policy\ntypes are involved, see Policy evaluation logic in the IAM User Guide.\nHow Amazon S3 Glacier works with IAM\nBefore you use IAM to manage access to S3 Glacier, learn what IAM features are available to use\nwith S3 Glacier.\nIAM features you can use with Amazon S3 Glacier\nIAM feature S3 Glacier support\nIdentity-based policies Yes\nResource-based policies Yes\nPolicy actions Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 287",
      "start_idx": 460316,
      "end_idx": 462500,
      "metadata": {
        "num_sentences": 18,
        "num_words": 342,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Interaction",
              "IAM Features",
              "Permissions"
            ]
          },
          "keywords": [
            "IAM",
            "permissions boundaries",
            "service control policies",
            "session policies",
            "resource-based policies",
            "identity-based policies",
            "Amazon S3 Glacier",
            "AWS Organizations",
            "policy evaluation logic",
            "temporary session"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Organizations",
            "SCPs",
            "IAM User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Organizations"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how IAM policies interact with Amazon S3 Glacier, detailing policy types like permissions boundaries, SCPs, and session policies, as well as their evaluation logic. It also outlines IAM features supported by S3 Glacier.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What IAM features are supported by Amazon S3 Glacier?",
            "How do permissions boundaries affect IAM policies?",
            "What is the interaction between session policies and identity-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "resource-based policies",
          "service control policies",
          "temporary session",
          "IAM User Guide",
          "Amazon S3 Glacier",
          "permissions boundaries",
          "IAM",
          "policy evaluation logic",
          "identity-based policies",
          "AWS Organizations",
          "SCPs",
          "session policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_282",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nIAM feature S3 Glacier support\nPolicy resources Yes\nPolicy condition keys (service-specific) Yes\nACLs No\nABAC (tags in policies) No\nTemporary credentials Yes\nPrincipal permissions No\nService roles No\nService-linked roles No\nTo get a high-level view of how S3 Glacier and other AWS services work with most IAM features,\nsee AWS services that work with IAM in the IAM User Guide.\nIdentity-based policies for S3 Glacier\nSupports identity-based policies: Yes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role. These policies control what actions users and roles can\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide.\nWith IAM identity-based policies, you can specify allowed or denied actions and resources as well\nas the conditions under which actions are allowed or denied. You can't specify the principal in an\nidentity-based policy because it applies to the user or role to which it is attached. To learn about all\nof the elements that you can use in a JSON policy, see IAM JSON policy elements reference in the\nIAM User Guide.\nIdentity-based policy examples for S3 Glacier\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 288",
      "start_idx": 462500,
      "end_idx": 464022,
      "metadata": {
        "num_sentences": 9,
        "num_words": 245,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Feature Overview",
              "Policy Details"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "IAM",
            "identity-based policies",
            "policy condition keys",
            "temporary credentials",
            "JSON policy",
            "service-linked roles",
            "principal permissions",
            "ABAC",
            "ACLs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS services",
            "API Version 2012-06-01",
            "IAM User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines how Amazon S3 Glacier integrates with IAM features, including support for identity-based policies, policy condition keys, and temporary credentials, while highlighting unsupported features like ACLs and ABAC.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What IAM features are supported by Amazon S3 Glacier?",
            "How do identity-based policies work with S3 Glacier?",
            "What are examples of S3 Glacier identity-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "temporary credentials",
          "ABAC",
          "API Version 2012-06-01",
          "IAM User Guide",
          "ACLs",
          "JSON policy",
          "Amazon S3 Glacier",
          "principal permissions",
          "IAM",
          "identity-based policies",
          "service-linked roles",
          "AWS services",
          "S3 Glacier",
          "policy condition keys"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_283",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResource-based policies within S3 Glacier\nSupports resource-based policies: Yes\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions. You must specify a principal\nin a resource-based policy. Principals can include accounts, users, roles, federated users, or AWS\nservices.\nTo enable cross-account access, you can specify an entire account or IAM entities in another\naccount as the principal in a resource-based policy. Adding a cross-account principal to a resource-\nbased policy is only half of establishing the trust relationship. When the principal and the resource\nare in different AWS accounts, an IAM administrator in the trusted account must also grant\nthe principal entity (user or role) permission to access the resource. They grant permission by\nattaching an identity-based policy to the entity. However, if a resource-based policy grants access\nto a principal in the same account, no additional identity-based policy is required. For more\ninformation, see Cross account resource access in IAM in the IAM User Guide.\nThe S3 Glacier service supports only one type of resource-based policy called a vault policy, which\nis attached to a vault. This policy defines which principals can perform actions on the vault.\nS3 Glacier vault policies manage permissions in the following ways:\n\u2022 Manage user permissions in an account using a single vault policy, instead of more than one\nindividual user policies.\n\u2022 Manage cross-account permissions as an alternative to using IAM roles.\nResource-based policy examples within S3 Glacier\nTo view examples of S3 Glacier resource-based policies, see Resource-based policy examples for\nAmazon S3 Glacier.\nPolicy actions for S3 Glacier\nSupports policy actions: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 289",
      "start_idx": 464022,
      "end_idx": 466232,
      "metadata": {
        "num_sentences": 18,
        "num_words": 336,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Access Management"
            ]
          },
          "keywords": [
            "resource-based policies",
            "IAM",
            "S3 Glacier",
            "vault policy",
            "principal",
            "cross-account access",
            "identity-based policy",
            "permissions",
            "trust relationship",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "vault policy",
            "AWS accounts",
            "IAM roles"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "AWS Policies",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains resource-based policies, focusing on vault policies for managing permissions within and across AWS accounts. It details how these policies work and their role in controlling access to S3 Glacier resources.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are resource-based policies in S3 Glacier?",
            "How do vault policies manage permissions in S3 Glacier?",
            "How can cross-account access be enabled in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Management]",
        "tf_idf_keywords": [
          "resource-based policies",
          "permissions",
          "cross-account access",
          "IAM roles",
          "identity-based policy",
          "Amazon S3 Glacier",
          "Amazon S3",
          "vault policy",
          "IAM",
          "principal",
          "AWS accounts",
          "S3 Glacier",
          "trust relationship"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_284",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nThe Action element of a JSON policy describes the actions that you can use to allow or deny\naccess in a policy. Policy actions usually have the same name as the associated AWS API operation.\nThere are some exceptions, such as permission-only actions that don't have a matching API\noperation. There are also some operations that require multiple actions in a policy. These\nadditional actions are called dependent actions.\nInclude actions in a policy to grant permissions to perform the associated operation.\nTo see a list of S3 Glacier actions, see Actions defined by Amazon S3 Glacier in the Service\nAuthorization Reference.\nPolicy actions in S3 Glacier use the following prefix before the action:\nglacier\nTo specify multiple actions in a single statement, separate them with commas.\n\"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all actions that begin\nwith the word Describe, include the following action:\n\"Action\": \"glacier:GetVault*\"\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier.\nPolicy resources for S3 Glacier\nSupports policy resources: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 290",
      "start_idx": 466232,
      "end_idx": 467727,
      "metadata": {
        "num_sentences": 13,
        "num_words": 227,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "IAM",
              "Permissions"
            ]
          },
          "keywords": [
            "AWS JSON policies",
            "Action element",
            "Policy actions",
            "Dependent actions",
            "glacier",
            "Identity-based policies",
            "S3 Glacier",
            "wildcards",
            "permissions",
            "IAM"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS JSON policies",
            "Service Authorization Reference",
            "IAM",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "IAM Policies",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS JSON Policies"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS JSON policies to manage access permissions for Amazon S3 Glacier, including actions, dependent actions, and the use of wildcards in policy statements.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the policy actions available for Amazon S3 Glacier?",
            "How can I specify multiple actions in a policy statement?",
            "What is the purpose of dependent actions in AWS policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "permissions",
          "Action element",
          "API Version 2012-06-01",
          "Dependent actions",
          "wildcards",
          "Amazon S3 Glacier",
          "Policy actions",
          "Service Authorization Reference",
          "S3 Glacier",
          "glacier",
          "IAM",
          "Identity-based policies",
          "AWS JSON policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_285",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nThe Resource JSON policy element specifies the object or objects to which the action applies.\nStatements must include either a Resource or a NotResource element. As a best practice,\nspecify a resource using its Amazon Resource Name (ARN). You can do this for actions that support\na specific resource type, known as resource-level permissions.\nFor actions that don't support resource-level permissions, such as listing operations, use a wildcard\n(*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nTo see a list of S3 Glacier resource types and their ARNs, see Resources defined by Amazon S3\nGlacier in the Service Authorization Reference. To learn which actions you can specify the ARN of\neach resource, see Actions defined by Amazon S3 Glacier.\nIn S3 Glacier, the primary resource is a vault. S3 Glacier supports policies only at the vault level.\nThat is, in an IAM policy, the Resource value that you specify can be a specific vault or a set of\nvaults in a specific AWS Region. S3 Glacier doesn't support archive-level permissions.\nFor all S3 Glacier actions, Resource specifies the vault on which you want to grant the\npermissions. These resources have unique Amazon Resource Names (ARNs) associated with them\nas shown in the following table, and you can use a wildcard character (*) in the ARN to match vault\nnames that start with the same prefix.\nS3 Glacier provides a set of operations to work with the S3 Glacier resources. For information on\nthe available operations, see API Reference for Amazon S3 Glacier.\nSome S3 Glacier API actions support multiple resources. For example, glacier:AddTagsToVault\naccesses examplevault1 and examplevault2, so a principal must have permissions to access both\nresources. To specify multiple resources in a single statement, separate the ARNs with commas.\n\"Resource\": [\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault1\",\",\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault2\",\"\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 291",
      "start_idx": 467727,
      "end_idx": 469961,
      "metadata": {
        "num_sentences": 21,
        "num_words": 341,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "AWS JSON policies",
            "Resource JSON policy",
            "Amazon Resource Name (ARN)",
            "resource-level permissions",
            "S3 Glacier",
            "vault",
            "wildcard",
            "IAM policy",
            "API actions",
            "AddTagsToVault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS JSON policies",
            "IAM policy",
            "ARN",
            "vaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Control and Permissions",
          "secondary_categories": [
            "Cloud Storage",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS JSON policies"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS JSON policies to define access permissions for Amazon S3 Glacier resources, focusing on vault-level permissions and resource ARNs. It includes examples of specifying multiple resources and using wildcards for resource-level permissions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I specify permissions for Amazon S3 Glacier vaults?",
            "What is the ARN format for S3 Glacier resources?",
            "Can I use wildcards in S3 Glacier resource ARNs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control and Permissions]",
        "tf_idf_keywords": [
          "Amazon Resource Name (ARN)",
          "Resource JSON policy",
          "Amazon S3 Glacier",
          "wildcard",
          "IAM policy",
          "vault",
          "IAM",
          "resource-level permissions",
          "AddTagsToVault",
          "API actions",
          "ARN",
          "vaults",
          "AWS JSON policies",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_286",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n]\nPolicy condition keys for S3 Glacier\nSupports service-specific policy condition keys: Yes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nThe Condition element (or Condition block) lets you specify conditions in which a statement\nis in effect. The Condition element is optional. You can create conditional expressions that use\ncondition operators, such as equals or less than, to match the condition in the policy with values in\nthe request.\nIf you specify multiple Condition elements in a statement, or multiple keys in a single\nCondition element, AWS evaluates them using a logical AND operation. If you specify multiple\nvalues for a single condition key, AWS evaluates the condition using a logical OR operation. All of\nthe conditions must be met before the statement's permissions are granted.\nYou can also use placeholder variables when you specify conditions. For example, you can grant\nan IAM user permission to access a resource only if it is tagged with their IAM user name. For more\ninformation, see IAM policy elements: variables and tags in the IAM User Guide.\nAWS supports global condition keys and service-specific condition keys. To see all AWS global\ncondition keys, see AWS global condition context keys in the IAM User Guide.\nTo see a list of S3 Glacier condition keys, see Condition keys for Amazon S3 Glacier in the Service\nAuthorization Reference. To learn with which actions and resources you can use a condition key, see\nActions defined by Amazon S3 Glacier.\nFor examples of using the glacier\u2013specific condition keys, see Vault Lock Policies.\nACLs in S3 Glacier\nSupports ACLs: No\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 292",
      "start_idx": 469961,
      "end_idx": 472014,
      "metadata": {
        "num_sentences": 19,
        "num_words": 331,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Details",
              "Condition Keys",
              "Access Control"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "policy condition keys",
            "IAM policies",
            "Condition element",
            "AWS JSON policies",
            "logical AND operation",
            "logical OR operation",
            "global condition keys",
            "Vault Lock Policies",
            "ACLs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "Service Authorization Reference",
            "AWS global condition keys",
            "Vault Lock Policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document explains how to use policy condition keys and access control mechanisms for Amazon S3 Glacier, including details on global and service-specific condition keys, logical operations, and ACL support.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are policy condition keys for Amazon S3 Glacier?",
            "How are logical operations applied in IAM policy conditions?",
            "Does S3 Glacier support ACLs for access control?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "Condition element",
          "logical AND operation",
          "IAM User Guide",
          "ACLs",
          "Amazon S3 Glacier",
          "Service Authorization Reference",
          "S3 Glacier",
          "AWS global condition keys",
          "IAM",
          "logical OR operation",
          "policy condition keys",
          "AWS JSON policies",
          "IAM policies",
          "global condition keys",
          "Vault Lock Policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_287",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nABAC with S3 Glacier\nSupports ABAC (tags in policies): No\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions based\non attributes. In AWS, these attributes are called tags. You can attach tags to IAM entities (users or\nroles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then\nyou design ABAC policies to allow operations when the principal's tag matches the tag on the\nresource that they are trying to access.\nABAC is helpful in environments that are growing rapidly and helps with situations where policy\nmanagement becomes cumbersome.\nTo control access based on tags, you provide tag information in the condition element of a policy\nusing the aws:ResourceTag/key-name, aws:RequestTag/key-name, or aws:TagKeys\ncondition keys.\nIf a service supports all three condition keys for every resource type, then the value is Yes for the\nservice. If a service supports all three condition keys for only some resource types, then the value is\nPartial.\nFor more information about ABAC, see Define permissions with ABAC authorization in the IAM User\nGuide. To view a tutorial with steps for setting up ABAC, see Use attribute-based access control\n(ABAC) in the IAM User Guide.\nUsing temporary credentials with S3 Glacier\nSupports temporary credentials: Yes\nSome AWS services don't work when you sign in using temporary credentials. For additional\ninformation, including which AWS services work with temporary credentials, see AWS services that\nwork with IAM in the IAM User Guide.\nYou are using temporary credentials if you sign in to the AWS Management Console using\nany method except a user name and password. For example, when you access AWS using your\ncompany's single sign-on (SSO) link, that process automatically creates temporary credentials. You\nalso automatically create temporary credentials when you sign in to the console as a user and then\nswitch roles. For more information about switching roles, see Switch from a user to an IAM role\n(console) in the IAM User Guide.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 293",
      "start_idx": 472014,
      "end_idx": 474164,
      "metadata": {
        "num_sentences": 18,
        "num_words": 342,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authorization",
              "Access Control",
              "Temporary Credentials"
            ]
          },
          "keywords": [
            "ABAC",
            "tags",
            "IAM",
            "temporary credentials",
            "S3 Glacier",
            "condition keys",
            "policy management",
            "authorization strategy",
            "ResourceTag",
            "RequestTag"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "IAM",
            "API Version 2012-06-01",
            "SSO"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control",
          "secondary_categories": [
            "Identity and Access Management",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier integrates with IAM, focusing on ABAC (Attribute-based Access Control) and the use of temporary credentials. It provides details on tagging, condition keys, and scenarios where temporary credentials are applicable.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "Does Amazon S3 Glacier support ABAC for access control?",
            "How can temporary credentials be used with Amazon S3 Glacier?",
            "What are the condition keys required for ABAC policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Control]",
        "tf_idf_keywords": [
          "temporary credentials",
          "ABAC",
          "ResourceTag",
          "RequestTag",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "SSO",
          "policy management",
          "authorization strategy",
          "IAM",
          "AWS",
          "S3 Glacier",
          "tags",
          "condition keys"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_288",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can then use\nthose temporary credentials to access AWS. AWS recommends that you dynamically generate\ntemporary credentials instead of using long-term access keys. For more information, see\nTemporary security credentials in IAM.\nCross-service principal permissions for S3 Glacier\nSupports forward access sessions (FAS): No\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal.\nWhen you use some services, you might perform an action that then initiates another action in a\ndifferent service. FAS uses the permissions of the principal calling an AWS service, combined with\nthe requesting AWS service to make requests to downstream services. FAS requests are only made\nwhen a service receives a request that requires interactions with other AWS services or resources to\ncomplete. In this case, you must have permissions to perform both actions. For policy details when\nmaking FAS requests, see Forward access sessions.\nService roles for S3 Glacier\nSupports service roles: No\nA service role is an IAM role that a service assumes to perform actions on your behalf. An IAM\nadministrator can create, modify, and delete a service role from within IAM. For more information,\nsee Creating a role to delegate permissions to an AWS service in the IAM User Guide.\nWarning\nChanging the permissions for a service role might break S3 Glacier functionality. Edit\nservice roles only when S3 Glacier provides guidance to do so.\nService-linked roles for S3 Glacier\nSupports service-linked roles: No\nA service-linked role is a type of service role that is linked to an AWS service. The service can\nassume the role to perform an action on your behalf. Service-linked roles appear in your AWS\naccount and are owned by the service. An IAM administrator can view, but not edit the permissions\nfor service-linked roles.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 294",
      "start_idx": 474164,
      "end_idx": 476175,
      "metadata": {
        "num_sentences": 20,
        "num_words": 326,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "temporary credentials",
            "IAM user",
            "service roles",
            "service-linked roles",
            "permissions",
            "FAS",
            "AWS CLI",
            "S3 Glacier",
            "API",
            "IAM"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS CLI",
            "Forward Access Sessions (FAS)",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how Amazon S3 Glacier integrates with IAM, covering temporary credentials, principal permissions, and service roles. It emphasizes avoiding long-term access keys and provides warnings about modifying service roles.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are Forward Access Sessions (FAS) in AWS?",
            "How does Amazon S3 Glacier work with IAM roles?",
            "What are the risks of modifying service roles for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "temporary credentials",
          "Forward Access Sessions (FAS)",
          "permissions",
          "IAM user",
          "API",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS CLI",
          "IAM",
          "service roles",
          "FAS",
          "service-linked roles",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_289",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nFor details about creating or managing service-linked roles, see AWS services that work with IAM.\nFind a service in the table that includes a Yes in the Service-linked role column. Choose the Yes\nlink to view the service-linked role documentation for that service.\nIdentity-based policy examples for Amazon S3 Glacier\nBy default, users and roles don't have permission to create or modify S3 Glacier resources. They\nalso can't perform tasks by using the AWS Management Console, AWS Command Line Interface\n(AWS CLI), or AWS API. To grant users permission to perform actions on the resources that they\nneed, an IAM administrator can create IAM policies. The administrator can then add the IAM\npolicies to roles, and users can assume the roles.\nTo learn how to create an IAM identity-based policy by using these example JSON policy\ndocuments, see Create IAM policies (console) in the IAM User Guide.\nFor details about actions and resource types defined by S3 Glacier, including the format of the\nARNs for each of the resource types, see Actions, resources, and condition keys for Amazon S3\nGlacier in the Service Authorization Reference.\nThe following is an example policy that grants permissions for three S3 Glacier vault-related\nactions (glacier:CreateVault, glacier:DescribeVault and glacier:ListVaults) on\na resource, using the Amazon Resource Name (ARN) that identifies all of the vaults in the us-\nwest-2 AWS Region. ARNs uniquely identify AWS resources. For more information about ARNs\nused with S3 Glacier, see Policy resources for S3 Glacier.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n],\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\"\n}\n]\n}\nIdentity-based policy examples API Version 2012-06-01 295",
      "start_idx": 476175,
      "end_idx": 478032,
      "metadata": {
        "num_sentences": 13,
        "num_words": 276,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "IAM Policies",
              "Examples",
              "Permissions"
            ]
          },
          "keywords": [
            "IAM policies",
            "service-linked roles",
            "Amazon S3 Glacier",
            "AWS Management Console",
            "AWS CLI",
            "ARN",
            "vaults",
            "glacier:CreateVault",
            "glacier:DescribeVault",
            "glacier:ListVaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Management Console",
            "AWS CLI",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference material for creating IAM policies to manage permissions for Amazon S3 Glacier resources, including examples of JSON policy documents and details about ARNs and service-linked roles.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create IAM policies for Amazon S3 Glacier?",
            "What permissions are required to manage S3 Glacier vaults?",
            "What is the format of ARNs used with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "glacier:ListVaults",
          "AWS Management Console",
          "glacier:DescribeVault",
          "Amazon S3 Glacier",
          "glacier:CreateVault",
          "AWS CLI",
          "IAM",
          "vaults",
          "ARN",
          "service-linked roles",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_290",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe policy grants permissions to create, list, and obtain descriptions of vaults in the us-west-2\nRegion. The wildcard character (*) at the end of the ARN means that this statement can match any\nvault name.\nImportant\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) because you don't know the vault name\nuntil after you create the vault.\nTopics\n\u2022 Policy best practices\n\u2022 Using the S3 Glacier console\n\u2022 Allow users to view their own permissions\n\u2022 Customer Managed Policy Examples\nPolicy best practices\nIdentity-based policies determine whether someone can create, access, or delete S3 Glacier\nresources in your account. These actions can incur costs for your AWS account. When you create or\nedit identity-based policies, follow these guidelines and recommendations:\n\u2022 Get started with AWS managed policies and move toward least-privilege permissions \u2013 To\nget started granting permissions to your users and workloads, use the AWS managed policies\nthat grant permissions for many common use cases. They are available in your AWS account. We\nrecommend that you reduce permissions further by defining AWS customer managed policies\nthat are specific to your use cases. For more information, see AWS managed policies or AWS\nmanaged policies for job functions in the IAM User Guide.\n\u2022 Apply least-privilege permissions \u2013 When you set permissions with IAM policies, grant only the\npermissions required to perform a task. You do this by defining the actions that can be taken on\nspecific resources under specific conditions, also known as least-privilege permissions. For more\ninformation about using IAM to apply permissions, see Policies and permissions in IAM in the\nIAM User Guide.\n\u2022 Use conditions in IAM policies to further restrict access \u2013 You can add a condition to your\npolicies to limit access to actions and resources. For example, you can write a policy condition to\nIdentity-based policy examples API Version 2012-06-01 296",
      "start_idx": 478032,
      "end_idx": 480074,
      "metadata": {
        "num_sentences": 14,
        "num_words": 324,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Recommendations",
              "Best Practices",
              "IAM Guidelines"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "IAM policies",
            "least-privilege permissions",
            "AWS managed policies",
            "vault",
            "CreateVault operation",
            "identity-based policies",
            "conditions",
            "permissions",
            "ARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS managed policies",
            "IAM User Guide",
            "us-west-2 Region",
            "glacier:CreateVault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Permissions",
          "secondary_categories": [
            "Identity and Access Management",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document provides guidelines on creating and managing identity-based policies for Amazon S3 Glacier, emphasizing least-privilege permissions and best practices for policy configuration. It explains how to use wildcard characters in ARNs and includes recommendations for applying conditions to IAM policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the best practices for configuring IAM policies for S3 Glacier?",
            "How do wildcard characters work in ARNs for creating vaults?",
            "What is the importance of least-privilege permissions in IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Permissions]",
        "tf_idf_keywords": [
          "least-privilege permissions",
          "conditions",
          "permissions",
          "CreateVault operation",
          "AWS managed policies",
          "IAM User Guide",
          "Amazon S3 Glacier",
          "glacier:CreateVault",
          "vault",
          "IAM",
          "us-west-2 Region",
          "identity-based policies",
          "ARN",
          "S3 Glacier",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_291",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nspecify that all requests must be sent using SSL. You can also use conditions to grant access to\nservice actions if they are used through a specific AWS service, such as AWS CloudFormation. For\nmore information, see IAM JSON policy elements: Condition in the IAM User Guide.\n\u2022 Use IAM Access Analyzer to validate your IAM policies to ensure secure and functional\npermissions \u2013 IAM Access Analyzer validates new and existing policies so that the policies\nadhere to the IAM policy language (JSON) and IAM best practices. IAM Access Analyzer provides\nmore than 100 policy checks and actionable recommendations to help you author secure and\nfunctional policies. For more information, see Validate policies with IAM Access Analyzer in the\nIAM User Guide.\n\u2022 Require multi-factor authentication (MFA) \u2013 If you have a scenario that requires IAM users or\na root user in your AWS account, turn on MFA for additional security. To require MFA when API\noperations are called, add MFA conditions to your policies. For more information, see Secure API\naccess with MFA in the IAM User Guide.\nFor more information about best practices in IAM, see Security best practices in IAM in the IAM User\nGuide.\nUsing the S3 Glacier console\nTo access the Amazon S3 Glacier console, you must have a minimum set of permissions. These\npermissions must allow you to list and view details about the S3 Glacier resources in your AWS\naccount. If you create an identity-based policy that is more restrictive than the minimum required\npermissions, the console won't function as intended for entities (users or roles) with that policy.\nYou don't need to allow minimum console permissions for users that are making calls only to the\nAWS CLI or the AWS API. Instead, allow access to only the actions that match the API operation\nthat they're trying to perform.\nThe S3 Glacier console provides an integrated environment for you to create and manage S3\nGlacier vaults. At a minimum IAM identities that you create must be granted permissions for the\nglacier:ListVaults action to view the S3 Glacier console as shown in the following example.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Action\": [\nIdentity-based policy examples API Version 2012-06-01 297",
      "start_idx": 480074,
      "end_idx": 482322,
      "metadata": {
        "num_sentences": 18,
        "num_words": 371,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Security",
              "Permissions",
              "Policy"
            ]
          },
          "keywords": [
            "IAM",
            "S3 Glacier",
            "Access Analyzer",
            "MFA",
            "IAM policies",
            "API operations",
            "IAM best practices",
            "identity-based policy",
            "glacier:ListVaults",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM Access Analyzer",
            "AWS CloudFormation",
            "IAM User Guide",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS CloudFormation"
          ],
          "mentioned_tools": [
            "IAM Access Analyzer",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains best practices for securing access to Amazon S3 Glacier, including the use of IAM policies, MFA, and permissions required for the S3 Glacier console.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are required to access the S3 Glacier console?",
            "How can I validate IAM policies using IAM Access Analyzer?",
            "How do I secure API access with MFA?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Identity and Access Management]",
        "tf_idf_keywords": [
          "AWS CloudFormation",
          "glacier:ListVaults",
          "permissions",
          "IAM User Guide",
          "API operations",
          "identity-based policy",
          "Amazon S3 Glacier",
          "Access Analyzer",
          "AWS CLI",
          "IAM",
          "MFA",
          "IAM best practices",
          "IAM Access Analyzer",
          "S3 Glacier",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_292",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"glacier:ListVaults\"\n],\n\"Effect\": \"Allow\",\n\"Resource\": \"*\"\n}\n]\n}\nAWS addresses many common use cases by providing standalone IAM policies that are created\nand administered by AWS. Managed policies grant necessary permissions for common use cases so\nyou can avoid having to investigate what permissions are needed. For more information, see AWS\nManaged Policies in the IAM User Guide.\nThe following AWS managed policies, which you can attach to users in your account, are specific to\nS3 Glacier:\n\u2022 AmazonGlacierReadOnlyAccess \u2013 Grants read only access to S3 Glacier through the AWS\nManagement Console.\n\u2022 AmazonGlacierFullAccess \u2013 Grants full access to S3 Glacier through the AWS Management\nConsole.\nYou can also create your own custom IAM policies to allow permissions for S3 Glacier API actions\nand resources. You can attach these custom policies to the custom IAM roles that you create for\nyour S3 Glacier vaults.\nBoth of the S3 Glacier AWS Managed policies discussed in the next section grant permissions for\nglacier:ListVaults.\nFor more information, see Adding permissions to a user in the IAM User Guide.\nAllow users to view their own permissions\nThis example shows how you might create a policy that allows IAM users to view the inline and\nmanaged policies that are attached to their user identity. This policy includes permissions to\ncomplete this action on the console or programmatically using the AWS CLI or AWS API.\n{\nIdentity-based policy examples API Version 2012-06-01 298",
      "start_idx": 482322,
      "end_idx": 483843,
      "metadata": {
        "num_sentences": 12,
        "num_words": 243,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "Permissions",
              "Examples"
            ]
          },
          "keywords": [
            "IAM policies",
            "S3 Glacier",
            "permissions",
            "AWS Managed Policies",
            "AmazonGlacierReadOnlyAccess",
            "AmazonGlacierFullAccess",
            "glacier:ListVaults",
            "custom policies",
            "IAM roles",
            "AWS CLI"
          ],
          "entities": [
            "AWS",
            "S3 Glacier",
            "IAM",
            "AmazonGlacierReadOnlyAccess",
            "AmazonGlacierFullAccess"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Security and Permissions",
          "secondary_categories": [
            "Cloud Storage",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains AWS IAM policies for S3 Glacier, including managed policies and custom policies, and provides examples for granting permissions to users.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the AWS managed policies for S3 Glacier?",
            "How can I create custom IAM policies for S3 Glacier?",
            "What permissions are included in glacier:ListVaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Security and Permissions]",
        "tf_idf_keywords": [
          "glacier:ListVaults",
          "permissions",
          "IAM roles",
          "AWS Managed Policies",
          "AmazonGlacierReadOnlyAccess",
          "AWS CLI",
          "IAM",
          "custom policies",
          "AmazonGlacierFullAccess",
          "AWS",
          "S3 Glacier",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_293",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ViewOwnUserInfo\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetUserPolicy\",\n\"iam:ListGroupsForUser\",\n\"iam:ListAttachedUserPolicies\",\n\"iam:ListUserPolicies\",\n\"iam:GetUser\"\n],\n\"Resource\": [\"arn:aws:iam::*:user/${aws:username}\"]\n},\n{\n\"Sid\": \"NavigateInConsole\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetGroupPolicy\",\n\"iam:GetPolicyVersion\",\n\"iam:GetPolicy\",\n\"iam:ListAttachedGroupPolicies\",\n\"iam:ListGroupPolicies\",\n\"iam:ListPolicyVersions\",\n\"iam:ListPolicies\",\n\"iam:ListUsers\"\n],\n\"Resource\": \"*\"\n}\n]\n}\nCustomer Managed Policy Examples\nIn this section, you can find example user policies that grant permissions for various S3 Glacier\nactions. These policies work when you are using S3 Glacier REST API, the Amazon SDKs, the AWS\nCLI, or, if applicable, the S3 Glacier management console.\nNote\nAll examples use the US West (Oregon) Region (us-west-2) and contain fictitious account\nIDs.\nIdentity-based policy examples API Version 2012-06-01 299",
      "start_idx": 483843,
      "end_idx": 484860,
      "metadata": {
        "num_sentences": 4,
        "num_words": 114,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Example",
              "IAM Permissions"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "IAM",
            "policy",
            "permissions",
            "REST API",
            "AWS CLI",
            "SDKs",
            "Region",
            "resources",
            "actions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "US West (Oregon)",
            "AWS CLI",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides examples of user policies for managing permissions in S3 Glacier using IAM. It includes details on supported actions and resources, and all examples are specific to the US West (Oregon) region.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are example IAM policies for S3 Glacier?",
            "How can I manage permissions for S3 Glacier using IAM?",
            "What actions and resources are supported in S3 Glacier policy examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "resources",
          "permissions",
          "US West (Oregon)",
          "API Version 2012-06-01",
          "actions",
          "Region",
          "Amazon S3 Glacier",
          "SDKs",
          "REST API",
          "AWS CLI",
          "IAM",
          "S3 Glacier",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_294",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExamples\n\u2022 Example 1: Allow a User to Download Archives from a Vault\n\u2022 Example 2: Allow a User to Create a Vault and Configure Notifications\n\u2022 Example 3: Allow a User to Upload Archives to a Specific Vault\n\u2022 Example 4: Allow a User Full Permissions on a Specific Vault\nExample 1: Allow a User to Download Archives from a Vault\nTo download an archive, you first initiate a job to retrieve the archive. After the retrieval job\nis complete, you can download the data. The following example policy grants permissions\nfor the glacier:InitiateJob action to initiate a job (which allows the user to retrieve an\narchive or a vault inventory from the vault), and permissions for the glacier:GetJobOutput\naction to download the retrieved data. The policy also grants permissions to perform the\nglacier:DescribeJob action so that the user can get the job status. For more information, see\nInitiate Job (POST jobs).\nThe policy grants these permissions on a vault named examplevault. You can get the vault ARN\nfrom the Amazon S3 Glacier console, or programmatically by calling either the Describe Vault (GET\nvault) or the List Vaults (GET vaults) API actions.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:InitiateJob\",\n\"glacier:GetJobOutput\",\n\"glacier:DescribeJob\"]\n}\n]\n}\nExample 2: Allow a User to Create a Vault and Configure Notifications\nThe following example policy grants permissions to create a vault in the us-west-2 Region as\nspecified in the Resource element and configure notifications. For more information about\nIdentity-based policy examples API Version 2012-06-01 300",
      "start_idx": 484860,
      "end_idx": 486576,
      "metadata": {
        "num_sentences": 9,
        "num_words": 260,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Example",
              "Permissions Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "permissions",
            "glacier:InitiateJob",
            "glacier:GetJobOutput",
            "glacier:DescribeJob",
            "vault ARN",
            "notifications",
            "Region",
            "Identity-based policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault ARN",
            "us-west-2 Region",
            "Describe Vault API",
            "List Vaults API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Permissions",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides example policies for configuring user permissions in Amazon S3 Glacier, including downloading archives, creating vaults, and configuring notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can a user download archives from an Amazon S3 Glacier vault?",
            "What permissions are required to create a vault and configure notifications in Amazon S3 Glacier?",
            "How do I retrieve a vault ARN programmatically?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Permissions]",
        "tf_idf_keywords": [
          "List Vaults API",
          "permissions",
          "Describe Vault API",
          "Region",
          "glacier:GetJobOutput",
          "Amazon S3 Glacier",
          "glacier:InitiateJob",
          "Identity-based policy",
          "vault",
          "us-west-2 Region",
          "glacier:DescribeJob",
          "notifications",
          "vault ARN"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_295",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nworking with notifications, see Configuring Vault Notifications in Amazon S3 Glacier. The policy\nalso grants permissions to list vaults in the AWS Region and get a specific vault description.\nImportant\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) in the Resource value because you\ndon't know the vault name until after you create the vault.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\",\n\"Action\":[\"glacier:CreateVault\",\n\"glacier:SetVaultNotifications\",\n\"glacier:GetVaultNotifications\",\n\"glacier:DeleteVaultNotifications\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"]\n}\n]\n}\nExample 3: Allow a User to Upload Archives to a Specific Vault\nThe following example policy grants permissions to upload archives to a specific vault in the\nus-west-2 Region. These permissions allow a user to upload an archive all at once using the\nUpload Archive (POST archive) API operation or in parts using the Initiate Multipart Upload (POST\nmultipart-uploads) API operation.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\nIdentity-based policy examples API Version 2012-06-01 301",
      "start_idx": 486576,
      "end_idx": 487924,
      "metadata": {
        "num_sentences": 6,
        "num_words": 167,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Configuration",
              "Permissions"
            ]
          },
          "keywords": [
            "vault",
            "permissions",
            "policy",
            "CreateVault",
            "SetVaultNotifications",
            "Resource",
            "Action",
            "glacier",
            "Upload Archive",
            "Multipart Upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "arn:aws:glacier:us-west-2:123456789012:vaults/*",
            "examplevault",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Policies",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of IAM policies for configuring permissions in Amazon S3 Glacier, including creating vaults and uploading archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What permissions are required to upload archives to a specific vault?",
            "How do I create a vault using IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Upload Archive",
          "permissions",
          "examplevault",
          "API Version 2012-06-01",
          "Action",
          "Amazon S3 Glacier",
          "SetVaultNotifications",
          "vault",
          "arn:aws:glacier:us-west-2:123456789012:vaults/*",
          "glacier",
          "Resource",
          "Multipart Upload",
          "CreateVault",
          "AWS Region",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_296",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Action\":[\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:UploadMultipartPart\",\n\"glacier:ListParts\",\n\"glacier:ListMultipartUploads\",\n\"glacier:CompleteMultipartUpload\"]\n}\n]\n}\nExample 4: Allow a User Full Permissions on a Specific Vault\nThe following example policy grants permissions for all S3 Glacier actions on a vault named\nexamplevault.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:*\"]\n}\n]\n}\nResource-based policy examples for Amazon S3 Glacier\nA S3 Glacier vault can have one vault access policy and one Vault Lock policy associated with it.\nA Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault. A Vault Lock policy is vault access policy that can be locked. After you\nlock a Vault Lock policy, the policy can't be changed. You can use a Vault Lock Policy to enforce\ncompliance controls.\nTopics\n\u2022 Vault Access Policies\n\u2022 Vault Lock Policies\nResource-based policy examples API Version 2012-06-01 302",
      "start_idx": 487924,
      "end_idx": 489062,
      "metadata": {
        "num_sentences": 7,
        "num_words": 152,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "Vault Lock policy",
            "resource-based policy",
            "permissions",
            "compliance controls",
            "glacier:UploadArchive",
            "vault",
            "policy",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "examplevault",
            "arn:aws:glacier",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of resource-based policies for Amazon S3 Glacier, including vault access policies and Vault Lock policies for managing permissions and enforcing compliance controls.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I grant full permissions on a specific Amazon S3 Glacier vault?",
            "What is the difference between a vault access policy and a Vault Lock policy?",
            "What actions can be performed on an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "Vault Lock policy",
          "permissions",
          "examplevault",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "compliance controls",
          "vault",
          "glacier:UploadArchive",
          "Vault Lock",
          "vault access policy",
          "arn:aws:glacier",
          "resource-based policy",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_297",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nVault Access Policies\nAn Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault.\nYou can create one vault access policy for each vault to manage permissions. You can modify\npermissions in a vault access policy at any time. S3 Glacier also supports a Vault Lock policy on\neach vault that, after you lock it, cannot be altered. For more information about working with Vault\nLock policies, see Vault Lock Policies.\nExamples\n\u2022 Example 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\n\u2022 Example 2: Grant Cross-Account Permissions for MFA Delete Operations\nExample 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\nThe following example policy grants cross-account permissions to two AWS accounts for a set of S3\nGlacier operations on a vault named examplevault.\nNote\nThe account that owns the vault is billed for all costs associated with the vault. All requests,\ndata transfer, and retrieval costs made by allowed external accounts are billed to the\naccount that owns the vault.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\":\"cross-account-upload\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\",\n\"arn:aws:iam::444455556666:root\"\n]\n},\n\"Effect\":\"Allow\",\n\"Action\": [\nResource-based policy examples API Version 2012-06-01 303",
      "start_idx": 489062,
      "end_idx": 490440,
      "metadata": {
        "num_sentences": 9,
        "num_words": 203,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Management",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault access policy",
            "Vault Lock policy",
            "cross-account permissions",
            "MFA Delete",
            "resource-based policy",
            "AWS accounts",
            "permissions",
            "data transfer",
            "retrieval costs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS accounts",
            "examplevault",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "AWS Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 Glacier vault access policies to manage permissions, including examples of cross-account permissions and Vault Lock policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault access policy in Amazon S3 Glacier?",
            "What is a Vault Lock policy and how does it work?",
            "How can I grant cross-account permissions for S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "Vault Lock policy",
          "permissions",
          "examplevault",
          "AWS IAM",
          "Amazon S3 Glacier",
          "IAM",
          "MFA Delete",
          "Vault Lock",
          "data transfer",
          "retrieval costs",
          "vault access policy",
          "AWS accounts",
          "S3 Glacier",
          "resource-based policy",
          "cross-account permissions"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_298",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:AbortMultipartUpload\",\n\"glacier:CompleteMultipartUpload\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n]\n}\n]\n}\nExample 2: Grant Cross-Account Permissions for MFA Delete Operations\nYou can use multi-factor authentication (MFA) to protect your S3 Glacier resources. To provide\nan extra level of security, MFA requires users to prove physical possession of an MFA device by\nproviding a valid MFA code. For more information about configuring MFA access, see Configuring\nMFA-Protected API Access in the IAM User Guide.\nThe example policy grants an AWS account with temporary credentials permission to delete\narchives from a vault named examplevault, provided the request is authenticated with an MFA\ndevice. The policy uses the aws:MultiFactorAuthPresent condition key to specify this\nadditional requirement. For more information, see Available Keys for Conditions in the IAM User\nGuide.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"add-mfa-delete-requirement\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\"\n]\n},\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:Delete*\"\n],\nResource-based policy examples API Version 2012-06-01 304",
      "start_idx": 490440,
      "end_idx": 491712,
      "metadata": {
        "num_sentences": 7,
        "num_words": 160,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Configuration",
              "Security"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "MFA",
            "IAM",
            "vault",
            "policy",
            "permissions",
            "aws:MultiFactorAuthPresent",
            "temporary credentials",
            "delete operations",
            "arn"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "examplevault",
            "arn:aws:iam::123456789012:root",
            "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "IAM Policies",
            "Multi-Factor Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of configuring IAM policies to manage permissions for Amazon S3 Glacier, including cross-account permissions and MFA-protected delete operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure MFA-protected delete operations in Amazon S3 Glacier?",
            "What IAM policies are required for managing S3 Glacier vaults?",
            "How can I grant cross-account permissions for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "temporary credentials",
          "permissions",
          "examplevault",
          "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault",
          "delete operations",
          "Amazon S3 Glacier",
          "arn",
          "arn:aws:iam::123456789012:root",
          "vault",
          "MFA",
          "IAM",
          "aws:MultiFactorAuthPresent",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_299",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/\nexamplevault\"\n],\n\"Condition\": {\n\"Bool\": {\n\"aws:MultiFactorAuthPresent\": true\n}\n}\n}\n]\n}\nVault Lock Policies\nAn Amazon S3 Glacier (S3 Glacier) vault can have one resource-based vault access policy and one\nVault Lock policy attached to it. A Vault Lock policy is a vault access policy that you can lock. Using\na Vault Lock policy can help you enforce regulatory and compliance requirements. Amazon S3\nGlacier provides a set of API operations for you to manage the Vault Lock policies, see Locking a\nVault by Using the S3 Glacier API.\nAs an example of a Vault Lock policy, suppose that you are required to retain archives for one\nyear before you can delete them. To implement this requirement, you can create a Vault Lock\npolicy that denies users permissions to delete an archive until the archive has existed for one\nyear. You can test this policy before locking it down. After you lock the policy, the policy becomes\nimmutable. For more information about the locking process, see Vault Lock Policies. If you want to\nmanage other user permissions that can be changed, you can use the vault access policy (see Vault\nAccess Policies).\nYou can use the S3 Glacier API, Amazon SDKs, AWS CLI, or the S3 Glacier console to create and\nmanage Vault Lock policies. For a list of S3 Glacier actions allowed for vault resource-based\npolicies, see API Permissions Reference.\nExamples\n\u2022 Example 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\n\u2022 Example 2: Deny Deletion Permissions Based on a Tag\nResource-based policy examples API Version 2012-06-01 305",
      "start_idx": 491712,
      "end_idx": 493364,
      "metadata": {
        "num_sentences": 13,
        "num_words": 272,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Regulatory Compliance",
              "Policy Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Lock policy",
            "vault access policy",
            "regulatory compliance",
            "AWS CLI",
            "Amazon SDKs",
            "API operations",
            "resource-based policy",
            "archive retention",
            "immutability"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS CLI",
            "Amazon SDKs",
            "API Permissions Reference"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Compliance Enforcement",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs",
            "S3 Glacier console"
          ]
        },
        "semantic": {
          "summary": "The documentation explains Vault Lock policies in Amazon S3 Glacier, which enforce compliance by locking access policies to prevent archive deletion before a specified retention period. It includes examples and API tools for policy management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a Vault Lock policy in Amazon S3 Glacier?",
            "What is the process to enforce archive retention compliance in S3 Glacier?",
            "Which tools can be used to manage Vault Lock policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "Vault Lock policy",
          "archive retention",
          "Amazon SDKs",
          "API operations",
          "Amazon S3 Glacier",
          "AWS CLI",
          "Vault Lock",
          "vault access policy",
          "immutability",
          "resource-based policy",
          "regulatory compliance",
          "API Permissions Reference"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_300",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\nSuppose that you have a regulatory requirement to retain archives for up to one year before you\ncan delete them. You can enforce that requirement by implementing the following Vault Lock\npolicy. The policy denies the glacier:DeleteArchive action on the examplevault vault if the\narchive being deleted is less than one year old. The policy uses the S3 Glacier-specific condition key\nArchiveAgeInDays to enforce the one-year retention requirement.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\": \"deny-based-on-archive-age\",\n\"Principal\": \"*\",\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThan\" : {\n\"glacier:ArchiveAgeInDays\" : \"365\"\n}\n}\n}\n]\n}\nExample 2: Deny Deletion Permissions Based on a Tag\nSuppose that you have a time-based retention rule that an archive can be deleted if it is less than a\nyear old. At the same time, suppose that you need to place a legal hold on your archives to prevent\ndeletion or modification for an indefinite duration during a legal investigation. In this case, the\nlegal hold takes precedence over the time-based retention rule specified in the Vault Lock policy.\nTo put these two rules in place, the following example policy has two statements:\n\u2022 The first statement denies deletion permissions for everyone, locking the vault. This lock is\nperformed by using the LegalHold tag.\nResource-based policy examples API Version 2012-06-01 306",
      "start_idx": 493364,
      "end_idx": 494954,
      "metadata": {
        "num_sentences": 10,
        "num_words": 235,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy",
              "Configuration",
              "Use Case"
            ]
          },
          "keywords": [
            "Vault Lock policy",
            "glacier:DeleteArchive",
            "ArchiveAgeInDays",
            "retention requirement",
            "legal hold",
            "time-based retention rule",
            "S3 Glacier",
            "Condition",
            "Principal",
            "Resource"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "LegalHold tag",
            "examplevault",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Data Retention",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of Vault Lock policies in Amazon S3 Glacier to enforce data retention rules and prevent unauthorized deletions based on conditions like archive age or legal holds.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enforce a one-year retention policy in Amazon S3 Glacier?",
            "What is the role of the ArchiveAgeInDays condition in Vault Lock policies?",
            "How do I prevent deletions during a legal investigation in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "legal hold",
          "Vault Lock policy",
          "ArchiveAgeInDays",
          "Condition",
          "examplevault",
          "API Version 2012-06-01",
          "LegalHold tag",
          "Amazon S3 Glacier",
          "time-based retention rule",
          "Vault Lock",
          "glacier:DeleteArchive",
          "Principal",
          "Resource",
          "S3 Glacier",
          "retention requirement"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_302",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\n}\n}\n]\n}\nTroubleshooting Amazon S3 Glacier identity and access\nUse the following information to help you diagnose and fix common issues that you might\nencounter when working with S3 Glacier and IAM.\nTopics\n\u2022 I am not authorized to perform an action in S3 Glacier\n\u2022 I am not authorized to perform iam:PassRole\n\u2022 I want to allow people outside of my AWS account to access my S3 Glacier resources\nI am not authorized to perform an action in S3 Glacier\nIf you receive an error that you're not authorized to perform an action, your policies must be\nupdated to allow you to perform the action.\nThe following example error occurs when the mateojackson IAM user tries to use the console\nto view details about a fictional my-example-widget resource but doesn't have the fictional\nglacier:GetWidget permissions.\nUser: arn:aws:iam::123456789012:user/mateojackson is not authorized to perform:\nglacier:GetWidget on resource: my-example-widget\nIn this case, the policy for the mateojackson user must be updated to allow access to the my-\nexample-widget resource by using the glacier:GetWidget action.\nIf you need help, contact your AWS administrator. Your administrator is the person who provided\nyou with your sign-in credentials.\nI am not authorized to perform iam:PassRole\nIf you receive an error that you're not authorized to perform the iam:PassRole action, your\npolicies must be updated to allow you to pass a role to S3 Glacier.\nTroubleshooting API Version 2012-06-01 308",
      "start_idx": 495888,
      "end_idx": 497390,
      "metadata": {
        "num_sentences": 8,
        "num_words": 241,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Troubleshooting",
            "subtypes": [
              "Error Diagnosis",
              "Policy Update"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "IAM",
            "iam:PassRole",
            "glacier:GetWidget",
            "AWS administrator",
            "identity and access",
            "policy update",
            "access control",
            "error diagnosis",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "mateojackson",
            "arn:aws:iam",
            "my-example-widget"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Storage",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides troubleshooting guidance for common identity and access issues encountered when working with Amazon S3 Glacier and IAM, including authorization errors and policy updates.",
          "intents": [
            "Debug",
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I resolve authorization errors in S3 Glacier?",
            "What does the iam:PassRole error mean and how can I fix it?",
            "How can I update IAM policies to allow specific actions in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Troubleshooting] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "error diagnosis",
          "arn:aws:iam",
          "AWS administrator",
          "API Version 2012-06-01",
          "policy update",
          "Amazon S3 Glacier",
          "mateojackson",
          "my-example-widget",
          "IAM",
          "glacier:GetWidget",
          "identity and access",
          "S3 Glacier",
          "access control",
          "iam:PassRole"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_303",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSome AWS services allow you to pass an existing role to that service instead of creating a new\nservice role or service-linked role. To do this, you must have permissions to pass the role to the\nservice.\nThe following example error occurs when an IAM user named marymajor tries to use the console\nto perform an action in S3 Glacier. However, the action requires the service to have permissions\nthat are granted by a service role. Mary does not have permissions to pass the role to the service.\nUser: arn:aws:iam::123456789012:user/marymajor is not authorized to perform:\niam:PassRole\nIn this case, Mary's policies must be updated to allow her to perform the iam:PassRole action.\nIf you need help, contact your AWS administrator. Your administrator is the person who provided\nyou with your sign-in credentials.\nI want to allow people outside of my AWS account to access my S3 Glacier\nresources\nYou can create a role that users in other accounts or people outside of your organization can use to\naccess your resources. You can specify who is trusted to assume the role. For services that support\nresource-based policies or access control lists (ACLs), you can use those policies to grant people\naccess to your resources.\nTo learn more, consult the following:\n\u2022 To learn whether S3 Glacier supports these features, see How Amazon S3 Glacier works with IAM.\n\u2022 To learn how to provide access to your resources across AWS accounts that you own, see\nProviding access to an IAM user in another AWS account that you own in the IAM User Guide.\n\u2022 To learn how to provide access to your resources to third-party AWS accounts, see Providing\naccess to AWS accounts owned by third parties in the IAM User Guide.\n\u2022 To learn how to provide access through identity federation, see Providing access to externally\nauthenticated users (identity federation) in the IAM User Guide.\n\u2022 To learn the difference between using roles and resource-based policies for cross-account access,\nsee Cross account resource access in IAM in the IAM User Guide.\nTroubleshooting API Version 2012-06-01 309",
      "start_idx": 497390,
      "end_idx": 499490,
      "metadata": {
        "num_sentences": 17,
        "num_words": 350,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Explanation",
              "Permission Guidance",
              "Cross-Account Access"
            ]
          },
          "keywords": [
            "IAM",
            "PassRole",
            "S3 Glacier",
            "service role",
            "resource-based policies",
            "identity federation",
            "cross-account access",
            "ACLs",
            "AWS administrator",
            "third-party accounts"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "arn:aws:iam::123456789012:user/marymajor",
            "AWS administrator",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Amazon S3 Glacier",
            "Cross-Account Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to resolve an IAM PassRole permission error and provides guidance on granting cross-account and external access to Amazon S3 Glacier resources using roles and policies.",
          "intents": [
            "Debug",
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I resolve the iam:PassRole permission error?",
            "How can I allow cross-account access to S3 Glacier resources?",
            "What are the differences between roles and resource-based policies for cross-account access?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "resource-based policies",
          "AWS administrator",
          "third-party accounts",
          "identity federation",
          "cross-account access",
          "arn:aws:iam::123456789012:user/marymajor",
          "API Version 2012-06-01",
          "ACLs",
          "Amazon S3 Glacier",
          "service role",
          "IAM",
          "S3 Glacier",
          "PassRole"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_304",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAPI Permissions Reference\nWhen you are setting up How Amazon S3 Glacier works with IAM and writing a permissions policy\nthat you can attach to an IAM identity (identity-based policies) or a resource (resource-based\npolicies), you can use the following table as a reference. The list includes each S3 Glacier API\noperation, the corresponding actions for which you can grant permissions to perform the action,\nand the AWS resource for which you can grant the permissions.\nYou specify the actions in the policy's Action element, and you specify the resource value in the\npolicy's Resource element. Also, you can use the IAM policy language Condition element to\nspecify when a policy should take effect.\nTo specify an action, use the glacier: prefix followed by the API operation name (for example,\nglacier:CreateVault). For most S3 Glacier actions, Resource is the vault on which you want\nto grant the permissions. You specify a vault as the Resource value by using the vault ARN. To\nexpress conditions, you use predefined condition keys. For more information, see Resource-based\npolicies within S3 Glacier.\nThe following table lists actions that can be used with identity-based policies and resource-based\npolicies.\nNote\nSome actions can only be used with identity-based policies. These actions are marked by an\nasterisk (*) after the name of the API operation in the first column.\nS3 Glacier API and Required Permissions for Actions\nAbort Multipart Upload (DELETE uploadID)\nRequired Permissions (API Actions): glacier:AbortMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 310",
      "start_idx": 499490,
      "end_idx": 501320,
      "metadata": {
        "num_sentences": 13,
        "num_words": 264,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "IAM Policies",
              "API Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "IAM",
            "permissions policy",
            "identity-based policies",
            "resource-based policies",
            "glacier:CreateVault",
            "vault ARN",
            "Condition element",
            "predefined condition keys",
            "Abort Multipart Upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "API operation",
            "vault ARN",
            "AWS resource"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Permissions",
          "secondary_categories": [
            "IAM Policies",
            "AWS API Reference"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides a reference for setting up IAM permissions policies for S3 Glacier API operations, detailing actions, resources, and conditions for granting permissions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are required for S3 Glacier API operations?",
            "How do I specify resources and actions in an IAM policy for S3 Glacier?",
            "What condition keys can be used with S3 Glacier permissions policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Permissions]",
        "tf_idf_keywords": [
          "resource-based policies",
          "Condition element",
          "predefined condition keys",
          "permissions policy",
          "AWS resource",
          "Abort Multipart Upload",
          "Amazon S3 Glacier",
          "glacier:CreateVault",
          "IAM",
          "identity-based policies",
          "vault ARN",
          "API operation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_305",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nLogging and Monitoring in Amazon S3 Glacier\nMonitoring is an important part of maintaining the reliability, availability, and performance of\nAmazon S3 Glacier (S3 Glacier) and your AWS solutions. You should collect monitoring data from\nall of the parts of your AWS solution so that you can more easily identify and debug the source of a\nfailure if one occurs. AWS provides the following tools for monitoring your S3 Glacier resources and\nresponding to potential incidents:\nAmazon CloudWatch Alarms\nWhen using S3 Glacier via Amazon S3, you can use Amazon CloudWatch alarms to watch a\nsingle metric over a time period that you specify. If the metric exceeds a given threshold, a\nnotification is sent to an Amazon SNS topic or AWS Auto Scaling policy. CloudWatch alarms do\nnot invoke actions because they are in a particular state. Rather the state must have changed\nand been maintained for a specified number of periods. For more information, see Monitoring\nMetrics with Amazon CloudWatch.\nAWS CloudTrail Logs\nCloudTrail provides a record of actions taken by a user, role, or an AWS service in S3 Glacier.\nCloudTrail captures all API calls for S3 Glacier as events, including calls from the S3 Glacier\nconsole and from code calls to the S3 Glacier APIs. For more information, see Logging Amazon\nS3 Glacier API Calls with AWS CloudTrail.\nAWS Trusted Advisor\nTrusted Advisor draws upon best practices learned from serving hundreds of thousands of AWS\ncustomers. Trusted Advisor inspects your AWS environment and then makes recommendations\nwhen opportunities exist to save money, improve system availability and performance, or help\nclose security gaps. All AWS customers have access to five Trusted Advisor checks. Customers\nwith a Business or Enterprise support plan can view all Trusted Advisor checks.\nFor more information, see AWS Trusted Advisor in the AWS Support User Guide.\nLogging and Monitoring API Version 2012-06-01 318",
      "start_idx": 510128,
      "end_idx": 512091,
      "metadata": {
        "num_sentences": 16,
        "num_words": 315,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Monitoring",
              "Logging",
              "Best Practices"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CloudWatch alarms",
            "AWS CloudTrail",
            "Trusted Advisor",
            "monitoring",
            "logging",
            "AWS solutions",
            "SNS topic",
            "API calls",
            "AWS Auto Scaling"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon CloudWatch",
            "AWS CloudTrail",
            "AWS Trusted Advisor",
            "AWS Auto Scaling"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Monitoring and Logging",
          "secondary_categories": [
            "Cloud Best Practices",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS Trusted Advisor",
            "Amazon SNS",
            "AWS Auto Scaling"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the tools and best practices for logging and monitoring in Amazon S3 Glacier, including CloudWatch alarms, CloudTrail logs, and Trusted Advisor recommendations.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I monitor Amazon S3 Glacier resources?",
            "What tools does AWS provide for logging in S3 Glacier?",
            "How does Trusted Advisor help with S3 Glacier monitoring?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Monitoring and Logging]",
        "tf_idf_keywords": [
          "logging",
          "monitoring",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "Amazon CloudWatch",
          "CloudWatch alarms",
          "Trusted Advisor",
          "AWS Auto Scaling",
          "AWS solutions",
          "AWS Trusted Advisor",
          "SNS topic",
          "API calls"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_306",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCompliance Validation for Amazon S3 Glacier\nThe security and compliance of Amazon S3 Glacier (S3 Glacier) is assessed by third-party auditors\nas part of multiple AWS compliance programs, including the following:\n\u2022 System and Organization Controls (SOC)\n\u2022 Payment Card Industry Data Security Standard (PCI DSS)\n\u2022 Federal Risk and Authorization Management Program (FedRAMP)\n\u2022 Health Insurance Portability and Accountability Act (HIPAA)\nAWS provides a frequently updated list of AWS services in scope of specific compliance programs at\nAWS Services in Scope by Compliance Program.\nThird-party audit reports are available for you to download using AWS Artifact. For more\ninformation, see Downloading Reports in AWS Artifact in the AWS Artifact User Guide.\nFor more information about AWS compliance programs, see AWS Compliance Programs.\nYour compliance responsibility when using S3 Glacier is determined by the sensitivity of your\ndata, your organization\u2019s compliance objectives, and applicable laws and regulations. If your use\nof S3 Glacier is subject to compliance with standards like HIPAA, PCI, or FedRAMP, AWS provides\nresources to help:\n\u2022 S3 Glacier Vault Lock allows you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a vault lock policy. You can specify controls such as \u201cwrite once read\nmany\u201d (WORM) in a vault lock policy and lock the policy from future edits. After the policy is\nlocked, it can no longer be changed. Vault lock policies can help you comply with regulatory\nframeworks such as SEC17a-4 and HIPAA.\n\u2022 Security and Compliance Quick Start Guides discuss architectural considerations and steps for\ndeploying security- and compliance-focused baseline environments on AWS.\n\u2022 Architecting for HIPAA Security and Compliance outlines how companies use AWS to help them\nmeet HIPAA requirements.\n\u2022 The AWS Well-Architected Tool (AWS WA Tool) is a service in the cloud that provides a consistent\nprocess for you to review and measure your architecture using AWS best practices. The AWS WA\nTool provides recommendations for making your workloads more reliable, secure, efficient, and\ncost-effective.\nCompliance Validation API Version 2012-06-01 319",
      "start_idx": 512091,
      "end_idx": 514324,
      "metadata": {
        "num_sentences": 14,
        "num_words": 339,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Compliance",
              "Security",
              "Regulatory"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "compliance",
            "security",
            "vault lock",
            "HIPAA",
            "PCI DSS",
            "FedRAMP",
            "SOC",
            "WORM",
            "AWS Artifact"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Artifact",
            "AWS Well-Architected Tool",
            "HIPAA",
            "FedRAMP"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Compliance",
          "secondary_categories": [
            "Cloud Security",
            "Data Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Artifact",
            "AWS Well-Architected Tool"
          ],
          "mentioned_tools": [
            "AWS WA Tool"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of compliance and security features for Amazon S3 Glacier, highlighting its alignment with various regulatory frameworks and tools to assist with compliance responsibilities.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier support compliance with HIPAA?",
            "What is the purpose of the S3 Glacier Vault Lock feature?",
            "Where can I find audit reports for AWS compliance programs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Compliance]",
        "tf_idf_keywords": [
          "vault lock",
          "AWS Well-Architected Tool",
          "Amazon S3 Glacier",
          "PCI DSS",
          "FedRAMP",
          "compliance",
          "SOC",
          "AWS Artifact",
          "HIPAA",
          "security",
          "WORM"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_308",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResilience in Amazon S3 Glacier\nThe AWS global infrastructure is built around Regions and Availability Zones. AWS Regions provide\nmultiple, physically separated and isolated Availability Zones that are connected with low latency,\nhigh throughput, and highly redundant networking. These Availability Zones offer you an effective\nway to design and operate applications and databases. They are more highly available, fault\ntolerant, and scalable than traditional single data center infrastructures or multi-data center\ninfrastructures. S3 Glacier redundantly stores data in multiple devices spanning a minimum of\nthree Availability Zones. To increase durability, S3 Glacier synchronously stores your data across\nmultiple AZs before confirming a successful upload.\nFor more information about AWS Regions and Availability Zones, see AWS Global Infrastructure.\nResilience API Version 2012-06-01 321",
      "start_idx": 514852,
      "end_idx": 515780,
      "metadata": {
        "num_sentences": 8,
        "num_words": 127,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Resilience",
              "Infrastructure Design"
            ]
          },
          "keywords": [
            "AWS Regions",
            "Availability Zones",
            "S3 Glacier",
            "resilience",
            "fault tolerance",
            "durability",
            "redundancy",
            "data synchronization",
            "global infrastructure",
            "high throughput"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Regions",
            "Availability Zones",
            "AWS Global Infrastructure",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Infrastructure Design",
            "Data Resilience"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Global Infrastructure"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how AWS's global infrastructure, built around Regions and Availability Zones, ensures resilience, durability, and fault tolerance by redundantly storing data across multiple Availability Zones.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier ensure data durability?",
            "What role do AWS Availability Zones play in data resilience?",
            "How is data synchronized across multiple Availability Zones in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Regions",
          "resilience",
          "data synchronization",
          "API Version 2012-06-01",
          "high throughput",
          "Amazon S3 Glacier",
          "fault tolerance",
          "durability",
          "AWS Global Infrastructure",
          "S3 Glacier",
          "global infrastructure",
          "redundancy",
          "Availability Zones"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_309",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nInfrastructure Security in Amazon S3 Glacier\nAs a managed service, Amazon S3 Glacier (S3 Glacier) is protected by the AWS global network\nsecurity procedures that are described in the Amazon Web Services: Overview of Security\nProcesses.\nAccess to S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2. We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic\nCurve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later support\nthese modes. Additionally, requests must be signed using an access key ID and a secret access key\nthat is associated with an IAM principal, or you can use the AWS Security Token Service (AWS STS)\nto generate temporary security credentials to sign requests.\nVPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon S3 VPC endpoints if you\naccess S3 Glacier as a storage tier integrated with Amazon S3.\nFor more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide.\nInfrastructure Security API Version 2012-06-01 322",
      "start_idx": 515780,
      "end_idx": 517507,
      "metadata": {
        "num_sentences": 12,
        "num_words": 267,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Security",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "TLS 1.2",
            "TLS 1.3",
            "Perfect Forward Secrecy",
            "VPC endpoints",
            "AWS PrivateLink",
            "IAM principal",
            "AWS STS",
            "Object Lifecycle Management",
            "Ephemeral Diffie-Hellman"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Security Token Service",
            "Amazon S3",
            "Amazon VPC",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "AWS Networking",
            "IAM and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3",
            "AWS Security Token Service"
          ],
          "mentioned_tools": [
            "Java 7"
          ]
        },
        "semantic": {
          "summary": "This documentation details the infrastructure security measures and access requirements for Amazon S3 Glacier, including TLS protocols, VPC endpoints, and IAM-based authentication mechanisms.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What TLS protocols are required for accessing Amazon S3 Glacier?",
            "How can I use VPC endpoints with Amazon S3 Glacier?",
            "What security credentials are needed to sign requests to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "AWS Security Token Service",
          "Ephemeral Diffie-Hellman",
          "Amazon S3 Glacier",
          "Amazon S3",
          "AWS STS",
          "Object Lifecycle Management",
          "TLS 1.2",
          "AWS PrivateLink",
          "TLS 1.3",
          "Amazon VPC",
          "Perfect Forward Secrecy",
          "VPC endpoints",
          "IAM principal"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_310",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier Data Retrieval Policies\nWith Amazon S3 Glacier data retrieval policies, you can easily set data retrieval quotas and manage\nthe data retrieval activities across your AWS account in each AWS Region. For more information\nabout S3 Glacier data retrieval charges, see S3 Glacier pricing.\nImportant\nA data retrieval policy applies only to Standard retrievals and manages retrieval requests\nmade directly to S3 Glacier.\nFor more information about the S3 Glacier storage classes, see Storage classes for archiving\nobjects and Transitioning objects in the Amazon Simple Storage Service User Guide.\nTopics\n\u2022 Choosing an S3 Glacier Data Retrieval Policy\n\u2022 Using the S3 Glacier Console to Set Up a Data Retrieval Policy\n\u2022 Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy\nChoosing an S3 Glacier Data Retrieval Policy\nYou can choose from three types of S3 Glacier data retrieval policies: No Retrieval Limit, Free Tier\nOnly, and Max Retrieval Rate.\nNo Retrieval Limit is the default data retrieval policy that's used for retrievals. If you use the No\nRetrieval Limit policy, no retrieval quota is set, and all valid data retrieval requests are accepted.\nBy using a Free Tier Only policy, you can keep your retrievals within your daily AWS Free Tier\nallowance and not incur any data retrieval costs. If you want to retrieve more data than is in your\nAWS Free Tier allowance, you can use a Max Retrieval Rate policy to set a bytes-per-hour retrieval-\nrate quota. The Max Retrieval Rate policy ensures that the peak retrieval rate from all retrieval jobs\nacross your account in an AWS Region does not exceed the bytes-per-hour quota that you set.\nWith both the Free Tier Only and Max Retrieval Rate policies, data retrieval requests that exceed\nthe retrieval quotas that you specified are not accepted. If you use a Free Tier Only policy, S3\nGlacier synchronously rejects retrieval requests that exceed your AWS Free Tier allowance. If you\nChoosing an S3 Glacier Data Retrieval Policy API Version 2012-06-01 323",
      "start_idx": 517507,
      "end_idx": 519566,
      "metadata": {
        "num_sentences": 13,
        "num_words": 341,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Usage Guidance"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "data retrieval policy",
            "Standard retrievals",
            "AWS Free Tier",
            "Max Retrieval Rate",
            "retrieval quota",
            "bytes-per-hour",
            "AWS Region",
            "storage classes",
            "retrieval costs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "Standard retrievals",
            "Max Retrieval Rate policy",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Retrieval Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Free Tier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains Amazon S3 Glacier data retrieval policies, including options such as No Retrieval Limit, Free Tier Only, and Max Retrieval Rate, to manage data retrieval activities and costs across AWS accounts in various regions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the types of S3 Glacier data retrieval policies?",
            "How can I set up a data retrieval policy using the S3 Glacier Console?",
            "What is the Max Retrieval Rate policy and how does it work?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "bytes-per-hour",
          "Standard retrievals",
          "Amazon S3 Glacier",
          "retrieval quota",
          "Max Retrieval Rate",
          "storage classes",
          "retrieval costs",
          "Max Retrieval Rate policy",
          "AWS Free Tier",
          "S3 Glacier",
          "AWS Region",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_311",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nuse a Max Retrieval Rate policy, S3 Glacier rejects retrieval requests that cause the peak retrieval\nrate of the in-progress jobs to exceed the bytes-per-hour quota set by the policy. These policies\nhelp you simplify data retrieval cost management.\nThe following are some useful facts about data retrieval policies:\n\u2022 Data retrieval policy settings do not change the 3- to 5-hour period that it takes to retrieve data\nfrom S3 Glacier by using Standard retrievals.\n\u2022 Setting a new data retrieval policy does not affect previously accepted retrieval jobs that are\nalready in progress.\n\u2022 If a retrieval job request is rejected because of a data retrieval policy, you are not charged for the\njob or the request.\n\u2022 You can set one data retrieval policy for each AWS Region, which will govern all data retrieval\nactivities in the AWS Region under your account. A data retrieval policy is specific to a particular\nAWS Region because data retrieval costs vary across AWS Regions. For more information, see\nAmazon S3 Glacier pricing.\nFree Tier Only Policy\nYou can set a data retrieval policy to Free Tier Only to ensure that your retrievals always stay within\nyour AWS Free Tier allowance, so that you don't incur data retrieval charges. If a retrieval request is\nrejected, you receive an error message stating that the request has been denied by the current data\nretrieval policy.\nYou can set the data retrieval policy to Free Tier Only on a per-Region basis. After the policy is set,\nyou cannot retrieve more data in a day than your prorated daily AWS Free Tier retrieval allowance\nfor that AWS Region. You also do not incur data retrieval fees.\nYou can also switch to a Free Tier Only policy after you have incurred data retrieval charges within\na month. In that case, the Free Tier Only policy takes effect for new retrieval requests, but does not\naffect past requests. You will be billed for the previously incurred charges.\nMax Retrieval Rate Policy\nYou can set your data retrieval policy to Max Retrieval Rate to control the peak retrieval rate by\nspecifying a data retrieval quota that has a bytes-per-hour maximum. When you set the data\nretrieval policy to Max Retrieval Rate, a new retrieval request is rejected if it would cause the peak\nFree Tier Only Policy API Version 2012-06-01 324",
      "start_idx": 519566,
      "end_idx": 521890,
      "metadata": {
        "num_sentences": 18,
        "num_words": 397,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Details",
              "Cost Management",
              "Error Handling"
            ]
          },
          "keywords": [
            "Max Retrieval Rate",
            "Free Tier Only",
            "data retrieval policy",
            "AWS Region",
            "retrieval request",
            "bytes-per-hour quota",
            "S3 Glacier pricing",
            "retrieval charges",
            "peak retrieval rate",
            "prorated daily allowance"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "AWS Region",
            "Max Retrieval Rate Policy",
            "Free Tier Only Policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cost Optimization",
            "Data Retrieval Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Free Tier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains Amazon S3 Glacier data retrieval policies, including the Free Tier Only and Max Retrieval Rate policies, which help manage data retrieval costs and ensure compliance with specified limits. It also clarifies the impact of these policies on retrieval requests and charges.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do data retrieval policies work in Amazon S3 Glacier?",
            "What is the difference between Free Tier Only and Max Retrieval Rate policies?",
            "Can I modify retrieval policies after incurring charges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "retrieval request",
          "S3 Glacier pricing",
          "Max Retrieval Rate Policy",
          "prorated daily allowance",
          "Free Tier Only Policy",
          "bytes-per-hour quota",
          "peak retrieval rate",
          "Amazon S3 Glacier",
          "retrieval charges",
          "Max Retrieval Rate",
          "AWS Free Tier",
          "Free Tier Only",
          "AWS Region",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_312",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nretrieval rate of the in-progress jobs to exceed the bytes-per-hour quota that's specified by the\npolicy. If a retrieval job request is rejected, you receive an error message stating that the request\nhas been denied by the current data retrieval policy.\nSetting your data retrieval policy to the Max Retrieval Rate policy can affect how much of your\nAWS Free Tier allowance that you can use in a day. For example, suppose you set Max Retrieval Rate\nto 1 MB per hour. This is less than the AWS Free Tier policy rate. To ensure that you make good use\nof the daily AWS Free Tier allowance, you can first set your policy to Free Tier Only, and then switch\nto the Max Retrieval Rate policy later if you need to. For more information about how your retrieval\nallowance is calculated, go to Amazon S3 Glacier FAQs.\nNo Retrieval Limit Policy\nIf your data retrieval policy is set to No Retrieval Limit, all valid data retrieval requests are accepted\nand your data retrieval costs will vary based on your usage.\nUsing the S3 Glacier Console to Set Up a Data Retrieval Policy\nTo create a data retrieval policy by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, choose an AWS Region from the dropdown menu. You can configure a\ndata retrieval policy for each AWS Region.\n3. In the left navigation pane, choose Data retrieval settings.\n4. Choose Edit. The Edit data retrieval policies page appears.\n5. Under Data retrieval policies, choose a policy.\nYou can select one of the three data retrieval policies: No retrieval limit, Free Tier only, or\nSpecify a max retrieval rate.\n\u2022 If you choose No retrieval limit, all valid data retrieval requests are accepted.\n\u2022 If you choose Free Tier only, data retrieval requests that exceed the AWS Free Tier are not\naccepted.\n\u2022 If you choose Specify a max retrieval rate, data retrieval requests are rejected if they would\ncause the peak retrieval rate of the in-progress jobs to exceed the max retrieval rate that\nyou specify. You must specify a gigabytes (GB) per hour value in the GB/hour box under Max\nNo Retrieval Limit Policy API Version 2012-06-01 325",
      "start_idx": 521890,
      "end_idx": 524144,
      "metadata": {
        "num_sentences": 25,
        "num_words": 391,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "Max Retrieval Rate",
            "Free Tier",
            "No Retrieval Limit",
            "AWS Region",
            "retrieval quota",
            "retrieval costs",
            "AWS Management Console",
            "gigabytes per hour"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "AWS Management Console",
            "S3 Glacier Console",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Retrieval Policies",
            "AWS Service Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Free Tier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure data retrieval policies in Amazon S3 Glacier, including options for Free Tier, Max Retrieval Rate, and No Retrieval Limit, using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference",
            "Configuration"
          ],
          "potential_questions": [
            "How do I set up a data retrieval policy in Amazon S3 Glacier?",
            "What are the different types of data retrieval policies available in S3 Glacier?",
            "How does the Max Retrieval Rate policy affect AWS Free Tier usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "S3 Glacier Console",
          "gigabytes per hour",
          "Free Tier",
          "Amazon S3 Glacier",
          "No Retrieval Limit",
          "retrieval quota",
          "Max Retrieval Rate",
          "retrieval costs",
          "AWS Free Tier",
          "AWS Region",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_313",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nretrieval rate. When you enter a value for GB/hour, the console calculates an estimated cost\nfor you.\n6. Choose Save changes.\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval\nPolicy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API or by using\nthe AWS SDKs.\nUsing the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API. You can view\nan existing data retrieval policy by using the Get Data Retrieval Policy (GET policy) operation. You\nset a data retrieval policy by using the Set Data Retrieval Policy (PUT policy) operation.\nWhen using the PUT policy operation, you select the data retrieval policy type by setting the JSON\nStrategy field value to BytesPerHour, FreeTier, or None. BytesPerHour is equivalent to\nchoosing Specify a max retrieval rate in the console, FreeTier to choosing Free Tier only, and\nNone to choosing No retrieval limit.\nWhen you use the Initiate Job (POST jobs) operation to initiate a data retrieval job that will exceed\nthe maximum retrieval rate set in your data retrieval policy, the Initiate Job operation stops\nand throws an exception.\nUsing the AWS SDKs to Set Up a Data Retrieval Policy\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. These SDKs provide\nlibraries that map to the underlying REST API and provide objects that enable you to easily\nconstruct requests and process responses. For more information, see Using the AWS SDKs with\nAmazon S3 Glacier.\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval Policy API Version 2012-06-01 326",
      "start_idx": 524144,
      "end_idx": 525825,
      "metadata": {
        "num_sentences": 15,
        "num_words": 291,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "REST API",
            "AWS SDKs",
            "BytesPerHour",
            "FreeTier",
            "Initiate Job",
            "Set Data Retrieval Policy",
            "POST jobs",
            "JSON Strategy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "Get Data Retrieval Policy",
            "Set Data Retrieval Policy",
            "Initiate Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Configuration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up and manage data retrieval policies for Amazon S3 Glacier using the REST API or AWS SDKs. It details operations like Get Data Retrieval Policy and Set Data Retrieval Policy, along with the available options for configuring retrieval rates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up a data retrieval policy in Amazon S3 Glacier?",
            "What are the options for configuring data retrieval rates in Amazon S3 Glacier?",
            "What happens if a data retrieval job exceeds the maximum retrieval rate?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Set Data Retrieval Policy",
          "Get Data Retrieval Policy",
          "Amazon S3 Glacier",
          "REST API",
          "FreeTier",
          "AWS SDKs",
          "POST jobs",
          "JSON Strategy",
          "BytesPerHour",
          "Initiate Job",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_314",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTagging Amazon S3 Glacier Resources\nA tag is a label that you assign to an AWS resource. Each tag consists of a key and a value, both of\nwhich you define. You can assign the tags that you define to Amazon S3 Glacier (S3 Glacier) vault\nresources. Using tags is a simple yet powerful way to manage AWS resources and organize data,\nincluding billing data.\nTopics\n\u2022 Tagging Basics\n\u2022 Tag Restrictions\n\u2022 Tracking Costs Using Tagging\n\u2022 Managing Access Control with Tagging\n\u2022 Related Sections\nTagging Basics\nYou use the S3 Glacier console, AWS Command Line Interface (AWS CLI), or S3 Glacier API to\ncomplete the following tasks:\n\u2022 Adding tags to a vault\n\u2022 Listing the tags for a vault\n\u2022 Removing tags from a vault\nFor information about how to add, list, and remove tags, see Tagging Your S3 Glacier Vaults.\nYou can use tags to categorize your vaults. For example, you can categorize vaults by purpose,\nowner, or environment. Because you define the key and value for each tag, you can create a custom\nset of categories to meet your specific needs. For example, you might define a set of tags that\nhelps you track vaults by owner and purpose for the vault. Following are a few examples of tags:\n\u2022 Owner: Name\n\u2022 Purpose: Video archives\n\u2022 Environment: Production\nTagging Basics API Version 2012-06-01 327",
      "start_idx": 525825,
      "end_idx": 527153,
      "metadata": {
        "num_sentences": 10,
        "num_words": 235,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "tags",
            "vault",
            "AWS CLI",
            "S3 Glacier",
            "resources",
            "billing",
            "access control",
            "categorize",
            "API",
            "environment"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "S3 Glacier API",
            "vaults",
            "Tagging Your S3 Glacier Vaults"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tagging and Resource Management",
          "secondary_categories": [
            "Cost Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use tags to manage and organize Amazon S3 Glacier resources, including instructions for adding, listing, and removing tags via the console, CLI, or API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Amazon S3 Glacier vault?",
            "What are some examples of tags I can use for S3 Glacier vaults?",
            "How can tagging help with cost tracking and access control in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Tagging and Resource Management]",
        "tf_idf_keywords": [
          "resources",
          "billing",
          "API",
          "categorize",
          "Amazon S3 Glacier",
          "Tagging Your S3 Glacier Vaults",
          "vault",
          "AWS CLI",
          "S3 Glacier API",
          "environment",
          "vaults",
          "S3 Glacier",
          "tags",
          "access control"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_315",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTag Restrictions\nBasic tag restrictions are as follows:\n\u2022 The maximum number of tags for a resource (vault) is 50.\n\u2022 Tag keys and values are case-sensitive.\nTag key restrictions are as follows:\n\u2022 Within a set of tags for a vault, each tag key must be unique. If you add a tag with a key that's\nalready in use, your new tag overwrites the existing key-value pair.\n\u2022 Tag keys cannot start with aws: because this prefix is reserved for use by AWS. AWS can create\ntags that begin with this prefix on your behalf, but you can't edit or delete them.\n\u2022 Tag keys must be from 1 to 128 Unicode characters in length.\n\u2022 Tag keys must consist of the following characters: Unicode letters, digits, spaces, and the\nfollowing special characters: _ . / = + - @.\nTag value restrictions are as follows:\n\u2022 Tag values must be from 0 to 255 Unicode characters in length.\n\u2022 Tag values can be blank. Otherwise, they must consist of the following characters: Unicode\nletters, digits, spaces, and any of the following special characters: _ . / = + - @.\nTracking Costs Using Tagging\nYou can use tags to categorize and track your AWS costs. When you apply tags to any AWS\nresources, including vaults, your AWS cost allocation report includes usage and costs aggregated\nby tags. You can apply tags that represent business categories (such as cost centers, application\nnames, and owners) to organize your costs across multiple services. For more information, see Use\nCost Allocation Tags for Custom Billing Reports in the AWS Billing User Guide.\nManaging Access Control with Tagging\nYou can use tags as a condition in an access policy statement. For example, you can set up a legal\nhold tag and include it as a condition in a data retention policy that states that \u201carchive deletion\nTag Restrictions API Version 2012-06-01 328",
      "start_idx": 527153,
      "end_idx": 528986,
      "metadata": {
        "num_sentences": 19,
        "num_words": 324,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Restrictions",
              "Usage"
            ]
          },
          "keywords": [
            "tags",
            "vault",
            "case-sensitive",
            "AWS cost allocation",
            "access policy",
            "Unicode characters",
            "resource",
            "tagging",
            "cost tracking",
            "legal hold"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Billing User Guide",
            "Cost Allocation Tags",
            "API Version 2012-06-01",
            "vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Resource Tagging",
          "secondary_categories": [
            "Cost Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Billing"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines restrictions and best practices for tagging vaults in Amazon S3 Glacier, including tag limits, character constraints, and their use in cost tracking and access control policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the restrictions on tag keys and values in Amazon S3 Glacier?",
            "How can tags be used to track AWS costs?",
            "Can tags be used in access control policies for vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Resource Tagging]",
        "tf_idf_keywords": [
          "legal hold",
          "resource",
          "Cost Allocation Tags",
          "API Version 2012-06-01",
          "Unicode characters",
          "cost tracking",
          "AWS cost allocation",
          "tagging",
          "vault",
          "Amazon S3 Glacier",
          "AWS Billing User Guide",
          "AWS Billing",
          "access policy",
          "case-sensitive",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_316",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nfrom everyone will be denied if the legal hold tag value is set to True.\u201d You can deploy the data\nretention policy and set the legal hold tag to False under normal conditions. If your data must be\nput on hold to assist an investigation, you can easily turn on the legal hold by setting the tag value\nto True and removing the hold in a similar way later on. For more information, see Controlling\nAccess Using Tags in the IAM User Guide.\nRelated Sections\n\u2022 Tagging Your S3 Glacier Vaults\nRelated Sections API Version 2012-06-01 329",
      "start_idx": 528986,
      "end_idx": 529551,
      "metadata": {
        "num_sentences": 4,
        "num_words": 102,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Access Control"
            ]
          },
          "keywords": [
            "legal hold",
            "data retention policy",
            "tags",
            "S3 Glacier",
            "IAM User Guide",
            "access control",
            "investigation",
            "vaults",
            "API Version 2012-06-01",
            "tagging"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "legal hold",
            "API Version 2012-06-01",
            "S3 Glacier Vaults"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Data Governance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This section explains how to manage data retention policies and legal holds in Amazon S3 Glacier using tags, and references the IAM User Guide for controlling access. It provides a procedural guide for enabling or disabling legal holds based on investigation needs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enable or disable a legal hold in Amazon S3 Glacier?",
            "What is the purpose of the legal hold tag in S3 Glacier?",
            "Where can I find more information about controlling access using tags?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "legal hold",
          "API Version 2012-06-01",
          "IAM User Guide",
          "Amazon S3 Glacier",
          "tagging",
          "S3 Glacier Vaults",
          "investigation",
          "data retention policy",
          "vaults",
          "S3 Glacier",
          "tags",
          "access control"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_317",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nLogging Amazon S3 Glacier API Calls with AWS\nCloudTrail\nAmazon S3 Glacier (S3 Glacier) is integrated with AWS CloudTrail, a service that provides a record\nof actions taken by a user, role, or an AWS service in S3 Glacier. CloudTrail captures all API calls\nfor S3 Glacier as events, including calls from the S3 Glacier console and from code calls to the S3\nGlacier APIs. If you create a trail, you can enable continuous delivery of CloudTrail events to an\nAmazon S3 bucket, including events for S3 Glacier. If you don't configure a trail, you can still view\nthe most recent events in the CloudTrail console in Event history. Using the information collected\nby CloudTrail, you can determine the request that was made to S3 Glacier, the IP address from\nwhich the request was made, who made the request, when it was made, and additional details.\nTo learn more about CloudTrail, see the AWS CloudTrail User Guide.\nAmazon S3 Glacier Information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs in\nS3 Glacier, that activity is recorded in a CloudTrail event along with other AWS service events in\nEvent history. You can view, search, and download recent events in your AWS account. For more\ninformation, see Viewing Events with CloudTrail Event History.\nFor an ongoing record of events in your AWS account, including events for S3 Glacier, create a\ntrail. A trail enables CloudTrail to deliver log files to an Amazon S3 bucket. By default, when you\ncreate a trail in the console, the trail applies to all AWS Regions. The trail logs events from all AWS\nRegions in the AWS partition and delivers the log files to the Amazon S3 bucket that you specify.\nAdditionally, you can configure other AWS services to further analyze and act upon the event data\ncollected in CloudTrail logs. For more information, see:\n\u2022 Overview for Creating a Trail\n\u2022 CloudTrail Supported Services and Integrations\n\u2022 Configuring Amazon SNS Notifications for CloudTrail\n\u2022 Receiving CloudTrail Log Files from Multiple Regions and Receiving CloudTrail Log Files from\nMultiple Accounts\nAmazon S3 Glacier Information in CloudTrail API Version 2012-06-01 330",
      "start_idx": 529551,
      "end_idx": 531761,
      "metadata": {
        "num_sentences": 16,
        "num_words": 367,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Integration",
              "Logging",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "API calls",
            "Event history",
            "Trail configuration",
            "Amazon S3 bucket",
            "Log delivery",
            "AWS Regions",
            "CloudTrail logs",
            "Notifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "Amazon S3 bucket",
            "AWS Regions",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Logging and Monitoring",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Service Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "CloudTrail console"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 Glacier integrates with AWS CloudTrail to log API calls and provide detailed event records, which can be configured for continuous delivery to an Amazon S3 bucket for analysis and monitoring across AWS Regions.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I enable CloudTrail logging for Amazon S3 Glacier?",
            "What information does CloudTrail provide for S3 Glacier events?",
            "How can I configure a trail to deliver logs to an Amazon S3 bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Logging and Monitoring]",
        "tf_idf_keywords": [
          "AWS Regions",
          "Log delivery",
          "Trail configuration",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Event history",
          "CloudTrail logs",
          "Amazon S3 bucket",
          "Notifications",
          "API calls"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_318",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAll S3 Glacier actions are logged by CloudTrail and are documented in the API Reference for\nAmazon S3 Glacier. For example, calls to the Create Vault (PUT vault), Delete Vault (DELETE vault),\nand List Vaults (GET vaults) actions generate entries in the CloudTrail log files.\nEvery event or log entry contains information about who generated the request. The identity\ninformation helps you determine the following:\n\u2022 Whether the request was made with root user or other credentials.\n\u2022 Whether the request was made with temporary security credentials for a role or federated user.\n\u2022 Whether the request was made by another AWS service.\nFor more information, see the CloudTrail userIdentity Element.\nUnderstanding Amazon S3 Glacier Log File Entries\nA trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket that\nyou specify. CloudTrail log files contain one or more log entries. An event represents a single\nrequest from any source and includes information about the requested action, the date and time of\nthe action, request parameters, and so on. CloudTrail log files are not an ordered stack trace of the\npublic API calls, so they do not appear in any specific order.\nThe following example shows a CloudTrail log entry that demonstrates the Create Vault (PUT\nvault), Delete Vault (DELETE vault), List Vaults (GET vaults), and Describe Vault (GET vault) actions.\n{\n\"Records\": [\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"52f8c821-002e-4549-857f-8193a15246fa\",\n\"eventName\": \"CreateVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"HJiLgvfXCY88QJAC6rRoexS9ThvI21Q1Nqukfly02hcUPPo\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 331",
      "start_idx": 531761,
      "end_idx": 533694,
      "metadata": {
        "num_sentences": 13,
        "num_words": 273,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Logging",
              "API Actions",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CloudTrail",
            "Create Vault",
            "Delete Vault",
            "List Vaults",
            "Describe Vault",
            "log files",
            "events",
            "request parameters",
            "userIdentity"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CloudTrail",
            "Create Vault",
            "Delete Vault",
            "List Vaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Logging",
          "secondary_categories": [
            "AWS Services",
            "API Logging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "CloudTrail"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation discusses how Amazon S3 Glacier actions are logged using CloudTrail, including details on log file entries, event data, and example API actions such as Create Vault and Delete Vault.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How are Amazon S3 Glacier actions logged in CloudTrail?",
            "What information is included in CloudTrail log entries for S3 Glacier?",
            "What does a sample CloudTrail log entry for S3 Glacier look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Logging]",
        "tf_idf_keywords": [
          "Delete Vault",
          "Create Vault",
          "request parameters",
          "log files",
          "userIdentity",
          "Amazon S3 Glacier",
          "CloudTrail",
          "List Vaults",
          "Describe Vault",
          "events"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_319",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAPI Reference for Amazon S3 Glacier\nAmazon S3 Glacier supports a set of operations\u2014specifically, a set of RESTful API calls\u2014that\nenable you to interact with the service.\nYou can use any programming library that can send HTTP requests to send your REST requests\nto S3 Glacier. When sending a REST request, S3 Glacier requires that you authenticate every\nrequest by signing the request. Additionally, when uploading an archive, you must also compute\nthe checksum of the payload and include it in your request. For more information, see Signing\nRequests.\nIf an error occurs, you need to know what S3 Glacier sends in an error response so that you\ncan process it. This section provides all this information, in addition to documenting the REST\noperations, so that you can make REST API calls directly.\nYou can either use the REST API calls directly or use the Amazon SDKs that provide wrapper\nlibraries. These libraries sign each request you send and compute the checksum of the payload in\nyour request. Therefore, using the Amazon SDKs simplifies your coding task. This developer guide\nprovides working examples of basic S3 Glacier operations using the AWS SDK for Java and .NET. For\nmore information see, Using the AWS SDKs with Amazon S3 Glacier.\nTopics\n\u2022 Common Request Headers\n\u2022 Common Response Headers\n\u2022 Signing Requests\n\u2022 Computing Checksums\n\u2022 Error Responses\n\u2022 Vault Operations\n\u2022 Archive Operations\n\u2022 Multipart Upload Operations\n\u2022 Job Operations\n\u2022 Data Types Used in Job Operations\n\u2022 Data Retrieval Operations\nAPI Version 2012-06-01 335",
      "start_idx": 536833,
      "end_idx": 538409,
      "metadata": {
        "num_sentences": 13,
        "num_words": 259,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "REST API",
            "S3 Glacier",
            "checksum",
            "authentication",
            "AWS SDKs",
            "error response",
            "vault operations",
            "multipart upload",
            "data retrieval",
            "job operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "RESTful API",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Integrity",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an API reference for Amazon S3 Glacier, detailing its RESTful operations, authentication, error responses, and integration with AWS SDKs for Java and .NET.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How do I authenticate requests to Amazon S3 Glacier's REST API?",
            "What are the common headers used in Amazon S3 Glacier requests and responses?",
            "How can I use AWS SDKs to simplify interaction with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "authentication",
          "data retrieval",
          "multipart upload",
          "vault operations",
          "API Version 2012-06-01",
          "checksum",
          "job operations",
          "REST API",
          "Amazon S3 Glacier",
          "RESTful API",
          "AWS SDK for Java",
          "AWS SDKs",
          "S3 Glacier",
          "AWS SDK for .NET",
          "error response"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_320",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCommon Request Headers\nAmazon S3 Glacier (S3 Glacier) REST requests include headers that contain basic information about\nthe request. The following table describes headers that can be used by all S3 Glacier REST requests.\nHeader Name Description Required\nAuthorization The header that is required to sign requests. S3 Yes\nGlacier requires Signature Version 4. For more\ninformation, see Signing Requests.\nType: String\nContent-Length The length of the request body (without the Conditional\nheaders).\nType: String\nCondition: Required only for the Upload Archive\n(POST archive) API.\nDate The date that can be used to create the signature Conditional\ncontained in the Authorization header. If the\nDate header is to be used for signing it must be\nspecified in the ISO 8601 basic format. In this\ncase, the x-amz-date header is not needed.\nNote that when x-amz-date is present, it\nalways overrides the value of the Date header.\nIf the Date header is not used for signing, it can\nbe one of the full date formats specified by RFC\n2616, section 3.3. For example, the following\ndate/time W ed, 10 Feb 2017 12:00:00\nGMT is a valid date/time header for use with S3\nGlacier.\nIf you are using the Date header for signing, then\nit must be in the ISO 8601 basic YYYYMMDD'\nT'HHMMSS'Z' format.\nCommon Request Headers API Version 2012-06-01 336",
      "start_idx": 538409,
      "end_idx": 539768,
      "metadata": {
        "num_sentences": 15,
        "num_words": 225,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Headers"
            ]
          },
          "keywords": [
            "Authorization",
            "Content-Length",
            "Date",
            "Signature Version 4",
            "ISO 8601",
            "x-amz-date",
            "RFC 2616",
            "REST requests",
            "Upload Archive",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Signature Version 4",
            "ISO 8601",
            "RFC 2616",
            "x-amz-date"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "REST API",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes common request headers used in Amazon S3 Glacier REST APIs, including their purpose, requirements, and formatting details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the required headers for S3 Glacier REST requests?",
            "How is the Authorization header formatted for S3 Glacier?",
            "When is the Content-Length header required in S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Upload Archive",
          "Signature Version 4",
          "Authorization",
          "ISO 8601",
          "RFC 2616",
          "REST requests",
          "Amazon S3 Glacier",
          "Content-Length",
          "x-amz-date",
          "Date"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_321",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHeader Name Description Required\nType: String\nCondition: If Date is specified but is not in ISO\n8601 basic format, then you must also include\nthe x-amz-date header. If D ate is specified\nin ISO 8601 basic format, then this is sufficien\nt for signing requests and you do not need the\nx-amz-date header. For more information,\nsee Handling Dates in Signature Version 4 in the\nAmazon Web Services Glossary.\nHost This header specifies the service endpoint to Yes\nwhich you send your requests. The value must\nbe of the form \"glacier.region.amazonaw\ns.com \", where region is replaced with an AWS\nRegion designation such as u s-west-2 .\nType: String\nx-amz-content-sha2 The computed SHA256 checksum of an entire Conditional\n56 payload that is uploaded with either Upload\nArchive (POST archive) or Upload Part (PUT\nuploadID). This header is not the same as the x-\namz-sha256-tree-hash header, though,\nfor some small payloads the values are the same.\nWhen x -amz-content-sha256 is required,\nboth x-amz-content-sha256 and x -amz-\nsha256-tree-hash must be specified.\nType: String\nCondition: Required for streaming API, Upload\nArchive (POST archive) and Upload Part (PUT\nuploadID).\nCommon Request Headers API Version 2012-06-01 337",
      "start_idx": 539768,
      "end_idx": 541021,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Documentation",
              "API Headers",
              "Conditions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-date",
            "ISO 8601",
            "x-amz-content-sha256",
            "x-amz-sha256-tree-hash",
            "Host header",
            "AWS Region",
            "streaming API",
            "Upload Archive",
            "Signature Version 4"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-date",
            "x-amz-content-sha256",
            "AWS Region",
            "Signature Version 4"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "API Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the required and optional headers for making requests to the Amazon S3 Glacier service, including conditions for using specific headers like x-amz-date and x-amz-content-sha256.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the required headers for Amazon S3 Glacier API requests?",
            "When should the x-amz-date header be included in requests?",
            "What is the purpose of the x-amz-content-sha256 header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "streaming API",
          "Host header",
          "Upload Archive",
          "Signature Version 4",
          "ISO 8601",
          "x-amz-content-sha256",
          "Amazon S3 Glacier",
          "x-amz-date",
          "x-amz-sha256-tree-hash",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_322",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHeader Name Description Required\nx-amz-date The date used to create the signature in the Conditional\nAuthorization header. The format must be ISO\n8601 basic in the YYYYMMDD'T'HHMMSS'Z'\nformat. For example, the following date/time\n20170210T120000Z is a valid x -amz-date\nfor use with S3 Glacier.\nType: String\nCondition: x-amz-date is optional for all\nrequests; it can be used to override the date\nused for signing requests. If the Date header is\nspecified in the ISO 8601 basic format, then x -\namz-date is not needed. When x-amz-date\nis present, it always overrides the value of the\nDate header. For more information, see Handling\nDates in Signature Version 4 in the Amazon Web\nServices Glossary.\nx-amz-glacier-vers The S3 Glacier API version to use. The current Yes\nion version is 2012-06-01 .\nType: String\nx-amz-sha256-tree- The computed SHA256 tree-hash checksum for an Conditional\nhash uploaded archive (Upload Archive (POST archive))\nor archive part (Upload Part (PUT uploadID)\n). For more information about calculating this\nchecksum, see Computing Checksums.\nType: String\nDefault: None\nCondition: Required for Upload Archive (POST\narchive) and Upload Part (PUT uploadID).\nCommon Request Headers API Version 2012-06-01 338",
      "start_idx": 541021,
      "end_idx": 542284,
      "metadata": {
        "num_sentences": 13,
        "num_words": 193,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Header Description",
              "Technical Specification"
            ]
          },
          "keywords": [
            "x-amz-date",
            "ISO 8601",
            "S3 Glacier",
            "x-amz-glacier-version",
            "SHA256 tree-hash",
            "Upload Archive",
            "Signature Version 4",
            "Date header",
            "Checksum",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-date",
            "x-amz-glacier-version",
            "x-amz-sha256-tree-hash",
            "Signature Version 4"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Integrity",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the headers and requirements for using the Amazon S3 Glacier API, including x-amz-date, x-amz-glacier-version, and x-amz-sha256-tree-hash, with details on their formats and conditions.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the format of the x-amz-date header in S3 Glacier?",
            "When is x-amz-sha256-tree-hash required for S3 Glacier requests?",
            "What API version is currently used for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "API version",
          "Upload Archive",
          "Signature Version 4",
          "ISO 8601",
          "Checksum",
          "SHA256 tree-hash",
          "x-amz-sha256-tree-hash",
          "Amazon S3 Glacier",
          "Date header",
          "x-amz-date",
          "S3 Glacier",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_323",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCommon Response Headers\nThe following table describes response headers that are common to most API responses.\nName Description\nContent-L The length in bytes of the response body.\nength\nType: String\nDate The date and time Amazon S3 Glacier (S3 Glacier) responded, for example,\nWed, 10 Feb 2017 12:00:00 GMT. The format of the date must be\none of the full date formats specified by RFC 2616, section 3.3. Note that\nDate returned may drift slightly from other dates, so for example, the date\nreturned from an Upload Archive (POST archive) request may not match\nthe date shown for the archive in an inventory list for the vault.\nType: String\nx-amzn-Re A value created by S3 Glacier that uniquely identifies your request. In the\nquestId event that you have a problem with S3 Glacier, AWS can use this value to\ntroubleshoot the problem. It is recommended that you log these values.\nType: String\nx-amz-sha The SHA256 tree-hash checksum of the archive or inventory body. For\n256-tree- more information about calculating this checksum, see Computing\nhash Checksums.\nType: String\nSigning Requests\nS3 Glacier requires that you authenticate every request you send by signing the request. To sign a\nrequest, you calculate a digital signature using a cryptographic hash function. A cryptographic hash\nis a function that returns a unique hash value based on the input. The input to the hash function\nincludes the text of your request and your secret access key. The hash function returns a hash value\nCommon Response Headers API Version 2012-06-01 339",
      "start_idx": 542284,
      "end_idx": 543856,
      "metadata": {
        "num_sentences": 15,
        "num_words": 259,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Headers",
              "Authentication"
            ]
          },
          "keywords": [
            "response headers",
            "Content-Length",
            "Date",
            "x-amzn-RequestId",
            "x-amz-sha256-tree-hash",
            "S3 Glacier",
            "cryptographic hash",
            "digital signature",
            "RFC 2616",
            "checksum"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "RFC 2616",
            "SHA256 tree-hash",
            "API Version 2012-06-01",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes common response headers for Amazon S3 Glacier API responses and explains how to sign requests using a cryptographic hash function.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the common response headers in S3 Glacier API?",
            "How is a request signed in Amazon S3 Glacier?",
            "What is the purpose of x-amzn-RequestId?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "response headers",
          "API Version 2012-06-01",
          "RFC 2616",
          "x-amz-sha256-tree-hash",
          "SHA256 tree-hash",
          "checksum",
          "Amazon S3 Glacier",
          "cryptographic hash",
          "Content-Length",
          "AWS",
          "S3 Glacier",
          "Date",
          "digital signature"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_324",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nthat you include in the request as your signature. The signature is part of the Authorization\nheader of your request.\nAfter receiving your request, S3 Glacier recalculates the signature using the same hash function\nand input that you used to sign the request. If the resulting signature matches the signature in the\nrequest, S3 Glacier processes the request. Otherwise, the request is rejected.\nS3 Glacier supports authentication using AWS Signature Version 4. The process for calculating a\nsignature can be broken into three tasks:\n\u2022 Task 1: Create a Canonical Request\nRearrange your HTTP request into a canonical format. Using a canonical form is necessary\nbecause S3 Glacier uses the same canonical form when it recalculates a signature to compare\nwith the one you sent.\n\u2022 Task 2: Create a String to Sign\nCreate a string that you will use as one of the input values to your cryptographic hash function.\nThe string, called the string to sign, is a concatenation of the name of the hash algorithm, the\nrequest date, a credential scope string, and the canonicalized request from the previous task. The\ncredential scope string itself is a concatenation of date, AWS Region, and service information.\n\u2022 Task 3: Create a Signature\nCreate a signature for your request by using a cryptographic hash function that accepts two\ninput strings: your string to sign and a derived key. The derived key is calculated by starting with\nyour secret access key and using the credential scope string to create a series of hash-based\nmessage authentication codes (HMACs). Note that the hash function used in this signing step is\nnot the tree-hash algorithm used in S3 Glacier APIs that upload data.\nTopics\n\u2022 Example Signature Calculation\n\u2022 Calculating Signatures for the Streaming Operations\nSigning Requests API Version 2012-06-01 340",
      "start_idx": 543856,
      "end_idx": 545707,
      "metadata": {
        "num_sentences": 15,
        "num_words": 303,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Authentication",
              "Request Signing"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS Signature Version 4",
            "Canonical Request",
            "String to Sign",
            "Cryptographic Hash Function",
            "HMAC",
            "Authorization Header",
            "Credential Scope String",
            "Tree-Hash Algorithm",
            "Signature Calculation"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Signature Version 4",
            "Canonical Request",
            "Credential Scope String",
            "HMAC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Authentication",
          "secondary_categories": [
            "Cryptographic Hashing",
            "API Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to authenticate requests using AWS Signature Version 4, detailing the steps to calculate a valid signature for secure API communication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I authenticate requests to Amazon S3 Glacier?",
            "What are the steps to calculate an AWS Signature Version 4?",
            "What is the role of a Canonical Request in request signing?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Authentication]",
        "tf_idf_keywords": [
          "Signature Calculation",
          "Cryptographic Hash Function",
          "Tree-Hash Algorithm",
          "String to Sign",
          "Authorization Header",
          "Amazon S3 Glacier",
          "S3 Glacier",
          "HMAC",
          "Canonical Request",
          "AWS Signature Version 4",
          "Credential Scope String"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_325",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Signature Calculation\nThe following example walks you through the details of creating a signature for Create Vault (PUT\nvault). The example could be used as a reference to check your signature calculation method. For\nmore information, see Signing AWS API requests in the IAM User Guide.\nThe example assumes the following:\n\u2022 The time stamp of the request is Fri, 25 May 2012 00:24:53 GMT.\n\u2022 The endpoint is US East (N. Virginia) Region us-east-1.\nThe general request syntax (including the JSON body) is:\nPUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Fri, 25 May 2012 00:24:53 GMT\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is:\nPUT\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-date:20120525T002453Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-date;x-amz-glacier-version\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nThe last line of the canonical request is the hash of the request body. Also, note the empty third\nline in the canonical request. This is because there are no query parameters for this API.\nThe string to sign for Task 2: Create a String to Sign is:\nAWS4-HMAC-SHA256\n20120525T002453Z\nExample Signature Calculation API Version 2012-06-01 341",
      "start_idx": 545707,
      "end_idx": 547092,
      "metadata": {
        "num_sentences": 9,
        "num_words": 185,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "signature calculation",
            "canonical request",
            "AWS4-HMAC-SHA256",
            "Create Vault",
            "PUT vault",
            "x-amz-glacier-version",
            "hash of request body",
            "string to sign",
            "IAM User Guide",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS API",
            "IAM User Guide",
            "US East (N. Virginia)",
            "glacier.us-east-1.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS API Signature Calculation",
          "secondary_categories": [
            "Cloud Storage",
            "API Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This example demonstrates the process of calculating a signature for the Create Vault API operation in Amazon S3 Glacier, including constructing a canonical request and string to sign.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a signature for Amazon S3 Glacier API requests?",
            "What is the canonical request format for a PUT vault operation?",
            "What are the required headers for signing AWS API requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS API Signature Calculation]",
        "tf_idf_keywords": [
          "signature calculation",
          "AWS API",
          "string to sign",
          "AWS4-HMAC-SHA256",
          "US East (N. Virginia)",
          "Create Vault",
          "IAM User Guide",
          "Amazon S3 Glacier",
          "canonical request",
          "IAM",
          "glacier.us-east-1.amazonaws.com",
          "PUT vault",
          "x-amz-glacier-version",
          "hash of request body"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_326",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n20120525/us-east-1/glacier/aws4_request\n5f1da1a2d0feb614dd03d71e87928b8e449ac87614479332aced3a701f916743\nThe first line of the string to sign is the algorithm, the second line is the time stamp, the third line\nis the credential scope, and the last line is a hash of the canonical request from Task 1: Create a\nCanonical Request. The service name to use in the credential scope is glacier.\nFor Task 3: Create a Signature, the derived key can be represented as:\nderived key = HMAC(HMAC(HMAC(HMAC(\"AWS4\" + YourSecretAccessKey,\"20120525\"),\"us-\neast-1\"),\"glacier\"),\"aws4_request\")\nIf the secret access key, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY, is used, then the\ncalculated signature is:\n3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nThe final step is to construct the Authorization header. For the demonstration access key\nAKIAIOSFODNN7EXAMPLE, the header (with line breaks added for readability) is:\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/us-east-1/\nglacier/aws4_request,\nSignedHeaders=host;x-amz-date;x-amz-glacier-version,\nSignature=3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nCalculating Signatures for the Streaming Operations\nUpload Archive (POST archive) and Upload Part (PUT uploadID) are streaming operations that\nrequire you to include an additional header x-amz-content-sha256 when signing and sending\nyour request. The signing steps for the streaming operations are exactly the same as those for\nother operations, with the addition of the streaming header.\nThe calculation of the streaming header x-amz-content-sha256 is based on the SHA256 hash\nof the entire content (payload) that is to be uploaded. Note that this calculation is different from\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 342",
      "start_idx": 547092,
      "end_idx": 548939,
      "metadata": {
        "num_sentences": 7,
        "num_words": 221,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Signature Calculation",
              "Streaming Operations"
            ]
          },
          "keywords": [
            "AWS4-HMAC-SHA256",
            "Authorization header",
            "Canonical Request",
            "x-amz-content-sha256",
            "SHA256 hash",
            "Credential scope",
            "Streaming operations",
            "Derived key",
            "Secret access key",
            "Signature"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "Authorization header",
            "x-amz-content-sha256",
            "AKIAIOSFODNN7EXAMPLE"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Authentication",
          "secondary_categories": [
            "AWS Services",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HMAC",
            "SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to calculate signatures for AWS S3 Glacier requests, including streaming operations, using the AWS4-HMAC-SHA256 algorithm and constructing the Authorization header.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a signature for Amazon S3 Glacier requests?",
            "What is the purpose of the x-amz-content-sha256 header?",
            "How is the Authorization header constructed for AWS requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Authentication]",
        "tf_idf_keywords": [
          "AKIAIOSFODNN7EXAMPLE",
          "AWS4-HMAC-SHA256",
          "Streaming operations",
          "x-amz-content-sha256",
          "Secret access key",
          "Amazon S3 Glacier",
          "Derived key",
          "Authorization header",
          "Canonical Request",
          "Credential scope",
          "Signature",
          "SHA256 hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_327",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nthe SHA256 tree hash (Computing Checksums). Besides trivial cases, the SHA 256 hash value of the\npayload data will be different from the SHA256 tree hash of the payload data.\nIf the payload data is specified as a byte array, you can use the following Java code snippet to\ncalculate the SHA256 hash.\npublic static byte[] computePayloadSHA256Hash2(byte[] payload) throws\nNoSuchAlgorithmException, IOException {\nBufferedInputStream bis =\nnew BufferedInputStream(new ByteArrayInputStream(payload));\nMessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\nbyte[] buffer = new byte[4096];\nint bytesRead = -1;\nwhile ( (bytesRead = bis.read(buffer, 0, buffer.length)) != -1 ) {\nmessageDigest.update(buffer, 0, bytesRead);\n}\nreturn messageDigest.digest();\n}\nSimilarly, in C# you can calculate the SHA256 hash of the payload data as shown in the following\ncode snippet.\npublic static byte[] CalculateSHA256Hash(byte[] payload)\n{\nSHA256 sha256 = System.Security.Cryptography.SHA256.Create();\nbyte[] hash = sha256.ComputeHash(payload);\nreturn hash;\n}\nExample Signature Calculation for Streaming API\nThe following example walks you through the details of creating a signature for Upload Archive\n(POST archive), one of the two streaming APIs in S3 Glacier. The example assumes the following:\n\u2022 The time stamp of the request is Mon, 07 May 2012 00:00:00 GMT.\n\u2022 The endpoint is the US East (N. Virginia) Region, us-east-1.\n\u2022 The content payload is a string \"Welcome to S3 Glacier.\"\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 343",
      "start_idx": 548939,
      "end_idx": 550531,
      "metadata": {
        "num_sentences": 9,
        "num_words": 224,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeSnippet",
              "Example",
              "Explanation"
            ]
          },
          "keywords": [
            "SHA256",
            "tree hash",
            "payload",
            "signature",
            "streaming API",
            "S3 Glacier",
            "checksum",
            "MessageDigest",
            "cryptography",
            "hash computation"
          ],
          "entities": [
            "SHA256",
            "S3 Glacier",
            "Streaming API",
            "Java",
            "C#"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cryptography",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on calculating SHA256 hashes and creating signatures for the Amazon S3 Glacier streaming API, including code examples in Java and C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I calculate the SHA256 hash of a payload in Java or C#?",
            "What is the difference between a SHA256 hash and a SHA256 tree hash?",
            "How do I create a signature for the Amazon S3 Glacier streaming API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "streaming API",
          "Streaming API",
          "MessageDigest",
          "cryptography",
          "payload",
          "checksum",
          "hash computation",
          "Java",
          "signature",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "tree hash",
          "SHA256",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_328",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe general request syntax (including the JSON body) is shown in the example below. Note that\nthe x-amz-content-sha256 header is included. In this simplified example, the x-amz-sha256-\ntree-hash and x-amz-content-sha256 are the same value. However, for archive uploads\ngreater than 1 MB, this is not the case.\nPOST /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Mon, 07 May 2012 00:00:00 GMT\nx-amz-archive-description: my archive\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 payload hash\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is shown\nbelow. Note that the streaming header x-amz-content-sha256 is included with its value. This\nmeans you must read the payload and calculate the SHA256 hash first and then compute the\nsignature.\nPOST\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-date:20120507T000000Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-content-sha256;x-amz-date;x-amz-glacier-version\n726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nThe remainder of the signature calculation follows the steps outlined in Example Signature\nCalculation. The Authorization header using the secret access key wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY and the access key AKIAIOSFODNN7EXAMPLE is shown below (with line\nbreaks added for readability):\nAuthorization=AWS4-HMAC-SHA256\nCredential=AKIAIOSFODNN7EXAMPLE/20120507/us-east-1/glacier/aws4_request,\nSignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-glacier-version,\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 344",
      "start_idx": 550531,
      "end_idx": 552355,
      "metadata": {
        "num_sentences": 9,
        "num_words": 184,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256",
            "Canonical Request",
            "Authorization Header",
            "Streaming Operations",
            "POST Request",
            "x-amz-content-sha256",
            "x-amz-glacier-version",
            "Signature Calculation",
            "Credential"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "AWS4-HMAC-SHA256",
            "AKIAIOSFODNN7EXAMPLE",
            "glacier.us-east-1.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Authentication",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to construct and authenticate a request to Amazon S3 Glacier, including the calculation of a canonical request and signature for archive uploads using SHA256 hashes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a canonical request for Amazon S3 Glacier?",
            "What headers are required for uploading archives to Amazon S3 Glacier?",
            "How is the SHA256 hash used in Amazon S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Signature Calculation",
          "AKIAIOSFODNN7EXAMPLE",
          "Credential",
          "AWS4-HMAC-SHA256",
          "SHA256 tree hash",
          "x-amz-content-sha256",
          "Amazon S3 Glacier",
          "Authorization Header",
          "x-amz-glacier-version",
          "POST Request",
          "glacier.us-east-1.amazonaws.com",
          "Canonical Request",
          "Streaming Operations",
          "SHA256"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_329",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSignature=b092397439375d59119072764a1e9a144677c43d9906fd98a5742c57a2855de6\nComputing Checksums\nWhen uploading an archive, you must include both the x-amz-sha256-tree-hash and x-\namz-content-sha256 headers. The x-amz-sha256-tree-hash header is a checksum of the\npayload in your request body. This topic describes how to calculate the x-amz-sha256-tree-\nhash header. The x-amz-content-sha256 header is a hash of the entire payload and is required\nfor authorization. For more information, see Example Signature Calculation for Streaming API.\nThe payload of your request can be an:\n\u2022 Entire archive\u2014 When uploading an archive in a single request using the Upload Archive API,\nyou send the entire archive in the request body. In this case, you must include the checksum of\nthe entire archive.\n\u2022 Archive part\u2014 When uploading an archive in parts using the multipart upload API, you send\nonly a part of the archive in the request body. In this case, you include the checksum of the\narchive part. And after you upload all the parts, you send a Complete Multipart Upload request,\nwhich must include the checksum of the entire archive.\nThe checksum of the payload is a SHA-256 tree hash. It is called a tree hash because in the process\nof computing the checksum you compute a tree of SHA-256 hash values. The hash value at the\nroot is the checksum for the entire archive.\nNote\nThis section describes a way to compute the SHA-256 tree hash. However, you may use any\nprocedure as long as it produces the same result.\nYou compute the SHA-256 tree hash as follows:\n1. For each 1 MB chunk of payload data, compute the SHA-256 hash. The last chunk of data can be\nless than 1 MB. For example, if you are uploading a 3.2 MB archive, you compute the SHA-256\nComputing Checksums API Version 2012-06-01 345",
      "start_idx": 552355,
      "end_idx": 554175,
      "metadata": {
        "num_sentences": 19,
        "num_words": 298,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Technical Explanation"
            ]
          },
          "keywords": [
            "checksum",
            "SHA-256 tree hash",
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "archive",
            "multipart upload",
            "Complete Multipart Upload",
            "payload",
            "hash value",
            "API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Upload Archive API",
            "multipart upload API",
            "Complete Multipart Upload",
            "Streaming API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "File Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to compute the SHA-256 tree hash for payload checksums when uploading archives, either as a whole or in parts, using the Upload Archive or multipart upload APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute the SHA-256 tree hash for an archive?",
            "What headers are required for uploading archives to Amazon S3 Glacier?",
            "What is the difference between single and multipart archive uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Streaming API",
          "multipart upload",
          "hash value",
          "API",
          "x-amz-content-sha256",
          "checksum",
          "SHA-256 tree hash",
          "payload",
          "Amazon S3 Glacier",
          "archive",
          "multipart upload API",
          "Complete Multipart Upload",
          "x-amz-sha256-tree-hash",
          "Upload Archive API"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_330",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nhash values for each of the first three 1 MB chunks of data, and then compute the SHA-256 hash\nof the remaining 0.2 MB data. These hash values form the leaf nodes of the tree.\n2. Build the next level of the tree.\na. Concatenate two consecutive child node hash values and compute the SHA-256 hash of the\nconcatenated hash values. This concatenation and generation of the SHA-256 hash produces\na parent node for the two child nodes.\nb. If only one child node remains, promote that hash value to the next level in the tree.\n3. Repeat step 2 until the resulting tree has a root. The root of the tree provides a hash of the\nentire archive and a root of the appropriate subtree provides the hash for the part in a multipart\nupload.\nTopics\n\u2022 Tree Hash Example 1: Uploading an archive in a single request\n\u2022 Tree Hash Example 2: Uploading an archive using a multipart upload\n\u2022 Computing the Tree Hash of a File\n\u2022 Receiving Checksums When Downloading Data\nTree Hash Example 1: Uploading an archive in a single request\nWhen you upload an archive in a single request using the Upload Archive API (see Upload Archive\n(POST archive)), the request payload includes the entire archive. Accordingly, you must include\nthe tree hash of the entire archive in the x-amz-sha256-tree-hash request header. Suppose\nyou want to upload a 6.5 MB archive. The following diagram illustrates the process of creating\nthe SHA-256 hash of the archive. You read the archive and compute the SHA-256 hash for each\n1 MB chunk. You also compute the hash for the remaining 0.5 MB data and then build the tree as\noutlined in the preceding procedure.\nTree Hash Example 1: Uploading an archive in a single request API Version 2012-06-01 346",
      "start_idx": 554175,
      "end_idx": 555908,
      "metadata": {
        "num_sentences": 18,
        "num_words": 307,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "multipart upload",
            "archive",
            "checksums",
            "leaf nodes",
            "hash values",
            "child nodes",
            "parent nodes",
            "API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Upload Archive API",
            "x-amz-sha256-tree-hash",
            "SHA-256 hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Storage",
          "secondary_categories": [
            "Cloud Storage",
            "Cryptographic Hashing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA-256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of computing tree hashes for archives in Amazon S3 Glacier, including examples for single and multipart uploads using the SHA-256 algorithm.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a tree hash for an archive in Amazon S3 Glacier?",
            "What is the procedure for uploading an archive using a multipart upload?",
            "What does the x-amz-sha256-tree-hash header represent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity and Storage]",
        "tf_idf_keywords": [
          "SHA-256",
          "multipart upload",
          "API",
          "leaf nodes",
          "API Version 2012-06-01",
          "child nodes",
          "Amazon S3 Glacier",
          "hash values",
          "SHA-256 hash",
          "archive",
          "tree hash",
          "x-amz-sha256-tree-hash",
          "Upload Archive API",
          "checksums",
          "parent nodes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_331",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nTree Hash Example 2: Uploading an archive using a multipart upload\nThe process of computing the tree hash when uploading an archive using multipart upload is the\nsame when uploading the archive in a single request. The only difference is that in a multipart\nupload you upload only a part of the archive in each request (using the Upload Part (PUT uploadID)\nAPI), and therefore you provide the checksum of only the part in the x-amz-sha256-tree-hash\nrequest header. However, after you upload all parts, you must send the Complete Multipart Upload\n(see Complete Multipart Upload (POST uploadID)) request with a tree hash of the entire archive in\nthe x-amz-sha256-tree-hash request header.\nTree Hash Example 2: Uploading an archive using a multipart upload API Version 2012-06-01 347",
      "start_idx": 555908,
      "end_idx": 556724,
      "metadata": {
        "num_sentences": 4,
        "num_words": 131,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "tree hash",
            "multipart upload",
            "archive",
            "x-amz-sha256-tree-hash",
            "Complete Multipart Upload",
            "Upload Part",
            "checksum",
            "API",
            "request header",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-sha256-tree-hash",
            "Complete Multipart Upload",
            "Upload Part",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to compute a tree hash for an archive using Amazon S3 Glacier's multipart upload process, including details on checksum handling and API requests.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a tree hash for a multipart upload in Amazon S3 Glacier?",
            "What is the role of x-amz-sha256-tree-hash in multipart uploads?",
            "How do I complete a multipart upload with a tree hash in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "request header",
          "multipart upload",
          "Upload Part",
          "API",
          "API Version 2012-06-01",
          "checksum",
          "Amazon S3 Glacier",
          "archive",
          "Complete Multipart Upload",
          "tree hash",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_332",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nComputing the Tree Hash of a File\nThe algorithms shown here are selected for demonstration purposes. You can optimize the code\nas needed for your implementation scenario. If you are using an Amazon SDK to program against\nAmazon S3 Glacier (S3 Glacier), the tree hash calculation is done for you and you only need to\nprovide the file reference.\nExample 1: Java Example\nThe following example shows how to calculate the SHA256 tree hash of a file using Java. You\ncan run this example by either supplying a file location as an argument or you can use the\nTreeHashExample.computeSHA256TreeHash method directly from your code.\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nComputing the Tree Hash of a File API Version 2012-06-01 348",
      "start_idx": 556724,
      "end_idx": 557522,
      "metadata": {
        "num_sentences": 6,
        "num_words": 126,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Demonstration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256",
            "tree hash",
            "Java",
            "file reference",
            "SDK",
            "computeSHA256TreeHash",
            "hash calculation",
            "API",
            "2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "TreeHashExample",
            "Java",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "This section provides an example in Java to compute the SHA256 tree hash of a file for Amazon S3 Glacier, including code snippets and usage details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a SHA256 tree hash in Java?",
            "What is the process for computing a tree hash for Amazon S3 Glacier?",
            "Does Amazon SDK handle tree hash calculation automatically?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "API",
          "API Version 2012-06-01",
          "file reference",
          "2012-06-01",
          "Amazon S3 Glacier",
          "Java",
          "hash calculation",
          "TreeHashExample",
          "SDK",
          "tree hash",
          "computeSHA256TreeHash",
          "SHA256"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_333",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n* @return a byte[] containing the SHA-256 tree hash\n* @throws IOException\n* Thrown if there's an issue reading the input file\n* @throws NoSuchAlgorithmException\n*/\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB.\n*\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1 MB chunk\n* @throws IOException\n* Thrown if there's an IOException when reading the file\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nComputing the Tree Hash of a File API Version 2012-06-01 350",
      "start_idx": 558646,
      "end_idx": 560039,
      "metadata": {
        "num_sentences": 3,
        "num_words": 199,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Error Handling",
              "Checksum Calculation"
            ]
          },
          "keywords": [
            "SHA-256",
            "Tree Hash",
            "Chunk Checksums",
            "IOException",
            "NoSuchAlgorithmException",
            "MessageDigest",
            "FileInputStream",
            "ONE_MB",
            "computeSHA256TreeHash",
            "getChunkSHA256Hashes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA-256 MessageDigest",
            "FileInputStream",
            "ONE_MB",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "File Integrity and Security",
          "secondary_categories": [
            "Cloud Storage",
            "Data Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA-256 MessageDigest",
            "FileInputStream"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA-256 tree hashes for files, including checksums for 1 MB chunks, using Java code. It handles potential errors such as IOException and NoSuchAlgorithmException.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute a SHA-256 tree hash for a file?",
            "What errors should I handle when implementing SHA-256 checksum calculations?",
            "How does chunk-based checksum calculation work for large files?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [File Integrity and Security]",
        "tf_idf_keywords": [
          "SHA-256",
          "MessageDigest",
          "API Version 2012-06-01",
          "SHA-256 MessageDigest",
          "Amazon S3 Glacier",
          "NoSuchAlgorithmException",
          "FileInputStream",
          "getChunkSHA256Hashes",
          "Tree Hash",
          "IOException",
          "Chunk Checksums",
          "ONE_MB",
          "computeSHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_334",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nint bytesRead;\nint idx = 0;\nint offset = 0;\nwhile ((bytesRead = fileStream.read(buff, offset, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\noffset += bytesRead;\n}\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums.\n*\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level. Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level.\n*\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\nComputing the Tree Hash of a File API Version 2012-06-01 351",
      "start_idx": 560039,
      "end_idx": 561264,
      "metadata": {
        "num_sentences": 5,
        "num_words": 197,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Algorithm Explanation"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "chunk checksums",
            "1 MB chunks",
            "MessageDigest",
            "IOException",
            "fileStream",
            "hash computation",
            "digest",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA-256",
            "MessageDigest",
            "IOException",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Hashing Algorithms",
          "secondary_categories": [
            "File Processing",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java MessageDigest",
            "SHA-256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute a SHA-256 tree hash for a file in 1 MB chunks using Java, including a code example and error handling for file streams.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a SHA-256 tree hash for a file?",
            "What is the process for handling file streams in Java?",
            "What is the purpose of a tree hash in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Hashing Algorithms]",
        "tf_idf_keywords": [
          "SHA-256",
          "MessageDigest",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "1 MB chunks",
          "hash computation",
          "chunk checksums",
          "IOException",
          "digest",
          "fileStream",
          "tree hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_335",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n* @return A String containing Hex characters\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (int i = 0; i < data.length; i++) {\nString hex = Integer.toHexString(data[i] & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero.\nsb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\nExample 2: C# .NET Example\nThe following example shows how to calculate the SHA256 tree hash of a file. You can run this\nexample by supplying a file location as an argument.\nusing System;\nusing System.IO;\nusing System.Security.Cryptography;\nnamespace ExampleTreeHash\n{\nclass Program\n{\nstatic int ONE_MB = 1024 * 1024;\n/**\n* Compute the Hex representation of the SHA-256 tree hash for the\n* specified file\n*\n* @param args\n* args[0]: a file to compute a SHA-256 tree hash for\n*/\npublic static void Main(string[] args)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 353",
      "start_idx": 562305,
      "end_idx": 563279,
      "metadata": {
        "num_sentences": 4,
        "num_words": 159,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Algorithm",
              "Hashing"
            ]
          },
          "keywords": [
            "SHA256",
            "tree hash",
            "Hex representation",
            "file hash",
            "Amazon S3 Glacier",
            "byte array",
            "C#",
            "Java",
            "hash computation",
            "security"
          ],
          "entities": [
            "SHA256",
            "Amazon S3 Glacier",
            "Hex",
            "C#",
            "Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Hashing Algorithms",
          "secondary_categories": [
            "Cloud Storage",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "C#",
            "Java",
            "System.Security.Cryptography"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples in Java and C# for computing the SHA256 tree hash of a file, including a method to convert byte arrays to Hex strings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a SHA256 tree hash for a file in C#?",
            "What is the algorithm for converting a byte array to a Hex string in Java?",
            "Which AWS service uses SHA256 tree hashes?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Hashing Algorithms]",
        "tf_idf_keywords": [
          "security",
          "file hash",
          "Amazon S3 Glacier",
          "Java",
          "hash computation",
          "Hex representation",
          "Hex",
          "tree hash",
          "byte array",
          "SHA256",
          "C#"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_336",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nreturn ComputeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB.\n*\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1MB chunk\n*/\npublic static byte[][] GetChunkSHA256Hashes(FileStream file)\n{\nlong numChunks = file.Length / ONE_MB;\nif (file.Length % ONE_MB > 0)\n{\nnumChunks++;\n}\nif (numChunks == 0)\n{\nreturn new byte[][] { CalculateSHA256Hash(null, 0) };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int)numChunks][];\ntry\n{\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = file.Read(buff, 0, ONE_MB)) > 0)\n{\nchunkSHA256Hashes[idx++] = CalculateSHA256Hash(buff, bytesRead);\n}\nreturn chunkSHA256Hashes;\n}\nfinally\n{\nif (file != null)\n{\ntry\nComputing the Tree Hash of a File API Version 2012-06-01 355",
      "start_idx": 564435,
      "end_idx": 565385,
      "metadata": {
        "num_sentences": 3,
        "num_words": 151,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Checksum Calculation"
            ]
          },
          "keywords": [
            "SHA256",
            "Tree Hash",
            "chunk",
            "checksum",
            "1 MB",
            "FileStream",
            "hash",
            "API",
            "ComputeSHA256TreeHash",
            "byte[][]"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "FileStream",
            "API Version 2012-06-01",
            "ONE_MB"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Checksum Computation",
          "secondary_categories": [
            "Cloud Storage",
            "File Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java Development"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA256 checksums for 1 MB chunks of a file and calculate a tree hash for use with Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute SHA256 checksums for file chunks?",
            "What is the process for calculating a tree hash for Amazon S3 Glacier?",
            "What code can I use to generate chunked SHA256 hashes?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Checksum Computation]",
        "tf_idf_keywords": [
          "ComputeSHA256TreeHash",
          "API",
          "byte[][]",
          "API Version 2012-06-01",
          "hash",
          "checksum",
          "Amazon S3 Glacier",
          "1 MB",
          "Tree Hash",
          "ONE_MB",
          "FileStream",
          "SHA256",
          "chunk"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_337",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\nfile.Close();\n}\ncatch (IOException ioe)\n{\nthrow ioe;\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1MB chunk\n* checksums.\n*\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level. Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level.\n*\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n*/\npublic static byte[] ComputeSHA256TreeHash(byte[][] chunkSHA256Hashes)\n{\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.GetLength(0) > 1)\n{\nint len = prevLvlHashes.GetLength(0) / 2;\nif (prevLvlHashes.GetLength(0) % 2 != 0)\n{\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.GetLength(0); i = i + 2, j++)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 356",
      "start_idx": 565385,
      "end_idx": 566528,
      "metadata": {
        "num_sentences": 5,
        "num_words": 193,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Algorithm Explanation"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "checksum",
            "array",
            "hash computation",
            "iteration",
            "byte[]",
            "concatenation",
            "Amazon S3 Glacier",
            "chunk"
          ],
          "entities": [
            "SHA-256",
            "Amazon S3 Glacier",
            "file",
            "chunkSHA256Hashes",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cryptographic Hashing",
          "secondary_categories": [
            "Cloud Storage",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA-256 Hashing Algorithm"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute the SHA-256 tree hash for 1MB chunks using an iterative algorithm, with code examples provided for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How is the SHA-256 tree hash computed for a file?",
            "What is the purpose of the SHA-256 tree hash in Amazon S3 Glacier?",
            "How can I implement a tree hash algorithm in my application?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cryptographic Hashing]",
        "tf_idf_keywords": [
          "SHA-256",
          "iteration",
          "file",
          "byte[]",
          "API Version 2012-06-01",
          "checksum",
          "hash computation",
          "Amazon S3 Glacier",
          "array",
          "chunkSHA256Hashes",
          "concatenation",
          "tree hash",
          "chunk"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_338",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nReceiving Checksums When Downloading Data\nWhen you retrieve an archive using the Initiate Job API (see Initiate Job (POST jobs)), you can\noptionally specify a range to retrieve of the archive. Similarly, when you download your data using\nthe Get Job Output API (see Get Job Output (GET output)), you can optionally specify a range of\ndata to download. There are two characteristics of these ranges that are important to understand\nwhen you are retrieving and downloading your archive's data. The range to retrieve is required to\nbe megabyte aligned to the archive. Both the range to retrieve and the range to download must be\ntree hash aligned in order to receive checksum values when you download your data. The definition\nof these two types of range alignments are as follows:\n\u2022 Megabyte aligned - A range [StartByte, EndBytes] is megabyte (1024*1024) aligned when\nStartBytes is divisible by 1 MB and EndBytes plus 1 is divisible by 1 MB or is equal to the end of\nthe archive specified (archive byte size minus 1). A range used in the Initiate Job API, if specified,\nis required to be megabyte aligned.\n\u2022 Tree-hash aligned - A range [StartBytes, EndBytes] is tree hash aligned with respect to an archive\nif and only if the root of the tree hash built over the range is equivalent to a node in the tree\nhash of the whole archive. Both the range to retrieve and range to download must be tree hash\naligned in order to receive checksum values for the data you download. For an example of ranges\nand their relationship to the archive tree hash, see Tree Hash Example: Retrieving an archive\nrange that is tree-hash aligned.\nNote that a range that is tree-hash aligned is also megabyte aligned. However, a megabyte\naligned range is not necessarily tree-hash aligned.\nThe following cases describe when you receive a checksum value when you download your archive\ndata:\n\u2022 If you do not specify a range to retrieve in the Initiate Job request and you download the whole\narchive in the Get Job Request.\n\u2022 If you do not specify a range to retrieve in the Initiate Job request and you do specify a tree-hash\naligned range to download in the Get Job Request.\n\u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you download\nthe whole range in the Get Job Request.\nReceiving Checksums When Downloading Data API Version 2012-06-01 358",
      "start_idx": 567512,
      "end_idx": 569903,
      "metadata": {
        "num_sentences": 16,
        "num_words": 418,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Technical Explanation",
              "Definitions",
              "API Behavior"
            ]
          },
          "keywords": [
            "checksum",
            "tree hash",
            "megabyte aligned",
            "Initiate Job API",
            "Get Job Output API",
            "range alignment",
            "archive",
            "root node",
            "byte size",
            "data retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job API",
            "Get Job Output API",
            "Tree Hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to receive checksum values when downloading data from Amazon S3 Glacier using the Initiate Job and Get Job Output APIs. It covers the importance of megabyte and tree-hash alignment for data ranges and provides scenarios where checksums are returned.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the requirements for receiving checksum values during data download in Amazon S3 Glacier?",
            "How do megabyte and tree-hash alignments affect data retrieval in Amazon S3 Glacier?",
            "When is a checksum value provided for downloaded archive data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "data retrieval",
          "root node",
          "byte size",
          "API Version 2012-06-01",
          "checksum",
          "Amazon S3 Glacier",
          "range alignment",
          "archive",
          "Tree Hash",
          "megabyte aligned",
          "Get Job Output API",
          "Initiate Job API",
          "tree hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_339",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you specify a\ntree-hash aligned range to download in the Get Job Request.\nIf you specify a range to retrieve in the Initiate Job request that is not tree hash aligned, then you\ncan still get your archive data but no checksum values are returned when you download data in the\nGet Job Request.\nTree Hash Example: Retrieving an archive range that is tree-hash aligned\nSuppose you have a 6.5 MB archive in your vault and you want to retrieve 2 MB of the archive. How\nyou specify the 2 MB range in the Initiate Job request determines if you receive data checksum\nvalues when you download your data. The following diagram illustrates two 2 MB ranges for the\n6.5 MB archive that you could download. Both ranges are megabyte aligned, but only one is tree-\nhash aligned.\nTree-Hash Aligned Range Specification\nThis section gives the exact specification for what constitutes a tree-hash aligned range. Tree-hash\naligned ranges are important when you are downloading a portion of an archive and you specify\nReceiving Checksums When Downloading Data API Version 2012-06-01 359",
      "start_idx": 569903,
      "end_idx": 571089,
      "metadata": {
        "num_sentences": 8,
        "num_words": 202,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "tree-hash aligned range",
            "Initiate Job request",
            "Get Job Request",
            "archive data",
            "checksum values",
            "tree hash",
            "megabyte aligned",
            "API Version 2012-06-01",
            "range specification",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job request",
            "Get Job Request",
            "API Version 2012-06-01",
            "archive range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archive data from Amazon S3 Glacier using tree-hash aligned ranges and discusses the implications for receiving checksum values. It provides an example of specifying aligned ranges for a 6.5 MB archive and defines the criteria for tree-hash alignment.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is a tree-hash aligned range in Amazon S3 Glacier?",
            "How do I retrieve archive data with checksum values?",
            "What happens if my range is not tree-hash aligned?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive range",
          "range specification",
          "API Version 2012-06-01",
          "archive data",
          "Get Job Request",
          "tree-hash aligned range",
          "Amazon S3 Glacier",
          "Initiate Job request",
          "vault",
          "megabyte aligned",
          "checksum values",
          "tree hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_340",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nthe range of data to retrieve and the range to download from the retrieved data. If both of these\nranges are tree-hash aligned, then you will receive checksum data when you download the data.\nA range [A, B] is tree-hash aligned with respect to an archive if and only if when a new tree hash\nis built over [A, B], the root of the tree hash of that range is equivalent to a node in the tree hash\nof the whole archive. You can see this shown in the diagram in Tree Hash Example: Retrieving an\narchive range that is tree-hash aligned. In this section, we provide the specification for tree-hash\nalignment.\nConsider [P, Q) as the range query for an archive of N megabytes (MB) and P and Q are multiples of\none MB. Note that the actual inclusive range is [P MB, Q MB \u2013 1 byte], but for simplicity, we show it\nas [P, Q). With these considerations, then\n\u2022 If P is an odd number, there is only one possible tree-hash aligned range\u2014that is [P, P + 1 MB).\n\u2022 If P is an even number and k is the maximum number, where P can be written as 2k * X, then\nthere are at most k tree-hash aligned ranges that start with P. X is an integer greater than 0. The\ntree-hash aligned ranges fall in the following categories:\n\u2022 i i\nFor each i, where (0 <= i <= k) and where P + 2 < N, then [P, Q + 2) is a tree-hash aligned\nrange.\n\u2022 P = 0 is the special case where A = 2[lgN]*0\nError Responses\nIn the event of an error, the API returns one of the following exceptions:\nCode Description HTTP Status Type\nCode\nAccessDeniedException Returned if there was an attempt 403 Client\nto access a resource not allowed Forbidden\nby an AWS Identity and Access\nManagement (IAM) policy, or the\nincorrect AWS account ID was\nused in the request URI. For more\ninformation, see Identity and\nError Responses API Version 2012-06-01 360",
      "start_idx": 571089,
      "end_idx": 572910,
      "metadata": {
        "num_sentences": 12,
        "num_words": 351,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Specification",
              "Error Handling"
            ]
          },
          "keywords": [
            "tree-hash alignment",
            "range query",
            "archive",
            "checksum",
            "Amazon S3 Glacier",
            "error response",
            "AccessDeniedException",
            "HTTP status",
            "IAM policy",
            "API exceptions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccessDeniedException",
            "IAM policy",
            "HTTP status 403",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains tree-hash alignment in Amazon S3 Glacier, detailing how to retrieve aligned data ranges and handle error responses, such as AccessDeniedException, during API interactions.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is tree-hash alignment in Amazon S3 Glacier?",
            "How are errors like AccessDeniedException handled in the API?",
            "What are the conditions for a range query to be tree-hash aligned?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP status",
          "range query",
          "AccessDeniedException",
          "API Version 2012-06-01",
          "HTTP status 403",
          "Amazon S3 Glacier",
          "checksum",
          "error response",
          "API exceptions",
          "archive",
          "IAM policy",
          "tree-hash alignment"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_341",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nAccess Management for Amazon\nS3 Glacier.\nBadRequest Returned if the request cannot 400 Bad Client\nbe processed. Request\nExpiredTokenException Returned if the security token 403 Client\nused in the request has expired. Forbidden\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process the expedited Unavailab\nrequest. This error only applies le\nto expedited retrievals and not\nto standard or bulk retrievals.\nInvalidParameterVa Returned if a parameter of the 400 Bad Client\nlueException request is incorrectly specified. Request\nInvalidSignatureEx Returned if the request signature 403 Client\nception is invalid. Forbidden\nLimitExceededException Returned if the request results in 400 Bad Client\none of the following limits being Request\nexceeded, a vault limit, a tags\nlimit, or the provisioned capacity\nlimit.\nMissingAuthenticat Returned if no authentication 400 Bad Client\nionTokenException data is found for the request. Request\nMissingParameterVa Returned if a required header or 400 Bad Client\nlueException parameter is missing from the Request\nrequest.\nError Responses API Version 2012-06-01 361",
      "start_idx": 572910,
      "end_idx": 574133,
      "metadata": {
        "num_sentences": 11,
        "num_words": 173,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "HTTP Status Types"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP Status",
            "BadRequest",
            "ExpiredTokenException",
            "InsufficientCapacityException",
            "InvalidParameterValueException",
            "InvalidSignatureException",
            "LimitExceededException",
            "MissingAuthenticationTokenException",
            "MissingParameterValueException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "HTTP Status Codes",
            "Error Responses",
            "Security Token"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation chunk provides reference information about error codes and HTTP status types for Amazon S3 Glacier, including descriptions and conditions for each error response.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the error codes for Amazon S3 Glacier?",
            "What does the HTTP status 400 signify in Amazon S3 Glacier?",
            "How is insufficient capacity handled in expedited retrievals?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP Status",
          "MissingParameterValueException",
          "Security Token",
          "ExpiredTokenException",
          "BadRequest",
          "API Version 2012-06-01",
          "HTTP Status Codes",
          "Amazon S3 Glacier",
          "InvalidParameterValueException",
          "LimitExceededException",
          "MissingAuthenticationTokenException",
          "Error Responses",
          "InvalidSignatureException",
          "InsufficientCapacityException"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_342",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nPolicyEnforcedExce Returned if a retrieval job will 400 Bad Client\nption exceed the current data policy's Request\nretrieval rate limit. For more\ninformation about data retrieval\npolicies, see S3 Glacier Data\nRetrieval Policies.\nResourceNotFoundEx Returned if the specified 404 Not Client\nception resource such as a vault, upload Found\nID, or job ID does not exist.\nRequestTimeoutExce Returned if uploading an archive 408 Request Client\nption and Amazon S3 Glacier (S3 Timeout\nGlacier) times out while receiving\nthe upload.\nSerializationException Returned if the body of the 400 Bad Client\nrequest is invalid. If including a Request\nJSON payload, check that it is\nwell-formed.\nServiceUnavailable Returned if the service cannot 500 Server\nException complete the request. Internal\nServer\nError\nThrottlingException Returned if you need to reduce 400 Bad Client\nyour rate of requests to S3 Request\nGlacier.\nUnrecognizedClient Returned if the Access Key ID or 400 Bad Client\nException security token is invalid. Request\nVarious S3 Glacier APIs return the same exception, but with different exception messages to help\nyou troubleshoot the specific error encountered.\nError Responses API Version 2012-06-01 362",
      "start_idx": 574133,
      "end_idx": 575410,
      "metadata": {
        "num_sentences": 11,
        "num_words": 191,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "HTTP Status Codes",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "retrieval job",
            "data policy",
            "vault",
            "upload ID",
            "job ID",
            "serialization",
            "throttling",
            "Access Key ID",
            "security token"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "PolicyEnforcedException",
            "ResourceNotFoundException",
            "SerializationException",
            "ThrottlingException"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for error codes and HTTP status responses returned by Amazon S3 Glacier APIs, along with their descriptions and troubleshooting guidance.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the common error codes returned by Amazon S3 Glacier?",
            "What does the PolicyEnforcedException indicate in S3 Glacier?",
            "How can I troubleshoot a ResourceNotFoundException in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "security token",
          "throttling",
          "ThrottlingException",
          "PolicyEnforcedException",
          "SerializationException",
          "Amazon S3 Glacier",
          "data policy",
          "serialization",
          "vault",
          "Access Key ID",
          "ResourceNotFoundException",
          "job ID",
          "retrieval job",
          "upload ID"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_343",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nS3 Glacier returns error information in the response body. The following examples show some of\nthe error responses.\nExample 1: Describe Job request with a job ID that does not exist\nSuppose you send a Describe Job (GET JobID) request for a job that does not exist. That is, you\nspecify a job ID that does not exist.\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nIn response, S3 Glacier returns the following error response.\nHTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABaZ9N92Iiyv4N7sru3ABEpSQkuFtmH3NP6aAC51ixfjg\nContent-Type: application/json\nContent-Length: 185\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"The job ID was not found: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID\",\n\"type\": \"Client\"\n}\nWhere:\nCode\nOne of the general exceptions.\nType: String\nMessage\nA generic description of the error condition specific to the API that returns the error.\nExample 1: Describe Job request with a job ID that does not exist API Version 2012-06-01 363",
      "start_idx": 575410,
      "end_idx": 576900,
      "metadata": {
        "num_sentences": 8,
        "num_words": 161,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "ErrorResponse",
              "APIRequest",
              "APIResponse"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Describe Job",
            "ResourceNotFoundException",
            "job ID",
            "error response",
            "HTTP 404",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "RequestId",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ResourceNotFoundException",
            "Describe Job",
            "HTTP 404",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation describes an example of an error response returned by Amazon S3 Glacier when a Describe Job request is made with a nonexistent job ID.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What happens if I send a Describe Job request with an invalid job ID?",
            "What is the structure of an error response from Amazon S3 Glacier?",
            "How does Amazon S3 Glacier handle job-related errors?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "API Version 2012-06-01",
          "HTTP 404",
          "Amazon S3 Glacier",
          "Describe Job",
          "RequestId",
          "ResourceNotFoundException",
          "job ID",
          "x-amz-glacier-version",
          "error response"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_344",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nType\nThe source of the error. The field can be one of the following values: Client, Server, or\nUnknown.\nType: String.\nNote the following in the preceding response:\n\u2022 For the error response, S3 Glacier returns status code values of 4xx and 5xx. In this example, the\nstatus code is 404 Not Found.\n\u2022 The Content-Type header value application/json indicates JSON in the body\n\u2022 The JSON in the body provides the error information.\nIn the previous request, instead of a bad job ID, suppose you specify a vault that does not exist. The\nresponse returns a different message.\nHTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABBeC9Zw0rp_5D0L8VfB3FA_WlTupqTKAUehMcPhdgni0\nContent-Type: application/json\nContent-Length: 154\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"Vault not found for ARN: arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault\",\n\"type\": \"Client\"\n}\nExample 2: List Jobs request with an invalid value for the request\nparameter\nIn this example you send a List Jobs (GET jobs) request to retrieve vault jobs with a specific\nstatuscode, and you provide an incorrect statuscode value finished, instead of the\nacceptable values InProgress, Succeeded, or Failed.\nGET /-/vaults/examplevault/jobs?statuscode=finished HTTP/1.1\nExample 2: List Jobs request with an invalid value for the request parameter API Version 2012-06-01 364",
      "start_idx": 576900,
      "end_idx": 578320,
      "metadata": {
        "num_sentences": 10,
        "num_words": 206,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Response",
              "Example",
              "HTTP Details"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "error response",
            "status code",
            "Content-Type",
            "JSON",
            "404 Not Found",
            "ResourceNotFoundException",
            "vault",
            "List Jobs",
            "statuscode"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ResourceNotFoundException",
            "ARN",
            "HTTP/1.1",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains error responses and examples for Amazon S3 Glacier, including handling invalid requests and interpreting HTTP status codes and JSON error messages.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What is the error response format for S3 Glacier?",
            "How does S3 Glacier handle a 404 Not Found error?",
            "What are the acceptable statuscode values for a List Jobs request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "Content-Type",
          "HTTP/1.1",
          "API Version 2012-06-01",
          "List Jobs",
          "status code",
          "Amazon S3 Glacier",
          "vault",
          "ResourceNotFoundException",
          "ARN",
          "statuscode",
          "S3 Glacier",
          "error response",
          "404 Not Found"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_346",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Initiate Vault Lock (POST lock-policy)\n\u2022 List Tags For Vault (GET tags)\n\u2022 List Vaults (GET vaults)\n\u2022 Remove Tags From Vault (POST tags remove)\n\u2022 Set Vault Access Policy (PUT access-policy)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\nAbort Vault Lock (DELETE lock-policy)\nDescription\nThis operation stops the vault locking process if the vault lock is not in the Locked state. If the\nvault lock is in the Locked state when this operation is requested, the operation returns an\nAccessDeniedException error. Stopping the vault locking process removes the vault lock policy\nfrom the specified vault.\nA vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can get\nthe state of a vault lock by calling Get Vault Lock (GET lock-policy). For more information about the\nvault locking process, see S3 Glacier Vault Lock. For more information about vault lock policies, see\nVault Lock Policies.\nThis operation is idempotent. You can successfully invoke this operation multiple times, if the vault\nlock is in the InProgress state or if there is no policy associated with the vault.\nRequests\nTo delete the vault lock policy, send an HTTP DELETE request to the URI of the vault's lock-\npolicy subresource.\nSyntax\nDELETE /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nAbort Vault Lock API Version 2012-06-01 366",
      "start_idx": 579650,
      "end_idx": 581258,
      "metadata": {
        "num_sentences": 12,
        "num_words": 245,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "HTTP Request Syntax"
            ]
          },
          "keywords": [
            "Abort Vault Lock",
            "vault locking process",
            "lock-policy",
            "AccessDeniedException",
            "InProgress state",
            "Locked state",
            "Vault Lock Policies",
            "HTTP DELETE request",
            "x-amz-glacier-version",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "lock-policy subresource",
            "AccessDeniedException",
            "Complete Vault Lock"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP DELETE"
          ]
        },
        "semantic": {
          "summary": "The Abort Vault Lock operation in Amazon S3 Glacier stops the vault locking process if the vault is not in the Locked state, removing the lock policy from the vault. It uses an HTTP DELETE request with specific syntax and headers.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I abort a vault lock in Amazon S3 Glacier?",
            "What happens if the vault is in the Locked state during the Abort Vault Lock operation?",
            "What is the HTTP syntax for the Abort Vault Lock request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "vault locking process",
          "Abort Vault Lock",
          "AccessDeniedException",
          "lock-policy subresource",
          "Complete Vault Lock",
          "InProgress state",
          "Amazon S3 Glacier",
          "Vault Lock",
          "lock-policy",
          "Locked state",
          "S3 Glacier",
          "x-amz-glacier-version",
          "HTTP DELETE request",
          "Vault Lock Policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_347",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the policy is successfully deleted, S3 Glacier returns an HTTP 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nAbort Vault Lock API Version 2012-06-01 367",
      "start_idx": 581258,
      "end_idx": 582453,
      "metadata": {
        "num_sentences": 13,
        "num_words": 189,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details",
              "Request Details"
            ]
          },
          "keywords": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "Request Parameters",
            "HTTP 204 No Content",
            "Abort Vault Lock",
            "API Version",
            "Request Body",
            "Common Request Headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Common Request Headers",
            "HTTP 204 No Content",
            "Abort Vault Lock API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the API operation for deleting a policy in Amazon S3 Glacier, including details on request and response headers, parameters, and expected responses.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response code for a successful policy deletion in Amazon S3 Glacier?",
            "What is the format for specifying the AWS account ID in requests?",
            "Does this API operation require a request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Abort Vault Lock",
          "Request Parameters",
          "Amazon S3 Glacier",
          "Request Body",
          "Common Request Headers",
          "AWS account ID",
          "Response Headers",
          "Abort Vault Lock API",
          "API Version",
          "Request Headers",
          "HTTP 204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_349",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nAdd Tags To Vault (POST tags add)\nThis operation adds the specified tags to a vault. Each tag is composed of a key and a value. Each\nvault can have up to 50 tags. If your request would cause the tag limit for the vault to be exceeded,\nthe operation throws the LimitExceededException error.\nIf a tag already exists on the vault under a specified key, the existing key value will be overwritten.\nFor more information about tags, see Tagging Amazon S3 Glacier Resources.\nRequest Syntax\nTo add tags to a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example.\nPOST /AccountId/vaults/vaultName/tags?operation=add HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"string\": \"string\",\n\"string\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\nAdd Tags To Vault API Version 2012-06-01 369",
      "start_idx": 583618,
      "end_idx": 584859,
      "metadata": {
        "num_sentences": 10,
        "num_words": 199,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Tagging"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "tags",
            "LimitExceededException",
            "Tagging Resources",
            "POST request",
            "HTTP syntax",
            "AccountId",
            "x-amz-glacier-version",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "LimitExceededException",
            "AccountId",
            "AWS Command Line Interface",
            "Tags"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the 'Add Tags To Vault' API operation in Amazon S3 Glacier to add tags to a vault, including syntax, limitations, and error handling.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 Glacier vault?",
            "What is the syntax for the 'Add Tags To Vault' API operation?",
            "What happens if the tag limit is exceeded for a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "POST request",
          "AccountId",
          "Amazon S3 Glacier",
          "Tagging Resources",
          "vault",
          "x-amz-glacier-version",
          "LimitExceededException",
          "AWS SDK",
          "Tags",
          "HTTP syntax",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_350",
      "text": "\n\nAmazon S3 Glacier Developer Guide\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nName Description Required\noperation=add A single query string parameter operation with a value Yes\nof add to distinguish it from Remove Tags From Vault (POST\ntags remove).\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nTags\nThe tags to add to the vault. Each tag is composed of a key and a value. The value can be an\nempty string.\nType: String to String map\nLength constraints: Minimum length of 1. Maximum length 10.\nRequired: Yes\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nAdd Tags To Vault API Version 2012-06-01 370",
      "start_idx": 584859,
      "end_idx": 585947,
      "metadata": {
        "num_sentences": 13,
        "num_words": 181,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "Parameter Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "account ID",
            "request headers",
            "request body",
            "tags",
            "JSON fields",
            "HTTP 204",
            "Add Tags To Vault",
            "API Version 2012-06-01",
            "operation=add"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Add Tags To Vault",
            "HTTP 204",
            "API Version 2012-06-01",
            "AWS account ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the procedure for using the 'Add Tags To Vault' operation in Amazon S3 Glacier, including required parameters, request headers, and response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the 'Add Tags To Vault' operation in Amazon S3 Glacier?",
            "What are the required parameters and headers for this API operation?",
            "What response can be expected when the operation is successful?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "account ID",
          "API Version 2012-06-01",
          "HTTP 204",
          "Amazon S3 Glacier",
          "operation=add",
          "JSON fields",
          "Add Tags To Vault",
          "request headers",
          "request body",
          "AWS account ID",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_351",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP POST request with the tags to add to the vault.\nPOST /-/vaults/examplevault/tags?operation=add HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"examplekey1\": \"examplevalue1\",\n\"examplekey2\": \"examplevalue2\"\n}\n}\nExample Response\nIf the request was successful S3 Glacier returns a HTTP 204 No Content as shown in the\nfollowing example.\nAdd Tags To Vault API Version 2012-06-01 371",
      "start_idx": 585947,
      "end_idx": 587128,
      "metadata": {
        "num_sentences": 7,
        "num_words": 130,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "HTTP POST",
            "Tags",
            "Vault",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "Error Responses",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP POST",
            "AWS4-HMAC-SHA256",
            "API Version 2012-06-01",
            "Vault Tags"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP POST"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add tags to a vault in Amazon S3 Glacier using an HTTP POST request, including headers, a sample request, and response details.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I add tags to a vault in Amazon S3 Glacier?",
            "What response headers are used in this operation?",
            "What errors might occur when adding tags to a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "Authorization",
          "HTTP POST",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Vault",
          "Error Responses",
          "Response Headers",
          "Tags",
          "API Version",
          "Vault Tags",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_352",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 List Tags For Vault (GET tags)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nCreate Vault (PUT vault)\nDescription\nThis operation creates a new vault with the specified name. The name of the vault must be unique\nwithin an AWS Region for an AWS account. You can create up to 1,000 vaults per account. For\ninformation on creating more vaults, go to the Amazon S3 Glacier product detail page.\nYou must use the following guidelines when naming a vault.\n\u2022 Names can be between 1 and 255 characters long.\n\u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.' (period).\nThis operation is idempotent, you can send the same request multiple times and it has no further\neffect after the first time Amazon S3 Glacier (S3 Glacier) creates the specified vault.\nCreate Vault API Version 2012-06-01 372",
      "start_idx": 587128,
      "end_idx": 588263,
      "metadata": {
        "num_sentences": 10,
        "num_words": 185,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Guidelines"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Create Vault",
            "API Version",
            "vault name",
            "idempotent",
            "AWS Region",
            "RequestId",
            "tags",
            "AWS account",
            "SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Create Vault API",
            "AWS Command Line Interface",
            "AWS Region",
            "RequestId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This document explains the Create Vault operation in Amazon S3 Glacier, including guidelines for naming vaults, idempotency behavior, and API version details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a new vault in Amazon S3 Glacier?",
            "What are the naming guidelines for vaults in AWS Glacier?",
            "Is the Create Vault operation idempotent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS account",
          "AWS Command Line Interface",
          "Create Vault",
          "Create Vault API",
          "Amazon S3 Glacier",
          "SDKs",
          "vault name",
          "RequestId",
          "idempotent",
          "API Version",
          "tags",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_353",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo create a vault, send an HTTP PUT request to the URI of the vault to be created.\nPUT /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body for this operation must be empty (0 bytes).\nResponses\nSyntax\nHTTP/1.1 201 Created\nCreate Vault API Version 2012-06-01 373",
      "start_idx": 588263,
      "end_idx": 589371,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Integration",
              "HTTP Request Syntax"
            ]
          },
          "keywords": [
            "vault",
            "HTTP PUT",
            "AWS account ID",
            "Amazon S3 Glacier",
            "request headers",
            "authorization",
            "request body",
            "responses",
            "x-amz-glacier-version",
            "URI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "SignatureValue",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using an HTTP PUT request, detailing syntax, headers, and response structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What HTTP headers are required for the Create Vault operation?",
            "What is the expected response for a successful vault creation request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SignatureValue",
          "authorization",
          "URI",
          "AccountId",
          "Amazon S3 Glacier",
          "VaultName",
          "vault",
          "HTTP PUT",
          "request headers",
          "AWS account ID",
          "request body",
          "x-amz-glacier-version",
          "responses",
          "glacier.Region.amazonaws.com"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_354",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation The relative URI path of the vault that was created.\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP PUT request to create a vault named examplevault.\nPUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nContent-Length: 0\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nCreate Vault API Version 2012-06-01 374",
      "start_idx": 589371,
      "end_idx": 590495,
      "metadata": {
        "num_sentences": 7,
        "num_words": 122,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Headers",
              "Errors",
              "Example Request"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Response Headers",
            "Location",
            "HTTP PUT",
            "vault",
            "x-amz-Date",
            "x-amz-glacier-version",
            "Authorization",
            "Error Responses",
            "Create Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP PUT",
            "examplevault",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on creating a vault in Amazon S3 Glacier, including response headers, error handling, and an example HTTP PUT request.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the response headers for creating a vault in Amazon S3 Glacier?",
            "How do I create a vault using an HTTP PUT request?",
            "What errors might occur when using the Create Vault API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Location",
          "Authorization",
          "Create Vault",
          "examplevault",
          "AWS4-HMAC-SHA256",
          "Amazon S3 Glacier",
          "HTTP PUT",
          "vault",
          "x-amz-Date",
          "Response Headers",
          "Error Responses",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_355",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Response\nS3 Glacier creates the vault and returns the relative URI path of the vault in the Location header.\nThe account ID is always displayed in the Location header regardless of whether the account ID or\na hyphen ('-') was specified in the request.\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nLocation: /111122223333/vaults/examplevault\nRelated Sections\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nComplete Vault Lock (POST lockId)\nDescription\nThis operation completes the vault locking process by transitioning the vault lock from\nthe InProgress state to the Locked state, which causes the vault lock policy to become\nunchangeable. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST\nlock-policy). You can obtain the state of the vault lock by calling Get Vault Lock (GET lock-policy).\nFor more information about the vault locking process, see S3 Glacier Vault Lock.\nThis operation is idempotent. This request is always successful if the vault lock is in the Locked\nstate and the provided lock ID matches the lock ID originally used to lock the vault.\nComplete Vault Lock API Version 2012-06-01 375",
      "start_idx": 590495,
      "end_idx": 591963,
      "metadata": {
        "num_sentences": 9,
        "num_words": 229,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Response",
              "API Interaction"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault lock",
            "Location header",
            "lock ID",
            "vault locking process",
            "idempotent",
            "GET vaults",
            "POST lock-policy",
            "AWS SDKs",
            "Complete Vault Lock"
          ],
          "entities": [
            "S3 Glacier",
            "AWS Command Line Interface",
            "vault lock policy",
            "lock ID",
            "vaults/examplevault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier handles vault creation and the Complete Vault Lock operation, detailing the locking process and its API responses.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier create and return vault information?",
            "What is the Complete Vault Lock operation in S3 Glacier?",
            "How can I verify the state of a vault lock?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault locking process",
          "AWS Command Line Interface",
          "vault lock",
          "lock ID",
          "Complete Vault Lock",
          "vaults/examplevault",
          "Amazon S3 Glacier",
          "Location header",
          "vault lock policy",
          "AWS SDKs",
          "POST lock-policy",
          "idempotent",
          "S3 Glacier",
          "GET vaults"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_356",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nIf an invalid lock ID is passed in the request when the vault lock is in the Locked state, the\noperation returns an AccessDeniedException error. If an invalid lock ID is passed in the request\nwhen the vault lock is in the InProgress state, the operation throws an InvalidParameter\nerror.\nRequests\nTo complete the vault locking process, send an HTTP POST request to the URI of the vault's lock-\npolicy subresource with a valid lock ID.\nSyntax\nPOST /AccountId/vaults/vaultName/lock-policy/lockId HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nThe lockId value is the lock ID obtained from a Initiate Vault Lock (POST lock-policy) request.\nRequest Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nComplete Vault Lock API Version 2012-06-01 376",
      "start_idx": 591963,
      "end_idx": 593435,
      "metadata": {
        "num_sentences": 12,
        "num_words": 229,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Error Handling",
              "API Syntax",
              "Request Parameters"
            ]
          },
          "keywords": [
            "vault lock",
            "AccessDeniedException",
            "InvalidParameter",
            "lock ID",
            "HTTP POST",
            "lock-policy",
            "AWS account ID",
            "x-amz-glacier-version",
            "Amazon S3 Glacier",
            "Initiate Vault Lock"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccessDeniedException",
            "InvalidParameter",
            "AWS account ID",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Error Handling",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to complete the vault locking process in Amazon S3 Glacier, including handling errors when invalid lock IDs are used and the required HTTP POST request syntax.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What happens if an invalid lock ID is used during the vault locking process?",
            "What is the syntax for the HTTP POST request to complete a vault lock?",
            "What headers are required for the Complete Vault Lock operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "lock ID",
          "vault lock",
          "HTTP POST",
          "AccessDeniedException",
          "Initiate Vault Lock",
          "Amazon S3 Glacier",
          "lock-policy",
          "AWS account ID",
          "x-amz-glacier-version",
          "InvalidParameter"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_357",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP POST request with the lock ID to complete the vault locking\nprocess.\nPOST /-/vaults/examplevault/lock-policy/AE863rKkWZU53SLW5be4DUcW HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 204 No Content\nresponse, as shown in the following example.\nComplete Vault Lock API Version 2012-06-01 377",
      "start_idx": 593435,
      "end_idx": 594744,
      "metadata": {
        "num_sentences": 8,
        "num_words": 147,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Syntax",
              "Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "HTTP 204 No Content",
            "Amazon S3 Glacier",
            "vault locking process",
            "response headers",
            "error messages",
            "lock ID",
            "AWS4-HMAC-SHA256",
            "API Version 2012-06-01",
            "Authorization",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP 204 No Content",
            "vault locking process",
            "AWS4-HMAC-SHA256",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the HTTP 204 No Content response for Amazon S3 Glacier API operations, including syntax, headers, and examples for completing the vault locking process.",
          "intents": [
            "Reference",
            "Debug",
            "How-To"
          ],
          "potential_questions": [
            "What is the HTTP response for a successful Amazon S3 Glacier operation?",
            "How do I complete the vault locking process using Amazon S3 Glacier?",
            "What headers are included in the response for this API operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "response headers",
          "vault locking process",
          "lock ID",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "error messages",
          "HTTP 204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_358",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault (DELETE vault)\nDescription\nThis operation deletes a vault. Amazon S3 Glacier (S3 Glacier) will delete a vault only if there are no\narchives in the vault as per the last inventory and there have been no writes to the vault since the\nlast inventory. If either of these conditions is not satisfied, the vault deletion fails (that is, the vault\nis not removed) and S3 Glacier returns an error.\nYou can use the Describe Vault (GET vault) operation that provides vault information, including\nthe number of archives in the vault; however, the information is based on the vault inventory S3\nGlacier last generated.\nThis operation is idempotent.\nDelete Vault API Version 2012-06-01 378",
      "start_idx": 594744,
      "end_idx": 595872,
      "metadata": {
        "num_sentences": 6,
        "num_words": 177,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Reference",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archives",
            "inventory",
            "vault deletion",
            "Describe Vault",
            "idempotent",
            "API",
            "HTTP/1.1 204",
            "RequestId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Delete Vault",
            "Describe Vault",
            "Vault Lock",
            "AWS Command Line Interface"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Delete Vault operation in Amazon S3 Glacier, including prerequisites such as no archives in the vault and no recent writes since the last inventory. It also highlights related operations and error handling specifics.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the prerequisites for deleting a vault in Amazon S3 Glacier?",
            "How does the Delete Vault operation handle errors?",
            "What related operations can be used with vault locks in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Delete Vault",
          "AWS Command Line Interface",
          "API",
          "idempotent",
          "HTTP/1.1 204",
          "Amazon S3 Glacier",
          "inventory",
          "vault",
          "RequestId",
          "Vault Lock",
          "Describe Vault",
          "archives",
          "vault deletion"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_359",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nWhen you delete a vault, the vault access policy attached to the vault is also deleted. For\nmore information about vault access policies, see Vault Access Policies.\nRequests\nTo delete a vault, send a DELETE request to the vault resource URI.\nSyntax\nDELETE /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nDelete Vault API Version 2012-06-01 379",
      "start_idx": 595872,
      "end_idx": 596991,
      "metadata": {
        "num_sentences": 11,
        "num_words": 173,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Syntax",
              "Request Details",
              "Warning"
            ]
          },
          "keywords": [
            "vault",
            "access policy",
            "DELETE request",
            "vault resource URI",
            "AccountId",
            "AWS account ID",
            "x-amz-glacier-version",
            "request headers",
            "Amazon S3 Glacier",
            "vault deletion"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "vault",
            "x-amz-glacier-version",
            "HTTP"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using a DELETE request, including syntax, headers, and considerations for vault access policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier?",
            "What is the syntax for the DELETE request to remove a vault?",
            "What happens to the vault access policy when a vault is deleted?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "vault deletion",
          "vault resource URI",
          "AccountId",
          "Amazon S3 Glacier",
          "vault",
          "DELETE request",
          "AWS account ID",
          "request headers",
          "access policy",
          "x-amz-glacier-version",
          "HTTP"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_360",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example deletes a vault named examplevault. The example request is a DELETE\nrequest to the URI of the resource (the vault) to delete.\nDELETE /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nDelete Vault API Version 2012-06-01 380",
      "start_idx": 596991,
      "end_idx": 598173,
      "metadata": {
        "num_sentences": 7,
        "num_words": 126,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Error Handling",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Delete Vault",
            "HTTP/1.1 204 No Content",
            "Request Headers",
            "Response Headers",
            "Response Body",
            "Error Responses",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Delete Vault API",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Error Handling",
            "HTTP Protocols"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Delete Vault API operation for Amazon S3 Glacier, including its syntax, response structure, and an example request and response.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the response structure for the Delete Vault API in Amazon S3 Glacier?",
            "How do I delete a vault using the Amazon S3 Glacier API?",
            "What headers are required for the Delete Vault API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Delete Vault",
          "x-amzn-RequestId",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "Delete Vault API",
          "Response Headers",
          "Error Responses",
          "HTTP/1.1 204 No Content",
          "Response Body",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_361",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault Access Policy (DELETE access-policy)\nDescription\nThis operation deletes the access policy associated with the specified vault. The operation is\neventually consistent\u2014that is, it might take some time for Amazon S3 Glacier (S3 Glacier) to\ncompletely remove the access policy, and you might still see the effect of the policy for a short\ntime after you send the delete request.\nThis operation is idempotent. You can invoke delete multiple times, even if there is no policy\nassociated with the vault. For more information about vault access policies, see Vault Access\nPolicies.\nRequests\nTo delete the current vault access policy, send an HTTP DELETE request to the URI of the vault's\naccess-policy subresource.\nSyntax\nDELETE /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nDelete Vault Access Policy API Version 2012-06-01 381",
      "start_idx": 598173,
      "end_idx": 599420,
      "metadata": {
        "num_sentences": 7,
        "num_words": 186,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "HTTP Request"
            ]
          },
          "keywords": [
            "vault access policy",
            "Amazon S3 Glacier",
            "DELETE request",
            "idempotent",
            "access-policy subresource",
            "AWS SDK",
            "authorization",
            "eventually consistent",
            "vaultName",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Vault Access Policies",
            "DELETE request",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete the access policy associated with a specific Amazon S3 Glacier vault using the DELETE operation. It includes syntax, details on idempotency, and eventual consistency behavior.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault access policy in Amazon S3 Glacier?",
            "What is the syntax for the DELETE access-policy API operation?",
            "Is the DELETE operation for vault access policies idempotent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "authorization",
          "idempotent",
          "API Version 2012-06-01",
          "AccountId",
          "vaultName",
          "Amazon S3 Glacier",
          "Vault Access Policies",
          "DELETE request",
          "vault access policy",
          "access-policy subresource",
          "AWS SDK",
          "eventually consistent"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_362",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn response, S3 Glacier returns 204 No Content if the policy is successfully deleted.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nDelete Vault Access Policy API Version 2012-06-01 382",
      "start_idx": 599420,
      "end_idx": 600584,
      "metadata": {
        "num_sentences": 12,
        "num_words": 181,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "Request Headers",
            "Response Headers",
            "Vault Access Policy",
            "Delete Operation",
            "204 No Content",
            "API Version",
            "Request Parameters",
            "AWS Credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "Vault Access Policy",
            "x-amzn-RequestId",
            "AWS account ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Delete Vault Access Policy operation in Amazon S3 Glacier, including its API version, request and response details, and headers used.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the API version for the Delete Vault Access Policy operation in Amazon S3 Glacier?",
            "What response does S3 Glacier provide upon successful deletion of a vault access policy?",
            "What headers are used in this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "AWS Credentials",
          "Request Parameters",
          "AccountId",
          "Amazon S3 Glacier",
          "Vault Access Policy",
          "Delete Operation",
          "AWS account ID",
          "Response Headers",
          "API Version",
          "Request Headers",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_364",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nDelete Vault Notifications (DELETE notification-configuration)\nDescription\nThis operation deletes the notification configuration set for a vault Set Vault Notification\nConfiguration (PUT notification-configuration). The operation is eventually consistent\u2014that is, it\nmight take some time for Amazon S3 Glacier (S3 Glacier) to completely disable the notifications,\nand you might still receive some notifications for a short time after you send the delete request.\nRequests\nTo delete a vault's notification configuration, send a DELETE request to the vault's\nnotification-configuration subresource.\nSyntax\nDELETE /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nDelete Vault Notifications API Version 2012-06-01 384",
      "start_idx": 601853,
      "end_idx": 603334,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Configuration Deletion",
              "HTTP Request"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "notification configuration",
            "vault",
            "DELETE request",
            "AWS Command Line Interface",
            "eventually consistent",
            "AccountId",
            "x-amz-glacier-version",
            "request headers",
            "notification-configuration subresource"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AccountId",
            "x-amz-glacier-version",
            "notification-configuration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API Operations",
          "secondary_categories": [
            "AWS Services",
            "Notification Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete the notification configuration for an Amazon S3 Glacier vault using a DELETE API request. The operation is eventually consistent, meaning some notifications might still be received shortly after the request is made.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a notification configuration for an Amazon S3 Glacier vault?",
            "What is the DELETE request syntax for removing vault notifications in S3 Glacier?",
            "What does 'eventually consistent' mean in the context of deleting notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API Operations]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "notification-configuration",
          "AccountId",
          "Amazon S3 Glacier",
          "vault",
          "DELETE request",
          "notification-configuration subresource",
          "notification configuration",
          "request headers",
          "x-amz-glacier-version",
          "eventually consistent"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_365",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to remove notification configuration for a vault.\nExample Request\nIn this example, a DELETE request is sent to the notification-configuration subresource of\nthe vault called examplevault.\nDELETE /111122223333/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Vault Notifications API Version 2012-06-01 385",
      "start_idx": 603334,
      "end_idx": 604546,
      "metadata": {
        "num_sentences": 8,
        "num_words": 126,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "request body",
            "response headers",
            "response body",
            "HTTP DELETE",
            "notification configuration",
            "vault",
            "error responses",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocols"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on the DELETE operation for removing notification configurations from an Amazon S3 Glacier vault, including request/response behavior and an example request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I remove notification configurations from an Amazon S3 Glacier vault?",
            "What is the response format for the DELETE operation in Amazon S3 Glacier?",
            "What headers are required for the DELETE notification configuration request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "response headers",
          "AWS4-HMAC-SHA256",
          "examplevault",
          "error responses",
          "Amazon S3 Glacier",
          "vault",
          "notification configuration",
          "request body",
          "response body",
          "x-amz-glacier-version",
          "HTTP DELETE"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_366",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDescribe Vault (GET vault)\nDescription\nThis operation returns information about a vault, including the vault Amazon Resource Name\n(ARN), the date the vault was created, the number of archives contained within the vault, and the\ntotal size of all the archives in the vault. The number of archives and their total size are as of the\nlast vault inventory Amazon S3 Glacier (S3 Glacier) generated (see Working with Vaults in Amazon\nS3 Glacier). S3 Glacier generates vault inventories approximately daily. This means that if you\nadd or remove an archive from a vault, and then immediately send a Describe Vault request, the\nresponse might not reflect the changes.\nRequests\nTo get information about a vault, send a GET request to the URI of the specific vault resource.\nSyntax\nGET /AccountId/vaults/VaultName HTTP/1.1\nDescribe Vault API Version 2012-06-01 386",
      "start_idx": 604546,
      "end_idx": 605925,
      "metadata": {
        "num_sentences": 6,
        "num_words": 205,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "HTTP Syntax",
              "Description"
            ]
          },
          "keywords": [
            "vault",
            "Amazon S3 Glacier",
            "API",
            "Describe Vault",
            "vault inventory",
            "ARN",
            "HTTP request",
            "archives",
            "notifications",
            "SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Vault API",
            "AWS Command Line Interface",
            "Vault ARN",
            "Vault Notification Configuration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "The document provides reference information about the Describe Vault operation in Amazon S3 Glacier, including its API response, syntax, and details about vaults and inventories.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I use the Describe Vault API in Amazon S3 Glacier?",
            "What information does the Describe Vault operation return?",
            "What is the syntax for sending a GET request to retrieve vault details?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "API",
          "Describe Vault API",
          "Vault Notification Configuration",
          "Amazon S3 Glacier",
          "SDKs",
          "vault",
          "vault inventory",
          "ARN",
          "notifications",
          "Describe Vault",
          "archives",
          "Vault ARN",
          "HTTP request"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_367",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"CreationDate\" : String,\n\"LastInventoryDate\" : String,\n\"NumberOfArchives\" : Number,\n\"SizeInBytes\" : Number,\nDescribe Vault API Version 2012-06-01 387",
      "start_idx": 605925,
      "end_idx": 606991,
      "metadata": {
        "num_sentences": 8,
        "num_words": 153,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request/Response",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Request Headers",
            "Request Body",
            "Responses",
            "x-amz-glacier-version",
            "Authorization",
            "vault",
            "API Version",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Describe Vault API",
            "x-amzn-RequestId",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Requests"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier Describe Vault API, including headers, responses, and key parameters for making API requests.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the Describe Vault API in Amazon S3 Glacier?",
            "What headers are required for making a Describe Vault API request?",
            "What does the Describe Vault API response include?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "Authorization",
          "Describe Vault API",
          "Responses",
          "Amazon S3 Glacier",
          "Request Body",
          "x-amz-glacier-version",
          "vault",
          "Content-Length",
          "AWS account ID",
          "API Version",
          "Request Headers",
          "glacier.Region.amazonaws.com"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_368",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\" : String,\n\"VaultName\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nCreationDate\nThe UTC date when the vault was created.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nLastInventoryDate\nThe UTC date when S3 Glacier completed the last vault inventory. For information about\ninitiating an inventory for a vault, see Initiate Job (POST jobs).\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nNumberOfArchives\nThe number of archives in the vault as per the last vault inventory. This field will return null if\nan inventory has not yet run on the vault, for example, if you just created the vault.\nType: Number\nSizeInBytes\nThe total size in bytes of the archives in the vault including any per-archive overhead, as of the\nlast inventory date. This field will return null if an inventory has not yet run on the vault, for\nexample, if you just created the vault.\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault.\nDescribe Vault API Version 2012-06-01 388",
      "start_idx": 606991,
      "end_idx": 608304,
      "metadata": {
        "num_sentences": 14,
        "num_words": 208,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Structure"
            ]
          },
          "keywords": [
            "VaultARN",
            "VaultName",
            "CreationDate",
            "LastInventoryDate",
            "NumberOfArchives",
            "SizeInBytes",
            "ISO 8601",
            "vault inventory",
            "Amazon S3 Glacier",
            "Response Headers"
          ],
          "entities": [
            "VaultARN",
            "VaultName",
            "Amazon S3 Glacier",
            "ISO 8601",
            "Describe Vault API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the response structure for the Describe Vault API in Amazon S3 Glacier, including details on fields like CreationDate, LastInventoryDate, NumberOfArchives, and SizeInBytes.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the format of the CreationDate field in the Describe Vault API response?",
            "How can I find the total size of archives in a vault using the Describe Vault API?",
            "What does the LastInventoryDate field represent in the Describe Vault API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "ISO 8601",
          "LastInventoryDate",
          "Describe Vault API",
          "SizeInBytes",
          "Amazon S3 Glacier",
          "NumberOfArchives",
          "vault inventory",
          "VaultARN",
          "CreationDate",
          "VaultName",
          "Response Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_369",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nVaultName\nThe vault name that was specified at creation time. The vault name is also included in the\nvault's ARN.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example demonstrates how to get information about the vault named\nexamplevault.\nGET /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 260\n{\n\"CreationDate\" : \"2012-02-20T17:01:45.198Z\",\n\"LastInventoryDate\" : \"2012-03-20T17:03:43.221Z\",\n\"NumberOfArchives\" : 192,\n\"SizeInBytes\" : 78088912,\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"VaultName\" : \"examplevault\"\nDescribe Vault API Version 2012-06-01 389",
      "start_idx": 608304,
      "end_idx": 609548,
      "metadata": {
        "num_sentences": 5,
        "num_words": 116,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultName",
            "ARN",
            "Error Responses",
            "GET Request",
            "x-amz-glacier-version",
            "Authorization",
            "CreationDate",
            "NumberOfArchives",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "ARN",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a reference for interacting with Amazon S3 Glacier vaults, including example requests, responses, and error handling details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I retrieve information about a specific Amazon S3 Glacier vault?",
            "What is the structure of a GET request to access vault details?",
            "What fields are included in the response for a vault information request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "Authorization",
          "examplevault",
          "Amazon S3 Glacier",
          "VaultName",
          "NumberOfArchives",
          "ARN",
          "CreationDate",
          "Error Responses",
          "GET Request",
          "VaultARN",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_370",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Access Policy (GET access-policy)\nDescription\nThis operation retrieves the access-policy subresource set on the vault\u2014for more information\non setting this subresource, see Set Vault Access Policy (PUT access-policy). If there is no access\npolicy set on the vault, the operation returns a 404 Not found error. For more information about\nvault access policies, see Vault Access Policies.\nRequests\nTo return the current vault access policy, send an HTTP GET request to the URI of the vault's\naccess-policy subresource.\nSyntax\nGET /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nGet Vault Access Policy API Version 2012-06-01 390",
      "start_idx": 609548,
      "end_idx": 610661,
      "metadata": {
        "num_sentences": 5,
        "num_words": 161,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Request Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "access policy",
            "GET access-policy",
            "HTTP GET request",
            "subresource",
            "URI",
            "x-amz-glacier-version",
            "404 Not Found",
            "vault access policies"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Vault Access Policy",
            "AWS Command Line Interface",
            "Vault Access Policies",
            "Set Vault Access Policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide describes the 'Get Vault Access Policy' operation, which retrieves the access-policy subresource of a vault using an HTTP GET request. It also provides details about syntax, error handling, and related vault access policy operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve the access policy for a vault in Amazon S3 Glacier?",
            "What is the HTTP request syntax for 'Get Vault Access Policy'?",
            "What error is returned if no access policy is set on a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "GET access-policy",
          "subresource",
          "AWS Command Line Interface",
          "URI",
          "Get Vault Access Policy",
          "Set Vault Access Policy",
          "Amazon S3 Glacier",
          "Vault Access Policies",
          "vault",
          "HTTP GET request",
          "access policy",
          "vault access policies",
          "x-amz-glacier-version",
          "404 Not Found"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_371",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response.\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nGet Vault Access Policy API Version 2012-06-01 391",
      "start_idx": 610661,
      "end_idx": 611829,
      "metadata": {
        "num_sentences": 11,
        "num_words": 183,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Specification",
              "Response Format"
            ]
          },
          "keywords": [
            "AWS account ID",
            "vault access policy",
            "S3 Glacier",
            "request headers",
            "response headers",
            "JSON format",
            "API version",
            "HTTP syntax",
            "Policy",
            "request parameters"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "vault access policy",
            "HTTP/1.1",
            "JSON"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the vault access policy for an Amazon S3 Glacier vault, including request and response details, headers, and syntax.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the response format for the Get Vault Access Policy API?",
            "How do I specify the AccountId in the Get Vault Access Policy request?",
            "Does this operation use request parameters or request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "API version",
          "HTTP/1.1",
          "response headers",
          "JSON",
          "request parameters",
          "Policy",
          "Amazon S3 Glacier",
          "request headers",
          "AWS account ID",
          "vault access policy",
          "HTTP syntax",
          "S3 Glacier",
          "JSON format"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_372",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields.\nPolicy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to get a vault access policy.\nExample Request\nIn this example, a GET request is sent to the URI of a vault's access-policy subresource.\nGET /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nSet Vault Access Policy (PUT access-policy) examples. However, the following example shows the\nreturned JSON string without escape characters for readability.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nGet Vault Access Policy API Version 2012-06-01 392",
      "start_idx": 611829,
      "end_idx": 613270,
      "metadata": {
        "num_sentences": 9,
        "num_words": 172,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Example Usage",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "JSON string",
            "GET request",
            "URI",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "escape character",
            "HTTP response",
            "Error Responses"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault access policy",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Access Control",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault access policy from Amazon S3 Glacier using a GET request and provides example requests, responses, and error handling details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault access policy in Amazon S3 Glacier?",
            "What is the format of the response for a GET vault access policy request?",
            "What errors might occur when using the Get Vault Access Policy API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "JSON string",
          "AWS4-HMAC-SHA256",
          "GET request",
          "URI",
          "Amazon S3 Glacier",
          "HTTP response",
          "escape character",
          "Error Responses",
          "vault access policy",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_373",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nGet Vault Lock (GET lock-policy)\nDescription\nThis operation retrieves the following attributes from the lock-policy subresource set on the\nspecified vault:\n\u2022 The vault lock policy set on the vault.\n\u2022 The state of the vault lock, which is either InProgess or Locked.\n\u2022 When the lock ID expires. The lock ID is used to complete the vault locking process.\n\u2022 When the vault lock was initiated and put into the InProgress state.\nA vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can stop\nthe vault locking process by calling Abort Vault Lock (DELETE lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock.\nIf there is no vault lock policy set on the vault, the operation returns a 404 Not found error. For\nmore information about vault lock policies, see Vault Lock Policies.\nRequests\nTo return the current vault lock policy and other attributes, send an HTTP GET request to the URI\nof the vault's lock-policy subresource as shown in the following syntax example.\nSyntax\nGET /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nGet Vault Lock API Version 2012-06-01 394",
      "start_idx": 613989,
      "end_idx": 615547,
      "metadata": {
        "num_sentences": 14,
        "num_words": 250,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Description",
              "Syntax",
              "Request"
            ]
          },
          "keywords": [
            "vault lock",
            "lock-policy",
            "InProgress",
            "Locked",
            "lock ID",
            "vault locking process",
            "HTTP GET request",
            "AWS account ID",
            "S3 Glacier",
            "Vault Lock Policies"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault lock policy",
            "lock ID",
            "AccountId",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP",
            "Authorization Signature"
          ]
        },
        "semantic": {
          "summary": "The 'Get Vault Lock' operation in Amazon S3 Glacier retrieves the vault lock policy and its attributes, including lock state, expiration, and initiation details, via an HTTP GET request.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How do I retrieve the vault lock policy in Amazon S3 Glacier?",
            "What attributes are returned by the Get Vault Lock operation?",
            "What happens if no lock policy is set on a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault locking process",
          "vault lock",
          "lock ID",
          "InProgress",
          "AccountId",
          "Locked",
          "Region",
          "Amazon S3 Glacier",
          "vault lock policy",
          "HTTP GET request",
          "lock-policy",
          "AWS account ID",
          "S3 Glacier",
          "Vault Lock Policies"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_374",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response.\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\",\n\"State\": \"string\",\n\"ExpirationDate\": \"string\",\n\"CreationDate\":\"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nGet Vault Lock API Version 2012-06-01 395",
      "start_idx": 615547,
      "end_idx": 616603,
      "metadata": {
        "num_sentences": 10,
        "num_words": 154,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "request headers",
            "response headers",
            "vault access policy",
            "JSON format",
            "request parameters",
            "response body",
            "API version",
            "HTTP/1.1",
            "ExpirationDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault access policy",
            "x-amzn-RequestId",
            "API Version 2012-06-01",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier API, specifically focusing on response syntax and headers for retrieving the vault access policy in JSON format.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response format for retrieving a vault access policy in Amazon S3 Glacier?",
            "What headers are used in this API operation?",
            "Does this operation require a request body or parameters?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "HTTP/1.1",
          "response headers",
          "x-amzn-RequestId",
          "ExpirationDate",
          "request parameters",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "request headers",
          "response body",
          "vault access policy",
          "JSON format"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_375",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields.\nPolicy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nState\nThe state of the vault lock.\nType: String\nValid values: InProgress|Locked\nExpirationDate\nThe UTC date and time at which the lock ID expires. This value can be null if the vault lock is in\na Locked state.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nCreationDate\nThe UTC date and time at which the vault lock was put into the InProgress state.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to get a vault lock policy.\nExample Request\nIn this example, a GET request is sent to the URI of a vault's lock-policy subresource.\nGet Vault Lock API Version 2012-06-01 396",
      "start_idx": 616603,
      "end_idx": 617624,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Specification",
              "Field Description",
              "Example"
            ]
          },
          "keywords": [
            "vault lock",
            "policy",
            "state",
            "expiration date",
            "creation date",
            "ISO 8601",
            "JSON",
            "GET request",
            "error responses",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "ISO 8601",
            "GET Request",
            "Error Responses"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the JSON response fields for the Vault Lock API in Amazon S3 Glacier, including details on policy, state, expiration, and creation dates, with an example of a GET request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the JSON fields in the Vault Lock API response?",
            "How do I retrieve a vault lock policy in Amazon S3 Glacier?",
            "What does the state field indicate in the Vault Lock API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "vault lock",
          "ISO 8601",
          "GET request",
          "expiration date",
          "GET Request",
          "error responses",
          "Amazon S3 Glacier",
          "Vault Lock",
          "Error Responses",
          "creation date",
          "state",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_376",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nGET /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nInitiate Vault Lock (POST lock-policy) example request. However, the following example shows the\nreturned JSON string without escape characters for readability.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Define-vault-lock\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::999999999999:root\"\n},\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThanEquals\": {\n\"glacier:ArchiveAgeInDays\": \"365\"\n}\n}\n}\nGet Vault Lock API Version 2012-06-01 397",
      "start_idx": 617624,
      "end_idx": 618984,
      "metadata": {
        "num_sentences": 4,
        "num_words": 134,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "Policy",
            "API Version",
            "Authorization",
            "Request",
            "Response",
            "Condition",
            "Action",
            "Principal"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "arn:aws:iam::999999999999:root",
            "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the API request and response for retrieving a vault lock policy from Amazon S3 Glacier, including an example JSON response for clarity.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve a vault lock policy in Amazon S3 Glacier?",
            "What is the format of the JSON response for a vault lock policy?",
            "What conditions can be applied to a vault lock policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Condition",
          "arn:aws:iam::999999999999:root",
          "Request",
          "Authorization",
          "examplevault",
          "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault",
          "AWS4-HMAC-SHA256",
          "Policy",
          "Action",
          "Amazon S3 Glacier",
          "Vault Lock",
          "Principal",
          "Response",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_377",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n]\n}\n\",\n\"State\": \"InProgress\",\n\"ExpirationDate\": \"exampledate\",\n\"CreationDate\": \"exampledate\"\n}\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Notifications (GET notification-configuration)\nDescription\nThis operation retrieves the notification-configuration subresource set on the vault (see\nSet Vault Notification Configuration (PUT notification-configuration). If notification configuration\nfor a vault is not set, the operation returns a 404 Not Found error. For more information about\nvault notifications, see Configuring Vault Notifications in Amazon S3 Glacier.\nRequests\nTo retrieve the notification configuration information, send a GET request to the URI of a vault's\nnotification-configuration subresource.\nGet Vault Notifications API Version 2012-06-01 398",
      "start_idx": 618984,
      "end_idx": 620026,
      "metadata": {
        "num_sentences": 5,
        "num_words": 139,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Configuration"
            ]
          },
          "keywords": [
            "vault notifications",
            "notification-configuration",
            "Amazon S3 Glacier",
            "GET request",
            "vault lock",
            "API version 2012-06-01",
            "AWS SDKs",
            "Command Line Interface",
            "404 Not Found",
            "subresource"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "API version 2012-06-01",
            "vault",
            "notification-configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the process to retrieve notification configuration details for a vault in Amazon S3 Glacier using the Get Vault Notifications API. It provides information on requests, error handling, and related operations.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I retrieve the notification configuration for a vault in Amazon S3 Glacier?",
            "What happens if the notification configuration for a vault is not set?",
            "What related operations can be used with vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Command Line Interface",
          "subresource",
          "AWS Command Line Interface",
          "vault lock",
          "notification-configuration",
          "GET request",
          "vault notifications",
          "Amazon S3 Glacier",
          "vault",
          "AWS SDKs",
          "API version 2012-06-01",
          "404 Not Found"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_378",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSyntax\nGET /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\nGet Vault Notifications API Version 2012-06-01 399",
      "start_idx": 620026,
      "end_idx": 621068,
      "metadata": {
        "num_sentences": 8,
        "num_words": 146,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Syntax",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "vaults",
            "notification-configuration",
            "request headers",
            "HTTP",
            "authorization",
            "x-amz-glacier-version",
            "responses",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "AWS",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the syntax and usage of the Get Vault Notifications API for Amazon S3 Glacier, including headers, responses, and AccountId configurations.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How do I use the Get Vault Notifications API in Amazon S3 Glacier?",
            "What headers are required for the Get Vault Notifications API?",
            "What is the syntax for accessing vault notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "API version",
          "authorization",
          "notification-configuration",
          "AccountId",
          "Region",
          "Amazon S3 Glacier",
          "VaultName",
          "AWS",
          "request headers",
          "vaults",
          "x-amz-glacier-version",
          "HTTP",
          "responses"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_379",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Events\": [\nString,\n...\n],\n\"SNSTopic\": String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nEvents\nA list of one or more events for which Amazon S3 Glacier (S3 Glacier) will send a notification\nto the specified Amazon SNS topic. For information about vault events for which you can\nconfigure a vault to publish notifications, see Set Vault Notification Configuration (PUT\nnotification-configuration).\nType: Array\nSNSTopic\nThe Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN).\nFor more information, see Getting Started with Amazon SNS in the Amazon Simple Notification\nService Getting Started Guide.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to retrieve the notification configuration for a vault.\nGet Vault Notifications API Version 2012-06-01 400",
      "start_idx": 621068,
      "end_idx": 622195,
      "metadata": {
        "num_sentences": 10,
        "num_words": 164,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Events",
            "SNSTopic",
            "vault notifications",
            "JSON fields",
            "Amazon SNS",
            "response headers",
            "error messages",
            "API Version",
            "ARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notifications",
            "ARN",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Amazon SNS Developer Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and retrieve notification settings for Amazon S3 Glacier vaults, including supported events and Amazon SNS topic integration.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What events can trigger notifications in Amazon S3 Glacier?",
            "How do I configure Amazon SNS topics for vault notifications?",
            "What is the structure of the response body for vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "response headers",
          "API Version 2012-06-01",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "JSON fields",
          "Events",
          "error messages",
          "ARN",
          "Vault Notifications",
          "API Version",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_380",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to the notification-configuration subresource of a\nvault.\nGET /-/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the audit logging configuration document in the body of the response\nin JSON format. In this example, the configuration shows that notifications for two events\n(ArchiveRetrievalCompleted and InventoryRetrievalCompleted) are sent to the Amazon\nSNS topic arn:aws:sns:us-west-2:012345678901:mytopic.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 150\n{\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nRelated Sections\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Vault Notifications API Version 2012-06-01 401",
      "start_idx": 622195,
      "end_idx": 623646,
      "metadata": {
        "num_sentences": 4,
        "num_words": 134,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GET request",
            "notification-configuration",
            "vault",
            "x-amz-glacier-version",
            "SNS topic",
            "audit logging",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "arn:aws:sns",
            "HTTP/1.1",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Event Notifications"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to send a GET request to retrieve the notification configuration of an Amazon S3 Glacier vault and shows the JSON response with event notifications and an associated Amazon SNS topic.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve the notification configuration for an Amazon S3 Glacier vault?",
            "What events are supported in Amazon S3 Glacier notification configurations?",
            "How do I configure Amazon SNS topics for Amazon S3 Glacier notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "HTTP/1.1",
          "AWS4-HMAC-SHA256",
          "arn:aws:sns",
          "notification-configuration",
          "GET request",
          "us-west-2",
          "audit logging",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "API version 2012-06-01",
          "vault",
          "ArchiveRetrievalCompleted",
          "x-amz-glacier-version",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_381",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nInitiate Vault Lock (POST lock-policy)\nDescription\nThis operation initiates the vault locking process by doing the following:\n\u2022 Installing a vault lock policy on the specified vault.\n\u2022 Setting the lock state of vault lock to InProgress.\n\u2022 Returning a lock ID, which is used to complete the vault locking process.\nYou can set one vault lock policy for each vault and this policy can be up to 20 KB in size. For more\ninformation about vault lock policies, see Vault Lock Policies.\nYou must complete the vault locking process within 24 hours after the vault lock enters the\nInProgress state. After the 24 hour window ends, the lock ID expires, the vault automatically\nexits the InProgress state, and the vault lock policy is removed from the vault. You call Complete\nVault Lock (POST lockId) to complete the vault locking process by setting the state of the vault lock\nto Locked.\nNote\nAfter a vault lock is in the Locked state, you cannot initiate a new vault lock for the vault.\nYou can stop the vault locking process by calling Abort Vault Lock (DELETE lock-policy). You can\nget the state of the vault lock by calling Get Vault Lock (GET lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock.\nIf this operation is called when the vault lock is in the InProgress state, the operation returns an\nAccessDeniedException error. When the vault lock is in the InProgress state you must call\nAbort Vault Lock (DELETE lock-policy) before you can initiate a new vault lock policy.\nInitiate Vault Lock API Version 2012-06-01 402",
      "start_idx": 623646,
      "end_idx": 625382,
      "metadata": {
        "num_sentences": 15,
        "num_words": 296,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "vault lock",
            "lock policy",
            "InProgress state",
            "lock ID",
            "Complete Vault Lock",
            "Abort Vault Lock",
            "Get Vault Lock",
            "S3 Glacier",
            "AccessDeniedException",
            "vault locking process"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AccessDeniedException",
            "AWS Command Line Interface",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the process for initiating a vault lock in Amazon S3 Glacier, including setting a lock policy, managing lock states, and completing or aborting the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault lock in Amazon S3 Glacier?",
            "What happens if the vault lock process is not completed within 24 hours?",
            "How can I stop the vault locking process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault locking process",
          "Abort Vault Lock",
          "vault lock",
          "lock ID",
          "Get Vault Lock",
          "AccessDeniedException",
          "AWS Command Line Interface",
          "API Version 2012-06-01",
          "Complete Vault Lock",
          "InProgress state",
          "Amazon S3 Glacier",
          "S3 Glacier",
          "Vault Lock",
          "lock policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_382",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequests\nTo initiate the vault locking process, send an HTTP POST request to the URI of the lock-policy\nsubresource of the vault, as shown in the following syntax example.\nSyntax\nPOST /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nInitiate Vault Lock API Version 2012-06-01 403",
      "start_idx": 625382,
      "end_idx": 626567,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "Syntax Example"
            ]
          },
          "keywords": [
            "vault locking",
            "HTTP POST",
            "lock-policy",
            "AWS account ID",
            "x-amz-glacier-version",
            "Authorization",
            "request headers",
            "request body",
            "JSON fields",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "lock-policy",
            "x-amz-glacier-version",
            "HTTP POST"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP",
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate the vault locking process in Amazon S3 Glacier by sending an HTTP POST request with a lock-policy subresource. It includes syntax, headers, and body structure requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault lock in Amazon S3 Glacier?",
            "What is the required syntax for the lock-policy API request?",
            "What headers and body fields are needed for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault locking",
          "Authorization",
          "HTTP POST",
          "Amazon S3 Glacier",
          "JSON fields",
          "lock-policy",
          "AWS account ID",
          "request headers",
          "request body",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_383",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nPolicy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nRequired: Yes\nResponses\nAmazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created response, if the policy is accepted.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-lock-id: lockId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nx-amz-lock-\nThe lock ID, which is used to complete the vault locking process.\nid\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nInitiate Vault Lock API Version 2012-06-01 404",
      "start_idx": 626567,
      "end_idx": 627468,
      "metadata": {
        "num_sentences": 8,
        "num_words": 134,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Error Handling",
              "Policy Definition"
            ]
          },
          "keywords": [
            "vault lock policy",
            "JSON string",
            "HTTP 201 Created",
            "response headers",
            "lock ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "x-amz-lock-id",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the vault lock policy for Amazon S3 Glacier, its syntax, response headers, and error handling details for the API operation Initiate Vault Lock.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the vault lock policy format in Amazon S3 Glacier?",
            "What response does Amazon S3 Glacier return for a successful vault lock policy?",
            "What are the specific headers included in the API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "x-amzn-RequestId",
          "response headers",
          "JSON string",
          "lock ID",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "vault lock policy",
          "HTTP 201 Created",
          "x-amz-lock-id"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_384",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's lock-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character.\nPUT /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-\nlock\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\",\\\"Condition\\\":{\\\"NumericLessThanEquals\\\":\n{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\nExample Response\nIf the request was successful, S3 Glacier returns an HTTP 201 Created response, as shown in the\nfollowing example.\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-lock-id: AE863rKkWZU53SLW5be4DUcW\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\nInitiate Vault Lock API Version 2012-06-01 405",
      "start_idx": 627468,
      "end_idx": 628890,
      "metadata": {
        "num_sentences": 4,
        "num_words": 111,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "HTTP Request",
              "HTTP Response",
              "JSON Policy"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault lock",
            "lock-policy",
            "HTTP PUT",
            "JSON escape character",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "201 Created",
            "x-amz-lock-id",
            "glacier:ArchiveAgeinDays"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "us-west-2",
            "arn:aws:glacier",
            "2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of how to send an HTTP PUT request to set a lock policy on an Amazon S3 Glacier vault, including the required headers and a sample JSON policy. It also includes the expected HTTP 201 Created response.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a lock policy on an Amazon S3 Glacier vault?",
            "What headers are required for a PUT request to Amazon S3 Glacier?",
            "What is the expected response for a successful vault lock request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault lock",
          "AWS4-HMAC-SHA256",
          "examplevault",
          "us-west-2",
          "arn:aws:glacier",
          "2012-06-01",
          "Amazon S3 Glacier",
          "HTTP PUT",
          "201 Created",
          "glacier:ArchiveAgeinDays",
          "lock-policy",
          "JSON escape character",
          "S3 Glacier",
          "x-amz-glacier-version",
          "x-amz-lock-id"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_385",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Get Vault Lock (GET lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Tags For Vault (GET tags)\nThis operation lists all the tags attached to a vault. The operation returns an empty map if there\nare no tags. For more information about tags, see Tagging Amazon S3 Glacier Resources.\nRequest Syntax\nTo list the tags for a vault, send an HTTP GET request to the tags URI as shown in the following\nsyntax example.\nGET /AccountId/vaults/vaultName/tags HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nList Tags For Vault API Version 2012-06-01 406",
      "start_idx": 628890,
      "end_idx": 630134,
      "metadata": {
        "num_sentences": 10,
        "num_words": 201,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Request Syntax",
              "Notes"
            ]
          },
          "keywords": [
            "Vault Lock",
            "GET lock-policy",
            "List Tags For Vault",
            "tags URI",
            "AWS account ID",
            "x-amz-glacier-version",
            "HTTP GET request",
            "Amazon S3 Glacier",
            "Tagging",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AccountId",
            "vaultName",
            "SignatureValue"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS SDKs",
            "Tagging and Metadata"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the 'List Tags For Vault' operation in Amazon S3 Glacier, detailing its HTTP GET request syntax and associated parameters for retrieving tags attached to a vault.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How can I list tags for a vault in Amazon S3 Glacier?",
            "What is the HTTP request syntax for the 'List Tags For Vault' operation?",
            "What does the 'x-amz-glacier-version' header signify?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "SignatureValue",
          "AWS Command Line Interface",
          "Authorization",
          "AccountId",
          "GET lock-policy",
          "Tagging",
          "Amazon S3 Glacier",
          "vaultName",
          "Vault Lock",
          "HTTP GET request",
          "AWS account ID",
          "x-amz-glacier-version",
          "tags URI",
          "List Tags For Vault"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_386",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the operation is successful, the service sends back an HTTP 200 OK response.\nResponse Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Tags\":\n{\n\"string\" : \"string\",\n\"string\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nTags\nThe tags attached to the vault. Each tag is composed of a key and a value.\nType: String to String map\nRequired: Yes\nList Tags For Vault API Version 2012-06-01 407",
      "start_idx": 630134,
      "end_idx": 631078,
      "metadata": {
        "num_sentences": 10,
        "num_words": 144,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Body",
              "Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Syntax",
            "Response Body",
            "Tags"
          ],
          "entities": [
            "HTTP/1.1 200 OK",
            "x-amzn-RequestId",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the request headers, response structure, and JSON fields for the List Tags For Vault API in Amazon S3 Glacier.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What headers are used in the List Tags For Vault API request?",
            "What is the response structure for the List Tags For Vault API?",
            "What JSON fields are included in the response body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Response Syntax",
          "Tags",
          "HTTP/1.1 200 OK",
          "Response Body",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_388",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Vaults (GET vaults)\nDescription\nThis operation lists all vaults owned by the calling user\u2019s account. The list returned in the response\nis ASCII-sorted by vault name.\nBy default, this operation returns up to 10 items per request. If there are more vaults to list, the\nmarker field in the response body contains the vault Amazon Resource Name (ARN) at which to\ncontinue the list with a new List Vaults request; otherwise, the marker field is null. In your next\nList Vaults request you set the marker parameter to the value Amazon S3 Glacier (S3 Glacier)\nreturned in the responses to your previous List Vaults request. You can also limit the number of\nvaults returned in the response by specifying the limit parameter in the request.\nRequests\nTo get a list of vaults, you send a GET request to the vaults resource.\nSyntax\nGET /AccountId/vaults HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nList Vaults API Version 2012-06-01 409",
      "start_idx": 632270,
      "end_idx": 633533,
      "metadata": {
        "num_sentences": 8,
        "num_words": 205,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Syntax Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vaults",
            "List Vaults",
            "API",
            "GET request",
            "marker",
            "limit parameter",
            "vault ARN",
            "AWS SDKs",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "vault Amazon Resource Name (ARN)",
            "List Vaults",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the List Vaults API operation in Amazon S3 Glacier, which retrieves a sorted list of vaults owned by the user's account, with options for pagination and limit control.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list all vaults in Amazon S3 Glacier?",
            "What parameters are available for the List Vaults API?",
            "How does pagination work in the List Vaults API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "API",
          "GET request",
          "vault Amazon Resource Name (ARN)",
          "Amazon S3 Glacier",
          "glacier.Region.amazonaws.com",
          "List Vaults",
          "AWS SDKs",
          "vaults",
          "vault ARN",
          "x-amz-glacier-version",
          "limit parameter",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_389",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation uses the following request parameters.\nName Description Required\nlimit No\nThe maximum number of vaults to be returned. The default\nlimit is 10. The number of vaults returned might be fewer\nthan the specified limit, but the number of returned vaults\nnever exceeds the limit.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 10.\nmarker No\nA string used for pagination. marker specifies the vault ARN\nafter which the listing of vaults should begin. (The vault\nspecified by marker is not included in the returned list.) Get\nthe marker value from a previous List Vaults response. You\nneed to include the m arker only if you are continuing the\npagination of results started in a previous List Vaults request.\nSpecifying an empty value (\"\") for the marker returns a list of\nvaults starting from the first vault.\nType: String\nConstraints: None\nList Vaults API Version 2012-06-01 410",
      "start_idx": 633533,
      "end_idx": 634922,
      "metadata": {
        "num_sentences": 16,
        "num_words": 235,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Explanation",
              "Usage Note"
            ]
          },
          "keywords": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "vaults",
            "limit",
            "marker",
            "pagination",
            "List Vaults",
            "request parameters",
            "ARN",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "vault ARN",
            "List Vaults",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the request parameters for the List Vaults operation in Amazon S3 Glacier, including details on the 'limit' and 'marker' parameters and how to use an AWS account ID in requests.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the 'limit' parameter in the List Vaults operation?",
            "How should the AWS account ID be formatted in Amazon S3 Glacier requests?",
            "What is the function of the 'marker' parameter in paginated requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "request parameters",
          "pagination",
          "API Version 2012-06-01",
          "limit",
          "Amazon S3 Glacier",
          "List Vaults",
          "AWS account ID",
          "ARN",
          "vaults",
          "vault ARN",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_390",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Marker\": String\n\"VaultList\": [\n{\n\"CreationDate\": String,\n\"LastInventoryDate\": String,\n\"NumberOfArchives\": Number,\n\"SizeInBytes\": Number,\n\"VaultARN\": String,\n\"VaultName\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nList Vaults API Version 2012-06-01 411",
      "start_idx": 634922,
      "end_idx": 635782,
      "metadata": {
        "num_sentences": 7,
        "num_words": 114,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Body",
            "Response Headers",
            "VaultList",
            "API Version",
            "JSON fields",
            "HTTP/1.1",
            "Content-Type",
            "x-amzn-RequestId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultList",
            "x-amzn-RequestId",
            "API Version 2012-06-01",
            "JSON"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocol",
            "JSON Data Structures"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the request headers, response syntax, and JSON fields for the 'List Vaults' API operation in Amazon S3 Glacier, including common headers and response details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the response headers for the List Vaults API in Amazon S3 Glacier?",
            "What is the structure of the response body for this operation?",
            "Does this API operation require a request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "VaultList",
          "HTTP/1.1",
          "Content-Type",
          "x-amzn-RequestId",
          "JSON",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "JSON fields",
          "Response Headers",
          "API Version",
          "Response Body",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_391",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nCreationDate\nThe date the vault was created, in Coordinated Universal Time (UTC).\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nLastInventoryDate\nThe date of the last vault inventory, in Coordinated Universal Time (UTC). This field can be\nnull if an inventory has not yet run on the vault, for example, if you just created the vault. For\ninformation about initiating an inventory for a vault, see Initiate Job (POST jobs).\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nMarker\nThe vaultARN that represents where to continue pagination of the results. You use the marker\nin another List Vaults request to obtain more vaults in the list. If there are no more vaults, this\nvalue is null.\nType: String\nNumberOfArchives\nThe number of archives in the vault as of the last inventory date.\nType: Number\nSizeInBytes\nThe total size, in bytes, of all the archives in the vault including any per-archive overhead, as of\nthe last inventory date.\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault.\nType: String\nVaultList\nAn array of objects, with each object providing a description of a vault.\nType: Array\nList Vaults API Version 2012-06-01 412",
      "start_idx": 635782,
      "end_idx": 637074,
      "metadata": {
        "num_sentences": 15,
        "num_words": 208,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Field Description",
              "Data Format",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "inventory",
            "ISO 8601",
            "pagination",
            "vaultARN",
            "archives",
            "bytes",
            "API version",
            "List Vaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vaultARN",
            "ISO 8601",
            "List Vaults API",
            "Amazon Resource Name (ARN)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "ISO 8601 Date Format"
          ]
        },
        "semantic": {
          "summary": "This documentation provides detailed descriptions of fields related to Amazon S3 Glacier vaults, including creation date, inventory date, and pagination markers, as well as guidance on API interactions for managing vaults.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the vault creation date in Amazon S3 Glacier?",
            "How can I initiate an inventory for a vault?",
            "What is the purpose of the Marker field in the List Vaults API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "bytes",
          "API version",
          "List Vaults API",
          "ISO 8601",
          "pagination",
          "Amazon S3 Glacier",
          "inventory",
          "vault",
          "List Vaults",
          "archives",
          "Amazon Resource Name (ARN)",
          "vaultARN"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_392",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nVaultName\nThe vault name.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample: List All Vaults\nThe following example lists vaults. Because the marker and limit parameters are not specified in\nthe request, up to 10 vaults are returned.\nExample Request\nGET /-/vaults HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe Marker is null indicating there are no more vaults to list.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 497\n{\n\"Marker\": null,\n\"VaultList\": [\n{\n\"CreationDate\": \"2012-03-16T22:22:47.214Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\nList Vaults API Version 2012-06-01 413",
      "start_idx": 637074,
      "end_idx": 638211,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Definition",
              "Example",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultName",
            "Error Responses",
            "List Vaults",
            "API Version",
            "Marker",
            "VaultList",
            "CreationDate",
            "LastInventoryDate",
            "HTTP Request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultName",
            "Marker",
            "VaultList",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on the Amazon S3 Glacier API, including how to list vaults, handle errors, and interpret responses. Examples of requests and responses are included for clarity.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I list all vaults in Amazon S3 Glacier?",
            "What does the Marker field indicate in the response?",
            "What is the format of an example API request to list vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "VaultList",
          "LastInventoryDate",
          "API Version 2012-06-01",
          "HTTP Request",
          "Amazon S3 Glacier",
          "VaultName",
          "List Vaults",
          "Marker",
          "CreationDate",
          "Error Responses",
          "API Version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_393",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"NumberOfArchives\": 2,\n\"SizeInBytes\": 12334,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault1\",\n\"VaultName\": \"examplevault1\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault2\",\n\"VaultName\": \"examplevault2\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-25T12:14:31.121Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault3\",\n\"VaultName\": \"examplevault3\"\n}\n]\n}\nExample: Partial List of Vaults\nThe following example returns two vaults starting at the vault specified by the marker.\nExample Request\nGET /-/vaults?limit=2&marker=arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nTwo vaults are returned in the list. The Marker contains the vault ARN to continue pagination in\nanother List Vaults request.\nList Vaults API Version 2012-06-01 414",
      "start_idx": 638211,
      "end_idx": 639638,
      "metadata": {
        "num_sentences": 4,
        "num_words": 109,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "ARN",
            "Inventory",
            "NumberOfArchives",
            "SizeInBytes",
            "List Vaults API",
            "Pagination",
            "HTTP Request",
            "Signature"
          ],
          "entities": [
            "VaultARN",
            "VaultName",
            "Amazon S3 Glacier",
            "List Vaults API",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details about the Amazon S3 Glacier List Vaults API, including examples of requests and responses for retrieving vault information with pagination support.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve a list of vaults in Amazon S3 Glacier?",
            "What information is included in the response of the List Vaults API?",
            "How does pagination work in the List Vaults API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "List Vaults API",
          "Inventory",
          "AWS4-HMAC-SHA256",
          "SizeInBytes",
          "HTTP Request",
          "Amazon S3 Glacier",
          "Vault",
          "Pagination",
          "NumberOfArchives",
          "ARN",
          "VaultARN",
          "VaultName",
          "Signature"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_394",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nRemove Tags From Vault (POST tags remove)\nThis operation removes one or more tags from the set of tags attached to a vault. For more\ninformation about tags, see Tagging Amazon S3 Glacier Resources.\nThis operation is idempotent. The operation will be successful, even if there are no tags attached to\nthe vault.\nRequest Syntax\nTo remove tags from a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example.\nPOST /AccountId/vaults/vaultName/tags?operation=remove HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagKeys\": [\n\"string\",\n\"string\"\n]\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRemove Tags From Vault API Version 2012-06-01 416",
      "start_idx": 640735,
      "end_idx": 641938,
      "metadata": {
        "num_sentences": 10,
        "num_words": 190,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Syntax Example"
            ]
          },
          "keywords": [
            "tags",
            "vault",
            "idempotent",
            "AWS",
            "Amazon S3 Glacier",
            "POST request",
            "TagKeys",
            "AccountId",
            "x-amz-glacier-version",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AccountId",
            "x-amz-glacier-version",
            "TagKeys"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Remove Tags From Vault API operation in Amazon S3 Glacier to delete tags attached to a vault via an HTTP POST request. The operation is idempotent and includes syntax and parameter details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I remove tags from a vault in Amazon S3 Glacier?",
            "What is the syntax for the Remove Tags From Vault API?",
            "Is the Remove Tags From Vault operation idempotent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Authorization",
          "POST request",
          "AccountId",
          "Amazon S3 Glacier",
          "vault",
          "TagKeys",
          "x-amz-glacier-version",
          "AWS",
          "idempotent",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_395",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\noperation A single query string parameter operation with a value of Yes\n=remove remove to distinguish it from Add Tags To Vault (POST tags\nadd).\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nTagKeys\nA list of tag keys. Each corresponding tag is removed from the vault.\nType: array of Strings\nLength constraint: Minimum of 1 item in the list. Maximum of 10 items in the list.\nRequired: Yes\nResponses\nIf the action is successful, the service sends back an HTTP 204 No Content response with an\nempty HTTP body.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nRemove Tags From Vault API Version 2012-06-01 417",
      "start_idx": 641938,
      "end_idx": 642839,
      "metadata": {
        "num_sentences": 10,
        "num_words": 143,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Parameters",
              "Response Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Remove Tags",
            "Request Headers",
            "TagKeys",
            "HTTP 204",
            "JSON fields",
            "vault",
            "operation",
            "Request Body",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "TagKeys",
            "HTTP 204 No Content",
            "Remove Tags From Vault",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Tag Management",
            "HTTP Protocols"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains the 'Remove Tags From Vault' operation in Amazon S3 Glacier, including request parameters, headers, body structure, and expected responses.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the required parameters for the Remove Tags From Vault API?",
            "What is the response format for a successful Remove Tags From Vault request?",
            "What is the structure of the request body for removing tags from a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "API Version 2012-06-01",
          "HTTP 204",
          "Amazon S3 Glacier",
          "Request Body",
          "TagKeys",
          "vault",
          "JSON fields",
          "operation",
          "Remove Tags From Vault",
          "Remove Tags",
          "Request Headers",
          "HTTP 204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_396",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP POST request to remove the specified tags.\nPOST /-/vaults/examplevault/tags?operation=remove HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagsKeys\": [\n\"examplekey1\",\n\"examplekey2\"\n]\n}\nExample Response\nIf the request was successful Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example.\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nRemove Tags From Vault API Version 2012-06-01 418",
      "start_idx": 642839,
      "end_idx": 644057,
      "metadata": {
        "num_sentences": 7,
        "num_words": 130,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "response headers",
            "error messages",
            "HTTP POST",
            "tags",
            "vault",
            "x-amz-glacier-version",
            "TagsKeys",
            "HTTP 204",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP POST",
            "TagsKeys",
            "x-amz-glacier-version",
            "HTTP 204 No Content"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details about the Remove Tags from Vault operation in Amazon S3 Glacier, including response headers, error handling, and example requests and responses.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I remove tags from a vault in Amazon S3 Glacier?",
            "What response headers are used in this operation?",
            "What is the example HTTP request for removing tags from a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "response headers",
          "HTTP POST",
          "TagsKeys",
          "HTTP 204",
          "Amazon S3 Glacier",
          "vault",
          "x-amz-glacier-version",
          "error messages",
          "tags",
          "HTTP 204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_397",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 List Tags For Vault (GET tags)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Access Policy (PUT access-policy)\nDescription\nThis operation configures an access policy for a vault and will overwrite an existing policy. To\nconfigure a vault access policy, send a PUT request to the access-policy subresource of the\nvault. You can set one access policy per vault and the policy can be up to 20 KB in size. For more\ninformation about vault access policies, see Vault Access Policies.\nRequests\nSyntax\nTo set a vault access policy, send an HTTP PUT request to the URI of the vault's access-policy\nsubresource as shown in the following syntax example.\nPUT /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nSet Vault Access Policy API Version 2012-06-01 419",
      "start_idx": 644057,
      "end_idx": 645174,
      "metadata": {
        "num_sentences": 6,
        "num_words": 171,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "vault access policy",
            "PUT request",
            "Amazon S3 Glacier",
            "access-policy subresource",
            "AWS SDKs",
            "x-amz-glacier-version",
            "Authorization",
            "vaultName",
            "AccountId",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Vault Access Policies",
            "Set Vault Access Policy",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Configuration",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure an access policy for a vault in Amazon S3 Glacier using the PUT request to the access-policy subresource. It provides details on syntax, size limitations, and references to related tools and APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a vault access policy in Amazon S3 Glacier?",
            "What is the syntax for the PUT request to configure an access policy?",
            "What are the size limitations for a vault access policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Authorization",
          "PUT request",
          "API Version 2012-06-01",
          "AccountId",
          "vaultName",
          "Set Vault Access Policy",
          "Amazon S3 Glacier",
          "Vault Access Policies",
          "vault access policy",
          "AWS SDKs",
          "Content-Length",
          "access-policy subresource",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_398",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nPolicy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nRequired: Yes\nResponses\nIn response, S3 Glacier returns 204 No Content if the policy is accepted.\nSyntax\nHTTP/1.1 204 No Content\nSet Vault Access Policy API Version 2012-06-01 420",
      "start_idx": 645174,
      "end_idx": 646157,
      "metadata": {
        "num_sentences": 10,
        "num_words": 164,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request/Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "AWS account ID",
            "request headers",
            "JSON string",
            "escape character",
            "204 No Content",
            "Set Vault Access Policy",
            "API version",
            "Request Body"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "vault access policy",
            "Set Vault Access Policy API",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Security Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Set Vault Access Policy API in Amazon S3 Glacier, detailing its request headers, body format, and response syntax.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I set a vault access policy in Amazon S3 Glacier?",
            "What is the required format for the vault access policy JSON string?",
            "What is the expected response when the policy is accepted?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "HTTP/1.1",
          "JSON string",
          "Set Vault Access Policy",
          "Amazon S3 Glacier",
          "Request Body",
          "escape character",
          "request headers",
          "AWS account ID",
          "vault access policy",
          "Set Vault Access Policy API",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_399",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's access-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character.\nPUT /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-owner-access-\nrights\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\"}]}\"}\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example.\nSet Vault Access Policy API Version 2012-06-01 421",
      "start_idx": 646157,
      "end_idx": 647648,
      "metadata": {
        "num_sentences": 8,
        "num_words": 138,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "Error Responses",
            "Policy JSON",
            "HTTP PUT Request",
            "Authorization",
            "Access Policy",
            "Vaults",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-glacier-version",
            "Policy JSON",
            "AWS4-HMAC-SHA256",
            "arn:aws:iam::999999999999:root"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "IAM Policies",
            "HTTP Requests"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on setting a vault access policy in Amazon S3 Glacier using an HTTP PUT request, including headers, example requests, and responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set an access policy for a vault in Amazon S3 Glacier?",
            "What are the required headers for a PUT request to Amazon S3 Glacier?",
            "What response should I expect after successfully setting a vault access policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "HTTP PUT Request",
          "arn:aws:iam::999999999999:root",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "Vaults",
          "Policy JSON",
          "Amazon S3 Glacier",
          "Access Policy",
          "x-amz-glacier-version",
          "Response Headers",
          "Error Responses",
          "API Version",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_400",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Get Vault Access Policy (GET access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Notification Configuration (PUT notification-configuration)\nDescription\nRetrieving an archive and a vault inventory are asynchronous operations in Amazon S3 Glacier\n(S3 Glacier) for which you must first initiate a job and wait for the job to complete before you\ncan download the job output. You can configure a vault to post a message to an Amazon Simple\nNotification Service (Amazon SNS) topic when these jobs complete. You can use this operation\nto set notification configuration on the vault. For more information, see Configuring Vault\nNotifications in Amazon S3 Glacier.\nTo configure vault notifications, send a PUT request to the notification-configuration\nsubresource of the vault. A notification configuration is specific to a vault; therefore, it is also\nreferred to as a vault subresource. The request should include a JSON document that provides an\nAmazon Simple Notification Service (Amazon SNS) topic and the events for which you want S3\nGlacier to send notifications to the topic.\nYou can configure a vault to publish a notification for the following vault events:\nSet Vault Notification Configuration API Version 2012-06-01 422",
      "start_idx": 647648,
      "end_idx": 649221,
      "metadata": {
        "num_sentences": 8,
        "num_words": 235,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "notification configuration",
            "Amazon SNS",
            "vault subresource",
            "JSON document",
            "asynchronous operations",
            "vault events",
            "PUT request",
            "API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS Command Line Interface",
            "vault",
            "notification-configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Configuration",
            "Notification Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This document explains how to configure vault notifications in Amazon S3 Glacier using the Set Vault Notification Configuration API. It details the process of sending a PUT request with a JSON document to specify an Amazon SNS topic and vault events for notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "What is the purpose of the Set Vault Notification Configuration API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "API",
          "PUT request",
          "notification-configuration",
          "vault notifications",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "vault subresource",
          "asynchronous operations",
          "vault events",
          "vault",
          "notification configuration",
          "JSON document"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_401",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 ArchiveRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\narchive retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can be\nSucceeded or Failed. The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID).\n\u2022 InventoryRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\ninventory retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can\nbe Succeeded or Failed. The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID).\nAmazon SNS topics must grant permission to the vault to be allowed to publish notifications to the\ntopic.\nRequests\nTo set notification configuration on your vault, send a PUT request to the URI of the vault's\nnotification-configuration subresource. You specify the configuration in the request\nbody. The configuration includes the Amazon SNS topic name and an array of events that trigger\nnotification to each topic.\nSyntax\nPUT /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\n{\n\"SNSTopic\": String,\n\"Events\":[String, ...]\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nSet Vault Notification Configuration API Version 2012-06-01 423",
      "start_idx": 649221,
      "end_idx": 650926,
      "metadata": {
        "num_sentences": 14,
        "num_words": 261,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Event Notifications"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "vault",
            "notification configuration",
            "archive retrieval",
            "inventory retrieval",
            "Initiate Job",
            "Describe Job",
            "PUT request",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS topic",
            "AccountId",
            "VaultName",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Notifications",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure notifications for Amazon S3 Glacier vaults using the Set Vault Notification Configuration API, including details on supported events and syntax for making PUT requests.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I configure notifications for an Amazon S3 Glacier vault?",
            "What events trigger notifications in Amazon S3 Glacier?",
            "What is the syntax for the Set Vault Notification Configuration API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "PUT request",
          "inventory retrieval",
          "AccountId",
          "Region",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Describe Job",
          "vault",
          "notification configuration",
          "archive retrieval",
          "VaultName",
          "Initiate Job",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_402",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe JSON in the request body contains the following fields.\nEvents\nAn array of one or more events for which you want S3 Glacier to send notification.\nValid Values: ArchiveRetrievalCompleted | InventoryRetrievalCompleted\nRequired: yes\nType: Array\nSNSTopic\nThe Amazon SNS topic ARN. For more information, go to Getting Started with Amazon SNS in\nthe Amazon Simple Notification Service Getting Started Guide.\nRequired: yes\nType: String\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns 204 No Content if the notification\nconfiguration is accepted.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nSet Vault Notification Configuration API Version 2012-06-01 424",
      "start_idx": 650926,
      "end_idx": 651905,
      "metadata": {
        "num_sentences": 9,
        "num_words": 140,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Parameters",
            "Request Headers",
            "Request Body",
            "Events",
            "SNSTopic",
            "JSON",
            "204 No Content",
            "Notification Configuration",
            "Amazon SNS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "SNSTopic",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the parameters, headers, and response format for configuring notifications in Amazon S3 Glacier using the Set Vault Notification Configuration API.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the 'Events' field in the request body?",
            "What response does Amazon S3 Glacier return for a successful notification configuration?",
            "Is the SNSTopic field required in the request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "InventoryRetrievalCompleted",
          "Request Parameters",
          "Amazon S3 Glacier",
          "Request Body",
          "Amazon SNS",
          "ArchiveRetrievalCompleted",
          "Events",
          "Notification Configuration",
          "Request Headers",
          "SNSTopic",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_403",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to configure vault notification.\nExample Request\nThe following request sets the examplevault notification configuration so that notifications for\ntwo events (ArchiveRetrievalCompleted and InventoryRetrievalCompleted ) are sent to\nthe Amazon SNS topic arn:aws:sns:us-west-2:012345678901:mytopic.\nPUT /-/vaults/examplevault/notification-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nExample Response\nA successful response returns a 204 No Content.\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nSet Vault Notification Configuration API Version 2012-06-01 425",
      "start_idx": 651905,
      "end_idx": 653389,
      "metadata": {
        "num_sentences": 8,
        "num_words": 143,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "response headers",
            "request headers",
            "error responses",
            "vault notification",
            "SNS topic",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "HTTP request",
            "204 No Content"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS topic",
            "examplevault",
            "arn:aws:sns:us-west-2:012345678901:mytopic",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier, including request headers, example requests, and responses. It also provides information on related error messages and response codes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What are the required headers for the Set Vault Notification Configuration API?",
            "What events can trigger notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "response headers",
          "arn:aws:sns:us-west-2:012345678901:mytopic",
          "examplevault",
          "vault notification",
          "error responses",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "ArchiveRetrievalCompleted",
          "request headers",
          "x-amz-glacier-version",
          "HTTP request",
          "SNS topic",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_404",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nArchive Operations\nThe following are the archive operations available for use in S3 Glacier.\nTopics\n\u2022 Delete Archive (DELETE archive)\n\u2022 Upload Archive (POST archive)\nDelete Archive (DELETE archive)\nDescription\nThis operation deletes an archive from a vault. You can delete one archive at a time from a vault.\nTo delete the archive you must provide its archive ID in the delete request. You can get the archive\nID by downloading the vault inventory for the vault that contains the archive. For more information\nabout downloading the vault inventory, see Downloading a Vault Inventory in Amazon S3 Glacier.\nAfter you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail.\nArchive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\nArchive Operations API Version 2012-06-01 426",
      "start_idx": 653389,
      "end_idx": 654740,
      "metadata": {
        "num_sentences": 8,
        "num_words": 212,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Deletion Process"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "Archive Operations",
            "Delete Archive",
            "Vault Inventory",
            "Archive ID",
            "API Version 2012-06-01",
            "AWS SDKs",
            "AWS CLI",
            "Archive Retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "Archive ID",
            "AWS Command Line Interface",
            "Vault Inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "API Management",
            "Data Deletion"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Delete Archive operation in Amazon S3 Glacier, detailing how to remove an archive from a vault using its archive ID and the implications of such deletions on retrieval jobs. It also references related operations and tools for managing archives and vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from a vault in Amazon S3 Glacier?",
            "What happens to archive retrieval jobs after an archive is deleted?",
            "How can I find the archive ID needed for deletion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "API Version 2012-06-01",
          "Archive Operations",
          "Amazon S3 Glacier",
          "Delete Archive",
          "AWS CLI",
          "Archive ID",
          "AWS SDKs",
          "Archive Retrieval",
          "Vault Notifications",
          "Vault Inventory"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_405",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 If the archive retrieval job is actively preparing the data for download when Amazon S3 Glacier\n(S3 Glacier) receives the delete archive request, the archival retrieval operation might fail.\n\u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, you will be able to download the output.\nFor more information about archive retrieval, see Downloading an Archive in S3 Glacier.\nThis operation is idempotent. Attempting to delete an already-deleted archive does not result in an\nerror.\nRequests\nTo delete an archive you send a DELETE request to the archive resource URI.\nSyntax\nDELETE /AccountId/vaults/VaultName/archives/ArchiveID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nx-amz-Date: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nDelete Archive API Version 2012-06-01 427",
      "start_idx": 654740,
      "end_idx": 656230,
      "metadata": {
        "num_sentences": 13,
        "num_words": 224,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Request Syntax",
              "Operation Behavior"
            ]
          },
          "keywords": [
            "archive retrieval",
            "delete archive",
            "S3 Glacier",
            "idempotent",
            "AWS account ID",
            "DELETE request",
            "archive resource URI",
            "request headers",
            "authorization",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "ArchiveID",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the DELETE API operation, including its behavior, syntax, and header requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What happens if I delete an archive during an ongoing retrieval job?",
            "What headers are required for the DELETE archive request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "ArchiveID",
          "authorization",
          "AccountId",
          "Amazon S3 Glacier",
          "VaultName",
          "DELETE request",
          "archive retrieval",
          "AWS account ID",
          "idempotent",
          "request headers",
          "S3 Glacier",
          "x-amz-glacier-version",
          "delete archive",
          "glacier.Region.amazonaws.com",
          "archive resource URI"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_406",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to delete an archive from the vault named\nexamplevault.\nExample Request\nThe ID of the archive to be deleted is specified as a subresource of archives.\nDELETE /-/vaults/examplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Archive API Version 2012-06-01 428",
      "start_idx": 656230,
      "end_idx": 657504,
      "metadata": {
        "num_sentences": 8,
        "num_words": 126,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Body",
            "Response Headers",
            "Response Body",
            "Error Responses",
            "Delete Archive",
            "API Version",
            "x-amz-glacier-version",
            "Authorization",
            "HTTP/1.1"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "x-amzn-RequestId",
            "AWS4-HMAC-SHA256",
            "NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-TjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the Delete Archive operation for Amazon S3 Glacier, including request and response specifications, error handling, and an example request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What is the response format for the Delete Archive operation?",
            "What headers are required for the Delete Archive API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "x-amzn-RequestId",
          "NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-TjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "examplevault",
          "Amazon S3 Glacier",
          "Request Body",
          "Delete Archive",
          "Response Headers",
          "Error Responses",
          "API Version",
          "Response Body",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_407",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Response\nIf the request is successful, S3 Glacier responds with 204 No Content to indicate that the archive\nis deleted.\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Archive (POST archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Archive (POST archive)\nDescription\nThis operation adds an archive to a vault. For a successful upload, your data is durably persisted. In\nresponse, Amazon S3 Glacier (S3 Glacier) returns the archive ID in the x-amz-archive-id header\nof the response. You should save the archive ID returned so that you can access the archive later.\nYou must provide a SHA256 tree hash of the data you are uploading. For information about\ncomputing a SHA256 tree hash, see Computing Checksums.\nNote\nThe SHA256 tree hash is only required for the Upload Archive (POST archive) action when\nusing the API. It is not required when using the AWS CLI.\nWhen uploading an archive, you can optionally specify an archive description of up to 1,024\nprintable ASCII characters. S3 Glacier returns the archive description when you either retrieve the\narchive or get the vault inventory. S3 Glacier does not interpret the description in any way. An\narchive description does not need to be unique. You cannot use the description to retrieve or sort\nthe archive list.\nUpload Archive API Version 2012-06-01 429",
      "start_idx": 657504,
      "end_idx": 659032,
      "metadata": {
        "num_sentences": 15,
        "num_words": 240,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive ID",
            "SHA256 tree hash",
            "vault",
            "multipart upload",
            "archive description",
            "durably persisted",
            "HTTP response",
            "API version",
            "checksums"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "x-amz-archive-id",
            "AWS CLI",
            "SHA256 tree hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete archives and upload new archives to Amazon S3 Glacier, including requirements for checksums and archive descriptions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What is required to upload an archive to S3 Glacier?",
            "What is the purpose of the SHA256 tree hash in S3 Glacier uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "x-amzn-RequestId",
          "multipart upload",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "durably persisted",
          "vault",
          "HTTP response",
          "AWS CLI",
          "archive ID",
          "S3 Glacier",
          "x-amz-archive-id",
          "archive description",
          "checksums"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_408",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. The archive ID is an opaque sequence of characters from which you cannot infer\nany meaning about the archive. So you might maintain metadata about the archives on the client-\nside. For more information, see Working with Archives in Amazon S3 Glacier.\nArchives are immutable. After you upload an archive, you cannot edit the archive or its description.\nRequests\nTo upload an archive, you use the HTTP POST method and scope the request to the archives\nsubresource of the vault in which you want to save the archive. The request must include the\narchive payload size, checksum (SHA256 tree hash), and can optionally include a description of the\narchive.\nSyntax\nPOST /AccountId/vaults/VaultName/archives\nHost: glacier.Region.amazonaws.com\nx-amz-glacier-version: 2012-06-01\nDate: Date\nAuthorization: SignatureValue\nx-amz-archive-description: Description\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 linear hash\nContent-Length: Length\n<Request body.>\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis implementation of the operation does not use request parameters.\nUpload Archive API Version 2012-06-01 430",
      "start_idx": 659032,
      "end_idx": 660628,
      "metadata": {
        "num_sentences": 13,
        "num_words": 239,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Syntax",
              "Requests",
              "Note"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "metadata",
            "archive ID",
            "immutable",
            "HTTP POST",
            "checksum",
            "SHA256 tree hash",
            "vault",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "archive ID",
            "AWS account ID",
            "vault",
            "SHA256 tree hash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier, detailing syntax, required parameters, and constraints such as immutability and metadata limitations.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What metadata can be associated with an archive in S3 Glacier?",
            "What are the required parameters for the upload archive request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP POST",
          "SHA256 tree hash",
          "AccountId",
          "checksum",
          "Amazon S3 Glacier",
          "metadata",
          "archive",
          "vault",
          "archive ID",
          "AWS account ID",
          "immutable",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_409",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nContent-Length Yes\nThe size of the object, in bytes. For more information, go\nto h ttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.\nhtml#sec14.13.\nType: Number\nDefault: None\nConstraints: None\nx-amz-archive- No\nThe optional description of the archive you are uploading\ndescription\n. It can be a plain language description or some identifier\nyou choose to assign. The description need not be unique\nacross archives. When you retrieve a vault inventory (see\nInitiate Job (POST jobs)), it includes this description for\neach of the archives it returns in response.\nType: String\nDefault: None\nConstraints: The description must be less than or equal to\n1,024 characters. The allowable characters are 7-bit ASCII\nwithout control codes, specifically ASCII values 32\u2014126 de\ncimal or 0x20\u20140x7E hexadecimal.\nx-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the payload. This\nsha256\nis not the same value as you specify in the x-amz-sha\n256-tree-hash header.\nUpload Archive API Version 2012-06-01 431",
      "start_idx": 660628,
      "end_idx": 661907,
      "metadata": {
        "num_sentences": 14,
        "num_words": 189,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Content-Length",
            "x-amz-archive-description",
            "x-amz-content-sha256",
            "SHA256 checksum",
            "vault inventory",
            "archive description",
            "HTTP headers",
            "Upload Archive API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Content-Length",
            "x-amz-archive-description",
            "x-amz-content-sha256",
            "Upload Archive API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the request headers used in Amazon S3 Glacier's Upload Archive API, including details on required and optional headers like Content-Length and x-amz-content-sha256.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the required headers for the Upload Archive API?",
            "What constraints apply to the x-amz-archive-description header?",
            "How is the x-amz-content-sha256 header used in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "SHA256 checksum",
          "x-amz-content-sha256",
          "x-amz-archive-description",
          "Amazon S3 Glacier",
          "vault inventory",
          "Content-Length",
          "Upload Archive API",
          "HTTP headers",
          "Request Headers",
          "archive description"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_410",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nThe user-computed checksum, SHA256 tree hash, of the\ntree-hash\npayload. For information on computing the SHA256 tree\nhash, see Computing Checksums. If S3 Glacier computes a\ndifferent checksum of the payload, it will reject the reque\nst.\nType: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload.\nResponses\nIn response, S3 Glacier durably stores the archive and returns a URI path to the archive ID.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nLocation: Location\nx-amz-archive-id: ArchiveId\nUpload Archive API Version 2012-06-01 432",
      "start_idx": 661907,
      "end_idx": 662694,
      "metadata": {
        "num_sentences": 6,
        "num_words": 107,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Checksum Validation",
              "Response Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "Request Body",
            "Response Syntax",
            "Archive ID",
            "Upload Archive API",
            "HTTP/1.1 201 Created",
            "x-amz-archive-id",
            "Checksum",
            "URI path"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "x-amz-sha256-tree-hash",
            "x-amz-archive-id",
            "Upload Archive API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Upload Archive API for Amazon S3 Glacier, including checksum validation, request body requirements, and response details such as archive storage and ID retrieval.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How do I compute the SHA256 tree hash for Amazon S3 Glacier?",
            "What is the response syntax for the Upload Archive API?",
            "What information is included in the request body for uploading data to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "URI path",
          "Checksum",
          "SHA256 tree hash",
          "x-amz-sha256-tree-hash",
          "Upload Archive API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Request Body",
          "Response Syntax",
          "HTTP/1.1 201 Created",
          "Archive ID",
          "x-amz-archive-id",
          "Upload Archive API"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_411",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation\nThe relative URI path of the newly added archive resource.\nType: String\nx-amz-arc\nThe ID of the archive. This value is also included as part of the Location\nhive-id\nheader.\nType: String\nx-amz-sha\nThe checksum of the archive computed by S3 Glacier.\n256-tree-\nhash\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example shows a request to upload an archive.\nPOST /-/vaults/examplevault/archives HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nUpload Archive API Version 2012-06-01 433",
      "start_idx": 662694,
      "end_idx": 663753,
      "metadata": {
        "num_sentences": 10,
        "num_words": 139,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Response Headers",
            "Location",
            "x-amz-archive-id",
            "x-amz-sha256-tree-hash",
            "Checksum",
            "Archive",
            "Error Responses",
            "Upload Archive",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Location header",
            "x-amz-archive-id",
            "x-amz-sha256-tree-hash",
            "Error Responses"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response headers, lack of a response body, and error handling for the Upload Archive operation in Amazon S3 Glacier, including an example request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the response headers for the Upload Archive operation in Amazon S3 Glacier?",
            "Does the Upload Archive operation return a response body?",
            "How is the checksum of an archive computed in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Upload Archive",
          "Location",
          "Checksum",
          "Amazon S3 Glacier",
          "Archive",
          "Location header",
          "Error Responses",
          "x-amz-archive-id",
          "Response Headers",
          "API Version",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_413",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\nAbort Multipart Upload (DELETE uploadID)\nDescription\nThis command for multipart upload operation stops a multipart upload identified by the upload ID.\nAfter the Abort Multipart Upload request succeeds, you cannot use the upload ID to upload\nany more parts or perform any other operations. Stopping a completed multipart upload fails.\nHowever, stopping an already-stopped upload will succeed, for a short time.\nThis operation is idempotent.\nFor information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload).\nRequests\nTo stop a multipart upload, send an HTTP DELETE request to the URI of the multipart-uploads\nsubresource of the vault and identify the specific multipart upload ID as part of the URI.\nSyntax\nDELETE /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAbort Multipart Upload API Version 2012-06-01 435",
      "start_idx": 665355,
      "end_idx": 666736,
      "metadata": {
        "num_sentences": 9,
        "num_words": 196,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Description",
              "Operation Details"
            ]
          },
          "keywords": [
            "multipart upload",
            "Abort Multipart Upload",
            "upload ID",
            "HTTP DELETE request",
            "vault",
            "AWS account ID",
            "Glacier",
            "subresource",
            "idempotent",
            "authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "uploadID",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "API Interaction",
            "Multipart Upload Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Abort Multipart Upload operation in Amazon S3 Glacier, detailing how to stop a multipart upload using an HTTP DELETE request and the associated constraints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I abort a multipart upload in Amazon S3 Glacier?",
            "What happens when I stop a multipart upload using the Abort Multipart Upload operation?",
            "What is the syntax for the HTTP DELETE request to abort a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "subresource",
          "multipart upload",
          "authorization",
          "Abort Multipart Upload",
          "Glacier",
          "AccountId",
          "Region",
          "Amazon S3 Glacier",
          "VaultName",
          "vault",
          "AWS account ID",
          "idempotent",
          "upload ID",
          "HTTP DELETE request",
          "uploadID"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_414",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExample\nExample Request\nIn the following example, a DELETE request is sent to the URI of a multipart upload ID resource.\nAbort Multipart Upload API Version 2012-06-01 436",
      "start_idx": 666736,
      "end_idx": 667821,
      "metadata": {
        "num_sentences": 12,
        "num_words": 166,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request-Response Structure",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "request headers",
            "response headers",
            "multipart upload",
            "AWS account ID",
            "Error Responses",
            "HTTP 204",
            "Request Parameters",
            "Common Request Headers",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Abort Multipart Upload",
            "HTTP/1.1",
            "x-amzn-RequestId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for the Amazon S3 Glacier API, including details on request headers, response headers, and error handling for the Abort Multipart Upload operation.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the request and response headers for the Abort Multipart Upload operation in Amazon S3 Glacier?",
            "Does the Abort Multipart Upload operation return a response body?",
            "What error responses can occur in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "x-amzn-RequestId",
          "response headers",
          "multipart upload",
          "Abort Multipart Upload",
          "API Version 2012-06-01",
          "HTTP 204",
          "Request Parameters",
          "Amazon S3 Glacier",
          "Common Request Headers",
          "request headers",
          "AWS account ID",
          "Error Responses"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_416",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAfter assembling and saving the archive to the vault, S3 Glacier returns the archive ID of the newly\ncreated archive resource. After you upload an archive, you should save the archive ID returned to\nretrieve the archive at a later point.\nIn the request, you must include the computed SHA256 tree hash of the entire archive you have\nuploaded. For information about computing a SHA256 tree hash, see Computing Checksums.\nOn the server side, S3 Glacier also constructs the SHA256 tree hash of the assembled archive. If\nthe values match, S3 Glacier saves the archive to the vault; otherwise, it returns an error, and the\noperation fails. The List Parts (GET uploadID) operation returns list of parts uploaded for a specific\nmultipart upload. It includes checksum information for each uploaded part that can be used to\ndebug a bad checksum issue.\nAdditionally, S3 Glacier also checks for any missing content ranges. When uploading parts, you\nspecify range values identifying where each part fits in the final assembly of the archive. When\nassembling the final archive S3 Glacier checks for any missing content ranges and if there are any\nmissing content ranges, S3 Glacier returns an error and the Complete Multipart Upload operation\nfails.\nComplete Multipart Upload is an idempotent operation. After your first successful complete\nmultipart upload, if you call the operation again within a short period, the operation will succeed\nand return the same archive ID. This is useful in the event you experience a network issue or receive\na 500 server error, in which case you can repeat your Complete Multipart Upload request and get\nthe same archive ID without creating duplicate archives. Note, however, that after the multipart\nupload completes, you cannot call the List Parts operation and the multipart upload will not\nappear in List Multipart Uploads response, even if idempotent complete is possible.\nRequests\nTo complete a multipart upload, you send an HTTP POST request to the URI of the upload ID that\nS3 Glacier created in response to your Initiate Multipart Upload request. This is the same URI you\nused when uploading parts. In addition to the common required headers, you must include the\nresult of the SHA256 tree hash of the entire archive and the total size of the archive in bytes.\nSyntax\nPOST /AccountId/vaults/VaultName/multipart-uploads/uploadID\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: SignatureValue\nx-amz-sha256-tree-hash: SHA256 tree hash of the archive\nComplete Multipart Upload API Version 2012-06-01 438",
      "start_idx": 669217,
      "end_idx": 671795,
      "metadata": {
        "num_sentences": 19,
        "num_words": 407,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Error Handling",
              "Idempotency"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive ID",
            "SHA256 tree hash",
            "multipart upload",
            "Complete Multipart Upload",
            "List Parts",
            "content ranges",
            "idempotent operation",
            "HTTP POST",
            "checksum"
          ],
          "entities": [
            "S3 Glacier",
            "SHA256 tree hash",
            "Complete Multipart Upload",
            "List Parts",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of completing multipart uploads in Amazon S3 Glacier, including checksum validation, error handling, and idempotency for retrying operations.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete a multipart upload in S3 Glacier?",
            "What happens if there is a checksum mismatch during upload?",
            "How does idempotency work in the Complete Multipart Upload operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "HTTP POST",
          "SHA256 tree hash",
          "checksum",
          "Amazon S3 Glacier",
          "AWS",
          "archive ID",
          "Complete Multipart Upload",
          "S3 Glacier",
          "List Parts",
          "content ranges",
          "idempotent operation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_417",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amz-archive-size: ArchiveSize in bytes\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nx-amz-arc Yes\nThe total size, in bytes, of the entire archive. This value should\nhive-size\nbe the sum of all the sizes of the individual parts that you\nuploaded.\nType: String\nDefault: None\nConstraints: None\nx-amz-sha Yes\nThe SHA256 tree hash of the entire archive. It is the tree hash\n256-tree-\nof SHA256 tree hash of the individual parts. If the value you\nhash\nspecify in the request does not match the SHA256 tree hash\nof the final assembled archive as computed by S3 Glacier, S3\nGlacier returns an error and the request fails.\nComplete Multipart Upload API Version 2012-06-01 439",
      "start_idx": 671795,
      "end_idx": 673146,
      "metadata": {
        "num_sentences": 12,
        "num_words": 222,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers",
              "Parameters"
            ]
          },
          "keywords": [
            "x-amz-archive-size",
            "x-amz-glacier-version",
            "AWS account ID",
            "Request Headers",
            "SHA256 tree hash",
            "Multipart Upload",
            "Amazon S3 Glacier",
            "ArchiveSize",
            "API Version",
            "Common Request Headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "SHA256 tree hash",
            "x-amz-archive-size",
            "x-amz-glacier-version"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for Amazon S3 Glacier's Complete Multipart Upload API, including headers, parameters, and validation requirements for archive uploads.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What headers are required for the Complete Multipart Upload API in Amazon S3 Glacier?",
            "How is the SHA256 tree hash used in Amazon S3 Glacier?",
            "What is the purpose of the x-amz-archive-size header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SHA256 tree hash",
          "ArchiveSize",
          "Amazon S3 Glacier",
          "API Version",
          "Common Request Headers",
          "x-amz-archive-size",
          "AWS account ID",
          "Multipart Upload",
          "Request Headers",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_418",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nRequest Elements\nThis operation does not use request elements.\nResponses\nAmazon S3 Glacier (S3 Glacier) creates a SHA256 tree hash of the entire archive. If the value\nmatches the SHA256 tree hash of the entire archive you specified in the request, S3 Glacier adds\nthe archive to the vault. In response it returns the HTTP Location header with the URL path of\nthe newly added archive resource. If the archive size or SHA256 that you sent in the request does\nnot match, S3 Glacier will return an error and the upload remains in the incomplete state. It is\npossible to retry the Complete Multipart Upload operation later with correct values, at which point\nyou can successfully create an archive. If a multipart upload does not complete, then eventually S3\nGlacier will reclaim the upload ID.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-archive-id: ArchiveId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation\nComplete Multipart Upload API Version 2012-06-01 440",
      "start_idx": 673146,
      "end_idx": 674474,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "multipart upload",
            "archive",
            "vault",
            "HTTP Location header",
            "upload ID",
            "response headers",
            "Complete Multipart Upload",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "HTTP Location header",
            "Complete Multipart Upload",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Complete Multipart Upload operation in Amazon S3 Glacier, detailing the response structure and conditions for successful archive creation.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What happens if the SHA256 tree hash does not match during a multipart upload in S3 Glacier?",
            "What response headers are returned after a successful Complete Multipart Upload?",
            "How can I retry a failed multipart upload in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "response headers",
          "multipart upload",
          "API Version 2012-06-01",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "vault",
          "archive",
          "HTTP Location header",
          "Complete Multipart Upload",
          "upload ID",
          "SHA256"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_419",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description\nThe relative URI path of the newly created archive. This URL includes the\narchive ID that is generated by S3 Glacier.\nType: String\nx-amz-arc\nThe ID of the archive. This value is also included as part of the Location\nhive-id\nheader.\nType: String\nResponse Fields\nThis operation does not return a response body.\nExample\nExample Request\nIn this example, an HTTP POST request is sent to the URI that was returned by an Initiate Multipart\nUpload request. The request specifies both the SHA256 tree hash of the entire archive and the\ntotal archive size.\nPOST /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nz-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:1ffc0f54dd5fdd66b62da70d25edacd0\nx-amz-archive-size:8388608\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following example response shows that S3 Glacier successfully created an archive from the\nparts you uploaded. The response includes the archive ID with complete path.\nComplete Multipart Upload API Version 2012-06-01 441",
      "start_idx": 674474,
      "end_idx": 675881,
      "metadata": {
        "num_sentences": 10,
        "num_words": 154,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Example Request",
              "Example Response"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive ID",
            "multipart upload",
            "SHA256 tree hash",
            "archive size",
            "HTTP POST",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "URI path",
            "Location header"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP POST",
            "SHA256 tree hash",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details about creating an archive in Amazon S3 Glacier using the Complete Multipart Upload API. It includes example requests, responses, and key parameters such as SHA256 tree hash and archive size.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I use the Complete Multipart Upload API in S3 Glacier?",
            "What is the format of an HTTP POST request for uploading archives in S3 Glacier?",
            "What response fields are included when creating an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "URI path",
          "multipart upload",
          "AWS4-HMAC-SHA256",
          "HTTP POST",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "Location header",
          "archive ID",
          "S3 Glacier",
          "archive size"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_420",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/archives/\nNkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nx-amz-archive-id: NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can now send HTTP requests to the URI of the newly added resource/archive. For example, you\ncan send a GET request to retrieve the archive.\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Multipart Upload (POST multipart-uploads)\nDescription\nThis operation initiates a multipart upload (see Uploading Large Archives in Parts (Multipart\nUpload)). Amazon S3 Glacier (S3 Glacier) creates a multipart upload resource and returns its ID in\nthe response. You use this Upload ID in subsequent multipart upload operations.\nWhen you initiate a multipart upload, you specify the part size in number of bytes. The part size\nmust be a mebibyte (MiB) (1024 kibibytes [KiB]) multiplied by a power of 2\u2014for example, 1048576\n(1 MiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 gibibytes (GiB).\nInitiate Multipart Upload API Version 2012-06-01 442",
      "start_idx": 675881,
      "end_idx": 677632,
      "metadata": {
        "num_sentences": 9,
        "num_words": 219,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Procedural Steps"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Archive",
            "Upload ID",
            "Part Size",
            "Mebibyte",
            "Gibibyte",
            "HTTP Request",
            "Archive ID",
            "Identity and Access Management"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Upload ID",
            "Archive ID",
            "Identity and Access Management"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation details the Amazon S3 Glacier multipart upload process, including initiating uploads, specifying part sizes, and related operations such as aborting or listing uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What is the minimum and maximum part size for multipart uploads?",
            "What operations are available for managing multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Part Size",
          "HTTP Request",
          "Amazon S3 Glacier",
          "Archive",
          "Archive ID",
          "Mebibyte",
          "Multipart Upload",
          "Upload ID",
          "Identity and Access Management",
          "Gibibyte"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_421",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nEvery part you upload using this upload ID, except the last one, must have the same size. The last\none can be the same size or smaller. For example, suppose you want to upload a 16.2 MiB file. If\nyou initiate the multipart upload with a part size of 4 MiB, you will upload four parts of 4 MiB each\nand one part of 0.2 MiB.\nNote\nYou don't need to know the size of the archive when you start a multipart upload because\nS3 Glacier does not require you to specify the overall archive size.\nAfter you complete the multipart upload, S3 Glacier removes the multipart upload resource\nreferenced by the ID. S3 Glacier will also remove the multipart upload resource if you cancel the\nmultipart upload or it may be removed if there is no activity for a period of 24 hours. The ID may\nstill be available after 24 hours, but applications should not expect this behavior.\nRequests\nTo initiate a multipart upload, you send an HTTP POST request to the URI of the multipart-\nuploads subresource of the vault in which you want to save the archive. The request must include\nthe part size and can optionally include a description of the archive.\nSyntax\nPOST /AccountId/vaults/VaultName/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nx-amz-archive-description: ArchiveDescription\nx-amz-part-size: PartSize\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nInitiate Multipart Upload API Version 2012-06-01 443",
      "start_idx": 677632,
      "end_idx": 679434,
      "metadata": {
        "num_sentences": 14,
        "num_words": 299,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "multipart upload",
            "S3 Glacier",
            "archive size",
            "part size",
            "HTTP POST",
            "vault",
            "AWS account ID",
            "authorization",
            "multipart-uploads",
            "archive description"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "multipart upload resource",
            "vault",
            "URI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Transfer",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains the process of initiating and completing a multipart upload in Amazon S3 Glacier, detailing part size requirements, resource behavior, and request syntax.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What are the size requirements for parts in a multipart upload?",
            "What happens to the multipart upload resource after completion or inactivity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "authorization",
          "multipart upload resource",
          "HTTP POST",
          "URI",
          "multipart-uploads",
          "Amazon S3 Glacier",
          "vault",
          "part size",
          "AWS account ID",
          "S3 Glacier",
          "archive size",
          "archive description"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_422",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nx-amz-part-size Yes\nThe size of each part except the last, in\nbytes. The last part can be smaller than this\npart size.\nType: String\nDefault: None\nConstraints: The part size must be a\nmebibyte (1024 KiB) multiplied by a power\nof 2\u2014for example, 1048576 (1 MiB),\n2097152 (2 MiB), 4194304 (4 MiB), 8388608\n(8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 GiB\n(4096 MiB).\nx-amz-archive-desc No\nArchive description you are uploading in\nription\nparts. It can be a plain-language description\nor some unique identifier you choose to\nassign. When you retrieve a vault inventory\n(see Initiate Job (POST jobs) ), the inventory\nincludes this description for each of the\narchives it returns in response. Leading\nspaces in archive descriptions are removed.\nType: String\nInitiate Multipart Upload API Version 2012-06-01 444",
      "start_idx": 679434,
      "end_idx": 680624,
      "metadata": {
        "num_sentences": 12,
        "num_words": 190,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Headers"
            ]
          },
          "keywords": [
            "x-amz-part-size",
            "x-amz-archive-desc",
            "request headers",
            "multipart upload",
            "mebibyte",
            "archive description",
            "vault inventory",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "common request headers"
          ],
          "entities": [
            "x-amz-part-size",
            "x-amz-archive-desc",
            "Amazon S3 Glacier",
            "Initiate Multipart Upload",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about request headers used in the Amazon S3 Glacier API for initiating multipart uploads, including constraints and descriptions for specific headers.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the required request headers for initiating a multipart upload in Amazon S3 Glacier?",
            "What constraints apply to the x-amz-part-size header?",
            "How is the x-amz-archive-desc header used in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amz-archive-desc",
          "multipart upload",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "x-amz-part-size",
          "Initiate Multipart Upload",
          "vault inventory",
          "request headers",
          "mebibyte",
          "archive description",
          "common request headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_423",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: The description must be less\nthan or equal to 1024 bytes. The allowable\ncharacters are 7 bit ASCII without control\ncodes, specifically ASCII values 32-126\ndecimal or 0x20-0x7E hexadecimal.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn the response, S3 Glacier creates a multipart upload resource identified by an ID and returns the\nrelative URI path of the multipart upload ID.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-multipart-upload-id: multiPartUploadId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation\nThe relative URI path of the multipart upload ID S3 Glacier created. You use\nthis URI path to scope your requests to upload parts, and to complete the\nmultipart upload.\nInitiate Multipart Upload API Version 2012-06-01 445",
      "start_idx": 680624,
      "end_idx": 681733,
      "metadata": {
        "num_sentences": 9,
        "num_words": 161,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "multipart upload",
            "response headers",
            "URI path",
            "request body",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "x-amz-multipart-upload-id",
            "ASCII",
            "201 Created"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload resource",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "x-amz-multipart-upload-id"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "HTTP Protocols"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains the response details for initiating a multipart upload in Amazon S3 Glacier, including response headers and constraints for descriptions.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response format for initiating a multipart upload in S3 Glacier?",
            "What constraints apply to descriptions in S3 Glacier's multipart upload?",
            "What headers are included in a successful response for this API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "URI path",
          "response headers",
          "multipart upload",
          "x-amzn-RequestId",
          "multipart upload resource",
          "Amazon S3 Glacier",
          "201 Created",
          "request body",
          "x-amz-multipart-upload-id",
          "ASCII",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_424",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description\nType: String\nx-amz-mul\nThe ID of the multipart upload. This value is also included as part of the\ntipart-up\nLocation header.\nload-id\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExample\nExample Request\nThe following example initiates a multipart upload by sending an HTTP POST request to the URI\nof the multipart-uploads subresource of a vault named examplevault. The request includes\nheaders to specify the part size of 4 MiB (4194304 bytes) and the optional archive description.\nPOST /-/vaults/examplevault/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-archive-description: MyArchive-101\nx-amz-part-size: 4194304\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nS3 Glacier creates a multipart upload resource and adds it to the multipart-uploads\nsubresource of the vault. The Location response header includes the relative URI path to the\nmultipart upload ID.\nInitiate Multipart Upload API Version 2012-06-01 446",
      "start_idx": 681733,
      "end_idx": 683109,
      "metadata": {
        "num_sentences": 9,
        "num_words": 159,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "Location header",
            "HTTP POST",
            "vault",
            "part size",
            "archive description",
            "x-amz-glacier-version",
            "response header",
            "Error Responses"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart-uploads",
            "examplevault",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of initiating a multipart upload to an Amazon S3 Glacier vault, including the required headers, example request, and response format.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What headers are required for a multipart upload request?",
            "What does the Location header in the response signify?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "AWS4-HMAC-SHA256",
          "examplevault",
          "HTTP POST",
          "Amazon S3 Glacier",
          "multipart-uploads",
          "Location header",
          "vault",
          "part size",
          "response header",
          "Error Responses",
          "x-amz-glacier-version",
          "archive description"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_425",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nx-amz-multipart-upload-id:\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nFor information about uploading individual parts, see Upload Part (PUT uploadID).\nRelated Sections\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Parts (GET uploadID)\nDescription\nThis multipart upload operation lists the parts of an archive that have been uploaded in a\nspecific multipart upload identified by an upload ID. For information about multipart upload, see\nUploading Large Archives in Parts (Multipart Upload).\nYou can make this request at any time during an in-progress multipart upload before you complete\nthe multipart upload. S3 Glacier returns the part list sorted by range you specified in each part\nupload. If you send a List Parts request after completing the multipart upload, Amazon S3 Glacier\n(S3 Glacier) returns an error.\nList Parts API Version 2012-06-01 447",
      "start_idx": 683109,
      "end_idx": 684624,
      "metadata": {
        "num_sentences": 7,
        "num_words": 189,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Multipart Upload Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "upload ID",
            "List Parts",
            "archive",
            "API Version 2012-06-01",
            "HTTP request",
            "multipart operations",
            "identity and access management",
            "large archives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload ID",
            "examplevault",
            "API Version 2012-06-01",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the List Parts operation for Amazon S3 Glacier's multipart upload feature, including API responses and related operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the List Parts operation in Amazon S3 Glacier?",
            "How can I list uploaded parts of a multipart upload?",
            "What errors might occur after completing a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "multipart upload",
          "examplevault",
          "API Version 2012-06-01",
          "identity and access management",
          "Amazon S3 Glacier",
          "large archives",
          "archive",
          "multipart upload ID",
          "multipart operations",
          "upload ID",
          "List Parts",
          "HTTP request"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_426",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe List Parts operation supports pagination. You should always check the Marker field in\nthe response body for a marker at which to continue the list. if there are no more items the\nmarker field is null. If the marker is not null, to fetch the next set of parts you sent another List\nParts request with the marker request parameter set to the marker value S3 Glacier returned in\nresponse to your previous List Parts request.\nYou can also limit the number of parts returned in the response by specifying the limit parameter\nin the request.\nRequests\nSyntax\nTo list the parts of an in-progress multipart upload, you send a GET request to the URI of the\nmultipart upload ID resource. The multipart upload ID is returned when you initiate a multipart\nupload (Initiate Multipart Upload (POST multipart-uploads)). You may optionally specify marker\nand limit parameters.\nGET /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nName Description Required\nlimit No\nThe maximum number of parts to be returned. The default\nlimit is 50. The number of parts returned might be fewer than\nList Parts API Version 2012-06-01 448",
      "start_idx": 684624,
      "end_idx": 686256,
      "metadata": {
        "num_sentences": 14,
        "num_words": 263,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Pagination",
              "Request Syntax"
            ]
          },
          "keywords": [
            "List Parts",
            "pagination",
            "marker",
            "limit",
            "multipart upload",
            "GET request",
            "AccountId",
            "VaultName",
            "Authorization",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Parts",
            "multipart upload ID",
            "AWS account ID",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SignatureValue"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the List Parts operation in Amazon S3 Glacier, detailing its pagination support, request parameters, and syntax for retrieving parts of an in-progress multipart upload.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the List Parts operation in Amazon S3 Glacier?",
            "What is the purpose of the marker field in the List Parts response?",
            "How can I limit the number of parts returned in a List Parts request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "multipart upload",
          "Authorization",
          "pagination",
          "GET request",
          "limit",
          "AccountId",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "multipart upload ID",
          "AWS account ID",
          "VaultName",
          "List Parts",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_427",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nthe specified limit, but the number of returned parts never\nexceeds the limit.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies\nthe part at which the listing of parts should begin. Get the\nmarker value from the response of a previous List Parts\nresponse. You need only include the marker if you are\ncontinuing the pagination of results started in a previous List\nParts request.\nType: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Parts API Version 2012-06-01 449",
      "start_idx": 686256,
      "end_idx": 687224,
      "metadata": {
        "num_sentences": 10,
        "num_words": 146,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Headers",
              "Request Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "pagination",
            "List Parts",
            "marker",
            "response headers",
            "request body",
            "constraints",
            "integer value",
            "opaque string",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Parts",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Pagination",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the List Parts operation in the Amazon S3 Glacier API, including its parameters, constraints, response headers, and syntax details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the marker parameter in List Parts?",
            "What are the constraints for the limit parameter in List Parts?",
            "What headers and response structure does the List Parts operation use?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "API version",
          "HTTP/1.1",
          "response headers",
          "x-amzn-RequestId",
          "pagination",
          "API Version 2012-06-01",
          "opaque string",
          "constraints",
          "Amazon S3 Glacier",
          "request body",
          "integer value",
          "List Parts",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_428",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : String,\n\"CreationDate\" : String,\n\"Marker\": String,\n\"MultipartUploadId\" : String,\n\"PartSizeInBytes\" : Number,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : String,\n\"SHA256TreeHash\" : String\n},\n...\n],\n\"VaultARN\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation.\nType: String\nCreationDate\nThe UTC time that the multipart upload was initiated.\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Parts request to obtain more jobs in the list. If there are no more parts,\nthis value is null.\nList Parts API Version 2012-06-01 450",
      "start_idx": 687224,
      "end_idx": 688378,
      "metadata": {
        "num_sentences": 12,
        "num_words": 174,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Format"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveDescription",
            "CreationDate",
            "Marker",
            "MultipartUploadId",
            "PartSizeInBytes",
            "RangeInBytes",
            "SHA256TreeHash",
            "VaultARN",
            "ISO 8601"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "List Parts API",
            "VaultARN",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation chunk provides details on the JSON response structure for the List Parts API in Amazon S3 Glacier, including fields like ArchiveDescription, CreationDate, and Marker, along with response headers and pagination details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the structure of the JSON response for the List Parts API in Amazon S3 Glacier?",
            "How is the CreationDate formatted in the response?",
            "What does the Marker field represent in the List Parts API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "List Parts API",
          "ISO 8601",
          "RangeInBytes",
          "Amazon S3 Glacier",
          "ArchiveDescription",
          "Marker",
          "VaultARN",
          "CreationDate",
          "Multipart Upload",
          "SHA256TreeHash",
          "PartSizeInBytes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_429",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nMultipartUploadId\nThe ID of the upload to which the parts are associated.\nType: String\nPartSizeInBytes\nThe part size in bytes. This is the same value that you specified in the Initiate Multipart Upload\nrequest.\nType: Number\nParts\nA list of the part sizes of the multipart upload. Each object in the array contains a RangeBytes\nand sha256-tree-hash name/value pair.\nType: Array\nRangeInBytes\nThe byte range of a part, inclusive of the upper value of the range.\nType: String\nSHA256TreeHash\nThe SHA256 tree hash value that S3 Glacier calculated for the part. This field is never null.\nType: String\nVaultARN\nThe Amazon Resource Name (ARN) of the vault to which the multipart upload was initiated.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nList Parts API Version 2012-06-01 451",
      "start_idx": 688378,
      "end_idx": 689268,
      "metadata": {
        "num_sentences": 11,
        "num_words": 143,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Documentation",
              "API Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "PartSizeInBytes",
            "SHA256TreeHash",
            "VaultARN",
            "RangeInBytes",
            "List Parts API",
            "Error Responses",
            "Multipart Upload",
            "Byte Range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "VaultARN",
            "List Parts API",
            "SHA256TreeHash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for Amazon S3 Glacier's multipart upload, including parameters such as part size, byte range, and SHA256 tree hash values.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the MultipartUploadId in Amazon S3 Glacier?",
            "How is the SHA256 tree hash calculated for a part?",
            "What does the RangeInBytes field represent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "List Parts API",
          "RangeInBytes",
          "Amazon S3 Glacier",
          "Byte Range",
          "VaultARN",
          "Multipart Upload",
          "Error Responses",
          "SHA256TreeHash",
          "PartSizeInBytes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_430",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExamples\nExample: List Parts of a Multipart Upload\nThe following example lists all the parts of an upload. The example sends an HTTP GET request to\nthe URI of the specific multipart upload ID of an in-progress multipart upload and returns up to\n1,000 parts.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts associated with the specified multipart\nupload ID. In this example, there are only two parts. The returned Marker field is null indicating\nthat there are no more parts of the multipart upload.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 412\n{\n\"ArchiveDescription\" : \"archive description\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": null,\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\nList Parts API Version 2012-06-01 452",
      "start_idx": 689268,
      "end_idx": 690809,
      "metadata": {
        "num_sentences": 6,
        "num_words": 156,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Request",
              "API Response"
            ]
          },
          "keywords": [
            "multipart upload",
            "HTTP GET",
            "S3 Glacier",
            "upload ID",
            "parts",
            "response",
            "Marker",
            "Authorization",
            "PartSizeInBytes",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "multipart upload ID",
            "x-amz-glacier-version",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to list parts of a multipart upload in Amazon S3 Glacier using an HTTP GET request. The response includes metadata and details about the uploaded parts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list parts of a multipart upload in Amazon S3 Glacier?",
            "What does the response of a List Parts API call include?",
            "What is the structure of an HTTP GET request for multipart uploads in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "response",
          "multipart upload",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "us-west-2",
          "Amazon S3 Glacier",
          "parts",
          "x-amz-glacier-version",
          "Marker",
          "HTTP GET",
          "Content-Length",
          "multipart upload ID",
          "S3 Glacier",
          "upload ID",
          "PartSizeInBytes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_431",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"RangeInBytes\" : \"0-4194303\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n},\n{\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"0195875365afda349fc21c84c099987164\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nExample: List Parts of a Multipart Upload (Specify the Marker and the Limit Request\nParameters)\nThe following example demonstrates how to use pagination to get a limited number of results.\nThe example sends an HTTP GET request to the URI of the specific multipart upload ID of an in-\nprogress multipart upload to return one part. A starting marker parameter specifies at which part\nto start the part list. You can get the marker value from the response of a previous request for a\npart list. Furthermore, in this example, the limit parameter is set to 1 and returns one part. Note\nthat the Marker field is not null, indicating that there is at least one more part to obtain.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE?marker=1001&limit=1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts that are associated with the specified in-\nprogress multipart upload ID.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: text/json\nContent-Length: 412\nList Parts API Version 2012-06-01 453",
      "start_idx": 690809,
      "end_idx": 692651,
      "metadata": {
        "num_sentences": 8,
        "num_words": 208,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Request",
              "API Response",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "RangeInBytes",
            "SHA256TreeHash",
            "VaultARN",
            "Marker",
            "Limit",
            "Pagination",
            "HTTP GET",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "SHA256TreeHash",
            "Multipart Upload ID",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of listing parts of a multipart upload in Amazon S3 Glacier using an HTTP GET request with pagination parameters like Marker and Limit.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list parts of a multipart upload in Amazon S3 Glacier?",
            "What parameters are required for paginating multipart upload requests?",
            "What does the Marker field indicate in the response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "Authorization",
          "Multipart Upload ID",
          "RangeInBytes",
          "Amazon S3 Glacier",
          "Pagination",
          "Marker",
          "VaultARN",
          "Multipart Upload",
          "Limit",
          "HTTP GET",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_432",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : \"archive description 1\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": \"MfgsKHVjbQ6EldVl72bn3_n5h2TaGZQUO-Qb3B9j3TITf7WajQ\",\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Multipart Uploads (GET multipart-uploads)\nDescription\nThis multipart upload operation lists in-progress multipart uploads for the specified vault. An in-\nprogress multipart upload is a multipart upload that has been initiated by an Initiate Multipart\nUpload (POST multipart-uploads) request, but has not yet been completed or stopped. The list\nreturned in the List Multipart Upload response has no guaranteed order.\nThe List Multipart Uploads operation supports pagination. By default, this operation returns up to\n50 multipart uploads in the response. You should always check the marker field in the response\nList Multipart Uploads API Version 2012-06-01 454",
      "start_idx": 692651,
      "end_idx": 694188,
      "metadata": {
        "num_sentences": 6,
        "num_words": 183,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Operation Details",
              "Pagination Information"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "Amazon S3 Glacier",
            "Vault ARN",
            "SHA256TreeHash",
            "PartSizeInBytes",
            "Marker",
            "MultipartUploadId",
            "RangeInBytes",
            "Identity and Access Management",
            "Pagination"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault ARN",
            "MultipartUploadId",
            "SHA256TreeHash",
            "Marker"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on Amazon S3 Glacier's multipart upload operations, including listing in-progress uploads, pagination, and related API actions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list in-progress multipart uploads in Amazon S3 Glacier?",
            "What is the marker field in the List Multipart Uploads response?",
            "How does pagination work for multipart uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "RangeInBytes",
          "Amazon S3 Glacier",
          "Pagination",
          "Marker",
          "Multipart Upload",
          "Identity and Access Management",
          "Vault ARN",
          "SHA256TreeHash",
          "PartSizeInBytes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_433",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nbody for a marker at which to continue the list; if there are no more items the marker field is\nnull.\nIf the marker is not null, to fetch the next set of multipart uploads you sent another List Multipart\nUploads request with the marker request parameter set to the marker value Amazon S3 Glacier\n(S3 Glacier) returned in response to your previous List Multipart Uploads request.\nNote the difference between this operation and the List Parts (GET uploadID)) operation. The List\nMultipart Uploads operation lists all multipart uploads for a vault. The List Parts operation returns\nparts of a specific multipart upload identified by an Upload ID.\nFor information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload).\nRequests\nSyntax\nTo list multipart uploads, send a GET request to the URI of the multipart-uploads subresource\nof the vault. You may optionally specify marker and limit parameters.\nGET /AccountId/vaults/VaultName/multipart-uploads HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nName Description Required\nlimit No\nList Multipart Uploads API Version 2012-06-01 455",
      "start_idx": 694188,
      "end_idx": 695763,
      "metadata": {
        "num_sentences": 12,
        "num_words": 244,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Request Syntax",
              "Parameter Explanation"
            ]
          },
          "keywords": [
            "multipart uploads",
            "marker",
            "vault",
            "AWS account ID",
            "Upload ID",
            "List Parts",
            "limit parameter",
            "GET request",
            "Authorization",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart-uploads subresource",
            "AWS account ID",
            "vaults",
            "Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list multipart uploads in Amazon S3 Glacier using the List Multipart Uploads API, including request syntax and parameters such as marker and limit.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list multipart uploads in Amazon S3 Glacier?",
            "What is the difference between List Multipart Uploads and List Parts?",
            "What parameters can be used with the List Multipart Uploads request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart-uploads subresource",
          "Authorization",
          "GET request",
          "Amazon S3 Glacier",
          "vault",
          "x-amz-glacier-version",
          "vaults",
          "Region.amazonaws.com",
          "AWS account ID",
          "Upload ID",
          "List Parts",
          "limit parameter",
          "multipart uploads",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_434",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nSpecifies the maximum number of uploads returned in the\nresponse body. If not specified, the List Uploads operation\nreturns up to 50 uploads.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies the\nupload at which the listing of uploads should begin. Get\nthe marker value from a previous List Uploads response.\nYou need only include the marker if you are continuing\nthe pagination of results started in a previous List Uploads\nrequest.\nType: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Multipart Uploads API Version 2012-06-01 456",
      "start_idx": 695763,
      "end_idx": 696798,
      "metadata": {
        "num_sentences": 11,
        "num_words": 154,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Constraints"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "List Uploads",
            "marker",
            "pagination",
            "response headers",
            "request body",
            "HTTP/1.1",
            "Content-Type",
            "RequestId",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Uploads operation",
            "marker",
            "RequestId",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Pagination",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the List Uploads API operation for Amazon S3 Glacier, including parameters, constraints, request headers, and response details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the constraints for the 'marker' parameter in the List Uploads operation?",
            "How many uploads can be returned in a List Uploads response?",
            "What headers are used in the List Uploads API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "Content-Type",
          "response headers",
          "List Uploads operation",
          "pagination",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "RequestId",
          "request body",
          "List Uploads",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_435",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"Marker\": String,\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"MultipartUploadId\": String,\n\"PartSizeInBytes\": Number,\n\"VaultARN\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation.\nType: String\nCreationDate\nThe UTC time that the multipart upload was initiated.\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Multipart Uploads request to obtain more uploads in the list. If there are\nno more uploads, this value is null.\nList Multipart Uploads API Version 2012-06-01 457",
      "start_idx": 696798,
      "end_idx": 697930,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response Structure",
              "Field Descriptions",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "VaultARN",
            "ISO 8601",
            "Pagination",
            "Response Headers",
            "Marker",
            "CreationDate",
            "ArchiveDescription",
            "UploadsList"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "VaultARN",
            "List Multipart Uploads API",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the JSON response structure for the List Multipart Uploads API in Amazon S3 Glacier, including field descriptions and pagination handling.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What fields are included in the response body of the List Multipart Uploads API?",
            "How is pagination handled in the List Multipart Uploads API?",
            "What format is the CreationDate field in?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "ISO 8601",
          "Amazon S3 Glacier",
          "Pagination",
          "ArchiveDescription",
          "List Multipart Uploads API",
          "Marker",
          "VaultARN",
          "Multipart Upload",
          "Response Headers",
          "CreationDate",
          "UploadsList"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_436",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nPartSizeInBytes\nThe part size specified in the Initiate Multipart Upload (POST multipart-uploads) request. This is\nthe size of all the parts in the upload except the last part, which may be smaller than this size.\nType: Number\nMultipartUploadId\nThe ID of the multipart upload.\nType: String\nUploadsList\nA list of metadata about multipart upload objects. Each item in the list contains a set of name-\nvalue pairs for the corresponding upload, including ArchiveDescription, CreationDate,\nMultipartUploadId, PartSizeInBytes, and VaultARN.\nType: Array\nVaultARN\nThe Amazon Resource Name (ARN) of the vault that contains the archive.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample: List All Multipart Uploads\nThe following example lists all the multipart uploads in progress for the vault. The example shows\nan HTTP GET request to the URI of the multipart-uploads subresource of a specified vault.\nBecause the marker and limit parameters are not specified in the request, up to 1,000 in-\nprogress multipart uploads are returned.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads HTTP/1.1\nList Multipart Uploads API Version 2012-06-01 458",
      "start_idx": 697930,
      "end_idx": 699202,
      "metadata": {
        "num_sentences": 11,
        "num_words": 186,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Details",
              "Example Request"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "PartSizeInBytes",
            "VaultARN",
            "MultipartUploadId",
            "UploadsList",
            "Error Responses",
            "HTTP GET",
            "ArchiveDescription",
            "CreationDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "VaultARN",
            "UploadsList",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the Amazon S3 Glacier multipart upload API, including parameters like PartSizeInBytes and VaultARN, and an example of listing multipart uploads in progress.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the part size in a multipart upload request for Amazon S3 Glacier?",
            "How do I list all multipart uploads in progress for a vault?",
            "What metadata is included in the UploadsList for multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "ArchiveDescription",
          "VaultARN",
          "Multipart Upload",
          "Error Responses",
          "HTTP GET",
          "CreationDate",
          "UploadsList",
          "PartSizeInBytes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_438",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nExample: Partial List of Multipart Uploads\nThe following example demonstrates how to use pagination to get a limited number of results. The\nexample shows an HTTP GET request to the URI of the multipart-uploads subresource for a\nspecified vault. In this example, the limit parameter is set to 1, which means that only one upload\nis returned in the list, and the marker parameter indicates the multipart upload ID at which the\nreturned list begins.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads?\nlimit=1&marker=xsQdFIRsfJr20CW2AbZBKpRZAFTZSJIMtL2hYf8mvp8dM0m4RUzlaqoEye6g3h3ecqB_zqwB7zLDMeSWhwo65re4C4Ev\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, Amazon S3 Glacier (S3 Glacier) returns a list of no more than two in-progress\nmultipart uploads for the specified vault, starting at the specified marker and returning two results.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 470\n{\n\"Marker\": \"qt-RBst_7yO8gVIonIBsAxr2t-db0pE4s8MNeGjKjGdNpuU-\ncdSAcqG62guwV9r5jh5mLyFPzFEitTpNE7iQfHiu1XoV\",\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": \"archive 2\",\nList Multipart Uploads API Version 2012-06-01 460",
      "start_idx": 700861,
      "end_idx": 702533,
      "metadata": {
        "num_sentences": 6,
        "num_words": 170,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "HTTP Request",
              "HTTP Response",
              "Pagination",
              "Multipart Uploads"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "multipart uploads",
            "pagination",
            "marker parameter",
            "limit parameter",
            "HTTP GET request",
            "AWS4-HMAC-SHA256",
            "Authorization",
            "UploadsList"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "multipart-uploads",
            "examplevault",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation example demonstrates how to use pagination with Amazon S3 Glacier's multipart uploads API, including an HTTP GET request and response for retrieving a limited number of uploads from a specified vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use pagination in Amazon S3 Glacier's multipart uploads API?",
            "What is the purpose of the limit and marker parameters in the multipart uploads API?",
            "How do I format an HTTP GET request for retrieving uploads from a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "Authorization",
          "examplevault",
          "pagination",
          "Amazon S3 Glacier",
          "multipart-uploads",
          "marker parameter",
          "HTTP GET request",
          "VaultARN",
          "UploadsList",
          "limit parameter",
          "multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_439",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"CreationDate\": \"2012-04-01T15:00:00.000Z\",\n\"MultipartUploadId\": \"nPyGOnyFcx67qqX7E-0tSGiRi88hHMOwOxR-\n_jNyM6RjVMFfV29lFqZ3rNsSaWBugg6OP92pRtufeHdQH7ClIpSF6uJc\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Part (PUT uploadID)\nDescription\nThis multipart upload operation uploads a part of an archive. You can upload archive parts in any\norder because in your Upload Part request you specify the range of bytes in the assembled archive\nthat will be uploaded in this part. You can also upload these parts in parallel. You can upload up to\n10,000 parts for a multipart upload.\nFor information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload).\nAmazon S3 Glacier (S3 Glacier) rejects your upload part request if any of the following conditions is\ntrue:\n\u2022 SHA256 tree hash does not match\u2014To ensure that part data is not corrupted in transmission,\nyou compute a SHA256 tree hash of the part and include it in your request. Upon receiving the\npart data, S3 Glacier also computes a SHA256 tree hash. If the two hash values don't match,\nUpload Part API Version 2012-06-01 461",
      "start_idx": 702533,
      "end_idx": 704059,
      "metadata": {
        "num_sentences": 8,
        "num_words": 217,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Multipart Upload",
              "Error Handling"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "SHA256 tree hash",
            "Upload Part",
            "Amazon S3 Glacier",
            "archive",
            "VaultARN",
            "PartSizeInBytes",
            "multipart-uploads",
            "range of bytes",
            "parallel upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "SHA256 tree hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Upload Part operation in Amazon S3 Glacier, detailing how to upload parts of an archive using multipart upload and ensuring data integrity with SHA256 tree hashes.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload a part of an archive in Amazon S3 Glacier?",
            "What happens if the SHA256 tree hash values don't match?",
            "How many parts can I upload in a single multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "MultipartUploadId",
          "Upload Part",
          "API Version 2012-06-01",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "multipart-uploads",
          "archive",
          "VaultARN",
          "Multipart Upload",
          "parallel upload",
          "range of bytes",
          "PartSizeInBytes"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_440",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nthe operation fails. For information about computing a SHA256 tree hash, see Computing\nChecksums.\n\u2022 SHA256 linear hash does not match\u2014Required for authorization, you compute a SHA256\nlinear hash of the entire uploaded payload and include it in your request. For information about\ncomputing a SHA256 linear hash, see Computing Checksums.\n\u2022 Part size does not match\u2014The size of each part except the last must match the size that is\nspecified in the corresponding Initiate Multipart Upload (POST multipart-uploads) request. The\nsize of the last part must be the same size as, or smaller than, the specified size.\nNote\nIf you upload a part whose size is smaller than the part size you specified in your initiate\nmultipart upload request and that part is not the last part, then the upload part request\nwill succeed. However, the subsequent Complete Multipart Upload request will fail.\n\u2022 Range does not align\u2014The byte range value in the request does not align with the part size\nspecified in the corresponding initiate request. For example, if you specify a part size of 4194304\nbytes (4 MB), then 0 to 4194303 bytes (4 MB \u20141) and 4194304 (4 MB) to 8388607 (8 MB \u20141)\nare valid part ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align\nwith the part size and the upload will fail.\nThis operation is idempotent. If you upload the same part multiple times, the data included in the\nmost recent request overwrites the previously uploaded data.\nRequests\nYou send this HTTP PUT request to the URI of the upload ID that was returned by your Initiate\nMultipart Upload request. S3 Glacier uses the upload ID to associate part uploads with a specific\nmultipart upload. The request must include a SHA256 tree hash of the part data (x-amz-SHA256-\ntree-hash header), a SHA256 linear hash of the entire payload (x-amz-content-sha256\nheader), the byte range (Content-Range header), and the length of the part in bytes (Content-\nLength header).\nSyntax\nPUT /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nUpload Part API Version 2012-06-01 462",
      "start_idx": 704059,
      "end_idx": 706209,
      "metadata": {
        "num_sentences": 17,
        "num_words": 352,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Error Handling",
              "API Request Syntax"
            ]
          },
          "keywords": [
            "SHA256 tree hash",
            "SHA256 linear hash",
            "multipart upload",
            "byte range",
            "Content-Range header",
            "Content-Length header",
            "x-amz-SHA256-tree-hash",
            "x-amz-content-sha256",
            "idempotent",
            "Initiate Multipart Upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP PUT",
            "API Version 2012-06-01",
            "Region.amazonaws.com",
            "Upload Part API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the process and requirements for uploading parts in a multipart upload to Amazon S3 Glacier, including error handling, hash computations, and request syntax.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute and include a SHA256 tree hash in an upload request?",
            "What are the size requirements for parts in a multipart upload?",
            "What happens if the byte range in the request does not align with the specified part size?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "API Version 2012-06-01",
          "SHA256 tree hash",
          "x-amz-content-sha256",
          "Upload Part API",
          "byte range",
          "Content-Length header",
          "Amazon S3 Glacier",
          "Initiate Multipart Upload",
          "HTTP PUT",
          "x-amz-SHA256-tree-hash",
          "Region.amazonaws.com",
          "idempotent",
          "SHA256 linear hash",
          "Content-Range header"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_441",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAuthorization: SignatureValue\nContent-Range: ContentRange\nContent-Length: PayloadSize\nContent-Type: application/octet-stream\nx-amz-sha256-tree-hash: Checksum of the part\nx-amz-content-sha256: Checksum of the entire payload\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nContent-Length No\nIdentifies the length of the part in bytes.\nType: String\nDefault: None\nConstraints: None\nContent-Range Yes\nIdentifies the range of bytes in the assembled\narchive that will be uploaded in this part. S3\nUpload Part API Version 2012-06-01 463",
      "start_idx": 706209,
      "end_idx": 707417,
      "metadata": {
        "num_sentences": 9,
        "num_words": 177,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Headers",
              "Request Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SignatureValue",
            "Content-Range",
            "Content-Length",
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "x-amz-glacier-version",
            "AWS account ID",
            "vault",
            "checksum"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Content-Range",
            "Content-Length",
            "x-amz-sha256-tree-hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "Data Transfer Protocols"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about request headers, parameters, and authentication for operations in the Amazon S3 Glacier API, including specifics on content length, range, and checksum validation.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What headers are required for Amazon S3 Glacier API requests?",
            "How do I specify the account ID for an S3 Glacier request?",
            "What is the purpose of the x-amz-sha256-tree-hash header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "SignatureValue",
          "x-amz-content-sha256",
          "Amazon S3 Glacier",
          "checksum",
          "x-amz-glacier-version",
          "Content-Range",
          "vault",
          "Content-Length",
          "AWS account ID",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_442",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nGlacier uses this information to assemble the\narchive in the proper sequence. The format of this\nheader follows RFC 2616. An example header is\nContent-Range:bytes 0-4194303/* .\nType: String\nDefault: None\nConstraints: The range cannot be greater than the\npart size that you specified when you initiated the\nmultipart upload.\nx-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the\nsha256\nuploaded payload. This is not the same value as\nyou specify in the x-amz-sha256-tree-hash\nheader.\nType: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nSpecifies a SHA256 tree hash of the data being\ntree-hash\nuploaded. For information about computing a\nSHA256 tree hash, see Computing Checksums.\nType: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload.\nUpload Part API Version 2012-06-01 464",
      "start_idx": 707417,
      "end_idx": 708319,
      "metadata": {
        "num_sentences": 10,
        "num_words": 136,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Header Constraints"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Content-Range",
            "RFC 2616",
            "SHA256 checksum",
            "SHA256 tree hash",
            "multipart upload",
            "header",
            "constraints",
            "payload",
            "Upload Part API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "RFC 2616",
            "SHA256 checksum",
            "SHA256 tree hash",
            "Upload Part API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "RFC 2616"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference details for uploading parts to Amazon S3 Glacier, including required headers, constraints, and checksum specifications.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the Content-Range header in Amazon S3 Glacier?",
            "How do I compute a SHA256 tree hash for data upload?",
            "What constraints apply to the multipart upload range?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SHA256 checksum",
          "multipart upload",
          "RFC 2616",
          "SHA256 tree hash",
          "header",
          "Amazon S3 Glacier",
          "constraints",
          "payload",
          "Upload Part API",
          "Content-Range",
          "Upload Part API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_443",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponses\nUpon a successful part upload, S3 Glacier returns a 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nx-amz-sha256-\nThe SHA256 tree hash that S3 Glacier computed for the uploaded part.\ntree-hash\nType: String\nResponse Body\nThis operation does not return a response body.\nExample\nThe following request uploads a 4 MB part. The request sets the byte range to make this the first\npart in the archive.\nExample Request\nThe example sends an HTTP PUT request to upload a 4 MB part. The request is sent to the URI of\nthe Upload ID that was returned by the Initiate Multipart Upload request. The Content-Range\nheader identifies the part as the first 4 MB data part of the archive.\nUpload Part API Version 2012-06-01 465",
      "start_idx": 708319,
      "end_idx": 709431,
      "metadata": {
        "num_sentences": 11,
        "num_words": 172,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Headers",
              "Syntax",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "204 No Content",
            "SHA256 tree hash",
            "response headers",
            "multipart upload",
            "Upload ID",
            "Content-Range",
            "HTTP PUT",
            "archive",
            "byte range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Upload ID",
            "SHA256 tree hash",
            "API Version 2012-06-01",
            "Content-Range"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP PUT"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the response and headers for successful part uploads to Amazon S3 Glacier using the Upload Part API, including an example HTTP PUT request for uploading a data part.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What response does S3 Glacier return for a successful part upload?",
            "How do I upload a part using the Upload Part API?",
            "What is the SHA256 tree hash in the response headers?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "response headers",
          "multipart upload",
          "API Version 2012-06-01",
          "SHA256 tree hash",
          "byte range",
          "Amazon S3 Glacier",
          "HTTP PUT",
          "Content-Range",
          "archive",
          "Upload ID",
          "S3 Glacier",
          "204 No Content"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_444",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nPUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 0-4194303/*\nx-amz-sha256-tree-hash:c06f7cd4baacb087002a99a5f48bf953\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nContent-Length: 4194304\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-\nversion,Signature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nTo upload the next part, the procedure is the same; however, you must calculate a new SHA256\ntree hash of the part you are uploading and also specify a new byte range to indicate where the\npart will go in the final assembly. The following request uploads another part using the same\nupload ID. The request specifies the next 4 MB of the archive after the previous request and a part\nsize of 4 MB.\nPUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 4194304-8388607/*\nContent-Length: 4194304\nx-amz-sha256-tree-hash:f10e02544d651e2c3ce90a4307427493\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-glacier-version: 2012-06-01\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/\nus-west-2/glacier/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-version,\nSignature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nThe parts can be uploaded in any order; S3 Glacier uses the range specification for each part to\ndetermine the order in which to assemble them.\nExample Response\nHTTP/1.1 204 No Content\nUpload Part API Version 2012-06-01 466",
      "start_idx": 709431,
      "end_idx": 711508,
      "metadata": {
        "num_sentences": 5,
        "num_words": 173,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Interaction",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "PUT request",
            "multipart upload",
            "SHA256 tree hash",
            "Content-Range",
            "Authorization",
            "HTTP headers",
            "archive assembly",
            "byte range",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "SHA256 tree hash",
            "Content-Range",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the procedural steps for uploading parts of an archive to Amazon S3 Glacier using the multipart upload API, including header specifications and byte range management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the multipart upload API in Amazon S3 Glacier?",
            "What headers are required for a multipart upload request?",
            "How are byte ranges specified during archive assembly?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "archive assembly",
          "HTTP/1.1",
          "multipart upload",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "PUT request",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "byte range",
          "Content-Range",
          "HTTP headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_445",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nx-amz-sha256-tree-hash: c06f7cd4baacb087002a99a5f48bf953\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nJob Operations\nThe following are the job operations available in S3 Glacier.\nTopics\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Initiate Job (POST jobs)\n\u2022 List Jobs (GET jobs)\nDescribe Job (GET JobID)\nDescription\nThis operation returns information about a job you previously initiated, including the job initiation\ndate, the user who initiated the job, the job status code/message, and the Amazon Simple\nNotification Service (Amazon SNS) topic to notify after Amazon S3 Glacier (S3 Glacier) completes\nthe job. For more information about initiating a job, see Initiate Job (POST jobs).\nJob Operations API Version 2012-06-01 467",
      "start_idx": 711508,
      "end_idx": 712717,
      "metadata": {
        "num_sentences": 4,
        "num_words": 171,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Job Operations",
            "Initiate Job",
            "Describe Job",
            "GET JobID",
            "Amazon SNS",
            "Upload Part",
            "List Jobs",
            "Abort Multipart Upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Initiate Multipart Upload",
            "Job Operations",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for job operations and multipart upload processes in Amazon S3 Glacier, including API methods like Describe Job, Get Job Output, and Initiate Job.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I describe a job in Amazon S3 Glacier?",
            "What are the steps to complete a multipart upload in S3 Glacier?",
            "What API operations are available for job management in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "GET JobID",
          "Upload Part",
          "Job Operations",
          "Abort Multipart Upload",
          "API Version 2012-06-01",
          "List Jobs",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Describe Job",
          "Initiate Multipart Upload",
          "Multipart Upload",
          "Initiate Job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_446",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nNote\nThis operation enables you to check the status of your job. However, we strongly\nrecommend that you set up an Amazon SNS topic and specify it in your initiate job request\nso that S3 Glacier can notify the topic after it completes the job.\nA job ID will not expire for at least 24 hours after S3 Glacier completes the job.\nRequests\nSyntax\nTo obtain information about a job, you use the HTTP GET method and scope the request to the\nspecific job. Note that the relative URI path is the same one that S3 Glacier returned to you when\nyou initiated the job.\nGET /AccountID/vaults/VaultName/jobs/JobID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: signatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nNote\nIn the request, if you omit the JobID, the response returns a list of all active jobs on the\nspecified vault. For more information about listing jobs, see List Jobs (GET jobs).\nDescribe Job API Version 2012-06-01 468",
      "start_idx": 712717,
      "end_idx": 714038,
      "metadata": {
        "num_sentences": 11,
        "num_words": 225,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "HTTP Request Syntax",
              "Best Practices"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Job ID",
            "SNS topic",
            "HTTP GET",
            "Authorization",
            "Account ID",
            "Vault",
            "Job Status",
            "List Jobs",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "SNS topic",
            "VaultName",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to check the status of a job in Amazon S3 Glacier using the HTTP GET method and provides best practices for using SNS topics for job completion notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I check the status of a job in Amazon S3 Glacier?",
            "What is the syntax for the HTTP GET request to describe a job?",
            "How does Amazon SNS help with job notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "List Jobs",
          "Region",
          "Account ID",
          "Amazon S3 Glacier",
          "Vault",
          "Amazon SNS",
          "Job Status",
          "HTTP GET",
          "AWS account ID",
          "VaultName",
          "API Version",
          "SNS topic",
          "Job ID"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_447",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\nDescribe Job API Version 2012-06-01 469",
      "start_idx": 714038,
      "end_idx": 715001,
      "metadata": {
        "num_sentences": 5,
        "num_words": 107,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Request Body",
            "Responses",
            "HTTP/1.1",
            "ArchiveId",
            "SHA256TreeHash",
            "InventoryRetrievalParameters",
            "JobId",
            "OutputLocation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "InventoryRetrievalParameters",
            "ArchiveSHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "HTTP Protocol",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "API Version 2012-06-01"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details about the Amazon S3 Glacier API operation, including request headers, response syntax, and supported parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What headers are required for this Amazon S3 Glacier operation?",
            "What does the response syntax for this operation look like?",
            "What metadata fields are included in the API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "x-amzn-RequestId",
          "ArchiveId",
          "JobId",
          "OutputLocation",
          "Responses",
          "Amazon S3 Glacier",
          "Request Body",
          "ArchiveSHA256TreeHash",
          "InventoryRetrievalParameters",
          "Request Headers",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_448",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nAction\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select.\nType: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null.\nType: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval job. For inventory retrieval\njobs, this field is null.\nType: String\nDescribe Job API Version 2012-06-01 471",
      "start_idx": 715847,
      "end_idx": 716833,
      "metadata": {
        "num_sentences": 10,
        "num_words": 129,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Structure"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256TreeHash",
            "SNSTopic",
            "StatusCode",
            "VaultARN",
            "Response Headers",
            "Response Body",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Select"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash",
            "SNSTopic"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the response structure and fields for Amazon S3 Glacier jobs, including ArchiveRetrieval, InventoryRetrieval, and Select operations. It details JSON fields, headers, and job-specific attributes like ArchiveId and SHA256TreeHash.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the structure of the response body for Amazon S3 Glacier jobs?",
            "What are the common response headers used in Amazon S3 Glacier operations?",
            "What fields are included in the JSON response for ArchiveRetrieval jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "StatusCode",
          "InventoryRetrieval",
          "Select",
          "ArchiveId",
          "Amazon S3 Glacier",
          "VaultARN",
          "Response Headers",
          "Response Body",
          "SNSTopic",
          "ArchiveRetrieval",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_449",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null.\nType: Number\nCompleted\nThe job status. When an archive or inventory retrieval job is completed, you get the job's output\nusing the Get Job Output (GET output).\nType: Boolean\nCompletionDate\nThe Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null.\nType: String\nCreationDate\nThe UTC time that the job was created.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval.\nType: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null.\nType: Number\nJobDescription\nThe job description you provided when you initiated the job.\nType: String\nDescribe Job API Version 2012-06-01 472",
      "start_idx": 716833,
      "end_idx": 717956,
      "metadata": {
        "num_sentences": 13,
        "num_words": 166,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Job Output",
            "UTC time",
            "ISO 8601",
            "InventoryRetrievalJobInput",
            "ArchiveSizeInBytes",
            "CompletionDate",
            "CreationDate",
            "JobDescription"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveRetrieval job",
            "InventoryRetrieval job",
            "Get Job Output",
            "Describe Job API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Data Retrieval",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides field descriptions and metadata for job-related operations in Amazon S3 Glacier, including retrieval jobs and their parameters.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the format for the CompletionDate field?",
            "What parameters are used for an InventoryRetrieval job?",
            "How can I get the output of a completed job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "InventoryRetrievalJobInput",
          "InventoryRetrieval",
          "ISO 8601",
          "UTC time",
          "Get Job Output",
          "JobDescription",
          "CompletionDate",
          "Amazon S3 Glacier",
          "ArchiveRetrieval job",
          "Describe Job API Version 2012-06-01",
          "ArchiveSizeInBytes",
          "CreationDate",
          "InventoryRetrieval job",
          "Job Output",
          "ArchiveRetrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_450",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nJobId\nThe ID that identifies the job in S3 Glacier.\nType: String\nJobOutputPath\nContains the job output location.\nType: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored.\nType: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If you don't specify a range in the archive retrieval, then\nthe whole archive is retrieved; also StartByteValue equals 0, and EndByteValue equals the size of\nthe archive minus 1. For inventory retrieval or select jobs, this field is null.\nType: String\nSelectParameters\nAn object that contains information about the parameters used for a select.\nType: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value.\nFor more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data.\nFor the specific case when the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value.\nThis field is null in the following situations:\nDescribe Job API Version 2012-06-01 473",
      "start_idx": 717956,
      "end_idx": 719292,
      "metadata": {
        "num_sentences": 12,
        "num_words": 200,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "JobId",
            "JobOutputPath",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SHA256TreeHash",
            "archive retrieval",
            "tree-hash alignment",
            "inventory retrieval",
            "S3 Glacier"
          ],
          "entities": [
            "JobId",
            "JobOutputPath",
            "OutputLocation",
            "SHA256TreeHash",
            "S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides detailed descriptions of fields related to jobs in Amazon S3 Glacier, including job IDs, output locations, retrieval byte ranges, and checksum validation using SHA256 tree hashes.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the JobId field in S3 Glacier?",
            "How is the SHA256TreeHash value used in archive retrieval?",
            "What information does the OutputLocation object contain?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SelectParameters",
          "JobOutputPath",
          "JobId",
          "OutputLocation",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "RetrievalByteRange",
          "archive retrieval",
          "S3 Glacier",
          "tree-hash alignment",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_452",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExamples\nThe following example shows the request for a job that retrieves an archive.\nExample Request: Get job description\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe response body includes JSON that describes the specified job. Note that for both the inventory\nretrieval and archive retrieval jobs, the JSON fields are the same. However, when a field doesn't\napply to the type of job, its value is null. The following is an example response for an archive\nretrieval job. Note the following:\n\u2022 The Action field value is ArchiveRetrieval.\n\u2022 The ArchiveSizeInBytes field shows the size of the archive requested in the archive retrieval\njob.\n\u2022 The ArchiveSHA256TreeHash field shows the SHA256 tree hash for the entire archive.\n\u2022 The RetrievalByteRange field shows the range requested in the Initiate Job request. In this\nexample, the whole archive is requested.\n\u2022 The SHA256TreeHash field shows the SHA256 tree hash for the range requested in the Initiate\nJob request. In this example, it is the same as the ArchiveSHA256TreeHash field, which means\nthat the whole archive was requested.\n\u2022 The InventorySizeInBytes field value is null because it does not apply to an archive\nretrieval job.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nDescribe Job API Version 2012-06-01 475",
      "start_idx": 720181,
      "end_idx": 722037,
      "metadata": {
        "num_sentences": 14,
        "num_words": 228,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "job description",
            "SHA256 tree hash",
            "Initiate Job request",
            "RetrievalByteRange",
            "InventorySizeInBytes",
            "Action field",
            "API version",
            "HTTP response"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveSHA256TreeHash",
            "RetrievalByteRange",
            "x-amzn-RequestId",
            "Action field"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an example of retrieving an archive from Amazon S3 Glacier, including both the request and response details. It explains key response fields like Action, ArchiveSHA256TreeHash, and RetrievalByteRange.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What does the ArchiveSHA256TreeHash field represent?",
            "What are the key fields in the archive retrieval job response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage API]",
        "tf_idf_keywords": [
          "InventorySizeInBytes",
          "API version",
          "x-amzn-RequestId",
          "Action field",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "Initiate Job request",
          "job description",
          "HTTP response",
          "archive retrieval",
          "RetrievalByteRange",
          "ArchiveSHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_453",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nContent-Length: 419\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"ArchiveSizeInBytes\": 16777216,\n\"ArchiveSHA256TreeHash\":\n\"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"Completed\": false,\n\"CompletionDate\": null,\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"My ArchiveRetrieval Job\",\n\"JobId\": \"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"RetrievalByteRange\": \"0-16777215\",\n\"SHA256TreeHash\": \"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\": \"InProgress\",\n\"StatusMessage\": \"Operation in progress.\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nThe following is an example response for an inventory retrieval job. Note the following:\n\u2022 The Action field value is InventoryRetrieval.\n\u2022 The ArchiveSizeInBytes, ArchiveSHA256TreeHash, and RetrievalByteRange field\nvalues are null because these fields do not apply to an inventory retrieval job.\n\u2022 The InventorySizeInBytes field value is null because the job is still in progress, and has\nnot fully prepared the inventory for download. If the job was completed before your describe job\nrequest, this field would give you the size of the output.\n{\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"Completed\": false,\n\"CompletionDate\": null,\nDescribe Job API Version 2012-06-01 476",
      "start_idx": 722037,
      "end_idx": 723757,
      "metadata": {
        "num_sentences": 7,
        "num_words": 153,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "JobId",
            "VaultARN",
            "SNSTopic",
            "SHA256TreeHash",
            "CompletionDate",
            "RetrievalByteRange",
            "Action"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "SNSTopic",
            "JobId",
            "ArchiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples and details about archive and inventory retrieval jobs in Amazon S3 Glacier, including job statuses, metadata, and relevant configurations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What fields are included in an archive retrieval job response?",
            "How can I retrieve inventory data from Amazon S3 Glacier?",
            "What is the meaning of the 'StatusCode' field in the job response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrieval",
          "ArchiveId",
          "JobId",
          "Action",
          "Amazon S3 Glacier",
          "CompletionDate",
          "AWS SNS",
          "VaultARN",
          "RetrievalByteRange",
          "SNSTopic",
          "ArchiveRetrieval",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_455",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n},\n}\nRelated Sections\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Job Output (GET output)\nDescription\nThis operation downloads the output of the job you initiated using Initiate Job (POST jobs).\nDepending on the job type you specified when you initiated the job, the output will be either the\ncontent of an archive or a vault inventory.\nYou can download all the job output or download a portion of the output by specifying a byte\nrange. For both archive and inventory retrieval jobs, you should verify the downloaded size against\nthe size returned in the headers from the Get Job Output response.\nFor archive retrieval jobs, you should also verify that the size is what you expected. If you download\na portion of the output, the expected size is based on the range of bytes you specified. For\nexample, if you specify a range of bytes=0-1048575, you should verify your download size is\n1,048,576 bytes. If you download an entire archive, the expected size is the size of the archive\nwhen you uploaded it to Amazon S3 Glacier (S3 Glacier). The expected size is also returned in the\nheaders from the Get Job Output response.\nIn the case of an archive retrieval job, depending on the byte range you specify, S3 Glacier returns\nthe checksum for the portion of the data. To ensure the portion you downloaded is the correct\ndata, compute the checksum on the client, verify that the values match, and verify that the size is\nwhat you expected.\nA job ID does not expire for at least 24 hours after S3 Glacier completes the job. That is, you can\ndownload the job output within the 24-hour period after S3 Glacier completes the job.\nGet Job Output API Version 2012-06-01 478",
      "start_idx": 725267,
      "end_idx": 727159,
      "metadata": {
        "num_sentences": 14,
        "num_words": 309,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Data Validation",
              "Byte Range Specification"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Get Job Output",
            "archive retrieval",
            "vault inventory",
            "byte range",
            "checksum",
            "job ID",
            "headers",
            "download size",
            "Initiate Job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output",
            "Initiate Job",
            "API Version 2012-06-01",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Integrity",
            "File Download"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to use the Get Job Output operation in Amazon S3 Glacier to download job outputs such as archive content or vault inventory, with guidance on byte range specification and data validation using checksums.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download the output of a job in Amazon S3 Glacier?",
            "What steps should I follow to validate the downloaded data using checksums?",
            "What is the expected size for a partial or complete archive download?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Get Job Output",
          "API Version 2012-06-01",
          "byte range",
          "Amazon S3 Glacier",
          "checksum",
          "headers",
          "download size",
          "archive",
          "vault inventory",
          "archive retrieval",
          "job ID",
          "Initiate Job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_456",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo retrieve a job output, you send the HTTP GET request to the URI of the output of the specific\njob.\nGET /AccountId/vaults/VaultName/jobs/JobID/output HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nRange: ByteRangeToRetrieve\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nRange No\nThe range of bytes to retrieve from the output. For example,\nif you want to download the first 1,048,576 bytes, specify\nthe range as bytes=0-1048575 . For more information,\ngo to Range Header Field Definition. The range is relative to\nGet Job Output API Version 2012-06-01 479",
      "start_idx": 727159,
      "end_idx": 728452,
      "metadata": {
        "num_sentences": 11,
        "num_words": 200,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Request",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP GET request",
            "URI",
            "AccountId",
            "vault",
            "JobID",
            "Range header",
            "output retrieval",
            "request headers",
            "authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "JobID",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve job output from Amazon S3 Glacier using an HTTP GET request, detailing the syntax, headers, and usage of the Range header for partial data retrieval.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve job output from Amazon S3 Glacier?",
            "What headers are required for an HTTP GET request to Amazon S3 Glacier?",
            "How is the Range header used in retrieving partial data from Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "authorization",
          "URI",
          "AccountId",
          "JobID",
          "Amazon S3 Glacier",
          "vault",
          "Range header",
          "HTTP GET request",
          "request headers",
          "VaultName",
          "output retrieval",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_457",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nany range specified in the Initiate Job request. By default,\nthis operation downloads the entire output.\nIf the job output is large, then you can use the Range request\nheader to retrieve a portion of the output. This allows you\nto download the entire output in smaller chunks of bytes.\nFor example, suppose you have 1 GB job output you want\nto download and you decide to download 128 MB chunks of\ndata at a time, a total of eight Get Job Output requests. You\nwill use the following process to download the job output:\n1. Download a 128 MB chunk of output by specifying the\nappropriate byte range using the R ange header. Verify\nthat all 128 MB of data was received.\n2. Along with the data, the response will include a checksum\nof the payload. You compute the checksum of the\npayload on the client and compare it with the checksum\nyou received in the response to ensure you received all\nthe expected data.\n3. Repeat steps 1 and 2 for all the eight 128 MB chunks of\noutput data, each time specifying the appropriate byte\nrange.\n4. After downloading all the parts of the job output, you\nhave a list of eight checksum values. Compute the tree\nhash of these values to find the checksum of the entire\noutput. Using the Describe Job (GET JobID) operation,\nobtain job information of the job that provided you the\noutput. The response includes the checksum of the entire\narchive stored in S3 Glacier. You compare this value\nwith the checksum you computed to ensure you have\ndownloaded the entire archive content with no errors.\nType: String\nGet Job Output API Version 2012-06-01 480",
      "start_idx": 728452,
      "end_idx": 730087,
      "metadata": {
        "num_sentences": 20,
        "num_words": 291,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Validation"
            ]
          },
          "keywords": [
            "Range header",
            "checksum",
            "tree hash",
            "job output",
            "S3 Glacier",
            "archive",
            "payload",
            "Describe Job",
            "API Version",
            "byte range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output",
            "Describe Job",
            "API Version 2012-06-01",
            "128 MB chunks"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Data Integrity",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for downloading large job outputs from Amazon S3 Glacier using byte ranges and validating data integrity through checksums and tree hashes.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I download large outputs from Amazon S3 Glacier in chunks?",
            "How do I validate data integrity when using the Get Job Output operation?",
            "What is the process for computing a tree hash of checksums?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "Get Job Output",
          "API Version 2012-06-01",
          "checksum",
          "payload",
          "Describe Job",
          "byte range",
          "archive",
          "Range header",
          "Amazon S3 Glacier",
          "128 MB chunks",
          "API Version",
          "S3 Glacier",
          "job output",
          "tree hash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_458",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: None\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nFor a retrieval request that returns all of the job data, the job output response returns a 200 OK\nresponse code. When partial content is requested, for example, if you specified the Range header\nin the request, then the response code 206 Partial Content is returned.\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: ContentType\nContent-Length: Length\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\n[Body containing job output.]\nResponse Headers\nHeader Description\nContent-Range\nThe range of bytes returned by S3 Glacier. If only partial output is\ndownloaded, the response provides the range of bytes S3 Glacier\nreturned.\nFor example, bytes 0-1048575/8388608 returns the first 1 MB\nfrom 8 MB.\nFor more information about the Content-Range header, go to\nContent-Range Header Field Definition.\nGet Job Output API Version 2012-06-01 481",
      "start_idx": 730087,
      "end_idx": 731124,
      "metadata": {
        "num_sentences": 9,
        "num_words": 148,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Body",
            "Response Headers",
            "Content-Range",
            "ChecksumComputedByAmazonGlacier",
            "200 OK",
            "206 Partial Content",
            "Range header",
            "job output",
            "HTTP/1.1"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Content-Range",
            "x-amzn-RequestId",
            "Get Job Output API",
            "2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the Amazon S3 Glacier Get Job Output API, including response syntax, headers, and status codes for retrieval requests.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the response codes for Amazon S3 Glacier Get Job Output API?",
            "What is the purpose of the Content-Range header in this API?",
            "How does Amazon S3 Glacier handle partial content retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "x-amzn-RequestId",
          "2012-06-01",
          "ChecksumComputedByAmazonGlacier",
          "Amazon S3 Glacier",
          "Request Body",
          "Content-Range",
          "206 Partial Content",
          "Range header",
          "200 OK",
          "Response Headers",
          "Get Job Output API",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_459",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nType: String\nContent-Type\nThe Content-Type depends on whether the job output is an archive or\na vault inventory.\n\u2022\nFor archive data, the Content-Type is application/octet-\nstream .\n\u2022\nFor vault inventory, if you requested CSV format when you initiated\nthe job, the Content-Type is text/csv. Otherwise, by default,\nvault inventory is returned as JSON, and the Content-Type is\napplication/json .\nType: String\nGet Job Output API Version 2012-06-01 482",
      "start_idx": 731124,
      "end_idx": 731626,
      "metadata": {
        "num_sentences": 5,
        "num_words": 77,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Format"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Content-Type",
            "archive",
            "vault inventory",
            "application/octet-stream",
            "text/csv",
            "application/json",
            "job output",
            "API",
            "CSV format"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Content-Type",
            "archive data",
            "vault inventory",
            "Get Job Output API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Formats",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the Content-Type specifications for job output in Amazon S3 Glacier, distinguishing between archive data and vault inventory formats.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the Content-Type for archive data in Amazon S3 Glacier?",
            "What formats are available for vault inventory in Amazon S3 Glacier?",
            "What is the default Content-Type for vault inventory in JSON format?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Content-Type",
          "CSV format",
          "text/csv",
          "API",
          "archive data",
          "application/octet-stream",
          "Amazon S3 Glacier",
          "archive",
          "vault inventory",
          "application/json",
          "Get Job Output API",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_460",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nx-amz-sha256-\nThe checksum of the data in the response. This header is returned only\ntree-hash\nwhen retrieving the output for an archive retrieval job. Furthermore,\nthis header appears when the retrieved data range requested in the\nInitiate Job request is tree hash aligned and the range to download\nin the Get Job Output is also tree hash aligned. For more informati\non about tree hash aligned ranges, see Receiving Checksums When\nDownloading Data.\nFor example, if in your Initiate Job request you specified a tree hash\naligned range to retrieve (which includes the whole archive), then\nyou will receive the checksum of the data you download under the\nfollowing conditions:\n\u2022\nYou get the entire range of the retrieved data.\n\u2022\nYou request a byte range of the retrieved data that has a size of a\nmegabyte (1024 KB) multiplied by a power of 2 and that starts and\nends on a multiple of the size of the requested range. For example,\nif you have 3.1 MB of retrieved data and you specify a range to\nreturn that starts at 1 MB and ends at 2 MB, then the x-amz-sha\n256-tree-hash is returned as a response header.\n\u2022\nYou request a range to return of the retrieved data that goes to the\nend of the data, and the start of the range is a multiple of the size\nof the range to retrieve rounded up to the next power of two but\nnot smaller than one megabyte (1024 KB). For example, if you have\n3.1 MB of retrieved data and you specify a range that starts at 2\nMB and ends at 3.1 MB (the end of the data), then the x-amz-sha\n256-tree-hash is returned as a response header.\nType: String\nGet Job Output API Version 2012-06-01 483",
      "start_idx": 731626,
      "end_idx": 733290,
      "metadata": {
        "num_sentences": 10,
        "num_words": 305,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Header Description",
              "Response Header Behavior"
            ]
          },
          "keywords": [
            "x-amz-sha256-tree-hash",
            "checksum",
            "archive retrieval job",
            "tree hash aligned",
            "Initiate Job request",
            "Get Job Output",
            "byte range",
            "megabyte",
            "API Version 2012-06-01",
            "response header"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-sha256-tree-hash",
            "Initiate Job",
            "Get Job Output",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the behavior of the `x-amz-sha256-tree-hash` response header in Amazon S3 Glacier when retrieving data from an archive retrieval job under specific conditions of tree hash alignment.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the x-amz-sha256-tree-hash header?",
            "When is the x-amz-sha256-tree-hash header returned in Amazon S3 Glacier?",
            "How does tree hash alignment affect data retrieval in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Get Job Output",
          "API Version 2012-06-01",
          "checksum",
          "byte range",
          "Initiate Job request",
          "megabyte",
          "response header",
          "Amazon S3 Glacier",
          "archive retrieval job",
          "Initiate Job",
          "x-amz-sha256-tree-hash",
          "tree hash aligned"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_461",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nResponse Body\nS3 Glacier returns the job output in the response body. Depending on the job type, the output can\nbe the archive contents or the vault inventory. In case of a vault inventory, by default the inventory\nlist is returned as the following JSON body.\n{\n\"VaultARN\": String,\n\"InventoryDate\": String,\n\"ArchiveList\": [\n{\"ArchiveId\": String,\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"Size\": Number,\n\"SHA256TreeHash\": String\n},\n...\n]\n}\nIf you requested the comma-separated values (CSV) output format when you initiated the vault\ninventory job, then the vault inventory is returned in CSV format in the body. The CSV format has\nfive columns \"ArchiveId\", \"ArchiveDescription\", \"CreationDate\", \"Size\", and \"SHA256TreeHash\" with\nthe same definitions as the corresponding JSON fields.\nNote\nIn the returned CSV format, fields may be returned with the whole field enclosed in double-\nquotes. Fields that contain a comma or double-quotes are always returned enclosed in\ndouble-quotes. For example, my archive description,1 is returned as \"my archive\ndescription,1\". Double-quote characters that are within returned double-quote\nenclosed fields are escaped by preceding them with a backslash character. For example, my\narchive description,1\"2 is returned as \"my archive description,1\\\"2\" and my\narchive description,1\\\"2 is returned as \"my archive description,1\\\\\"2\". The\nbackslash character is not escaped.\nThe JSON response body contains the following JSON fields.\nGet Job Output API Version 2012-06-01 484",
      "start_idx": 733290,
      "end_idx": 734840,
      "metadata": {
        "num_sentences": 13,
        "num_words": 224,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Data Format"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Response Body",
            "Job Output",
            "Vault Inventory",
            "JSON",
            "CSV",
            "ArchiveId",
            "SHA256TreeHash",
            "InventoryDate",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash",
            "Get Job Output API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Formats",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response body structure for Amazon S3 Glacier's job output, detailing JSON and CSV formats for vault inventory and archive contents.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the JSON response body for S3 Glacier job output?",
            "How is the vault inventory returned in CSV format?",
            "What are the fields included in the job output response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "ArchiveId",
          "Amazon S3 Glacier",
          "Response Body",
          "CSV",
          "InventoryDate",
          "VaultARN",
          "Get Job Output API",
          "Job Output",
          "S3 Glacier",
          "Vault Inventory",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_462",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nArchiveDescription\nThe description of an archive.\nType: String\nArchiveId\nThe ID of an archive.\nType: String\nArchiveList\nAn array of archive metadata. Each object in the array represents metadata for one archive\ncontained in the vault.\nType: Array\nCreationDate\nThe UTC date and time the archive was created.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nInventoryDate\nThe UTC date and time of the last inventory for the vault that was completed after changes\nto the vault. Even though S3 Glacier prepares a vault inventory once a day, the inventory date\nis only updated if there have been archive additions or deletions to the vault since the last\ninventory.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nSHA256TreeHash\nThe tree hash of the archive.\nType: String\nSize\nThe size in bytes of the archive.\nGet Job Output API Version 2012-06-01 485",
      "start_idx": 734840,
      "end_idx": 735820,
      "metadata": {
        "num_sentences": 12,
        "num_words": 156,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metadata Description",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveDescription",
            "ArchiveId",
            "ArchiveList",
            "CreationDate",
            "InventoryDate",
            "SHA256TreeHash",
            "ISO 8601",
            "Vault Inventory",
            "Size"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveDescription",
            "ArchiveId",
            "SHA256TreeHash",
            "Vault Inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides metadata descriptions for archives in Amazon S3 Glacier, detailing fields such as ArchiveId, CreationDate, InventoryDate, and SHA256TreeHash.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What metadata fields are available for an archive in Amazon S3 Glacier?",
            "How is the archive creation date represented?",
            "What is the purpose of the SHA256TreeHash in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "ArchiveList",
          "ISO 8601",
          "Amazon S3 Glacier",
          "ArchiveDescription",
          "InventoryDate",
          "Size",
          "CreationDate",
          "Vault Inventory",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_463",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) resource from which the archive retrieval was requested.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example shows the request for a job that retrieves an archive.\nExample 1: Download output\nThis example retrieves data prepared by S3 Glacier in response to your initiate archive retrieval job\nrequest.\nExample Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following is an example response of an archive retrieval job. Note that the Content-Type\nheader is application/octet-stream and that x-amz-sha256-tree-hash header is included\nin the response, which means that all the job data is returned.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nGet Job Output API Version 2012-06-01 486",
      "start_idx": 735820,
      "end_idx": 737177,
      "metadata": {
        "num_sentences": 7,
        "num_words": 139,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "archive retrieval",
            "Error Responses",
            "HTTP request",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "application/octet-stream",
            "x-amz-sha256-tree-hash",
            "Get Job Output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "x-amz-sha256-tree-hash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Reference",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a reference for retrieving archives from Amazon S3 Glacier, including example requests, responses, and error handling details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What does an example Get Job Output request look like?",
            "What headers are included in the archive retrieval response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "Get Job Output",
          "x-amz-sha256-tree-hash",
          "application/octet-stream",
          "Amazon S3 Glacier",
          "archive retrieval",
          "VaultARN",
          "Error Responses",
          "x-amz-glacier-version",
          "HTTP request"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_464",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/octet-stream\nContent-Length: 1048576\n[Archive data.]\nThe following is an example response of an inventory retrieval job. Note that the Content-Type\nheader is application/json. Also note that the response does not include the x-amz-sha256-\ntree-hash header.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 906\n{\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"InventoryDate\": \"2011-12-12T14:19:01Z\",\n\"ArchiveList\": [\n{\n\"ArchiveId\": \"DMTmICA2n5Tdqq5BV2z7og-\nA20xnpAPKt3UXwWxdWsn_D6auTUrW6kwy5Qyj9xd1MCE1mBYvMQ63LWaT8yTMzMaCxB_9VBWrW4Jw4zsvg5kehAPDVKcppUD1X7b24JukOr4mMAq-\noA\",\n\"ArchiveDescription\": \"my archive1\",\n\"CreationDate\": \"2012-05-15T17:19:46.700Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"6b9d4cf8697bd3af6aa1b590a0b27b337da5b18988dbcc619a3e608a554a1e62\"\n},\n{\n\"ArchiveId\": \"2lHzwhKhgF2JHyvCS-\nZRuF08IQLuyB4265Hs3AXj9MoAIhz7tbXAvcFeHusgU_hViO1WeCBe0N5lsYYHRyZ7rrmRkNRuYrXUs_sjl2K8ume_7mKO_0i7C-\nuHE1oHqaW9d37pabXrSA\",\n\"ArchiveDescription\": \"my archive2\",\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"7f2fe580edb35154041fa3d4b41dd6d3adaef0c85d2ff6309f1d4b520eeecda3\"\n}\n]\nGet Job Output API Version 2012-06-01 487",
      "start_idx": 737177,
      "end_idx": 738656,
      "metadata": {
        "num_sentences": 5,
        "num_words": 111,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-sha256-tree-hash",
            "inventory retrieval job",
            "VaultARN",
            "ArchiveId",
            "CreationDate",
            "SHA256TreeHash",
            "Content-Type",
            "Content-Length",
            "Get Job Output API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash",
            "Get Job Output API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an example response for an inventory retrieval job in Amazon S3 Glacier, including details such as VaultARN, ArchiveList, and SHA256TreeHash values.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the structure of an inventory retrieval job response in Amazon S3 Glacier?",
            "What headers are included in the response for an Amazon S3 Glacier inventory retrieval job?",
            "What details are provided for each archive in the ArchiveList?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval job",
          "Content-Type",
          "ArchiveId",
          "Amazon S3 Glacier",
          "Content-Length",
          "VaultARN",
          "CreationDate",
          "Get Job Output API",
          "x-amz-sha256-tree-hash",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_465",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n}\nExample 2: Download only partial output\nThis example retrieves only a portion of the archive prepared by S3 Glacier in response to your\ninitiate archive retrieval job request. The request uses the optional Range header to retrieve only\nthe first 1,024 bytes.\nExample Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nRange: bytes=0-1023\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following successful response shows the 206 Partial Content response. In this case, the\nresponse also includes a Content-Range header that specifies the range of bytes S3 Glacier\nreturns.\nHTTP/1.1 206 Partial Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range: bytes 0-1023/8388608\nContent-Type: application/octet-stream\nContent-Length: 1024\n[Archive data.]\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Initiate Job (POST jobs)\nGet Job Output API Version 2012-06-01 488",
      "start_idx": 738656,
      "end_idx": 740029,
      "metadata": {
        "num_sentences": 6,
        "num_words": 139,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "Range header",
            "partial content",
            "HTTP GET",
            "Content-Range",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "API Version 2012-06-01"
          ],
          "entities": [
            "S3 Glacier",
            "AWS",
            "vaults",
            "jobs",
            "archive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP API"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to retrieve a partial archive from Amazon S3 Glacier using the Range header in an HTTP GET request. It includes both the request and response details for partial content retrieval.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve partial content from S3 Glacier?",
            "What is the Range header used for in S3 Glacier API?",
            "What does a successful partial content response look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "jobs",
          "AWS4-HMAC-SHA256",
          "partial content",
          "Authorization",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Content-Range",
          "Range header",
          "archive",
          "AWS",
          "archive retrieval",
          "HTTP GET",
          "vaults",
          "S3 Glacier",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_466",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Job (POST jobs)\nThis operation initiates the following types of Amazon S3 Glacier (S3 Glacier) jobs:\n\u2022 archive-retrieval\u2014 Retrieve an archive\n\u2022 inventory-retrieval\u2014 Inventory a vault\nTopics\n\u2022 Initializing an Archive or Vault Inventory Retrieval Job\n\u2022 Requests\n\u2022 Responses\n\u2022 Examples\n\u2022 Related Sections\nInitializing an Archive or Vault Inventory Retrieval Job\nRetrieving an archive or a vault inventory are asynchronous operations that require you to initiate a\njob. Once started, job cannot be cancelled. Retrieval is a two-step process:\n1. Initiate a retrieval job by using the Initiate Job (POST jobs) operation.\nImportant\nA data retrieval policy can cause your initiate retrieval job request to fail with\na PolicyEnforcedException. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.\n2. After the job completes, download the bytes using the Get Job Output (GET output) operation.\nThe retrieval request is ran asynchronously. When you initiate a retrieval job, S3 Glacier creates\na job and returns a job ID in the response. When S3 Glacier completes the job, you can get the\nInitiate Job API Version 2012-06-01 489",
      "start_idx": 740029,
      "end_idx": 741372,
      "metadata": {
        "num_sentences": 12,
        "num_words": 206,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Job Initialization"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive-retrieval",
            "inventory-retrieval",
            "Initiate Job",
            "PolicyEnforcedException",
            "data retrieval policy",
            "vault inventory",
            "asynchronous operations",
            "Get Job Output",
            "retrieval job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job (POST jobs)",
            "PolicyEnforcedException",
            "S3 Glacier Data Retrieval Policies",
            "Get Job Output (GET output)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to initiate retrieval jobs, including archive and vault inventory retrievals, using the Initiate Job (POST jobs) operation. It also discusses potential errors like PolicyEnforcedException caused by data retrieval policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a retrieval job in Amazon S3 Glacier?",
            "What is the process for retrieving an archive or vault inventory?",
            "What causes a PolicyEnforcedException when initiating a retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Initiate Job (POST jobs)",
          "archive-retrieval",
          "PolicyEnforcedException",
          "inventory-retrieval",
          "Get Job Output",
          "Amazon S3 Glacier",
          "S3 Glacier Data Retrieval Policies",
          "asynchronous operations",
          "vault inventory",
          "Get Job Output (GET output)",
          "retrieval job",
          "Initiate Job",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_467",
      "text": "\n\nAmazon S3 Glacier Developer Guide\njob output (archive or inventory data). For information about getting job output, see the Get Job\nOutput (GET output) operation.\nThe job must complete before you can get its output. To determine when a job is complete, you\nhave the following options:\n\u2022 Use an Amazon SNS notification\u2014 You can specify an Amazon SNS topic to which S3 Glacier\ncan post a notification after the job is completed. You can specify an SNS topic per job request.\nThe notification is sent only after S3 Glacier completes the job. In addition to specifying an SNS\ntopic per job request, you can configure vault notifications for a vault so that job notifications\nare sent for all retrievals. For more information, see Set Vault Notification Configuration (PUT\nnotification-configuration).\n\u2022 Get job details\u2014 You can make a Describe Job (GET JobID) request to obtain job status\ninformation while a job is in progress. However, it is more efficient to use an Amazon SNS\nnotification to determine when a job is complete.\nNote\nThe information you get via notification is same that you get by calling Describe Job (GET\nJobID).\nIf for a specific event, you add both the notification configuration on the vault and also specify an\nSNS topic in your initiate job request, S3 Glacier sends both notifications. For more information,\nsee Set Vault Notification Configuration (PUT notification-configuration).\nThe Vault Inventory\nS3 Glacier updates a vault inventory approximately once a day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata.\nAfter S3 Glacier creates the first inventory for the vault, it typically takes half a day and up to a day\nbefore that inventory is available for retrieval.\nInitiate Job API Version 2012-06-01 490",
      "start_idx": 741372,
      "end_idx": 743404,
      "metadata": {
        "num_sentences": 18,
        "num_words": 337,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "SNS notification",
            "job output",
            "Describe Job",
            "vault notification configuration",
            "archive",
            "inventory snapshot",
            "API version",
            "GET JobID"
          ],
          "entities": [
            "Amazon SNS",
            "S3 Glacier",
            "Vault Inventory",
            "Initiate Job API",
            "PUT notification-configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to retrieve job output from Amazon S3 Glacier, including using Amazon SNS notifications and Describe Job requests. It also covers vault inventory updates and retrieval timelines.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve job output from Amazon S3 Glacier?",
            "What is the process for setting up vault notifications in S3 Glacier?",
            "How often is the vault inventory updated in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "inventory snapshot",
          "GET JobID",
          "PUT notification-configuration",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "Describe Job",
          "Vault Inventory",
          "SNS notification",
          "archive",
          "vault inventory",
          "Initiate Job API",
          "S3 Glacier",
          "vault notification configuration",
          "job output"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_468",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nYou might not find it useful to retrieve a vault inventory for each archive upload. However, suppose\nthat you maintain a database on the client-side associating metadata about the archives you\nupload to S3 Glacier. Then, you might find the vault inventory useful to reconcile information, as\nneeded, in your database with the actual vault inventory. For more information about the data\nfields returned in an inventory job output, see Response Body.\nRange Inventory Retrieval\nYou can limit the number of inventory items retrieved by filtering on the archive creation date or\nby setting a limit.\nFiltering by Archive Creation Date\nYou can retrieve inventory items for archives created between StartDate and EndDate by\nspecifying values for these parameters in the Initiate Job request. Archives created on or after the\nStartDate and before the EndDate are returned. If you provide only the StartDate without\nthe EndDate, you retrieve the inventory for all archives created on or after the StartDate. If you\nprovide only the EndDate without the StartDate, you get back the inventory for all archives\ncreated before the EndDate.\nLimiting Inventory Items per Retrieval\nYou can limit the number of inventory items returned by setting the Limit parameter in the\nInitiate Job request. The inventory job output contains inventory items up to the specified Limit.\nIf there are more inventory items available, the result is paginated. After a job is complete, you can\nuse the Describe Job (GET JobID) operation to get a marker that you use in a subsequent Initiate\nJob request. The marker indicates the starting point to retrieve the next set of inventory items.\nYou can page through your entire inventory by repeatedly making Initiate Job requests with the\nmarker from the previous Describe Job output. You do so until you get a marker from Describe Job\nthat returns null, indicating that there are no more inventory items available.\nYou can use the Limit parameter together with the date range parameters.\nRanged Archive Retrieval\nYou can initiate archive retrieval for the whole archive or a range of the archive. In the case of\nranged archive retrieval, you specify a byte range to return or the whole archive. The range\nspecified must be megabyte (MB) aligned. In other words, the range start value must be divisible\nby 1 MB and the range end value plus 1 must be divisible by 1 MB or equal the end of the archive.\nIf the ranged archive retrieval is not megabyte-aligned, this operation returns a 400 response.\nInitiate Job API Version 2012-06-01 491",
      "start_idx": 743404,
      "end_idx": 745984,
      "metadata": {
        "num_sentences": 23,
        "num_words": 427,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Filtering",
              "Pagination",
              "Range Retrieval"
            ]
          },
          "keywords": [
            "vault inventory",
            "archive upload",
            "Initiate Job",
            "StartDate",
            "EndDate",
            "Limit parameter",
            "Describe Job",
            "ranged archive retrieval",
            "byte range",
            "megabyte-aligned"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job API",
            "Response Body",
            "Describe Job",
            "GET JobID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and filter inventory data from Amazon S3 Glacier vaults, including using date ranges, pagination, and byte-aligned ranged archive retrievals.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I filter inventory retrieval by archive creation date in Amazon S3 Glacier?",
            "What is the purpose of the Limit parameter in inventory retrieval?",
            "How do I perform a ranged archive retrieval in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GET JobID",
          "StartDate",
          "Initiate Job API",
          "Limit parameter",
          "ranged archive retrieval",
          "EndDate",
          "byte range",
          "Amazon S3 Glacier",
          "Describe Job",
          "vault inventory",
          "Response Body",
          "megabyte-aligned",
          "archive upload",
          "Initiate Job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_469",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nFurthermore, to ensure that you get checksum values for data you download using Get Job Output\n(Get Job Output (GET output)), the range must be tree-hash aligned. For more information about\ntree-hash aligned ranges, see Receiving Checksums When Downloading Data.\nExpedited, Standard, and Bulk Tiers\nWhen initiating an archive retrieval job, you can specify one of the following options in the Tier\nfield of the request body:\n\u2022 Expedited \u2013 Expedited allows you to quickly access your data when occasional urgent requests\nfor restoring archives are required. For all but the largest archives (250 MB+), data accessed using\nthe Expedited tier is typically made available within 1\u20135 minutes.\n\u2022 Standard \u2013 Standard allows you to access any of your archives within several hours. Data\naccessed using the Standard tier typically made available within 3\u20135 hours. This option is the\ndefault one for job requests that don't specify the tier option.\n\u2022 Bulk \u2013 Bulk is the lowest-cost tier for S3 Glacier, enabling you to retrieve large amounts, even\npetabytes, of data inexpensively in a day. Data accessed using the Bulk tier is typically made\navailable within 5\u201312 hours.\nFor more information about expedited and bulk retrievals, see Retrieving S3 Glacier Archives Using\nAWS Console.\nRequests\nTo initiate a job, you use the HTTP POST method and scope the request to the vault's jobs\nsubresource. You specify details of the job request in the JSON document of your request. The job\ntype is specified with the Type field. Optionally, you can specify an SNSTopic field to indicate an\nAmazon SNS topic to which S3 Glacier can post notification after it completes the job.\nNote\nTo post a notification to Amazon SNS, you must create the topic yourself if it doesn't\nalready exist. S3 Glacier doesn't create the topic for you. The topic must have permissions\nto receive publications from a S3 Glacier vault. S3 Glacier doesn't verify if the vault has\npermission to publish to the topic. If the permissions are not configured appropriately, you\nmight not receive notification even after the job completes.\nInitiate Job API Version 2012-06-01 492",
      "start_idx": 745984,
      "end_idx": 748147,
      "metadata": {
        "num_sentences": 20,
        "num_words": 354,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "checksum values",
            "tree-hash aligned",
            "Expedited tier",
            "Standard tier",
            "Bulk tier",
            "archive retrieval",
            "vault's jobs subresource",
            "Amazon SNS topic",
            "Initiate Job API",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output",
            "AWS Console",
            "Amazon SNS",
            "Initiate Job API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains archive retrieval options in Amazon S3 Glacier, including tiers (Expedited, Standard, Bulk), checksum validation, and initiating jobs with notifications via Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the retrieval tiers available in Amazon S3 Glacier?",
            "How do I initiate a job in S3 Glacier?",
            "How can I configure Amazon SNS notifications for job completion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Bulk tier",
          "permissions",
          "Get Job Output",
          "Expedited tier",
          "Amazon SNS topic",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "tree-hash aligned",
          "Initiate Job API Version 2012-06-01",
          "archive retrieval",
          "checksum values",
          "vault's jobs subresource",
          "AWS Console",
          "Initiate Job API",
          "Standard tier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_471",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Tagging\": {\n\"string\" : \"string\"\n},\n\"UserMetadata\": {\n\"string\" : \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SNSTopic\": \"string\",\n\"Tier\": \"string\",\n\"Type\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nInitiate Job API Version 2012-06-01 494",
      "start_idx": 749035,
      "end_idx": 749923,
      "metadata": {
        "num_sentences": 2,
        "num_words": 109,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Data Serialization",
              "API Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Tagging",
            "UserMetadata",
            "RetrievalByteRange",
            "SelectParameters",
            "InputSerialization",
            "OutputSerialization",
            "SNSTopic",
            "Tier",
            "AWS account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Initiate Job API",
            "Vault",
            "SNSTopic"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Serialization",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the parameters and configurations for interacting with Amazon S3 Glacier, including tagging, metadata, data serialization formats, and job initiation details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the supported serialization formats for Amazon S3 Glacier?",
            "How can I specify a retrieval byte range in an API request?",
            "What is the significance of the AWS account ID in vault operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SelectParameters",
          "OutputSerialization",
          "InputSerialization",
          "Tagging",
          "Amazon S3 Glacier",
          "Vault",
          "RetrievalByteRange",
          "AWS account ID",
          "Tier",
          "Initiate Job API",
          "SNSTopic",
          "UserMetadata"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_472",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Body\nThe request accepts the following data in JSON format in the body of the request.\njobParameters\nProvides options for specifying job information.\nType: jobParameters object\nRequired: Yes\nResponses\nS3 Glacier creates the job. In the response, it returns the URI of the job.\nSyntax\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: location\nx-amz-job-id: jobId\nx-amz-job-output-path: jobOutputPath\nResponse Headers\nHeader Description\nLocation\nThe relative URI path of the job. You can use this URI path to find the job\nstatus. For more information, see Describe Job (GET JobID).\nType: String\nDefault: None\nInitiate Job API Version 2012-06-01 495",
      "start_idx": 749923,
      "end_idx": 750812,
      "metadata": {
        "num_sentences": 10,
        "num_words": 137,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "jobParameters",
            "JSON format",
            "job information",
            "URI",
            "HTTP/1.1 202 Accepted",
            "Response Headers",
            "Initiate Job",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "jobParameters",
            "Initiate Job API",
            "Response Headers"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for initiating a job in Amazon S3 Glacier, including request syntax, parameters, and response headers.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the required parameters for initiating a job in Amazon S3 Glacier?",
            "What does the response of an S3 Glacier job initiation contain?",
            "How can I find the status of a job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "job information",
          "jobParameters",
          "URI",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "AWS account ID",
          "HTTP/1.1 202 Accepted",
          "Response Headers",
          "Initiate Job API",
          "Initiate Job",
          "JSON format"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_473",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nHeader Description\nx-amz-job-id\nThe ID of the job. This value is also included as part of the Location\nheader.\nType: String\nDefault: None\nx-amz-job-\nThe path to the location of where the select results are stored.\noutput-path\nType: String\nDefault: None\nResponse Body\nThis operation does not return a response body.\nErrors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses.\nCode Description HTTP Status Type\nCode\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process this exped Unavailab\nited request. This error only le\napplies to expedited retrieval\ns and not to standard or bulk\nretrievals.\nInitiate Job API Version 2012-06-01 496",
      "start_idx": 750812,
      "end_idx": 751708,
      "metadata": {
        "num_sentences": 9,
        "num_words": 140,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "API Documentation"
            ]
          },
          "keywords": [
            "x-amz-job-id",
            "x-amz-job-output-path",
            "Amazon S3 Glacier",
            "Error Responses",
            "InsufficientCapacityException",
            "Initiate Job",
            "API Version 2012-06-01",
            "HTTP Status Code",
            "Service Unavailable",
            "Response Body"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-job-id",
            "x-amz-job-output-path",
            "InsufficientCapacityException",
            "Initiate Job API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Error Handling",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the x-amz-job-id and x-amz-job-output-path headers, error codes, and response details for the Amazon S3 Glacier Initiate Job API.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the purpose of the x-amz-job-id header in Amazon S3 Glacier?",
            "What errors can occur during an expedited retrieval in Amazon S3 Glacier?",
            "What does the InsufficientCapacityException error mean?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Initiate Job API",
          "API Version 2012-06-01",
          "x-amz-job-id",
          "Amazon S3 Glacier",
          "HTTP Status Code",
          "x-amz-job-output-path",
          "Response Body",
          "Error Responses",
          "Service Unavailable",
          "Initiate Job",
          "InsufficientCapacityException"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_475",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nExample Request: Initiate an inventory retrieval job\nThe following request initiates an inventory retrieval job to get a list of archives from the\nexamplevault vault. The Format set to CSV in the body of the request indicates that the\ninventory is returned in CSV format.\nPOST /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nContent-Type: application/x-www-form-urlencoded\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Type\": \"inventory-retrieval\",\n\"Description\": \"My inventory job\",\n\"Format\": \"CSV\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-InventoryRetrieval-topic-\nExample\"\n}\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nInitiate Job API Version 2012-06-01 498",
      "start_idx": 753212,
      "end_idx": 754804,
      "metadata": {
        "num_sentences": 3,
        "num_words": 111,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "inventory retrieval",
            "vault",
            "job initiation",
            "CSV format",
            "x-amz-glacier-version",
            "Authorization",
            "SNSTopic",
            "HTTP request",
            "HTTP response"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "SNSTopic",
            "Glacier-InventoryRetrieval-topic-Example"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SNS"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate an inventory retrieval job in Amazon S3 Glacier to obtain a list of archives from a vault in CSV format. It includes example HTTP request and response details for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in Amazon S3 Glacier?",
            "What is the format of the inventory retrieval job response?",
            "What headers are required for an Amazon S3 Glacier API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CSV format",
          "Authorization",
          "examplevault",
          "AWS4-HMAC-SHA256",
          "Glacier-InventoryRetrieval-topic-Example",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "AWS SNS",
          "job initiation",
          "vault",
          "HTTP response",
          "HTTP request",
          "x-amz-glacier-version",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_477",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-output-path: test/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Jobs (GET jobs)\nDescription\nThis operation lists jobs for a vault, including jobs that are in-progress and jobs that have recently\nfinished.\nNote\nAmazon S3 Glacier (S3 Glacier) retains recently completed jobs for a period before deleting\nthem; however, it eventually removes completed jobs. The output of completed jobs can be\nretrieved. Retaining completed jobs for a period of time after they have completed enables\nyou to get a job output in the event you miss the job completion notification, or your first\nattempt to download it fails. For example, suppose that you start an archive retrieval job\nto download an archive. After the job completes, you start to download the archive but\nencounter a network error. In this scenario, you can retry and download the archive while\nthe job exists.\nList Jobs API Version 2012-06-01 500",
      "start_idx": 755993,
      "end_idx": 757509,
      "metadata": {
        "num_sentences": 8,
        "num_words": 188,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Description",
              "API Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "job",
            "archive retrieval",
            "job output",
            "completed jobs",
            "network error",
            "job completion notification",
            "API version",
            "List Jobs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vaults",
            "job ID",
            "API version 2012-06-01",
            "HTTP response"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the List Jobs operation in Amazon S3 Glacier to retrieve information about jobs in a vault, including in-progress and recently completed jobs. It also provides an example HTTP response and details about job retention and retrieval scenarios.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list jobs in an Amazon S3 Glacier vault?",
            "What happens to completed jobs in Amazon S3 Glacier?",
            "How can I retrieve job output after a network error?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "network error",
          "List Jobs",
          "Amazon S3 Glacier",
          "job",
          "vault",
          "job completion notification",
          "HTTP response",
          "archive retrieval",
          "job ID",
          "vaults",
          "job output",
          "API version 2012-06-01",
          "completed jobs"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_478",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nThe List Jobs operation supports pagination. You should always check the response Marker\nfield. If there are no more jobs to list, the Marker field is set to null. If there are more jobs to list,\nthe Marker field is set to a non-null value, which you can use to continue the pagination of the\nlist. To return a list of jobs that begins at a specific job, set the marker request parameter to the\nMarker value for that job that you obtained from a previous List Jobs request.\nYou can set a maximum limit for the number of jobs returned in the response by specifying the\nlimit parameter in the request. The default limit is 50. The number of jobs returned might be\nfewer than the limit, but the number of returned jobs never exceeds the limit.\nAdditionally, you can filter the jobs list returned by specifying the optional statuscode parameter\nor completed parameter, or both. Using the statuscode parameter, you can specify to\nreturn only jobs that match either the InProgress, Succeeded, or Failed status. Using the\ncompleted parameter, you can specify to return only jobs that were completed (true) or jobs that\nwere not completed (false).\nRequests\nSyntax\nTo return a list of jobs of all types, send a GET request to the URI of the vault's jobs subresource.\nGET /AccountId/vaults/VaultName/jobs HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nList Jobs API Version 2012-06-01 501",
      "start_idx": 757509,
      "end_idx": 759340,
      "metadata": {
        "num_sentences": 16,
        "num_words": 309,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Pagination",
              "Filtering",
              "API Request Syntax"
            ]
          },
          "keywords": [
            "List Jobs",
            "pagination",
            "Marker field",
            "limit parameter",
            "statuscode parameter",
            "completed parameter",
            "AWS account ID",
            "vault subresource",
            "GET request",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs operation",
            "Marker",
            "AccountId",
            "VaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "API Usage",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature"
          ]
        },
        "semantic": {
          "summary": "The document explains the List Jobs operation in Amazon S3 Glacier, detailing its pagination mechanism, filtering options, and request syntax. It includes specific parameters such as Marker, limit, statuscode, and completed for customizing API responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I paginate through jobs in Amazon S3 Glacier?",
            "What are the available filtering options for the List Jobs operation?",
            "What is the syntax for making a List Jobs API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "statuscode parameter",
          "pagination",
          "Marker field",
          "List Jobs",
          "GET request",
          "AccountId",
          "Amazon S3 Glacier",
          "completed parameter",
          "vault subresource",
          "Marker",
          "AWS account ID",
          "VaultName",
          "x-amz-glacier-version",
          "limit parameter",
          "List Jobs operation"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_479",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\ncompleted No\nThe state of the jobs to return. You can specify true or\nfalse.\nType: Boolean\nConstraints: None\nlimit No\nThe maximum number of jobs to be returned. The default limit\nis 50. The number of jobs returned might be fewer than the\nspecified limit, but the number of returned jobs never exceeds\nthe limit.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 50.\nmarker No\nAn opaque string used for pagination that specifies the job at\nwhich the listing of jobs should begin. You get the marker\nvalue from a previous List Jobs response. You only need to\ninclude the marker if you are continuing the pagination of\nthe results started in a previous List Jobs request.\nType: String\nConstraints: None\nstatuscode No\nThe type of job status to return.\nType: String\nConstraints: One of the values InProgress , Succeeded ,\nor Failed.\nList Jobs API Version 2012-06-01 502",
      "start_idx": 759340,
      "end_idx": 760314,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Parameter Description",
              "Constraints"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Parameters",
            "Boolean",
            "String",
            "Pagination",
            "List Jobs",
            "marker",
            "limit",
            "statuscode",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs API",
            "marker",
            "limit",
            "statuscode"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the request parameters for the List Jobs API in Amazon S3 Glacier, including their types, constraints, and usage details for pagination and filtering job states or statuses.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the parameters for the List Jobs API in Amazon S3 Glacier?",
            "How can I paginate results using the marker parameter?",
            "What constraints apply to the limit parameter in List Jobs requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Request Parameters",
          "List Jobs",
          "limit",
          "Amazon S3 Glacier",
          "Pagination",
          "List Jobs API",
          "Boolean",
          "String",
          "statuscode",
          "API Version",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_480",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nContent-Type: application/json\nContent-Length: Length\n{\n\"JobList\": [\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\n\"AccessControlList\": [\nList Jobs API Version 2012-06-01 503",
      "start_idx": 760314,
      "end_idx": 761262,
      "metadata": {
        "num_sentences": 4,
        "num_words": 105,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "JobList",
            "InventoryRetrievalParameters",
            "HTTP/1.1",
            "Content-Type",
            "JobId",
            "OutputLocation",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "JobList",
            "InventoryRetrievalParameters",
            "OutputLocation",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocol",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the response headers, syntax, and structure of API responses for Amazon S3 Glacier operations, particularly focusing on job lists and inventory retrieval parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the response structure for Amazon S3 Glacier API operations?",
            "What headers and parameters are used in the Amazon S3 Glacier job list response?",
            "Does this operation have a request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "HTTP/1.1",
          "Content-Type",
          "JobId",
          "OutputLocation",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "JobList",
          "Response Headers",
          "InventoryRetrievalParameters",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_481",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\n],\n\"Marker\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nJobList\nA list of job objects. Each job object contains metadata describing the job.\nType: Array of GlacierJobDescription objects\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker value in a new List Jobs request to obtain more jobs in the list. If there are no more\njobs to list, this value is null.\nType: String\nList Jobs API Version 2012-06-01 505",
      "start_idx": 762091,
      "end_idx": 763085,
      "metadata": {
        "num_sentences": 9,
        "num_words": 139,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Structure"
            ]
          },
          "keywords": [
            "FieldDelimiter",
            "QuoteCharacter",
            "QuoteEscapeCharacter",
            "QuoteFields",
            "RecordDelimiter",
            "SHA256TreeHash",
            "SNSTopic",
            "VaultARN",
            "Marker",
            "GlacierJobDescription"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs API",
            "JSON fields",
            "Response Headers",
            "Response Body"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the response structure and metadata fields for the Amazon S3 Glacier 'List Jobs' API, including JSON fields and pagination details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What metadata fields are included in the List Jobs API response?",
            "How is pagination handled in the List Jobs API?",
            "What is the purpose of the Marker field in the response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "FieldDelimiter",
          "QuoteFields",
          "GlacierJobDescription",
          "Amazon S3 Glacier",
          "List Jobs API",
          "QuoteEscapeCharacter",
          "JSON fields",
          "Marker",
          "VaultARN",
          "Response Headers",
          "Response Body",
          "QuoteCharacter",
          "SNSTopic",
          "RecordDelimiter",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_482",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following examples demonstrate how to return information about vault jobs. The first example\nreturns a list of two jobs, and the second example returns a subset of jobs.\nExample: Return All Jobs\nExample Request\nThe following GET request returns the jobs for a vault.\nGET /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response includes an archive retrieval job and an inventory retrieval job that contains\na marker used to continue pagination of the vault inventory retrieval. The response also shows the\nMarker field set to null, which indicates there are no more jobs to list.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1444\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"BDfaUQul0dVzYwAMr8YSa_6_8abbhZq-\ni1oT69g8ByClfJyBgAGBkWl2QbF5os851P7Y7KdZDOHWJIn4rh1ZHaOYD3MgFhK_g0oDPesW34uHQoVGwoIqubf6BgUEfQm_wrU4Jlm3cA\",\n\"ArchiveSizeInBytes\": 1048576,\nList Jobs API Version 2012-06-01 506",
      "start_idx": 763085,
      "end_idx": 764607,
      "metadata": {
        "num_sentences": 7,
        "num_words": 159,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault jobs",
            "GET request",
            "archive retrieval",
            "inventory retrieval",
            "pagination",
            "Marker field",
            "HTTP response",
            "AWS4-HMAC-SHA256",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vaults",
            "JobList",
            "ArchiveId",
            "Marker"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides example requests and responses for retrieving information about vault jobs in Amazon S3 Glacier, including archive and inventory retrieval jobs with pagination details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list all jobs for a vault in Amazon S3 Glacier?",
            "What does the Marker field indicate in the response?",
            "What is the structure of an archive retrieval job response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "AWS4-HMAC-SHA256",
          "GET request",
          "pagination",
          "Marker field",
          "inventory retrieval",
          "vault jobs",
          "Amazon S3 Glacier",
          "JobList",
          "HTTP response",
          "Content-Length",
          "archive retrieval",
          "Marker",
          "vaults"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_483",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n],\n\"Marker\": null\n}\nExample: Return a Partial List of Jobs\nExample Request\nThe following GET request returns the job specified by the marker parameter. Setting the limit\nparameter as 2 specifies that up to two jobs are returned.\nGET /-/vaults/examplevault/jobs?marker=HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID&limit=2\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response shows two jobs returned and the Marker field set to a non-null value that\ncan be used to continue pagination of the job list.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1744\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"58-3KpZfcMPUznvMZNPaKyJx9wODCsWTnqcjtx2CjKZ6b-\nXgxEuA8yvZOYTPQfd7gWR4GRm2XR08gcnWbLV4VPV_kDWtZJKi0TFhKKVPzwrZnA4-\nFXuIBfViYUIVveeiBE51FO4bvg\",\n\"ArchiveSizeInBytes\": 8388608,\n\"ArchiveSHA256TreeHash\":\n\"106086b256ddf0fedf3d9e72f461d5983a2566247ebe7e1949246bc61359b4f4\",\n\"Completed\": true,\nList Jobs API Version 2012-06-01 508",
      "start_idx": 766202,
      "end_idx": 767670,
      "metadata": {
        "num_sentences": 4,
        "num_words": 126,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GET request",
            "Marker parameter",
            "limit parameter",
            "pagination",
            "JobList",
            "ArchiveRetrieval",
            "ArchiveId",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "JobList",
            "ArchiveId",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the Amazon S3 Glacier API to retrieve a partial list of jobs using the Marker and limit parameters for pagination.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the Marker parameter to paginate job results in Amazon S3 Glacier?",
            "What is the structure of a response when retrieving jobs from Amazon S3 Glacier?",
            "What headers are required for a GET request to the Amazon S3 Glacier API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveId",
          "AWS4-HMAC-SHA256",
          "Marker parameter",
          "pagination",
          "GET request",
          "Amazon S3 Glacier",
          "JobList",
          "x-amz-glacier-version",
          "limit parameter",
          "ArchiveRetrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_485",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nFieldDelimiter\nA single character used to separate individual fields from each other within a record. The\ncharacter must be a \\n, \\r, or an ASCII character in the range 32\u2013126. The default is a comma\n(,).\nType: String\nDefault: ,\nRequired: no\nFileHeaderInfo\nA value that describes what to do with the first line of the input.\nType: String\nValid Values: Use | Ignore | None\nRequired: no\nQuoteCharacter\nA single character used as an escape character where the field delimiter is part of the value.\nType: String\nRequired: no\nQuoteEscapeCharacter\nA single character used for escaping the quotation-mark character inside an already escaped\nvalue.\nType: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other.\nCSVInput API Version 2012-06-01 511",
      "start_idx": 770010,
      "end_idx": 770862,
      "metadata": {
        "num_sentences": 8,
        "num_words": 135,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Parameter Description"
            ]
          },
          "keywords": [
            "FieldDelimiter",
            "FileHeaderInfo",
            "QuoteCharacter",
            "QuoteEscapeCharacter",
            "RecordDelimiter",
            "CSVInput",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "ASCII character",
            "Valid Values"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CSVInput",
            "API Version 2012-06-01",
            "FieldDelimiter",
            "FileHeaderInfo"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Processing",
          "secondary_categories": [
            "Cloud Storage",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on configuring CSV input parameters for the Amazon S3 Glacier service, including field delimiters, quote characters, and record delimiters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the default field delimiter for CSV input in Amazon S3 Glacier?",
            "How can I configure the quote character for CSV input?",
            "What does the FileHeaderInfo parameter do?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Processing]",
        "tf_idf_keywords": [
          "CSVInput",
          "FieldDelimiter",
          "API Version 2012-06-01",
          "Valid Values",
          "Amazon S3 Glacier",
          "QuoteEscapeCharacter",
          "FileHeaderInfo",
          "QuoteCharacter",
          "RecordDelimiter",
          "ASCII character"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_487",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nValid Values: ALWAYS | ASNEEDED\nType: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other.\nType: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nEncryption\nContains information about the encryption used to store the job results in Amazon S3.\nContents\nEncryption\nThe server-side encryption algorithm used when storing job results in Amazon S3. The default is\nno encryption.\nType: String\nValid Values: aws:kms | AES256\nRequired: no\nKMSContext\nOptional. If the encryption type is aws:kms, you can use this value to specify the encryption\ncontext for the job results.\nType: String\nEncryption API Version 2012-06-01 513",
      "start_idx": 771634,
      "end_idx": 772348,
      "metadata": {
        "num_sentences": 7,
        "num_words": 109,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "API Details",
              "Encryption Settings"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "encryption",
            "job results",
            "RecordDelimiter",
            "KMSContext",
            "server-side encryption",
            "aws:kms",
            "AES256",
            "Initiate Job",
            "Encryption API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Encryption",
            "KMSContext",
            "Job Results",
            "RecordDelimiter"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details on configuring encryption and record delimiters for job results in Amazon S3 Glacier, including valid values and optional parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What encryption options are available for storing job results in Amazon S3 Glacier?",
            "What is the purpose of the RecordDelimiter parameter?",
            "How can I specify an encryption context using KMSContext?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "server-side encryption",
          "Encryption API",
          "job results",
          "Amazon S3 Glacier",
          "aws:kms",
          "encryption",
          "Encryption",
          "KMSContext",
          "Job Results",
          "AES256",
          "Initiate Job",
          "RecordDelimiter"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_488",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequired: no\nKMSKeyId\nThe AWS Key Management Service (AWS KMS) key ID to use for object encryption.\nType: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nGlacierJobDescription\nContains the description of an Amazon S3 Glacier (S3 Glacier) job.\nContents\nAction\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select.\nType: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null.\nType: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval. For inventory retrieval jobs,\nthis field is null.\nType: String\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null.\nGlacierJobDescription API Version 2012-06-01 514",
      "start_idx": 772348,
      "end_idx": 773231,
      "metadata": {
        "num_sentences": 11,
        "num_words": 132,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS KMS",
            "KMSKeyId",
            "GlacierJobDescription",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Select",
            "SHA256 Tree Hash",
            "ArchiveId",
            "ArchiveSizeInBytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Key Management Service",
            "GlacierJobDescription",
            "ArchiveId",
            "SHA256 Tree Hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Encryption",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Key Management Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on fields and attributes related to Amazon S3 Glacier jobs, including encryption options and job types such as ArchiveRetrieval and InventoryRetrieval.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the job types available in Amazon S3 Glacier?",
            "How is encryption handled in Amazon S3 Glacier jobs?",
            "What is the purpose of the ArchiveId field in GlacierJobDescription?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrieval",
          "Select",
          "SHA256 Tree Hash",
          "ArchiveId",
          "AWS Key Management Service",
          "GlacierJobDescription",
          "KMSKeyId",
          "Amazon S3 Glacier",
          "AWS KMS",
          "ArchiveSizeInBytes",
          "ArchiveRetrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_489",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: Number\nCompleted\ntrue if the job is completed; false otherwise.\nType: Boolean\nCompletionDate\nThe date when the job completed.\nThe Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nCreationDate\nThe Universal Coordinated Time (UTC) date the job started.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval.\nType: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null.\nType: Number\nJobDescription\nThe job description that you provided when you initiated the job.\nType: String\nJobId\nThe ID that identifies the job in S3 Glacier.\nGlacierJobDescription API Version 2012-06-01 515",
      "start_idx": 773231,
      "end_idx": 774297,
      "metadata": {
        "num_sentences": 13,
        "num_words": 152,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Documentation",
              "Attribute Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JobId",
            "CompletionDate",
            "CreationDate",
            "InventoryRetrievalParameters",
            "InventorySizeInBytes",
            "ISO 8601",
            "Boolean",
            "Number",
            "String"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InventoryRetrievalJobInput",
            "GlacierJobDescription",
            "UTC",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for job-related attributes in Amazon S3 Glacier, including job completion status, creation and completion dates, inventory retrieval parameters, and job descriptions.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the format for the CompletionDate in Amazon S3 Glacier?",
            "What parameters are used for inventory retrieval in Amazon S3 Glacier?",
            "How can I identify a job in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventorySizeInBytes",
          "InventoryRetrievalJobInput",
          "JobId",
          "ISO 8601",
          "GlacierJobDescription",
          "Amazon S3 Glacier",
          "CompletionDate",
          "Number",
          "Boolean",
          "String",
          "CreationDate",
          "InventoryRetrievalParameters",
          "UTC"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_490",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nJobOutputPath\nContains the job output location.\nType: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored.\nType: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If no range was specified in the archive retrieval, then the\nwhole archive is retrieved and StartByteValue equals 0 and EndByteValue equals the size of the\narchive minus 1. For inventory retrieval jobs, this field is null.\nType: String\nSelectParameters\nAn object that contains information about the parameters used for a select.\nType: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value.\nFor more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data.\nFor the specific case in which the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value.\nThis field is null in the following situations:\n\u2022 Archive retrieval jobs that specify a range that is not tree-hash aligned.\n\u2022 Archival jobs that specify a range that is equal to the whole archive and the job status is\nInProgress.\nGlacierJobDescription API Version 2012-06-01 516",
      "start_idx": 774297,
      "end_idx": 775761,
      "metadata": {
        "num_sentences": 13,
        "num_words": 220,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JobOutputPath",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SHA256TreeHash",
            "archive retrieval",
            "tree-hash alignment",
            "inventory retrieval",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "JobOutputPath",
            "OutputLocation",
            "SelectParameters",
            "SHA256TreeHash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides detailed descriptions of fields related to Amazon S3 Glacier jobs, including output locations, retrieval byte ranges, and SHA256 tree hash values.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the JobOutputPath field in Amazon S3 Glacier?",
            "How is the SHA256TreeHash value calculated for archive retrievals?",
            "What does the RetrievalByteRange field represent in inventory retrieval jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SelectParameters",
          "JobOutputPath",
          "OutputLocation",
          "API Version 2012-06-01",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "RetrievalByteRange",
          "archive retrieval",
          "tree-hash alignment",
          "SHA256TreeHash"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_494",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nContents\nCSV\nAn object that describes the serialization of a CSV-encoded object.\nType: CSVInput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nInventoryRetrievalJobInput\nProvides options for specifying a range inventory retrieval job.\nContents\nEndDate\nThe end of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated before this date.\nValid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nType: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nRequired: no\nFormat\nThe output format for the vault inventory list, which is set by the Initiate Job (POST jobs)\nrequest when initiating a job to retrieve a vault inventory.\nValid Values: CSV | JSON\nRequired: no\nInventoryRetrievalJobInput API Version 2012-06-01 520",
      "start_idx": 777491,
      "end_idx": 778449,
      "metadata": {
        "num_sentences": 8,
        "num_words": 138,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Serialization",
              "Job Configuration"
            ]
          },
          "keywords": [
            "CSV",
            "ISO 8601",
            "vault inventory",
            "serialization",
            "InventoryRetrievalJobInput",
            "UTC time",
            "archives",
            "Initiate Job",
            "JSON",
            "API Version 2012-06-01"
          ],
          "entities": [
            "CSVInput",
            "InventoryRetrievalJobInput",
            "Amazon S3 Glacier",
            "Initiate Job",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Serialization",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on configuring a vault inventory retrieval job in Amazon S3 Glacier, including options for serialization, date ranges, and output formats.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the valid format for specifying the end date in an inventory retrieval job?",
            "What output formats are supported for a vault inventory list?",
            "How do I initiate a job to retrieve a vault inventory in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "CSVInput",
          "InventoryRetrievalJobInput",
          "ISO 8601",
          "UTC time",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "serialization",
          "CSV",
          "vault inventory",
          "archives",
          "Initiate Job"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_495",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nLimit\nThe maximum number of inventory items that can be returned for each vault inventory retrieval\nrequest.\nValid Values: An integer value greater than or equal to 1.\nType: String\nRequired: no\nMarker\nAn opaque string that represents where to continue pagination of the vault inventory retrieval\nresults. You use this marker in a new Initiate Job request to obtain additional inventory\nitems. If there are no more inventory items, this value is null.\nType: String\nRequired: no\nStartDate\nThe start of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated on or after this date.\nValid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nType: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\njobParameters\nProvides options for defining a job.\njobParameters API Version 2012-06-01 521",
      "start_idx": 778449,
      "end_idx": 779528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 164,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Parameters",
              "Data Format",
              "Usage Notes"
            ]
          },
          "keywords": [
            "vault inventory",
            "pagination",
            "ISO 8601",
            "UTC time",
            "marker",
            "inventory retrieval",
            "Initiate Job",
            "jobParameters",
            "Amazon S3 Glacier",
            "archives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ISO 8601",
            "vault inventory",
            "jobParameters",
            "Initiate Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the parameters and usage for initiating jobs and retrieving vault inventory in Amazon S3 Glacier, including options for pagination and date range filtering.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid parameters for initiating a vault inventory retrieval job?",
            "How can I paginate through the results of a vault inventory retrieval?",
            "What is the required date format for specifying the StartDate parameter?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "UTC time",
          "ISO 8601",
          "pagination",
          "jobParameters",
          "inventory retrieval",
          "Amazon S3 Glacier",
          "vault inventory",
          "archives",
          "Initiate Job",
          "marker"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_496",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nContents\nArchiveId\nThe ID of the archive that you want. This field is required if the Type field is set to select or\narchive-retrieval. An error occurs if you specify this field for an inventory retrieval job\nrequest.\nValid Values: Must be a valid archive ID that you obtained from a previous request to Amazon S3\nGlacier (S3 Glacier).\nType: String\nRequired: Yes when Type is set to select or archive-retrieval.\nDescription\nThe optional description for the job.\nValid Values: The description must be less than or equal to 1,024 bytes. The allowable\ncharacters are 7-bit ASCII without control codes\u2014specifically, ASCII values 32\u2013126 decimal or\n0x20\u20130x7E hexadecimal.\nType: String\nRequired: no\nFormat\n(Optional) The output format, when initiating a job to retrieve a vault inventory. If you are\ninitiating an inventory job and don't specify a Format field, JSON is the default format.\nValid Values: CSV | JSON\nType: String\nRequired: no\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval.\nType: InventoryRetrievalJobInput object\njobParameters API Version 2012-06-01 522",
      "start_idx": 779528,
      "end_idx": 780662,
      "metadata": {
        "num_sentences": 12,
        "num_words": 174,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Field Description",
              "Validation Rules",
              "Optional Parameters"
            ]
          },
          "keywords": [
            "ArchiveId",
            "Type",
            "Description",
            "Format",
            "InventoryRetrievalParameters",
            "InventoryRetrievalJobInput",
            "vault inventory",
            "job request",
            "JSON",
            "CSV"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveId",
            "InventoryRetrievalJobInput",
            "API Version 2012-06-01",
            "vault inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the fields and parameters required for initiating jobs in Amazon S3 Glacier, including archive retrieval and inventory retrieval jobs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the ArchiveId field in Amazon S3 Glacier?",
            "What are the valid values for the Format field in inventory retrieval jobs?",
            "What input parameters are required for a range inventory retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "InventoryRetrievalJobInput",
          "ArchiveId",
          "job request",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Description",
          "vault inventory",
          "CSV",
          "Type",
          "InventoryRetrievalParameters",
          "Format"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_497",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequired: no\nOutputLocation\nAn object that contains information about the location where the select job results are stored.\nType: OutputLocation object\nRequired: Yes, for select jobs.\nRetrievalByteRange\nThe byte range to retrieve for an archive-retrieval, in the form\n\"StartByteValue-EndByteValue\". If this field isn't specified, the whole archive is retrieved.\nIf this field is specified, the byte range must be megabyte (1024*1024) aligned. Megabyte-\naligned means that StartByteValue must be divisible by 1 MB, and EndByteValue plus 1 must be\ndivisible by 1 MB or be the end of the archive specified as the archive byte size value minus 1. If\nRetrievalByteRange is not megabyte-aligned, this operation returns a 400 response.\nAn error occurs if you specify this field for an inventory-retrieval or select job request.\nType: String\nRequired: no\nSelectParameters\nAn object that contains information about the parameters used for a select.\nType: SelectParameters object\nRequired: no\nSNSTopic\nThe Amazon Resource Name (ARN) of the Amazon SNS topic where S3 Glacier sends a\nnotification when the job is completed and output is ready for you to download. The specified\ntopic publishes the notification to its subscribers.\nThe SNS topic must exist. If it doesn't, S3 Glacier doesn't create it for you. Additionally, the\nSNS topic must have a policy that allows the account that created the job to publish messages\nto the topic. For information about SNS topic names, see CreateTopic in the Amazon Simple\nNotification Service API Reference.\njobParameters API Version 2012-06-01 523",
      "start_idx": 780662,
      "end_idx": 782274,
      "metadata": {
        "num_sentences": 16,
        "num_words": 249,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SNSTopic",
            "Amazon SNS",
            "notification",
            "byte-aligned",
            "archive-retrieval",
            "select job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SNSTopic"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Job Management",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about job parameters for Amazon S3 Glacier, including output location, retrieval byte range, select parameters, and SNS topic configuration.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the OutputLocation object in S3 Glacier?",
            "How do I specify a RetrievalByteRange for an archive-retrieval job?",
            "What are the requirements for configuring an SNS topic for job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SelectParameters",
          "select job",
          "OutputLocation",
          "archive-retrieval",
          "Amazon S3 Glacier",
          "Amazon SNS",
          "RetrievalByteRange",
          "byte-aligned",
          "S3 Glacier",
          "notification",
          "SNSTopic"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_498",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: no\nTier\nThe tier to use for a select or an archive retrieval job. Standard is the default value used.\nValid Values: Expedited | Standard | Bulk\nType: String\nRequired: no\nType\nThe job type. You can initiate a job to perform a select query on an archive, retrieve an archive,\nor get an inventory of a vault.\nValid Values: select | archive-retrieval | inventory-retrieval\nType: String\nRequired: yes\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputLocation\nContains information about the location where the job results and errors are stored.\nContents\nS3\nAn object that describes an Amazon S3 location to receive the results of the restore request.\nType: S3Location\nRequired: yes\nOutputLocation API Version 2012-06-01 524",
      "start_idx": 782274,
      "end_idx": 783044,
      "metadata": {
        "num_sentences": 7,
        "num_words": 125,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Tier",
            "Job type",
            "Archive retrieval",
            "Inventory retrieval",
            "OutputLocation",
            "S3Location",
            "Expedited",
            "Standard",
            "Bulk"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3Location",
            "API Version 2012-06-01",
            "POST jobs",
            "Vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "Data Retrieval",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides information on initiating jobs in Amazon S3 Glacier, including job types, tiers, and output locations for results and errors.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid tiers for an Amazon S3 Glacier job?",
            "How can I specify the output location for job results in Amazon S3 Glacier?",
            "What types of jobs can be initiated in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "OutputLocation",
          "Inventory retrieval",
          "S3Location",
          "Tier",
          "Archive retrieval",
          "Amazon S3 Glacier",
          "Expedited",
          "Standard",
          "API Version 2012-06-01",
          "Vault",
          "Bulk",
          "POST jobs",
          "Job type"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_499",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputSerialization\nDescribes how the output is serialized.\nContents\nCSV\nAn object that describes the serialization of the comma-separated values (CSV)-encoded query\nresults.\nType: CSVOutput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nS3Location\nContains information about the location in Amazon S3 where the job results are stored.\nContents\nAccessControlList\nA list of grants that control access to the stored results.\nType: Array of Grant objects\nRequired: no\nBucketName\nThe name of the Amazon S3 bucket where the job results are stored. The bucket must be in the\nsame AWS Region as the vault that contains the input archive object.\nOutputSerialization API Version 2012-06-01 525",
      "start_idx": 783044,
      "end_idx": 783811,
      "metadata": {
        "num_sentences": 7,
        "num_words": 118,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API",
              "Serialization",
              "Storage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "OutputSerialization",
            "CSVOutput",
            "AccessControlList",
            "BucketName",
            "Grant objects",
            "AWS Region",
            "vault",
            "job results",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CSVOutput object",
            "Grant objects",
            "AWS Region",
            "BucketName"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Serialization",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation provides details on the OutputSerialization configuration for jobs in Amazon S3 Glacier, including CSV formatting and storage location settings in Amazon S3 buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How is the output of Amazon S3 Glacier jobs serialized?",
            "What details are required to specify the storage location in Amazon S3?",
            "What is the role of AccessControlList in job result storage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "OutputSerialization",
          "CSVOutput object",
          "API Version 2012-06-01",
          "AccessControlList",
          "AWS Region",
          "Amazon S3 Glacier",
          "job results",
          "Amazon S3",
          "CSVOutput",
          "vault",
          "Grant objects",
          "BucketName"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_500",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nRequired: yes\nCannedACL\nThe canned access control list (ACL) to apply to the job results.\nType: String\nValid Values: private | public-read | public-read-write | aws-exec-read |\nauthenticated-read | bucket-owner-read | bucket-owner-full-control\nRequired: no\nEncryption\nAn object that contains information about the encryption used to store the job results in\nAmazon S3.\nType: Encryption object\nRequired: no\nPrefix\nThe prefix that is prepended to the results for this request. The maximum length for the prefix\nis 512 bytes.\nType: String\nRequired: yes\nStorageClass\nThe class of storage used to store the job results.\nType: String\nValid Values: STANDARD | REDUCED_REDUNDANCY | STANDARD_IA\nRequired: no\nTagging\nThe tag set that is applied to the job results.\nS3Location API Version 2012-06-01 526",
      "start_idx": 783811,
      "end_idx": 784652,
      "metadata": {
        "num_sentences": 7,
        "num_words": 127,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Configuration Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CannedACL",
            "Encryption",
            "Prefix",
            "StorageClass",
            "Tagging",
            "job results",
            "access control list",
            "S3Location",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CannedACL",
            "Encryption object",
            "S3Location",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Access Control",
            "Data Encryption"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation provides details on configuring job results in Amazon S3 Glacier, including access control, encryption, storage class, and tagging options.",
          "intents": [
            "Reference",
            "Configure"
          ],
          "potential_questions": [
            "What are the valid values for CannedACL in Amazon S3 Glacier?",
            "How can I encrypt job results stored in Amazon S3?",
            "What is the maximum length for the prefix in S3 job results?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Prefix",
          "StorageClass",
          "S3Location",
          "API Version 2012-06-01",
          "Tagging",
          "Amazon S3 Glacier",
          "job results",
          "Encryption object",
          "Encryption",
          "access control list",
          "CannedACL"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_501",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String to string map\nRequired: no\nUserMetadata\nA map of metadata to store with the job results in Amazon S3.\nType: String to string map\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nSelectParameters\nContains information about the parameters used for the select.\nContents\nExpression\nThe expression that is used to select the object. The expression must not exceed the quota of\n128,000 characters.\nType: String\nRequired: yes\nExpressionType\nThe type of the provided expression, for example SQL.\nValid Values: SQL\nType: String\nRequired: yes\nSelectParameters API Version 2012-06-01 527",
      "start_idx": 784652,
      "end_idx": 785278,
      "metadata": {
        "num_sentences": 6,
        "num_words": 97,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UserMetadata",
            "SelectParameters",
            "Expression",
            "ExpressionType"
          ],
          "entities": [
            "Amazon S3",
            "Glacier",
            "POST jobs",
            "API Version 2012-06-01",
            "SQL"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Querying",
            "Metadata Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of parameters for selecting objects in Amazon S3 Glacier, including metadata storage and query expressions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What metadata can be stored with job results in Amazon S3 Glacier?",
            "How do I define a query expression for selecting objects in Amazon S3 Glacier?",
            "What are the valid values for the ExpressionType parameter?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SelectParameters",
          "Expression",
          "Glacier",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "Amazon S3",
          "ExpressionType",
          "SQL",
          "POST jobs",
          "UserMetadata"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_502",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nInputSerialization\nDescribes the serialization format of the object in the select.\nType: InputSerialization object\nRequired: no\nOutputSerialization\nDescribes how the results of the select job are serialized.\nRequired: no\nType: OutputSerialization object\nMore Info\n\u2022 Initiate Job (POST jobs)\nData Retrieval Operations\nThe following are the data retrieval\u2013related operations available in S3 Glacier.\nTopics\n\u2022 Get Data Retrieval Policy (GET policy)\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\n\u2022 Set Data Retrieval Policy (PUT policy)\nGet Data Retrieval Policy (GET policy)\nDescription\nThis operation returns the current data retrieval policy for the AWS account and AWS Region\nspecified in the GET request. For more information about data retrieval policies, see S3 Glacier Data\nRetrieval Policies.\nData Retrieval Operations API Version 2012-06-01 528",
      "start_idx": 785278,
      "end_idx": 786233,
      "metadata": {
        "num_sentences": 6,
        "num_words": 132,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Configuration Details"
            ]
          },
          "keywords": [
            "InputSerialization",
            "OutputSerialization",
            "S3 Glacier",
            "Data Retrieval Policy",
            "Provisioned Capacity",
            "API Version 2012-06-01",
            "AWS Region",
            "GET policy",
            "POST jobs",
            "PUT policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InputSerialization object",
            "OutputSerialization object",
            "AWS account",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Serialization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on data retrieval operations and serialization formats for Amazon S3 Glacier, including InputSerialization and OutputSerialization objects, as well as API operations for managing data retrieval policies and provisioned capacity.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of InputSerialization and OutputSerialization in S3 Glacier?",
            "How can I retrieve the data retrieval policy for my AWS account?",
            "What are the available operations for managing provisioned capacity in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "OutputSerialization",
          "AWS account",
          "OutputSerialization object",
          "InputSerialization",
          "API Version 2012-06-01",
          "InputSerialization object",
          "GET policy",
          "Amazon S3 Glacier",
          "PUT policy",
          "POST jobs",
          "Data Retrieval Policy",
          "Provisioned Capacity",
          "S3 Glacier",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_503",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequests\nTo return the current data retrieval policy, send an HTTP GET request to the data retrieval policy\nURI as shown in the following syntax example.\nSyntax\nGET /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nGet Data Retrieval Policy API Version 2012-06-01 529",
      "start_idx": 786233,
      "end_idx": 787379,
      "metadata": {
        "num_sentences": 10,
        "num_words": 174,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "HTTP Method",
              "Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "HTTP GET request",
            "AccountId",
            "x-amz-glacier-version",
            "authorization",
            "request headers",
            "request parameters",
            "response syntax",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "x-amz-glacier-version",
            "AWS account ID",
            "SignatureValue"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the current data retrieval policy from Amazon S3 Glacier using an HTTP GET request, including syntax, headers, and response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve the data retrieval policy in Amazon S3 Glacier?",
            "What HTTP headers are required for the data retrieval policy request?",
            "What is the syntax for the data retrieval policy API call?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "API version",
          "SignatureValue",
          "authorization",
          "request parameters",
          "response syntax",
          "AccountId",
          "Amazon S3 Glacier",
          "HTTP GET request",
          "request headers",
          "AWS account ID",
          "x-amz-glacier-version",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_504",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"BytesPerHour\": Number,\n\"Strategy\": String\n}\n]\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nBytesPerHour\nThe maximum number of bytes that can be retrieved in an hour.\nThis field will be present only if the value of the Strategy field is BytesPerHour.\nType: Number\nRules\nThe policy rule. Although this is a list type, currently there will be only one rule, which contains\na Strategy field and optionally a BytesPerHour field.\nType: Array\nStrategy\nThe type of data retrieval policy.\nGet Data Retrieval Policy API Version 2012-06-01 530",
      "start_idx": 787379,
      "end_idx": 788271,
      "metadata": {
        "num_sentences": 9,
        "num_words": 134,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Headers",
              "JSON Fields"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "RequestId",
            "Policy",
            "BytesPerHour",
            "Strategy",
            "Response Headers",
            "JSON Fields",
            "API Version",
            "Data Retrieval Policy",
            "Rules"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "BytesPerHour",
            "Strategy",
            "Get Data Retrieval Policy",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Get Data Retrieval Policy API for Amazon S3 Glacier, including its response headers, JSON fields, and usage details for configuring data retrieval policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the response body for the Get Data Retrieval Policy API?",
            "How is the BytesPerHour field used in Amazon S3 Glacier's retrieval policy?",
            "What are the common response headers for this API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Get Data Retrieval Policy",
          "API Version 2012-06-01",
          "Policy",
          "Amazon S3 Glacier",
          "API Version",
          "Rules",
          "RequestId",
          "Strategy",
          "Response Headers",
          "Data Retrieval Policy",
          "BytesPerHour",
          "JSON Fields"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_505",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nType: String\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console. FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to get a data retrieval policy.\nExample Request\nIn this example, a GET request is sent to the URI of a policy's location.\nGET /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the data retrieval policy in the body of the response in JSON format.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 85\n{\n\"Policy\":\n{\nGet Data Retrieval Policy API Version 2012-06-01 531",
      "start_idx": 788271,
      "end_idx": 789681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Handling",
              "API Request",
              "API Response",
              "Data Retrieval Policy"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Data Retrieval Policy",
            "BytesPerHour",
            "FreeTier",
            "None",
            "GET Request",
            "Error Responses",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "JSON Response"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "x-amzn-RequestId",
            "Policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information on setting data retrieval policies for Amazon S3 Glacier, including valid values, API request and response examples, and error handling details.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What are the valid values for Amazon S3 Glacier data retrieval policies?",
            "How can I send a GET request to retrieve a data policy?",
            "What does a successful response for a data retrieval policy look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "GET Request",
          "JSON Response",
          "Policy",
          "Amazon S3 Glacier",
          "None",
          "FreeTier",
          "Error Responses",
          "Data Retrieval Policy",
          "BytesPerHour",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_506",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"Rules\":[\n{\n\"BytesPerHour\":10737418240,\n\"Strategy\":\"BytesPerHour\"\n}\n]\n}\n}\nRelated Sections\n\u2022 Set Data Retrieval Policy (PUT policy)\n\u2022 Initiate Job (POST jobs)\nList Provisioned Capacity (GET provisioned-capacity)\nThis operation lists the provisioned capacity units for the specified AWS account. For more\ninformation about provisioned capacity, see Archive Retrieval Options.\nA provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date. The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second.\nIf the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28. You can see this functionality in the Example\nResponse.\nRequest Syntax\nTo list the provisioned retrieval capacity for an account, send an HTTP GET request to the\nprovisioned-capacity URI as shown in the following syntax example.\nGET /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nList Provision Capacity API Version 2012-06-01 532",
      "start_idx": 789681,
      "end_idx": 790975,
      "metadata": {
        "num_sentences": 10,
        "num_words": 198,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Usage Guidelines"
            ]
          },
          "keywords": [
            "provisioned capacity",
            "retrieval policy",
            "AWS account",
            "expiration date",
            "HTTP GET",
            "URI",
            "Amazon S3 Glacier",
            "provisioned-capacity",
            "Archive Retrieval Options",
            "SignatureValue"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP GET",
            "provisioned-capacity URI",
            "AWS account",
            "Archive Retrieval Options"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list provisioned capacity units for an AWS account using the Amazon S3 Glacier API. It includes details about the duration, expiration rules, and HTTP GET request syntax for this operation.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I list provisioned capacity units in Amazon S3 Glacier?",
            "What is the duration and expiration policy for provisioned capacity?",
            "What is the syntax for the HTTP GET request to retrieve provisioned capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS account",
          "SignatureValue",
          "expiration date",
          "URI",
          "Amazon S3 Glacier",
          "provisioned-capacity",
          "Archive Retrieval Options",
          "HTTP GET",
          "provisioned-capacity URI",
          "provisioned capacity",
          "retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_507",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the operation is successful, the service sends back an HTTP 200 OK response.\nResponse Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"ProvisionedCapacityList\":\n{\n\"CapacityId\" : \"string\",\nList Provision Capacity API Version 2012-06-01 533",
      "start_idx": 790975,
      "end_idx": 792079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request and Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "Request Headers",
            "HTTP Response",
            "Provisioned Capacity",
            "API Version",
            "AWS Credentials",
            "Request Parameters",
            "Response Syntax",
            "Content-Type"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "AWS",
            "HTTP 200 OK",
            "ProvisionedCapacityList"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier API, including request parameters, headers, and response syntax for operations using the 2012-06-01 API version.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What headers are required for Amazon S3 Glacier API requests?",
            "What does the HTTP response for a successful operation look like?",
            "How is the AccountId used in Amazon S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Content-Type",
          "ProvisionedCapacityList",
          "AWS Credentials",
          "Request Parameters",
          "AccountId",
          "Amazon S3 Glacier",
          "API Version",
          "Response Syntax",
          "AWS",
          "HTTP 200 OK",
          "Provisioned Capacity",
          "Request Headers",
          "HTTP Response"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_508",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n\"StartDate\" : \"string\"\n\"ExpirationDate\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nCapacityId\nThe ID that identifies the provisioned capacity unit.\nType: String.\nStartDate\nThe date that the provisioned capacity unit was purchased, in Coordinated Universal Time\n(UTC).\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nExpirationDate\nThe date that the provisioned capacity unit expires, in Coordinated Universal Time (UTC).\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example lists the provisioned capacity units for an account.\nList Provision Capacity API Version 2012-06-01 534",
      "start_idx": 792079,
      "end_idx": 793141,
      "metadata": {
        "num_sentences": 14,
        "num_words": 148,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Format",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "provisioned capacity",
            "response headers",
            "response body",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "ISO 8601",
            "error responses",
            "JSON fields"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the response headers, body, and errors for the Amazon S3 Glacier API, specifically for listing provisioned capacity units. It includes JSON fields like CapacityId, StartDate, and ExpirationDate with examples of their formats.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the JSON fields in the response body for Amazon S3 Glacier's provisioned capacity API?",
            "How is the StartDate and ExpirationDate formatted in the API response?",
            "What are the common response headers used in Amazon S3 Glacier API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "response headers",
          "StartDate",
          "ExpirationDate",
          "ISO 8601",
          "API Version 2012-06-01",
          "error responses",
          "Amazon S3 Glacier",
          "CapacityId",
          "JSON fields",
          "response body",
          "provisioned capacity"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_509",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to retrieve a list of the provisioned capacity units for the\nspecified account.\nGET /123456789012/priority-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 200 OK with a list of\nprovisioned capacity units for the account as shown in the following example.\nThe provisioned capacity unit listed first is an example of a unit with a start date of January 31,\n2017 and expiration date of February 28, 2017. As stated earlier, if the start date is on the 31st day\nof a month, the expiration date is the last day of the next month.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"ProvisionedCapacityList\",\n{\n\"CapacityId\": \"zSaq7NzHFQDANTfQkDen4V7z\",\n\"StartDate\": \"2017-01-31T14:26:33.031Z\",\n\"ExpirationDate\": \"2017-02-28T14:26:33.000Z\",\n},\n{\n\"CapacityId\": \"yXaq7NzHFQNADTfQkDen4V7z\",\n\"StartDate\": \"2016-12-13T20:11:51.095Z\"\",\n\"ExpirationDate\": \"2017-01-13T20:11:51.000Z\" \",\n},\n...\n}\nList Provision Capacity API Version 2012-06-01 535",
      "start_idx": 793141,
      "end_idx": 794683,
      "metadata": {
        "num_sentences": 5,
        "num_words": 172,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GET request",
            "provisioned capacity units",
            "x-amz-glacier-version",
            "Authorization",
            "HTTP 200 OK",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "CapacityId",
            "ProvisionedCapacityList"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "RESTful APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of a GET request to retrieve a list of provisioned capacity units for an Amazon S3 Glacier account, along with the corresponding response format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve provisioned capacity units in Amazon S3 Glacier?",
            "What does the response for a successful GET request to Amazon S3 Glacier look like?",
            "What are the required headers for a GET request to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "StartDate",
          "AWS4-HMAC-SHA256",
          "Authorization",
          "ExpirationDate",
          "GET request",
          "API Version 2012-06-01",
          "ProvisionedCapacityList",
          "Amazon S3 Glacier",
          "CapacityId",
          "HTTP 200 OK",
          "x-amz-glacier-version",
          "provisioned capacity units"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_510",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\nPurchase Provisioned Capacity (POST provisioned-capacity)\nThis operation purchases a provisioned capacity unit for an AWS account.\nA provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date. The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second.\nIf the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28.\nProvisioned capacity helps ensure that your retrieval capacity for expedited retrievals is available\nwhen you need it. Each unit of capacity ensures that at least three expedited retrievals can be\nperformed every five minutes and provides up to 150 MB/s of retrieval throughput. For more\ninformation about provisioned capacity, see Archive Retrieval Options.\nNote\nThere is a limit of two provisioned capacity units per AWS account.\nRequests\nTo purchase provisioned capacity unit for an AWS account send an HTTP POST request to the\nprovisioned-capacity URI.\nSyntax\nPOST /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nPurchase Provisioned Capacity API Version 2012-06-01 536",
      "start_idx": 794683,
      "end_idx": 796175,
      "metadata": {
        "num_sentences": 12,
        "num_words": 225,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "Configuration"
            ]
          },
          "keywords": [
            "Provisioned Capacity",
            "AWS Account",
            "Expedited Retrievals",
            "Retrieval Throughput",
            "Provisioned-Capacity URI",
            "HTTP POST Request",
            "Archive Retrieval Options",
            "Expiration Date",
            "Start Date",
            "Capacity Unit"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "Provisioned Capacity",
            "API Version 2012-06-01",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Capacity Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to purchase provisioned capacity units in Amazon S3 Glacier to ensure expedited retrievals with guaranteed throughput for an AWS account. It includes details on expiration, limits, and the HTTP POST request syntax required for the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I purchase provisioned capacity units in Amazon S3 Glacier?",
            "What is the expiration policy for provisioned capacity units?",
            "What are the limits on provisioned capacity units per AWS account?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP POST Request",
          "AWS Account",
          "API Version 2012-06-01",
          "Retrieval Throughput",
          "Capacity Unit",
          "Expiration Date",
          "Amazon S3 Glacier",
          "Provisioned-Capacity URI",
          "AWS",
          "Start Date",
          "Provisioned Capacity",
          "Expedited Retrievals",
          "glacier.Region.amazonaws.com",
          "Archive Retrieval Options"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_511",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the operation request is successful, the service returns an HTTP 201 Created response.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-capacity-id: CapacityId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nPurchase Provisioned Capacity API Version 2012-06-01 537",
      "start_idx": 796175,
      "end_idx": 797395,
      "metadata": {
        "num_sentences": 11,
        "num_words": 183,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details",
              "Request Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "request headers",
            "response headers",
            "HTTP 201 Created",
            "x-amzn-RequestId",
            "x-amz-capacity-id",
            "credentials",
            "Provisioned Capacity",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "x-amzn-RequestId",
            "x-amz-capacity-id",
            "Provisioned Capacity"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the request and response details for an Amazon S3 Glacier API operation, including required headers, parameters, and response codes.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What response headers are included in a successful Amazon S3 Glacier API operation?",
            "How should the AWS account ID be specified in the request?",
            "What is the HTTP response code for a successful operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "response headers",
          "API Version 2012-06-01",
          "x-amz-capacity-id",
          "Amazon S3 Glacier",
          "request headers",
          "HTTP 201 Created",
          "AWS account ID",
          "Provisioned Capacity",
          "credentials"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_512",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nName Description\nx-amz-capacity-id The ID that identifies the provisioned capacity unit.\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses.\nCode Description HTTP Status Type\nCode\nLimitExceededException Returned if the given request 400 Bad Client\nwould exceed the account's limit Request\nof provisioned capacity units.\nExamples\nThe following example purchases provisioned capacity for an account.\nExample Request\nThe following example sends an HTTP POST request to purchase a provisioned capacity unit.\nPOST /123456789012/provisioned-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nPurchase Provisioned Capacity API Version 2012-06-01 538",
      "start_idx": 797395,
      "end_idx": 798656,
      "metadata": {
        "num_sentences": 8,
        "num_words": 140,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Handling",
              "API Specification",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "provisioned capacity",
            "x-amz-capacity-id",
            "LimitExceededException",
            "HTTP POST",
            "error codes",
            "response body",
            "API version",
            "authorization",
            "SignedHeaders"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-capacity-id",
            "LimitExceededException",
            "AWS4-HMAC-SHA256",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the API for purchasing provisioned capacity in Amazon S3 Glacier, including error handling, request structure, and an example HTTP POST request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the x-amz-capacity-id parameter used for?",
            "How do I send a POST request to purchase provisioned capacity in Amazon S3 Glacier?",
            "What errors might occur when purchasing provisioned capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API version",
          "AWS4-HMAC-SHA256",
          "authorization",
          "us-west-2",
          "HTTP POST",
          "SignedHeaders",
          "x-amz-capacity-id",
          "Amazon S3 Glacier",
          "LimitExceededException",
          "error codes",
          "response body",
          "provisioned capacity"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_513",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created\nresponse, as shown in the following example.\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-capacity-id: zSaq7NzHFQDANTfQkDen4V7z\nRelated Sections\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\nSet Data Retrieval Policy (PUT policy)\nDescription\nThis operation sets and then enacts a data retrieval policy in the AWS Region specified in the PUT\nrequest. You can set one policy per AWS Region for an AWS account. The policy is enacted within a\nfew minutes of a successful PUT operation.\nThe set policy operation does not affect retrieval jobs that were in progress before the policy was\nenacted. For more information about data retrieval policies, see S3 Glacier Data Retrieval Policies.\nRequests\nSyntax\nTo set a data retrieval policy, send an HTTP PUT request to the data retrieval policy URI as shown in\nthe following syntax example.\nPUT /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\":\nSet Data Retrieval Policy API Version 2012-06-01 539",
      "start_idx": 798656,
      "end_idx": 799968,
      "metadata": {
        "num_sentences": 8,
        "num_words": 182,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Description",
              "Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP 201 Created",
            "data retrieval policy",
            "PUT request",
            "AWS Region",
            "provisioned capacity",
            "retrieval jobs",
            "x-amzn-RequestId",
            "x-amz-glacier-version",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "HTTP PUT",
            "x-amz-glacier-version",
            "provisioned capacity"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP PUT"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set a data retrieval policy in Amazon S3 Glacier, including an example HTTP 201 response and the required PUT request syntax.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a data retrieval policy in Amazon S3 Glacier?",
            "What is an example response for a successful data retrieval policy request?",
            "What syntax is required for the PUT request to set a data retrieval policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amzn-RequestId",
          "provisioned capacity",
          "PUT request",
          "Authorization",
          "retrieval jobs",
          "Amazon S3 Glacier",
          "HTTP PUT",
          "HTTP 201 Created",
          "x-amz-glacier-version",
          "AWS Region",
          "data retrieval policy"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_514",
      "text": "\n\nAmazon S3 Glacier Developer Guide\n{\n\"Rules\":[\n{\n\"Strategy\": String,\n\"BytesPerHour\": Number\n}\n]\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nBytesPerHour\nThe maximum number of bytes that can be retrieved in an hour.\nThis field is required only if the value of the Strategy field is BytesPerHour. Your PUT\noperation will be rejected if the Strategy field is not set to BytesPerHour and you set this\nfield.\nType: Number\nSet Data Retrieval Policy API Version 2012-06-01 540",
      "start_idx": 799968,
      "end_idx": 801112,
      "metadata": {
        "num_sentences": 12,
        "num_words": 191,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Details",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "AWS account ID",
            "Request Headers",
            "Request Body",
            "BytesPerHour",
            "Strategy",
            "Data Retrieval Policy",
            "PUT operation",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "AccountId",
            "BytesPerHour",
            "Strategy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on configuring the data retrieval policy for Amazon S3 Glacier, including request headers, body fields, and account ID requirements.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the BytesPerHour field in Amazon S3 Glacier?",
            "How do I configure data retrieval policies in Amazon S3 Glacier?",
            "What are the requirements for the AccountId in requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version 2012-06-01",
          "AccountId",
          "Amazon S3 Glacier",
          "Request Body",
          "Strategy",
          "PUT operation",
          "AWS",
          "AWS account ID",
          "Data Retrieval Policy",
          "BytesPerHour",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_515",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nRequired: Yes, if the Strategy field is set to BytesPerHour. Otherwise, no.\nValid Values: Minimum integer value of 1. Maximum integer value of 2^63 - 1 inclusive.\nRules\nThe policy rule. Although this is a list type, currently there must be only one rule, which\ncontains a Strategy field and optionally a BytesPerHour field.\nType: Array\nRequired: Yes\nStrategy\nThe type of data retrieval policy to set.\nType: String\nRequired: Yes\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console. FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nSet Data Retrieval Policy API Version 2012-06-01 541",
      "start_idx": 801112,
      "end_idx": 802316,
      "metadata": {
        "num_sentences": 16,
        "num_words": 181,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Retrieval Policy"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "BytesPerHour",
            "FreeTier",
            "Strategy",
            "No Retrieval Policy",
            "Max Retrieval Rate",
            "Data Retrieval Policy",
            "Response Headers",
            "RequestId",
            "HTTP 204"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "BytesPerHour",
            "FreeTier",
            "None",
            "Max Retrieval Rate"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the data retrieval policy settings for Amazon S3 Glacier, including valid strategies, required fields, and response details for the Set Data Retrieval Policy API.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid strategies for the data retrieval policy in S3 Glacier?",
            "What is the significance of the BytesPerHour field in the policy?",
            "What is the response format for the Set Data Retrieval Policy API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP 204",
          "Amazon S3 Glacier",
          "None",
          "FreeTier",
          "RequestId",
          "Strategy",
          "No Retrieval Policy",
          "Max Retrieval Rate",
          "Response Headers",
          "Data Retrieval Policy",
          "BytesPerHour",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_518",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nDocument History\n\u2022 Current product version: 2012-06-01\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide from July 5, 2018, onward. For notification about updates to this documentation,\nyou can subscribe to an RSS feed.\nChange Description Date\nImproved start times for Standard retrievals for restore August 9, 2023\nStandard restore requests requests that are made\nmade through S3 Batch through S3 Batch Operations\nOperations now can start within minutes.\nFor more information, see\nArchive Retrieval Options.\nAmazon S3 supports higher Amazon S3 supports restore November 15, 2022\nrestore request rates for S3 requests at a rate of up\nGlacier Flexible Retrieval and to 1,000 transactions per\nS3 Glacier Deep Archive second, per AWS account\nfor the S3 Glacier Flexible\nRetrieval and S3 Glacier Deep\nArchive storage classes.\nAmazon Glacier name change Amazon Glacier is now November 20, 2018\nAmazon S3 Glacier to better\nreflect Glacier's integration\nwith Amazon S3.\nUpdates now available over You can now subscribe to an July 5, 2018\nRSS RSS feed to receive notificat\nions about updates to the\nAmazon S3 Glacier Developer\nGuide guide.\nAPI Version 2012-06-01 545",
      "start_idx": 804663,
      "end_idx": 805916,
      "metadata": {
        "num_sentences": 8,
        "num_words": 197,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Change Log",
              "Feature Update"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Standard retrievals",
            "S3 Batch Operations",
            "Archive Retrieval Options",
            "Flexible Retrieval",
            "Deep Archive",
            "restore request rates",
            "API Version",
            "RSS feed",
            "transactions per second"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Batch Operations",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "AWS account"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "Data Retrieval",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "S3 Batch Operations",
            "RSS feed"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides a history of updates to the Amazon S3 Glacier Developer Guide, including changes to retrieval times, restore request rates, and integration features since July 5, 2018.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the latest updates to Amazon S3 Glacier retrieval features?",
            "How has the restore request rate for S3 Glacier changed over time?",
            "What is the significance of the name change from Amazon Glacier to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "S3 Batch Operations",
          "AWS account",
          "Standard retrievals",
          "Amazon S3 Glacier",
          "S3 Glacier Flexible Retrieval",
          "Archive Retrieval Options",
          "S3 Glacier Deep Archive",
          "RSS feed",
          "restore request rates",
          "API Version",
          "transactions per second",
          "Deep Archive",
          "Flexible Retrieval"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_519",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nEarlier Updates\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide before July 5, 2018.\nChange Description Release Date\nExpedited S3 Glacier now supports Expedited and Bulk data November 21,\nand Bulk Data retrievals in addition to Standard retrievals. For more 2016\nRetrievals information, see Archive Retrieval Options.\nVault Lock S3 Glacier now supports Vault Lock, which allows you July 8, 2015\nto easily deploy and enforce compliance controls on\nindividual S3 Glacier vaults with a Vault Lock policy.\nFor more information, see S3 Glacier Vault Lock and\nVault Lock Policies.\nVault tagging S3 Glacier now allows you to tag your S3 Glacier June 22, 2015\nvaults for easier resource and cost management.\nTags are labels that you can define and associate\nwith your vaults, and using tags adds filtering\ncapabilities to operations such as AWS cost reports.\nFor more information, see Tagging Amazon S3 Glacier\nResources and Tagging Your S3 Glacier Vaults.\nVault access S3 Glacier now supports managing access to your April 27, 2015\npolicies individual S3 Glacier vaults by using vault access\npolicies. You can now define an access policy directly\non a vault, making it easier to grant vault access to\nusers and business groups internal to your organizat\nion, as well as to your external business partners. For\nmore information, see Vault Access Policies.\nData retrieval S3 Glacier now supports data retrieval policies and December 11,\npolicies and audit audit logging. Data retrieval policies allow you to 2014\nlogging easily set data retrieval limits and simplify data\nretrieval cost management. You can define your own\ndata retrieval limits with a few clicks in the AWS\nEarlier Updates API Version 2012-06-01 546",
      "start_idx": 805916,
      "end_idx": 807720,
      "metadata": {
        "num_sentences": 14,
        "num_words": 289,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Feature Updates",
              "Release Notes"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Vault Lock",
            "Vault tagging",
            "Vault access policies",
            "Data retrieval policies",
            "Audit logging",
            "Expedited retrievals",
            "Bulk retrievals",
            "AWS cost reports",
            "Archive Retrieval Options"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS cost reports",
            "Vault Access Policies",
            "Archive Retrieval Options"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document outlines updates to Amazon S3 Glacier, including new features like Expedited and Bulk data retrievals, Vault Lock compliance controls, tagging for cost management, and audit logging for data retrieval policies.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the retrieval options available for S3 Glacier?",
            "How does Vault Lock help with compliance in S3 Glacier?",
            "What are the benefits of tagging S3 Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS cost reports",
          "Vault tagging",
          "Expedited retrievals",
          "Bulk retrievals",
          "Amazon S3 Glacier",
          "Vault Access Policies",
          "S3 Glacier",
          "Vault Lock",
          "Audit logging",
          "Vault access policies",
          "Data retrieval policies",
          "Archive Retrieval Options"
        ]
      }
    },
    {
      "chunk_id": "6e6af23b-01e7-4d31-8b08-6bed370c1933_chunk_520",
      "text": "\n\nAmazon S3 Glacier Developer Guide\nChange Description Release Date\nManagement Console or by using the S3 Glacier API.\nFor more information, see S3 Glacier Data Retrieval\nPolicies.\nIn addition, S3 Glacier now supports audit logging\nwith AWS CloudTrail, which records S3 Glacier API\ncalls for your account and delivers the log files to\nan Amazon S3 bucket that you specify. For more\ninformation, see Logging Amazon S3 Glacier API Calls\nwith AWS CloudTrail.\nUpdates to Java Updated the Java code examples in this guide that June 27, 2014\nsamples use the AWS SDK for Java.\nLimiting vault You can now limit the number of vault inventory December 31,\ninventory retrieval items retrieved by filtering on the archive creation 2013\ndate or by setting a limit. For more information\nabout limiting inventory retrieval, see Range Invento\nry Retrieval in the Initiate Job (POST jobs) topic.\nRemoved Removed the URLs that pointed to the old security July 26, 2013\noutdated URLs credentials page from code examples.\nSupport for range S3 Glacier now supports retrieval of specific ranges November 13,\nretrievals of your archives. You can initiate a job requesting 2012\nS3 Glacier to prepare an entire archive or a portion\nof the archive for subsequent download. When an\narchive is very large, you may find it cost effective\nto initiate several sequential jobs to prepare your\narchive.\nFor more information, see Downloading an Archive in\nS3 Glacier.\nNew Guide This is the first release of the A mazon S3 Glacier August 20, 2012\nDeveloper Guide.\nEarlier Updates API Version 2012-06-01 547",
      "start_idx": 807720,
      "end_idx": 809291,
      "metadata": {
        "num_sentences": 14,
        "num_words": 259,
        "recursion_depth": 10,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Update Log",
              "Feature Description",
              "API Documentation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS CloudTrail",
            "vault inventory",
            "archive retrieval",
            "API calls",
            "Java SDK",
            "range retrieval",
            "audit logging",
            "security credentials",
            "inventory filtering"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "AWS SDK for Java",
            "Amazon S3",
            "Initiate Job (POST jobs)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Audit Logging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This document outlines updates and features for Amazon S3 Glacier, including audit logging with AWS CloudTrail, inventory retrieval filtering, and range-based archive retrieval. It also includes historical update logs and references to Java SDK code examples.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I limit vault inventory retrieval in Amazon S3 Glacier?",
            "What is the process for enabling audit logging with AWS CloudTrail for S3 Glacier?",
            "What are the supported methods for retrieving specific ranges of an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "security credentials",
          "Initiate Job (POST jobs)",
          "range retrieval",
          "audit logging",
          "inventory filtering",
          "AWS CloudTrail",
          "Amazon S3 Glacier",
          "Amazon S3",
          "vault inventory",
          "AWS SDK for Java",
          "archive retrieval",
          "Java SDK",
          "S3 Glacier",
          "API calls"
        ]
      }
    }
  ],
  "metadata": {
    "total_chunks": 456,
    "avg_chunk_size": 213.4232456140351,
    "chunking_method": "RecursiveChunker",
    "processed_at": "2025-05-04T18:53:30.211051",
    "total_sentences": 4863,
    "total_words": 109977,
    "chunking_strategy": "recursive_length",
    "max_chunk_length": 1000,
    "delimiters_used": null,
    "enrichment": {
      "method": "llm",
      "model": "VARELab-GPT4o",
      "enriched_at": "2025-05-05 04:57:15"
    }
  }
}