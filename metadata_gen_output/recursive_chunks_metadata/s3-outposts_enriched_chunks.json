{
  "document_id": "c98a4756-afac-4857-ac60-196e92443048",
  "document_name": "s3-outposts.txt",
  "chunks": [
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_0",
      "text": "User Guide\nAmazon S3 on Outposts\nAPI Version 2006-03-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.\n\nAmazon S3 on Outposts User Guide\nAmazon S3 on Outposts: User Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.\nAmazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon.",
      "start_idx": 0,
      "end_idx": 696,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Legal",
              "Trademark Information"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "User Guide",
            "API Version",
            "AWS",
            "trademarks",
            "trade dress",
            "affiliates",
            "copyright",
            "services"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Amazon Web Services",
            "API Version 2006-03-01",
            "Amazon"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Computing",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document is the User Guide for Amazon S3 on Outposts, providing reference information, legal disclaimers, and trademark details for AWS services.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the API version for Amazon S3 on Outposts?",
            "What are the trademark guidelines for AWS services?",
            "Who owns the trademarks mentioned in this guide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Web Services",
          "trade dress",
          "trademarks",
          "Amazon S3",
          "API Version 2006-03-01",
          "Outposts",
          "User Guide",
          "AWS",
          "services",
          "API Version",
          "affiliates",
          "Amazon",
          "copyright"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_1",
      "text": "\n\nAmazon S3 on Outposts User Guide\nTable of Contents\nWhat is S3 on Outposts? ................................................................................................................. 1\nHow S3 on Outposts works ....................................................................................................................... 1\nRegions ...................................................................................................................................................... 2\nBuckets ....................................................................................................................................................... 2\nObjects....................................................................................................................................................... 3\nKeys ............................................................................................................................................................ 3\nS3 Versioning ........................................................................................................................................... 4\nVersion ID.................................................................................................................................................. 4\nStorage class and encryption............................................................................................................... 4\nBucket policy............................................................................................................................................ 4\nS3 on Outposts access points .............................................................................................................. 5\nFeatures of S3 on Outposts ....................................................................................................................... 5\nAccess management ............................................................................................................................... 5\nStorage logging and monitoring ......................................................................................................... 6\nStrong consistency.................................................................................................................................. 6\nRelated services............................................................................................................................................ 7\nAccessing S3 on Outposts .......................................................................................................................... 7\nAWS Management Console ................................................................................................................... 7\nAWS Command Line Interface ............................................................................................................. 7\nAWS SDKs ................................................................................................................................................. 8\nPaying for S3 on Outposts ......................................................................................................................... 8\nNext steps...................................................................................................................................................... 8\nSetting up your Outpost ............................................................................................................... 10\nOrder a new Outpost ................................................................................................................................ 10\nHow S3 on Outposts is different .................................................................................................. 11\nSpecifications.............................................................................................................................................. 11\nSupported API operations ........................................................................................................................ 12\nUnsupported Amazon S3 features ......................................................................................................... 12\nNetwork restrictions .................................................................................................................................. 13\nGetting started with S3 on Outposts ........................................................................................... 14\nUsing the S3 console ................................................................................................................................ 14\nCreate a bucket, an access point, and an endpoint ....................................................................... 15\nNext steps............................................................................................................................................... 17\nUsing the AWS CLI and SDK for Java .................................................................................................... 17\nAPI Version 2006-03-01 iii",
      "start_idx": 696,
      "end_idx": 5845,
      "metadata": {
        "num_sentences": 2,
        "num_words": 189,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Buckets",
            "Access Points",
            "Encryption",
            "API operations",
            "Storage class",
            "Network restrictions",
            "AWS CLI",
            "AWS SDK"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS Management Console",
            "AWS Command Line Interface",
            "AWS SDKs",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "The documentation provides an overview of Amazon S3 on Outposts, including its features, setup, access methods, and differences from standard S3. It also details supported API operations and network restrictions.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "How does S3 on Outposts differ from standard S3?",
            "What are the supported API operations for S3 on Outposts?",
            "How can I set up and access S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Access Points",
          "AWS Management Console",
          "Storage class",
          "API operations",
          "S3 on Outposts",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "Encryption",
          "Outposts",
          "Network restrictions",
          "AWS SDKs",
          "AWS Outposts",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_2",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWorking with S3 on Outposts objects ......................................................................................... 66\nUpload an object ........................................................................................................................................ 67\nCopying an object ...................................................................................................................................... 69\nUsing the AWS SDK for Java .............................................................................................................. 70\nGetting an object ....................................................................................................................................... 71\nListing objects ............................................................................................................................................. 74\nDeleting objects .......................................................................................................................................... 77\nUsing HeadBucket ...................................................................................................................................... 81\nPerforming a multipart upload ............................................................................................................... 83\nPerform a multipart upload of an object in an S3 on Outposts bucket .................................... 84\nCopy a large object in an S3 on Outposts bucket by using multipart upload .......................... 86\nList parts of an object in an S3 on Outposts bucket .................................................................... 88\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts bucket ......................... 90\nUsing presigned URLs ............................................................................................................................... 91\nLimiting presigned URL capabilities .................................................................................................. 91\nWho can create a presigned URL...................................................................................................... 93\nWhen does S3 on Outposts check the expiration date and time of a presigned URL? ............ 94\nSharing objects...................................................................................................................................... 94\nUploading an object ............................................................................................................................. 99\nAmazon S3 on Outposts with local Amazon EMR ............................................................................ 104\nCreating an Amazon S3 on Outposts bucket ............................................................................... 105\nGetting started using Amazon EMR with Amazon S3 on Outposts ......................................... 106\nAuthorization and authentication caching ......................................................................................... 111\nConfiguring the authorization and authentication cache .......................................................... 112\nValidating SigV4A signing ................................................................................................................ 112\nSecurity ........................................................................................................................................ 113\nSetting up IAM ......................................................................................................................................... 113\nPrincipals for S3 on Outposts policies ........................................................................................... 116\nARNs for S3 on Outposts ................................................................................................................. 116\nExample policies for S3 on Outposts ............................................................................................. 118\nPermissions for endpoints ................................................................................................................ 119\nService-linked roles for S3 on Outposts ........................................................................................ 121\nData encryption........................................................................................................................................ 121\nAWS PrivateLink for S3 on Outposts .................................................................................................. 122\nRestrictions and limitations .............................................................................................................. 123\nAccessing S3 on Outposts interface endpoints ............................................................................ 124\nAPI Version 2006-03-01 v",
      "start_idx": 11121,
      "end_idx": 16116,
      "metadata": {
        "num_sentences": 2,
        "num_words": 279,
        "recursion_depth": 6,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "multipart upload",
            "presigned URLs",
            "IAM",
            "data encryption",
            "AWS SDK for Java",
            "Amazon EMR",
            "PrivateLink",
            "SigV4A signing",
            "interface endpoints"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "IAM",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a comprehensive guide to working with Amazon S3 on Outposts, covering object management, security, and integration with services like EMR and IAM.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object to an S3 on Outposts bucket?",
            "What are the security best practices for S3 on Outposts?",
            "How can I use presigned URLs with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "SigV4A signing",
          "interface endpoints",
          "S3 on Outposts",
          "Amazon EMR",
          "PrivateLink",
          "Amazon S3",
          "IAM",
          "Outposts",
          "AWS SDK for Java",
          "AWS PrivateLink",
          "presigned URLs",
          "data encryption"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_3",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUpdating an on-premises DNS configuration ............................................................................... 126\nCreating a VPC endpoint .................................................................................................................. 126\nCreating VPC endpoint policies and bucket policies ................................................................... 126\nSignature Version 4 (SigV4) policy keys ............................................................................................. 128\nBucket policy examples that use Signature Version 4-related condition keys ....................... 130\nAWS managed policies ........................................................................................................................... 132\nAWSS3OnOutpostsServiceRolePolicy............................................................................................. 132\nPolicy updates..................................................................................................................................... 133\nUsing service-linked roles ...................................................................................................................... 133\nService-linked role permissions for S3 on Outposts ................................................................... 134\nCreating a service-linked role for S3 on Outposts ...................................................................... 137\nEditing a service-linked role for S3 on Outposts ......................................................................... 137\nDeleting a service-linked role for S3 on Outposts ...................................................................... 137\nSupported Regions for S3 on Outposts service-linked roles ..................................................... 138\nManaging S3 on Outposts storage ............................................................................................. 139\nManaging S3 Versioning ......................................................................................................................... 139\nCreating and managing a lifecycle configuration ............................................................................. 141\nUsing the console ............................................................................................................................... 142\nUsing the AWS CLI and SDK for Java ............................................................................................. 145\nReplicating objects for S3 on Outposts .............................................................................................. 149\nReplication configuration.................................................................................................................. 150\nRequirements for S3 Replication on Outposts ............................................................................. 151\nWhat is replicated? ............................................................................................................................. 152\nWhat isn't replicated? ........................................................................................................................ 152\nWhat isn't supported by S3 Replication on Outposts? ............................................................... 153\nSetting up replication ........................................................................................................................ 153\nManaging your replication ................................................................................................................ 172\nSharing S3 on Outposts ......................................................................................................................... 180\nPrerequisites........................................................................................................................................ 180\nProcedure .............................................................................................................................................. 181\nUsage examples .................................................................................................................................. 182\nOther services........................................................................................................................................... 184\nMonitoring S3 on Outposts ........................................................................................................ 186\nCloudWatch metrics ................................................................................................................................ 186\nCloudWatch metrics........................................................................................................................... 187\nAmazon CloudWatch Events .................................................................................................................. 188\nAPI Version 2006-03-01 vi",
      "start_idx": 16116,
      "end_idx": 21160,
      "metadata": {
        "num_sentences": 4,
        "num_words": 236,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Management",
              "Replication",
              "Monitoring"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "DNS configuration",
            "VPC endpoint",
            "Signature Version 4",
            "service-linked roles",
            "replication",
            "CloudWatch metrics",
            "lifecycle configuration",
            "bucket policies",
            "storage management"
          ],
          "entities": [
            "AWSS3OnOutpostsServiceRolePolicy",
            "Amazon CloudWatch",
            "API Version 2006-03-01",
            "VPC endpoint policies",
            "S3 Replication on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Policy Management",
            "Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon CloudWatch",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on configuring Amazon S3 on Outposts, including DNS settings, VPC endpoints, replication, lifecycle management, and monitoring using CloudWatch metrics and events.",
          "intents": [
            "How-To",
            "Reference",
            "Configuration"
          ],
          "potential_questions": [
            "How do I update DNS configurations for Amazon S3 on Outposts?",
            "What policies are required for S3 replication on Outposts?",
            "How can I monitor S3 on Outposts using CloudWatch metrics?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "DNS configuration",
          "Signature Version 4",
          "AWSS3OnOutpostsServiceRolePolicy",
          "Amazon S3 on Outposts",
          "VPC endpoint",
          "Amazon CloudWatch",
          "API Version 2006-03-01",
          "storage management",
          "Amazon S3",
          "lifecycle configuration",
          "AWS CLI",
          "service-linked roles",
          "replication",
          "VPC endpoint policies",
          "CloudWatch metrics"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_4",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWhat is Amazon S3 on Outposts?\nAWS Outposts is a fully managed service that offers the same AWS infrastructure, AWS services,\nAPIs, and tools to virtually any data center, co-location space, or on-premises facility for a truly\nconsistent hybrid experience. AWS Outposts is ideal for workloads that require low-latency access\nto on-premises systems, local data processing, data residency, and migration of applications with\nlocal system interdependencies. For more information, see What is AWS Outposts? in the AWS\nOutposts User Guide.\nWith Amazon S3 on Outposts, you can create S3 buckets on your Outposts and easily store and\nretrieve objects on premises. S3 on Outposts provides a new storage class, OUTPOSTS, which uses\nthe Amazon S3 APIs and is designed to store data durably and redundantly across multiple devices\nand servers on your Outposts. You communicate with your Outposts bucket by using an access\npoint and endpoint connection over a virtual private cloud (VPC).\nYou can use the same APIs and features on Outposts buckets as you do on Amazon S3,\nincluding access policies, encryption, and tagging. You can use S3 on Outposts through the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\n\u2022 How S3 on Outposts works\n\u2022 Features of S3 on Outposts\n\u2022 Related services\n\u2022 Accessing S3 on Outposts\n\u2022 Paying for S3 on Outposts\n\u2022 Next steps\nHow S3 on Outposts works\nS3 on Outposts is an object storage service that stores data as objects within buckets on your\nOutpost. An object is a data file and any metadata that describes the file. A bucket is a container for\nobjects.\nTo store your data in S3 on Outposts, you first create a bucket. When you create the bucket, you\nspecify a bucket name and the Outpost that will hold the bucket. To access your S3 on Outposts\nbucket and perform object operations, you next create and configure an access point. You must\nalso create an endpoint to route requests to your access point.\nHow S3 on Outposts works API Version 2006-03-01 1",
      "start_idx": 23372,
      "end_idx": 25418,
      "metadata": {
        "num_sentences": 18,
        "num_words": 348,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS Outposts",
            "Amazon S3",
            "S3 buckets",
            "OUTPOSTS storage class",
            "virtual private cloud",
            "access point",
            "endpoint",
            "object storage",
            "encryption",
            "tagging"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "OUTPOSTS storage class",
            "VPC",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hybrid Cloud",
            "Object Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts extends S3 capabilities to on-premises environments, enabling low-latency object storage with the same APIs and features as Amazon S3. It requires configuring buckets, access points, and endpoints for data operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts and how does it work?",
            "How do I configure an access point for S3 on Outposts?",
            "What features does S3 on Outposts offer?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "virtual private cloud",
          "object storage",
          "S3 buckets",
          "Amazon S3",
          "tagging",
          "encryption",
          "endpoint",
          "OUTPOSTS storage class",
          "VPC",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_5",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAccess points simplify data access for any AWS service or customer application that stores data\nin S3. Access points are named network endpoints that are attached to buckets and can be used\nto perform object operations, such as GetObject and PutObject. Each access point has distinct\npermissions and network controls.\nYou can create and manage your S3 on Outposts buckets, access points, and endpoints by using\nthe AWS Management Console, AWS CLI, AWS SDKs, or REST API. To upload and manage objects in\nyour S3 on Outposts bucket, you can use the AWS CLI, AWS SDKs, or REST API.\nRegions\nDuring AWS Outposts provisioning, you or AWS creates a service link connection that connects\nyour Outpost back to your chosen AWS Region or Outposts home Region for bucket operations and\ntelemetry. An Outpost relies on connectivity to the parent AWS Region. The Outposts rack is not\ndesigned for disconnected operations or environments with limited to no connectivity. For more\ninformation, see Outpost connectivity to AWS Regions in the AWS Outposts User Guide.\nBuckets\nA bucket is a container for objects stored in S3 on Outposts. You can store any number of objects in\na bucket and can have up to 100 buckets per account per Outpost.\nWhen you create a bucket, you enter a bucket name and choose the Outpost where the bucket\nwill reside. After you create a bucket, you cannot change the bucket name or move the bucket to a\ndifferent Outpost. Bucket names must follow Amazon S3 bucket naming rules. In S3 on Outposts,\nbucket names are unique to an Outpost and AWS account. S3 on Outposts buckets require the\noutpost-id, account-id, and bucket name to identify them.\nThe following example shows the Amazon Resource Name (ARN) format for S3 on Outposts\nbuckets. The ARN is comprised of the Region your Outpost is homed to, your Outpost account, the\nOutpost ID, and the bucket name.\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/bucket/bucket-name\nEvery object is contained in a bucket. You must use access points to access any object in an\nOutposts bucket. When you specify the bucket for object operations, you use the access point ARN\nor access point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nRegions API Version 2006-03-01 2",
      "start_idx": 25418,
      "end_idx": 27767,
      "metadata": {
        "num_sentences": 23,
        "num_words": 388,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access points",
            "buckets",
            "Outpost ID",
            "bucket name",
            "ARN",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "Regions"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "access points",
            "bucket ARN",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Regions"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage Amazon S3 on Outposts buckets, access points, and endpoints, including their naming conventions, permissions, and connectivity requirements to AWS Regions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create and manage S3 on Outposts buckets?",
            "What is the ARN format for S3 on Outposts buckets?",
            "What are the connectivity requirements for AWS Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Regions",
          "AWS Management Console",
          "buckets",
          "S3 on Outposts",
          "Amazon S3",
          "REST API",
          "access points",
          "AWS CLI",
          "AWS Outposts",
          "bucket ARN",
          "AWS SDKs",
          "ARN",
          "bucket name",
          "Regions",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_6",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe following example shows the access point ARN format for S3 on Outposts, which includes the\noutpost-id, account-id, and access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about buckets, see Working with S3 on Outposts buckets.\nObjects\nObjects are the fundamental entities stored in S3 on Outposts. Objects consist of object data and\nmetadata. The metadata is a set of name-value pairs that describe the object. These pairs include\nsome default metadata, such as the date last modified, and standard HTTP metadata, such as\nContent-Type. You can also specify custom metadata at the time that the object is stored. An\nobject is uniquely identified within a bucket by a key (or name).\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nKeys\nAn object key (or key name) is the unique identifier for an object within a bucket. Every object in a\nbucket has exactly one key. The combination of a bucket and object key uniquely identifies each\nobject.\nThe following example shows the ARN format for S3 on Outposts objects, which includes the AWS\nRegion code for the Region that the Outpost is homed to, AWS account ID, Outpost ID, bucket\nname, and object key:\narn:aws:s3-outposts:us-west-2:123456789012:outpost/ op-01ac5d28a6a232904/bucket/amzn-\ns3-demo-bucket1/object/myobject\nFor more information about object keys, see Working with S3 on Outposts objects.\nObjects API Version 2006-03-01 3",
      "start_idx": 27767,
      "end_idx": 29737,
      "metadata": {
        "num_sentences": 17,
        "num_words": 303,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point ARN",
            "object metadata",
            "bucket",
            "object key",
            "data residency",
            "AWS CLI",
            "REST API",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3",
            "Outpost ID",
            "AWS Region",
            "access point ARN",
            "bucket name"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the structure and usage of Amazon S3 on Outposts, focusing on objects, metadata, access point ARNs, and data residency requirements. It also describes tools for managing objects since the AWS Management Console cannot be used directly for Outposts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How is object metadata managed in S3 on Outposts?",
            "What tools can be used to upload and manage objects in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "AWS Management Console",
          "bucket name",
          "object key",
          "data residency",
          "S3 on Outposts",
          "Amazon S3",
          "REST API",
          "AWS CLI",
          "Outposts",
          "AWS SDKs",
          "bucket",
          "Outpost ID",
          "AWS Region",
          "object metadata"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_7",
      "text": "\n\nAmazon S3 on Outposts User Guide\nS3 Versioning\nYou can use S3 Versioning on Outposts buckets to keep multiple variants of an object in the\nsame bucket. With S3 Versioning, you can preserve, retrieve, and restore every version of every\nobject stored in your buckets. S3 Versioning helps you recover from unintended user actions and\napplication failures.\nFor more information, see Managing S3 Versioning for your S3 on Outposts bucket.\nVersion ID\nWhen you enable S3 Versioning in a bucket, S3 on Outposts generates a unique version ID for\neach object added to the bucket. Objects that already existed in the bucket at the time that you\nenable versioning have a version ID of null. If you modify these (or any other) objects with other\noperations, such as PutObject, the new objects get a unique version ID.\nFor more information, see Managing S3 Versioning for your S3 on Outposts bucket.\nStorage class and encryption\nS3 on Outposts provides a new storage class, S3 Outposts (OUTPOSTS). The S3 Outposts storage\nclass is available only for objects stored in buckets on AWS Outposts. If you try to use other S3\nstorage classes with S3 on Outposts, S3 on Outposts returns the InvalidStorageClass error.\nBy default, objects stored in the S3 Outposts (OUTPOSTS) storage class are encrypted using server-\nside encryption with Amazon S3 managed encryption keys (SSE-S3). For more information, see\nData encryption in S3 on Outposts.\nBucket policy\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size.\nBucket policies use JSON-based IAM policy language that is standard across AWS. You can use\nbucket policies to add or deny permissions for the objects in a bucket. Bucket policies allow or deny\nrequests based on the elements in the policy. These elements can include the requester, S3 on\nOutposts actions, resources, and aspects or conditions of the request (for example, the IP address\nS3 Versioning API Version 2006-03-01 4",
      "start_idx": 29737,
      "end_idx": 31990,
      "metadata": {
        "num_sentences": 21,
        "num_words": 378,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts bucket",
            "Version ID",
            "S3 Outposts storage class",
            "SSE-S3",
            "bucket policy",
            "IAM policy",
            "resource-based policy",
            "encryption",
            "AWS Outposts"
          ],
          "entities": [
            "S3 Versioning",
            "S3 Outposts",
            "AWS Identity and Access Management (IAM)",
            "SSE-S3",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use S3 Versioning on AWS Outposts buckets, including features like version IDs, storage classes, encryption, and bucket policies for managing access and security.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does S3 Versioning work on AWS Outposts buckets?",
            "What is the default encryption method for S3 Outposts storage class?",
            "How can bucket policies be used to manage access permissions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Version ID",
          "S3 Outposts",
          "Outposts bucket",
          "S3 Outposts storage class",
          "AWS Identity and Access Management (IAM)",
          "S3 Versioning",
          "Amazon S3",
          "bucket policy",
          "encryption",
          "SSE-S3",
          "IAM policy",
          "resource-based policy",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_8",
      "text": "\n\nAmazon S3 on Outposts User Guide\nused to make the request). For example, you can create a bucket policy that grants cross-account\npermissions to upload objects to an S3 on Outposts bucket while ensuring that the bucket owner\nhas full control of the uploaded objects.\nIn your bucket policy, you can use wildcard characters (*) in ARNs and other values to grant\npermissions to a subset of objects. For example, you can control access to groups of objects that\nbegin with a common prefix or end with a given extension, such as .html.\nS3 on Outposts access points\nS3 on Outposts access points are named network endpoints with dedicated access policies that\ndescribe how data can be accessed using that endpoint. Access points simplify managing data\naccess at scale for shared datasets in S3 on Outposts. Access points are attached to buckets that\nyou can use to perform S3 object operations, such as GetObject and PutObject.\nWhen you specify the bucket for object operations, you use the access point ARN or access point\nalias. For more information about access point aliases, see Using a bucket-style alias for your S3 on\nOutposts bucket access point.\nAccess points have distinct permissions and network controls that S3 on Outposts applies for any\nrequest that is made through that access point. Each access point enforces a customized access\npoint policy that works in conjunction with the bucket policy that is attached to the underlying\nbucket.\nFor more information, see Accessing your S3 on Outposts buckets and objects.\nFeatures of S3 on Outposts\nAccess management\nS3 on Outposts provides features for auditing and managing access to your buckets and objects. By\ndefault, S3 on Outposts buckets and the objects in them are private. You have access only to the S3\non Outposts resources that you create.\nTo grant granular resource permissions that support your specific use case or to audit the\npermissions of your S3 on Outposts resources, you can use the following features.\n\u2022 S3 Block Public Access \u2013 Block public access to buckets and objects. For buckets on Outposts,\nBlock Public Access is always enabled by default.\nS3 on Outposts access points API Version 2006-03-01 5",
      "start_idx": 31990,
      "end_idx": 34169,
      "metadata": {
        "num_sentences": 19,
        "num_words": 363,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "access points",
            "ARN",
            "permissions",
            "object operations",
            "Block Public Access",
            "access management",
            "access point alias",
            "network controls"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "S3 Block Public Access",
            "API Version 2006-03-01",
            "access point ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "Networking"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation provides an overview of Amazon S3 on Outposts features, including bucket policies, access points, and access management. It explains how to control permissions, manage data access, and enforce security measures like Block Public Access.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create a bucket policy for S3 on Outposts?",
            "What are S3 on Outposts access points and their features?",
            "How does Block Public Access work for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "permissions",
          "S3 on Outposts",
          "Amazon S3",
          "API Version 2006-03-01",
          "access points",
          "bucket policy",
          "access management",
          "Block Public Access",
          "ARN",
          "network controls",
          "S3 Block Public Access",
          "access point alias",
          "object operations"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_9",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 AWS Identity and Access Management (IAM) \u2013 IAM is a web service that helps you securely\ncontrol access to AWS resources, including your S3 on Outposts resources. With IAM, you can\ncentrally manage permissions that control which AWS resources users can access. You use IAM to\ncontrol who is authenticated (signed in) and authorized (has permissions) to use resources.\n\u2022 S3 on Outposts access points \u2013 Manage data access for shared datasets in S3 on Outposts. Access\npoints are named network endpoints with dedicated access policies. Access points are attached\nto buckets and can be used to perform object operations, such as GetObject and PutObject.\n\u2022 Bucket policies \u2013 Use IAM-based policy language to configure resource-based permissions for\nyour S3 buckets and the objects in them.\n\u2022 AWS Resource Access Manager (AWS RAM) \u2013 Securely share your S3 on Outposts capacity across\nAWS accounts, within your organization or organizational units (OUs) in AWS Organizations.\nStorage logging and monitoring\nS3 on Outposts provides logging and monitoring tools that you can use to monitor and control\nhow your S3 on Outposts resources are being used. For more information, see Monitoring tools.\n\u2022 Amazon CloudWatch metrics for S3 on Outposts \u2013 Track the operational health of your\nresources and understand your capacity availability.\n\u2022 Amazon CloudWatch Events events for S3 on Outposts \u2013 Create a rule for any S3 on Outposts\nAPI event to receive notifications through all supported CloudWatch Events targets, including\nAmazon Simple Queue Service (Amazon SQS), Amazon Simple Notification Service (Amazon\nSNS), and AWS Lambda.\n\u2022 AWS CloudTrail logs for S3 on Outposts \u2013 Record actions taken by a user, a role, or an AWS\nservice in S3 on Outposts. CloudTrail logs provide you with detailed API tracking for S3 bucket-\nlevel and object-level operations.\nStrong consistency\nS3 on Outposts provides strong read-after-write consistency for PUT and DELETE requests of\nobjects in your S3 on Outposts bucket in all AWS Regions. This behavior applies to both writes\nof new objects and to PUT requests that overwrite existing objects and to DELETE requests. In\naddition, S3 on Outposts object tags and object metadata (for example, the HEAD object) are\nstrongly consistent. For more information, see Amazon S3 data consistency model in the Amazon\nS3 User Guide.\nStorage logging and monitoring API Version 2006-03-01 6",
      "start_idx": 34169,
      "end_idx": 36604,
      "metadata": {
        "num_sentences": 19,
        "num_words": 390,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "IAM",
            "S3 on Outposts",
            "access points",
            "bucket policies",
            "AWS RAM",
            "CloudWatch metrics",
            "CloudTrail logs",
            "strong consistency",
            "API events",
            "object metadata"
          ],
          "entities": [
            "AWS Identity and Access Management (IAM)",
            "S3 on Outposts",
            "AWS Resource Access Manager (AWS RAM)",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3 on Outposts",
          "secondary_categories": [
            "AWS Identity and Access Management",
            "AWS Monitoring and Logging"
          ],
          "mentioned_services": [
            "AWS Identity and Access Management (IAM)",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "Amazon Simple Queue Service (Amazon SQS)",
            "Amazon Simple Notification Service (Amazon SNS)",
            "AWS Lambda"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of managing access, monitoring, and ensuring data consistency for Amazon S3 on Outposts. It covers IAM, access points, bucket policies, and logging tools like CloudWatch and CloudTrail.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I manage access to S3 on Outposts resources?",
            "What monitoring tools are available for S3 on Outposts?",
            "What is the data consistency model for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3 on Outposts]",
        "tf_idf_keywords": [
          "AWS Resource Access Manager (AWS RAM)",
          "S3 on Outposts",
          "API events",
          "AWS RAM",
          "AWS Identity and Access Management (IAM)",
          "Amazon CloudWatch",
          "AWS CloudTrail",
          "access points",
          "IAM",
          "strong consistency",
          "CloudTrail logs",
          "CloudWatch metrics",
          "bucket policies",
          "object metadata"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_10",
      "text": "\n\nAmazon S3 on Outposts User Guide\nRelated services\nAfter you load your data into S3 on Outposts, you can use it with other AWS services. The following\nare the services that you might use most frequently:\n\u2022 Amazon Elastic Compute Cloud (Amazon EC2) \u2013 Provides secure and scalable computing capacity\nin the AWS Cloud. Using Amazon EC2 lessens your need to invest in hardware up front, so you\ncan develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few\nvirtual servers as you need, configure security and networking, and manage storage.\n\u2022 Amazon Elastic Block Store (Amazon EBS) on Outposts \u2013 Use Amazon EBS local snapshots on\nOutposts to store snapshots of volumes on an Outpost locally in S3 on Outposts.\n\u2022 Amazon Relational Database Service (Amazon RDS) on Outposts \u2013 Use Amazon RDS local\nbackups to store your Amazon RDS backups locally on your Outpost.\n\u2022 AWS DataSync \u2013 Automate transferring data between your Outposts and AWS Regions, choosing\nwhat to transfer, when to transfer, and how much network bandwidth to use. S3 on Outposts is\nintegrated with AWS DataSync. For on-premises applications that require high-throughput local\nprocessing, S3 on Outposts provides on-premises object storage to minimize data transfers and\nbuffer from network variations, while providing you the ability to easily transfer data between\nOutposts and AWS Regions.\nAccessing S3 on Outposts\nYou can work with S3 on Outposts in any of the following ways:\nAWS Management Console\nThe console is a web-based user interface for managing S3 on Outposts and AWS resources. If\nyou've signed up for an AWS account, you can access S3 on Outposts by signing into the AWS\nManagement Console and choosing S3 from the AWS Management Console home page. Then,\nchoose Outposts buckets from the left navigation pane.\nAWS Command Line Interface\nYou can use the AWS command line tools to issue commands or build scripts at your system's\ncommand line to perform AWS (including S3) tasks.\nRelated services API Version 2006-03-01 7",
      "start_idx": 36604,
      "end_idx": 38632,
      "metadata": {
        "num_sentences": 14,
        "num_words": 336,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Service Overview",
              "Integration Options",
              "Access Methods"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS",
            "AWS DataSync",
            "Outposts buckets",
            "local snapshots",
            "object storage",
            "data transfer"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS",
            "AWS DataSync"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Services",
          "secondary_categories": [
            "Cloud Storage",
            "Data Integration"
          ],
          "mentioned_services": [
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts, its integration with other AWS services, and ways to access it via the AWS Management Console or CLI.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What AWS services integrate with Amazon S3 on Outposts?",
            "How can I access S3 on Outposts using the AWS Management Console?",
            "What are the benefits of using AWS DataSync with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Services]",
        "tf_idf_keywords": [
          "AWS DataSync",
          "local snapshots",
          "AWS Management Console",
          "object storage",
          "Amazon RDS",
          "Amazon S3 on Outposts",
          "Outposts buckets",
          "Amazon EBS",
          "Amazon EC2",
          "data transfer"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_11",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe AWS Command Line Interface (AWS CLI) provides commands for a broad set of AWS services.\nThe AWS CLI is supported on Windows, macOS, and Linux. To get started, see the AWS Command\nLine Interface User Guide. For more information about the commands that you can use with S3 on\nOutposts, see s3api, s3control, and s3outposts in the AWS CLI Command Reference.\nAWS SDKs\nAWS provides SDKs (software development kits) that consist of libraries and sample code for\nvarious programming languages and platforms (Java, Python, Ruby, .NET, iOS, Android, and so\non). The AWS SDKs provide a convenient way to create programmatic access to S3 on Outposts\nand AWS. Because S3 on Outposts uses the same SDKs as Amazon S3, S3 on Outposts provides a\nconsistent experience using the same S3 APIs, automation, and tools.\nS3 on Outposts is a REST service. You can send requests to S3 on Outposts by using the AWS SDK\nlibraries, which wrap the underlying REST API and simplify your programming tasks. For example,\nthe SDKs take care of tasks such as calculating signatures, cryptographically signing requests,\nmanaging errors, and retrying requests automatically. For information about the AWS SDKs,\nincluding how to download and install them, see Tools to Build on AWS.\nPaying for S3 on Outposts\nYou can purchase a variety of AWS Outposts rack configurations featuring a combination of\nAmazon EC2 instance types, Amazon EBS General Purpose solid state drive (SSD) volumes (gp2),\nand S3 on Outposts. Pricing includes delivery, installation, infrastructure service maintenance, and\nsoftware patches and upgrades.\nFor more information, see AWS Outposts rack pricing.\nNext steps\nFor more information about working with S3 on Outposts, see the following topics:\n\u2022 Setting up your Outpost\n\u2022 How is Amazon S3 on Outposts different from Amazon S3?\n\u2022 Getting started with Amazon S3 on Outposts\n\u2022 Networking for S3 on Outposts\n\u2022 Working with S3 on Outposts buckets\nAWS SDKs API Version 2006-03-01 8",
      "start_idx": 38632,
      "end_idx": 40636,
      "metadata": {
        "num_sentences": 16,
        "num_words": 328,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS CLI",
            "AWS SDKs",
            "S3 on Outposts",
            "REST API",
            "Outposts rack",
            "Amazon EC2",
            "Amazon EBS",
            "gp2 volumes",
            "automation",
            "cryptographic signing"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI Command Reference",
            "AWS SDKs",
            "AWS Outposts",
            "S3 on Outposts buckets"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of using Amazon S3 on Outposts, including tools like AWS CLI and SDKs for programmatic access, pricing details, and links to further setup guides.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What tools can I use to interact with S3 on Outposts?",
            "How does Amazon S3 on Outposts differ from standard Amazon S3?",
            "What are the pricing details for AWS Outposts racks?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "cryptographic signing",
          "AWS CLI Command Reference",
          "S3 on Outposts",
          "S3 on Outposts buckets",
          "Outposts rack",
          "REST API",
          "AWS CLI",
          "Amazon S3",
          "Amazon EBS",
          "AWS SDKs",
          "Amazon EC2",
          "gp2 volumes",
          "automation",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_12",
      "text": "\n\nAmazon S3 on Outposts User Guide\nSetting up your Outpost\nTo get started with Amazon S3 on Outposts, you will need an Outpost with Amazon S3 capacity\ndeployed at your facility. For information about options for ordering an Outpost and S3\ncapacity, see AWS Outposts. To check if your Outposts has S3 capacity on it, you can use the\nListOutpostsWithS3 API call. For specifications and to see how S3 on Outposts is different than\nAmazon S3, see How is Amazon S3 on Outposts different from Amazon S3?\nFor more information, see the following topics.\nTopics\n\u2022 Order a new Outpost\nOrder a new Outpost\nIf you need to order a new Outpost with S3 capacity, see AWS Outposts rack pricing to understand\nthe capacity options for Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Block Store\n(Amazon EBS), and Amazon S3.\nAfter you select your configuration, follow the steps in Create an Outpost and order Outpost\ncapacity in the AWS Outposts User Guide.\nOrder a new Outpost API Version 2006-03-01 10",
      "start_idx": 40847,
      "end_idx": 41842,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Ordering"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS Outposts",
            "S3 capacity",
            "ListOutpostsWithS3",
            "Amazon EC2",
            "Amazon EBS",
            "Create an Outpost",
            "API Version",
            "rack pricing"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2",
            "Amazon EBS",
            "ListOutpostsWithS3 API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Infrastructure Setup",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide explains how to set up Amazon S3 on AWS Outposts, including ordering a new Outpost with S3 capacity and checking existing capacity using the ListOutpostsWithS3 API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up Amazon S3 on Outposts?",
            "What are the steps to order a new Outpost with S3 capacity?",
            "How can I check if my Outpost has S3 capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListOutpostsWithS3",
          "rack pricing",
          "ListOutpostsWithS3 API",
          "Amazon S3",
          "Outposts",
          "Amazon EBS",
          "Amazon EC2",
          "API Version",
          "Create an Outpost",
          "S3 capacity",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_13",
      "text": "\n\nAmazon S3 on Outposts User Guide\nHow is Amazon S3 on Outposts different from Amazon\nS3?\nAmazon S3 on Outposts delivers object storage to your on-premises AWS Outposts environment.\nUsing S3 on Outposts helps you to meet local processing, data residency, and demanding\nperformance needs by keeping data close to on-premises applications. Because it uses Amazon\nS3 APIs and features, S3 on Outposts makes it easy to store, secure, tag, report on, and control\naccess to the data on your Outposts and extend AWS infrastructure to your on-premises facility for\na consistent hybrid experience.\nFor more information about how S3 on Outposts is unique, see the following topics.\nTopics\n\u2022 S3 on Outposts specifications\n\u2022 API operations supported by S3 on Outposts\n\u2022 Amazon S3 features not supported by S3 on Outposts\n\u2022 S3 on Outposts network requirements\nS3 on Outposts specifications\n\u2022 The maximum Outposts bucket size is 50 TB.\n\u2022 The maximum number of Outposts buckets is 100 per AWS account.\n\u2022 Outposts buckets can be accessed only by using access points and endpoints.\n\u2022 The maximum number of access points per Outposts bucket is 10.\n\u2022 Access point policies are limited to 20 KB in size.\n\u2022 The Outpost owner can manage access within your organization in AWS Organizations by using\nAWS Resource Access Manager. All accounts that need access to the Outpost must be within the\nsame organization as the owner account in AWS Organizations.\n\u2022 The S3 on Outposts bucket owner account is always the owner of all objects in the bucket.\n\u2022 Only the S3 on Outposts bucket owner account can perform operations on the bucket.\n\u2022 Object size limitations are consistent with Amazon S3.\n\u2022 All objects stored on S3 on Outposts are stored in the OUTPOSTS storage class.\nSpecifications API Version 2006-03-01 11",
      "start_idx": 41842,
      "end_idx": 43628,
      "metadata": {
        "num_sentences": 17,
        "num_words": 301,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specifications",
              "Comparison",
              "Requirements"
            ]
          },
          "keywords": [
            "Amazon S3",
            "S3 on Outposts",
            "Outposts bucket",
            "access points",
            "AWS Organizations",
            "Resource Access Manager",
            "storage class",
            "API operations",
            "data residency",
            "hybrid experience"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Outposts",
            "AWS Organizations",
            "AWS Resource Access Manager"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hybrid Cloud",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Organizations"
          ],
          "mentioned_tools": [
            "AWS Resource Access Manager"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts delivers object storage to AWS Outposts environments, enabling local data processing and residency while using S3 APIs and features. It includes specific limitations and requirements for buckets, access points, and organizational management.",
          "intents": [
            "Reference",
            "Compare",
            "How-To"
          ],
          "potential_questions": [
            "What are the specifications for S3 on Outposts?",
            "How does S3 on Outposts differ from Amazon S3?",
            "What are the network requirements for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Resource Access Manager",
          "hybrid experience",
          "Outposts bucket",
          "S3 on Outposts",
          "API operations",
          "data residency",
          "Amazon S3",
          "storage class",
          "access points",
          "AWS Organizations",
          "Resource Access Manager",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_14",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 By default, all objects stored in the OUTPOSTS storage class are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose to\nstore objects by using server-side encryption with customer-provided encryption keys (SSE-C).\n\u2022 If there is not enough space to store an object on your Outpost, the API returns an insufficient\ncapacity exception (ICE).\nAPI operations supported by S3 on Outposts\nFor a list of API operations supported by S3 on Outposts, see Amazon S3 on Outposts API\noperations.\nAmazon S3 features not supported by S3 on Outposts\nThe following Amazon S3 features are currently not supported by Amazon S3 on Outposts. Any\nattempts to use them are rejected.\n\u2022 Access control lists (ACLs)\n\u2022 Cross-origin resource sharing (CORS)\n\u2022 S3 Batch Operations\n\u2022 S3 Inventory reports\n\u2022 Changing the default bucket encryption\n\u2022 Public buckets\n\u2022 Multi-factor authentication (MFA) delete\n\u2022 S3 Lifecycle transitions (aside from object deletion and stopping incomplete multipart uploads)\n\u2022 S3 Object Lock legal hold\n\u2022 Object Lock retention\n\u2022 Server-side encryption with AWS Key Management Service (AWS KMS) keys (SSE-KMS)\n\u2022 S3 Replication Time Control (S3 RTC)\n\u2022 Amazon CloudWatch request metrics\n\u2022 Metrics configuration\n\u2022 Transfer Acceleration\n\u2022 S3 Event Notifications\n\u2022 Requester Pays buckets\nSupported API operations API Version 2006-03-01 12",
      "start_idx": 43628,
      "end_idx": 45061,
      "metadata": {
        "num_sentences": 7,
        "num_words": 224,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Feature Support",
              "API Operations",
              "Encryption Methods"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "SSE-S3",
            "SSE-C",
            "API operations",
            "ACLs",
            "CORS",
            "S3 Lifecycle",
            "Object Lock",
            "Encryption"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SSE-S3",
            "SSE-C",
            "AWS KMS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Encryption",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS KMS",
            "CloudWatch"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation outlines supported and unsupported features of Amazon S3 on Outposts, including default encryption methods and API operations. It also lists limitations such as unsupported ACLs, CORS, and S3 Lifecycle transitions.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What encryption methods are supported by Amazon S3 on Outposts?",
            "Which features are not supported by Amazon S3 on Outposts?",
            "What happens if there is insufficient storage capacity on an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API operations",
          "ACLs",
          "SSE-C",
          "CORS",
          "Amazon S3",
          "AWS KMS",
          "Encryption",
          "Outposts",
          "SSE-S3",
          "CloudWatch",
          "S3 Lifecycle",
          "Object Lock"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_15",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 S3 Select\n\u2022 AWS Lambda events\n\u2022 Server access logging\n\u2022 HTTP POST requests\n\u2022 SOAP\n\u2022 Website access\nS3 on Outposts network requirements\n\u2022 To route requests to an S3 on Outposts access point, you must create and configure an S3 on\nOutposts endpoint. The following limits apply to endpoints for S3 on Outposts:\n\u2022 Each virtual private cloud (VPC) on an Outpost can have one associated endpoint, and you can\nhave up to 100 endpoints per Outpost.\n\u2022 You can map multiple access points to the same endpoint.\n\u2022 You can add endpoints only to VPCs with CIDR blocks in the subspaces of the following CIDR\nranges:\n\u2022 10.0.0.0/8\n\u2022 172.16.0.0/12\n\u2022 192.168.0.0/16\n\u2022 You can create endpoints to an Outpost only from VPCs that have non-overlapping CIDR blocks.\n\u2022 You can create an endpoint only from within its Outposts subnet.\n\u2022 The subnet that you use to create an endpoint must contain four IP addresses for S3 on Outposts\nto use.\n\u2022 If you specify the customer-owned IP address pool (CoIP pool), it must contain four IP addresses\nfor S3 on Outposts to use.\n\u2022 You can create only one endpoint per Outpost per VPC.\nNetwork restrictions API Version 2006-03-01 13",
      "start_idx": 45061,
      "end_idx": 46241,
      "metadata": {
        "num_sentences": 9,
        "num_words": 211,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Limits"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access point",
            "endpoint",
            "VPC",
            "CIDR blocks",
            "subnet",
            "CoIP pool",
            "IP addresses",
            "network requirements",
            "AWS Lambda"
          ],
          "entities": [
            "Amazon S3",
            "AWS Lambda",
            "Outposts",
            "VPC",
            "CIDR"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Lambda",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the network requirements and endpoint configuration for using Amazon S3 on Outposts, including CIDR block restrictions and IP address allocation rules.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the network requirements for S3 on Outposts?",
            "How do I create and configure an S3 on Outposts endpoint?",
            "What CIDR blocks are supported for S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Lambda",
          "IP addresses",
          "CIDR",
          "network requirements",
          "S3 on Outposts",
          "CIDR blocks",
          "Amazon S3",
          "CoIP pool",
          "Outposts",
          "endpoint",
          "VPC",
          "subnet",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_16",
      "text": "\n\nAmazon S3 on Outposts User Guide\nGetting started with Amazon S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nWith Amazon S3 on Outposts, you can use the Amazon S3 APIs and features, such as object\nstorage, access policies, encryption, and tagging, on AWS Outposts as you do on Amazon S3. For\ninformation about S3 on Outposts, see What is Amazon S3 on Outposts?\nTopics\n\u2022 Getting started by using the AWS Management Console\n\u2022 Getting started by using the AWS CLI and SDK for Java\nGetting started by using the AWS Management Console\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nTo get started with S3 on Outposts by using the console, see the following topics. To get started by\nusing the AWS CLI or AWS SDK for Java, see Getting started by using the AWS CLI and SDK for Java.\nTopics\nUsing the S3 console API Version 2006-03-01 14",
      "start_idx": 46241,
      "end_idx": 48691,
      "metadata": {
        "num_sentences": 16,
        "num_words": 419,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Getting Started",
              "Feature Overview"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "virtual private cloud",
            "access policies",
            "encryption",
            "tagging",
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "Hybrid Cloud"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to get started with Amazon S3 on Outposts, enabling users to create S3 buckets on AWS Outposts for local data storage and processing using familiar Amazon S3 APIs and features.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What features are available with Amazon S3 on Outposts?",
            "How can I use the AWS CLI or SDK to manage S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "access policies",
          "virtual private cloud",
          "Amazon S3",
          "tagging",
          "AWS CLI",
          "encryption",
          "REST API",
          "AWS SDK for Java",
          "AWS SDKs",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_17",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Create a bucket, an access point, and an endpoint\n\u2022 Next steps\nCreate a bucket, an access point, and an endpoint\nThe following procedure shows you how to create your first bucket in S3 on Outposts. When you\ncreate a bucket using the console, you also create an access point and an endpoint associated with\nthe bucket so that you can immediately begin storing objects in your bucket.\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose Create Outposts bucket.\n4. For Bucket name, enter a Domain Name System (DNS)-compliant name for your bucket.\nThe bucket name must:\n\u2022 Be unique within the AWS account, the Outpost, and the AWS Region that the Outpost is\nhomed to.\n\u2022 Be 3\u201363 characters long.\n\u2022 Not contain uppercase characters.\n\u2022 Start with a lowercase letter or number.\nAfter you create the bucket, you can't change its name. For information about naming\nbuckets, see General purpose bucket naming rules in the Amazon S3 User Guide.\nImportant\nAvoid including sensitive information such as account numbers in the bucket name.\nThe bucket name is visible in the URLs that point to the objects in the bucket.\n5. For Outpost, choose the Outpost where you want the bucket to reside.\n6. Under Bucket Versioning, set the S3 Versioning state for your S3 on Outposts bucket to one of\nthe following options:\n\u2022 Disable (default) \u2013 The bucket remains unversioned.\nCreate a bucket, an access point, and an endpoint API Version 2006-03-01 15",
      "start_idx": 48691,
      "end_idx": 50281,
      "metadata": {
        "num_sentences": 23,
        "num_words": 272,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "endpoint",
            "AWS Management Console",
            "DNS-compliant name",
            "S3 Versioning",
            "AWS Region",
            "bucket naming rules"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "Outposts buckets",
            "S3 Versioning",
            "DNS-compliant name"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Infrastructure Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides a step-by-step procedure for creating a bucket, access point, and endpoint in Amazon S3 on Outposts using the AWS Management Console. It includes details on bucket naming rules, versioning options, and configuration settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in Amazon S3 on Outposts?",
            "What are the naming rules for S3 buckets?",
            "What versioning options are available for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Outposts buckets",
          "S3 Versioning",
          "Amazon S3",
          "Outposts",
          "endpoint",
          "DNS-compliant name",
          "bucket naming rules",
          "bucket",
          "AWS Region",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_18",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Enable \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID.\nFor more information about S3 Versioning, see Managing S3 Versioning for your S3 on\nOutposts bucket.\n7. (Optional) Add any optional tags that you would like to associate with the Outposts bucket.\nYou can use tags to track criteria for individual projects or groups of projects, or to label your\nbuckets by using cost-allocation tags.\nBy default, all objects stored in your Outposts bucket are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose\nto store objects by using server-side encryption with customer-provided encryption keys (SSE-\nC). To change the encryption type, you must use the REST API, AWS Command Line Interface\n(AWS CLI), or AWS SDKs.\n8. In the Outposts access point settings section, enter the access point name.\nS3 on Outposts access points simplify managing data access at scale for shared datasets in\nS3 on Outposts. Access points are named network endpoints that are attached to Outposts\nbuckets that you can use to perform S3 object operations. For more information, see Access\npoints.\nAccess point names must be unique within the account for this Region and Outpost, and\ncomply with the access point restrictions and limitations.\n9. Choose the VPC for this Amazon S3 on Outposts access point.\nIf you don't have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide.\nA virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.\n10. (Optional for an existing VPC) Choose an Endpoint subnet for your endpoint.\nA subnet is a range of IP addresses in your VPC. If you don't have the subnet that you want,\nchoose Create subnet. For more information, see Networking for S3 on Outposts.\n11. (Optional for an existing VPC) Choose an Endpoint security group for your endpoint.\nCreate a bucket, an access point, and an endpoint API Version 2006-03-01 16",
      "start_idx": 50281,
      "end_idx": 52584,
      "metadata": {
        "num_sentences": 29,
        "num_words": 383,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Encryption",
              "Networking"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts bucket",
            "access point",
            "VPC",
            "server-side encryption"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "VPC",
            "SSE-S3",
            "SSE-C"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines how to configure Amazon S3 on Outposts, including enabling versioning, tagging buckets, setting encryption options, and configuring access points and networking settings within a VPC.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning on an Outposts bucket?",
            "What encryption options are available for S3 on Outposts?",
            "How can I configure access points for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "server-side encryption",
          "Outposts bucket",
          "SSE-C",
          "S3 Versioning",
          "Amazon S3",
          "SSE-S3",
          "VPC",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_19",
      "text": "\n\nAmazon S3 on Outposts User Guide\nA security group acts as a virtual firewall to control inbound and outbound traffic.\n12. (Optional for an existing VPC) Choose the Endpoint access type:\n\u2022 Private \u2013 To be used with the VPC.\n\u2022 Customer owned IP \u2013 To be used with a customer-owned IP address pool (CoIP pool) from\nwithin your on-premises network.\n13. (Optional) Specify the Outpost access point policy. The console automatically displays the\nAmazon Resource Name (ARN) for the access point, which you can use in the policy.\n14. Choose Create Outposts bucket.\nNote\nIt can take up to 5 minutes for your Outpost endpoint to be created and your bucket to\nbe ready to use. To configure additional bucket settings, choose View details.\nNext steps\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nAfter you create an S3 on Outposts bucket, access point, and endpoint, you can use the AWS CLI or\nSDK for Java to upload an object to your bucket. For more information, see Upload an object to an\nS3 on Outposts bucket.\nGetting started by using the AWS CLI and SDK for Java\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nNext steps API Version 2006-03-01 17",
      "start_idx": 52584,
      "end_idx": 54609,
      "metadata": {
        "num_sentences": 21,
        "num_words": 349,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup",
              "Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "security group",
            "VPC",
            "Outpost access point policy",
            "Amazon Resource Name (ARN)",
            "bucket",
            "data residency",
            "AWS CLI",
            "AWS SDK",
            "S3 Outposts storage class"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "VPC",
            "ARN",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and use Amazon S3 on Outposts, including creating buckets, managing access policies, and ensuring data residency compliance. It outlines procedural steps for setup and usage via AWS CLI and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What is the Outpost access point policy?",
            "How can I upload objects to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket",
          "S3 Outposts storage class",
          "Amazon S3 on Outposts",
          "data residency",
          "Amazon S3",
          "REST API",
          "AWS CLI",
          "security group",
          "ARN",
          "Outpost access point policy",
          "VPC",
          "Amazon Resource Name (ARN)",
          "AWS SDK",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_20",
      "text": "\n\nAmazon S3 on Outposts User Guide\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nTo get started with S3 on Outposts, you must create a bucket, an access point, and an endpoint.\nThen, you can upload objects to your bucket. The following examples show you how to get started\nwith S3 on Outposts by using the AWS CLI and SDK for Java. To get started by using the console,\nsee Getting started by using the AWS Management Console.\nTopics\n\u2022 Step 1: Create a bucket\n\u2022 Step 2: Create an access point\n\u2022 Step 3: Create an endpoint\n\u2022 Step 4: Upload an object to an S3 on Outposts bucket\nStep 1: Create a bucket\nThe following AWS CLI and SDK for Java examples show you how to create an S3 on Outposts\nbucket.\nAWS CLI\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your\nown information.\naws s3control create-bucket --bucket example-outposts-bucket --outpost-\nid op-01ac5d28a6a232904\nSDK for Java\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the SDK for Java.\nStep 1: Create a bucket API Version 2006-03-01 18",
      "start_idx": 54609,
      "end_idx": 56167,
      "metadata": {
        "num_sentences": 13,
        "num_words": 267,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "endpoint",
            "AWS CLI",
            "SDK for Java",
            "encryption",
            "tagging",
            "virtual private cloud"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "SDK for Java",
            "AWS Management Console",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "APIs"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts to create buckets, access points, and endpoints, and provides examples using the AWS CLI and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in Amazon S3 on Outposts?",
            "What tools can I use to interact with S3 on Outposts?",
            "What are the steps to upload an object to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "virtual private cloud",
          "Amazon S3 on Outposts",
          "SDK for Java",
          "S3 on Outposts",
          "Amazon S3",
          "tagging",
          "AWS CLI",
          "encryption",
          "Outposts",
          "endpoint",
          "REST API",
          "bucket",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_21",
      "text": "\n\nAmazon S3 on Outposts User Guide\nimport com.amazonaws.services.s3control.model.*;\npublic String createBucket(String bucketName) {\nCreateBucketRequest reqCreateBucket = new CreateBucketRequest()\n.withBucket(bucketName)\n.withOutpostId(OutpostId)\n.withCreateBucketConfiguration(new CreateBucketConfiguration());\nCreateBucketResult respCreateBucket =\ns3ControlClient.createBucket(reqCreateBucket);\nSystem.out.printf(\"CreateBucket Response: %s%n\", respCreateBucket.toString());\nreturn respCreateBucket.getBucketArn();\n}\nStep 2: Create an access point\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point.\nThese examples how you how to create an access point by using the AWS CLI and the SDK for Java.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nAWS CLI\nExample\nThe following AWS CLI example creates an access point for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control create-access-point --account-id 123456789012\n--name example-outposts-access-point --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\" --vpc-configuration VpcId=example-vpc-12345\nStep 2: Create an access point API Version 2006-03-01 19",
      "start_idx": 56167,
      "end_idx": 57789,
      "metadata": {
        "num_sentences": 10,
        "num_words": 190,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instruction"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "bucket",
            "AWS CLI",
            "SDK for Java",
            "CreateBucketRequest",
            "virtual-host-style addressing",
            "VpcId",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "SDK for Java",
            "Outposts bucket",
            "VpcId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create an Amazon S3 bucket on Outposts and configure an access point using AWS CLI and SDK for Java, with code examples provided.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on Amazon S3 Outposts?",
            "What is the process for configuring an access point for an Outposts bucket?",
            "How can I use AWS CLI to manage S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "virtual-host-style addressing",
          "Outposts bucket",
          "Amazon S3 on Outposts",
          "SDK for Java",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "Outposts",
          "CreateBucketRequest",
          "VpcId",
          "bucket",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_22",
      "text": "\n\nAmazon S3 on Outposts User Guide\nSDK for Java\nExample\nThe following SDK for Java example creates an access point for an Outposts bucket. To use this\nexample, replace the user input placeholders with your own information.\nimport com.amazonaws.services.s3control.model.*;\npublic String createAccessPoint(String bucketArn, String accessPointName) {\nCreateAccessPointRequest reqCreateAP = new CreateAccessPointRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withName(accessPointName)\n.withVpcConfiguration(new VpcConfiguration().withVpcId(\"vpc-12345\"));\nCreateAccessPointResult respCreateAP =\ns3ControlClient.createAccessPoint(reqCreateAP);\nSystem.out.printf(\"CreateAccessPoint Response: %s%n\", respCreateAP.toString());\nreturn respCreateAP.getAccessPointArn();\n}\nStep 3: Create an endpoint\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nThese examples show you how to create an endpoint by using the AWS CLI and the SDK for\nJava. For more information about the permissions required to create and manage endpoints, see\nPermissions for S3 on Outposts endpoints.\nStep 3: Create an endpoint API Version 2006-03-01 20",
      "start_idx": 57789,
      "end_idx": 59410,
      "metadata": {
        "num_sentences": 12,
        "num_words": 208,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Implementation",
              "Procedural Guidance"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access point",
            "Outposts bucket",
            "endpoint",
            "VPC",
            "AWS CLI",
            "SDK for Java",
            "permissions",
            "network requirements",
            "object operations"
          ],
          "entities": [
            "CreateAccessPointRequest",
            "VpcConfiguration",
            "CreateAccessPointResult",
            "S3ControlClient",
            "AccountId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of creating an access point for an Amazon S3 on Outposts bucket using the SDK for Java and outlines steps to create an endpoint for routing requests to access points.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an Amazon S3 on Outposts bucket?",
            "What are the steps to configure an endpoint for S3 on Outposts?",
            "What permissions are required to manage S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "permissions",
          "VpcConfiguration",
          "Outposts bucket",
          "Amazon S3 on Outposts",
          "SDK for Java",
          "network requirements",
          "CreateAccessPointRequest",
          "AccountId",
          "AWS CLI",
          "endpoint",
          "S3ControlClient",
          "object operations",
          "VPC",
          "CreateAccessPointResult",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_23",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAWS CLI\nExample\nThe following AWS CLI example creates an endpoint for an Outpost by using the VPC resource\naccess type. The VPC is derived from the subnet. To run this command, replace the user input\nplaceholders with your own information.\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1\nThe following AWS CLI example creates an endpoint for an Outpost by using the customer-\nowned IP address pool (CoIP pool) access type. To run this command, replace the user input\nplaceholders with your own information.\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1 --access-type CustomerOwnedIp --\ncustomer-owned-ipv4-pool ipv4pool-coip-12345678901234567\nSDK for Java\nExample\nThe following SDK for Java example creates an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information.\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointRequest;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointResult;\npublic void createEndpoint() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nCreateEndpointRequest createEndpointRequest = new CreateEndpointRequest()\n.withOutpostId(\"op-0d79779cef3c30a40\")\n.withSubnetId(\"subnet-8c7a57c5\")\n.withSecurityGroupId(\"sg-ab19e0d1\")\n.withAccessType(\"CustomerOwnedIp\")\n.withCustomerOwnedIpv4Pool(\"ipv4pool-coip-12345678901234567\");\nStep 3: Create an endpoint API Version 2006-03-01 21",
      "start_idx": 59410,
      "end_idx": 61140,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "AWS CLI",
              "SDK for Java"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Outposts",
            "endpoint",
            "Outpost ID",
            "subnet ID",
            "security group ID",
            "access type",
            "customer-owned IP",
            "Java SDK",
            "CoIP pool"
          ],
          "entities": [
            "AWS S3 Outposts",
            "AmazonS3OutpostsClientBuilder",
            "CreateEndpointRequest",
            "CreateEndpointResult",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for creating endpoints on Amazon S3 Outposts using AWS CLI and SDK for Java, including support for different access types such as VPC and customer-owned IP pools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for an Outpost using AWS CLI?",
            "What is the process for creating an endpoint with SDK for Java?",
            "What access types are supported when creating endpoints for S3 Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Computing]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "AWS S3 Outposts",
          "AmazonS3OutpostsClientBuilder",
          "CreateEndpointRequest",
          "CreateEndpointResult",
          "Amazon S3 Outposts",
          "customer-owned IP",
          "security group ID",
          "access type",
          "subnet ID",
          "API Version 2006-03-01",
          "CoIP pool",
          "AWS CLI",
          "endpoint",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_25",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNetworking for S3 on Outposts\nYou can use Amazon S3 on Outposts to store and retrieve objects on-premises for applications\nthat require local data access, data processing, and data residency. This section describes the\nnetworking requirements for accessing S3 on Outposts.\nTopics\n\u2022 Choosing your networking access type\n\u2022 Accessing your S3 on Outposts buckets and objects\n\u2022 Cross-account elastic network interfaces\nChoosing your networking access type\nYou can access S3 on Outposts from within a VPC or from your on-premises network. You\ncommunicate with your Outpost bucket by using an access point and endpoint connection. This\nconnection keeps traffic between your VPC and your S3 on Outposts buckets within the AWS\nnetwork. When you create an endpoint, you must specify the endpoint access type as either\nPrivate (for VPC routing) or CustomerOwnedIp (for a customer-owned IP address pool [CoIP\npool]).\n\u2022 Private (for VPC routing) \u2013 If you don't specify the access type, S3 on Outposts uses Private\nby default. With the Private access type, instances in your VPC don't require public IP addresses\nto communicate with resources in your Outpost. You can work with S3 on Outposts from within\na VPC. This type of endpoint is accessible from your on-premises network through direct VPC\nrouting. For more information, see Local gateway route tables in the AWS Outposts User Guide.\n\u2022 CustomerOwnedIp (for CoIP pool) \u2013 If you don't default to the Private access type and choose\nCustomerOwnedIp, you must specify an IP address range. You can use this access type to work\nwith S3 on Outposts from both your on-premises network and within a VPC. When accessing S3\non Outposts within a VPC, your traffic is limited to the bandwidth of the local gateway.\nAccessing your S3 on Outposts buckets and objects\nTo access your S3 on Outposts buckets and objects, you must have the following:\n\u2022 An access point for the VPC.\nChoosing your networking access type API Version 2006-03-01 23",
      "start_idx": 61707,
      "end_idx": 63709,
      "metadata": {
        "num_sentences": 16,
        "num_words": 330,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "VPC",
            "CustomerOwnedIp",
            "Private access type",
            "endpoint connection",
            "CoIP pool",
            "local gateway",
            "access point",
            "networking requirements",
            "Outpost bucket"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "VPC",
            "CustomerOwnedIp",
            "AWS network",
            "Local gateway route tables"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Networking",
          "secondary_categories": [
            "AWS Outposts",
            "Hybrid Cloud"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the networking requirements and access types for using Amazon S3 on Outposts, including Private and CustomerOwnedIp options for endpoint connections. It also outlines how to access S3 on Outposts buckets and objects from a VPC or on-premises network.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the networking requirements for Amazon S3 on Outposts?",
            "How do I choose between Private and CustomerOwnedIp access types?",
            "What is needed to access S3 on Outposts buckets and objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Networking]",
        "tf_idf_keywords": [
          "CustomerOwnedIp",
          "local gateway",
          "Outpost bucket",
          "Amazon S3 on Outposts",
          "AWS network",
          "networking requirements",
          "endpoint connection",
          "Private access type",
          "CoIP pool",
          "Local gateway route tables",
          "VPC",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_26",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 An endpoint for the same VPC.\n\u2022 An active connection between your Outpost and your AWS Region. For more information about\nhow to connect your Outpost to a Region, see Outpost connectivity to AWS Regions in the AWS\nOutposts User Guide.\nFor more information about accessing buckets and objects in S3 on Outposts, see Working with S3\non Outposts buckets and Working with S3 on Outposts objects.\nCross-account elastic network interfaces\nS3 on Outposts endpoints are named resources with Amazon Resource Names (ARNs). When these\nendpoints are created, AWS Outposts sets up multiple cross-account elastic network interfaces. S3\non Outposts cross-account elastic network interfaces are like other network interfaces with one\nexception: S3 on Outposts associates the cross-account elastic network interfaces to Amazon EC2\ninstances.\nThe S3 on Outposts Domain Name System (DNS) load balances your requests over the cross-\naccount elastic network interface. S3 on Outposts creates the cross-account elastic network\ninterface in your AWS account that is visible from the Network interfaces pane of the Amazon EC2\nconsole.\nFor endpoints that use the CoIP pool access type, S3 on Outposts allocates and associates IP\naddresses with the cross-account elastic network interface from the configured CoIP pool.\nManaging connections using cross-account elastic network interfaces API Version 2006-03-01 24",
      "start_idx": 63709,
      "end_idx": 65133,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Networking",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "elastic network interfaces",
            "cross-account",
            "Amazon Resource Names",
            "CoIP pool",
            "DNS load balancing",
            "AWS Region",
            "Outpost connectivity",
            "Amazon EC2",
            "endpoints"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2",
            "CoIP pool",
            "DNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Infrastructure"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 on Outposts User Guide explains the use of cross-account elastic network interfaces, DNS load balancing, and endpoint configuration for accessing S3 on Outposts resources. It also discusses IP address allocation from CoIP pools and connectivity requirements between Outposts and AWS Regions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are cross-account elastic network interfaces in S3 on Outposts?",
            "How does DNS load balancing work for S3 on Outposts?",
            "How are IP addresses allocated for endpoints using the CoIP pool?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Networking]",
        "tf_idf_keywords": [
          "Amazon Resource Names",
          "cross-account",
          "DNS load balancing",
          "S3 on Outposts",
          "DNS",
          "elastic network interfaces",
          "endpoints",
          "CoIP pool",
          "Amazon S3",
          "Outpost connectivity",
          "Amazon EC2",
          "AWS Region",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_27",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWorking with S3 on Outposts buckets\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You can use the same APIs\nand features on Outpost buckets as you do on Amazon S3, including access policies, encryption,\nand tagging. For more information, see What is Amazon S3 on Outposts?\nYou communicate with your Outpost buckets by using an access point and endpoint connection\nover a virtual private cloud (VPC). To access your S3 on Outposts buckets and objects, you must\nhave an access point for the VPC and an endpoint for the same VPC. For more information, see\nNetworking for S3 on Outposts.\nBuckets\nIn S3 on Outposts, bucket names are unique to an Outpost and require the AWS Region code for\nthe Region the Outpost is homed to, AWS account ID, Outpost ID, and the bucket name to identify\nthem.\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/bucket/bucket-name\nFor more information, see Resource ARNs for S3 on Outposts.\nAccess points\nAmazon S3 on Outposts supports virtual private cloud (VPC)-only access points as the only means\nto access your Outposts buckets.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nBuckets API Version 2006-03-01 25",
      "start_idx": 65133,
      "end_idx": 67048,
      "metadata": {
        "num_sentences": 15,
        "num_words": 308,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 buckets",
            "access points",
            "virtual private cloud",
            "endpoint connection",
            "data residency",
            "encryption",
            "tagging",
            "storage class",
            "resource ARNs"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "VPC",
            "S3 Outposts",
            "Resource ARNs"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide explains how to use Amazon S3 on Outposts to create and manage S3 buckets on AWS Outposts for local data storage and processing. It covers access methods, bucket naming conventions, and the use of access points for VPC-only connections.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What are the access requirements for S3 on Outposts?",
            "What is the naming convention for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "resource ARNs",
          "virtual private cloud",
          "Resource ARNs",
          "Amazon S3 on Outposts",
          "S3 buckets",
          "data residency",
          "endpoint connection",
          "tagging",
          "storage class",
          "access points",
          "encryption",
          "Amazon S3",
          "VPC",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_28",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe following example shows the ARN format that you use for S3 on Outposts access points. The\naccess point ARN includes the AWS Region code for the Region the Outpost is homed to, AWS\naccount ID, Outpost ID, and access point name.\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nEndpoints\nTo route requests to an S3 on Outposts access point, you must create and configure an S3 on\nOutposts endpoint. With S3 on Outposts endpoints, you can privately connect your VPC to your\nOutpost bucket. S3 on Outposts endpoints are virtual uniform resource identifiers (URIs) of the\nentry point to your S3 on Outposts bucket. They are horizontally scaled, redundant, and highly\navailable VPC components.\nEach virtual private cloud (VPC) on your Outpost can have one associated endpoint, and you can\nhave up to 100 endpoints per Outpost. You must create these endpoints to be able to access your\nOutpost buckets and perform object operations. Creating these endpoints also enables the API\nmodel and behaviors to be the same by allowing the same operations to work in S3 and S3 on\nOutposts.\nAPI operations on S3 on Outposts\nTo manage Outpost bucket API operations, S3 on Outposts hosts a separate endpoint that is\ndistinct from the Amazon S3 endpoint. This endpoint is s3-outposts.region.amazonaws.com.\nTo use Amazon S3 API operations, you must sign the bucket and objects using the correct ARN\nformat. You must pass ARNs to API operations so that Amazon S3 can determine whether the\nrequest is for Amazon S3 (s3-control.region.amazonaws.com) or for S3 on Outposts (s3-\noutposts.region.amazonaws.com). Based on the ARN format, S3 can then sign and route the\nrequest appropriately.\nWhenever a request is sent to the Amazon S3 control plane, the SDK extracts the components from\nthe ARN and includes the additional header x-amz-outpost-id, with the outpost-id value\nextracted from the ARN. The service name from the ARN is used to sign the request before it is\nrouted to the S3 on Outposts endpoint. This behavior applies to all API operations handled by the\ns3control client.\nEndpoints API Version 2006-03-01 26",
      "start_idx": 67048,
      "end_idx": 69216,
      "metadata": {
        "num_sentences": 18,
        "num_words": 345,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "ARN format",
            "access points",
            "endpoints",
            "VPC",
            "API operations",
            "x-amz-outpost-id",
            "bucket",
            "S3 control plane"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Region",
            "VPC",
            "Outpost bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on using Amazon S3 on Outposts, including ARN formats, endpoint configuration, and API operations for managing Outpost buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How do I configure an S3 on Outposts endpoint?",
            "What are the API operations for managing Outpost buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket",
          "Outpost bucket",
          "API operations",
          "S3 control plane",
          "S3 on Outposts",
          "x-amz-outpost-id",
          "endpoints",
          "Amazon S3",
          "access points",
          "Outposts",
          "VPC",
          "ARN format",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_30",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAPI S3 on Outposts parameter value\nPutAccessPointPolicy Access point name as ARN\nGetAccessPointPolicy Access point name as ARN\nDeleteAccessPointPolicy Access point name as ARN\nCreating and managing S3 on Outposts buckets\nFor more information about creating and managing S3 on Outposts buckets, see the following\ntopics.\nCreating an S3 on Outposts bucket\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nNote\nThe AWS account that creates the bucket owns it and is the only one that can commit\nactions to it. Buckets have configuration properties, such as Outpost, tag, default\nencryption, and access point settings. The access point settings include the virtual private\ncloud (VPC), the access point policy for accessing the objects in the bucket, and other\nmetadata. For more information, see S3 on Outposts specifications.\nIf you want to create a bucket that uses AWS PrivateLink to provide bucket and endpoint\nmanagement access through interface VPC endpoints in your virtual private cloud (VPC), see\nAWS PrivateLink for S3 on Outposts.\nCreating and managing S3 on Outposts buckets API Version 2006-03-01 28",
      "start_idx": 70158,
      "end_idx": 72131,
      "metadata": {
        "num_sentences": 13,
        "num_words": 317,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference",
              "Note"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "buckets",
            "access point",
            "endpoint",
            "VPC",
            "AWS PrivateLink",
            "encryption",
            "tagging",
            "storage class"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "S3 Outposts",
            "AWS PrivateLink",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "The document explains how to create and manage S3 buckets on AWS Outposts, including configuration properties, access policies, and integration with AWS tools and services.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What are the configuration properties for S3 on Outposts buckets?",
            "Can I use AWS PrivateLink with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "buckets",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "tagging",
          "storage class",
          "encryption",
          "Outposts",
          "endpoint",
          "AWS PrivateLink",
          "VPC",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_31",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe following examples show you how to create an S3 on Outposts bucket by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose Create Outposts bucket.\n4. For Bucket name, enter a Domain Name System (DNS)-compliant name for your bucket.\nThe bucket name must:\n\u2022 Be unique within the AWS account, the Outpost, and the AWS Region that the Outpost is\nhomed to.\n\u2022 Be 3\u201363 characters long.\n\u2022 Not contain uppercase characters.\n\u2022 Start with a lowercase letter or number.\nAfter you create the bucket, you can't change its name. For information about naming\nbuckets, see General purpose bucket naming rules in the Amazon S3 User Guide.\nImportant\nAvoid including sensitive information such as account numbers in the bucket name.\nThe bucket name is visible in the URLs that point to the objects in the bucket.\n5. For Outpost, choose the Outpost where you want the bucket to reside.\n6. Under Bucket Versioning, set the S3 Versioning state for your S3 on Outposts bucket to one of\nthe following options:\n\u2022 Disable (default) \u2013 The bucket remains unversioned.\n\u2022 Enable \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID.\nFor more information about S3 Versioning, see Managing S3 Versioning for your S3 on\nOutposts bucket.\nCreating a bucket API Version 2006-03-01 29",
      "start_idx": 72131,
      "end_idx": 73719,
      "metadata": {
        "num_sentences": 25,
        "num_words": 270,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Versioning",
            "DNS-compliant",
            "bucket name",
            "S3 Versioning"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Configuration Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide on how to create an S3 on Outposts bucket using the AWS Management Console, AWS CLI, or AWS SDK for Java, along with details on naming rules and versioning options.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts bucket?",
            "What are the naming rules for an S3 on Outposts bucket?",
            "How can I enable versioning for an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "DNS-compliant",
          "S3 Versioning",
          "Amazon S3",
          "AWS CLI",
          "Versioning",
          "Outposts",
          "AWS SDK for Java",
          "bucket",
          "bucket name"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_32",
      "text": "\n\nAmazon S3 on Outposts User Guide\n7. (Optional) Add any optional tags that you would like to associate with the Outposts bucket.\nYou can use tags to track criteria for individual projects or groups of projects, or to label your\nbuckets by using cost-allocation tags.\nBy default, all objects stored in your Outposts bucket are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose\nto store objects by using server-side encryption with customer-provided encryption keys (SSE-\nC). To change the encryption type, you must use the REST API, AWS Command Line Interface\n(AWS CLI), or AWS SDKs.\n8. In the Outposts access point settings section, enter the access point name.\nS3 on Outposts access points simplify managing data access at scale for shared datasets in\nS3 on Outposts. Access points are named network endpoints that are attached to Outposts\nbuckets that you can use to perform S3 object operations. For more information, see Access\npoints.\nAccess point names must be unique within the account for this Region and Outpost, and\ncomply with the access point restrictions and limitations.\n9. Choose the VPC for this Amazon S3 on Outposts access point.\nIf you don't have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide.\nA virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.\n10. (Optional for an existing VPC) Choose an Endpoint subnet for your endpoint.\nA subnet is a range of IP addresses in your VPC. If you don't have the subnet that you want,\nchoose Create subnet. For more information, see Networking for S3 on Outposts.\n11. (Optional for an existing VPC) Choose an Endpoint security group for your endpoint.\nA security group acts as a virtual firewall to control inbound and outbound traffic.\n12. (Optional for an existing VPC) Choose the Endpoint access type:\n\u2022 Private \u2013 To be used with the VPC.\n\u2022 Customer owned IP \u2013 To be used with a customer-owned IP address pool (CoIP pool) from\nwithin your on-premises network.\nCreating a bucket API Version 2006-03-01 30",
      "start_idx": 73719,
      "end_idx": 76075,
      "metadata": {
        "num_sentences": 30,
        "num_words": 393,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Encryption",
              "Networking"
            ]
          },
          "keywords": [
            "Outposts bucket",
            "server-side encryption",
            "access point",
            "VPC",
            "subnet",
            "security group",
            "Endpoint access type",
            "AWS CLI",
            "SSE-S3",
            "CoIP pool"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "VPC",
            "SSE-S3",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 on Outposts buckets, including encryption options, access point settings, and networking configurations such as VPCs, subnets, and security groups.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Outposts bucket?",
            "What encryption options are available for S3 on Outposts?",
            "How do I configure access points for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "server-side encryption",
          "Endpoint access type",
          "Outposts bucket",
          "Amazon S3",
          "CoIP pool",
          "AWS CLI",
          "Outposts",
          "SSE-S3",
          "security group",
          "VPC",
          "subnet",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_33",
      "text": "\n\nAmazon S3 on Outposts User Guide\n13. (Optional) Specify the Outpost access point policy. The console automatically displays the\nAmazon Resource Name (ARN) for the access point, which you can use in the policy.\n14. Choose Create Outposts bucket.\nNote\nIt can take up to 5 minutes for your Outpost endpoint to be created and your bucket to\nbe ready to use. To configure additional bucket settings, choose View details.\nUsing the AWS CLI\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your own\ninformation.\naws s3control create-bucket --bucket example-outposts-bucket --outpost-\nid op-01ac5d28a6a232904\nUsing the AWS SDK for Java\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the SDK for Java.\nimport com.amazonaws.services.s3control.model.*;\npublic String createBucket(String bucketName) {\nCreateBucketRequest reqCreateBucket = new CreateBucketRequest()\n.withBucket(bucketName)\n.withOutpostId(OutpostId)\n.withCreateBucketConfiguration(new CreateBucketConfiguration());\nCreateBucketResult respCreateBucket =\ns3ControlClient.createBucket(reqCreateBucket);\nSystem.out.printf(\"CreateBucket Response: %s%n\", respCreateBucket.toString());\nCreating a bucket API Version 2006-03-01 31",
      "start_idx": 76075,
      "end_idx": 77430,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "access point policy",
            "AWS CLI",
            "AWS SDK for Java",
            "CreateBucket",
            "Outpost endpoint",
            "ARN",
            "CreateBucketRequest",
            "CreateBucketConfiguration"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Tools",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an Amazon S3 bucket on Outposts using the AWS Console, AWS CLI, and AWS SDK for Java, with examples provided for each method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on Outposts using the AWS CLI?",
            "What is the process for configuring an Outpost access point policy?",
            "How can I use the AWS SDK for Java to create an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts bucket",
          "access point policy",
          "Amazon S3",
          "CreateBucket",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "CreateBucketConfiguration",
          "ARN",
          "CreateBucketRequest",
          "Outpost endpoint"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_34",
      "text": "\n\nAmazon S3 on Outposts User Guide\nreturn respCreateBucket.getBucketArn();\n}\nAdding tags for S3 on Outposts buckets\nYou can add tags for your Amazon S3 on Outposts buckets to track storage costs and other criteria\nfor individual projects or groups of projects.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can change its\ntags.\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose tags you want to edit.\n4. Choose the Properties tab.\n5. Under Tags, choose Edit.\n6. Choose Add new tag, and enter the Key and optional Value.\nAdd any tags that you would like to associate with an Outposts bucket to track other criteria\nfor individual projects or groups of projects.\n7. Choose Save changes.\nUsing the AWS CLI\nThe following AWS CLI example applies a tagging configuration to an S3 on Outposts bucket by\nusing a JSON document in the current folder that specifies tags (tagging.json). To use this\nexample, replace each user input placeholder with your own information.\nAdding tags API Version 2006-03-01 32",
      "start_idx": 77430,
      "end_idx": 78635,
      "metadata": {
        "num_sentences": 20,
        "num_words": 203,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts buckets",
            "tags",
            "AWS CLI",
            "AWS Management Console",
            "storage costs",
            "JSON document",
            "tagging configuration",
            "Properties tab",
            "Edit tags"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS Management Console",
            "tagging.json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Infrastructure Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to add and manage tags for Amazon S3 on Outposts buckets using the AWS Management Console or AWS CLI. Tags help track storage costs and organize projects effectively.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 on Outposts bucket?",
            "What steps are required to edit tags using the AWS Management Console?",
            "How do I apply a tagging configuration using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "tagging configuration",
          "AWS Management Console",
          "Outposts buckets",
          "storage costs",
          "Edit tags",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "Properties tab",
          "JSON document",
          "tags",
          "AWS Outposts",
          "tagging.json"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_35",
      "text": "\n\nAmazon S3 on Outposts User Guide\naws s3control put-bucket-tagging --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --tagging file://tagging.json\ntagging.json\n{\n\"TagSet\": [\n{\n\"Key\": \"organization\",\n\"Value\": \"marketing\"\n}\n]\n}\nThe following AWS CLI example applies a tagging configuration to an S3 on Outposts bucket\ndirectly from the command line.\naws s3control put-bucket-tagging --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --tagging 'TagSet=[{Key=organization,Value=marketing}]'\nFor more information about this command, see put-bucket-tagging in the AWS CLI Reference.\nManaging access to an Amazon S3 on Outposts bucket using a\nbucket policy\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nYou can update your bucket policy to manage access to your Amazon S3 on Outposts bucket. For\nmore information, see the following topics.\nTopics\n\u2022 Adding or editing a bucket policy for an Amazon S3 on Outposts bucket\n\u2022 Viewing the bucket policy for your Amazon S3 on Outposts bucket\nUsing bucket policies API Version 2006-03-01 33",
      "start_idx": 78635,
      "end_idx": 80220,
      "metadata": {
        "num_sentences": 10,
        "num_words": 220,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "Configuration",
              "Access Management"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "tagging configuration",
            "IAM policy",
            "AWS CLI",
            "access permissions",
            "TagSet",
            "bucket owner",
            "resource-based policy",
            "bucket policy size"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "IAM",
            "Outposts",
            "TagSet"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Access Management",
            "Command-Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to apply a tagging configuration and manage access to an Amazon S3 on Outposts bucket using bucket policies and AWS CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add a tagging configuration to an S3 on Outposts bucket?",
            "What is the size limit for an S3 bucket policy?",
            "How can I manage access to an S3 on Outposts bucket using bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "tagging configuration",
          "S3 on Outposts",
          "Amazon S3",
          "bucket owner",
          "AWS CLI",
          "bucket policy",
          "TagSet",
          "IAM",
          "Outposts",
          "IAM policy",
          "resource-based policy",
          "access permissions",
          "AWS Outposts",
          "bucket policy size"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_36",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Deleting the bucket policy for your Amazon S3 on Outposts bucket\n\u2022 Bucket policy examples\nAdding or editing a bucket policy for an Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nThe following topics show you how to update your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDK for Java.\nUsing the S3 console\nTo create or edit a bucket policy\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose bucket policy you want to edit.\n4. Choose the Permissions tab.\n5. In the Outposts bucket policy section, to create or edit new policy, choose Edit.\nYou can now add or edit the S3 on Outposts bucket policy. For more information, see Setting\nup IAM with S3 on Outposts.\nUsing the AWS CLI\nThe following AWS CLI example puts a policy on an Outposts bucket.\n1. Save the following bucket policy to a JSON file. In this example, the file is named\npolicy1.json. Replace the user input placeholders with your own information.\n{\n\"Version\":\"2012-10-17\",\nAdding a bucket policy API Version 2006-03-01 34",
      "start_idx": 80220,
      "end_idx": 81880,
      "metadata": {
        "num_sentences": 24,
        "num_words": 289,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "bucket policy",
            "IAM policy",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK",
            "permissions",
            "JSON file",
            "access control"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts bucket policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Policies",
            "AWS Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create, edit, or delete bucket policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, or AWS SDK for Java, including examples and best practices.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or edit a bucket policy for Amazon S3 on Outposts?",
            "What tools can I use to manage bucket policies for S3 on Outposts?",
            "What are the size limitations for bucket policies in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "permissions",
          "JSON file",
          "Outposts bucket",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "IAM",
          "AWS SDK for Java",
          "Outposts bucket policy",
          "IAM policy",
          "AWS SDK",
          "access control",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_37",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Id\":\"testBucketPolicy\",\n\"Statement\":[\n{\n\"Sid\":\"st1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\n}\n]\n}\n2. Submit the JSON file as part of the put-bucket-policy CLI command. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control put-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --policy file://policy1.json\nUsing the AWS SDK for Java\nThe following SDK for Java example puts a policy on an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void putBucketPolicy(String bucketArn) {\nString policy = \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"testBucketPolicy\\\",\n\\\"Statement\\\":[{\\\"Sid\\\":\\\"st1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"\" +\nAccountId+ \"\\\"},\\\"Action\\\":\\\"s3-outposts:*\\\",\\\"Resource\\\":\\\"\" + bucketArn + \"\\\"}]}\";\nPutBucketPolicyRequest reqPutBucketPolicy = new PutBucketPolicyRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withPolicy(policy);\nPutBucketPolicyResult respPutBucketPolicy =\ns3ControlClient.putBucketPolicy(reqPutBucketPolicy);\nAdding a bucket policy API Version 2006-03-01 35",
      "start_idx": 81880,
      "end_idx": 83249,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Line Usage",
              "SDK Integration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS CLI",
            "JSON",
            "policy file",
            "SDK for Java",
            "PutBucketPolicyRequest",
            "s3control",
            "ARN"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS SDK for Java",
            "PutBucketPolicyRequest",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for adding a policy to an Amazon S3 Outposts bucket using the AWS CLI and AWS SDK for Java, including code examples and command syntax.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add a bucket policy to an S3 Outposts bucket?",
            "What is the syntax for the AWS CLI put-bucket-policy command?",
            "How can I use the AWS SDK for Java to configure an Outposts bucket policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "JSON",
          "s3control",
          "Outposts bucket",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "AWS SDK for Java",
          "ARN",
          "policy file",
          "PutBucketPolicyRequest",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_38",
      "text": "\n\nAmazon S3 on Outposts User Guide\nSystem.out.printf(\"PutBucketPolicy Response: %s%n\",\nrespPutBucketPolicy.toString());\n}\nViewing the bucket policy for your Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nThe following topics show you how to view your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDK for Java.\nUsing the S3 console\nTo create or edit a bucket policy\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose permission you want to edit.\n4. Choose the Permissions tab.\n5. In the Outposts bucket policy section, you can review your existing bucket policy. For more\ninformation, see Setting up IAM with S3 on Outposts.\nUsing the AWS CLI\nThe following AWS CLI example gets a policy for an Outposts bucket. To run this command, replace\nthe user input placeholders with your own information.\naws s3control get-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nViewing a bucket policy API Version 2006-03-01 36",
      "start_idx": 83249,
      "end_idx": 84901,
      "metadata": {
        "num_sentences": 20,
        "num_words": 255,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "Instruction"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS CLI",
            "IAM policy",
            "permissions",
            "AWS SDK for Java",
            "S3 console",
            "resource-based policy",
            "bucket owner"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view and manage bucket policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, or AWS SDK for Java. It includes procedural steps and a code example for retrieving a bucket policy.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view the bucket policy for an Amazon S3 on Outposts bucket?",
            "What tools can I use to manage bucket policies in AWS?",
            "What are the size limitations for Amazon S3 bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "permissions",
          "S3 console",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "bucket owner",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "AWS SDK for Java",
          "IAM",
          "IAM policy",
          "resource-based policy",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_39",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a policy for an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void getBucketPolicy(String bucketArn) {\nGetBucketPolicyRequest reqGetBucketPolicy = new GetBucketPolicyRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nGetBucketPolicyResult respGetBucketPolicy =\ns3ControlClient.getBucketPolicy(reqGetBucketPolicy);\nSystem.out.printf(\"GetBucketPolicy Response: %s%n\",\nrespGetBucketPolicy.toString());\n}\nDeleting the bucket policy for your Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nThe following topics show you how to view your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console or AWS Command Line Interface (AWS CLI).\nUsing the S3 console\nTo delete a bucket policy\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose permission you want to edit.\n4. Choose the Permissions tab.\n5. In the Outposts bucket policy section, choose Delete.\n6. Confirm the deletion.\nDeleting a bucket policy API Version 2006-03-01 37",
      "start_idx": 84901,
      "end_idx": 86497,
      "metadata": {
        "num_sentences": 21,
        "num_words": 227,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Instruction"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS SDK for Java",
            "IAM",
            "permissions",
            "S3 console",
            "AWS CLI",
            "GetBucketPolicy",
            "Delete"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java",
            "GetBucketPolicyRequest",
            "IAM",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "S3 console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to get and delete bucket policies for Amazon S3 on Outposts using the AWS SDK for Java, the AWS Management Console, or the AWS CLI. It includes a code example and step-by-step instructions for policy deletion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a bucket policy for Amazon S3 on Outposts?",
            "What are the steps to delete a bucket policy using the S3 console?",
            "What is the purpose of a bucket policy in Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "permissions",
          "S3 console",
          "Delete",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "AWS SDK for Java",
          "IAM",
          "GetBucketPolicy",
          "GetBucketPolicyRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_40",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing the AWS CLI\nThe following example deletes the bucket policy for an S3 on Outposts bucket (s3-\noutposts:DeleteBucket) by using the AWS CLI. To run this command, replace the user input\nplaceholders with your own information.\naws s3control delete-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nBucket policy examples\nWith S3 on Outposts bucket policies, you can secure access to objects in your S3 on Outposts\nbuckets, so that only users with the appropriate permissions can access them. You can even prevent\nauthenticated users without the appropriate permissions from accessing your S3 on Outposts\nresources.\nThis section presents examples of typical use cases for S3 on Outposts bucket policies. To test\nthese policies, replace the user input placeholders with your own information (such as your\nbucket name).\nTo grant or deny permissions to a set of objects, you can use wildcard characters (*) in Amazon\nResource Names (ARNs) and other values. For example, you can control access to groups of objects\nthat begin with a common prefix or end with a given extension, such as .html.\nFor more information about AWS Identity and Access Management (IAM) policy language, see\nSetting up IAM with S3 on Outposts.\nNote\nWhen testing s3outposts permissions by using the Amazon S3 console, you must grant\nadditional permissions that the console requires, such as s3outposts:createendpoint,\ns3outposts:listendpoints, and so on.\nAdditional resources for creating bucket policies\n\u2022 For a list of the IAM policy actions, resources, and condition keys you can use when creating\nan S3 on Outposts bucket policy, see Actions, resources, and condition keys for Amazon S3 on\nOutposts.\nBucket policy examples API Version 2006-03-01 38",
      "start_idx": 86497,
      "end_idx": 88355,
      "metadata": {
        "num_sentences": 12,
        "num_words": 277,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "AWS CLI",
            "IAM policy",
            "permissions",
            "ARN",
            "wildcard characters",
            "authenticated users",
            "bucket name",
            "Outposts resources"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "IAM",
            "ARN",
            "S3 on Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a bucket policy for an S3 on Outposts bucket using the AWS CLI and provides examples of bucket policies for managing permissions and securing access to resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a bucket policy for an S3 on Outposts bucket?",
            "What are some example use cases for S3 on Outposts bucket policies?",
            "What permissions are required to test S3 on Outposts policies in the console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts resources",
          "permissions",
          "authenticated users",
          "S3 on Outposts",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "wildcard characters",
          "IAM",
          "ARN",
          "IAM policy",
          "bucket name"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_41",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 For guidance on creating your S3 on Outposts policy, see Adding or editing a bucket policy for an\nAmazon S3 on Outposts bucket.\nTopics\n\u2022 Managing access to an Amazon S3 on Outposts bucket based on specific IP addresses\nManaging access to an Amazon S3 on Outposts bucket based on specific IP\naddresses\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nRestrict access to specific IP addresses\nThe following example denies all users from performing any S3 on Outposts operations on objects\nin the specified buckets unless the request originates from the specified range of IP addresses.\nNote\nWhen restricting access to a specific IP address, make sure that you also specify which VPC\nendpoints, VPC source IP addresses, or external IP addresses can access the S3 on Outposts\nbucket. Otherwise, you might lose access to the bucket if your policy denies all users from\nperforming any s3outposts operations on objects in your S3 on Outposts bucket without\nthe proper permissions already in place.\nThis policy's Condition statement identifies 192.0.2.0/24 as the range of allowed IP version 4\n(IPv4) IP addresses.\nThe Condition block uses the NotIpAddress condition and the aws:SourceIp condition key,\nwhich is an AWS wide condition key. The aws:SourceIp condition key can only be used for public\nIP address ranges. For more information about these condition keys, see Actions, resources, and\ncondition keys for S3 on Outposts. The aws:SourceIp IPv4 values use standard CIDR notation.\nFor more information, see IAM JSON policy elements reference in the IAM User Guide.\nBucket policy examples API Version 2006-03-01 39",
      "start_idx": 88355,
      "end_idx": 90384,
      "metadata": {
        "num_sentences": 16,
        "num_words": 335,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Management",
              "Access Restriction"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "bucket policy",
            "IAM policy",
            "VPC endpoints",
            "aws:SourceIp",
            "NotIpAddress condition",
            "CIDR notation",
            "IP address restriction",
            "Condition block",
            "S3 operations"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "VPC",
            "aws:SourceIp",
            "Condition block"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Access Management",
          "secondary_categories": [
            "IAM Policies",
            "Network Security"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage access to an Amazon S3 on Outposts bucket by creating bucket policies that restrict access based on specific IP address ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I restrict access to an Amazon S3 on Outposts bucket using IP addresses?",
            "What is the correct way to configure a bucket policy for S3 on Outposts?",
            "What condition keys are used for IP-based access control in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Access Management]",
        "tf_idf_keywords": [
          "NotIpAddress condition",
          "IP address restriction",
          "S3 operations",
          "Amazon S3 on Outposts",
          "bucket policy",
          "IAM",
          "Condition block",
          "VPC",
          "IAM policy",
          "VPC endpoints",
          "CIDR notation",
          "aws:SourceIp"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_42",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWarning\nBefore using this S3 on Outposts policy, replace the 192.0.2.0/24 IP address range in\nthis example with an appropriate value for your use case. Otherwise, you'll lose the ability\nto access your bucket.\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"S3OutpostsPolicyId1\",\n\"Statement\": [\n{\n\"Sid\": \"IPAllow\",\n\"Effect\": \"Deny\",\n\"Principal\": \"*\",\n\"Action\": \"s3outposts:*\",\n\"Resource\": [\n\"arn:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\naccesspoint/EXAMPLE-ACCESS-POINT-NAME\"\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET\"\n],\n\"Condition\": {\n\"NotIpAddress\": {\n\"aws:SourceIp\": \"192.0.2.0/24\"\n}\n}\n}\n]\n}\nAllow both IPv4 and IPv6 addresses\nWhen you start using IPv6 addresses, we recommend that you update all of your organization's\npolicies with your IPv6 address ranges in addition to your existing IPv4 ranges. Doing this will help\nto make sure that the policies continue to work as you make the transition to IPv6.\nThe following S3 on Outposts example bucket policy shows how to mix IPv4 and IPv6 address\nranges to cover all of your organization's valid IP addresses. The example policy allows access to\nthe example IP addresses 192.0.2.1 and 2001:DB8:1234:5678::1 and denies access to the\naddresses 203.0.113.1 and 2001:DB8:1234:5678:ABCD::1.\nBucket policy examples API Version 2006-03-01 40",
      "start_idx": 90384,
      "end_idx": 91758,
      "metadata": {
        "num_sentences": 7,
        "num_words": 183,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Warning",
            "subtypes": [
              "Configuration",
              "Security"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "IPv4",
            "IPv6",
            "AWS",
            "Outposts",
            "access control",
            "IP address range",
            "policy update",
            "example policy"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IPv4",
            "IPv6",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure bucket policies for Amazon S3 on Outposts, including the use of IP address ranges and transitioning to IPv6. It provides examples and warnings to ensure proper access control.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an S3 on Outposts bucket policy?",
            "How can I mix IPv4 and IPv6 address ranges in a bucket policy?",
            "What precautions should I take when setting IP address ranges in S3 policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Warning] [Cloud Storage]",
        "tf_idf_keywords": [
          "IPv6",
          "IPv4",
          "S3 on Outposts",
          "IP address range",
          "policy update",
          "Amazon S3",
          "AWS Outposts",
          "bucket policy",
          "Outposts",
          "AWS",
          "access control",
          "example policy"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_43",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe aws:SourceIp condition key can only be used for public IP address ranges. The IPv6 values\nfor aws:SourceIp must be in standard CIDR format. For IPv6, we support using :: to represent\na range of 0s (for example, 2001:DB8:1234:5678::/64). For more information, see IP address\ncondition operators in the IAM User Guide.\nWarning\nReplace the IP address ranges in this example with appropriate values for your use case\nbefore using this S3 on Outposts policy. Otherwise, you might lose the ability to access\nyour bucket.\n{\n\"Id\": \"S3OutpostsPolicyId2\",\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"AllowIPmix\",\n\"Effect\": \"Allow\",\n\"Principal\": \"*\",\n\"Action\": \"s3outposts:*\",\n\"Resource\": [\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET\",\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-\nID/bucket/DOC-EXAMPLE-BUCKET/*\"\n],\n\"Condition\": {\n\"IpAddress\": {\n\"aws:SourceIp\": [\n\"192.0.2.0/24\",\n\"2001:DB8:1234:5678::/64\"\n]\n},\n\"NotIpAddress\": {\n\"aws:SourceIp\": [\n\"203.0.113.0/24\",\n\"2001:DB8:1234:5678:ABCD::/80\"\n]\n}\n}\n}\nBucket policy examples API Version 2006-03-01 41",
      "start_idx": 91758,
      "end_idx": 92911,
      "metadata": {
        "num_sentences": 7,
        "num_words": 141,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "aws:SourceIp",
            "CIDR format",
            "IPv6",
            "IAM",
            "bucket policy",
            "IpAddress",
            "NotIpAddress",
            "ARN"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "aws:SourceIp",
            "IAM User Guide",
            "ARN",
            "IPv6"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the usage of the aws:SourceIp condition key in Amazon S3 on Outposts bucket policies, including examples of CIDR formats for IPv6 and warnings about replacing IP ranges appropriately.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I configure a bucket policy for Amazon S3 on Outposts?",
            "What is the correct CIDR format for IPv6 in aws:SourceIp?",
            "What warnings should I consider when setting up S3 Outposts policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "IPv6",
          "IpAddress",
          "IAM User Guide",
          "CIDR format",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "IAM",
          "Outposts",
          "bucket policy",
          "ARN",
          "NotIpAddress",
          "aws:SourceIp"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_44",
      "text": "\n\nAmazon S3 on Outposts User Guide\n]\n}\nListing Amazon S3 on Outposts buckets\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about working with buckets in S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe following examples show you how to return a list of your S3 on Outposts buckets by using the\nAWS Management Console, AWS CLI, and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Under Outposts buckets, review your list of S3 on Outposts buckets.\nUsing the AWS CLI\nThe following AWS CLI example gets a list of buckets in an Outpost. To use this command, replace\neach user input placeholder with your own information. For more information about this\ncommand, see list-regional-buckets in the AWS CLI Reference.\naws s3control list-regional-buckets --account-id 123456789012 --outpost-\nid op-01ac5d28a6a232904\nListing buckets API Version 2006-03-01 42",
      "start_idx": 92911,
      "end_idx": 94745,
      "metadata": {
        "num_sentences": 18,
        "num_words": 297,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 buckets",
            "AWS Outposts",
            "local data access",
            "data residency",
            "storage class",
            "access point",
            "virtual private cloud",
            "AWS CLI",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "AWS CLI",
            "AWS SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list Amazon S3 buckets on AWS Outposts using various tools and APIs, including the AWS Management Console, AWS CLI, and AWS SDK for Java. It highlights the features of S3 on Outposts for local data storage and processing.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How do I list S3 buckets on AWS Outposts?",
            "What tools can I use to manage S3 on Outposts buckets?",
            "What is the AWS CLI command for listing buckets on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "virtual private cloud",
          "local data access",
          "Amazon S3 on Outposts",
          "S3 buckets",
          "data residency",
          "storage class",
          "Amazon S3",
          "AWS CLI",
          "AWS SDK",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_45",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a list of buckets in an Outpost. For more information, see\nListRegionalBuckets in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void listRegionalBuckets() {\nListRegionalBucketsRequest reqListBuckets = new ListRegionalBucketsRequest()\n.withAccountId(AccountId)\n.withOutpostId(OutpostId);\nListRegionalBucketsResult respListBuckets =\ns3ControlClient.listRegionalBuckets(reqListBuckets);\nSystem.out.printf(\"ListRegionalBuckets Response: %s%n\",\nrespListBuckets.toString());\n}\nGetting an S3 on Outposts bucket by using the AWS CLI and the\nSDK for Java\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nThe following examples show you how to get an S3 on Outposts bucket by using the AWS CLI and\nAWS SDK for Java.\nGetting a bucket API Version 2006-03-01 43",
      "start_idx": 94745,
      "end_idx": 96483,
      "metadata": {
        "num_sentences": 11,
        "num_words": 253,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "ListRegionalBuckets",
            "AWS CLI",
            "access point",
            "endpoint",
            "S3 Outposts storage class",
            "local data processing",
            "data residency"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "ListRegionalBucketsRequest",
            "AWS SDK for Java",
            "S3 Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java and AWS CLI to interact with Amazon S3 on Outposts, including listing buckets and retrieving data locally for applications requiring local processing and residency compliance.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How can I list buckets in an AWS Outpost using the AWS SDK for Java?",
            "What is the S3 Outposts storage class and its features?",
            "How do I access an S3 bucket on Outposts using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "ListRegionalBucketsRequest",
          "S3 Outposts storage class",
          "data residency",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "endpoint",
          "local data processing",
          "AWS Outposts",
          "ListRegionalBuckets",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_46",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\nWhen you're working with Amazon S3 on Outposts through the AWS CLI or AWS SDKs, you\nprovide the access point ARN for the Outpost in place of the bucket name. The access point\nARN takes the following form, where region is the AWS Region code for the Region that\nthe Outpost is homed to:\narn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-outposts-access-point\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nUsing the AWS CLI\nThe following S3 on Outposts example gets a bucket by using the AWS CLI. To use this command,\nreplace each user input placeholder with your own information. For more information about\nthis command, see get-bucket in the AWS CLI Reference.\naws s3control get-bucket --account-id 123456789012 --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\nUsing the AWS SDK for Java\nThe following S3 on Outposts example gets a bucket by using the SDK for Java. For more\ninformation, see GetBucket in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void getBucket(String bucketArn) {\nGetBucketRequest reqGetBucket = new GetBucketRequest()\n.withBucket(bucketArn)\n.withAccountId(AccountId);\nGetBucketResult respGetBucket = s3ControlClient.getBucket(reqGetBucket);\nSystem.out.printf(\"GetBucket Response: %s%n\", respGetBucket.toString());\n}\nGetting a bucket API Version 2006-03-01 44",
      "start_idx": 96483,
      "end_idx": 98007,
      "metadata": {
        "num_sentences": 9,
        "num_words": 195,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "access point ARN",
            "bucket",
            "get-bucket",
            "S3ControlClient",
            "API Version 2006-03-01",
            "Outpost",
            "Resource ARNs"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "access point ARN",
            "GetBucketRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts for retrieving bucket information using the AWS CLI and AWS SDK for Java, including the required access point ARN format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a bucket using Amazon S3 on Outposts?",
            "What is the format of the access point ARN for S3 on Outposts?",
            "How can I use the AWS SDK for Java to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "get-bucket",
          "Resource ARNs",
          "Amazon S3 on Outposts",
          "API Version 2006-03-01",
          "Outpost",
          "AWS CLI",
          "AWS SDK for Java",
          "S3ControlClient",
          "bucket",
          "GetBucketRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_47",
      "text": "\n\nAmazon S3 on Outposts User Guide\nDeleting your Amazon S3 on Outposts bucket\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about working with buckets in S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe AWS account that creates the bucket owns it and is the only one that can delete it.\nNote\n\u2022 Outposts buckets must be empty before they can be deleted.\nThe Amazon S3 console doesn't support S3 on Outposts object actions. To delete objects\nin an S3 on Outposts bucket, you must use the REST API, AWS CLI, or AWS SDKs.\n\u2022 Before you can delete an Outposts bucket, you must delete any Outposts access points\nfor the bucket. For more information, see Deleting an access point.\n\u2022 You cannot recover a bucket after it has been deleted.\nThe following examples show you how to delete an S3 on Outposts bucket by using the AWS\nManagement Console and AWS Command Line Interface (AWS CLI).\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\nDeleting your bucket API Version 2006-03-01 45",
      "start_idx": 98007,
      "end_idx": 99987,
      "metadata": {
        "num_sentences": 20,
        "num_words": 338,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Outposts buckets",
            "AWS CLI",
            "REST API",
            "access points",
            "encryption",
            "tagging",
            "data residency",
            "AWS Management Console",
            "deletion process"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to delete an Amazon S3 on Outposts bucket, including prerequisites such as emptying the bucket and deleting access points, and provides instructions using the AWS Management Console and AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an Amazon S3 on Outposts bucket?",
            "What are the prerequisites for deleting an Outposts bucket?",
            "Can I recover a bucket after deletion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Outposts buckets",
          "Amazon S3 on Outposts",
          "data residency",
          "deletion process",
          "tagging",
          "REST API",
          "AWS CLI",
          "access points",
          "encryption",
          "Amazon S3",
          "AWS SDKs",
          "VPC",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_48",
      "text": "\n\nAmazon S3 on Outposts User Guide\n3. Choose the bucket that you want to delete, and choose Delete.\n4. Confirm the deletion.\nUsing the AWS CLI\nThe following example deletes an S3 on Outposts bucket (s3-outposts:DeleteBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your own\ninformation.\naws s3control delete-bucket --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nWorking with Amazon S3 on Outposts access points\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nNote\nThe AWS account that creates the Outposts bucket owns it and is the only one that can\nassign access points to it.\nThe following sections describe how to create and manage access points for S3 on Outposts\nbuckets.\nTopics\n\u2022 Creating an S3 on Outposts access point\n\u2022 Using a bucket-style alias for your S3 on Outposts bucket access point\n\u2022 Viewing information about an access point configuration\n\u2022 View a list of your Amazon S3 on Outposts access points\nWorking with access points API Version 2006-03-01 46",
      "start_idx": 99987,
      "end_idx": 101530,
      "metadata": {
        "num_sentences": 14,
        "num_words": 239,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Conceptual",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "bucket",
            "AWS CLI",
            "delete-bucket",
            "GetObject",
            "PutObject",
            "virtual-host-style addressing",
            "access point configuration"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "access points",
            "S3 object operations",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an Amazon S3 on Outposts bucket using the AWS CLI and manage access points for accessing bucket data. It includes procedural steps, example commands, and conceptual details about access points.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an Amazon S3 on Outposts bucket using AWS CLI?",
            "What are access points in Amazon S3 on Outposts, and how do they work?",
            "How can I view or manage access points for my Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "virtual-host-style addressing",
          "GetObject",
          "Amazon S3 on Outposts",
          "PutObject",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "access points",
          "Outposts",
          "delete-bucket",
          "S3 object operations",
          "access point configuration",
          "bucket",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_49",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Deleting an access point\n\u2022 Adding or editing an access point policy\n\u2022 Viewing an access point policy for an S3 on Outposts access point\nCreating an S3 on Outposts access point\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following examples show you how to create an S3 on Outposts access point by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nNote\nThe AWS account that creates the Outposts bucket owns it and is the only one that can\nassign access points to it.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to create an Outposts access point for.\n4. Choose the Outposts access points tab.\n5. In the Outposts access points section, choose Create Outposts access point.\n6. In Outposts access point settings, enter a name for the access point, and then choose the\nvirtual private cloud (VPC) for the access point.\n7. If you want to add a policy for your access point, enter it in the Outposts access point policy\nsection.\nFor more information, see Setting up IAM with S3 on Outposts.\nCreating an access point API Version 2006-03-01 47",
      "start_idx": 101530,
      "end_idx": 103241,
      "metadata": {
        "num_sentences": 23,
        "num_words": 292,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step guide",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "bucket",
            "virtual-host-style addressing",
            "AWS CLI",
            "AWS SDK for Java",
            "IAM",
            "GetObject",
            "PutObject"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS CLI",
            "AWS SDK for Java",
            "IAM"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create and configure access points for Amazon S3 on Outposts buckets using the AWS Management Console, CLI, or SDK for Java. Access points simplify access management for shared datasets and are mandatory for accessing objects in Outposts buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an S3 on Outposts bucket?",
            "What are the steps to configure an access point policy?",
            "What tools can I use to manage S3 on Outposts access points?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "virtual-host-style addressing",
          "Outposts bucket",
          "GetObject",
          "PutObject",
          "Amazon S3",
          "AWS CLI",
          "IAM",
          "Outposts",
          "AWS SDK for Java",
          "bucket",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_50",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing the AWS CLI\nExample\nThe following AWS CLI example creates an access point for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control create-access-point --account-id 123456789012\n--name example-outposts-access-point --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\" --vpc-configuration VpcId=example-vpc-12345\nUsing the AWS SDK for Java\nExample\nThe following SDK for Java example creates an access point for an Outposts bucket. To use this\nexample, replace the user input placeholders with your own information.\nimport com.amazonaws.services.s3control.model.*;\npublic String createAccessPoint(String bucketArn, String accessPointName) {\nCreateAccessPointRequest reqCreateAP = new CreateAccessPointRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withName(accessPointName)\n.withVpcConfiguration(new VpcConfiguration().withVpcId(\"vpc-12345\"));\nCreateAccessPointResult respCreateAP =\ns3ControlClient.createAccessPoint(reqCreateAP);\nSystem.out.printf(\"CreateAccessPoint Response: %s%n\", respCreateAP.toString());\nreturn respCreateAP.getAccessPointArn();\n}\nUsing a bucket-style alias for your S3 on Outposts bucket access point\nWith S3 on Outposts, you must use access points to access any object in an Outposts bucket. Every\ntime you create an access point for a bucket, S3 on Outposts automatically generates an access\npoint alias. You can use this access point alias instead of an access point ARN for any data plane\nUsing a bucket-style alias for your access point API Version 2006-03-01 48",
      "start_idx": 103241,
      "end_idx": 104908,
      "metadata": {
        "num_sentences": 8,
        "num_words": 191,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CLI Example",
              "SDK Example",
              "Conceptual Explanation"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 on Outposts",
            "access point",
            "Outposts bucket",
            "bucket ARN",
            "access point alias",
            "VpcConfiguration",
            "CreateAccessPointRequest",
            "SDK for Java",
            "data plane"
          ],
          "entities": [
            "AWS CLI",
            "AWS SDK for Java",
            "S3 on Outposts",
            "access point ARN",
            "VpcConfiguration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 on Outposts",
          "secondary_categories": [
            "AWS CLI",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of creating an access point for an S3 on Outposts bucket using AWS CLI and AWS SDK for Java, along with an explanation of access point aliases.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an S3 on Outposts bucket?",
            "What is an access point alias in S3 on Outposts?",
            "How can I use AWS SDK for Java to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS S3 on Outposts]",
        "tf_idf_keywords": [
          "access point ARN",
          "VpcConfiguration",
          "Outposts bucket",
          "S3 on Outposts",
          "CreateAccessPointRequest",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI",
          "bucket ARN",
          "AWS SDK for Java",
          "data plane",
          "access point alias",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_51",
      "text": "\n\nAmazon S3 on Outposts User Guide\noperation. For example, you can use an access point alias to perform object-level operations such\nas PUT, GET, LIST, and more. For a list of these operations, see Amazon S3 API operations for\nmanaging objects.\nThe following examples show an ARN and access point alias for an access point named my-\naccess-point.\n\u2022 Access point ARN \u2013 arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/my-\naccess-point\n\u2022 Access point alias \u2013 my-access-\npo-o01ac5d28a6a232904e8xz5w8ijx1qzlbp3i3kuse10--op-s3\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the AWS General\nReference.\nFor more information about access point aliases, see the following topics.\nTopics\n\u2022 Access point aliases\n\u2022 Using an access point alias in an S3 on Outposts object operation\n\u2022 Limitations\nAccess point aliases\nAn access point alias is created within the same namespace as an S3 on Outposts bucket. When you\ncreate an access point, S3 on Outposts automatically generates an access point alias that cannot be\nchanged. An access point alias meets all the requirements of a valid S3 on Outposts bucket name\nand consists of the following parts:\naccess point name prefix-metadata--op-s3\nNote\nThe --op-s3 suffix is reserved for access point aliases, we recommend that you don't use\nit for bucket or access point names. For more information about S3 on Outposts bucket-\nnaming rules, see Working with S3 on Outposts buckets.\nUsing a bucket-style alias for your access point API Version 2006-03-01 49",
      "start_idx": 104908,
      "end_idx": 106448,
      "metadata": {
        "num_sentences": 11,
        "num_words": 235,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "ARN",
            "access point alias",
            "bucket name",
            "object operations",
            "namespace",
            "API operations",
            "limitations"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "access point alias",
            "AWS General Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains the usage of access point aliases in Amazon S3 on Outposts, including their structure, limitations, and examples of ARNs and aliases.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is an access point alias in Amazon S3 on Outposts?",
            "How is an access point alias structured?",
            "What are the limitations of using access point aliases?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS General Reference",
          "API operations",
          "Amazon S3",
          "Outposts",
          "ARN",
          "object operations",
          "limitations",
          "namespace",
          "bucket name",
          "AWS Outposts",
          "access point alias",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_52",
      "text": "\n\nAmazon S3 on Outposts User Guide\nFinding the access point alias\nThe following examples show you how to find an access point alias by using the Amazon S3\nconsole and the AWS CLI.\nExample : Find and copy an access point alias in the Amazon S3 console\nAfter you create an access point in the console, you can get the access point alias from the Access\nPoint alias column in the Access Points list.\nTo copy an access point alias\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. To copy the access point alias, do one of the following:\n\u2022 In the Access Points list, select the option button next to the access point name, and then\nchoose Copy Access Point alias.\n\u2022 Choose the access point name. Then, under Outposts access point overview, copy the\naccess point alias.\nExample : Create an access point by using the AWS CLI and find the access point alias in the\nresponse\nThe following AWS CLI example for the create-access-point command creates the access\npoint and returns the automatically generated access point alias. To run this command, replace the\nuser input placeholders with your own information.\naws s3control create-access-point --bucket example-outposts-bucket --name example-\noutposts-access-point --account-id 123456789012\n{\n\"AccessPointArn\":\n\"arn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-outposts-access-point\",\n\"Alias\": \"example-outp-o01ac5d28a6a232904e8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\nUsing a bucket-style alias for your access point API Version 2006-03-01 50",
      "start_idx": 106448,
      "end_idx": 108052,
      "metadata": {
        "num_sentences": 13,
        "num_words": 233,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "AWS CLI",
            "create-access-point",
            "access point alias",
            "bucket-style alias",
            "Outposts access points",
            "AccessPointArn",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AccessPointArn",
            "Outposts access points",
            "example-outposts-bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to find and copy an access point alias in Amazon S3 on Outposts using the AWS Management Console or AWS CLI. It provides step-by-step instructions and an example CLI command with placeholders for user input.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I find an access point alias in Amazon S3 on Outposts?",
            "What is the AWS CLI command to create an access point and retrieve its alias?",
            "Where can I locate the access point alias in the Amazon S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts access points",
          "AccessPointArn",
          "create-access-point",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "Outposts",
          "bucket-style alias",
          "example-outposts-bucket",
          "AWS Outposts",
          "access point alias",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_53",
      "text": "\n\nAmazon S3 on Outposts User Guide\nExample : Get an access point alias by using the AWS CLI\nThe following AWS CLI example for the get-access-point command returns information about\nthe specified access point. This information includes the access point alias. To run this command,\nreplace the user input placeholders with your own information.\naws s3control get-access-point --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --name example-outposts-access-point --account-id 123456789012\n{\n\"Name\": \"example-outposts-access-point\",\n\"Bucket\": \"example-outposts-bucket\",\n\"NetworkOrigin\": \"Vpc\",\n\"VpcConfiguration\": {\n\"VpcId\": \"vpc-01234567890abcdef\"\n},\n\"PublicAccessBlockConfiguration\": {\n\"BlockPublicAcls\": true,\n\"IgnorePublicAcls\": true,\n\"BlockPublicPolicy\": true,\n\"RestrictPublicBuckets\": true\n},\n\"CreationDate\": \"2022-09-18T17:49:15.584000+00:00\",\n\"Alias\": \"example-outp-o0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\nExample : List access points to find an access point alias by using the AWS CLI\nThe following AWS CLI example for the list-access-points command lists information about\nthe specified access point. This information includes the access point alias. To run this command,\nreplace the user input placeholders with your own information.\naws s3control list-access-points --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\n{\n\"AccessPointList\": [\n{\n\"Name\": \"example-outposts-access-point\",\n\"NetworkOrigin\": \"Vpc\",\nUsing a bucket-style alias for your access point API Version 2006-03-01 51",
      "start_idx": 108052,
      "end_idx": 109703,
      "metadata": {
        "num_sentences": 7,
        "num_words": 174,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CLI Command Usage",
              "Access Point Management"
            ]
          },
          "keywords": [
            "AWS CLI",
            "access point",
            "S3 Outposts",
            "bucket",
            "alias",
            "VpcConfiguration",
            "PublicAccessBlockConfiguration",
            "list-access-points",
            "get-access-point",
            "account-id"
          ],
          "entities": [
            "AWS CLI",
            "S3 Outposts",
            "VpcId",
            "PublicAccessBlockConfiguration",
            "CreationDate"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Access Point Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of using the AWS CLI to retrieve and list access point aliases for S3 Outposts buckets. It includes command syntax, placeholders, and sample outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an access point alias using the AWS CLI?",
            "What is the command to list access points for an S3 Outposts bucket?",
            "What information is included in the access point details?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "account-id",
          "VpcConfiguration",
          "PublicAccessBlockConfiguration",
          "Amazon S3",
          "AWS CLI",
          "alias",
          "get-access-point",
          "CreationDate",
          "VpcId",
          "bucket",
          "list-access-points",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_54",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"VpcConfiguration\": {\n\"VpcId\": \"vpc-01234567890abcdef\"\n},\n\"Bucket\": \"example-outposts-bucket\",\n\"AccessPointArn\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\",\n\"Alias\": \"example-outp-o0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\n]\n}\nUsing an access point alias in an S3 on Outposts object operation\nWhen adopting access points, you can use access point alias without requiring extensive code\nchanges.\nThis AWS CLI example shows a get-object operation for an S3 on Outposts bucket. This example\nuses the access point alias as the value for --bucket instead of the full access point ARN.\naws s3api get-object --bucket my-access-po-\no0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3 --key testkey sample-object.rtf\n{\n\"AcceptRanges\": \"bytes\",\n\"LastModified\": \"2020-01-08T22:16:28+00:00\",\n\"ContentLength\": 910,\n\"ETag\": \"\\\"00751974dc146b76404bb7290f8f51bb\\\"\",\n\"VersionId\": \"null\",\n\"ContentType\": \"text/rtf\",\n\"Metadata\": {}\n}\nLimitations\n\u2022 Aliases cannot be configured by customers.\n\u2022 Aliases cannot be deleted or modified or disabled on an access point.\n\u2022 You can't use an access point alias for S3 on Outposts control plane operations. For a list of S3 on\nOutposts control plane operations, see Amazon S3 Control API operations for managing buckets.\n\u2022 Aliases cannot be used in AWS Identity and Access Management (IAM) policies.\nUsing a bucket-style alias for your access point API Version 2006-03-01 52",
      "start_idx": 109703,
      "end_idx": 111214,
      "metadata": {
        "num_sentences": 9,
        "num_words": 187,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Limitations",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access point alias",
            "bucket",
            "ARN",
            "AWS CLI",
            "get-object",
            "limitations",
            "IAM policies",
            "control plane operations",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AccessPointArn",
            "VpcId",
            "Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts",
            "AWS Identity and Access Management"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use access point aliases with Amazon S3 on Outposts, including an example AWS CLI command and associated limitations of using aliases.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use an access point alias in an S3 on Outposts operation?",
            "What are the limitations of using access point aliases in S3 on Outposts?",
            "Can I use access point aliases in IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AccessPointArn",
          "control plane operations",
          "S3 on Outposts",
          "IAM policies",
          "Amazon S3 on Outposts",
          "AWS Identity and Access Management",
          "API Version 2006-03-01",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "ARN",
          "VpcId",
          "bucket",
          "limitations",
          "get-object"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_55",
      "text": "\n\nAmazon S3 on Outposts User Guide\nViewing information about an access point configuration\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following topics show you how to return configuration information for an S3 on Outposts\naccess point by using the AWS Management Console, AWS Command Line Interface (AWS CLI), and\nAWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Choose the Outposts access point that you want to view configuration details for.\n4. Under Outposts access point overview, review the access point configuration details.\nUsing the AWS CLI\nThe following AWS CLI example gets an access point for an Outposts bucket. Replace the user\ninput placeholders with your own information.\naws s3control get-access-point --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following SDK for Java example gets an access point for an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void getAccessPoint(String accessPointArn) {\nGetAccessPointRequest reqGetAP = new GetAccessPointRequest()\n.withAccountId(AccountId)\n.withName(accessPointArn);\nViewing access point configuration API Version 2006-03-01 53",
      "start_idx": 111214,
      "end_idx": 112946,
      "metadata": {
        "num_sentences": 18,
        "num_words": 235,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step guide",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "GetObject",
            "PutObject",
            "AWS CLI",
            "AWS SDK for Java",
            "virtual-host-style addressing",
            "access point configuration",
            "Outposts bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "access points"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to view the configuration details of an Amazon S3 on Outposts access point using the AWS Management Console, AWS CLI, or AWS SDK for Java, including code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view the configuration of an Amazon S3 on Outposts access point?",
            "What are the steps to retrieve access point details using AWS CLI?",
            "How do I use the AWS SDK for Java to get access point information?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "virtual-host-style addressing",
          "Outposts bucket",
          "GetObject",
          "S3 on Outposts",
          "PutObject",
          "Amazon S3",
          "access points",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "access point configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_56",
      "text": "\n\nAmazon S3 on Outposts User Guide\nGetAccessPointResult respGetAP = s3ControlClient.getAccessPoint(reqGetAP);\nSystem.out.printf(\"GetAccessPoint Response: %s%n\", respGetAP.toString());\n}\nView a list of your Amazon S3 on Outposts access points\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following topics show you how to return a list of your S3 on Outposts access points by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Under Outposts access points, review your list of S3 on Outposts access points.\nUsing the AWS CLI\nThe following AWS CLI example lists the access points for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control list-access-points --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nUsing the AWS SDK for Java\nThe following SDK for Java example lists the access points for an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void listAccessPoints(String bucketArn) {\nListing access points API Version 2006-03-01 54",
      "start_idx": 112946,
      "end_idx": 114612,
      "metadata": {
        "num_sentences": 16,
        "num_words": 232,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "AWS CLI",
            "AWS SDK for Java",
            "GetObject",
            "PutObject",
            "virtual-host-style addressing",
            "buckets",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage Amazon S3 on Outposts access points using the AWS Management Console, AWS CLI, and AWS SDK for Java, with examples provided for each method.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How can I list access points for an Outposts bucket?",
            "What tools can I use to manage Amazon S3 on Outposts access points?",
            "What are the steps to view Outposts access points in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "virtual-host-style addressing",
          "AWS Management Console",
          "buckets",
          "Outposts bucket",
          "GetObject",
          "PutObject",
          "Amazon S3",
          "API Version 2006-03-01",
          "access points",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_57",
      "text": "\n\nAmazon S3 on Outposts User Guide\nListAccessPointsRequest reqListAPs = new ListAccessPointsRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nListAccessPointsResult respListAPs = s3ControlClient.listAccessPoints(reqListAPs);\nSystem.out.printf(\"ListAccessPoints Response: %s%n\", respListAPs.toString());\n}\nDeleting an access point\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following examples show you how to delete an access point by using the AWS Management\nConsole and the AWS Command Line Interface (AWS CLI).\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. In the Outposts access points section, choose the Outposts access point that you want to\ndelete.\n4. Choose Delete.\n5. Confirm the deletion.\nUsing the AWS CLI\nThe following AWS CLI example deletes an Outposts access point. To run this command, replace\nthe user input placeholders with your own information.\naws s3control delete-access-point --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nDeleting an access point API Version 2006-03-01 55",
      "start_idx": 114612,
      "end_idx": 116186,
      "metadata": {
        "num_sentences": 18,
        "num_words": 204,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Access Points",
            "AWS CLI",
            "S3 Control API",
            "GetObject",
            "PutObject",
            "Bucket",
            "Virtual-host-style addressing",
            "Delete Access Point"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Access Points",
            "AWS CLI",
            "S3 Control API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Control API"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list and delete access points in Amazon S3 on Outposts using the AWS Management Console and AWS CLI, with code examples and step-by-step instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an access point in Amazon S3 on Outposts?",
            "What is the AWS CLI command to remove an Outposts access point?",
            "What are access points in Amazon S3 and how are they used?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Access Points",
          "GetObject",
          "PutObject",
          "Amazon S3",
          "AWS CLI",
          "Virtual-host-style addressing",
          "S3 Control API",
          "Outposts",
          "Delete Access Point",
          "Bucket",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_58",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAdding or editing an access point policy\nAccess points have distinct permissions and network controls that Amazon S3 on Outposts\napplies for any request that is made through that access point. Each access point enforces a\ncustomized access point policy that works in conjunction with the bucket policy that is attached to\nthe underlying bucket. For more information, see Access points.\nThe following topics show you how to add or edit the access point policy for your S3 on Outposts\naccess point by using the AWS Management Console, AWS Command Line Interface (AWS CLI), and\nAWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to edit the access point policy for.\n4. Choose the Outposts access points tab.\n5. In the Outposts access points section, choose the access point whose policy you want to edit,\nand choose Edit policy.\n6. Add or edit the policy in the Outposts access point policy section. For more information, see\nSetting up IAM with S3 on Outposts.\nUsing the AWS CLI\nThe following AWS CLI example puts a policy on an Outposts access point.\n1. Save the following access point policy to a JSON file. In this example, the file is named\nappolicy1.json. Replace the user input placeholders with your own information.\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"exampleAccessPointPolicy\",\n\"Statement\":[\n{\n\"Sid\":\"st1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\nAdding an access point policy API Version 2006-03-01 56",
      "start_idx": 116186,
      "end_idx": 117800,
      "metadata": {
        "num_sentences": 23,
        "num_words": 257,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step instructions",
              "Code example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point policy",
            "bucket policy",
            "IAM",
            "AWS CLI",
            "AWS SDK",
            "JSON",
            "permissions",
            "network controls"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "IAM",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add or edit an access point policy for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, and AWS SDK for Java, with step-by-step instructions and a code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit an access point policy for S3 on Outposts?",
            "What tools can I use to manage access point policies on S3 Outposts?",
            "How do I configure IAM for S3 on Outposts access points?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "permissions",
          "access point policy",
          "Outposts buckets",
          "Amazon S3",
          "AWS CLI",
          "IAM",
          "Outposts",
          "bucket policy",
          "AWS SDK for Java",
          "network controls",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_59",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point\n}\n]\n}\n2. Submit the JSON file as part of the put-access-point-policy CLI command. Replace the\nuser input placeholders with your own information.\naws s3control put-access-point-policy --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --policy file://appolicy1.json\nUsing the AWS SDK for Java\nThe following SDK for Java example puts a policy on an Outposts access point.\nimport com.amazonaws.services.s3control.model.*;\npublic void putAccessPointPolicy(String accessPointArn) {\nString policy = \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"testAccessPointPolicy\\\",\n\\\"Statement\\\":[{\\\"Sid\\\":\\\"st1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"\" +\nAccountId + \"\\\"},\\\"Action\\\":\\\"s3-outposts:*\\\",\\\"Resource\\\":\\\"\" + accessPointArn +\n\"\\\"}]}\";\nPutAccessPointPolicyRequest reqPutAccessPointPolicy = new\nPutAccessPointPolicyRequest()\n.withAccountId(AccountId)\n.withName(accessPointArn)\n.withPolicy(policy);\nPutAccessPointPolicyResult respPutAccessPointPolicy =\ns3ControlClient.putAccessPointPolicy(reqPutAccessPointPolicy);\nSystem.out.printf(\"PutAccessPointPolicy Response: %s%n\",\nrespPutAccessPointPolicy.toString());\nprintWriter.printf(\"PutAccessPointPolicy Response: %s%n\",\nrespPutAccessPointPolicy.toString());\n}\nAdding an access point policy API Version 2006-03-01 57",
      "start_idx": 117800,
      "end_idx": 119336,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Line Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point policy",
            "AWS CLI",
            "AWS SDK for Java",
            "put-access-point-policy",
            "policy JSON",
            "s3controlClient",
            "accessPointArn",
            "PutAccessPointPolicyRequest"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "PutAccessPointPolicyRequest",
            "s3ControlClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add an access point policy to an Amazon S3 Outposts access point using both the AWS CLI and AWS SDK for Java, including code examples and required JSON formatting.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS CLI to add an access point policy for Amazon S3 on Outposts?",
            "What is the required JSON format for an Outposts access point policy?",
            "How can I implement access point policies programmatically using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "s3controlClient",
          "s3ControlClient",
          "accessPointArn",
          "policy JSON",
          "access point policy",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "AWS Outposts",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "put-access-point-policy",
          "PutAccessPointPolicyRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_60",
      "text": "\n\nAmazon S3 on Outposts User Guide\nViewing an access point policy for an S3 on Outposts access point\nAccess points have distinct permissions and network controls that Amazon S3 on Outposts\napplies for any request that is made through that access point. Each access point enforces a\ncustomized access point policy that works in conjunction with the bucket policy that is attached to\nthe underlying bucket. For more information, see Access points.\nFor more information about working with access points in S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe following topics show you how to view your S3 on Outposts access point policy by using the\nAWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Choose the Outposts access point that you want to view the policy for.\n4. On the Permissions tab, review the S3 on Outposts access point policy.\n5. To edit the access point policy, see Adding or editing an access point policy.\nUsing the AWS CLI\nThe following AWS CLI example gets a policy for an Outposts access point. To run this command,\nreplace the user input placeholders with your own information.\naws s3control get-access-point-policy --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a policy for an Outposts access point.\nimport com.amazonaws.services.s3control.model.*;\npublic void getAccessPointPolicy(String accessPointArn) {\nGetAccessPointPolicyRequest reqGetAccessPointPolicy = new\nGetAccessPointPolicyRequest()\nViewing an access point policy API Version 2006-03-01 58",
      "start_idx": 119336,
      "end_idx": 121175,
      "metadata": {
        "num_sentences": 20,
        "num_words": 267,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point policy",
            "bucket policy",
            "AWS CLI",
            "AWS SDK for Java",
            "permissions",
            "console",
            "API",
            "GetAccessPointPolicyRequest"
          ],
          "entities": [
            "Amazon S3",
            "Outposts access point",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view and manage access point policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view an access point policy for S3 on Outposts?",
            "What tools can I use to manage S3 on Outposts access point policies?",
            "How do access point policies interact with bucket policies in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "permissions",
          "API",
          "access point policy",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "AWS SDK for Java",
          "Outposts access point",
          "GetAccessPointPolicyRequest",
          "console"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_61",
      "text": "\n\nAmazon S3 on Outposts User Guide\n.withAccountId(AccountId)\n.withName(accessPointArn);\nGetAccessPointPolicyResult respGetAccessPointPolicy =\ns3ControlClient.getAccessPointPolicy(reqGetAccessPointPolicy);\nSystem.out.printf(\"GetAccessPointPolicy Response: %s%n\",\nrespGetAccessPointPolicy.toString());\nprintWriter.printf(\"GetAccessPointPolicy Response: %s%n\",\nrespGetAccessPointPolicy.toString());\n}\nWorking with Amazon S3 on Outposts endpoints\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nAfter you create an endpoint, you can use the \u2018Status\u2019 field, to understand the state of the\nendpoint. If your Outposts is offline, it will return a CREATE_FAILED. You can check your service link\nconnection, delete the endpoint, and retry the create operation after your connection has resumed.\nFor a list of additional error codes, see below. For more information, see Endpoints.\nAPI Status Failed Reason Error Message - Failed Reason\nCode\nCreateEnd Create_Fa OutpostNotReachable Endpoint could not be created as\npoint iled the service link connection to your\nOutposts home Region is down. Check\nyour connection, delete the endpoint,\nand try again.\nCreateEnd Create_Fa InternalError Endpoint could not be created due\npoint iled to Internal Error. Please delete the\nendpoint and create again.\nWorking with endpoints API Version 2006-03-01 59",
      "start_idx": 121175,
      "end_idx": 123004,
      "metadata": {
        "num_sentences": 16,
        "num_words": 248,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "endpoint",
            "service link",
            "CREATE_FAILED",
            "error codes",
            "VPC",
            "object operations",
            "API"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "access point ARN",
            "service link connection",
            "Outposts home region",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and manage endpoints for Amazon S3 on Outposts, including handling errors such as CREATE_FAILED and troubleshooting service link connections.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for Amazon S3 on Outposts?",
            "What does the CREATE_FAILED error code mean in Amazon S3 on Outposts?",
            "How can I troubleshoot service link connection issues with Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "API",
          "CREATE_FAILED",
          "service link connection",
          "service link",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "Outposts home region",
          "Outposts",
          "endpoint",
          "error codes",
          "object operations",
          "VPC",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_62",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAPI Status Failed Reason Error Message - Failed Reason\nCode\nDeleteEnd Delete_Fa OutpostNotReachable Endpoint could not be deleted as\npoint iled the service link connection to your\nOutposts home Region is down. Check\nyour connection and please try again.\nDeleteEnd Delete_Fa InternalError Endpoint could not be deleted due to\npoint iled Internal Error. Please try again.\nFor more information about working with buckets on S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe following sections describe how to create and manage endpoints for S3 on Outposts.\nTopics\n\u2022 Creating an endpoint on an Outpost\n\u2022 Viewing a list of your Amazon S3 on Outposts endpoints\n\u2022 Deleting an Amazon S3 on Outposts endpoint\nCreating an endpoint on an Outpost\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nPermissions\nFor more information about the permissions that are required to create an endpoint, see\nPermissions for S3 on Outposts endpoints.\nWhen you create an endpoint, S3 on Outposts also creates a service-linked role in your AWS\naccount. For more information, see Using service-linked roles for Amazon S3 on Outposts.\nCreating an endpoint API Version 2006-03-01 60",
      "start_idx": 123004,
      "end_idx": 124698,
      "metadata": {
        "num_sentences": 16,
        "num_words": 273,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Error Handling",
              "Configuration",
              "Permissions"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "endpoint",
            "Outposts home region",
            "service link",
            "permissions",
            "service-linked role",
            "VPC",
            "object operations",
            "InternalError",
            "OutpostNotReachable"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Outposts home Region",
            "VPC",
            "AWS account",
            "service-linked role"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides guidance on creating, managing, and troubleshooting endpoints for Amazon S3 on Outposts, including permissions and error handling for failed operations.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements for creating an Amazon S3 on Outposts endpoint?",
            "How do I troubleshoot endpoint deletion errors in S3 on Outposts?",
            "What permissions are needed to create an endpoint for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS account",
          "permissions",
          "service-linked role",
          "service link",
          "Amazon S3 on Outposts",
          "Outposts home Region",
          "Outposts home region",
          "InternalError",
          "endpoint",
          "AWS",
          "VPC",
          "OutpostNotReachable",
          "object operations"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_63",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe following examples show you how to create an S3 on Outposts endpoint by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Choose the Outposts endpoints tab.\n4. Choose Create Outposts endpoint.\n5. Under Outpost, choose the Outpost to create this endpoint on.\n6. Under VPC, choose a VPC that does not yet have an endpoint and that also complies with the\nrules for Outposts endpoints.\nA virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.\nIf you don\u2019t have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide.\n7. Choose Create Outposts endpoint.\nUsing the AWS CLI\nExample\nThe following AWS CLI example creates an endpoint for an Outpost by using the VPC resource\naccess type. The VPC is derived from the subnet. To run this command, replace the user input\nplaceholders with your own information.\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1\nThe following AWS CLI example creates an endpoint for an Outpost by using the customer-\nowned IP address pool (CoIP pool) access type. To run this command, replace the user input\nplaceholders with your own information.\nCreating an endpoint API Version 2006-03-01 61",
      "start_idx": 124698,
      "end_idx": 126482,
      "metadata": {
        "num_sentences": 25,
        "num_words": 286,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC",
            "AWS CLI",
            "endpoint",
            "AWS SDK",
            "security group",
            "CoIP pool",
            "subnet",
            "access points"
          ],
          "entities": [
            "Amazon S3",
            "Outposts endpoint",
            "VPC",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an Amazon S3 on Outposts endpoint using the AWS Management Console, AWS CLI, or AWS SDK for Java, with detailed steps and examples provided.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts endpoint using the AWS Management Console?",
            "What are the prerequisites for creating an Outposts endpoint?",
            "Can I use the AWS CLI to create an Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "subnet",
          "AWS VPC",
          "Outposts endpoint",
          "Amazon S3",
          "CoIP pool",
          "AWS CLI",
          "access points",
          "Outposts",
          "endpoint",
          "AWS SDK for Java",
          "security group",
          "VPC",
          "AWS SDK",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_64",
      "text": "\n\nAmazon S3 on Outposts User Guide\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1 --access-type CustomerOwnedIp --\ncustomer-owned-ipv4-pool ipv4pool-coip-12345678901234567\nUsing the AWS SDK for Java\nExample\nThe following SDK for Java example creates an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information.\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointRequest;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointResult;\npublic void createEndpoint() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nCreateEndpointRequest createEndpointRequest = new CreateEndpointRequest()\n.withOutpostId(\"op-0d79779cef3c30a40\")\n.withSubnetId(\"subnet-8c7a57c5\")\n.withSecurityGroupId(\"sg-ab19e0d1\")\n.withAccessType(\"CustomerOwnedIp\")\n.withCustomerOwnedIpv4Pool(\"ipv4pool-coip-12345678901234567\");\n// Use .withAccessType and .withCustomerOwnedIpv4Pool only when the access type is\n// customer-owned IP address pool (CoIP pool)\nCreateEndpointResult createEndpointResult =\ns3OutpostsClient.createEndpoint(createEndpointRequest);\nSystem.out.println(\"Endpoint is created and its ARN is \" +\ncreateEndpointResult.getEndpointArn());\n}\nViewing a list of your Amazon S3 on Outposts endpoints\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nListing endpoints API Version 2006-03-01 62",
      "start_idx": 126482,
      "end_idx": 128402,
      "metadata": {
        "num_sentences": 6,
        "num_words": 193,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "create-endpoint",
            "Outpost ID",
            "subnet ID",
            "security group ID",
            "CustomerOwnedIp",
            "IPv4 pool",
            "AWS SDK for Java",
            "endpoint ARN",
            "VPC"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Outpost",
            "AWS SDK for Java",
            "CustomerOwnedIp",
            "endpoint ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an endpoint for Amazon S3 on Outposts using the AWS CLI and AWS SDK for Java, including code examples and configuration details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Amazon S3 on Outposts endpoint?",
            "What parameters are required for the create-endpoint command?",
            "How can I use the AWS SDK for Java to create an endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IPv4 pool",
          "CustomerOwnedIp",
          "create-endpoint",
          "Amazon S3 on Outposts",
          "security group ID",
          "endpoint ARN",
          "subnet ID",
          "Outpost",
          "AWS SDK for Java",
          "VPC",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_65",
      "text": "\n\nAmazon S3 on Outposts User Guide\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nThe following examples show you how to return a list of your S3 on Outposts endpoints by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. On the Outposts access points page, choose the Outposts endpoints tab.\n4. Under Outposts endpoints, you can view a list of your S3 on Outposts endpoints.\nUsing the AWS CLI\nThe following AWS CLI example lists the endpoints for the AWS Outposts resources that are\nassociated with your account. For more information about this command, see list-endpoints in the\nAWS CLI Reference.\naws s3outposts list-endpoints\nUsing the AWS SDK for Java\nThe following SDK for Java example lists the endpoints for an Outpost. For more information, see\nListEndpoints in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.ListEndpointsRequest;\nimport com.amazonaws.services.s3outposts.model.ListEndpointsResult;\npublic void listEndpoints() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nListEndpointsRequest listEndpointsRequest = new ListEndpointsRequest();\nListEndpointsResult listEndpointsResult =\ns3OutpostsClient.listEndpoints(listEndpointsRequest);\nSystem.out.println(\"List endpoints result is \" + listEndpointsResult);\n}\nListing endpoints API Version 2006-03-01 63",
      "start_idx": 128402,
      "end_idx": 130204,
      "metadata": {
        "num_sentences": 17,
        "num_words": 222,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "endpoints",
            "AWS CLI",
            "AWS SDK for Java",
            "S3 console",
            "ListEndpoints",
            "Outposts buckets",
            "network requirements",
            "list-endpoints"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts",
            "Amazon Simple Storage Service API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list Amazon S3 on Outposts endpoints using the AWS Management Console, AWS CLI, and AWS SDK for Java, including code examples and procedural steps.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list S3 on Outposts endpoints using the AWS CLI?",
            "What is the procedure to view Outposts endpoints in the S3 console?",
            "How do I use the AWS SDK for Java to list S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 console",
          "ListEndpoints",
          "Outposts buckets",
          "network requirements",
          "list-endpoints",
          "endpoints",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "Amazon Simple Storage Service API",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_66",
      "text": "\n\nAmazon S3 on Outposts User Guide\nDeleting an Amazon S3 on Outposts endpoint\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nThe following examples show you how to delete your S3 on Outposts endpoints by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. On the Outposts access points page, choose the Outposts endpoints tab.\n4. Under Outposts endpoints, choose the endpoint that you want to delete, and choose Delete.\nUsing the AWS CLI\nThe following AWS CLI example deletes an endpoint for an Outpost. To run this command, replace\nthe user input placeholders with your own information.\naws s3outposts delete-endpoint --endpoint-id example-endpoint-id --outpost-\nid op-01ac5d28a6a232904\nUsing the AWS SDK for Java\nThe following SDK for Java example deletes an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information.\nimport com.amazonaws.arn.Arn;\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.DeleteEndpointRequest;\npublic void deleteEndpoint(String endpointArnInput) {\nString outpostId = \"op-01ac5d28a6a232904\";\nDeleting an endpoint API Version 2006-03-01 64",
      "start_idx": 130204,
      "end_idx": 132144,
      "metadata": {
        "num_sentences": 20,
        "num_words": 272,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command-Line",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "endpoint",
            "Outposts buckets",
            "AWS CLI",
            "AWS SDK for Java",
            "virtual private cloud",
            "Outposts access points",
            "service link",
            "endpoint quotas",
            "delete-endpoint"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete Amazon S3 on Outposts endpoints using the AWS Management Console, AWS CLI, or AWS SDK for Java, including step-by-step instructions and code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Amazon S3 on Outposts endpoint?",
            "What are the steps to delete an endpoint using the AWS CLI?",
            "Is there a code example for deleting an endpoint with the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts access points",
          "virtual private cloud",
          "endpoint quotas",
          "delete-endpoint",
          "Outposts buckets",
          "Amazon S3 on Outposts",
          "service link",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "endpoint",
          "AWS SDK for Java",
          "VPC"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_68",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWorking with S3 on Outposts objects\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nObject ARNs use the following format, which includes the AWS Region that the Outpost is homed\nto, AWS account ID, Outpost ID, bucket name, and object key:\narn:aws:s3-outposts:us-west-2:123456789012:outpost/ op-01ac5d28a6a232904/bucket/amzn-\ns3-demo-bucket1/object/myobject\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nAPI Version 2006-03-01 66",
      "start_idx": 132760,
      "end_idx": 135302,
      "metadata": {
        "num_sentences": 17,
        "num_words": 401,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "bucket",
            "object ARNs",
            "AWS CLI",
            "data residency",
            "REST API",
            "encryption",
            "S3 Outposts"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "AWS Region",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "APIs and SDKs"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts allows users to create S3 buckets on AWS Outposts for local data storage and processing, using the same APIs and features as Amazon S3. It supports access points, ARNs, and tools like AWS CLI and REST API for object management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I access objects in an S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "Can I use the AWS Management Console to manage S3 on Outposts objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "AWS Management Console",
          "object ARNs",
          "data residency",
          "Amazon S3",
          "REST API",
          "access points",
          "AWS CLI",
          "Outposts",
          "encryption",
          "bucket",
          "AWS Region",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_69",
      "text": "\n\nAmazon S3 on Outposts User Guide\nTopics\n\u2022 Upload an object to an S3 on Outposts bucket\n\u2022 Copying an object in an Amazon S3 on Outposts bucket using the AWS SDK for Java\n\u2022 Getting an object from an Amazon S3 on Outposts bucket\n\u2022 Listing the objects in an Amazon S3 on Outposts bucket\n\u2022 Deleting objects in Amazon S3 on Outposts buckets\n\u2022 Using HeadBucket to determine if an S3 on Outposts bucket exists and you have access\npermissions\n\u2022 Performing and managing a multipart upload with the SDK for Java\n\u2022 Using presigned URLs for S3 on Outposts\n\u2022 Amazon S3 on Outposts with local Amazon EMR on Outposts\n\u2022 Authorization and authentication caching\nUpload an object to an S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nUpload an object API Version 2006-03-01 67",
      "start_idx": 135302,
      "end_idx": 137387,
      "metadata": {
        "num_sentences": 12,
        "num_words": 353,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Outpost bucket",
            "access points",
            "ARN",
            "AWS Region",
            "data-residency",
            "REST API",
            "AWS CLI",
            "AWS SDK",
            "multipart upload"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java",
            "AWS CLI",
            "Outpost ARN",
            "Amazon EMR on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform various operations on Amazon S3 on Outposts buckets, including uploading, copying, and managing objects using access points and AWS tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object to an S3 on Outposts bucket?",
            "What is the ARN format for access points in S3 on Outposts?",
            "Can I use the AWS Management Console to manage objects in an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "Outpost bucket",
          "Outpost ARN",
          "Amazon S3 on Outposts",
          "Amazon EMR on Outposts",
          "Amazon EMR",
          "REST API",
          "access points",
          "AWS CLI",
          "AWS SDK for Java",
          "ARN",
          "AWS SDK",
          "AWS Region",
          "data-residency"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_70",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe following AWS CLI and AWS SDK for Java examples show you how to upload an object to an S3\non Outposts bucket by using an access point.\nAWS CLI\nExample\nThe following example puts an object named sample-object.xml into an S3 on Outposts\nbucket (s3-outposts:PutObject) by using the AWS CLI. To use this command, replace each\nuser input placeholder with your own information. For more information about this\ncommand, see put-object in the AWS CLI Reference.\naws s3api put-object --bucket arn:aws:s3-\noutposts:Region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --key sample-object.xml --body sample-object.xml\nSDK for Java\nExample\nThe following example puts an object into an S3 on Outposts bucket by using the SDK for Java.\nTo use this example, replace each user input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ObjectMetadata;\nimport com.amazonaws.services.s3.model.PutObjectRequest;\nimport java.io.File;\npublic class PutObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString stringObjKeyName = \"*** String object key name ***\";\nString fileObjKeyName = \"*** File object key name ***\";\nString fileName = \"*** Path to file to upload ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nUpload an object API Version 2006-03-01 68",
      "start_idx": 137387,
      "end_idx": 139073,
      "metadata": {
        "num_sentences": 7,
        "num_words": 213,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Implementation"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "access point",
            "PutObject",
            "bucket",
            "object",
            "ARN",
            "metadata"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "Outposts",
            "PutObjectRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an object to an Amazon S3 on Outposts bucket using AWS CLI and SDK for Java, including code examples and required configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object to an S3 on Outposts bucket using AWS CLI?",
            "What is the process for using SDK for Java to interact with S3 on Outposts?",
            "What placeholders need to be replaced in the code examples provided?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "PutObjectRequest",
          "SDK for Java",
          "PutObject",
          "Amazon S3",
          "AWS CLI",
          "metadata",
          "Outposts",
          "ARN",
          "object",
          "bucket",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_71",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Upload a text string as a new object.\ns3Client.putObject(accessPointArn, stringObjKeyName, \"Uploaded String\nObject\");\n// Upload a file as a new object with ContentType and title specified.\nPutObjectRequest request = new PutObjectRequest(accessPointArn,\nfileObjKeyName, new File(fileName));\nObjectMetadata metadata = new ObjectMetadata();\nmetadata.setContentType(\"plain/text\");\nmetadata.addUserMetadata(\"title\", \"someTitle\");\nrequest.setMetadata(metadata);\ns3Client.putObject(request);\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nCopying an object in an Amazon S3 on Outposts bucket using\nthe AWS SDK for Java\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\nCopying an object API Version 2006-03-01 69",
      "start_idx": 139073,
      "end_idx": 140802,
      "metadata": {
        "num_sentences": 10,
        "num_words": 247,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "ARN",
            "ObjectMetadata",
            "AWS SDK for Java",
            "PutObjectRequest",
            "ContentType",
            "error response",
            "bucket"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts bucket",
            "access point ARN",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for uploading and copying objects in Amazon S3 on Outposts using the AWS SDK for Java, including handling metadata and error responses.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload objects to an Amazon S3 on Outposts bucket using Java?",
            "What is the ARN format for accessing S3 on Outposts buckets?",
            "How can I handle errors when interacting with Amazon S3 using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "Outposts bucket",
          "PutObjectRequest",
          "ContentType",
          "AWS Region",
          "Amazon S3",
          "Outposts",
          "AWS SDK for Java",
          "ARN",
          "bucket",
          "ObjectMetadata",
          "error response",
          "AWS Outposts",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_72",
      "text": "\n\nAmazon S3 on Outposts User Guide\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nThe following example shows you how to copy an object in an S3 on Outposts bucket by using the\nAWS SDK for Java.\nUsing the AWS SDK for Java\nThe following S3 on Outposts example copies an object into a new object in the same bucket by\nusing the SDK for Java. To use this example, replace the user input placeholders with your\nown information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.CopyObjectRequest;\npublic class CopyObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString sourceKey = \"*** Source object key ***\";\nString destinationKey = \"*** Destination object key ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Copy the object into a new object in the same bucket.\nUsing the AWS SDK for Java API Version 2006-03-01 70",
      "start_idx": 140802,
      "end_idx": 142695,
      "metadata": {
        "num_sentences": 11,
        "num_words": 266,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Outpost",
            "data-residency",
            "AWS SDK for Java",
            "access points",
            "REST API",
            "AWS CLI",
            "object storage",
            "CopyObjectRequest",
            "AmazonS3ClientBuilder"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "AWS CLI",
            "Outpost rack",
            "AmazonS3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to copy an object within an Amazon S3 on Outposts bucket, ensuring data residency compliance and leveraging access points.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I copy an object within an S3 on Outposts bucket using Java?",
            "What tools can I use to manage objects in Amazon S3 on Outposts?",
            "Does Amazon S3 on Outposts support data residency requirements?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CopyObjectRequest",
          "object storage",
          "Amazon S3 on Outposts",
          "Outpost rack",
          "AmazonS3",
          "Outpost",
          "REST API",
          "access points",
          "AWS CLI",
          "Amazon S3",
          "AWS SDK for Java",
          "AmazonS3ClientBuilder",
          "AWS Outposts",
          "data-residency"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_73",
      "text": "\n\nAmazon S3 on Outposts User Guide\nCopyObjectRequest copyObjectRequest = new CopyObjectRequest(accessPointArn,\nsourceKey, accessPointArn, destinationKey);\ns3Client.copyObject(copyObjectRequest);\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nGetting an object from an Amazon S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nThe following examples show you how to download (get) an object by using the AWS Command\nLine Interface (AWS CLI) and AWS SDK for Java.\nGetting an object API Version 2006-03-01 71",
      "start_idx": 142695,
      "end_idx": 144820,
      "metadata": {
        "num_sentences": 15,
        "num_words": 330,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access point ARN",
            "Outpost bucket",
            "data residency",
            "AWS CLI",
            "AWS SDK",
            "REST API",
            "Outpost ID",
            "object operations",
            "bucket alias"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "Outpost ID",
            "access point ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts to copy and retrieve objects using access points, with examples provided for AWS CLI and AWS SDK for Java. It emphasizes data residency compliance and operational restrictions for managing objects on Outposts.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I copy an object in an Amazon S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "How can I retrieve an object using AWS CLI or SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "Outpost bucket",
          "Amazon S3 on Outposts",
          "data residency",
          "REST API",
          "AWS CLI",
          "AWS SDK for Java",
          "bucket alias",
          "AWS SDK",
          "Outpost ID",
          "object operations"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_74",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing the AWS CLI\nThe following example gets an object named sample-object.xml from an S3 on Outposts\nbucket (s3-outposts:GetObject) by using the AWS CLI. To use this command, replace each\nuser input placeholder with your own information. For more information about this\ncommand, see get-object in the AWS CLI Reference.\naws s3api get-object --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point --key testkey sample-object.xml\nUsing the AWS SDK for Java\nThe following S3 on Outposts example gets an object by using the SDK for Java. To use this\nexample, replace each user input placeholder with your own information. For more\ninformation, see GetObject in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\npublic class GetObject {\npublic static void main(String[] args) throws IOException {\nString accessPointArn = \"*** access point ARN ***\";\nString key = \"*** Object key ***\";\nS3Object fullObject = null, objectPortion = null, headerOverrideObject = null;\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\nGetting an object API Version 2006-03-01 72",
      "start_idx": 144820,
      "end_idx": 146630,
      "metadata": {
        "num_sentences": 7,
        "num_words": 201,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "GetObject",
            "access point ARN",
            "object key",
            "S3 bucket",
            "API Reference",
            "credentials"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "GetObjectRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for retrieving objects from Amazon S3 on Outposts using the AWS CLI and AWS SDK for Java, including required placeholders and setup instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an object from an S3 on Outposts bucket using the AWS CLI?",
            "What code example demonstrates using the AWS SDK for Java to get an object from S3 on Outposts?",
            "What setup is needed to use AWS credentials for accessing S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 bucket",
          "API Reference",
          "access point ARN",
          "GetObjectRequest",
          "GetObject",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "AWS SDK for Java",
          "AmazonS3ClientBuilder",
          "object key",
          "credentials",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_76",
      "text": "\n\nAmazon S3 on Outposts User Guide\n}\nif (headerOverrideObject != null) {\nheaderOverrideObject.close();\n}\n}\n}\nprivate static void displayTextInputStream(InputStream input) throws IOException {\n// Read the text input stream one line at a time and display each line.\nBufferedReader reader = new BufferedReader(new InputStreamReader(input));\nString line = null;\nwhile ((line = reader.readLine()) != null) {\nSystem.out.println(line);\n}\nSystem.out.println();\n}\n}\nListing the objects in an Amazon S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nNote\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS\ninstalls an Outpost rack, your data stays local to your Outpost to meet data-residency\nrequirements. Your objects never leave your Outpost and are not in an AWS Region.\nBecause the AWS Management Console is hosted in-Region, you can't use the console\nListing objects API Version 2006-03-01 74",
      "start_idx": 148453,
      "end_idx": 150170,
      "metadata": {
        "num_sentences": 11,
        "num_words": 263,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "bucket",
            "access point",
            "ARN",
            "Outpost ID",
            "AWS Region",
            "data residency",
            "Outpost rack",
            "object operations",
            "access point alias"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Region",
            "ARN",
            "Outpost ID",
            "access point alias"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list objects in an Amazon S3 on Outposts bucket, including details about access points, ARNs, and data residency requirements. It also includes a code snippet for displaying text input streams.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How is data residency maintained with Amazon S3 on Outposts?",
            "How can I list objects in an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point alias",
          "Amazon S3 on Outposts",
          "data residency",
          "Outpost rack",
          "ARN",
          "object operations",
          "bucket",
          "AWS Region",
          "Outpost ID",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_77",
      "text": "\n\nAmazon S3 on Outposts User Guide\nto upload or manage objects in your Outpost. However, you can use the REST API, AWS\nCommand Line Interface (AWS CLI), and AWS SDKs to upload and manage your objects\nthrough your access points.\nThe following examples show you how to list the objects in an S3 on Outposts bucket using the\nAWS CLI and AWS SDK for Java.\nUsing the AWS CLI\nThe following example lists the objects in an S3 on Outposts bucket (s3-\noutposts:ListObjectsV2) by using the AWS CLI. To use this command, replace each user\ninput placeholder with your own information. For more information about this command, see\nlist-objects-v2 in the AWS CLI Reference.\naws s3api list-objects-v2 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nNote\nWhen using this action with Amazon S3 on Outposts through the AWS SDKs, you provide\nthe Outposts access point ARN in place of the bucket name, in the following form:\narn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-Outposts-Access-Point. For more information about S3 on\nOutposts ARNs, see Resource ARNs for S3 on Outposts.\nUsing the AWS SDK for Java\nThe following S3 on Outposts example lists objects in a bucket by using the SDK for Java. To use\nthis example, replace each user input placeholder with your own information.\nImportant\nThis example uses ListObjectsV2, which is the latest revision of the ListObjects\nAPI operation. We recommend that you use this revised API operation for application\nListing objects API Version 2006-03-01 75",
      "start_idx": 150170,
      "end_idx": 151765,
      "metadata": {
        "num_sentences": 12,
        "num_words": 237,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "REST API",
            "AWS CLI",
            "AWS SDKs",
            "ListObjectsV2",
            "access point ARN",
            "bucket name",
            "list-objects-v2",
            "Resource ARNs",
            "SDK for Java"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "ListObjectsV2",
            "access point ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list objects in an Amazon S3 on Outposts bucket using the AWS CLI and AWS SDK for Java, with examples and guidance on required inputs and access point ARNs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list objects in an Amazon S3 on Outposts bucket?",
            "What is the correct ARN format for accessing S3 on Outposts?",
            "How do I use the AWS SDK for Java to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "Resource ARNs",
          "Amazon S3 on Outposts",
          "ListObjectsV2",
          "SDK for Java",
          "REST API",
          "AWS CLI",
          "list-objects-v2",
          "AWS SDK for Java",
          "AWS SDKs",
          "bucket name"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_78",
      "text": "\n\nAmazon S3 on Outposts User Guide\ndevelopment. For backward compatibility, Amazon S3 continues to support the prior\nversion of this API operation.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ListObjectsV2Request;\nimport com.amazonaws.services.s3.model.ListObjectsV2Result;\nimport com.amazonaws.services.s3.model.S3ObjectSummary;\npublic class ListObjectsV2 {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\nSystem.out.println(\"Listing objects\");\n// maxKeys is set to 2 to demonstrate the use of\n// ListObjectsV2Result.getNextContinuationToken()\nListObjectsV2Request req = new\nListObjectsV2Request().withBucketName(accessPointArn).withMaxKeys(2);\nListObjectsV2Result result;\ndo {\nresult = s3Client.listObjectsV2(req);\nfor (S3ObjectSummary objectSummary : result.getObjectSummaries()) {\nSystem.out.printf(\" - %s (size: %d)\\n\", objectSummary.getKey(),\nobjectSummary.getSize());\n}\n// If there are more than maxKeys keys in the bucket, get a\ncontinuation token\n// and list the next objects.\nListing objects API Version 2006-03-01 76",
      "start_idx": 151765,
      "end_idx": 153258,
      "metadata": {
        "num_sentences": 4,
        "num_words": 145,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "ListObjectsV2",
            "AWS SDK for Java",
            "access point ARN",
            "continuation token",
            "ListObjectsV2Request",
            "ListObjectsV2Result",
            "S3ObjectSummary",
            "credentials setup"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "ListObjectsV2Request",
            "ListObjectsV2Result",
            "S3ObjectSummary"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for listing objects in an Amazon S3 bucket using the AWS SDK for Java and the ListObjectsV2 API operation, including handling continuation tokens for paginated results.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list objects in an Amazon S3 bucket using AWS SDK for Java?",
            "What is the purpose of the continuation token in ListObjectsV2?",
            "How do I configure credentials for AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "credentials setup",
          "ListObjectsV2",
          "Amazon S3",
          "continuation token",
          "Outposts",
          "AWS SDK for Java",
          "ListObjectsV2Request",
          "ListObjectsV2Result",
          "AWS Outposts",
          "S3ObjectSummary"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_79",
      "text": "\n\nAmazon S3 on Outposts User Guide\nString token = result.getNextContinuationToken();\nSystem.out.println(\"Next Continuation Token: \" + token);\nreq.setContinuationToken(token);\n} while (result.isTruncated());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nDeleting objects in Amazon S3 on Outposts buckets\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nDeleting objects API Version 2006-03-01 77",
      "start_idx": 153258,
      "end_idx": 155253,
      "metadata": {
        "num_sentences": 14,
        "num_words": 307,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access points",
            "Outpost bucket",
            "ARN",
            "data residency",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "object operations",
            "Outpost rack"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDKs",
            "Outpost bucket",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete objects in Amazon S3 on Outposts buckets, including the use of access points and ARNs, while emphasizing data residency compliance and supported tools like AWS CLI and SDKs.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I delete objects in an Amazon S3 on Outposts bucket?",
            "What tools can I use to manage objects in S3 on Outposts?",
            "What is the ARN format for S3 on Outposts access points?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Outpost bucket",
          "Amazon S3 on Outposts",
          "data residency",
          "Outpost rack",
          "Amazon S3",
          "REST API",
          "access points",
          "AWS CLI",
          "AWS SDKs",
          "ARN",
          "object operations"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_80",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe following examples show you how to delete a single object or multiple objects in an S3 on\nOutposts bucket by using the AWS Command Line Interface (AWS CLI) and AWS SDK for Java.\nUsing the AWS CLI\nThe following examples show you how to delete a single object or multiple objects from an S3 on\nOutposts bucket.\ndelete-object\nThe following example deletes an object named sample-object.xml from an S3 on Outposts\nbucket (s3-outposts:DeleteObject) by using the AWS CLI. To use this command, replace\neach user input placeholder with your own information. For more information about this\ncommand, see delete-object in the AWS CLI Reference.\naws s3api delete-object --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --key sample-object.xml\ndelete-objects\nThe following example deletes two objects named sample-object.xml and test1.text\nfrom an S3 on Outposts bucket (s3-outposts:DeleteObject) by using the AWS CLI. To use\nthis command, replace each user input placeholder with your own information. For more\ninformation about this command, see delete-objects in the AWS CLI Reference.\naws s3api delete-objects --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --delete file://delete.json\ndelete.json\n{\n\"Objects\": [\n{\n\"Key\": \"test1.txt\"\n},\n{\n\"Key\": \"sample-object.xml\"\n}\n],\nDeleting objects API Version 2006-03-01 78",
      "start_idx": 155253,
      "end_idx": 156744,
      "metadata": {
        "num_sentences": 9,
        "num_words": 197,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Command Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "delete-object",
            "delete-objects",
            "bucket",
            "access point",
            "key",
            "delete.json",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts bucket",
            "access point"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for deleting objects from an Amazon S3 on Outposts bucket using AWS CLI commands and JSON configuration files.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a single object from an S3 on Outposts bucket using AWS CLI?",
            "How can I delete multiple objects from an S3 on Outposts bucket using a JSON file?",
            "What are the required parameters for the delete-object command in AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts bucket",
          "delete-object",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "Outposts",
          "delete.json",
          "AWS SDK for Java",
          "delete-objects",
          "bucket",
          "key",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_81",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Quiet\": false\n}\nUsing the AWS SDK for Java\nThe following examples show you how to delete a single object or multiple objects from an S3 on\nOutposts bucket.\nDeleteObject\nThe following S3 on Outposts example deletes an object in a bucket by using the SDK for Java.\nTo use this example, specify the access point ARN for the Outpost and the key name for the\nobject that you want to delete. For more information, see DeleteObject in the Amazon Simple\nStorage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.DeleteObjectRequest;\npublic class DeleteObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString keyName = \"*** key name ****\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\ns3Client.deleteObject(new DeleteObjectRequest(accessPointArn, keyName));\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\nDeleting objects API Version 2006-03-01 79",
      "start_idx": 156744,
      "end_idx": 158334,
      "metadata": {
        "num_sentences": 7,
        "num_words": 208,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "DeleteObject",
            "AWS SDK for Java",
            "access point ARN",
            "key name",
            "AmazonServiceException",
            "SdkClientException",
            "deleteObject",
            "credentials setup"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "DeleteObjectRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete objects from an Amazon S3 on Outposts bucket using the AWS SDK for Java, including code examples and error handling techniques.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an object from an Amazon S3 on Outposts bucket using Java?",
            "What error handling techniques are recommended for Amazon S3 operations in Java?",
            "What are the prerequisites for using the AWS SDK for Java with Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "deleteObject",
          "access point ARN",
          "SdkClientException",
          "credentials setup",
          "Amazon S3",
          "DeleteObject",
          "key name",
          "Outposts",
          "AWS SDK for Java",
          "AmazonServiceException",
          "AmazonS3ClientBuilder",
          "DeleteObjectRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_82",
      "text": "\n\nAmazon S3 on Outposts User Guide\ne.printStackTrace();\n}\n}\n}\nDeleteObjects\nThe following S3 on Outposts example uploads and then deletes objects in a bucket by using\nthe SDK for Java. To use this example, specify the access point ARN for the Outpost. For more\ninformation, see DeleteObjects in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.DeleteObjectsRequest;\nimport com.amazonaws.services.s3.model.DeleteObjectsRequest.KeyVersion;\nimport com.amazonaws.services.s3.model.DeleteObjectsResult;\nimport java.util.ArrayList;\npublic class DeleteObjects {\npublic static void main(String[] args) {\nString accessPointArn = \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Upload three sample objects.\nArrayList<KeyVersion> keys = new ArrayList<KeyVersion>();\nfor (int i = 0; i < 3; i++) {\nString keyName = \"delete object example \" + i;\ns3Client.putObject(accessPointArn, keyName, \"Object number \" + i + \"\nto be deleted.\");\nDeleting objects API Version 2006-03-01 80",
      "start_idx": 158334,
      "end_idx": 159831,
      "metadata": {
        "num_sentences": 6,
        "num_words": 158,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "DeleteObjects",
            "access point ARN",
            "SDK for Java",
            "AmazonS3",
            "DeleteObjectsRequest",
            "KeyVersion",
            "AWS credentials",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "DeleteObjectsRequest",
            "KeyVersion",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for Java to upload and delete objects in an Amazon S3 bucket on Outposts using an access point ARN.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete multiple objects in an Amazon S3 bucket on Outposts?",
            "What is the process for using an access point ARN with the AWS SDK for Java?",
            "What are the prerequisites for running the DeleteObjects example code?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "KeyVersion",
          "access point ARN",
          "AmazonS3",
          "SDK for Java",
          "DeleteObjects",
          "Amazon S3",
          "AWS credentials",
          "API Version 2006-03-01",
          "Outposts",
          "AmazonS3ClientBuilder",
          "AWS Outposts",
          "DeleteObjectsRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_83",
      "text": "\n\nAmazon S3 on Outposts User Guide\nkeys.add(new KeyVersion(keyName));\n}\nSystem.out.println(keys.size() + \" objects successfully created.\");\n// Delete the sample objects.\nDeleteObjectsRequest multiObjectDeleteRequest = new\nDeleteObjectsRequest(accessPointArn)\n.withKeys(keys)\n.withQuiet(false);\n// Verify that the objects were deleted successfully.\nDeleteObjectsResult delObjRes =\ns3Client.deleteObjects(multiObjectDeleteRequest);\nint successfulDeletes = delObjRes.getDeletedObjects().size();\nSystem.out.println(successfulDeletes + \" objects successfully\ndeleted.\");\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nUsing HeadBucket to determine if an S3 on Outposts bucket\nexists and you have access permissions\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\nUsing HeadBucket API Version 2006-03-01 81",
      "start_idx": 159831,
      "end_idx": 161534,
      "metadata": {
        "num_sentences": 12,
        "num_words": 238,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access points",
            "bucket",
            "objects",
            "DeleteObjectsRequest",
            "DeleteObjectsResult",
            "HeadBucket",
            "ARN",
            "AWS Region",
            "SdkClientException"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Region",
            "ARN",
            "SdkClientException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts for object operations, including creating and deleting objects, and verifying bucket access using the HeadBucket API. It includes code examples and error handling for common scenarios.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete multiple objects in an Amazon S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "How can I verify if an S3 on Outposts bucket exists and I have access permissions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SdkClientException",
          "HeadBucket",
          "Amazon S3 on Outposts",
          "objects",
          "Amazon S3",
          "access points",
          "DeleteObjectsResult",
          "Outposts",
          "ARN",
          "bucket",
          "AWS Region",
          "AWS Outposts",
          "DeleteObjectsRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_84",
      "text": "\n\nAmazon S3 on Outposts User Guide\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nNote\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS\ninstalls an Outpost rack, your data stays local to your Outpost to meet data-residency\nrequirements. Your objects never leave your Outpost and are not in an AWS Region.\nBecause the AWS Management Console is hosted in-Region, you can't use the console\nto upload or manage objects in your Outpost. However, you can use the REST API, AWS\nCommand Line Interface (AWS CLI), and AWS SDKs to upload and manage your objects\nthrough your access points.\nThe following AWS Command Line Interface (AWS CLI) and AWS SDK for Java examples show\nyou how to use the HeadBucket API operation to determine if an Amazon S3 on Outposts bucket\nexists and whether you have permission to access it. For more information, see HeadBucket in the\nAmazon Simple Storage Service API Reference.\nUsing the AWS CLI\nThe following S3 on Outposts AWS CLI example uses the head-bucket command to determine\nif a bucket exists and you have permissions to access it. To use this command, replace each user\ninput placeholder with your own information. For more information about this command, see\nhead-bucket in the AWS CLI Reference.\naws s3api head-bucket --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following S3 on Outposts example shows how to determine if a bucket exists and if you have\npermission to access it. To use this example, specify the access point ARN for the Outpost. For more\ninformation, see HeadBucket in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nUsing HeadBucket API Version 2006-03-01 82",
      "start_idx": 161534,
      "end_idx": 163456,
      "metadata": {
        "num_sentences": 15,
        "num_words": 290,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Outpost",
            "ARN",
            "AWS CLI",
            "AWS SDK",
            "HeadBucket API",
            "access point",
            "bucket permissions",
            "data residency",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "HeadBucket",
            "Outpost rack"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts to manage object data locally, with examples for determining bucket existence and permissions using AWS CLI and AWS SDK for Java. It emphasizes data residency compliance and outlines limitations of the AWS Management Console for this service.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I check if a bucket exists in Amazon S3 on Outposts?",
            "What tools can I use to manage objects in Amazon S3 on Outposts?",
            "Why can't I use the AWS Management Console for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "HeadBucket",
          "Amazon S3 on Outposts",
          "data residency",
          "Outpost rack",
          "S3 on Outposts",
          "Outpost",
          "REST API",
          "AWS CLI",
          "HeadBucket API",
          "Amazon S3",
          "AWS SDK for Java",
          "ARN",
          "AWS SDK",
          "bucket permissions",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_85",
      "text": "\n\nAmazon S3 on Outposts User Guide\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.HeadBucketRequest;\npublic class HeadBucket {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\ns3Client.headBucket(new HeadBucketRequest(accessPointArn));\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nPerforming and managing a multipart upload with the SDK for\nJava\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts resources and\nstore and retrieve objects on-premises for applications that require local data access, local data\nprocessing, and data residency. You can use S3 on Outposts through the AWS Management\nConsole, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information,\nsee What is Amazon S3 on Outposts?\nThe following examples show how you can use S3 on Outposts with the AWS SDK for Java to\nperform and manage a multipart upload.\nPerforming a multipart upload API Version 2006-03-01 83",
      "start_idx": 163456,
      "end_idx": 165101,
      "metadata": {
        "num_sentences": 7,
        "num_words": 220,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS Outposts",
            "multipart upload",
            "AWS SDK for Java",
            "HeadBucketRequest",
            "access point ARN",
            "local data processing",
            "data residency",
            "AWS CLI",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS SDK for Java",
            "HeadBucketRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts with the AWS SDK for Java for operations like checking bucket access and performing multipart uploads. It includes code examples and highlights the use of access point ARNs for local data processing and residency requirements.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I perform a HeadBucket operation using the AWS SDK for Java?",
            "What is the process for managing multipart uploads with Amazon S3 on Outposts?",
            "What are the prerequisites for using Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "multipart upload",
          "HeadBucketRequest",
          "data residency",
          "Amazon S3",
          "REST API",
          "AWS CLI",
          "AWS SDK for Java",
          "AmazonS3ClientBuilder",
          "local data processing",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_86",
      "text": "\n\nAmazon S3 on Outposts User Guide\nTopics\n\u2022 Perform a multipart upload of an object in an S3 on Outposts bucket\n\u2022 Copy a large object in an S3 on Outposts bucket by using multipart upload\n\u2022 List parts of an object in an S3 on Outposts bucket\n\u2022 Retrieve a list of in-progress multipart uploads in an S3 on Outposts bucket\nPerform a multipart upload of an object in an S3 on Outposts bucket\nThe following S3 on Outposts example initiates, uploads, and finishes a multipart upload of an\nobject to a bucket by using the SDK for Java. To use this example, replace each user input\nplaceholder with your own information. For more information, see Uploading an object using\nmultipart upload in the Amazon Simple Storage Service User Guide.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.*;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class MultipartUploadCopy {\npublic static void main(String[] args) {\nString accessPointArn = \"*** Source access point ARN ***\";\nString sourceObjectKey = \"*** Source object key ***\";\nString destObjectKey = \"*** Target object key ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Initiate the multipart upload.\nInitiateMultipartUploadRequest initRequest = new\nInitiateMultipartUploadRequest(accessPointArn, destObjectKey);\nPerform a multipart upload of an object in an S3 on Outposts bucket API Version 2006-03-01 84",
      "start_idx": 165101,
      "end_idx": 166832,
      "metadata": {
        "num_sentences": 6,
        "num_words": 231,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "multipart upload",
            "SDK for Java",
            "bucket",
            "object key",
            "access point ARN",
            "AWS credentials",
            "InitiateMultipartUploadRequest",
            "AmazonS3ClientBuilder"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SDK for Java",
            "AWS credentials",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform a multipart upload of an object to an Amazon S3 on Outposts bucket using the SDK for Java, including initiating, uploading, and completing the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload in an S3 on Outposts bucket?",
            "What are the steps to initiate and complete a multipart upload using the SDK for Java?",
            "What code is needed to set up AWS credentials for an S3 multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "multipart upload",
          "object key",
          "SDK for Java",
          "InitiateMultipartUploadRequest",
          "Amazon S3",
          "AWS credentials",
          "Outposts",
          "AmazonS3ClientBuilder",
          "bucket"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_88",
      "text": "\n\nAmazon S3 on Outposts User Guide\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n// This is a helper function to construct a list of ETags.\nprivate static List<PartETag> getETags(List<CopyPartResult> responses) {\nList<PartETag> etags = new ArrayList<PartETag>();\nfor (CopyPartResult response : responses) {\netags.add(new PartETag(response.getPartNumber(), response.getETag()));\n}\nreturn etags;\n}\nCopy a large object in an S3 on Outposts bucket by using multipart\nupload\nThe following S3 on Outposts example uses the SDK for Java to copy an object in a bucket. To use\nthis example, replace each user input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.*;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class MultipartUploadCopy {\npublic static void main(String[] args) {\nString accessPointArn = \"*** Source access point ARN ***\";\nString sourceObjectKey = \"*** Source object key ***\";\nString destObjectKey = \"*** Target object key ***\";\ntry {\nCopy a large object in an S3 on Outposts bucket by using multipart upload API Version 2006-03-01 86",
      "start_idx": 168549,
      "end_idx": 170113,
      "metadata": {
        "num_sentences": 7,
        "num_words": 209,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "multipart upload",
            "ETags",
            "CopyPartResult",
            "AmazonServiceException",
            "SdkClientException",
            "access point ARN",
            "Java SDK",
            "bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AmazonServiceException",
            "SdkClientException",
            "ETags"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to copy large objects in an Amazon S3 on Outposts bucket using multipart upload with the Java SDK, including error handling and helper functions for processing ETags.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I copy a large object in an Amazon S3 on Outposts bucket using multipart upload?",
            "What are common exceptions when working with Amazon S3 on Outposts in Java?",
            "How do I construct a list of ETags in Java for multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "multipart upload",
          "SdkClientException",
          "bucket",
          "CopyPartResult",
          "Amazon S3",
          "Outposts",
          "AmazonServiceException",
          "Java SDK",
          "ETags"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_90",
      "text": "\n\nAmazon S3 on Outposts User Guide\n// Complete the upload request to concatenate all uploaded parts and make\nthe copied object available.\nCompleteMultipartUploadRequest completeRequest = new\nCompleteMultipartUploadRequest(\naccessPointArn,\ndestObjectKey,\ninitResult.getUploadId(),\ngetETags(copyResponses));\ns3Client.completeMultipartUpload(completeRequest);\nSystem.out.println(\"Multipart copy complete.\");\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n// This is a helper function to construct a list of ETags.\nprivate static List<PartETag> getETags(List<CopyPartResult> responses) {\nList<PartETag> etags = new ArrayList<PartETag>();\nfor (CopyPartResult response : responses) {\netags.add(new PartETag(response.getPartNumber(), response.getETag()));\n}\nreturn etags;\n}\n}\nList parts of an object in an S3 on Outposts bucket\nThe following S3 on Outposts example lists the parts of an object in a bucket by using the SDK for\nJava. To use this example, replace each user input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.*;\nimport java.util.List;\nList parts of an object in an S3 on Outposts bucket API Version 2006-03-01 88",
      "start_idx": 171847,
      "end_idx": 173479,
      "metadata": {
        "num_sentences": 9,
        "num_words": 197,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CompleteMultipartUploadRequest",
            "ETag",
            "CopyPartResult",
            "Multipart Upload",
            "AmazonServiceException",
            "SdkClientException",
            "PartETag",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "CompleteMultipartUploadRequest",
            "AmazonServiceException",
            "SdkClientException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to complete a multipart upload and list object parts in an Amazon S3 on Outposts bucket using the AWS SDK for Java, including error handling examples.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I complete a multipart upload in Amazon S3 on Outposts?",
            "What are the error handling mechanisms for Amazon S3 operations?",
            "How can I list parts of an object in an S3 bucket using Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SdkClientException",
          "PartETag",
          "CopyPartResult",
          "Amazon S3",
          "API Version 2006-03-01",
          "ETag",
          "Outposts",
          "AmazonServiceException",
          "Multipart Upload",
          "CompleteMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_92",
      "text": "\n\nAmazon S3 on Outposts User Guide\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts\nbucket\nThe following S3 on Outposts example shows how to retrieve a list of the in-progress multipart\nuploads from an Outposts bucket by using the SDK for Java. To use this example, replace each\nuser input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ListMultipartUploadsRequest;\nimport com.amazonaws.services.s3.model.MultipartUpload;\nimport com.amazonaws.services.s3.model.MultipartUploadListing;\nimport java.util.List;\npublic class ListMultipartUploads {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Retrieve a list of all in-progress multipart uploads.\nListMultipartUploadsRequest allMultipartUploadsRequest = new\nListMultipartUploadsRequest(accessPointArn);\nMultipartUploadListing multipartUploadListing =\ns3Client.listMultipartUploads(allMultipartUploadsRequest);\nList<MultipartUpload> uploads =\nmultipartUploadListing.getMultipartUploads();\n// Display information about all in-progress multipart uploads.\nSystem.out.println(uploads.size() + \" multipart upload(s) in progress.\");\nfor (MultipartUpload u : uploads) {\nSystem.out.println(\"Upload in progress: Key = \\\"\" + u.getKey() + \"\\\",\nid = \" + u.getUploadId());\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts bucket API Version 2006-03-01 90",
      "start_idx": 174798,
      "end_idx": 176634,
      "metadata": {
        "num_sentences": 6,
        "num_words": 191,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "multipart uploads",
            "SDK for Java",
            "access point ARN",
            "AmazonS3ClientBuilder",
            "ListMultipartUploadsRequest",
            "MultipartUpload",
            "MultipartUploadListing",
            "AWS credentials"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "SDK for Java",
            "AmazonS3ClientBuilder",
            "MultipartUpload"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This guide demonstrates how to retrieve a list of in-progress multipart uploads in an S3 on Outposts bucket using the AWS SDK for Java, including an example code snippet.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list in-progress multipart uploads in an S3 on Outposts bucket?",
            "What is the Java SDK code example for listing multipart uploads?",
            "What are the prerequisites for using Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "Outposts bucket",
          "SDK for Java",
          "Amazon S3",
          "AWS credentials",
          "AWS Outposts",
          "AmazonS3ClientBuilder",
          "MultipartUpload",
          "MultipartUploadListing",
          "ListMultipartUploadsRequest",
          "multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_93",
      "text": "\n\nAmazon S3 on Outposts User Guide\n}\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nUsing presigned URLs for S3 on Outposts\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects.\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works.\nLimiting presigned URL capabilities\nThe capabilities of a presigned URL are limited by the permissions of the user who created it. In\nessence, presigned URLs are bearer tokens that grant access to those who possess them. As such,\nwe recommend that you protect them appropriately.\nAWS Signature Version 4 (SigV4)\nTo enforce specific behavior when presigned URL requests are authenticated by using AWS\nSignature Version 4 (SigV4), you can use condition keys in bucket policies and access point policies.\nFor example, you can create a bucket policy that uses the s3-outposts:signatureAge condition\nto deny any Amazon S3 on Outposts presigned URL request on objects in the example-outpost-\nUsing presigned URLs API Version 2006-03-01 91",
      "start_idx": 176634,
      "end_idx": 178619,
      "metadata": {
        "num_sentences": 13,
        "num_words": 332,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Security",
              "Configuration"
            ]
          },
          "keywords": [
            "presigned URL",
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS SDKs",
            "AWS CLI",
            "virtual private cloud",
            "SigV4",
            "condition keys",
            "signatureAge"
          ],
          "entities": [
            "Amazon S3",
            "AWS Signature Version 4",
            "Outposts",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This document explains how to use presigned URLs to grant time-limited access to objects stored on Amazon S3 Outposts, including security considerations and configuration using AWS Signature Version 4.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I use presigned URLs to grant access to S3 on Outposts?",
            "What are the security limitations of presigned URLs?",
            "How do I configure SigV4 for presigned URL requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "virtual private cloud",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "SigV4",
          "AWS SDKs",
          "signatureAge",
          "AWS Signature Version 4",
          "condition keys",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_94",
      "text": "\n\nAmazon S3 on Outposts User Guide\nbucket bucket if the signature is more than 10 minutes old. To use this example, replace the user\ninput placeholders with your own information.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny a presigned URL request if the signature is more than 10\nminutes old\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"444455556666\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"NumericGreaterThan\": {\"s3-outposts:signatureAge\": 600000},\n\"StringEquals\": {\"s3-outposts:authType\": \"REST-QUERY-STRING\"}\n}\n}\n]\n}\nFor a list of condition keys and additional example policies that you can use to enforce specific\nbehavior when presigned URL requests are authenticated by using Signature Version 4, see AWS\nSignature Version 4 (SigV4) authentication-specific policy keys.\nNetwork path restriction\nIf you want to restrict the use of presigned URLs and all S3 on Outposts access to particular\nnetwork paths, you can write policies that require a particular network path. To set the restriction\non the IAM principal that makes the call, you can use identity-based AWS Identity and Access\nManagement (IAM) policies (for example, user, group, or role policies). To set the restriction on the\nS3 on Outposts resource, you can use resource-based policies (for example, bucket and access point\npolicies).\nA network-path restriction on the IAM principal requires the user of those credentials to make\nrequests from the specified network. A restriction on the bucket or access point requires that\nall requests to that resource originate from the specified network. These restrictions also apply\noutside of the presigned URL scenario.\nLimiting presigned URL capabilities API Version 2006-03-01 92",
      "start_idx": 178619,
      "end_idx": 180450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 254,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "Configuration",
              "Restriction"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "presigned URL",
            "Signature Version 4",
            "IAM policies",
            "network-path restriction",
            "resource-based policies",
            "identity-based policies",
            "bucket",
            "access point",
            "condition keys"
          ],
          "entities": [
            "AWS",
            "S3 on Outposts",
            "IAM",
            "Signature Version 4",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Access Control",
          "secondary_categories": [
            "IAM Policies",
            "Network Security"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure policies for Amazon S3 on Outposts to restrict presigned URL usage based on signature age and network path, using IAM or resource-based policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I restrict presigned URL usage in Amazon S3 on Outposts?",
            "What condition keys are available for Signature Version 4 authentication?",
            "How do network-path restrictions work for S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Access Control]",
        "tf_idf_keywords": [
          "resource-based policies",
          "Signature Version 4",
          "network-path restriction",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "API Version 2006-03-01",
          "IAM",
          "AWS",
          "identity-based policies",
          "bucket",
          "condition keys",
          "IAM policies",
          "presigned URL",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_95",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThe IAM global condition that you use depends on the type of endpoint. If you are using the public\nendpoint for S3 on Outposts, use aws:SourceIp. If you are using a VPC endpoint for S3 on\nOutposts, use aws:SourceVpc or aws:SourceVpce.\nThe following IAM policy statement requires the principal to access AWS only from the specified\nnetwork range. With this policy statement, all access must originate from that range. This includes\nthe case of someone who's using a presigned URL for S3 on Outposts. To use this example, replace\nthe user input placeholders with your own information.\n{\n\"Sid\": \"NetworkRestrictionForIAMPrincipal\",\n\"Effect\": \"Deny\",\n\"Action\": \"*\",\n\"Resource\": \"*\",\n\"Condition\": {\n\"NotIpAddressIfExists\": {\"aws:SourceIp\": \"IP-address-range\"},\n\"BoolIfExists\": {\"aws:ViaAWSService\": \"false\"}\n}\n}\nFor an example bucket policy that uses the aws:SourceIP AWS global condition key to restrict\naccess to an S3 on Outposts bucket to a specific network range, see Setting up IAM with S3 on\nOutposts.\nWho can create a presigned URL\nAnyone with valid security credentials can create a presigned URL. But for a user in the VPC to\nsuccessfully access an object, the presigned URL must be created by someone who has permission\nto perform the operation that the presigned URL is based upon.\nYou can use the following credentials to create a presigned URL:\n\u2022 IAM instance profile \u2013 Valid up to 6 hours.\n\u2022 AWS Security Token Service \u2013 Valid up to 36 hours when signed with permanent credentials,\nsuch as the credentials of the AWS account root user or an IAM user.\n\u2022 IAM user \u2013 Valid up to 7 days when you're using AWS Signature Version 4.\nTo create a presigned URL that's valid for up to 7 days, first delegate IAM user credentials (the\naccess key and secret key) to the SDK that you're using. Then, generate a presigned URL by using\nAWS Signature Version 4.\nWho can create a presigned URL API Version 2006-03-01 93",
      "start_idx": 180450,
      "end_idx": 182397,
      "metadata": {
        "num_sentences": 15,
        "num_words": 324,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "IAM policy",
            "aws:SourceIp",
            "VPC endpoint",
            "presigned URL",
            "aws:SourceVpc",
            "aws:SourceVpce",
            "AWS Signature Version 4",
            "IAM instance profile",
            "Security Token Service",
            "access key"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "VPC",
            "AWS Security Token Service",
            "AWS Signature Version 4"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Amazon S3",
            "AWS Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Security Token Service",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure IAM policies for Amazon S3 on Outposts, focusing on network-based access restrictions and presigned URL creation using various credentials.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I restrict access to S3 on Outposts using IAM policies?",
            "What credentials can be used to create a presigned URL for S3 on Outposts?",
            "What are the validity periods for presigned URLs based on different credential types?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "aws:SourceIp",
          "IAM instance profile",
          "Security Token Service",
          "access key",
          "Amazon S3 on Outposts",
          "AWS Security Token Service",
          "aws:SourceVpce",
          "IAM",
          "aws:SourceVpc",
          "VPC endpoint",
          "VPC",
          "IAM policy",
          "AWS Signature Version 4",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_96",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\n\u2022 If you created a presigned URL by using a temporary token, the URL expires when the\ntoken expires, even if you created the URL with a later expiration time.\n\u2022 Because presigned URLs grant access to your S3 on Outposts buckets to whoever has the\nURL, we recommend that you protect them appropriately. For more information about\nprotecting presigned URLs, see Limiting presigned URL capabilities.\nWhen does S3 on Outposts check the expiration date and time of a\npresigned URL?\nAt the time of the HTTP request, S3 on Outposts checks the expiration date and time of a signed\nURL. For example, if a client begins to download a large file immediately before the expiration\ntime, the download continues even if the expiration time passes during the download. However, if\nthe connection drops and the client tries to restart the download after the expiration time passes,\nthe download fails.\nFor more information about using a presigned URL to share or upload objects, see the following\ntopics.\nTopics\n\u2022 Sharing objects by using presigned URLs\n\u2022 Generating a presigned URL to upload an object to an S3 on Outposts bucket\nSharing objects by using presigned URLs\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects.\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nWhen does S3 on Outposts check the expiration date and time of a presigned URL? API Version 2006-03-01 94",
      "start_idx": 182397,
      "end_idx": 184387,
      "metadata": {
        "num_sentences": 14,
        "num_words": 346,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "presigned URL",
            "S3 on Outposts",
            "expiration time",
            "bucket policy",
            "AWS SDKs",
            "AWS CLI",
            "HTTP request",
            "VPC",
            "download",
            "upload"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDKs",
            "AWS CLI",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how presigned URLs work in Amazon S3 on Outposts, including expiration handling, security considerations, and use cases for sharing or uploading objects in a VPC environment.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How does S3 on Outposts handle presigned URL expiration during a file download?",
            "What are the security measures for protecting presigned URLs?",
            "How can I use a presigned URL to upload objects to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "download",
          "S3 on Outposts",
          "expiration time",
          "upload",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "AWS SDKs",
          "VPC",
          "HTTP request",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_97",
      "text": "\n\nAmazon S3 on Outposts User Guide\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works.\nWhen you create a presigned URL, you must provide your security credentials, and then specify the\nfollowing:\n\u2022 An access point Amazon Resource Name (ARN) for the Amazon S3 on Outposts bucket\n\u2022 An object key\n\u2022 An HTTP method (GET for downloading objects)\n\u2022 An expiration date and time\nA presigned URL is valid only for the specified duration. That is, you must start the action that's\nallowed by the URL before the expiration date and time. You can use a presigned URL multiple\ntimes, up to the expiration date and time. If you created a presigned URL by using a temporary\ntoken, then the URL expires when the token expires, even if you created the URL with a later\nexpiration time.\nUsers in the virtual private cloud (VPC) who have access to the presigned URL can access the object.\nFor example, if you have a video in your bucket and both the bucket and the object are private,\nyou can share the video with others by generating a presigned URL. Because presigned URLs\ngrant access to your S3 on Outposts buckets to whoever has the URL, we recommend that you\nprotect these URLs appropriately. For more details about protecting presigned URLs, see Limiting\npresigned URL capabilities.\nAnyone with valid security credentials can create a presigned URL. However, the presigned URL\nmust be created by someone who has permission to perform the operation that the presigned URL\nis based upon. For more information, see Who can create a presigned URL.\nYou can generate a presigned URL to share an object in an S3 on Outposts bucket by using the\nAWS SDKs and the AWS CLI. For more information, see the following examples.\nUsing the AWS SDKs\nYou can use the AWS SDKs to generate a presigned URL that you can give to others so that they\ncan retrieve an object.\nSharing objects API Version 2006-03-01 95",
      "start_idx": 184387,
      "end_idx": 186356,
      "metadata": {
        "num_sentences": 17,
        "num_words": 349,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Security",
              "Usage"
            ]
          },
          "keywords": [
            "presigned URL",
            "Amazon S3 on Outposts",
            "access point ARN",
            "object key",
            "expiration time",
            "HTTP method",
            "security credentials",
            "temporary token",
            "AWS SDKs",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "VPC",
            "AWS SDKs",
            "AWS CLI",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This document explains how to create and use presigned URLs for sharing objects in Amazon S3 on Outposts buckets, including configuration steps, security considerations, and usage scenarios.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a presigned URL for an Amazon S3 on Outposts bucket?",
            "What are the security considerations for using presigned URLs?",
            "Can presigned URLs be used multiple times before expiration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "security credentials",
          "access point ARN",
          "temporary token",
          "Amazon S3 on Outposts",
          "expiration time",
          "AWS CLI",
          "HTTP method",
          "AWS SDKs",
          "ARN",
          "VPC",
          "object key",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_98",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\nWhen you use the AWS SDKs to generate a presigned URL, the maximum expiration time\nfor a presigned URL is 7 days from the time of creation.\nJava\nExample\nThe following example generates a presigned URL that you can give to others so that they can\nretrieve an object from an S3 on Outposts bucket. For more information, see Using presigned\nURLs for S3 on Outposts. To use this example, replace the user input placeholders with\nyour own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.time.Instant;\npublic class GeneratePresignedURL {\npublic static void main(String[] args) throws IOException {\nRegions clientRegion = Regions.DEFAULT_REGION;\nString accessPointArn = \"*** access point ARN ***\";\nString objectKey = \"*** object key ***\";\ntry {\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.withRegion(clientRegion)\n.withCredentials(new ProfileCredentialsProvider())\n.build();\n// Set the presigned URL to expire after one hour.\nSharing objects API Version 2006-03-01 96",
      "start_idx": 186356,
      "end_idx": 187778,
      "metadata": {
        "num_sentences": 6,
        "num_words": 165,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "UsageExample"
            ]
          },
          "keywords": [
            "presigned URL",
            "AWS SDK",
            "S3 on Outposts",
            "expiration time",
            "access point ARN",
            "object key",
            "AmazonS3ClientBuilder",
            "GeneratePresignedUrlRequest",
            "ProfileCredentialsProvider",
            "Regions"
          ],
          "entities": [
            "AWS SDKs",
            "Amazon S3",
            "S3 on Outposts",
            "Regions.DEFAULT_REGION",
            "GeneratePresignedURL"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to generate a presigned URL using the AWS SDK for Java to retrieve an object from an Amazon S3 on Outposts bucket.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL using the AWS SDK for Java?",
            "What is the maximum expiration time for a presigned URL in S3 on Outposts?",
            "How can I use a presigned URL to share objects in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "GeneratePresignedUrlRequest",
          "access point ARN",
          "expiration time",
          "S3 on Outposts",
          "ProfileCredentialsProvider",
          "Regions.DEFAULT_REGION",
          "Amazon S3",
          "AmazonS3ClientBuilder",
          "AWS SDKs",
          "object key",
          "GeneratePresignedURL",
          "AWS SDK",
          "Regions",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_99",
      "text": "\n\nAmazon S3 on Outposts User Guide\njava.util.Date expiration = new java.util.Date();\nlong expTimeMillis = Instant.now().toEpochMilli();\nexpTimeMillis += 1000 * 60 * 60;\nexpiration.setTime(expTimeMillis);\n// Generate the presigned URL.\nSystem.out.println(\"Generating pre-signed URL.\");\nGeneratePresignedUrlRequest generatePresignedUrlRequest =\nnew GeneratePresignedUrlRequest(accessPointArn, objectKey)\n.withMethod(HttpMethod.GET)\n.withExpiration(expiration);\nURL url = s3Client.generatePresignedUrl(generatePresignedUrlRequest);\nSystem.out.println(\"Pre-Signed URL: \" + url.toString());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't\nprocess\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\n.NET\nExample\nThe following example generates a presigned URL that you can give to others so that they can\nretrieve an object from an S3 on Outposts bucket. For more information, see Using presigned\nURLs for S3 on Outposts. To use this example, replace the user input placeholders with\nyour own information.\nusing Amazon;\nusing Amazon.S3;\nusing Amazon.S3.Model;\nusing System;\nnamespace Amazon.DocSamples.S3\n{\nSharing objects API Version 2006-03-01 97",
      "start_idx": 187778,
      "end_idx": 189157,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "GeneratePresignedUrlRequest",
            "expiration",
            "HttpMethod.GET",
            "accessPointArn",
            "objectKey",
            "SdkClientException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "GeneratePresignedUrlRequest",
            "HttpMethod.GET",
            "SdkClientException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Java",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of generating a presigned URL for retrieving objects from an Amazon S3 on Outposts bucket using Java and .NET code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for Amazon S3 on Outposts?",
            "What is the purpose of the GeneratePresignedUrlRequest in Java?",
            "How can I use presigned URLs in .NET for Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "GeneratePresignedUrlRequest",
          "objectKey",
          "expiration",
          "accessPointArn",
          "SdkClientException",
          "HttpMethod.GET",
          "Amazon S3",
          "Outposts",
          "AmazonServiceException",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_100",
      "text": "\n\nAmazon S3 on Outposts User Guide\nclass GenPresignedURLTest\n{\nprivate const string accessPointArn = \"*** access point ARN ***\";\nprivate const string objectKey = \"*** object key ***\";\n// Specify how long the presigned URL lasts, in hours.\nprivate const double timeoutDuration = 12;\n// Specify your bucket Region (an example Region is shown).\nprivate static readonly RegionEndpoint bucketRegion =\nRegionEndpoint.USWest2;\nprivate static IAmazonS3 s3Client;\npublic static void Main()\n{\ns3Client = new AmazonS3Client(bucketRegion);\nstring urlString = GeneratePreSignedURL(timeoutDuration);\n}\nstatic string GeneratePreSignedURL(double duration)\n{\nstring urlString = \"\";\ntry\n{\nGetPreSignedUrlRequest request1 = new GetPreSignedUrlRequest\n{\nBucketName = accessPointArn,\nKey = objectKey,\nExpires = DateTime.UtcNow.AddHours(duration)\n};\nurlString = s3Client.GetPreSignedURL(request1);\n}\ncatch (AmazonS3Exception e)\n{\nConsole.WriteLine(\"Error encountered on server. Message:'{0}' when\nwriting an object\", e.Message);\n}\ncatch (Exception e)\n{\nConsole.WriteLine(\"Unknown encountered on server. Message:'{0}' when\nwriting an object\", e.Message);\n}\nreturn urlString;\n}\n}\n}\nSharing objects API Version 2006-03-01 98",
      "start_idx": 189157,
      "end_idx": 190356,
      "metadata": {
        "num_sentences": 5,
        "num_words": 151,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Presigned URL",
            "access point ARN",
            "RegionEndpoint",
            "bucketRegion",
            "timeoutDuration",
            "GetPreSignedUrlRequest",
            "AmazonS3Client",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "RegionEndpoint.USWest2",
            "Presigned URL",
            "GetPreSignedUrlRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AmazonS3Client",
            ".NET SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for generating presigned URLs for accessing objects in Amazon S3 on Outposts using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for Amazon S3 on Outposts?",
            "What is the timeout duration for presigned URLs in this example?",
            "How can I handle errors when generating presigned URLs using the AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "Presigned URL",
          "Amazon S3",
          "API Version 2006-03-01",
          "Outposts",
          "RegionEndpoint",
          "GetPreSignedUrlRequest",
          "AmazonS3Client",
          "bucketRegion",
          "RegionEndpoint.USWest2",
          "timeoutDuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_101",
      "text": "\n\nAmazon S3 on Outposts User Guide\nPython\nThe following example generates a presigned URL to share an object by using the SDK for\nPython (Boto3). For example, use a Boto3 client and the generate_presigned_url function\nto generate a presigned URL that allows you to GET an object.\nimport boto3\nurl = boto3.client('s3').generate_presigned_url(\nClientMethod='get_object',\nParams={'Bucket': 'ACCESS_POINT_ARN', 'Key': 'OBJECT_KEY'},\nExpiresIn=3600)\nFor more information about using the SDK for Python (Boto3) to generate a presigned URL, see\nPython in the AWS SDK for Python (Boto) API Reference.\nUsing the AWS CLI\nThe following example AWS CLI command generates a presigned URL for an S3 on Outposts\nbucket. To use this example, replace the user input placeholders with your own information.\nNote\nWhen you use the AWS CLI to generate a presigned URL, the maximum expiration time for\na presigned URL is 7 days from the time of creation.\naws s3 presign s3://arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/example-outpost-access-\npoint/mydoc.txt --expires-in 604800\nFor more information, see presign in the AWS CLI Command Reference.\nGenerating a presigned URL to upload an object to an S3 on Outposts\nbucket\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects.\nUploading an object API Version 2006-03-01 99",
      "start_idx": 190356,
      "end_idx": 191957,
      "metadata": {
        "num_sentences": 10,
        "num_words": 238,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "Boto3",
            "AWS CLI",
            "bucket policy",
            "object upload",
            "virtual private cloud",
            "access point",
            "expiration time"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Boto3",
            "ACCESS_POINT_ARN",
            "OBJECT_KEY"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate presigned URLs for Amazon S3 on Outposts using Boto3 and AWS CLI, enabling time-limited access to objects for downloading or uploading.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for an S3 object using Boto3?",
            "What is the maximum expiration time for a presigned URL using AWS CLI?",
            "How can I upload an object to an S3 on Outposts bucket using a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "OBJECT_KEY",
          "virtual private cloud",
          "expiration time",
          "Amazon S3",
          "AWS Outposts",
          "AWS CLI",
          "bucket policy",
          "Outposts",
          "ACCESS_POINT_ARN",
          "Boto3",
          "object upload",
          "presigned URL",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_102",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works.\nWhen you create a presigned URL, you must provide your security credentials, and then specify the\nfollowing:\n\u2022 An access point Amazon Resource Name (ARN) for the Amazon S3 on Outposts bucket\n\u2022 An object key\n\u2022 An HTTP method (PUT for uploading objects)\n\u2022 An expiration date and time\nA presigned URL is valid only for the specified duration. That is, you must start the action that's\nallowed by the URL before the expiration date and time. You can use a presigned URL multiple\ntimes, up to the expiration date and time. If you created a presigned URL by using a temporary\ntoken, then the URL expires when the token expires, even if you created the URL with a later\nexpiration time.\nIf the action allowed by a presigned URL consists of multiple steps, such as a multipart upload,\nyou must start all steps before the expiration time. If S3 on Outposts tries to start a step with an\nexpired URL, you receive an error.\nUsers in the virtual private cloud (VPC) who have access to the presigned URL can upload objects.\nFor example, a user in the VPC who has access to the presigned URL can upload an object to your\nbucket. Because presigned URLs grant access to your S3 on Outposts bucket to any user in the VPC\nwho has access to the presigned URL, we recommend that you protect these URLs appropriately.\nFor more details about protecting presigned URLs, see Limiting presigned URL capabilities.\nAnyone with valid security credentials can create a presigned URL. However, the presigned URL\nmust be created by someone who has permission to perform the operation that the presigned URL\nis based upon. For more information, see Who can create a presigned URL.\nUploading an object API Version 2006-03-01 100",
      "start_idx": 191957,
      "end_idx": 194204,
      "metadata": {
        "num_sentences": 18,
        "num_words": 401,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage Guidance"
            ]
          },
          "keywords": [
            "presigned URL",
            "expiration time",
            "Amazon S3 on Outposts",
            "VPC",
            "security credentials",
            "access point ARN",
            "multipart upload",
            "HTTP method",
            "object key",
            "temporary token"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDKs",
            "AWS CLI",
            "VPC",
            "access point ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and use presigned URLs for Amazon S3 on Outposts, including their configuration, expiration, and security considerations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a presigned URL for Amazon S3 on Outposts?",
            "What are the security considerations for presigned URLs?",
            "What happens if a presigned URL expires during a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "security credentials",
          "access point ARN",
          "multipart upload",
          "temporary token",
          "Amazon S3 on Outposts",
          "expiration time",
          "object key",
          "AWS CLI",
          "HTTP method",
          "AWS SDKs",
          "VPC",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_103",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing the AWS SDKs to generate a presigned URL for an S3 on Outposts object\noperation\nJava\nSDK for Java 2.x\nThis example shows how to generate a presigned URL that you can use to upload an object\nto an S3 on Outposts bucket for a limited time. For more information, see Using presigned\nURLs for S3 on Outposts.\npublic static void signBucket(S3Presigner presigner, String\noutpostAccessPointArn, String keyName) {\ntry {\nPutObjectRequest objectRequest = PutObjectRequest.builder()\n.bucket(accessPointArn)\n.key(keyName)\n.contentType(\"text/plain\")\n.build();\nPutObjectPresignRequest presignRequest =\nPutObjectPresignRequest.builder()\n.signatureDuration(Duration.ofMinutes(10))\n.putObjectRequest(objectRequest)\n.build();\nPresignedPutObjectRequest presignedRequest =\npresigner.presignPutObject(presignRequest);\nString myURL = presignedRequest.url().toString();\nSystem.out.println(\"Presigned URL to upload a file to: \" +myURL);\nSystem.out.println(\"Which HTTP method must be used when uploading a\nfile: \" +\npresignedRequest.httpRequest().method());\n// Upload content to the S3 on Outposts bucket by using this URL.\nURL url = presignedRequest.url();\n// Create the connection and use it to upload the new object by using\nthe presigned URL.\nUploading an object API Version 2006-03-01 101",
      "start_idx": 194204,
      "end_idx": 195513,
      "metadata": {
        "num_sentences": 5,
        "num_words": 163,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS SDKs",
            "presigned URL",
            "PutObjectRequest",
            "PutObjectPresignRequest",
            "PresignedPutObjectRequest",
            "access point ARN",
            "signature duration",
            "HTTP method",
            "upload object"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java 2.x",
            "presigned URL",
            "Outposts bucket",
            "PutObjectRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java 2.x to generate a presigned URL for uploading an object to an Amazon S3 on Outposts bucket, including a code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for S3 on Outposts using AWS SDK for Java?",
            "What is the process for uploading an object to an S3 on Outposts bucket?",
            "What HTTP method is required for uploading files using a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "Outposts bucket",
          "PutObjectRequest",
          "Amazon S3 on Outposts",
          "PutObjectPresignRequest",
          "Amazon S3",
          "signature duration",
          "HTTP method",
          "PresignedPutObjectRequest",
          "AWS SDKs",
          "AWS SDK for Java 2.x",
          "upload object",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_104",
      "text": "\n\nAmazon S3 on Outposts User Guide\nHttpURLConnection connection = (HttpURLConnection)\nurl.openConnection();\nconnection.setDoOutput(true);\nconnection.setRequestProperty(\"Content-Type\",\"text/plain\");\nconnection.setRequestMethod(\"PUT\");\nOutputStreamWriter out = new\nOutputStreamWriter(connection.getOutputStream());\nout.write(\"This text was uploaded as an object by using a presigned\nURL.\");\nout.close();\nconnection.getResponseCode();\nSystem.out.println(\"HTTP response code is \" +\nconnection.getResponseCode());\n} catch (S3Exception e) {\ne.getStackTrace();\n} catch (IOException e) {\ne.getStackTrace();\n}\n}\nPython\nSDK for Python (Boto3)\nThis example shows how to generate a presigned URL that can perform an S3 on Outposts\naction for a limited time. For more information, see Using presigned URLs for S3 on\nOutposts. To make a request with the URL, use the Requests package.\nimport argparse\nimport logging\nimport boto3\nfrom botocore.exceptions import ClientError\nimport requests\nlogger = logging.getLogger(__name__)\ndef generate_presigned_url(s3_client, client_method, method_parameters,\nexpires_in):\n\"\"\"\nUploading an object API Version 2006-03-01 102",
      "start_idx": 195513,
      "end_idx": 196660,
      "metadata": {
        "num_sentences": 5,
        "num_words": 130,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "HttpURLConnection",
            "boto3",
            "Python SDK",
            "Requests package",
            "ClientError",
            "logging",
            "API"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "boto3",
            "Requests package",
            "HttpURLConnection"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "boto3",
            "Requests package",
            "HttpURLConnection"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of using presigned URLs with Amazon S3 on Outposts, including Java and Python code snippets for uploading objects.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL for Amazon S3 on Outposts?",
            "What is the Python code to upload an object using a presigned URL?",
            "What are the steps to handle HTTP connections for S3 uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Python SDK",
          "Requests package",
          "HttpURLConnection",
          "API",
          "ClientError",
          "logging",
          "Amazon S3",
          "boto3",
          "Outposts",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_105",
      "text": "\n\nAmazon S3 on Outposts User Guide\nGenerate a presigned S3 on Outposts URL that can be used to perform an\naction.\n:param s3_client: A Boto3 Amazon S3 client.\n:param client_method: The name of the client method that the URL performs.\n:param method_parameters: The parameters of the specified client method.\n:param expires_in: The number of seconds that the presigned URL is valid for.\n:return: The presigned URL.\n\"\"\"\ntry:\nurl = s3_client.generate_presigned_url(\nClientMethod=client_method,\nParams=method_parameters,\nExpiresIn=expires_in\n)\nlogger.info(\"Got presigned URL: %s\", url)\nexcept ClientError:\nlogger.exception(\n\"Couldn't get a presigned URL for client method '%s'.\",\nclient_method)\nraise\nreturn url\ndef usage_demo():\nlogging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')\nprint('-'*88)\nprint(\"Welcome to the Amazon S3 on Outposts presigned URL demo.\")\nprint('-'*88)\nparser = argparse.ArgumentParser()\nparser.add_argument('accessPointArn', help=\"The name of the S3 on Outposts\naccess point ARN.\")\nparser.add_argument(\n'key', help=\"For a GET operation, the key of the object in S3 on\nOutposts. For a \"\n\"PUT operation, the name of a file to upload.\")\nparser.add_argument(\n'action', choices=('get', 'put'), help=\"The action to perform.\")\nargs = parser.parse_args()\ns3_client = boto3.client('s3')\nclient_action = 'get_object' if args.action == 'get' else 'put_object'\nUploading an object API Version 2006-03-01 103",
      "start_idx": 196660,
      "end_idx": 198098,
      "metadata": {
        "num_sentences": 13,
        "num_words": 184,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Usage Demo"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "Boto3",
            "ClientMethod",
            "Params",
            "ExpiresIn",
            "access point ARN",
            "get_object",
            "put_object"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Boto3",
            "ClientError",
            "argparse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Python SDK"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "argparse",
            "logging"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate and use presigned URLs for Amazon S3 on Outposts using Boto3, with a code example and a usage demo.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL for Amazon S3 on Outposts?",
            "What parameters are required to create a presigned URL?",
            "How do I use Boto3 to interact with Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "ExpiresIn",
          "ClientError",
          "ClientMethod",
          "Amazon S3",
          "get_object",
          "Outposts",
          "put_object",
          "Boto3",
          "argparse",
          "Params",
          "AWS Outposts",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_106",
      "text": "\n\nAmazon S3 on Outposts User Guide\nurl = generate_presigned_url(\ns3_client, client_action, {'Bucket': args.accessPointArn, 'Key':\nargs.key}, 1000)\nprint(\"Using the Requests package to send a request to the URL.\")\nresponse = None\nif args.action == 'get':\nresponse = requests.get(url)\nelif args.action == 'put':\nprint(\"Putting data to the URL.\")\ntry:\nwith open(args.key, 'r') as object_file:\nobject_text = object_file.read()\nresponse = requests.put(url, data=object_text)\nexcept FileNotFoundError:\nprint(f\"Couldn't find {args.key}. For a PUT operation, the key must\nbe the \"\nf\"name of a file that exists on your computer.\")\nif response is not None:\nprint(\"Got response:\")\nprint(f\"Status: {response.status_code}\")\nprint(response.text)\nprint('-'*88)\nif __name__ == '__main__':\nusage_demo()\nAmazon S3 on Outposts with local Amazon EMR on Outposts\nAmazon EMR is a managed cluster platform that simplifies running big data frameworks, such\nas Apache Hadoop and Apache Spark, on AWS to process and analyze vast amounts of data. By\nusing these frameworks and related open-source projects, you can process data for analytics\npurposes and business intelligence workloads. Amazon EMR also helps you transform and move\nlarge amounts of data into and out of other AWS data stores and databases, and supports Amazon\nS3 on Outposts. For more information about Amazon EMR, see Amazon EMR on Outposts in the\nAmazon EMR Management Guide.\nAmazon S3 on Outposts with local Amazon EMR API Version 2006-03-01 104",
      "start_idx": 198098,
      "end_idx": 199587,
      "metadata": {
        "num_sentences": 9,
        "num_words": 215,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Usage Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "generate_presigned_url",
            "requests package",
            "API Version 2006-03-01",
            "accessPointArn",
            "data processing",
            "big data frameworks",
            "PUT operation",
            "analytics"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Apache Hadoop",
            "Apache Spark",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Data Processing",
          "secondary_categories": [
            "Big Data Analytics",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "AWS Data Stores"
          ],
          "mentioned_tools": [
            "Requests (Python)",
            "Apache Hadoop",
            "Apache Spark"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts with Amazon EMR for data processing and includes a Python code example for interacting with S3 using presigned URLs. It also highlights the integration of big data frameworks like Hadoop and Spark on AWS infrastructure.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I use presigned URLs to interact with Amazon S3 on Outposts?",
            "What is the role of Amazon EMR in processing data with S3 on Outposts?",
            "How do I troubleshoot a missing file error during a PUT operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Data Processing]",
        "tf_idf_keywords": [
          "accessPointArn",
          "Apache Hadoop",
          "Amazon S3 on Outposts",
          "AWS Data Stores",
          "API Version 2006-03-01",
          "generate_presigned_url",
          "Amazon EMR",
          "data processing",
          "PUT operation",
          "AWS",
          "requests package",
          "analytics",
          "Apache Spark",
          "big data frameworks"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_107",
      "text": "\n\nAmazon S3 on Outposts User Guide\nFor Amazon S3 on Outposts, Amazon EMR started to support the Apache Hadoop S3A connector in\nversion 7.0.0. Earlier versions of Amazon EMR don't support local S3 on Outposts, and the EMR File\nSystem (EMRFS) is not supported.\nSupported applications\nAmazon EMR with Amazon S3 on Outposts supports the following applications:\n\u2022 Hadoop\n\u2022 Spark\n\u2022 Hue\n\u2022 Hive\n\u2022 Sqoop\n\u2022 Pig\n\u2022 Hudi\n\u2022 Flink\nFor more information, see the Amazon EMR Release Guide.\nCreate and configure an Amazon S3 on Outposts bucket\nAmazon EMR uses the AWS SDK for Java with Amazon S3 on Outposts to store input data and\noutput data. Your Amazon EMR log files are stored in a Regional Amazon S3 location that you\nselect and aren't stored locally on the Outpost. For more information, see Amazon EMR logs in the\nAmazon EMR Management Guide.\nTo conform with Amazon S3 and DNS requirements, S3 on Outposts buckets have naming\nrestrictions and limitations. For more information, see Creating an S3 on Outposts bucket.\nWith Amazon EMR version 7.0.0 and later, you can use Amazon EMR with S3 on Outposts and the\nS3A file system.\nPrerequisites\nS3 on Outposts permissions \u2013 When you create your Amazon EMR instance profile, your role must\ncontain the AWS Identity and Access Management (IAM) namespace for S3 on Outposts. S3 on\nOutposts has its own namespace, s3-outposts*. For an example policy that uses this namespace,\nsee Setting up IAM with S3 on Outposts.\nCreating an Amazon S3 on Outposts bucket API Version 2006-03-01 105",
      "start_idx": 199587,
      "end_idx": 201100,
      "metadata": {
        "num_sentences": 13,
        "num_words": 260,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Guide",
              "Supported Features",
              "Configuration Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "S3A connector",
            "Hadoop",
            "IAM namespace",
            "S3 bucket",
            "AWS SDK for Java",
            "EMRFS",
            "Outposts permissions",
            "Amazon EMR logs"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Apache Hadoop",
            "S3A file system",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Big Data Processing",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "AWS Identity and Access Management (IAM)"
          ],
          "mentioned_tools": [
            "Apache Hadoop",
            "AWS SDK for Java",
            "S3A file system"
          ]
        },
        "semantic": {
          "summary": "This guide explains how Amazon EMR supports Amazon S3 on Outposts starting from version 7.0.0, detailing supported applications, configurations, and prerequisites like IAM permissions and bucket naming conventions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What applications are supported by Amazon EMR with S3 on Outposts?",
            "How do I configure an Amazon S3 on Outposts bucket for EMR?",
            "What are the prerequisites for using S3 on Outposts with Amazon EMR?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 bucket",
          "Outposts permissions",
          "S3A connector",
          "S3A file system",
          "Apache Hadoop",
          "Amazon S3 on Outposts",
          "IAM namespace",
          "AWS Identity and Access Management (IAM)",
          "Amazon EMR",
          "AWS SDK for Java",
          "Hadoop",
          "EMRFS",
          "Amazon EMR logs"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_108",
      "text": "\n\nAmazon S3 on Outposts User Guide\nS3A connector \u2013 To configure your EMR cluster to access data from an Amazon S3 on Outposts\nbucket, you must use the Apache Hadoop S3A connector. To use the connector, ensure that all of\nyour S3 URIs use the s3a scheme. If they don't, you can configure the file system implementation\nthat you use for your EMR cluster so that your S3 URIs work with the S3A connector.\nTo configure the file system implementation to work with the S3A connector, you use the\nfs.file_scheme.impl and fs.AbstractFileSystem.file_scheme.impl configuration\nproperties for your EMR cluster, where file_scheme corresponds to the type of S3 URIs that\nyou have. To use the following example, replace the user input placeholders with your own\ninformation. For example, to change the file system implementation for S3 URIs that use the s3\nscheme, specify the following cluster configuration properties:\n[\n{\n\"Classification\": \"core-site\",\n\"Properties\": {\n\"fs.s3.impl\": \"org.apache.hadoop.fs.s3a.S3AFileSystem\",\n\"fs.AbstractFileSystem.s3.impl\": \"org.apache.hadoop.fs.s3a.S3A\"\n}\n}\n]\nTo use S3A, set the fs.file_scheme.impl configuration property\nto org.apache.hadoop.fs.s3a.S3AFileSystem, and set the\nfs.AbstractFileSystem.file_scheme.impl property to\norg.apache.hadoop.fs.s3a.S3A.\nFor example, if you are accessing the path s3a://bucket/..., set the fs.s3a.impl\nproperty to org.apache.hadoop.fs.s3a.S3AFileSystem, and set the\nfs.AbstractFileSystem.s3a.impl property to org.apache.hadoop.fs.s3a.S3A.\nGetting started using Amazon EMR with Amazon S3 on Outposts\nThe following topics explain how to get started using Amazon EMR with Amazon S3 on Outposts.\nTopics\n\u2022 Create a permissions policy\n\u2022 Create and configure your cluster\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 106",
      "start_idx": 201100,
      "end_idx": 202913,
      "metadata": {
        "num_sentences": 9,
        "num_words": 250,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Integration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "EMR cluster",
            "S3A connector",
            "fs.file_scheme.impl",
            "fs.AbstractFileSystem.file_scheme.impl",
            "Apache Hadoop",
            "core-site",
            "permissions policy",
            "cluster configuration",
            "s3a scheme"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Apache Hadoop S3A connector",
            "EMR cluster",
            "core-site",
            "Amazon EMR"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Big Data Processing",
            "Hadoop Integration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR"
          ],
          "mentioned_tools": [
            "Apache Hadoop",
            "S3A connector"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure an EMR cluster to access data from an Amazon S3 on Outposts bucket using the Apache Hadoop S3A connector. It provides configuration properties and steps for integration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an EMR cluster to use the S3A connector?",
            "What are the required configuration properties for integrating Amazon S3 on Outposts with Hadoop?",
            "What is the purpose of the fs.file_scheme.impl property?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "fs.file_scheme.impl",
          "EMR cluster",
          "S3A connector",
          "Apache Hadoop",
          "permissions policy",
          "s3a scheme",
          "Amazon S3 on Outposts",
          "Amazon EMR",
          "core-site",
          "cluster configuration",
          "Apache Hadoop S3A connector",
          "fs.AbstractFileSystem.file_scheme.impl"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_109",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Configurations overview\n\u2022 Considerations\nCreate a permissions policy\nBefore you can create an EMR cluster that uses Amazon S3 on Outposts, you must create an\nIAM policy to attach to the Amazon EC2 instance profile for the cluster. The policy must have\npermissions to access the S3 on Outposts access point Amazon Resource Name (ARN). For more\ninformation about creating IAM policies for S3 on Outposts, see Setting up IAM with S3 on\nOutposts.\nThe following example policy shows how to grant the required permissions. After you create the\npolicy, attach the policy to the instance profile role that you use to create your EMR cluster, as\ndescribed in the the section called \u201cCreate and configure your cluster\u201d section. To use this example,\nreplace the user input placeholders with your own information.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3-outposts:us-\nwest-2:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/access-point-name,\n\"Action\": [\n\"s3-outposts:*\"\n]\n}\n]\n}\nCreate and configure your cluster\nTo create a cluster that runs Spark with S3 on Outposts, complete the following steps in the\nconsole.\nTo create a cluster that runs Spark with S3 on Outposts\n1. Open the Amazon EMR console at https://console.aws.amazon.com/elasticmapreduce/.\n2. In the left navigation pane, choose Clusters.\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 107",
      "start_idx": 202913,
      "end_idx": 204378,
      "metadata": {
        "num_sentences": 12,
        "num_words": 220,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Setup",
              "Cluster Creation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM policy",
            "EMR cluster",
            "access point ARN",
            "instance profile",
            "Spark",
            "permissions",
            "Amazon EC2",
            "AWS console",
            "S3-outposts"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM policy",
            "Amazon EMR",
            "Amazon EC2",
            "Spark"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Data Processing",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure an IAM policy and create an EMR cluster using Amazon S3 on Outposts, including a sample policy and step-by-step instructions for cluster setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an IAM policy for Amazon S3 on Outposts?",
            "What are the steps to configure an EMR cluster with S3 on Outposts?",
            "What permissions are required to access an S3 on Outposts access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "EMR cluster",
          "access point ARN",
          "Spark",
          "permissions",
          "AWS console",
          "Amazon S3 on Outposts",
          "S3-outposts",
          "Amazon EMR",
          "IAM",
          "Amazon EC2",
          "IAM policy",
          "instance profile"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_110",
      "text": "\n\nAmazon S3 on Outposts User Guide\n3. Choose Create cluster.\n4. For Amazon EMR release, choose emr-7.0.0 or later.\n5. For Application bundle, choose Spark interactive. Then select any other supported\napplications that you want to be included in your cluster.\n6. To enable Amazon S3 on Outposts, enter your configuration settings.\nSample configuration settings\nTo use the following sample configuration settings, replace the user input placeholders\nwith your own information.\n[\n{\n\"Classification\": \"core-site\",\n\"Properties\": {\n\"fs.s3a.bucket.DOC-EXAMPLE-BUCKET.accesspoint.arn\": \"arn:aws:s3-outposts:us-\nwest-2:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/access-point-name\"\n\"fs.s3a.committer.name\": \"magic\",\n\"fs.s3a.select.enabled\": \"false\"\n}\n},\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-corretto.x86_64\"\n}\n}\n],\n\"Properties\": {}\n},\n{\n\"Classification\": \"spark-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-corretto.x86_64\"\n}\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 108",
      "start_idx": 204378,
      "end_idx": 205565,
      "metadata": {
        "num_sentences": 11,
        "num_words": 131,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Spark interactive",
            "configuration settings",
            "fs.s3a.bucket",
            "accesspoint.arn",
            "magic committer",
            "JAVA_HOME",
            "hadoop-env",
            "spark-env"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Spark",
            "JAVA_HOME",
            "fs.s3a.bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Configuration Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR"
          ],
          "mentioned_tools": [
            "Spark",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This section provides step-by-step instructions for enabling Amazon S3 on Outposts in an Amazon EMR cluster and includes sample configuration settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable Amazon S3 on Outposts in an Amazon EMR cluster?",
            "What are the sample configuration settings for using Amazon S3 on Outposts?",
            "Which applications can be included in an Amazon EMR cluster with Spark?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "magic committer",
          "Spark",
          "JAVA_HOME",
          "hadoop-env",
          "Amazon S3 on Outposts",
          "fs.s3a.bucket",
          "Amazon EMR",
          "configuration settings",
          "spark-env",
          "Spark interactive",
          "accesspoint.arn"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_111",
      "text": "\n\nAmazon S3 on Outposts User Guide\n}\n],\n\"Properties\": {}\n},\n{\n\"Classification\": \"spark-defaults\",\n\"Properties\": {\n\"spark.executorEnv.JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-\ncorretto.x86_64\",\n\"spark.sql.sources.fastS3PartitionDiscovery.enabled\": \"false\"\n}\n}\n]\n7. In the Networking section, choose a virtual private cloud (VPC) and subnet that are on your\nAWS Outposts rack. For more information about Amazon EMR on Outposts, see EMR clusters\non AWS Outposts in the Amazon EMR Management Guide.\n8. In the EC2 instance profile for Amazon EMR section, choose the IAM role that has the\npermissions policy that you created earlier attached.\n9. Configure your remaining cluster settings, and then choose Create cluster.\nConfigurations overview\nThe following table describes S3A configurations and the values to specify for their parameters\nwhen you set up a cluster that uses S3 on Outposts with Amazon EMR.\nParameter Default value Required value for Explanation\nS3 on Outposts\nfs.s3a.aw If not specified, S3A The access point Amazon S3 on\ns.credent will look for S3 in ARN of the S3 on Outposts supports\nials.provider Region bucket with Outposts bucket virtual private cloud\nthe Outposts bucket (VPC)-only access\nname. points as the only\nmeans to access your\nOutposts buckets.\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 109",
      "start_idx": 205565,
      "end_idx": 206924,
      "metadata": {
        "num_sentences": 11,
        "num_words": 202,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS EMR",
            "IAM role",
            "VPC",
            "Subnet",
            "Cluster settings",
            "S3A configurations",
            "Access point ARN",
            "Bucket permissions"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS EMR",
            "IAM role",
            "VPC",
            "EC2 instance profile"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Data Storage",
            "Big Data"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS EMR",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "S3A",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 on Outposts with Amazon EMR, including networking settings, IAM roles, and S3A configurations for cluster setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon S3 on Outposts with Amazon EMR?",
            "What IAM role permissions are required for Amazon EMR on Outposts?",
            "What are the required S3A configurations for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "S3A configurations",
          "Subnet",
          "Bucket permissions",
          "IAM role",
          "Amazon S3 on Outposts",
          "Cluster settings",
          "Amazon S3",
          "EC2 instance profile",
          "Outposts",
          "AWS EMR",
          "VPC",
          "Access point ARN",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_112",
      "text": "\n\nAmazon S3 on Outposts User Guide\nParameter Default value Required value for Explanation\nS3 on Outposts\nfs.s3a.co file magic Magic committer is\nmmitter.name the only supported\ncommitter for S3 on\nOutposts.\nfs.s3a.se TRUE FALSE S3 Select is not\nlect.enabled supported on\nOutposts.\nJAVA_HOME /usr/lib/jvm/ /usr/lib/jvm/ S3 on Outposts on\njava-8 java-11-amazon S3A requires Java\n-corretto version 11.\n.x86_64\nThe following table describes Spark configurations and the values to specify for their parameters\nwhen you set up a cluster that uses S3 on Outposts with Amazon EMR.\nParameter Default value Required value for Explanation\nS3 on Outposts\nspark.sql TRUE FALSE S3 on Outposts\n.sources. doesn't support fast\nfastS3Par partition.\ntitionDis\ncovery.enabled\nspark.exe /usr/lib/jvm/ /usr/lib/jvm/ S3 on Outposts on\ncutorEnv. java-8 java-11-amazon S3A requires Java\nJAVA_HOME -corretto version 11.\n.x86_64\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 110",
      "start_idx": 206924,
      "end_idx": 207912,
      "metadata": {
        "num_sentences": 9,
        "num_words": 142,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Requirements"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "Amazon EMR",
            "Java 11",
            "Spark configurations",
            "fs.s3a",
            "fastS3PartitionDiscovery",
            "S3 Select",
            "JAVA_HOME",
            "committer",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Amazon EMR",
            "Java 11",
            "Spark"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Big Data Processing",
            "Cluster Setup"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "Outposts"
          ],
          "mentioned_tools": [
            "Java",
            "Spark"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the required configurations and parameters for using Amazon S3 on Outposts with Amazon EMR, including Java version requirements and Spark settings.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the required configurations for using Amazon S3 on Outposts with Amazon EMR?",
            "Does S3 on Outposts support S3 Select?",
            "What Java version is required for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Spark",
          "fs.s3a",
          "JAVA_HOME",
          "S3 on Outposts",
          "Java 11",
          "committer",
          "Amazon EMR",
          "API Version 2006-03-01",
          "Amazon S3",
          "Outposts",
          "S3 Select",
          "fastS3PartitionDiscovery",
          "Spark configurations"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_113",
      "text": "\n\nAmazon S3 on Outposts User Guide\nConsiderations\nConsider the following when you integrate Amazon EMR with S3 on Outposts buckets:\n\u2022 Amazon S3 on Outposts is supported with Amazon EMR version 7.0.0 and later.\n\u2022 The S3A connector is required to use S3 on Outposts with Amazon EMR. Only S3A has the\nfeatures required to interact with S3 on Outposts buckets. For S3A connector setup information,\nsee Prerequisites.\n\u2022 Amazon S3 on Outposts supports only server-side encryption with Amazon S3 managed keys\n(SSE-S3) with Amazon EMR. For more information, see the section called \u201cData encryption\u201d.\n\u2022 Amazon S3 on Outposts doesn't support writes with the S3A FileOutputCommitter. Writes\nwith the S3A FileOutputCommitter on S3 on Outposts buckets result in the following error:\nInvalidStorageClass: The storage class you specified is not valid.\n\u2022 Amazon S3 on Outposts isn't supported with Amazon EMR Serverless or Amazon EMR on EKS.\n\u2022 Amazon EMR logs are stored in a Regional Amazon S3 location that you select, and are not\nstored locally in the S3 on Outposts bucket.\nAuthorization and authentication caching\nS3 on Outposts securely caches authentication and authorization data locally on Outposts racks.\nThe cache removes round trips to the parent AWS Region for every request. This eliminates the\nvariability that is introduced by network round trips. With the authentication and authorization\ncache in S3 on Outposts, you get consistent latencies that are independent from the latency of the\nconnection between the Outposts and the AWS Region.\nWhen you make an S3 on Outposts API request, the authentication and authorization data is\nsecurely cached. The cached data is then used to authenticate subsequent S3 object API requests.\nS3 on Outposts only caches authentication and authorization data when the request is signed\nusing Signature Version 4A (SigV4A). The cache is stored locally on the Outposts within the S3\non Outposts service. It asynchronously refreshes when you make an S3 API request. The cache is\nencrypted, and no plaintext cryptographic keys are stored on Outposts.\nThe cache is valid for up to 10 minutes when the Outpost is connected to the AWS Region. It is\nrefreshed asynchronously when you make an S3 on Outposts API request, to ensure that the latest\npolicies are used. If the Outpost is disconnected from the AWS Region, the cache will be valid for\nup to 12 hours.\nAuthorization and authentication caching API Version 2006-03-01 111",
      "start_idx": 207912,
      "end_idx": 210366,
      "metadata": {
        "num_sentences": 24,
        "num_words": 396,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Integration Guide",
              "Error Handling",
              "Caching Behavior"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "S3A connector",
            "server-side encryption",
            "Signature Version 4A",
            "authentication cache",
            "authorization cache",
            "SSE-S3",
            "FileOutputCommitter",
            "Outposts racks"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "S3A connector",
            "AWS Region",
            "Outposts racks"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Data Processing",
          "secondary_categories": [
            "Data Encryption",
            "Authentication and Authorization"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Amazon EMR Serverless"
          ],
          "mentioned_tools": [
            "S3A connector"
          ]
        },
        "semantic": {
          "summary": "This documentation explains considerations for integrating Amazon EMR with Amazon S3 on Outposts, including supported versions, required connectors, encryption methods, and caching behavior for authentication and authorization data.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the requirements for using Amazon S3 on Outposts with Amazon EMR?",
            "How does authentication caching work in Amazon S3 on Outposts?",
            "What errors might occur when using the S3A FileOutputCommitter with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage and Data Processing]",
        "tf_idf_keywords": [
          "S3A connector",
          "server-side encryption",
          "Amazon S3 on Outposts",
          "Amazon EMR",
          "FileOutputCommitter",
          "SSE-S3",
          "authentication cache",
          "Signature Version 4A",
          "Outposts racks",
          "Amazon EMR Serverless",
          "AWS Region",
          "authorization cache"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_114",
      "text": "\n\nAmazon S3 on Outposts User Guide\nConfiguring the authorization and authentication cache\nS3 on Outposts automatically caches authentication and authorization data for requests signed\nwith the SigV4A algorithm. For more information, see Signing AWS API requests in the AWS\nIdentity and Access Management User Guide. The SigV4A algorithm is available in the latest versions\nof the AWS SDKs. You can obtain it through a dependency on the AWS Common Runtime (CRT)\nlibraries.\nYou need to use the latest version of the AWS SDK and install the latest version of the CRT. For\nexample, you can run pip install awscrt to obtain the latest version of the CRT with Boto3.\nS3 on Outposts does not cache authentication and authorization data for requests signed with the\nSigV4 algorithm.\nValidating SigV4A signing\nYou can use AWS CloudTrail to validate that requests were signed with SigV4A. For more\ninformation on setting up CloudTrail for S3 on Outposts, see Monitoring S3 on Outposts with AWS\nCloudTrail logs.\nAfter you have configured CloudTrail, you can verify how a request was signed in the\nSignatureVersion field of the CloudTrail logs. Requests that were signed with SigV4A will have\na SignatureVersion set to AWS4-ECDSA-P256-SHA256. Requests that were signed with SigV4\nwill have SignatureVersion set to AWS4-HMAC-SHA256.\nConfiguring the authorization and authentication cache API Version 2006-03-01 112",
      "start_idx": 210366,
      "end_idx": 211767,
      "metadata": {
        "num_sentences": 13,
        "num_words": 218,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Validation"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "SigV4A",
            "authentication",
            "authorization",
            "AWS SDK",
            "AWS CRT",
            "Boto3",
            "CloudTrail",
            "SignatureVersion",
            "SigV4"
          ],
          "entities": [
            "AWS SDK",
            "AWS CRT",
            "Boto3",
            "CloudTrail",
            "S3 on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Configuration",
          "secondary_categories": [
            "Authentication",
            "Authorization"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "CloudTrail"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CRT",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This section explains how to configure the authentication and authorization cache for S3 on Outposts, focusing on requests signed with the SigV4A algorithm and how to validate them using AWS CloudTrail.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the authentication cache for S3 on Outposts?",
            "What is the difference between SigV4 and SigV4A signing?",
            "How can I validate SigV4A-signed requests using CloudTrail?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Configuration]",
        "tf_idf_keywords": [
          "authentication",
          "authorization",
          "AWS CRT",
          "S3 on Outposts",
          "SigV4A",
          "CloudTrail",
          "SignatureVersion",
          "SigV4",
          "Boto3",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_115",
      "text": "\n\nAmazon S3 on Outposts User Guide\nSecurity in S3 on Outposts\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from data centers\nand network architectures that are built to meet the requirements of the most security-sensitive\norganizations.\nSecurity is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely. Third-\nparty auditors regularly test and verify the effectiveness of our security as part of the AWS\nCompliance Programs. To learn about the compliance programs that apply to Amazon S3 on\nOutposts, see AWS Services in Scope by Compliance Program.\n\u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your company's\nrequirements, and applicable laws and regulations.\nThis documentation helps you understand how to apply the shared responsibility model when\nusing S3 on Outposts. The following topics show you how to configure S3 on Outposts to meet\nyour security and compliance objectives. You also learn how to use other AWS services that help\nyou to monitor and secure your S3 on Outposts resources.\nTopics\n\u2022 Setting up IAM with S3 on Outposts\n\u2022 Data encryption in S3 on Outposts\n\u2022 AWS PrivateLink for S3 on Outposts\n\u2022 AWS Signature Version 4 (SigV4) authentication-specific policy keys\n\u2022 AWS managed policies for Amazon S3 on Outposts\n\u2022 Using service-linked roles for Amazon S3 on Outposts\nSetting up IAM with S3 on Outposts\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nSetting up IAM API Version 2006-03-01 113",
      "start_idx": 211767,
      "end_idx": 213761,
      "metadata": {
        "num_sentences": 14,
        "num_words": 327,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Configuration",
              "Compliance"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "AWS",
            "shared responsibility model",
            "security",
            "IAM",
            "data encryption",
            "AWS PrivateLink",
            "SigV4 authentication",
            "service-linked roles",
            "managed policies"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "AWS Compliance Programs",
            "AWS PrivateLink",
            "AWS Signature Version 4 (SigV4)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Access Management",
            "Data Encryption"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM",
            "AWS PrivateLink"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the shared responsibility model for securing Amazon S3 on Outposts, covering topics like IAM setup, data encryption, and compliance objectives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up IAM for S3 on Outposts?",
            "What are the security responsibilities for S3 on Outposts?",
            "Which AWS services enhance S3 on Outposts security?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Security]",
        "tf_idf_keywords": [
          "data encryption",
          "AWS IAM",
          "S3 on Outposts",
          "Amazon S3 on Outposts",
          "service-linked roles",
          "AWS Identity and Access Management (IAM)",
          "AWS Signature Version 4 (SigV4)",
          "IAM",
          "AWS PrivateLink",
          "AWS",
          "managed policies",
          "SigV4 authentication",
          "shared responsibility model",
          "security",
          "AWS Compliance Programs"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_116",
      "text": "\n\nAmazon S3 on Outposts User Guide\nand authorized (have permissions) to use Amazon S3 on Outposts resources. IAM is an AWS service\nthat you can use with no additional charge. By default, users don't have permissions for S3 on\nOutposts resources and operations. To grant access permissions for S3 on Outposts resources and\nAPI operations, you can use IAM to create users, groups, or roles and attach permissions.\nTo provide access, add permissions to your users, groups, or roles:\n\u2022 Users and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM\nIdentity Center User Guide.\n\u2022 Users managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Creating a role for a third-party\nidentity provider (federation) in the IAM User Guide.\n\u2022 IAM users:\n\u2022 Create a role that your user can assume. Follow the instructions in Creating a role for an IAM\nuser in the IAM User Guide.\n\u2022 (Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the\ninstructions in Adding permissions to a user (console) in the IAM User Guide.\nIn addition to IAM identity-based policies, S3 on Outposts supports both bucket and access point\npolicies. Bucket policies and access point policies are resource-based policies that are attached to\nthe S3 on Outposts resource.\n\u2022 A bucket policy is attached to the bucket and allows or denies requests to the bucket and the\nobjects in it based on the elements in the policy.\n\u2022 In contrast, an access point policy is attached to the access point and allows or denies requests to\nthe access point.\nThe access point policy works with the bucket policy that is attached to the underlying S3 on\nOutposts bucket. For an application or user to access objects in an S3 on Outposts bucket through\nan S3 on Outposts access point, both the access point policy and the bucket policy must permit the\nrequest.\nRestrictions that you include in an access point policy apply only to requests made through that\naccess point. For example, if an access point is attached to a bucket, you can't use the access point\nSetting up IAM API Version 2006-03-01 114",
      "start_idx": 213761,
      "end_idx": 215962,
      "metadata": {
        "num_sentences": 20,
        "num_words": 382,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Access Control"
            ]
          },
          "keywords": [
            "IAM",
            "S3 on Outposts",
            "permissions",
            "bucket policy",
            "access point policy",
            "identity provider",
            "permission set",
            "identity federation",
            "resource-based policies",
            "API operations"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS IAM Identity Center",
            "bucket policy",
            "access point policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM Identity Center",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to set up and manage permissions for Amazon S3 on Outposts resources using IAM, including identity-based and resource-based policies like bucket and access point policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure IAM permissions for S3 on Outposts?",
            "What is the difference between bucket policies and access point policies?",
            "How do access point policies interact with bucket policies in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Access Management]",
        "tf_idf_keywords": [
          "resource-based policies",
          "permissions",
          "identity federation",
          "access point policy",
          "S3 on Outposts",
          "permission set",
          "API operations",
          "Amazon S3 on Outposts",
          "IAM",
          "bucket policy",
          "AWS IAM Identity Center",
          "identity provider"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_117",
      "text": "\n\nAmazon S3 on Outposts User Guide\npolicy to allow or deny requests that are made directly to the bucket. However, restrictions that\nyou apply to a bucket policy can allow or deny requests made directly to the bucket or through the\naccess point.\nIn an IAM policy or a resource-based policy, you define which S3 on Outposts actions are allowed\nor denied. S3 on Outposts actions correspond to specific S3 on Outposts API operations. S3 on\nOutposts actions use the s3-outposts: namespace prefix. Requests made to the S3 on Outposts\ncontrol API in an AWS Region and requests made to the object API endpoints on the Outpost are\nauthenticated by using IAM and authorized against the s3-outposts: namespace prefix. To work\nwith S3 on Outposts, configure your IAM users and authorize them against the s3-outposts: IAM\nnamespace.\nFor more information, see Actions, resources, and condition keys for Amazon S3 on Outposts in the\nService Authorization Reference.\nNote\n\u2022 Access control lists (ACLs) are not supported by S3 on Outposts.\n\u2022 S3 on Outposts defaults to the bucket owner as object owner to help ensure that the\nowner of a bucket can't be prevented from accessing or deleting objects.\n\u2022 S3 on Outposts always has S3 Block Public Access enabled to help ensure that objects\ncan never have public access.\nFor more information about setting up IAM for S3 on Outposts, see the following topics.\nTopics\n\u2022 Principals for S3 on Outposts policies\n\u2022 Resource ARNs for S3 on Outposts\n\u2022 Example policies for S3 on Outposts\n\u2022 Permissions for S3 on Outposts endpoints\n\u2022 Service-linked roles for S3 on Outposts\nSetting up IAM API Version 2006-03-01 115",
      "start_idx": 215962,
      "end_idx": 217597,
      "metadata": {
        "num_sentences": 13,
        "num_words": 277,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "IAM policy",
            "resource-based policy",
            "s3-outposts namespace",
            "control API",
            "object API endpoints",
            "ACLs",
            "Block Public Access",
            "Service Authorization Reference"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS Region",
            "Service Authorization Reference",
            "S3 Block Public Access"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "IAM Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains access control and IAM configuration for Amazon S3 on Outposts, covering policies, permissions, and restrictions such as the default enabling of Block Public Access and lack of ACL support.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I configure IAM for Amazon S3 on Outposts?",
            "What are the default access restrictions for S3 on Outposts?",
            "What is the namespace prefix for S3 on Outposts actions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Block Public Access",
          "s3-outposts namespace",
          "object API endpoints",
          "S3 on Outposts",
          "ACLs",
          "Amazon S3 on Outposts",
          "control API",
          "Service Authorization Reference",
          "bucket policy",
          "IAM",
          "Block Public Access",
          "IAM policy",
          "resource-based policy",
          "AWS Region"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_118",
      "text": "\n\nAmazon S3 on Outposts User Guide\nPrincipals for S3 on Outposts policies\nWhen you create a resource-based policy to grant access to your S3 on Outposts bucket, you must\nuse the Principal element to specify the person or application that can make a request for an\naction or operation on that resource. For S3 on Outposts policies, you can use one of the following\nprincipals:\n\u2022 An AWS account\n\u2022 An IAM user\n\u2022 An IAM role\n\u2022 All principals, by specifying a wildcard character (*) in a policy that uses a Condition element to\nlimit access to a specific IP range\nImportant\nYou can't write a policy for an S3 on Outposts bucket that uses a wildcard character (*) in\nthe Principal element unless the policy also includes a Condition that limits access to a\nspecific IP address range. This restriction helps ensure that there is no public access to your\nS3 on Outposts bucket. For an example, see Example policies for S3 on Outposts.\nFor more information about the Principal element, see AWS JSON policy elements: Principal in\nthe IAM User Guide.\nResource ARNs for S3 on Outposts\nAmazon Resource Names (ARNs) for S3 on Outposts contain the Outpost ID in addition to the\nAWS Region that the Outpost is homed to, the AWS account ID, and the resource name. To access\nand perform actions on your Outposts buckets and objects, you must use one of the ARN formats\nshown in the following table.\nThe partition value in the ARN refers to a group of AWS Regions. Each AWS account is scoped to\none partition. The following are the supported partitions:\n\u2022 aws \u2013 AWS Regions\n\u2022 aws-us-gov \u2013 AWS GovCloud (US) Regions\nPrincipals for S3 on Outposts policies API Version 2006-03-01 116",
      "start_idx": 217597,
      "end_idx": 219258,
      "metadata": {
        "num_sentences": 10,
        "num_words": 295,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Guidelines",
              "ARN Structure",
              "Access Control"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "Principal element",
            "resource-based policy",
            "Condition element",
            "IP range",
            "AWS account",
            "IAM role",
            "ARN",
            "Outpost ID",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IAM",
            "AWS Regions",
            "AWS GovCloud"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "Resource Identification"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document explains how to specify principals in S3 on Outposts resource-based policies and the structure of ARNs for accessing Outposts resources. It emphasizes the use of conditions to limit access and prevent public exposure.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid principals for S3 on Outposts policies?",
            "How should ARNs for S3 on Outposts be structured?",
            "What restrictions apply when using wildcard characters in policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "Condition element",
          "AWS account",
          "AWS Regions",
          "IAM role",
          "S3 on Outposts",
          "Amazon S3",
          "Principal element",
          "IAM",
          "Outposts",
          "IP range",
          "ARN",
          "AWS GovCloud",
          "resource-based policy",
          "AWS Region",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_120",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAmazon S3 on Outposts ARN ARN format Example\nS3 on Outposts ARN arn:partition :s3- arn:aws:s3-outpo\noutposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id outpost/ op-01ac5d\n28a6a232904\nExample policies for S3 on Outposts\nExample : S3 on Outposts bucket policy with an AWS account principal\nThe following bucket policy uses an AWS account principal to grant access to an S3 on Outposts\nbucket. To use this bucket policy, replace the user input placeholders with your own\ninformation.\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"ExampleBucketPolicy1\",\n\"Statement\":[\n{\n\"Sid\":\"statement1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\n}\n]\n}\nExample : S3 on Outposts bucket policy with a wildcard principal (*) and condition key to limit\naccess to a specific IP address range\nThe following bucket policy uses a wildcard principal (*) with the aws:SourceIp condition to\nlimit access to a specific IP address range. To use this bucket policy, replace the user input\nplaceholders with your own information.\nExample policies for S3 on Outposts API Version 2006-03-01 118",
      "start_idx": 220446,
      "end_idx": 221710,
      "metadata": {
        "num_sentences": 5,
        "num_words": 171,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "bucket policy",
            "AWS account principal",
            "wildcard principal",
            "condition key",
            "IP address range",
            "aws:SourceIp",
            "S3-outposts"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "ARN",
            "AWS account principal",
            "us-west-2",
            "op-01ac5d28a6a232904"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of Amazon S3 on Outposts bucket policies, including using AWS account principals and wildcard principals with condition keys to manage access control.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create a bucket policy for S3 on Outposts?",
            "What is the ARN format for Amazon S3 on Outposts?",
            "How can I restrict access to an S3 bucket on Outposts by IP address?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "condition key",
          "us-west-2",
          "AWS IAM",
          "Amazon S3 on Outposts",
          "IP address range",
          "S3-outposts",
          "Amazon S3",
          "wildcard principal",
          "op-01ac5d28a6a232904",
          "bucket policy",
          "Outposts",
          "AWS account principal",
          "ARN",
          "aws:SourceIp"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_121",
      "text": "\n\nAmazon S3 on Outposts User Guide\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"ExampleBucketPolicy2\",\n\"Statement\": [\n{\n\"Sid\": \"statement1\",\n\"Effect\": \"Allow\",\n\"Principal\": { \"AWS\" : \"*\" },\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\",\n\"Condition\" : {\n\"IpAddress\" : {\n\"aws:SourceIp\": \"192.0.2.0/24\"\n},\n\"NotIpAddress\" : {\n\"aws:SourceIp\": \"198.51.100.0/24\"\n}\n}\n}\n]\n}\nPermissions for S3 on Outposts endpoints\nS3 on Outposts requires its own permissions in IAM to manage S3 on Outposts endpoint actions.\nNote\n\u2022 For endpoints that use the customer-owned IP address pool (CoIP pool) access type, you\nalso must have permissions to work with IP addresses from your CoIP pool, as described\nin the following table.\n\u2022 For shared accounts that access S3 on Outposts by using AWS Resource Access Manager,\nusers in these shared accounts can't create their own endpoints on a shared subnet. If\na user in a shared account wants to manage their own endpoints, the shared account\nmust create its own subnet on the Outpost. For more information, see the section called\n\u201cSharing S3 on Outposts\u201d.\nPermissions for endpoints API Version 2006-03-01 119",
      "start_idx": 221710,
      "end_idx": 222923,
      "metadata": {
        "num_sentences": 6,
        "num_words": 175,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Example",
              "Permissions Guidance"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM permissions",
            "bucket policy",
            "Outposts endpoints",
            "customer-owned IP address pool",
            "CoIP pool",
            "AWS Resource Access Manager",
            "shared accounts",
            "subnets",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS Resource Access Manager",
            "CoIP pool",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "IAM Permissions",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Resource Access Manager"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a bucket policy example and outlines permissions required to manage Amazon S3 on Outposts endpoints, including considerations for shared accounts and customer-owned IP address pools.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are required for managing S3 on Outposts endpoints?",
            "How do shared accounts access S3 on Outposts?",
            "What is an example bucket policy for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Resource Access Manager",
          "subnets",
          "Amazon S3 on Outposts",
          "customer-owned IP address pool",
          "CoIP pool",
          "API Version 2006-03-01",
          "bucket policy",
          "IAM",
          "IAM permissions",
          "Outposts endpoints",
          "shared accounts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_123",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAction IAM permissions\nec2:DeleteNetworkInterface\nec2:DescribeNetworkInterfaces\nFor endpoints that are using the on-premises\ncustomer-owned IP address pool (CoIP pool)\naccess type, the following additional permissio\nns are required:\ns3-outposts:DeleteEndpoint\nec2:DisassociateAddress\nec2:DescribeAddresses\nec2:ReleaseAddress\nListEndpoints s3-outposts:ListEndpoints\nNote\nYou can use resource tags in an IAM policy to manage permissions.\nService-linked roles for S3 on Outposts\nS3 on Outposts uses IAM service-linked roles to create some network resources on your behalf. For\nmore information, see Using service-linked roles for Amazon S3 on Outposts.\nData encryption in S3 on Outposts\nBy default, all data stored in Amazon S3 on Outposts is encrypted by using server-side encryption\nwith Amazon S3 managed encryption keys (SSE-S3). For more information, see Using server-side\nencryption with Amazon S3 managed keys (SSE-S3) in the Amazon S3 User Guide.\nYou can optionally use server-side encryption with customer-provided encryption keys (SSE-C). To\nuse SSE-C, specify an encryption key as part of your object API requests. Server-side encryption\nService-linked roles for S3 on Outposts API Version 2006-03-01 121",
      "start_idx": 223693,
      "end_idx": 224940,
      "metadata": {
        "num_sentences": 8,
        "num_words": 170,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Encryption",
              "Roles"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM permissions",
            "server-side encryption",
            "service-linked roles",
            "CoIP pool",
            "SSE-S3",
            "SSE-C",
            "API requests",
            "resource tags",
            "network interfaces"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "S3 on Outposts",
            "CoIP pool",
            "SSE-S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "EC2",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines IAM permissions, encryption methods, and service-linked roles required for using Amazon S3 on Outposts. It also discusses managing permissions with resource tags and server-side encryption options.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What IAM permissions are required for Amazon S3 on Outposts?",
            "How is data encrypted in S3 on Outposts?",
            "What are service-linked roles for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API requests",
          "resource tags",
          "server-side encryption",
          "EC2",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "SSE-C",
          "Amazon S3",
          "CoIP pool",
          "IAM",
          "IAM permissions",
          "SSE-S3",
          "service-linked roles",
          "network interfaces"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_124",
      "text": "\n\nAmazon S3 on Outposts User Guide\nencrypts only the object data, not the object metadata. For more information, see Using server-\nside encryption with customer-provided keys in the Amazon S3 User Guide.\nNote\nS3 on Outposts doesn't support server-side encryption with AWS Key Management Service\n(AWS KMS) keys (SSE-KMS).\nAWS PrivateLink for S3 on Outposts\nS3 on Outposts supports AWS PrivateLink, which provides direct management access to your S3\non Outposts storage through a private endpoint within your virtual private network. This allows\nyou to simplify your internal network architecture and perform management operations on your\nOutposts object storage by using private IP addresses in your Virtual Private Cloud (VPC). Using\nAWS PrivateLink eliminates the need to use public IP addresses or proxy servers.\nWith AWS PrivateLink for Amazon S3 on Outposts, you can provision interface VPC endpoints in\nyour virtual private cloud (VPC) to access your S3 on Outposts bucket management and endpoint\nmanagement APIs. Interface VPC endpoints are directly accessible from applications deployed\nin your VPC or on premises over your virtual private network (VPN) or AWS Direct Connect.\nYou can access the bucket and endpoint management APIs through AWS PrivateLink. AWS\nPrivateLink doesn't support data transfer API operations, such as GET, PUT, and similar APIs. These\noperations are already transferred privately through the S3 on Outposts endpoint and access point\nconfiguration. For more information, see Networking for S3 on Outposts.\nInterface endpoints are represented by one or more elastic network interfaces (ENIs) that are\nassigned private IP addresses from subnets in your VPC. Requests made to interface endpoints for\nS3 on Outposts are automatically routed to S3 on Outposts bucket and endpoint management\nAPIs on the AWS network. You can also access interface endpoints in your VPC from on-premises\napplications through AWS Direct Connect or AWS Virtual Private Network (AWS VPN). For more\ninformation about how to connect your VPC with your on-premises network, see the AWS Direct\nConnect User Guide and the AWS Site-to-Site VPN User Guide.\nInterface endpoints route requests for S3 on Outposts bucket and endpoint management APIs over\nthe AWS network and through AWS PrivateLink, as illustrated in the following diagram.\nAWS PrivateLink for S3 on Outposts API Version 2006-03-01 122",
      "start_idx": 224940,
      "end_idx": 227337,
      "metadata": {
        "num_sentences": 18,
        "num_words": 368,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "server-side encryption",
            "interface VPC endpoints",
            "elastic network interfaces",
            "Virtual Private Cloud (VPC)",
            "AWS Direct Connect",
            "AWS VPN",
            "bucket management APIs",
            "endpoint management APIs"
          ],
          "entities": [
            "Amazon S3",
            "AWS PrivateLink",
            "AWS Key Management Service (AWS KMS)",
            "Virtual Private Cloud (VPC)",
            "AWS Direct Connect"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "AWS Direct Connect"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how Amazon S3 on Outposts integrates with AWS PrivateLink for secure private endpoint access, and details limitations around server-side encryption and supported API operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does AWS PrivateLink work with Amazon S3 on Outposts?",
            "What encryption options are supported for S3 on Outposts?",
            "How can I connect my on-premises applications to S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "server-side encryption",
          "bucket management APIs",
          "AWS VPN",
          "Amazon S3 on Outposts",
          "AWS Direct Connect",
          "elastic network interfaces",
          "endpoint management APIs",
          "Amazon S3",
          "AWS Key Management Service (AWS KMS)",
          "Virtual Private Cloud (VPC)",
          "interface VPC endpoints",
          "AWS PrivateLink"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_125",
      "text": "\n\nAmazon S3 on Outposts User Guide\nFor general information about interface endpoints, see Interface VPC endpoints (AWS PrivateLink)\nin the AWS PrivateLink Guide.\nTopics\n\u2022 Restrictions and limitations\n\u2022 Accessing S3 on Outposts interface endpoints\n\u2022 Updating an on-premises DNS configuration\n\u2022 Creating a VPC endpoint for S3 on Outposts\n\u2022 Creating bucket policies and VPC endpoint policies for S3 on Outposts\nRestrictions and limitations\nWhen you access S3 on Outposts bucket and endpoint management APIs through AWS PrivateLink,\nVPC limitations apply. For more information, see Interface endpoint properties and limitations and\nAWS PrivateLink quotas in the AWS PrivateLink Guide.\nIn addition, AWS PrivateLink doesn't support the following:\n\u2022 Federal Information Processing Standard (FIPS) endpoints\n\u2022 S3 on Outposts data transfer APIs, for example, GET, PUT, and similar object API operations.\n\u2022 Private DNS\nRestrictions and limitations API Version 2006-03-01 123",
      "start_idx": 227337,
      "end_idx": 228301,
      "metadata": {
        "num_sentences": 5,
        "num_words": 141,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "interface endpoints",
            "AWS PrivateLink",
            "VPC",
            "bucket policies",
            "endpoint policies",
            "DNS configuration",
            "API operations",
            "FIPS"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "VPC",
            "FIPS",
            "S3 on Outposts APIs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Services",
          "secondary_categories": [
            "Networking",
            "Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "VPC Endpoint"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides guidance on using Amazon S3 on Outposts with AWS PrivateLink, including restrictions, limitations, and setup instructions for interface endpoints and policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the restrictions when using S3 on Outposts with AWS PrivateLink?",
            "How do I create a VPC endpoint for S3 on Outposts?",
            "What are the limitations of AWS PrivateLink for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Services]",
        "tf_idf_keywords": [
          "DNS configuration",
          "endpoint policies",
          "FIPS",
          "interface endpoints",
          "S3 on Outposts APIs",
          "API operations",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "Outposts",
          "AWS PrivateLink",
          "VPC Endpoint",
          "VPC",
          "bucket policies"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_126",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAccessing S3 on Outposts interface endpoints\nTo access S3 on Outposts bucket and endpoint management APIs using AWS PrivateLink, you\nmust update your applications to use endpoint-specific DNS names. When you create an interface\nendpoint, AWS PrivateLink generates two types of endpoint-specific S3 on Outposts names:\nRegional and zonal.\n\u2022 Regional DNS names \u2013 include a unique VPC endpoint ID, a service identifier, the AWS Region,\nand vpce.amazonaws.com, for example, vpce-1a2b3c4d-5e6f.s3-outposts.us-\neast-1.vpce.amazonaws.com.\n\u2022 Zonal DNS names \u2013 include a unique VPC endpoint ID, the Availability Zone, a service identifier,\nthe AWS Region, and vpce.amazonaws.com, for example, vpce-1a2b3c4d-5e6f-us-\neast-1a.s3-outposts.us-east-1.vpce.amazonaws.com. You might use this option if\nyour architecture isolates Availability Zones. For example, you could use zonal DNS names for\nfault containment or to reduce Regional data transfer costs.\nImportant\nS3 on Outposts interface endpoints are resolved from the public DNS domain. S3 on\nOutposts does not support private DNS. Use the --endpoint-url parameter for all\nbucket and endpoint management APIs.\nAWS CLI examples\nUse the --region and --endpoint-url parameters to access bucket management and endpoint\nmanagement APIs through S3 on Outposts interface endpoints.\nExample : Use the endpoint URL to list buckets with the S3 control API\nIn the following example, replace the Region us-east-1, VPC endpoint URL\nvpce-1a2b3c4d-5e6f.s3.us-east-1.vpce.amazonaws.com, and account ID 111122223333\nwith appropriate information.\naws s3control list-regional-buckets --region us-east-1 --endpoint-url\nhttps://vpce-1a2b3c4d-5e6f.s3-outposts.us-east-1.vpce.amazonaws.com --account-\nid 111122223333\nAccessing S3 on Outposts interface endpoints API Version 2006-03-01 124",
      "start_idx": 228301,
      "end_idx": 230140,
      "metadata": {
        "num_sentences": 12,
        "num_words": 241,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "AWS PrivateLink",
            "interface endpoints",
            "Regional DNS names",
            "Zonal DNS names",
            "Availability Zone",
            "endpoint management APIs",
            "bucket management APIs",
            "private DNS",
            "endpoint URL"
          ],
          "entities": [
            "AWS PrivateLink",
            "S3 on Outposts",
            "VPC endpoint",
            "Availability Zone",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS CLI"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS PrivateLink",
            "VPC endpoint"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to access and manage Amazon S3 on Outposts interface endpoints using AWS PrivateLink, including the use of Regional and Zonal DNS names, and provides an AWS CLI example for listing buckets.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How do I access S3 on Outposts using AWS PrivateLink?",
            "What is the difference between Regional and Zonal DNS names?",
            "How can I list buckets with the S3 control API using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "interface endpoints",
          "bucket management APIs",
          "Regional DNS names",
          "S3 on Outposts",
          "endpoint management APIs",
          "AWS CLI",
          "AWS PrivateLink",
          "Availability Zone",
          "endpoint URL",
          "private DNS",
          "VPC endpoint",
          "Zonal DNS names"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_128",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUpdating an on-premises DNS configuration\nWhen using endpoint-specific DNS names to access the interface endpoints for S3 on Outposts\nbucket management and endpoint management APIs, you don\u2019t have to update your on-premises\nDNS resolver. You can resolve the endpoint-specific DNS name with the private IP address of the\ninterface endpoint from the public S3 on Outposts DNS domain.\nCreating a VPC endpoint for S3 on Outposts\nTo create a VPC interface endpoint for S3 on Outposts, see Create a VPC endpoint in the AWS\nPrivateLink Guide.\nCreating bucket policies and VPC endpoint policies for S3 on Outposts\nYou can attach an endpoint policy to your VPC endpoint that controls access to S3 on Outposts.\nYou can also use the aws:sourceVpce condition in S3 on Outposts bucket policies to restrict\naccess to specific buckets from a specific VPC endpoint. With VPC endpoint policies, you can\ncontrol access to S3 on Outposts bucket management APIs and endpoint management APIs. With\nbucket policies, you can control access to the S3 on Outposts bucket management APIs. However,\nyou can't manage access to object actions for S3 on Outposts using aws:sourceVpce.\nAccess policies for S3 on Outposts specify the following information:\n\u2022 The AWS Identity and Access Management (IAM) principal for which actions are allowed or\ndenied.\n\u2022 The S3 control actions that are allowed or denied.\n\u2022 The S3 on Outposts resources on which actions are allowed or denied.\nThe following examples show policies that restrict access to a bucket or to an endpoint. For\nmore information about VPC connectivity, see Network-to-VPC connectivity options in the AWS\nwhitepaper Amazon Virtual Private Cloud Connectivity Options.\nImportant\n\u2022 When you apply the example policies for VPC endpoints described in this section, you\nmight block your access to the bucket without intending to do so. Bucket permissions\nthat limit bucket access to connections originating from your VPC endpoint can block\nUpdating an on-premises DNS configuration API Version 2006-03-01 126",
      "start_idx": 231486,
      "end_idx": 233550,
      "metadata": {
        "num_sentences": 15,
        "num_words": 328,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Policy",
              "Connectivity"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "bucket policies",
            "endpoint policies",
            "IAM principal",
            "DNS resolver",
            "PrivateLink",
            "aws:sourceVpce",
            "API actions",
            "VPC connectivity"
          ],
          "entities": [
            "Amazon S3",
            "AWS PrivateLink",
            "IAM",
            "VPC endpoint",
            "Amazon Virtual Private Cloud"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Control"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS PrivateLink",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure DNS, create VPC endpoints, and manage access policies for S3 on Outposts, including bucket and endpoint policies for controlling connectivity and access permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I update DNS configurations for S3 on Outposts?",
            "What policies can be applied to control access to S3 on Outposts?",
            "How do VPC endpoints interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "endpoint policies",
          "aws:sourceVpce",
          "DNS resolver",
          "VPC connectivity",
          "S3 on Outposts",
          "Amazon S3",
          "PrivateLink",
          "IAM",
          "AWS PrivateLink",
          "API actions",
          "VPC endpoint",
          "bucket policies",
          "IAM principal",
          "Amazon Virtual Private Cloud"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_129",
      "text": "\n\nAmazon S3 on Outposts User Guide\nall connections to the bucket. For information about how to fix this issue, see My bucket\npolicy has the wrong VPC or VPC endpoint ID. How can I fix the policy so that I can access\nthe bucket? in the AWS Support Knowledge Center.\n\u2022 Before using the following example bucket policies, replace the VPC endpoint ID with an\nappropriate value for your use case. Otherwise, you won't be able to access your bucket.\n\u2022 If your policy only allows access to an S3 on Outposts bucket from a specific VPC\nendpoint, it disables console access for that bucket because console requests don't\noriginate from the specified VPC endpoint.\nTopics\n\u2022 Example: Restricting access to a specific bucket from a VPC endpoint\n\u2022 Example: Denying access from a specific VPC endpoint in an S3 on Outposts bucket policy\nExample: Restricting access to a specific bucket from a VPC endpoint\nYou can create an endpoint policy that restricts access to specific S3 on Outposts buckets only. The\nfollowing policy restricts access for the GetBucketPolicy action only to the example-outpost-\nbucket. To use this policy, replace the example values with your own.\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"Policy1415115909151\",\n\"Statement\": [\n{ \"Sid\": \"Access-to-specific-bucket-only\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:GetBucketPolicy\",\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outpost-\nbucket\"\n}\n]\n}\nCreating VPC endpoint policies and bucket policies API Version 2006-03-01 127",
      "start_idx": 233550,
      "end_idx": 235116,
      "metadata": {
        "num_sentences": 11,
        "num_words": 230,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Adjustment",
              "Access Restriction"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "bucket policy",
            "access restriction",
            "endpoint policy",
            "AWS Support Knowledge Center",
            "GetBucketPolicy",
            "console access",
            "ARN",
            "Principal"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "VPC endpoint ID",
            "AWS Support Knowledge Center",
            "example-outpost-bucket",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Policy Management",
            "VPC Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "VPC endpoint"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure bucket policies for Amazon S3 on Outposts to restrict or allow access based on specific VPC endpoints. It includes examples of policy adjustments and highlights potential access issues caused by misconfigured policies.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I restrict access to an S3 on Outposts bucket from a specific VPC endpoint?",
            "What should I do if my bucket policy has the wrong VPC or VPC endpoint ID?",
            "How does restricting access to a VPC endpoint impact console access?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "endpoint policy",
          "access restriction",
          "example-outpost-bucket",
          "S3 on Outposts",
          "Amazon S3 on Outposts",
          "bucket policy",
          "GetBucketPolicy",
          "ARN",
          "Principal",
          "VPC endpoint",
          "AWS Support Knowledge Center",
          "VPC endpoint ID",
          "console access"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_130",
      "text": "\n\nAmazon S3 on Outposts User Guide\nExample: Denying access from a specific VPC endpoint in an S3 on Outposts\nbucket policy\nThe following S3 on Outposts bucket policy denies access to GetBucketPolicy on the example-\noutpost-bucket bucket through the vpce-1a2b3c4d VPC endpoint.\nThe aws:sourceVpce condition specifies the endpoint and does not require an Amazon Resource\nName (ARN) for the VPC endpoint resource, only the endpoint ID. To use this policy, replace the\nexample values with your own.\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"Policy1415115909152\",\n\"Statement\": [\n{\n\"Sid\": \"Deny-access-to-specific-VPCE\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:GetBucketPolicy\",\n\"Effect\": \"Deny\",\n\"Resource\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outpost-\nbucket\",\n\"Condition\": {\n\"StringEquals\": {\"aws:sourceVpce\": \"vpce-1a2b3c4d\"}\n}\n}\n]\n}\nAWS Signature Version 4 (SigV4) authentication-specific policy\nkeys\nThe following table shows the condition keys related to AWS Signature Version 4 (SigV4)\nauthentication that you can use with Amazon S3 on Outposts. In a bucket policy, you can add\nthese conditions to enforce specific behavior when requests are authenticated by using Signature\nVersion 4. For example policies, see Bucket policy examples that use Signature Version 4-related\ncondition keys. For more information about authenticating requests using Signature Version 4,\nsee Authenticating requests (AWS Signature Version 4) in the Amazon Simple Storage Service API\nReference\nSignature Version 4 (SigV4) policy keys API Version 2006-03-01 128",
      "start_idx": 235116,
      "end_idx": 236717,
      "metadata": {
        "num_sentences": 7,
        "num_words": 209,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Example",
              "Condition Key Usage"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "VPC endpoint",
            "aws:sourceVpce",
            "Signature Version 4",
            "SigV4",
            "authentication",
            "condition keys",
            "GetBucketPolicy",
            "Amazon Resource Name"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "VPC endpoint",
            "aws:sourceVpce",
            "Signature Version 4"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policy Management",
          "secondary_categories": [
            "Authentication",
            "AWS Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of an S3 on Outposts bucket policy that denies access to a specific VPC endpoint and explains the use of Signature Version 4 (SigV4) authentication-related condition keys.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I deny access to an S3 on Outposts bucket from a specific VPC endpoint?",
            "What are the condition keys related to Signature Version 4 in S3 on Outposts?",
            "How do I structure a bucket policy for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Policy Management]",
        "tf_idf_keywords": [
          "authentication",
          "Amazon Resource Name",
          "Signature Version 4",
          "S3 on Outposts",
          "Amazon S3",
          "SigV4",
          "bucket policy",
          "GetBucketPolicy",
          "Outposts",
          "VPC endpoint",
          "aws:sourceVpce",
          "condition keys",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_131",
      "text": "\n\nAmazon S3 on Outposts User Guide\nApplicable keys Description\ns3-outpos S3 on Outposts supports various methods of authentication. To restrict\nts:authType incoming requests to use a specific authentication method, you can use\nthis optional condition key. For example, you can use this condition key\nto allow only the HTTP Authorization header to be used in request\nauthentication.\nValid values:\nREST-HEADER\nREST-QUERY-STRING\ns3-outpos The length of time, in milliseconds, that a signature is valid in an\nts:signatur authenticated request.\neAge\nThis condition works only for presigned URLs.\nIn Signature Version 4, the signing key is valid for up to seven days.\nTherefore, the signatures are also valid for up to seven days. For more\ninformation, see Introduction to signing requests in the Amazon Simple\nStorage Service API Reference. You can use this condition to further limit\nthe signature age.\nExample value: 600000\ns3-outposts:x- You can use this condition key to disallow unsigned content in your\namz-content- bucket.\nsha256\nWhen you use Signature Version 4, for requests that use the\nAuthorization header, you add the x-amz-content-sha256\nheader in the signature calculation and then set its value to the hash\npayload.\nYou can use this condition key in your bucket policy to deny any uploads\nwhere the payloads are not signed. For example:\n\u2022 Deny uploads that use the Authorization header to authentic\nate requests but don't sign the payload. For more information, see\nSignature Version 4 (SigV4) policy keys API Version 2006-03-01 129",
      "start_idx": 236717,
      "end_idx": 238260,
      "metadata": {
        "num_sentences": 14,
        "num_words": 241,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Authentication",
              "Policy Keys"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "authentication",
            "condition key",
            "Signature Version 4",
            "presigned URLs",
            "x-amz-content-sha256",
            "REST-HEADER",
            "REST-QUERY-STRING",
            "bucket policy",
            "signature age"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Signature Version 4",
            "x-amz-content-sha256",
            "Authorization header"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Authentication",
            "API Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes condition keys for Amazon S3 on Outposts to manage authentication methods, signature validity, and signed content requirements. It provides details on how to enforce specific policies for secure API interactions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I restrict authentication methods in Amazon S3 on Outposts?",
            "What is the maximum signature age for presigned URLs in Signature Version 4?",
            "How can I enforce signed content in my S3 bucket policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "authentication",
          "Signature Version 4",
          "condition key",
          "S3 on Outposts",
          "x-amz-content-sha256",
          "Amazon S3",
          "REST-QUERY-STRING",
          "bucket policy",
          "REST-HEADER",
          "Outposts",
          "Authorization header",
          "presigned URLs",
          "signature age"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_132",
      "text": "\n\nAmazon S3 on Outposts User Guide\nApplicable keys Description\nTransferring payload in a single chunk in the Amazon Simple Storage\nService API Reference.\n\u2022 Deny uploads that use presigned URLs. Presigned URLs always have\nan UNSIGNED_PAYLOAD . For more information, see Authenticating\nrequests and Authentication methods in the Amazon Simple Storage\nService API Reference.\nValid value: UNSIGNED-PAYLOAD\nBucket policy examples that use Signature Version 4-related condition\nkeys\nTo use the following examples, replace the user input placeholders with your own\ninformation.\nExample : s3-outposts:signatureAge\nThe following bucket policy denies any S3 on Outposts presigned URL request on objects in\nexample-outpost-bucket if the signature is more than 10 minutes old.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny a presigned URL request if the signature is more than 10\nminutes old\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"444455556666\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"NumericGreaterThan\": {\"s3-outposts:signatureAge\": 600000},\n\"StringEquals\": {\"s3-outposts:authType\": \"REST-QUERY-STRING\"}\n}\n}\nBucket policy examples that use Signature Version 4-related condition keys API Version 2006-03-01 130",
      "start_idx": 238260,
      "end_idx": 239605,
      "metadata": {
        "num_sentences": 7,
        "num_words": 164,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URLs",
            "UNSIGNED_PAYLOAD",
            "Signature Version 4",
            "bucket policy",
            "condition keys",
            "s3-outposts:signatureAge",
            "REST-QUERY-STRING",
            "API Reference"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "example-outpost-bucket",
            "s3-outposts:signatureAge",
            "s3-outposts:authType",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Security",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides guidance on using bucket policies with Signature Version 4 in Amazon S3 on Outposts, including examples and condition keys for presigned URL requests.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I deny uploads using presigned URLs in Amazon S3?",
            "What is the s3-outposts:signatureAge condition key used for?",
            "How do I create a bucket policy in S3 Outposts to restrict presigned URL requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "API Reference",
          "Signature Version 4",
          "presigned URLs",
          "example-outpost-bucket",
          "s3-outposts:authType",
          "Amazon S3 on Outposts",
          "Amazon S3",
          "s3-outposts:signatureAge",
          "bucket policy",
          "Outposts",
          "REST-QUERY-STRING",
          "AWS",
          "UNSIGNED_PAYLOAD",
          "condition keys"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_133",
      "text": "\n\nAmazon S3 on Outposts User Guide\n]\n}\nExample : s3-outposts:authType\nThe following bucket policy allows only requests that use the Authorization header for\nrequest authentication. Any presigned URL requests will be denied since presigned URLs use\nquery parameters to provide request and authentication information. For more information, see\nAuthentication methods in the Amazon Simple Storage Service API Reference.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Allow only requests that use the Authorization header for\nrequest authentication. Deny presigned URL requests.\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"StringNotEquals\": {\n\"s3-outposts:authType\": \"REST-HEADER\"\n}\n}\n}\n]\n}\nExample : s3-outposts:x-amz-content-sha256\nThe following bucket policy denies any uploads with unsigned payloads, such as uploads that are\nusing presigned URLs. For more information, see Authenticating requests and Authentication\nmethods in the Amazon Simple Storage Service API Reference.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny uploads with unsigned payloads.\",\nBucket policy examples that use Signature Version 4-related condition keys API Version 2006-03-01 131",
      "start_idx": 239605,
      "end_idx": 240963,
      "metadata": {
        "num_sentences": 9,
        "num_words": 166,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Bucket Policy",
              "Authorization",
              "Condition Keys"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Authorization header",
            "presigned URLs",
            "bucket policy",
            "authType",
            "x-amz-content-sha256",
            "REST-HEADER",
            "Signature Version 4",
            "unsigned payloads"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Authorization header",
            "Signature Version 4",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Authentication Methods",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of bucket policies for Amazon S3 on Outposts, focusing on restricting access based on authentication methods and payload signing requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I restrict access to an Amazon S3 bucket using authentication headers?",
            "What are the condition keys for configuring bucket policies in Amazon S3 on Outposts?",
            "How do presigned URLs interact with bucket policy restrictions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "Signature Version 4",
          "x-amz-content-sha256",
          "Amazon S3",
          "authType",
          "bucket policy",
          "Outposts",
          "REST-HEADER",
          "unsigned payloads",
          "Authorization header",
          "AWS",
          "presigned URLs",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_134",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"StringEquals\": {\n\"s3-outposts:x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n}\n}\n}\n]\n}\nAWS managed policies for Amazon S3 on Outposts\nAn AWS managed policy is a standalone policy that is created and administered by AWS. AWS\nmanaged policies are designed to provide permissions for many common use cases so that you can\nstart assigning permissions to users, groups, and roles.\nKeep in mind that AWS managed policies might not grant least-privilege permissions for your\nspecific use cases because they're available for all AWS customers to use. We recommend that you\nreduce permissions further by defining customer managed policies that are specific to your use\ncases.\nYou cannot change the permissions defined in AWS managed policies. If AWS updates the\npermissions defined in an AWS managed policy, the update affects all principal identities (users,\ngroups, and roles) that the policy is attached to. AWS is most likely to update an AWS managed\npolicy when a new AWS service is launched or new API operations become available for existing\nservices.\nFor more information, see AWS managed policies in the IAM User Guide.\nAWS managed policy: AWSS3OnOutpostsServiceRolePolicy\nHelps manage network resources for you as part of the service-linked role\nAWSServiceRoleForS3OnOutposts.\nTo view the permissions for this policy, see AWSS3OnOutpostsServiceRolePolicy.\nAWS managed policies API Version 2006-03-01 132",
      "start_idx": 240963,
      "end_idx": 242623,
      "metadata": {
        "num_sentences": 11,
        "num_words": 228,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "Permissions",
              "IAM"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS managed policy",
            "IAM",
            "permissions",
            "least-privilege",
            "service-linked role",
            "principal identities",
            "API operations",
            "customer managed policies",
            "AWSS3OnOutpostsServiceRolePolicy"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS managed policies",
            "IAM User Guide",
            "AWSS3OnOutpostsServiceRolePolicy",
            "AWSServiceRoleForS3OnOutposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains AWS managed policies for Amazon S3 on Outposts, including their purpose, limitations, and recommendations for defining least-privilege permissions. It also highlights specific policies like AWSS3OnOutpostsServiceRolePolicy and their roles in managing network resources.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of AWS managed policies for Amazon S3 on Outposts?",
            "How do AWS managed policies differ from customer managed policies?",
            "What is the AWSS3OnOutpostsServiceRolePolicy used for?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "customer managed policies",
          "principal identities",
          "permissions",
          "service-linked role",
          "AWS managed policy",
          "AWS managed policies",
          "IAM User Guide",
          "Amazon S3 on Outposts",
          "API operations",
          "AWSServiceRoleForS3OnOutposts",
          "least-privilege",
          "IAM",
          "AWSS3OnOutpostsServiceRolePolicy"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_135",
      "text": "\n\nAmazon S3 on Outposts User Guide\nS3 on Outposts updates to AWS managed policies\nView details about updates to AWS managed policies for S3 on Outposts since this service began\ntracking these changes.\nChange Description Date\nS3 on Outposts added S3 on Outposts added October 3, 2023\nAWSS3OnOutpostsSer AWSS3OnOutpostsSer\nviceRolePolicy viceRolePolicy as part\nof the service-linked role\nAWSServiceRoleForS\n3OnOutposts , which helps\nmanage network resources\nfor you.\nS3 on Outposts started S3 on Outposts started October 3, 2023\ntracking changes tracking changes for its AWS\nmanaged policies.\nUsing service-linked roles for Amazon S3 on Outposts\nAmazon S3 on Outposts uses AWS Identity and Access Management (IAM) service-linked roles. A\nservice-linked role is a unique type of IAM role that is linked directly to S3 on Outposts. Service-\nlinked roles are predefined by S3 on Outposts and include all the permissions that the service\nrequires to call other AWS services on your behalf.\nA service-linked role makes setting up S3 on Outposts easier because you don\u2019t have to manually\nadd the necessary permissions. S3 on Outposts defines the permissions of its service-linked roles,\nand unless defined otherwise, only S3 on Outposts can assume its roles. The defined permissions\ninclude the trust policy and the permissions policy, and that permissions policy cannot be attached\nto any other IAM entity.\nYou can delete a service-linked role only after first deleting their related resources. This protects\nyour S3 on Outposts resources because you can't inadvertently remove permission to access the\nresources.\nPolicy updates API Version 2006-03-01 133",
      "start_idx": 242623,
      "end_idx": 244271,
      "metadata": {
        "num_sentences": 12,
        "num_words": 253,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Updates",
              "Service-Linked Roles"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS managed policies",
            "service-linked roles",
            "IAM",
            "permissions policy",
            "trust policy",
            "AWSServiceRoleForS3OnOutposts",
            "resources management",
            "policy updates",
            "network resources"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS managed policies",
            "AWSServiceRoleForS3OnOutposts",
            "IAM",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure Management",
          "secondary_categories": [
            "Identity and Access Management",
            "Policy Administration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document provides details about AWS managed policy updates for Amazon S3 on Outposts, including the introduction of service-linked roles and their permissions. It explains how these roles simplify resource management and outlines deletion requirements for related resources.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the updates to AWS managed policies for S3 on Outposts?",
            "How do service-linked roles work for Amazon S3 on Outposts?",
            "What are the prerequisites for deleting a service-linked role?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure Management]",
        "tf_idf_keywords": [
          "resources management",
          "permissions policy",
          "AWS managed policies",
          "trust policy",
          "Amazon S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "network resources",
          "API Version 2006-03-01",
          "IAM",
          "policy updates",
          "service-linked roles"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_136",
      "text": "\n\nAmazon S3 on Outposts User Guide\nFor information about other services that support service-linked roles, see AWS Services That Work\nwith IAM and look for the services that have Yes in the Service-linked roles column. Choose a Yes\nwith a link to view the service-linked role documentation for that service.\nService-linked role permissions for S3 on Outposts\nS3 on Outposts uses the service-linked role named AWSServiceRoleForS3OnOutposts to help\nmanage network resources for you.\nThe AWSServiceRoleForS3OnOutposts service-linked role trusts the following services to\nassume the role:\n\u2022 s3-outposts.amazonaws.com\nThe role permissions policy named AWSS3OnOutpostsServiceRolePolicy allows S3 on\nOutposts to complete the following actions on the specified resources:\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:DescribeSubnets\",\n\"ec2:DescribeSecurityGroups\",\n\"ec2:DescribeNetworkInterfaces\",\n\"ec2:DescribeVpcs\",\n\"ec2:DescribeCoipPools\",\n\"ec2:GetCoipPoolUsage\",\n\"ec2:DescribeAddresses\",\n\"ec2:DescribeLocalGatewayRouteTableVpcAssociations\"\n],\n\"Resource\": \"*\",\n\"Sid\": \"DescribeVpcResources\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateNetworkInterface\"\n],\n\"Resource\": [\n\"arn:aws:ec2:*:*:subnet/*\",\n\"arn:aws:ec2:*:*:security-group/*\"\nService-linked role permissions for S3 on Outposts API Version 2006-03-01 134",
      "start_idx": 244271,
      "end_idx": 245613,
      "metadata": {
        "num_sentences": 4,
        "num_words": 151,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Role Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "service-linked role",
            "AWSServiceRoleForS3OnOutposts",
            "permissions policy",
            "EC2 actions",
            "network resources",
            "DescribeVpcResources",
            "CreateNetworkInterface",
            "IAM",
            "AWS Services"
          ],
          "entities": [
            "AWSServiceRoleForS3OnOutposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "s3-outposts.amazonaws.com",
            "ec2:DescribeSubnets",
            "ec2:CreateNetworkInterface"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Infrastructure Management",
          "secondary_categories": [
            "IAM Roles",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "EC2",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the service-linked role AWSServiceRoleForS3OnOutposts, its permissions policy, and the EC2 actions it enables for managing network resources in Amazon S3 on Outposts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions does the AWSServiceRoleForS3OnOutposts grant?",
            "Which EC2 actions are allowed by S3 on Outposts?",
            "How does S3 on Outposts manage network resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure Management]",
        "tf_idf_keywords": [
          "permissions policy",
          "service-linked role",
          "EC2",
          "network resources",
          "S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "s3-outposts.amazonaws.com",
          "Amazon S3 on Outposts",
          "IAM",
          "AWS Services",
          "ec2:DescribeSubnets",
          "CreateNetworkInterface",
          "ec2:CreateNetworkInterface",
          "EC2 actions",
          "DescribeVpcResources"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_137",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:ModifyNetworkInterfaceAttribute\",\n\"ec2:CreateNetworkInterfacePermission\",\n\"ec2:DeleteNetworkInterface\",\n\"ec2:DeleteNetworkInterfacePermission\",\n\"ec2:DisassociateAddress\",\n\"ec2:ReleaseAddress\",\n\"ec2:AssociateAddress\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"aws:ResourceTag/CreatedBy\": \"S3 On Outposts\"\n}\n},\n\"Sid\": \"ReleaseVpcResources\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateTags\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"ec2:CreateAction\": [\n\"CreateNetworkInterface\",\n\"AllocateAddress\"\n],\n\"aws:RequestTag/CreatedBy\": [\n\"S3 On Outposts\"\n]\n}\n},\n\"Sid\": \"CreateTags\"\n}\n]\n}\nYou must configure permissions to allow an IAM entity (such as a role) to create, edit, or delete a\nservice-linked role. For more information, see Service-linked role permissions in the IAM User Guide.\nService-linked role permissions for S3 on Outposts API Version 2006-03-01 136",
      "start_idx": 246386,
      "end_idx": 247340,
      "metadata": {
        "num_sentences": 3,
        "num_words": 108,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "IAM Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM entity",
            "service-linked role",
            "permissions",
            "ec2 actions",
            "network interface",
            "resource tagging",
            "S3 On Outposts",
            "Condition StringEquals",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "ec2",
            "Service-linked role",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Infrastructure Permissions",
          "secondary_categories": [
            "IAM Roles",
            "AWS EC2 Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM",
            "AWS EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the IAM permissions required to manage service-linked roles for Amazon S3 on Outposts, including specific EC2 actions and tagging conditions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are required for managing service-linked roles in S3 on Outposts?",
            "Which EC2 actions are allowed in the IAM policy for S3 on Outposts?",
            "How can I configure resource tagging conditions for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure Permissions]",
        "tf_idf_keywords": [
          "S3 On Outposts",
          "network interface",
          "permissions",
          "service-linked role",
          "Service-linked role",
          "resource tagging",
          "Condition StringEquals",
          "IAM entity",
          "Amazon S3 on Outposts",
          "AWS IAM",
          "AWS EC2",
          "API Version 2006-03-01",
          "IAM",
          "ec2",
          "ec2 actions"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_138",
      "text": "\n\nAmazon S3 on Outposts User Guide\nCreating a service-linked role for S3 on Outposts\nYou don't need to manually create a service-linked role. When you create an S3 on Outposts\nendpoint in the AWS Management Console, the AWS CLI, or the AWS API, S3 on Outposts creates\nthe service-linked role for you.\nIf you delete this service-linked role, and then need to create it again, you can use the same process\nto recreate the role in your account. When you create an S3 on Outposts endpoint, S3 on Outposts\ncreates the service-linked role for you again.\nYou can also use the IAM console to create a service-linked role with the S3 on Outposts\nuse case. In the AWS CLI or the AWS API, create a service-linked role with the s3-\noutposts.amazonaws.com service name. For more information, see Creating a service-linked\nrole in the IAM User Guide. If you delete this service-linked role, you can use this same process to\ncreate the role again.\nEditing a service-linked role for S3 on Outposts\nS3 on Outposts does not allow you to edit the AWSServiceRoleForS3OnOutposts service-\nlinked role. This includes the name of the role because various entities might reference it. However,\nyou can edit the description of the role using IAM. For more information, see Editing a service-\nlinked role in the IAM User Guide.\nDeleting a service-linked role for S3 on Outposts\nIf you no longer need to use a feature or service that requires a service-linked role, we recommend\nthat you delete that role. That way you don\u2019t have an unused entity that is not actively monitored\nor maintained. However, you must clean up the resources for your service-linked role before you\ncan manually delete it.\nNote\nIf the S3 on Outposts service is using the role when you try to delete the resources, then\nthe deletion might fail. If that happens, wait for a few minutes and try the operation again.\nTo delete S3 on Outposts resources used by the AWSServiceRoleForS3OnOutposts role\n1. Delete the S3 on Outposts endpoints in your AWS account across all AWS Regions.\nCreating a service-linked role for S3 on Outposts API Version 2006-03-01 137",
      "start_idx": 247340,
      "end_idx": 249441,
      "metadata": {
        "num_sentences": 20,
        "num_words": 360,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Creation",
              "Editing",
              "Deletion",
              "Warning"
            ]
          },
          "keywords": [
            "service-linked role",
            "S3 on Outposts",
            "IAM",
            "AWS CLI",
            "AWS API",
            "AWS Management Console",
            "endpoint",
            "resources",
            "deletion",
            "description"
          ],
          "entities": [
            "AWSServiceRoleForS3OnOutposts",
            "s3-outposts.amazonaws.com",
            "IAM console",
            "S3 on Outposts endpoint",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage service-linked roles for S3 on Outposts, including creating, editing, and deleting roles, as well as handling associated resources and endpoints.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I create a service-linked role for S3 on Outposts?",
            "What steps are required to delete S3 on Outposts resources?",
            "Can I edit the AWSServiceRoleForS3OnOutposts role?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "AWS API",
          "AWS Management Console",
          "IAM console",
          "service-linked role",
          "S3 on Outposts",
          "description",
          "AWSServiceRoleForS3OnOutposts",
          "s3-outposts.amazonaws.com",
          "API Version 2006-03-01",
          "AWS CLI",
          "IAM",
          "S3 on Outposts endpoint",
          "endpoint",
          "deletion",
          "resources"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_139",
      "text": "\n\nAmazon S3 on Outposts User Guide\n2. Delete the service-linked role using IAM.\nUse the IAM console, the AWS CLI, or the AWS API to delete the\nAWSServiceRoleForS3OnOutposts service-linked role. For more information, see Deleting\na service-linked role in the IAM User Guide.\nSupported Regions for S3 on Outposts service-linked roles\nS3 on Outposts supports using service-linked roles in all of the AWS Regions where the service is\navailable. For more information, see S3 on Outposts Regions and endpoints.\nSupported Regions for S3 on Outposts service-linked roles API Version 2006-03-01 138",
      "start_idx": 249441,
      "end_idx": 250030,
      "metadata": {
        "num_sentences": 7,
        "num_words": 91,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Deletion",
              "Role Management"
            ]
          },
          "keywords": [
            "AWS IAM",
            "service-linked role",
            "S3 on Outposts",
            "AWS Regions",
            "IAM console",
            "AWS CLI",
            "AWS API",
            "role deletion",
            "endpoints",
            "API version"
          ],
          "entities": [
            "AWSServiceRoleForS3OnOutposts",
            "IAM User Guide",
            "S3 on Outposts Regions",
            "AWS Regions",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Identity and Access Management",
            "Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API",
            "IAM console"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to delete the AWSServiceRoleForS3OnOutposts service-linked role using IAM and provides details on supported regions for S3 on Outposts service-linked roles.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete the AWSServiceRoleForS3OnOutposts service-linked role?",
            "Which regions support S3 on Outposts service-linked roles?",
            "What tools can be used to manage service-linked roles in IAM?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "API version",
          "AWS API",
          "AWS Regions",
          "IAM console",
          "service-linked role",
          "AWS IAM",
          "S3 on Outposts Regions",
          "IAM User Guide",
          "S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "endpoints",
          "API Version 2006-03-01",
          "AWS CLI",
          "Amazon S3",
          "IAM"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_140",
      "text": "\n\nAmazon S3 on Outposts User Guide\nManaging S3 on Outposts storage\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about managing and sharing your Amazon S3 on Outposts storage capacity,\nsee the following topics.\nTopics\n\u2022 Managing S3 Versioning for your S3 on Outposts bucket\n\u2022 Creating and managing a lifecycle configuration for your Amazon S3 on Outposts bucket\n\u2022 Replicating objects for S3 on Outposts\n\u2022 Sharing S3 on Outposts by using AWS RAM\n\u2022 Other AWS services that use S3 on Outposts\nManaging S3 Versioning for your S3 on Outposts bucket\nWhen enabled, S3 Versioning saves multiple distinct copies of an object in the same bucket. You\ncan use S3 Versioning to preserve, retrieve, and restore every version of every object stored in your\nOutposts buckets. S3 Versioning helps you recover from unintended user actions and application\nfailures.\nAmazon S3 on Outposts buckets have three versioning states:\n\u2022 Unversioned \u2013 If you\u2019ve never enabled or suspended S3 Versioning on your bucket, it is\nunversioned and returns no S3 Versioning status. For more information about S3 Versioning, see\nManaging S3 Versioning for your S3 on Outposts bucket.\nManaging S3 Versioning API Version 2006-03-01 139",
      "start_idx": 250030,
      "end_idx": 252078,
      "metadata": {
        "num_sentences": 13,
        "num_words": 336,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "S3 buckets",
            "Versioning",
            "Lifecycle configuration",
            "Replication",
            "AWS RAM",
            "S3 APIs",
            "Encryption",
            "Tagging"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS RAM",
            "VPC",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS RAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "The documentation outlines how to manage Amazon S3 on Outposts, including creating buckets, enabling versioning, lifecycle configurations, replication, and sharing storage using AWS RAM. It also highlights the use of S3 APIs and tools for local data access and processing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable versioning for S3 on Outposts buckets?",
            "What tools can be used to manage S3 on Outposts?",
            "What are the benefits of using S3 on Outposts for local data storage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "Replication",
          "Lifecycle configuration",
          "S3 buckets",
          "AWS RAM",
          "Tagging",
          "Amazon S3",
          "REST API",
          "Versioning",
          "Outposts",
          "Encryption",
          "S3 APIs",
          "VPC",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_141",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Enabled \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID. Objects that already existed in the bucket at the time that you\nenable versioning have a version ID of null. If you modify these (or any other) objects with other\noperations, such as PutObject, the new objects get a unique version ID.\n\u2022 Suspended \u2013 Suspends S3 Versioning for the objects in the bucket. All objects added to the\nbucket after versioning is suspended receive the version ID null. For more information, see\nAdding objects to versioning-suspended buckets in the Amazon S3 User Guide.\nAfter you enable S3 Versioning for an S3 on Outposts bucket, it can never return to an unversioned\nstate. However, you can suspend versioning. For more information about S3 Versioning, see\nManaging S3 Versioning for your S3 on Outposts bucket.\nFor each object in your bucket, you have a current version and zero or more noncurrent versions.\nTo reduce storage costs, you can configure your bucket S3 Lifecycle rules to expire noncurrent\nversions after a specified time period. For more information, see Creating and managing a lifecycle\nconfiguration for your Amazon S3 on Outposts bucket.\nThe following examples show you how to enable or suspend versioning for an existing S3 on\nOutposts bucket by using the AWS Management Console and the AWS Command Line Interface\n(AWS CLI). To create a bucket with S3 Versioning enabled, see Creating an S3 on Outposts bucket.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can commit\nactions to it. Buckets have configuration properties, such as Outpost, tag, default\nencryption, and access point settings. The access point settings include the virtual private\ncloud (VPC), the access point policy for accessing the objects in the bucket, and other\nmetadata. For more information, see S3 on Outposts specifications.\nUsing the S3 console\nTo edit the S3 Versioning settings for your bucket\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to enable S3 Versioning for.\nManaging S3 Versioning API Version 2006-03-01 140",
      "start_idx": 252078,
      "end_idx": 254382,
      "metadata": {
        "num_sentences": 26,
        "num_words": 381,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts",
            "bucket",
            "version ID",
            "Lifecycle rules",
            "AWS CLI",
            "AWS Management Console",
            "access point",
            "encryption",
            "VPC"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Version Control",
            "Lifecycle Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable or suspend S3 Versioning for Amazon S3 on Outposts buckets, manage lifecycle rules, and configure related settings using the AWS Management Console or AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning for an Outposts bucket?",
            "What happens to objects when S3 Versioning is suspended?",
            "How can I manage lifecycle rules for versioned objects in an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "version ID",
          "S3 on Outposts",
          "S3 Versioning",
          "Amazon S3",
          "Lifecycle rules",
          "AWS CLI",
          "Outposts",
          "encryption",
          "VPC",
          "bucket",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_142",
      "text": "\n\nAmazon S3 on Outposts User Guide\n4. Choose the Properties tab.\n5. Under Bucket Versioning, choose Edit.\n6. Edit the S3 Versioning settings for the bucket by choosing one of the following options:\n\u2022 To suspend S3 Versioning and stop the creation of new object versions, choose Suspend.\n\u2022 To enable S3 Versioning and save multiple distinct copies of each object, choose Enable.\n7. Choose Save changes.\nUsing the AWS CLI\nTo enable or suspend S3 Versioning for your bucket by using the AWS CLI, use the put-bucket-\nversioning command, as shown in the following examples. To use these examples, replace each\nuser input placeholder with your own information.\nFor more information, see put-bucket-versioning in the AWS CLI Reference.\nExample : To enable S3 Versioning\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --versioning-configuration Status=Enabled\nExample : To suspend S3 Versioning\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --versioning-configuration Status=Suspended\nCreating and managing a lifecycle configuration for your\nAmazon S3 on Outposts bucket\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule.\nFor more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket.\nCreating and managing a lifecycle configuration API Version 2006-03-01 141",
      "start_idx": 254382,
      "end_idx": 256142,
      "metadata": {
        "num_sentences": 17,
        "num_words": 237,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Bucket Versioning",
            "AWS CLI",
            "Lifecycle Configuration",
            "Suspend",
            "Enable",
            "put-bucket-versioning",
            "Storage Optimization",
            "Lifecycle Rules"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "put-bucket-versioning",
            "Lifecycle Configuration",
            "S3 Versioning"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Configuration Management",
            "Lifecycle Policies"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure S3 Versioning and manage lifecycle rules for Amazon S3 on Outposts buckets using the AWS CLI or the console. It includes procedural steps and examples for enabling or suspending versioning and optimizing storage with lifecycle rules.",
          "intents": [
            "How-To",
            "Reference",
            "Configuration"
          ],
          "potential_questions": [
            "How do I enable or suspend S3 Versioning using AWS CLI?",
            "What are the steps to configure lifecycle rules for Amazon S3 on Outposts?",
            "What is the purpose of S3 Versioning and lifecycle configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Enable",
          "Storage Optimization",
          "Bucket Versioning",
          "Amazon S3 on Outposts",
          "S3 Versioning",
          "Amazon S3",
          "Lifecycle Rules",
          "AWS CLI",
          "Lifecycle Configuration",
          "Outposts",
          "Suspend",
          "put-bucket-versioning"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_143",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule.\nTo create and manage the lifecycle configuration for your S3 on Outposts bucket, see the following\ntopics.\nTopics\n\u2022 Creating and managing a lifecycle rule by using the AWS Management Console\n\u2022 Creating and managing a lifecycle configuration by using the AWS CLI and SDK for Java\nCreating and managing a lifecycle rule by using the AWS Management\nConsole\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule.\nFor more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule.\nTo create and manage a lifecycle rule for an S3 on Outposts by using the AWS Management\nConsole, see the following topics.\nTopics\n\u2022 Creating a lifecycle rule\n\u2022 Enabling a lifecycle rule\n\u2022 Editing a lifecycle rule\nUsing the console API Version 2006-03-01 142",
      "start_idx": 256142,
      "end_idx": 257428,
      "metadata": {
        "num_sentences": 9,
        "num_words": 221,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle rule",
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java",
            "Storage optimization",
            "Bucket ownership",
            "Lifecycle configuration",
            "Object expiration"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java",
            "S3 Lifecycle"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Lifecycle Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and manage lifecycle rules for Amazon S3 on Outposts buckets using the AWS Management Console, AWS CLI, and SDK for Java. It emphasizes bucket ownership and lifecycle rule capabilities for storage optimization.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a lifecycle rule for an Amazon S3 on Outposts bucket?",
            "What tools can I use to manage lifecycle configurations in AWS?",
            "Who owns the bucket and controls lifecycle rules in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Lifecycle rule",
          "Lifecycle configuration",
          "S3 on Outposts",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "Object expiration",
          "S3 Lifecycle",
          "Bucket ownership",
          "Storage optimization"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_144",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Deleting a lifecycle rule\nCreating a lifecycle rule\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to create a lifecycle rule for.\n4. Choose the Management tab, and then choose Create Lifecycle rule.\n5. Enter a value for Lifecycle rule name.\n6. Under Rule scope, choose one of the following options:\n\u2022 To limit the scope to specific filters, choose Limit the scope of this rule using one or more\nfilters. Then, add a prefix filter, tags, or object size.\n\u2022 To apply the rule to all objects in the bucket, choose Apply to all objects in the bucket.\n7. Under Lifecycle rule actions, choose one of the following options:\n\u2022 Expire current versions of objects \u2013 For versioning-enabled buckets, S3 on Outposts adds a\ndelete marker and retains the objects as noncurrent versions. For buckets that don't use S3\nVersioning, S3 on Outposts permanently deletes the objects.\n\u2022 Permanently delete noncurrent versions of objects \u2013 S3 on Outposts permanently deletes\nnoncurrent versions of objects.\n\u2022 Delete expired object delete markers or incomplete multipart uploads \u2013 S3 on Outposts\npermanently deletes expired object delete markers or incomplete multipart uploads.\nIf you limit the scope of your Lifecycle rule by using object tags, you can't choose Delete\nexpired object delete markers. You also can't choose Delete expired object delete markers\nif you choose Expire current object versions.\nNote\nSize-based filters can't be used with delete markers and incomplete multipart uploads.\n8. If you chose Expire current versions of objects or Permanently delete noncurrent versions of\nobjects, configure the rule trigger based on a specific date or the object's age.\nUsing the console API Version 2006-03-01 143",
      "start_idx": 257428,
      "end_idx": 259327,
      "metadata": {
        "num_sentences": 25,
        "num_words": 308,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "lifecycle rule",
            "delete marker",
            "object tags",
            "filters",
            "multipart uploads",
            "versioning",
            "rule scope",
            "rule actions"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "Lifecycle rule",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Lifecycle Policies"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for creating a lifecycle rule for an Amazon S3 Outposts bucket, including configuring rule scope, actions, and triggers.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a lifecycle rule in Amazon S3 Outposts?",
            "What are the actions available for a lifecycle rule in S3 Outposts?",
            "Can I use size-based filters with delete markers in S3 Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Lifecycle rule",
          "S3 on Outposts",
          "lifecycle rule",
          "versioning",
          "Amazon S3",
          "API Version 2006-03-01",
          "Outposts",
          "delete marker",
          "filters",
          "object tags",
          "rule scope",
          "rule actions",
          "multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_145",
      "text": "\n\nAmazon S3 on Outposts User Guide\n9. If you chose Delete expired object delete markers, to confirm that you want to delete expired\nobject delete markers, select Delete expired object delete markers.\n10. Under Timeline Summary, review your Lifecycle rule, and choose Create rule.\nEnabling a lifecycle rule\nTo enable or disable a bucket lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to enable or disable a lifecycle rule for.\n4. Choose the Management tab, and then under Lifecycle rule, choose the rule that you want to\nenable or disable.\n5. For Action, choose Enable or disable rule.\nEditing a lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to edit a lifecycle rule for.\n4. Choose the Management tab, and then choose the Lifecycle rule that you want to edit.\n5. (Optional) Update the value for Lifecycle rule name.\n6. Under Rule scope, edit the scope as needed:\n\u2022 To limit the scope to specific filters, choose Limit the scope of this rule using one or more\nfilters. Then, add a prefix filter, tags, or object size.\n\u2022 To apply the rule to all objects in the bucket, choose Apply to all objects in the bucket.\n7. Under Lifecycle rule actions, choose one of the following options:\n\u2022 Expire current versions of objects \u2013 For versioning-enabled buckets, S3 on Outposts adds a\ndelete marker and retains the objects as noncurrent versions. For buckets that don't use S3\nVersioning, S3 on Outposts permanently deletes the objects.\n\u2022 Permanently delete noncurrent versions of objects \u2013 S3 on Outposts permanently deletes\nnoncurrent versions of objects.\nUsing the console API Version 2006-03-01 144",
      "start_idx": 259327,
      "end_idx": 261193,
      "metadata": {
        "num_sentences": 33,
        "num_words": 307,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "lifecycle rule",
            "delete marker",
            "bucket",
            "versioning",
            "noncurrent versions",
            "filters",
            "object size",
            "prefix filter"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "Lifecycle rule",
            "S3 Versioning",
            "Management tab"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Lifecycle Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "Amazon S3 console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to manage lifecycle rules for Amazon S3 buckets on Outposts, including enabling, disabling, editing, and configuring rule actions such as deleting expired object markers or noncurrent object versions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable or disable a lifecycle rule for an S3 Outposts bucket?",
            "What actions can I configure in an S3 Outposts lifecycle rule?",
            "How do I edit the scope of a lifecycle rule in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "noncurrent versions",
          "Lifecycle rule",
          "Outposts bucket",
          "S3 on Outposts",
          "lifecycle rule",
          "versioning",
          "S3 Versioning",
          "Amazon S3",
          "prefix filter",
          "Outposts",
          "delete marker",
          "filters",
          "Management tab",
          "bucket",
          "object size"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_146",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Delete expired object delete markers or incomplete multipart uploads \u2013 S3 on Outposts\npermanently deletes expired object delete markers or incomplete multipart uploads.\nIf you limit the scope of your Lifecycle rule by using object tags, you can't choose Delete\nexpired object delete markers. You also can't choose Delete expired object delete markers\nif you choose Expire current object versions.\nNote\nSize-based filters can't be used with delete markers and incomplete multipart uploads.\n8. If you chose Expire current versions of objects or Permanently delete noncurrent versions of\nobjects, configure the rule trigger based on a specific date or the object age.\n9. If you chose Delete expired object delete markers, to confirm that you want to delete expired\nobject delete markers, select Delete expired object delete markers.\n10. Choose Save.\nDeleting a lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to delete a lifecycle rule for.\n4. Choose the Management tab, and then under Lifecycle rule, choose the rule that you want to\ndelete.\n5. Choose Delete.\nCreating and managing a lifecycle configuration by using the AWS CLI\nand SDK for Java\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule.\nFor more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket.\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 145",
      "start_idx": 261193,
      "end_idx": 262942,
      "metadata": {
        "num_sentences": 25,
        "num_words": 282,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Deletion"
            ]
          },
          "keywords": [
            "S3 Lifecycle",
            "Outposts bucket",
            "delete markers",
            "incomplete multipart uploads",
            "Lifecycle rule",
            "object age",
            "AWS CLI",
            "SDK for Java",
            "storage optimization",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS CLI",
            "SDK for Java",
            "Lifecycle rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Lifecycle Configuration",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to manage lifecycle configurations for Amazon S3 on Outposts, including creating, deleting, and optimizing storage rules for objects and delete markers using the AWS CLI or SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a lifecycle rule in an Amazon S3 Outposts bucket?",
            "What are the limitations when using S3 Lifecycle with delete markers?",
            "How can I create a lifecycle configuration using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "incomplete multipart uploads",
          "Lifecycle rule",
          "Outposts bucket",
          "SDK for Java",
          "Amazon S3",
          "AWS Outposts",
          "AWS CLI",
          "object age",
          "S3 Lifecycle",
          "storage optimization",
          "delete markers"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_147",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule.\nTo create and manage a lifecycle configuration for an S3 on Outposts bucket by using the AWS\nCommand Line Interface (AWS CLI) and the AWS SDK for Java, see the following examples.\nTopics\n\u2022 PUT a lifecycle configuration\n\u2022 GET the lifecycle configuration on an S3 on Outposts bucket\nPUT a lifecycle configuration\nAWS CLI\nThe following AWS CLI example puts a lifecycle configuration policy on an Outposts bucket.\nThis policy specifies that all objects that have the flagged prefix (myprefix) and tags expire\nafter 10 days. To use this example, replace each user input placeholder with your own\ninformation.\n1. Save the lifecycle configuration policy to a JSON file. In this example, the file is named\nlifecycle1.json.\n{\n\"Rules\": [\n{\n\"ID\": \"id-1\",\n\"Filter\": {\n\"And\": {\n\"Prefix\": \"myprefix\",\n\"Tags\": [\n{\n\"Value\": \"mytagvalue1\",\n\"Key\": \"mytagkey1\"\n},\n{\n\"Value\": \"mytagvalue2\",\n\"Key\": \"mytagkey2\"\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 146",
      "start_idx": 262942,
      "end_idx": 264063,
      "metadata": {
        "num_sentences": 9,
        "num_words": 186,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "lifecycle configuration",
            "AWS CLI",
            "JSON file",
            "policy",
            "prefix",
            "tags",
            "expire",
            "bucket",
            "AWS SDK for Java"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts bucket",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Configuration Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and manage lifecycle configurations for Amazon S3 on Outposts buckets using the AWS CLI and AWS SDK for Java, including an example JSON policy.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a lifecycle configuration for an S3 on Outposts bucket?",
            "What is an example JSON policy for managing S3 lifecycle configurations?",
            "What tools can I use to manage lifecycle rules for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "expire",
          "prefix",
          "JSON file",
          "Outposts bucket",
          "S3 on Outposts",
          "Amazon S3",
          "API Version 2006-03-01",
          "AWS CLI",
          "AWS Outposts",
          "lifecycle configuration",
          "AWS SDK for Java",
          "bucket",
          "tags",
          "policy"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_148",
      "text": "\n\nAmazon S3 on Outposts User Guide\n}\n],\n\"ObjectSizeGreaterThan\": 1000,\n\"ObjectSizeLessThan\": 5000\n}\n},\n\"Status\": \"Enabled\",\n\"Expiration\": {\n\"Days\": 10\n}\n}\n]\n}\n2. Submit the JSON file as part of the put-bucket-lifecycle-configuration CLI\ncommand. To use this command, replace each user input placeholder with your\nown information. For more information about this command, see put-bucket-lifecycle-\nconfiguration in the AWS CLI Reference.\naws s3control put-bucket-lifecycle-configuration --account-id 123456789012 --\nbucket arn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\nbucket/example-outposts-bucket --lifecycle-configuration file://lifecycle1.json\nSDK for Java\nThe following SDK for Java example puts a lifecycle configuration on an Outposts bucket.\nThis lifecycle configuration specifies that all objects that have the flagged prefix (myprefix)\nand tags expire after 10 days. To use this example, replace each user input placeholder\nwith your own information. For more information, see PutBucketLifecycleConfiguration in the\nAmazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void putBucketLifecycleConfiguration(String bucketArn) {\nS3Tag tag1 = new S3Tag().withKey(\"mytagkey1\").withValue(\"mytagkey1\");\nS3Tag tag2 = new S3Tag().withKey(\"mytagkey2\").withValue(\"mytagkey2\");\nLifecycleRuleFilter lifecycleRuleFilter = new LifecycleRuleFilter()\n.withAnd(new LifecycleRuleAndOperator()\n.withPrefix(\"myprefix\")\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 147",
      "start_idx": 264063,
      "end_idx": 265604,
      "metadata": {
        "num_sentences": 10,
        "num_words": 173,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command Example",
              "SDK Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "lifecycle configuration",
            "bucket",
            "expiration",
            "AWS CLI",
            "SDK for Java",
            "JSON",
            "tags",
            "prefix"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "LifecycleRuleFilter",
            "LifecycleRuleAndOperator"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Lifecycle Management",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for configuring lifecycle rules for Amazon S3 on Outposts buckets using the AWS CLI and SDK for Java, including examples for JSON and Java code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure lifecycle rules for an S3 Outposts bucket?",
            "What is the AWS CLI command to set a lifecycle configuration?",
            "How can I use the SDK for Java to manage S3 Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON",
          "expiration",
          "prefix",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI",
          "Outposts",
          "lifecycle configuration",
          "LifecycleRuleFilter",
          "bucket",
          "LifecycleRuleAndOperator",
          "tags",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_149",
      "text": "\n\nAmazon S3 on Outposts User Guide\n.withTags(tag1, tag2))\n.withObjectSizeGreaterThan(1000)\n.withObjectSizeLessThan(5000);\nLifecycleExpiration lifecycleExpiration = new LifecycleExpiration()\n.withExpiredObjectDeleteMarker(false)\n.withDays(10);\nLifecycleRule lifecycleRule = new LifecycleRule()\n.withStatus(\"Enabled\")\n.withFilter(lifecycleRuleFilter)\n.withExpiration(lifecycleExpiration)\n.withID(\"id-1\");\nLifecycleConfiguration lifecycleConfiguration = new LifecycleConfiguration()\n.withRules(lifecycleRule);\nPutBucketLifecycleConfigurationRequest reqPutBucketLifecycle = new\nPutBucketLifecycleConfigurationRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withLifecycleConfiguration(lifecycleConfiguration);\nPutBucketLifecycleConfigurationResult respPutBucketLifecycle =\ns3ControlClient.putBucketLifecycleConfiguration(reqPutBucketLifecycle);\nSystem.out.printf(\"PutBucketLifecycleConfiguration Response: %s%n\",\nrespPutBucketLifecycle.toString());\n}\nGET the lifecycle configuration on an S3 on Outposts bucket\nAWS CLI\nThe following AWS CLI example gets a lifecycle configuration on an Outposts bucket. To use\nthis command, replace each user input placeholder with your own information. For\nmore information about this command, see get-bucket-lifecycle-configuration in the AWS CLI\nReference.\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 148",
      "start_idx": 265604,
      "end_idx": 266965,
      "metadata": {
        "num_sentences": 4,
        "num_words": 112,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "CLI Command",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "LifecycleConfiguration",
            "LifecycleRule",
            "AWS CLI",
            "PutBucketLifecycleConfiguration",
            "LifecycleExpiration",
            "Java SDK",
            "Outposts bucket",
            "get-bucket-lifecycle-configuration",
            "s3ControlClient"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Java SDK",
            "LifecycleConfiguration",
            "Outposts bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS SDK Usage",
            "Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and retrieve lifecycle configurations for an Amazon S3 on Outposts bucket using the AWS CLI and Java SDK. It includes procedural steps and code examples for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure lifecycle rules for an Amazon S3 on Outposts bucket?",
            "What is the AWS CLI command to get a lifecycle configuration for an Outposts bucket?",
            "How can I use the Java SDK to set lifecycle configurations in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "s3ControlClient",
          "LifecycleExpiration",
          "S3 on Outposts",
          "Outposts bucket",
          "Amazon S3",
          "AWS CLI",
          "PutBucketLifecycleConfiguration",
          "get-bucket-lifecycle-configuration",
          "Java SDK",
          "LifecycleRule",
          "LifecycleConfiguration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_150",
      "text": "\n\nAmazon S3 on Outposts User Guide\naws s3control get-bucket-lifecycle-configuration --account-id 123456789012 --bucket\narn:aws:s3-outposts:<your-region>:123456789012:outpost/op-01ac5d28a6a232904/\nbucket/example-outposts-bucket\nSDK for Java\nThe following SDK for Java example gets a lifecycle configuration for an Outposts bucket. For\nmore information, see GetBucketLifecycleConfiguration in the Amazon Simple Storage Service\nAPI Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void getBucketLifecycleConfiguration(String bucketArn) {\nGetBucketLifecycleConfigurationRequest reqGetBucketLifecycle = new\nGetBucketLifecycleConfigurationRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nGetBucketLifecycleConfigurationResult respGetBucketLifecycle =\ns3ControlClient.getBucketLifecycleConfiguration(reqGetBucketLifecycle);\nSystem.out.printf(\"GetBucketLifecycleConfiguration Response: %s%n\",\nrespGetBucketLifecycle.toString());\n}\nReplicating objects for S3 on Outposts\nWith S3 Replication on AWS Outposts, you can configure Amazon S3 on Outposts to automatically\nreplicate S3 objects across different Outposts, or between buckets on the same Outpost. You\ncan use S3 Replication on Outposts to maintain multiple replicas of your data in the same or\ndifferent Outposts, or across different accounts, to help meet data-residency needs. S3 Replication\non Outposts helps power your compliant storage needs and data sharing across accounts. If you\nneed to ensure that your replicas are identical to the source data, you can use S3 Replication on\nOutposts to make replicas of your objects that retain all metadata, such as the original object\ncreation time, tags, and version IDs.\nS3 Replication on Outposts also provides detailed metrics and notifications to monitor the\nstatus of object replication between buckets. You can use Amazon CloudWatch to monitor\nReplicating objects for S3 on Outposts API Version 2006-03-01 149",
      "start_idx": 266965,
      "end_idx": 268904,
      "metadata": {
        "num_sentences": 9,
        "num_words": 223,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Replication",
            "Lifecycle Configuration",
            "S3Control",
            "Bucket",
            "Java SDK",
            "CloudWatch",
            "Metadata",
            "API"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Replication",
            "CloudWatch",
            "Java SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": [
            "Java SDK",
            "S3Control API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts for lifecycle configuration and object replication, with examples in Java SDK. It also highlights replication features for compliance and monitoring using CloudWatch.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure lifecycle rules for an S3 Outposts bucket?",
            "What are the features of S3 Replication on Outposts?",
            "How do I use the Java SDK to manage S3 Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Replication",
          "API",
          "S3Control",
          "Java SDK",
          "S3 Replication",
          "Amazon S3",
          "Metadata",
          "Amazon CloudWatch",
          "Lifecycle Configuration",
          "Outposts",
          "CloudWatch",
          "Bucket",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_151",
      "text": "\n\nAmazon S3 on Outposts User Guide\nreplication progress by tracking bytes pending replication, operations pending replication, and\nreplication latency between your source and destination buckets. To quickly diagnose and correct\nconfiguration issues, you can also set up Amazon EventBridge to receive notifications about\nreplication object failures. To learn more, see Managing your replication.\nTopics\n\u2022 Replication configuration\n\u2022 Requirements for S3 Replication on Outposts\n\u2022 What is replicated?\n\u2022 What isn't replicated?\n\u2022 What isn't supported by S3 Replication on Outposts?\n\u2022 Setting up replication\n\u2022 Managing your replication\nReplication configuration\nS3 on Outposts stores a replication configuration as XML. In the replication configuration XML file,\nyou specify an AWS Identity and Access Management (IAM) role and one or more rules.\n<ReplicationConfiguration>\n<Role>IAM-role-ARN</Role>\n<Rule>\n...\n</Rule>\n<Rule>\n...\n</Rule>\n...\n</ReplicationConfiguration>\nS3 on Outposts can't replicate objects without your permission. You grant S3 on Outposts\npermissions with the IAM role that you specify in the replication configuration. S3 on Outposts\nassumes that IAM role to replicate objects on your behalf. You must grant the required permissions\nto the IAM role before starting replication. For more information about these permissions for S3 on\nOutposts, see Creating an IAM role.\nYou add one rule in a replication configuration in the following scenarios:\nReplication configuration API Version 2006-03-01 150",
      "start_idx": 268904,
      "end_idx": 270416,
      "metadata": {
        "num_sentences": 14,
        "num_words": 216,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "replication configuration",
            "IAM role",
            "permissions",
            "EventBridge",
            "replication latency",
            "XML file",
            "replication rules",
            "destination buckets",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge",
            "IAM role",
            "ReplicationConfiguration",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge"
          ],
          "mentioned_tools": [
            "IAM role configuration"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to configure replication for Amazon S3 on Outposts, including permissions, rules, and troubleshooting replication failures using EventBridge notifications. It also provides details about the replication configuration format and requirements.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for Amazon S3 on Outposts?",
            "What permissions are required for replication in S3 on Outposts?",
            "What isn't supported by S3 Replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "EventBridge",
          "replication rules",
          "permissions",
          "IAM role",
          "Amazon S3 on Outposts",
          "XML file",
          "API Version 2006-03-01",
          "Amazon EventBridge",
          "replication latency",
          "ReplicationConfiguration",
          "destination buckets",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_152",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 You want to replicate all objects.\n\u2022 You want to replicate one subset of objects. You identify the object subset by adding a filter in\nthe rule. In the filter, you specify an object key prefix, tags, or a combination of both, to identify\nthe subset of objects that the rule applies to.\nYou add multiple rules in a replication configuration if you want to replicate different subsets of\nobjects. In each rule, you specify a filter that selects a different subset of objects. For example,\nyou might choose to replicate objects that have either tax/ or document/ key prefixes. To do\nthis, you add two rules, one that specifies the tax/ key prefix filter and another that specifies the\ndocument/ key prefix.\nFor more information about S3 on Outposts replication configuration and replication rules, see\nReplicationConfiguration in the Amazon Simple Storage Service API Reference.\nRequirements for S3 Replication on Outposts\nReplication requires the following:\n\u2022 The destination Outpost CIDR range must be associated in your source Outpost subnet table. For\nmore information, see Prerequisites for creating replication rules.\n\u2022 Both the source and destination buckets must have S3 Versioning enabled. For more information\nabout versioning, see Managing S3 Versioning for your S3 on Outposts bucket.\n\u2022 Amazon S3 on Outposts must have permission to replicate objects from the source bucket to the\ndestination bucket on your behalf. That means you must create a service role to delegate GET\nand PUT permissions to S3 on Outposts.\n1. Before creating the service role, you must have GET permission on the source bucket and PUT\npermission on the destination bucket.\n2. To create the service role to delegate permissions to S3 on Outposts, you must first configure\npermissions to allow an IAM entity (a user or role) to perform the iam:CreateRole and\niam:PassRole actions. Then, you allow the IAM entity to create a service role. To make S3\non Outposts assume the service role on your behalf and delegate GET and PUT permissions to\nS3 on Outposts, you must assign the necessary trust and permissions policies to the role. For\nmore information about these permissions for S3 on Outposts, see Creating an IAM role. For\nmore information about creating a service role, see Creating a service role.\nRequirements for S3 Replication on Outposts API Version 2006-03-01 151",
      "start_idx": 270416,
      "end_idx": 272805,
      "metadata": {
        "num_sentences": 24,
        "num_words": 392,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Requirements"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "replication rules",
            "object key prefix",
            "Versioning",
            "service role",
            "IAM entity",
            "permissions",
            "trust policies",
            "CIDR range"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IAM",
            "ReplicationConfiguration",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM Role Management"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for Amazon S3 on Outposts, including the requirements, steps for creating replication rules, and necessary permissions for delegating GET and PUT operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements for S3 replication on Outposts?",
            "How do I create a service role for S3 on Outposts replication?",
            "What filters can I use to replicate specific subsets of objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "replication rules",
          "permissions",
          "object key prefix",
          "S3 on Outposts",
          "IAM entity",
          "service role",
          "CIDR range",
          "Amazon S3",
          "Versioning",
          "Outposts",
          "IAM",
          "ReplicationConfiguration",
          "API Version 2006-03-01",
          "replication",
          "trust policies"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_153",
      "text": "\n\nAmazon S3 on Outposts User Guide\nWhat is replicated?\nBy default, S3 on Outposts replicates the following:\n\u2022 Objects created after you add a replication configuration.\n\u2022 Object metadata from the source objects to the replicas. For information about how to replicate\nmetadata from the replicas to the source objects, see Replication status if Amazon S3 replica\nmodification sync on Outposts is enabled.\n\u2022 Object tags, if there are any.\nHow delete operations affect replication\nIf you delete an object from the source bucket, the following actions occur by default:\n\u2022 If you make a DELETE request without specifying an object version ID, S3 on Outposts adds a\ndelete marker. S3 on Outposts deals with the delete marker as follows:\n\u2022 S3 on Outposts does not replicate the delete marker by default.\n\u2022 However, you can add delete marker replication to non-tag-based rules. For more information\nabout how to enable delete marker replication in your replication configuration, see Using the\nS3 console.\n\u2022 If you specify an object version ID to delete in a DELETE request, S3 on Outposts permanently\ndeletes that object version in the source bucket. However, it doesn't replicate the deletion in\nthe destination buckets. In other words, it doesn't delete the same object version from the\ndestination buckets. This behavior protects data from malicious deletions.\nWhat isn't replicated?\nBy default, S3 on Outposts doesn't replicate the following:\n\u2022 Objects in the source bucket that are replicas that were created by another replication rule. For\nexample, suppose you configure replication where bucket A is the source and bucket B is the\ndestination. Now suppose that you add another replication configuration where bucket B is the\nsource and bucket C is the destination. In this case, objects in bucket B that are replicas of objects\nin bucket A are not replicated to bucket C.\nWhat is replicated? API Version 2006-03-01 152",
      "start_idx": 272805,
      "end_idx": 274723,
      "metadata": {
        "num_sentences": 19,
        "num_words": 313,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication configuration",
            "delete marker",
            "object metadata",
            "object tags",
            "replica modification sync",
            "non-tag-based rules",
            "source bucket",
            "destination buckets",
            "object version ID"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "replication configuration",
            "S3 console",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "S3 console"
          ]
        },
        "semantic": {
          "summary": "The document explains the default replication behavior of Amazon S3 on Outposts, including what is and isn't replicated, and how delete operations affect replication. It also provides guidance on enabling additional replication features like delete marker replication.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What data is replicated by default in S3 on Outposts?",
            "How do delete operations affect replication in S3 on Outposts?",
            "What configurations are required to enable delete marker replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replica modification sync",
          "S3 console",
          "object version ID",
          "S3 on Outposts",
          "Amazon S3",
          "non-tag-based rules",
          "API Version 2006-03-01",
          "source bucket",
          "Outposts",
          "delete marker",
          "object tags",
          "object metadata",
          "destination buckets",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_154",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Objects in the source bucket that have already been replicated to a different destination. For\nexample, if you change the destination bucket in an existing replication configuration, S3 on\nOutposts won't replicate the objects again.\n\u2022 Objects that are created with server-side encryption with customer-provided encryption keys\n(SSE-C).\n\u2022 Updates to bucket-level subresources.\nFor example, if you change the lifecycle configuration or add a notification configuration to your\nsource bucket, these changes are not applied to the destination bucket. This feature makes it\npossible to have different configurations on the source and destination buckets.\n\u2022 Actions performed by lifecycle configuration.\nFor example, if you enable a lifecycle configuration only on your source bucket and configure\nexpiration actions, S3 on Outposts creates delete markers for expired objects in the source\nbucket but doesn't replicate those markers to the destination buckets. If you want the same\nlifecycle configuration applied to both the source and destination buckets, enable the same\nlifecycle configuration on both. For more information about lifecycle configuration, see Creating\nand managing a lifecycle configuration for your Amazon S3 on Outposts bucket.\nWhat isn't supported by S3 Replication on Outposts?\nThe following S3 Replication features are currently not supported by S3 on Outposts:\n\u2022 S3 Replication Time Control (S3 RTC). S3 RTC is not supported because the object traffic in S3\nReplication on Outposts travels over your on-premises network (the local gateway). For more\ninformation about local gateways, see Working with the local gateway in the AWS Outposts User\nGuide.\n\u2022 S3 Replication for Batch Operations.\nSetting up replication\nNote\nObjects that existed in your bucket before you set up a replication rule aren't replicated\nautomatically. In other words, Amazon S3 on Outposts doesn't replicate objects\nretroactively. To replicate objects that were created before your replication configuration,\nWhat isn't supported by S3 Replication on Outposts? API Version 2006-03-01 153",
      "start_idx": 274723,
      "end_idx": 276839,
      "metadata": {
        "num_sentences": 19,
        "num_words": 315,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Limitations",
              "Configuration",
              "Features"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "SSE-C",
            "lifecycle configuration",
            "delete markers",
            "replication rule",
            "S3 RTC",
            "local gateway",
            "Batch Operations",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3",
            "S3 Replication",
            "S3 RTC",
            "AWS Outposts",
            "local gateway"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document outlines limitations and features of Amazon S3 Replication on Outposts, including unsupported features like S3 RTC and Batch Operations, and explains configuration nuances for lifecycle management and encryption settings.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What features are not supported by S3 Replication on Outposts?",
            "How does lifecycle configuration affect S3 Replication on Outposts?",
            "Can S3 Replication on Outposts retroactively replicate objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "local gateway",
          "S3 Replication",
          "SSE-C",
          "replication rule",
          "Batch Operations",
          "Amazon S3",
          "AWS Outposts",
          "Outposts",
          "lifecycle configuration",
          "S3 RTC",
          "delete markers"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_155",
      "text": "\n\nAmazon S3 on Outposts User Guide\nyou can use the CopyObject API operation to copy them to the same bucket. After\nthe objects are copied, they appear as \"new\" objects in the bucket and the replication\nconfiguration will apply to them. For more information about copying an object, see\nCopying an object in an Amazon S3 on Outposts bucket using the AWS SDK for Java and\nCopyObject in the Amazon Simple Storage Service API Reference.\nTo enable S3 Replication on Outposts, add a replication rule to your source Outposts bucket. The\nreplication rule tells S3 on Outposts to replicate objects as specified. In the replication rule, you\nmust provide the following:\n\u2022 The source Outposts bucket access point \u2013 The access point Amazon Resource Name (ARN) or\naccess point alias of the bucket from which you want S3 on Outposts to replicate the objects. For\nmore information about using access point aliases, see Using a bucket-style alias for your S3 on\nOutposts bucket access point.\n\u2022 The objects that you want to replicate \u2013 You can replicate all of the objects in the source\nOutposts bucket or a subset. You identify a subset by providing a key name prefix, one or more\nobject tags, or both in the configuration.\nFor example, if you configure a replication rule to replicate only objects with the key name prefix\nTax/, S3 on Outposts replicates objects with keys such as Tax/doc1 or Tax/doc2. But it doesn't\nreplicate objects with the key Legal/doc3. If you specify both a prefix and one or more tags, S3\non Outposts replicates only objects that have the specific key prefix and tags.\n\u2022 The destination Outposts bucket \u2013 The ARN or access point alias of the bucket to which you\nwant S3 on Outposts to replicate the objects.\nYou can configure the replication rule by using the REST API, AWS SDKs, AWS Command Line\nInterface (AWS CLI), or Amazon S3 console.\nS3 on Outposts also provides API operations to support setting up replication rules. For more\ninformation, see the following topics in the Amazon Simple Storage Service API Reference:\n\u2022 PutBucketReplication\n\u2022 GetBucketReplication\n\u2022 DeleteBucketReplication\nTopics\nSetting up replication API Version 2006-03-01 154",
      "start_idx": 276839,
      "end_idx": 279002,
      "metadata": {
        "num_sentences": 16,
        "num_words": 364,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "API Usage"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts bucket",
            "replication rule",
            "access point ARN",
            "key name prefix",
            "object tags",
            "destination bucket",
            "PutBucketReplication",
            "GetBucketReplication",
            "DeleteBucketReplication"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "AWS CLI",
            "Amazon Simple Storage Service API Reference",
            "Outposts bucket access point"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure S3 Replication on Outposts by setting up replication rules using various tools like AWS SDK, AWS CLI, and the REST API. It also details the required parameters for replication, such as source and destination buckets, key prefixes, and object tags.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure S3 Replication on Outposts?",
            "What are the required parameters for setting up replication rules?",
            "Which tools can be used to manage S3 Replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts bucket access point",
          "access point ARN",
          "key name prefix",
          "PutBucketReplication",
          "DeleteBucketReplication",
          "Outposts bucket",
          "S3 Replication",
          "S3 on Outposts",
          "replication rule",
          "Amazon S3",
          "GetBucketReplication",
          "AWS CLI",
          "AWS SDK for Java",
          "Amazon Simple Storage Service API Reference",
          "object tags"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_156",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Prerequisites for creating replication rules\n\u2022 Creating replication rules on Outposts\nPrerequisites for creating replication rules\nTopics\n\u2022 Connecting your source and destination Outpost subnets\n\u2022 Creating an IAM role\nConnecting your source and destination Outpost subnets\nTo have your replication traffic go from your source Outpost to your destination Outpost over your\nlocal gateway, you must add a new route to set up networking. You must connect the Classless\nInter-Domain Routing (CIDR) networking ranges of your access points together. For each pair of\naccess points, you need to set up this connection only once.\nSome steps to set up the connection are different, depending on the access type of your Outposts\nendpoints that are associated with your access points. The access type for endpoints is either\nPrivate (direct virtual private cloud [VPC] routing for AWS Outposts) or Customer owned IP (a\ncustomer-owned IP address pool [CoIP pool] within your on-premises network).\nStep 1: Find the CIDR range of your source Outposts endpoint\nTo find the CIDR range of your source endpoint that's associated with your source access point\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. In the Outposts buckets list, choose the source bucket that you want for replication.\n4. Choose the Outposts access points tab, and choose the Outposts access point for the source\nbucket for your replication rule.\n5. Choose the Outposts endpoint.\n6. Copy the subnet ID for use in Step 5.\n7. The method that you use to find the CIDR range of the source Outposts endpoint depends on\nthe access type of your endpoint.\nSetting up replication API Version 2006-03-01 155",
      "start_idx": 279002,
      "end_idx": 280815,
      "metadata": {
        "num_sentences": 20,
        "num_words": 294,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Networking Setup",
              "IAM Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CIDR",
            "replication rules",
            "IAM role",
            "local gateway",
            "access points",
            "VPC routing",
            "CoIP pool",
            "subnet ID"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "IAM role",
            "VPC",
            "CoIP pool"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "IAM Configuration",
            "Storage Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This document provides a step-by-step guide for setting up replication rules on Amazon S3 Outposts, including configuring networking between source and destination Outpost subnets and creating an IAM role.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication rules on Amazon S3 Outposts?",
            "What are the prerequisites for setting up replication between Outposts?",
            "How do I find the CIDR range of my source Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "replication rules",
          "CIDR",
          "local gateway",
          "IAM role",
          "subnet ID",
          "Amazon S3",
          "CoIP pool",
          "access points",
          "Outposts",
          "VPC",
          "AWS Outposts",
          "VPC routing"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_157",
      "text": "\n\nAmazon S3 on Outposts User Guide\nIn the Outposts endpoint overview section, see the Access Type.\n\u2022 If the access type is Private, copy the Classless inter-domain routing (CIDR) value to use in\nStep 6.\n\u2022 If the access type is Customer Owned IP, do the following:\n1. Copy the Customer owned IPv4 pool value to use as the ID of the address pool later on.\n2. Open the AWS Outposts console at https://console.aws.amazon.com/outposts/.\n3. In the navigation pane, choose Local gateway route tables.\n4. Choose the Local gateway route table ID value of your source Outpost.\n5. In the details pane, choose the CoIP pools tab. Paste the value of your CoIP pool ID that\nyou copied previously in the search box.\n6. For the matched CoIP pool, copy the corresponding CIDRs value of your source Outposts\nendpoint for use in Step 6.\nStep 2: Find the subnet ID and the CIDR range of your destination Outposts endpoint\nTo find the subnet ID and the CIDR range of your destination endpoint that's associated with your\ndestination access point, follow the same substeps in Step 1 and change your source Outposts\nendpoint to your destination Outposts endpoint when you apply those substeps. Copy the subnet\nID value of your destination Outposts endpoint for use in Step 6. Copy the CIDR value of your\ndestination Outposts endpoint for use in Step 5.\nStep 3: Find the local gateway ID of your source Outpost\nTo find the local gateway ID of your source Outpost\n1. Open the AWS Outposts console at https://console.aws.amazon.com/outposts/.\n2. In the left navigation pane, choose Local gateways.\n3. On the Local gateways page, find the Outpost ID of your source Outpost that you want to use\nfor replication.\n4. Copy the local gateway ID value of your source Outpost for use in Step 5.\nFor more information about local gateway, see Local gateway in the AWS Outposts User Guide.\nSetting up replication API Version 2006-03-01 156",
      "start_idx": 280815,
      "end_idx": 282717,
      "metadata": {
        "num_sentences": 28,
        "num_words": 328,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CIDR",
            "Customer Owned IP",
            "Local gateway",
            "IPv4 pool",
            "subnet ID",
            "replication",
            "endpoint",
            "AWS console"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Local gateway",
            "CoIP pool",
            "CIDR range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to configure Amazon S3 on Outposts, focusing on identifying endpoint details, CIDR ranges, and local gateway configurations for replication purposes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon S3 on Outposts?",
            "What are the steps to find the CIDR range for a source Outpost?",
            "How can I locate the local gateway ID of my source Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Local gateway",
          "IPv4 pool",
          "CIDR",
          "AWS console",
          "subnet ID",
          "Amazon S3",
          "CoIP pool",
          "CIDR range",
          "Outposts",
          "endpoint",
          "replication",
          "AWS Outposts",
          "Customer Owned IP"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_158",
      "text": "\n\nAmazon S3 on Outposts User Guide\nStep 4: Find the local gateway ID of your destination Outpost\nTo find the local gateway ID of your destination Outpost, follow the same substeps in Step 3,\nexcept look for the Outpost ID for your destination Outpost. Copy the local gateway ID value of\nyour destination Outpost for use in Step 6.\nStep 5: Set up the connection from your source Outpost subnet to your destination Outpost\nsubnet\nTo connect from your source Outpost subnet to your destination Outpost subnet\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/.\n2. In the left navigation pane, choose Subnets.\n3. In the search box, enter the subnet ID for your source Outposts endpoint that you found in\nStep 1. Choose the subnet with the matched subnet ID.\n4. For the matched subnet item, choose the Route table value of this subnet.\n5. On the page with a selected route table, choose Actions, and then choose Edit routes.\n6. On the Edit routes page, choose Add route.\n7. Under Destination, enter the CIDR range of your destination Outposts endpoint that you\nfound in Step 2.\n8. Under Target, choose Outpost Local Gateway, and enter the local gateway ID of your source\nOutpost that you found in Step 3.\n9. Choose Save changes.\n10. Make sure the Status for the route is Active.\nStep 6: Set up the connection from your destination Outpost subnet to your source Outpost\nsubnet\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/.\n2. In the left navigation pane, choose Subnets.\n3. In the search box, enter the subnet ID for your destination Outposts endpoint that you found\nin Step 2. Choose the subnet with the matched subnet ID.\n4. For the matched subnet item, choose the Route table value of this subnet.\nSetting up replication API Version 2006-03-01 157",
      "start_idx": 282717,
      "end_idx": 284577,
      "metadata": {
        "num_sentences": 33,
        "num_words": 322,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Local Gateway ID",
            "VPC Console",
            "Subnet",
            "Route Table",
            "CIDR Range",
            "Replication",
            "Endpoint",
            "AWS Management Console"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Local Gateway",
            "VPC Console",
            "Route Table"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Services",
            "Infrastructure Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for setting up connections between subnets on AWS Outposts using the VPC console and configuring route tables for proper networking.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up a connection between subnets on AWS Outposts?",
            "What is the process for configuring route tables in AWS Outposts?",
            "Where can I find the local gateway ID for my destination Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "Subnet",
          "Replication",
          "Route Table",
          "Amazon S3",
          "Local Gateway ID",
          "Endpoint",
          "Outposts",
          "VPC Console",
          "Local Gateway",
          "VPC",
          "CIDR Range",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_159",
      "text": "\n\nAmazon S3 on Outposts User Guide\n5. On the page with a selected route table, choose Actions, and then choose Edit routes.\n6. On the Edit routes page, choose Add route.\n7. Under Destination, enter the CIDR range of your source Outposts endpoint that you found in\nStep 1.\n8. Under Target, choose Outpost Local Gateway, and enter the local gateway ID of your\ndestination Outpost that you found in Step 4.\n9. Choose Save changes.\n10. Make sure the Status for the route is Active.\nAfter you connect the CIDR networking ranges of your source and destination access points, you\nmust create an AWS Identity and Access Management (IAM) role.\nCreating an IAM role\nBy default, all S3 on Outposts resources\u2014buckets, objects, and related subresources\u2014are private,\nand only the resource owner can access the resource. S3 on Outposts needs permissions to read\nand replicate objects from the source Outposts bucket. You grant these permissions by creating an\nIAM service role and specifying that role in your replication configuration.\nThis section explains the trust policy and minimum required permissions policy. The example\nwalkthroughs provide step-by-step instructions to create an IAM role. For more information, see\nCreating replication rules on Outposts. For more information about IAM roles, see IAM roles in the\nIAM User Guide.\n\u2022 The following example shows a trust policy, where you identify S3 on Outposts as the service\nprincipal that can assume the role.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"s3-outposts.amazonaws.com\"\n},\n\"Action\":\"sts:AssumeRole\"\n}\n]\nSetting up replication API Version 2006-03-01 158",
      "start_idx": 284577,
      "end_idx": 286227,
      "metadata": {
        "num_sentences": 22,
        "num_words": 255,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "IAM Policy"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM role",
            "trust policy",
            "replication configuration",
            "CIDR range",
            "local gateway ID",
            "permissions policy",
            "source Outposts endpoint",
            "destination Outposts bucket",
            "service principal"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "Outpost Local Gateway",
            "AWS Identity and Access Management",
            "Replication API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Policy Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "STS"
          ],
          "mentioned_tools": [
            "Replication API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure route tables and IAM roles for Amazon S3 on Outposts, including setting up replication with required trust and permissions policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure route tables for Amazon S3 on Outposts?",
            "What permissions are required for S3 replication on Outposts?",
            "How do I create a trust policy for an IAM role in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "destination Outposts bucket",
          "Outpost Local Gateway",
          "permissions policy",
          "trust policy",
          "IAM role",
          "Amazon S3 on Outposts",
          "AWS Identity and Access Management",
          "service principal",
          "CIDR range",
          "source Outposts endpoint",
          "local gateway ID",
          "IAM",
          "Replication API",
          "STS",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_160",
      "text": "\n\nAmazon S3 on Outposts User Guide\n}\n\u2022 The following example shows an access policy, where you grant the role permissions to perform\nreplication tasks on your behalf. When S3 on Outposts assumes the role, it has the permissions\nthat you specify in this policy. To use this policy, replace the user input placeholders\nwith your own information. Make sure to replace them with the Outpost IDs of your source\nand destination Outposts and the bucket names and access point names of your source and\ndestination Outposts buckets.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\nbucket/SOURCE-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\naccesspoint/SOURCE-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n},\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/\nbucket/DESTINATION-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/\naccesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n}\n]\n}\nThe access policy grants permissions for the following actions:\nSetting up replication API Version 2006-03-01 159",
      "start_idx": 286227,
      "end_idx": 287646,
      "metadata": {
        "num_sentences": 5,
        "num_words": 135,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Access Policy",
              "Replication"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access policy",
            "replication tasks",
            "permissions",
            "Outpost IDs",
            "bucket names",
            "access point names",
            "AWS ARN",
            "replication actions",
            "API Version 2006-03-01"
          ],
          "entities": [
            "S3 on Outposts",
            "Outpost IDs",
            "bucket names",
            "access point names",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS IAM"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates an access policy for Amazon S3 on Outposts, granting permissions for replication tasks between source and destination Outposts. Users are instructed to replace placeholders with specific Outpost IDs, bucket names, and access point names.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an access policy for S3 on Outposts replication?",
            "What permissions are needed for replication tasks in S3 on Outposts?",
            "How do I replace placeholders in an S3 on Outposts policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket names",
          "permissions",
          "access point names",
          "S3 on Outposts",
          "Amazon S3 on Outposts",
          "replication tasks",
          "API Version 2006-03-01",
          "AWS ARN",
          "ARN",
          "access policy",
          "replication actions",
          "Outpost IDs"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_161",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 s3-outposts:GetObjectVersionForReplication \u2013 Permission for this action is granted\non all objects to allow S3 on Outposts to get a specific object version that's associated with\neach object.\n\u2022 s3-outposts:GetObjectVersionTagging \u2013 Permission for this action on objects in the\nSOURCE-OUTPOSTS-BUCKET bucket (the source bucket) allows S3 on Outposts to read object\ntags for replication. For more information, see Adding tags for S3 on Outposts buckets. If S3\non Outposts doesn't have this permission, it replicates the objects, but not the object tags.\n\u2022 s3-outposts:ReplicateObject and s3-outposts:ReplicateDelete \u2013 Permissions for\nthese actions on all objects in the DESTINATION-OUTPOSTS-BUCKET bucket (the destination\nbucket) allow S3 on Outposts to replicate objects or delete markers to the destination\nOutposts bucket. For information about delete markers, see How delete operations affect\nreplication.\nNote\n\u2022 Permission for the s3-outposts:ReplicateObject action on the DESTINATION-\nOUTPOSTS-BUCKET bucket (the destination bucket) also allows replication of\nobject tags. Therefore, you don't need to explicitly grant permission for the s3-\noutposts:ReplicateTags action.\n\u2022 For cross-account replication, the owner of the destination Outposts\nbucket must update its bucket policy to grant permission for the s3-\noutposts:ReplicateObject action on theDESTINATION-OUTPOSTS-BUCKET.\nThe s3-outposts:ReplicateObject action allows S3 on Outposts to replicate\nobjects and object tags to the destination Outposts bucket.\nFor a list of S3 on Outposts actions, see Actions defined by S3 on Outposts.\nImportant\nThe AWS account that owns the IAM role must have permissions for the actions that it\ngrants to the IAM role.\nFor example, suppose that the source Outposts bucket contains objects owned by\nanother AWS account. The owner of the objects must explicitly grant the AWS account\nthat owns the IAM role the required permissions through the bucket policy and the access\nSetting up replication API Version 2006-03-01 160",
      "start_idx": 287646,
      "end_idx": 289697,
      "metadata": {
        "num_sentences": 14,
        "num_words": 296,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Replication",
              "Bucket Policy"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "GetObjectVersionForReplication",
            "GetObjectVersionTagging",
            "ReplicateObject",
            "ReplicateDelete",
            "ReplicateTags",
            "IAM role",
            "bucket policy",
            "object tags",
            "cross-account replication"
          ],
          "entities": [
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "s3-outposts:GetObjectVersionForReplication",
            "s3-outposts:ReplicateObject",
            "AWS account"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "Replication"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the permissions required for setting up replication in Amazon S3 on Outposts, including actions for object and tag replication between source and destination buckets, as well as IAM role and bucket policy requirements for cross-account replication.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are required for S3 on Outposts replication?",
            "How does cross-account replication work in S3 on Outposts?",
            "What is the role of bucket policies in replication for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "s3-outposts:GetObjectVersionForReplication",
          "AWS account",
          "DESTINATION-OUTPOSTS-BUCKET",
          "GetObjectVersionTagging",
          "S3 on Outposts",
          "IAM role",
          "s3-outposts:ReplicateObject",
          "SOURCE-OUTPOSTS-BUCKET",
          "Amazon S3 on Outposts",
          "ReplicateObject",
          "bucket policy",
          "GetObjectVersionForReplication",
          "ReplicateDelete",
          "object tags",
          "ReplicateTags"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_162",
      "text": "\n\nAmazon S3 on Outposts User Guide\npoint policy. Otherwise, S3 on Outposts can't access the objects, and replication of the\nobjects fails.\nThe permissions described here are related to the minimum replication configuration.\nIf you choose to add optional replication configurations, you must grant additional\npermissions to S3 on Outposts.\nGranting permissions when the source and destination Outposts buckets are owned by different\nAWS accounts\nWhen the source and destination Outposts buckets aren't owned by the same accounts, the\nowner of the destination Outposts bucket must update the bucket and access point policies for\nthe destination bucket. These policies must grant the owner of the source Outposts bucket and\nthe IAM service role permissions to perform replication actions, as shown in the following policy\nexamples, or replication will fail. In these policy examples, DESTINATION-OUTPOSTS-BUCKET is\nthe destination bucket. To use these policy examples, replace the user input placeholders\nwith your own information.\nIf you're creating the IAM service role manually, set the role path as role/service-role/, as\nshown in the following policy examples. For more information, see IAM ARNs in the IAM User Guide.\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"PolicyForDestinationBucket\",\n\"Statement\":[\n{\n\"Sid\":\"Permissions on objects\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"arn:aws:iam::SourceBucket-account-ID:role/service-role/source-\naccount-IAM-role\"\n},\n\"Action\":[\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateObject\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:DestinationBucket-account-\nID:outpost/DESTINATION-OUTPOST-ID/bucket/DESTINATION-OUTPOSTS-BUCKET/object/*\"\n]\n}\nSetting up replication API Version 2006-03-01 161",
      "start_idx": 289697,
      "end_idx": 291425,
      "metadata": {
        "num_sentences": 11,
        "num_words": 213,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Setup",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "permissions",
            "IAM service role",
            "bucket policies",
            "access point policies",
            "AWS accounts",
            "policy examples",
            "ARNs",
            "replication actions"
          ],
          "entities": [
            "AWS",
            "IAM",
            "S3 Outposts buckets",
            "SourceBucket-account-ID",
            "DESTINATION-OUTPOSTS-BUCKET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM User Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication permissions for S3 on Outposts, particularly when the source and destination buckets are owned by different AWS accounts. It includes policy examples and detailed instructions for setting up the necessary IAM roles and bucket policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts with different account ownership?",
            "What permissions are required for S3 on Outposts replication?",
            "How do I set up an IAM service role for S3 on Outposts replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS accounts",
          "SourceBucket-account-ID",
          "IAM service role",
          "permissions",
          "ARNs",
          "access point policies",
          "S3 Outposts buckets",
          "DESTINATION-OUTPOSTS-BUCKET",
          "S3 on Outposts",
          "replication actions",
          "Amazon S3",
          "AWS Outposts",
          "IAM",
          "AWS",
          "replication"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_163",
      "text": "\n\nAmazon S3 on Outposts User Guide\n]\n}\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"PolicyForDestinationAccessPoint\",\n\"Statement\":[\n{\n\"Sid\":\"Permissions on objects\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"arn:aws:iam::SourceBucket-account-ID:role/service-role/source-\naccount-IAM-role\"\n},\n\"Action\":[\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateObject\"\n],\n\"Resource\" :[\n\"arn:aws:s3-outposts:region:DestinationBucket-account-\nID:outpost/DESTINATION-OUTPOST-ID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/\nobject/*\"\n]\n}\n]\n}\nNote\nIf objects in the source Outposts bucket are tagged, note the following:\nIf the source Outposts bucket owner grants S3 on Outposts permission for the s3-\noutposts:GetObjectVersionTagging and s3-outposts:ReplicateTags actions to\nreplicate object tags (through the IAM role), Amazon S3 replicates the tags along with the\nobjects. For information about the IAM role, see Creating an IAM role.\nCreating replication rules on Outposts\nS3 Replication on Outposts is the automatic, asynchronous replication of objects across buckets in\nthe same or different AWS Outposts. Replication copies newly created objects and object updates\nSetting up replication API Version 2006-03-01 162",
      "start_idx": 291425,
      "end_idx": 292629,
      "metadata": {
        "num_sentences": 4,
        "num_words": 133,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Configuration",
              "Replication Setup"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Replication",
            "IAM role",
            "Policy",
            "Access Point",
            "Object Tags",
            "s3-outposts",
            "Permissions",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "IAM",
            "Replication Rules",
            "Access Point"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication rules and permissions for Amazon S3 on Outposts, including setting up IAM roles and policies for object replication and tagging.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication rules for Amazon S3 on Outposts?",
            "What permissions are required for replicating objects and tags in S3 on Outposts?",
            "What is the role of IAM in S3 Outposts replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Replication",
          "IAM role",
          "Policy",
          "s3-outposts",
          "Amazon S3",
          "Access Point",
          "API Version 2006-03-01",
          "IAM",
          "Outposts",
          "Object Tags",
          "Permissions",
          "Replication Rules",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_164",
      "text": "\n\nAmazon S3 on Outposts User Guide\nfrom a source Outposts bucket to a destination Outposts bucket or buckets. For more information,\nsee Replicating objects for S3 on Outposts.\nNote\nObjects that existed in the source Outposts bucket before you set up replication rules\naren't replicated. In other words, S3 on Outposts doesn't replicate objects retroactively. To\nreplicate objects that were created before your replication configuration, you can use the\nCopyObject API operation to copy them to the same bucket. After the objects are copied,\nthey appear as \"new\" objects in the bucket and the replication configuration will apply to\nthem. For more information about copying an object, see Copying an object in an Amazon\nS3 on Outposts bucket using the AWS SDK for Java and CopyObject in the Amazon Simple\nStorage Service API Reference.\nWhen you configure replication, you add replication rules to the source Outposts bucket.\nReplication rules define which source Outposts bucket objects to replicate and the destination\nOutposts bucket or buckets where the replicated objects will be stored. You can create a rule to\nreplicate all the objects in a bucket or a subset of objects with a specific key name prefix, one or\nmore object tags, or both. A destination Outposts bucket can be in the same Outpost as the source\nOutposts bucket, or it can be in a different Outpost.\nFor S3 on Outposts replication rules, you must provide both the source Outposts bucket's access\npoint Amazon Resource Name (ARN) and the destination Outposts bucket's access point ARN\ninstead of the source and destination Outposts bucket names.\nIf you specify an object version ID to delete, S3 on Outposts deletes that object version in the\nsource Outposts bucket. But it doesn't replicate the deletion to the destination Outposts bucket. In\nother words, it doesn't delete the same object version from the destination Outposts bucket. This\nbehavior protects data from malicious deletions.\nWhen you add a replication rule to an Outposts bucket, the rule is enabled by default, so the rule\nstarts working as soon as you save it.\nIn this example, you set up replication for source and destination Outposts buckets that are on\ndifferent Outposts and are owned by the same AWS account. Examples are provided for using the\nAmazon S3 console, the AWS Command Line Interface (AWS CLI), and the AWS SDK for Java and\nAWS SDK for .NET. For information about cross-account S3 Replication on Outposts permissions,\nSetting up replication API Version 2006-03-01 163",
      "start_idx": 292629,
      "end_idx": 295149,
      "metadata": {
        "num_sentences": 20,
        "num_words": 412,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Replication",
              "Behavior"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication rules",
            "CopyObject API",
            "access point ARN",
            "object version ID",
            "replication configuration",
            "AWS SDK for Java",
            "AWS CLI",
            "Amazon S3 console",
            "cross-account replication"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "AWS CLI",
            "Amazon S3 console",
            "CopyObject API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for Amazon S3 on Outposts, including setting up replication rules and handling specific behaviors like retroactive replication and deletion protection. It also provides examples using the Amazon S3 console, AWS CLI, and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication for S3 on Outposts?",
            "What happens to objects created before replication rules are applied?",
            "How can I use the CopyObject API to replicate older objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point ARN",
          "replication rules",
          "object version ID",
          "S3 on Outposts",
          "Amazon S3",
          "Amazon S3 console",
          "AWS CLI",
          "AWS SDK for Java",
          "CopyObject API",
          "replication configuration",
          "cross-account replication"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_165",
      "text": "\n\nAmazon S3 on Outposts User Guide\nsee Granting permissions when the source and destination Outposts buckets are owned by\ndifferent AWS accounts.\nFor prerequisites to set up S3 on Outposts replication rules, see Prerequisites for creating\nreplication rules.\nUsing the S3 console\nFollow these steps to configure a replication rule when the destination Amazon S3 on Outposts\nbucket is in a different Outpost from the source Outposts bucket.\nIf the destination Outposts bucket is in a different account from the source Outposts bucket, you\nmust add a bucket policy to the destination Outposts bucket to grant the owner of the source\nOutposts bucket account permission to replicate objects in the destination Outposts bucket.\nTo create a replication rule\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the Outposts Buckets list, choose the name of the bucket that you want to use as the source\nbucket.\n3. Choose the Management tab, scroll down to the Replication rules section, and then choose\nCreate replication rule.\n4. For Replication rule name, enter a name for your rule to help identify the rule later. The name\nis required and must be unique within the bucket.\n5. Under Status, Enabled is chosen by default. An enabled rule starts to work as soon as you save\nit. If you want to enable the rule later, choose Disabled.\n6. Under Priority, the rule's priority value determines which rule to apply if there are overlapping\nrules. When objects are included in the scope of more than one replication rule, S3 on\nOutposts uses these priority values to avoid conflicts. By default, new rules are added to the\nreplication configuration at the highest priority. The higher the number, the higher the priority.\nTo change the priority for the rule, after you save the rule, choose the rule name from the\nreplication rule list, choose Actions, and then choose Edit priority.\n7. Under Source bucket, you have the following options for setting the replication source:\n\u2022 To replicate the whole bucket, choose Apply to all objects in the bucket.\nSetting up replication API Version 2006-03-01 164",
      "start_idx": 295149,
      "end_idx": 297301,
      "metadata": {
        "num_sentences": 26,
        "num_words": 357,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication rule",
            "bucket policy",
            "AWS Management Console",
            "source bucket",
            "destination bucket",
            "priority value",
            "replication configuration",
            "S3 console"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS Management Console",
            "Replication rules",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for configuring a replication rule in Amazon S3 on Outposts, including prerequisites and considerations for cross-account and cross-Outpost scenarios.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a replication rule in Amazon S3 on Outposts?",
            "What are the prerequisites for setting up S3 replication rules?",
            "How can I configure replication between Outposts buckets in different accounts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "priority value",
          "S3 console",
          "Outposts bucket",
          "replication rule",
          "Amazon S3",
          "API Version 2006-03-01",
          "bucket policy",
          "Outposts",
          "source bucket",
          "Replication rules",
          "destination bucket",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_166",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 To apply prefix or tag filtering to the replication source, choose Limit the scope of this rule\nby using one or more filters. You can combine a prefix and tags.\n\u2022 To replicate all objects that have the same prefix, under Prefix, enter a prefix in the box.\nUsing the Prefix filter limits replication to all objects that have names that begin with the\nsame string (for example, pictures).\nIf you enter a prefix that is the name of a folder, you must use a / (forward slash) as the\nlast character (for example, pictures/).\n\u2022 To replicate all objects that have one or more of the same object tags, choose Add tag,\nand then enter the key-value pair in the boxes. To add another tag, repeat the procedure.\nFor more information about object tags, see Adding tags for S3 on Outposts buckets.\n8. To access your S3 on Outposts source bucket for replication, under Source access point name,\nchoose an access point that is attached to the source bucket.\n9. Under Destination, choose the access point ARN of the destination Outposts bucket where you\nwant S3 on Outposts to replicate objects. The destination Outposts bucket can be in the same\nor a different AWS account as the source Outposts bucket.\nIf the destination bucket is in a different account from the source Outposts bucket, you must\nadd a bucket policy to the destination Outposts bucket to grant the owner of the source\nOutposts bucket account permission to replicate objects to the destination Outposts bucket.\nFor more information, see Granting permissions when the source and destination Outposts\nbuckets are owned by different AWS accounts.\nNote\nIf versioning is not enabled on the destination Outposts bucket, you get a warning that\ncontains an Enable versioning button. Choose this button to enable versioning on the\nbucket.\n10. Set up an AWS Identity and Access Management (IAM) service role that S3 on Outposts can\nassume to replicate objects on your behalf.\nTo set up an IAM role, under IAM role, do one of the following:\n\u2022 To have S3 on Outposts create a new IAM role for your replication configuration, choose\nChoose from existing IAM roles, and then choose Create new role. When you save the rule,\nSetting up replication API Version 2006-03-01 165",
      "start_idx": 297301,
      "end_idx": 299547,
      "metadata": {
        "num_sentences": 21,
        "num_words": 388,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Replication",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "prefix filter",
            "tag filtering",
            "access point",
            "destination bucket",
            "versioning",
            "IAM role",
            "bucket policy",
            "AWS accounts"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "access point ARN",
            "bucket policy",
            "replication configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Roles",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide details the steps to configure replication for Amazon S3 on Outposts, including using prefix and tag filters, setting up access points, enabling versioning, and creating IAM roles for replication permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts?",
            "What is the process to set up IAM roles for replication?",
            "How can I use prefix and tag filters for replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS accounts",
          "access point ARN",
          "tag filtering",
          "AWS IAM",
          "IAM role",
          "S3 on Outposts",
          "versioning",
          "AWS Identity and Access Management (IAM)",
          "Amazon S3 on Outposts",
          "prefix filter",
          "bucket policy",
          "destination bucket",
          "replication",
          "replication configuration",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_167",
      "text": "\n\nAmazon S3 on Outposts User Guide\na new policy is generated for the IAM role that matches the source and destination Outposts\nbuckets that you choose. We recommend that you choose Create new role.\n\u2022 You can also choose to use an existing IAM role. If you do, you must choose a role that\ngrants S3 on Outposts the necessary permissions for replication. If this role doesn't grant S3\non Outposts sufficient permissions to follow your replication rule, replication fails.\nTo choose an existing role, choose Choose from existing IAM roles, and then choose the role\nfrom the dropdown menu. You can also choose Enter an IAM role ARN and then enter the\nIAM role's Amazon Resource Name (ARN).\nImportant\nWhen you add a replication rule to an S3 on Outposts bucket, you must have the\niam:CreateRole and iam:PassRole permissions to be able to create and pass the\nIAM role that grants S3 on Outposts replication permissions. For more information, see\nGranting a user permissions to pass a role to an AWS service in the IAM User Guide.\n11. All objects in Outposts buckets are encrypted by default. For more information about S3 on\nOutposts encryption, see Data encryption in S3 on Outposts. Only objects that are encrypted\nby using server-side encryption with Amazon S3 managed keys (SSE-S3) can be replicated.\nThe replication of objects that are encrypted by using server-side encryption with AWS Key\nManagement Service (AWS KMS) keys (SSE-KMS) or server-side encryption with customer-\nprovided encryption keys (SSE-C) is not supported.\n12. As needed, enable the following additional options while setting the replication rule\nconfiguration:\n\u2022 If you want to enable S3 on Outposts replication metrics in your replication configuration,\nselect Replication metrics. For more information, see Monitoring progress with replication\nmetrics.\n\u2022 If you want to enable delete marker replication in your replication configuration, select\nDelete marker replication. For more information, see How delete operations affect\nreplication.\n\u2022 If you want to replicate metadata changes made to the replicas back to the source objects,\nselect Replica modification sync. For more information, see Replication status if Amazon S3\nreplica modification sync on Outposts is enabled.\n13. To finish, choose Create rule.\nSetting up replication API Version 2006-03-01 166",
      "start_idx": 299547,
      "end_idx": 301878,
      "metadata": {
        "num_sentences": 24,
        "num_words": 370,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions",
              "Replication"
            ]
          },
          "keywords": [
            "IAM role",
            "S3 on Outposts",
            "replication",
            "permissions",
            "encryption",
            "SSE-S3",
            "SSE-KMS",
            "replication metrics",
            "delete marker replication",
            "replica modification sync"
          ],
          "entities": [
            "IAM role ARN",
            "Outposts buckets",
            "AWS Key Management Service",
            "Amazon Resource Name",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Permissions",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM",
            "AWS Key Management Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide explains how to set up replication for Amazon S3 on Outposts buckets, including configuring IAM roles, enabling replication options, and understanding encryption requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts buckets?",
            "What permissions are required for S3 on Outposts replication?",
            "What encryption methods are supported for replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Amazon Resource Name",
          "replica modification sync",
          "permissions",
          "delete marker replication",
          "IAM role",
          "S3 on Outposts",
          "Outposts buckets",
          "AWS Key Management Service",
          "Amazon S3",
          "replication metrics",
          "encryption",
          "IAM",
          "SSE-S3",
          "SSE-KMS",
          "IAM role ARN"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_168",
      "text": "\n\nAmazon S3 on Outposts User Guide\nAfter you save your rule, you can edit, enable, disable, or delete your rule. To do so, go to the\nManagement tab for the source Outposts bucket, scroll down to the Replication rules section,\nchoose your rule, and then choose Edit rule.\nUsing the AWS CLI\nTo use the AWS CLI to set up replication when the source and destination Outposts buckets are\nowned by the same AWS account, you do the following:\n\u2022 Create source and destination Outposts buckets.\n\u2022 Enable versioning on both of the buckets.\n\u2022 Create an IAM role that gives S3 on Outposts permission to replicate objects.\n\u2022 Add the replication configuration to the source Outposts bucket.\nTo verify your setup, you test it.\nTo set up replication when the source and destination Outposts buckets are owned by the same\nAWS account\n1. Set a credentials profile for the AWS CLI. In this example, we use the profile name acctA. For\ninformation about setting credential profiles, see Named profiles in the AWS Command Line\nInterface User Guide.\nImportant\nThe profile that you use for this exercise must have the necessary permissions. For\nexample, in the replication configuration, you specify the IAM service role that S3\non Outposts can assume. You can do this only if the profile that you use has the\niam:CreateRole and iam:PassRole permissions. For more information, see\nGranting a user permissions to pass a role to an AWS service in the IAM User Guide.\nIf you use administrator credentials to create a named profile, the named profile will\nhave the necessary permission to perform all the tasks.\n2. Create a source bucket and enable versioning on it. The following create-bucket command\ncreates a SOURCE-OUTPOSTS-BUCKET bucket in the US East (N. Virginia) (us-east-1) Region.\nTo use this command, replace the user input placeholders with your own information.\nSetting up replication API Version 2006-03-01 167",
      "start_idx": 301878,
      "end_idx": 303775,
      "metadata": {
        "num_sentences": 21,
        "num_words": 317,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup",
              "Verification"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "AWS CLI",
            "IAM role",
            "versioning",
            "source bucket",
            "destination bucket",
            "permissions",
            "credentials profile",
            "replication configuration"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "IAM",
            "Outposts",
            "US East (N. Virginia)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to set up replication between source and destination Amazon S3 on Outposts buckets using the AWS CLI, including creating buckets, enabling versioning, and configuring permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication for S3 on Outposts?",
            "What permissions are required to configure S3 replication?",
            "How do I verify replication between Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "US East (N. Virginia)",
          "permissions",
          "credentials profile",
          "IAM role",
          "S3 on Outposts",
          "versioning",
          "Amazon S3",
          "AWS CLI",
          "IAM",
          "source bucket",
          "Outposts",
          "destination bucket",
          "replication",
          "AWS Outposts",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_169",
      "text": "\n\nAmazon S3 on Outposts User Guide\naws s3control create-bucket --bucket SOURCE-OUTPOSTS-BUCKET --outpost-id SOURCE-\nOUTPOST-ID --profile acctA --region us-east-1\nThe following put-bucket-versioning command enables versioning on the SOURCE-\nOUTPOSTS-BUCKET bucket. To use this command, replace the user input placeholders\nwith your own information.\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/bucket/SOURCE-OUTPOSTS-\nBUCKET --versioning-configuration Status=Enabled --profile acctA\n3. Create a destination bucket and enable versioning on it. The following create-bucket\ncommand creates a DESTINATION-OUTPOSTS-BUCKET bucket in the US West (Oregon) (us-\nwest-2) Region. To use this command, replace the user input placeholders with your\nown information.\nNote\nTo set up a replication configuration when both the source and destination Outposts\nbuckets are in the same AWS account, you use the same named profile. This example\nuses acctA. To test the replication configuration when the buckets are owned by\ndifferent AWS accounts, you specify different profiles for each bucket.\naws s3control create-bucket --bucket DESTINATION-OUTPOSTS-BUCKET --create-bucket-\nconfiguration LocationConstraint=us-west-2 --outpost-id DESTINATION-OUTPOST-ID --\nprofile acctA --region us-west-2\nThe following put-bucket-versioning command enables versioning on the\nDESTINATION-OUTPOSTS-BUCKET bucket. To use this command, replace the user input\nplaceholders with your own information.\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/bucket/DESTINATION-\nOUTPOSTS-BUCKET --versioning-configuration Status=Enabled --profile acctA\nSetting up replication API Version 2006-03-01 168",
      "start_idx": 303775,
      "end_idx": 305616,
      "metadata": {
        "num_sentences": 12,
        "num_words": 204,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration Setup"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Versioning",
            "Replication",
            "Bucket",
            "Region",
            "Profile",
            "Account ID",
            "API Version",
            "LocationConstraint"
          ],
          "entities": [
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "SOURCE-OUTPOST-ID",
            "DESTINATION-OUTPOST-ID",
            "123456789012"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and configure Amazon S3 Outposts buckets, enable versioning, and set up replication between buckets using AWS CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on Amazon S3 Outposts?",
            "How can I enable versioning for an S3 Outposts bucket?",
            "What is the process for setting up replication between S3 Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "123456789012",
          "Replication",
          "SOURCE-OUTPOST-ID",
          "DESTINATION-OUTPOSTS-BUCKET",
          "Region",
          "Account ID",
          "API Version",
          "Amazon S3",
          "Profile",
          "SOURCE-OUTPOSTS-BUCKET",
          "Versioning",
          "Outposts",
          "DESTINATION-OUTPOST-ID",
          "LocationConstraint"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_170",
      "text": "\n\nAmazon S3 on Outposts User Guide\n4. Create an IAM service role. Later in the replication configuration, you add this service role to\nthe SOURCE-OUTPOSTS-BUCKET bucket. S3 on Outposts assumes this role to replicate objects\non your behalf. You create an IAM role in two steps:\na. Create an IAM role.\ni. Copy the following trust policy and save it to a file named s3-on-outposts-role-\ntrust-policy.json in the current directory on your local computer. This policy\ngrants S3 on Outposts service principal permissions to assume the service role.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"s3-outposts.amazonaws.com\"\n},\n\"Action\":\"sts:AssumeRole\"\n}\n]\n}\nii. Run the following command to create the role. Replace the user input\nplaceholders with your own information.\naws iam create-role --role-name replicationRole --assume-role-policy-\ndocument file://s3-on-outposts-role-trust-policy.json --profile acctA\nb. Attach a permissions policy to the service role.\ni. Copy the following permissions policy and save it to a file named s3-on-outposts-\nrole-permissions-policy.json in the current directory on your local computer.\nThis policy grants permissions for various S3 on Outposts bucket and object\nactions. To use this policy, replace the user input placeholders with your own\ninformation.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\nSetting up replication API Version 2006-03-01 169",
      "start_idx": 305616,
      "end_idx": 307033,
      "metadata": {
        "num_sentences": 19,
        "num_words": 197,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "IAM role",
            "service role",
            "trust policy",
            "permissions policy",
            "S3 on Outposts",
            "replication",
            "AWS CLI",
            "sts:AssumeRole",
            "bucket",
            "object actions"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "S3 on Outposts",
            "AWS CLI",
            "replicationRole"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Role Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create and configure an IAM service role for Amazon S3 on Outposts replication, including setting up trust and permissions policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a service role for S3 on Outposts replication?",
            "What trust policy is needed for S3 on Outposts?",
            "How do I attach a permissions policy to an IAM role?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "sts:AssumeRole",
          "bucket",
          "permissions policy",
          "replicationRole",
          "AWS IAM",
          "trust policy",
          "IAM role",
          "S3 on Outposts",
          "object actions",
          "service role",
          "Amazon S3",
          "AWS CLI",
          "IAM",
          "replication"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_171",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-\nOUTPOST-ID/bucket/SOURCE-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-\nOUTPOST-ID/accesspoint/SOURCE-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n},\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-\nOUTPOST-ID/bucket/DESTINATION-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-\nOUTPOST-ID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n}\n]\n}\nii. Run the following command to create a policy and attach it to the role. Replace the\nuser input placeholders with your own information.\naws iam put-role-policy --role-name replicationRole --policy-\ndocument file://s3-on-outposts-role-permissions-policy.json --policy-\nname replicationRolePolicy --profile acctA\n5. Add a replication configuration to the SOURCE-OUTPOSTS-BUCKET bucket.\na. Although the S3 on Outposts API requires a replication configuration in XML format, the\nAWS CLI requires that you specify the replication configuration in JSON format. Save\nthe following JSON in a file called replication.json to the local directory on your\ncomputer. To use this configuration, replace the user input placeholders with your\nown information.\nSetting up replication API Version 2006-03-01 170",
      "start_idx": 307033,
      "end_idx": 308604,
      "metadata": {
        "num_sentences": 10,
        "num_words": 142,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions",
              "Policy Creation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM role policy",
            "replication configuration",
            "AWS CLI",
            "JSON format",
            "XML format",
            "access point",
            "permissions policy",
            "replicate object",
            "replicationRole"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "IAM",
            "replicationRolePolicy",
            "replication.json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Replication"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up replication for Amazon S3 on Outposts, including creating IAM role policies, configuring permissions, and using the AWS CLI to apply replication settings in JSON format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for Amazon S3 on Outposts?",
            "What permissions are required for S3 on Outposts replication?",
            "How can I use the AWS CLI to set up a replication configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "replicationRolePolicy",
          "permissions policy",
          "replicationRole",
          "Amazon S3 on Outposts",
          "replicate object",
          "AWS CLI",
          "IAM",
          "replication.json",
          "IAM role policy",
          "XML format",
          "JSON format",
          "replication configuration",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_172",
      "text": "\n\nAmazon S3 on Outposts User Guide\n{\n\"Role\": \"IAM-role-ARN\",\n\"Rules\": [\n{\n\"Status\": \"Enabled\",\n\"Priority\": 1,\n\"DeleteMarkerReplication\": { \"Status\": \"Disabled\" },\n\"Filter\" : { \"Prefix\": \"Tax\"},\n\"Destination\": {\n\"Bucket\":\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-\nID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT\"\n}\n}\n]\n}\nb. Run the following put-bucket-replication command to add the replication\nconfiguration to your source Outposts bucket. To use this command, replace the user\ninput placeholders with your own information.\naws s3control put-bucket-replication --account-id 123456789012 --\nbucket arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-\nID/bucket/SOURCE-OUTPOSTS-BUCKET --replication-configuration file://\nreplication.json --profile acctA\nc. To retrieve the replication configuration, use the get-bucket-replication command.\nTo use this command, replace the user input placeholders with your own\ninformation.\naws s3control get-bucket-replication --account-id 123456789012 --bucket\narn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\nbucket/SOURCE-OUTPOSTS-BUCKET --profile acctA\n6. Test the setup in the Amazon S3 console:\na. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\nb. In the SOURCE-OUTPOSTS-BUCKET bucket, create a folder named Tax.\nc. Add sample objects to the Tax folder in the SOURCE-OUTPOSTS-BUCKET bucket.\nSetting up replication API Version 2006-03-01 171",
      "start_idx": 308604,
      "end_idx": 310110,
      "metadata": {
        "num_sentences": 12,
        "num_words": 166,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Command Execution"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Replication",
            "IAM-role-ARN",
            "Bucket",
            "AWS CLI",
            "Replication Configuration",
            "DeleteMarkerReplication",
            "Prefix",
            "Access Point"
          ],
          "entities": [
            "Amazon S3",
            "IAM-role-ARN",
            "AWS CLI",
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up and manage replication for Amazon S3 buckets on AWS Outposts, including configuration, command examples, and testing steps.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for an Amazon S3 bucket on Outposts?",
            "What commands are used to set up and verify replication in AWS CLI?",
            "How can I test the replication setup in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Prefix",
          "Replication",
          "DESTINATION-OUTPOSTS-BUCKET",
          "IAM-role-ARN",
          "SOURCE-OUTPOSTS-BUCKET",
          "Amazon S3",
          "DeleteMarkerReplication",
          "AWS CLI",
          "Access Point",
          "Outposts",
          "Bucket",
          "AWS Outposts",
          "Replication Configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_173",
      "text": "\n\nAmazon S3 on Outposts User Guide\nd. In the DESTINATION-OUTPOSTS-BUCKET bucket, verify the following:\n\u2022 S3 on Outposts replicated the objects.\nNote\nThe amount of time that it takes for S3 on Outposts to replicate an object\ndepends on the size of the object. For information about how to see the status\nof replication, see Getting replication status information.\n\u2022 On the object's Properties tab, the Replication status is set to Replica (identifying this\nas a replica object).\nManaging your replication\nThis section describes additional replication configuration options that are available in S3 on\nOutposts, how to determine the replication status, and how to troubleshot replication. For\ninformation about core replication configuration, see Setting up replication.\nTopics\n\u2022 Monitoring progress with replication metrics\n\u2022 Getting replication status information\n\u2022 Troubleshooting replication\n\u2022 Using EventBridge for S3 Replication on Outposts\nMonitoring progress with replication metrics\nS3 Replication on Outposts provides detailed metrics for the replication rules in your replication\nconfiguration. With replication metrics, you can monitor in 5-minute intervals the progress of\nreplication by tracking bytes pending replication, replication latency replication, and operations\npending. To assist in troubleshooting any configuration issues, you can also set up Amazon\nEventBridge to receive notifications about replication failures.\nWhen replication metrics are enabled, S3 Replication on Outposts publishes the following metrics\nto Amazon CloudWatch:\nManaging your replication API Version 2006-03-01 172",
      "start_idx": 310110,
      "end_idx": 311720,
      "metadata": {
        "num_sentences": 10,
        "num_words": 226,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Monitoring",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "replication metrics",
            "Amazon CloudWatch",
            "EventBridge",
            "replication latency",
            "replica object",
            "replication rules",
            "replication status",
            "troubleshooting"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Amazon CloudWatch",
            "EventBridge",
            "Replication API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "Monitoring and Metrics",
            "Troubleshooting"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon CloudWatch",
            "EventBridge"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage replication for Amazon S3 on Outposts, including configuration options, monitoring replication progress using metrics, and troubleshooting issues. It also details the use of EventBridge for replication notifications.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor replication progress in S3 on Outposts?",
            "What metrics are available for replication in Amazon CloudWatch?",
            "How can I troubleshoot replication issues in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "EventBridge",
          "replication rules",
          "S3 on Outposts",
          "replica object",
          "Amazon CloudWatch",
          "troubleshooting",
          "replication metrics",
          "Amazon S3",
          "replication status",
          "Outposts",
          "replication latency",
          "Replication API",
          "replication"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_174",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 Bytes Pending Replication \u2013 The total number of bytes of objects that are pending replication\nfor a given replication rule.\n\u2022 Replication Latency \u2013 The maximum number of seconds by which the replication destination\nbucket is behind the source bucket for a given replication rule.\n\u2022 Operations Pending Replication \u2013 The number of operations that are pending replication for a\ngiven replication rule. Operations include objects, delete markers, and tags.\nNote\nS3 Replication on Outposts metrics are billed at the same rate as CloudWatch custom\nmetrics. For more information, see CloudWatch pricing.\nGetting replication status information\nThe replication status can help you determine the current state of an object that's being replicated\nby Amazon S3 on Outposts. The replication status of a source object will return either PENDING,\nCOMPLETED, or FAILED. The replication status of a replica will return REPLICA.\nReplication status overview\nIn a replication scenario, you have a source bucket on which you configure replication and a\ndestination bucket to which S3 on Outposts replicates objects. When you request an object (using\nGetObject) or object metadata (using HeadObject) from these buckets, S3 on Outposts returns\nthe x-amz-replication-status header in the response as follows:\n\u2022 When you request an object from the source bucket, S3 on Outposts returns the x-amz-\nreplication-status header if the object in your request is eligible for replication.\nFor example, suppose that you specify the object prefix TaxDocs in your replication\nconfiguration to tell S3 on Outposts to replicate only objects with the key name prefix\nTaxDocs. Any objects that you upload that have this key name prefix\u2014for example, TaxDocs/\ndocument1.pdf\u2014will be replicated. For object requests with this key name prefix, S3 on\nOutposts returns the x-amz-replication-status header with one of the following values for\nthe object's replication status: PENDING, COMPLETED, or FAILED.\nManaging your replication API Version 2006-03-01 173",
      "start_idx": 311720,
      "end_idx": 313770,
      "metadata": {
        "num_sentences": 15,
        "num_words": 312,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics",
              "Replication Status",
              "Header Information"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "replication rule",
            "replication status",
            "source bucket",
            "destination bucket",
            "x-amz-replication-status",
            "CloudWatch pricing",
            "object prefix",
            "replication latency",
            "pending replication"
          ],
          "entities": [
            "Amazon S3",
            "CloudWatch",
            "Outposts",
            "TaxDocs",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "Monitoring Metrics",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch"
          ],
          "mentioned_tools": [
            "GetObject",
            "HeadObject"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the metrics and replication status for objects replicated using Amazon S3 on Outposts. It details replication rules, latency, and the x-amz-replication-status header responses.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What does the x-amz-replication-status header indicate?",
            "How is replication latency calculated for Amazon S3 on Outposts?",
            "What metrics are available for monitoring S3 replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "x-amz-replication-status",
          "Amazon S3 on Outposts",
          "API Version 2006-03-01",
          "replication rule",
          "object prefix",
          "pending replication",
          "Amazon S3",
          "CloudWatch",
          "replication status",
          "source bucket",
          "replication latency",
          "Outposts",
          "destination bucket",
          "TaxDocs",
          "CloudWatch pricing"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_175",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\nIf object replication fails after you upload an object, you can't retry replication. You must\nupload the object again. Objects transition to a FAILED state for issues such as missing\nreplication role permissions or missing bucket permissions. For temporary failures, such\nas if a bucket or your Outpost is unavailable, the replication status doesn't transition\nto FAILED, but remains PENDING. After the resource is back online, S3 on Outposts\nresumes replicating those objects.\n\u2022 When you request an object from a destination bucket, if the object in your request is a replica\nthat S3 on Outposts created, S3 on Outposts returns the x-amz-replication-status header\nwith the value REPLICA.\nNote\nBefore deleting an object from a source bucket that has replication enabled, check the\nobject's replication status to ensure that the object has been replicated.\nReplication status if Amazon S3 replica modification sync on Outposts is enabled\nWhen your replication rules enable S3 on Outposts replica modification sync, replicas can report\nstatuses other than REPLICA. If metadata changes are in the process of replicating, the x-amz-\nreplication-status header for the replica returns PENDING. If replica modification sync fails to\nreplicate metadata, the header for the replica returns FAILED. If metadata is replicated correctly,\nthe header for the replica returns the value REPLICA.\nTroubleshooting replication\nIf object replicas don't appear in the destination Amazon S3 on Outposts bucket after you\nconfigure replication, use these troubleshooting tips to identify and fix issues.\n\u2022 The time it takes S3 on Outposts to replicate an object depends on several factors, including the\ndistance between the source and destination Outposts, and the size of the object.\nYou can check the source object's replication status. If the object's replication status is PENDING,\nS3 on Outposts hasn't completed the replication. If the object's replication status is FAILED,\ncheck the replication configuration that you set on the source bucket.\nManaging your replication API Version 2006-03-01 174",
      "start_idx": 313770,
      "end_idx": 315891,
      "metadata": {
        "num_sentences": 17,
        "num_words": 324,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "object replication",
            "replication status",
            "FAILED state",
            "PENDING state",
            "replica modification sync",
            "x-amz-replication-status",
            "source bucket",
            "destination bucket",
            "metadata replication",
            "Amazon S3 on Outposts"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "x-amz-replication-status",
            "replica modification sync",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Troubleshooting"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the behavior and troubleshooting of object replication in Amazon S3 on Outposts, including replication statuses (FAILED, PENDING, REPLICA) and how to manage issues like missing permissions or temporary unavailability.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What does the FAILED replication status mean in S3 on Outposts?",
            "How can I troubleshoot object replication issues in S3 on Outposts?",
            "What is the role of replica modification sync in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replica modification sync",
          "x-amz-replication-status",
          "PENDING state",
          "metadata replication",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "Amazon S3",
          "API Version 2006-03-01",
          "replication status",
          "FAILED state",
          "source bucket",
          "Outposts",
          "destination bucket",
          "object replication"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_176",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 In the replication configuration on the source bucket, verify the following:\n\u2022 The access point Amazon Resource Name (ARN) of the destination bucket is correct.\n\u2022 The key name prefix is correct. For example, if you set the configuration to replicate objects\nwith the prefix Tax, then only objects with key names such as Tax/document1 or Tax/\ndocument2 are replicated. An object with the key name document3 is not replicated.\n\u2022 The status is Enabled.\n\u2022 Verify that versioning hasn't been suspended on either bucket. Both the source and destination\nbuckets must have versioning enabled.\n\u2022 If the destination bucket is owned by another AWS account, verify that the bucket owner has a\nbucket policy on the destination bucket that allows the source bucket owner to replicate objects.\nFor an example, see Granting permissions when the source and destination Outposts buckets are\nowned by different AWS accounts.\n\u2022 If an object replica doesn't appear in the destination bucket, the following issues might prevent\nreplication:\n\u2022 S3 on Outposts doesn't replicate an object in a source bucket that is a replica created by\nanother replication configuration. For example, if you set a replication configuration from\nbucket A to bucket B to bucket C, S3 on Outposts doesn't replicate object replicas in bucket B\nto bucket C.\nIf you want to replicate objects in bucket A to bucket B and bucket C, set multiple bucket\ndestinations in different replication rules for your source bucket replication configuration.\nFor example, create two replication rules on source bucket A, with one rule to replicate to\ndestination bucket B and the other rule to replicate to destination bucket C.\n\u2022 A source bucket owner can grant other AWS accounts permission to upload objects. By default,\nthe source bucket owner doesn't have permissions for the objects created by other accounts.\nThe replication configuration replicates only the objects for which the source bucket owner has\naccess permissions. To avoid replication issues, the source bucket owner can grant other AWS\naccounts permissions to create objects conditionally, requiring explicit access permissions on\nthose objects.\n\u2022 Suppose that in the replication configuration, you add a rule to replicate a subset of objects that\nhave a specific tag. In this case, you must assign the specific tag key and value at the time that\nthe object is created in order for S3 on Outposts to replicate the object. If you first create an\nobject and then add the tag to that existing object, S3 on Outposts doesn't replicate the object.\n\u2022 Replication fails if the bucket policy denies access to the replication role for any of the following\nactions:\nManaging your replication API Version 2006-03-01 175",
      "start_idx": 315891,
      "end_idx": 318643,
      "metadata": {
        "num_sentences": 19,
        "num_words": 451,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Verification",
              "Configuration",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "replication configuration",
            "source bucket",
            "destination bucket",
            "versioning",
            "bucket policy",
            "replication rules",
            "object permissions",
            "tag key",
            "replication role"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS account",
            "ARN",
            "Tax/document"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "AWS Configuration",
            "Object Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes how to verify and troubleshoot replication configurations for Amazon S3 on Outposts, including prerequisites like versioning, bucket policies, and object tagging requirements.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify replication settings for Amazon S3 on Outposts?",
            "What causes replication failures in S3 buckets?",
            "How do I configure replication rules for specific object tags?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "replication role",
          "AWS account",
          "tag key",
          "replication rules",
          "Tax/document",
          "Amazon S3 on Outposts",
          "versioning",
          "Amazon S3",
          "bucket policy",
          "source bucket",
          "Outposts",
          "ARN",
          "destination bucket",
          "AWS Outposts",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_177",
      "text": "\n\nAmazon S3 on Outposts User Guide\nSource bucket:\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\nDestination buckets:\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateTags\"\n\u2022 Amazon EventBridge can notify you when objects don't replicate to their destination Outposts.\nFor more information, see Using EventBridge for S3 Replication on Outposts.\nUsing EventBridge for S3 Replication on Outposts\nAmazon S3 on Outposts is integrated with Amazon EventBridge and uses the s3-outposts\nnamespace. EventBridge is a serverless event bus service that you can use to connect your\napplications with data from a variety of sources. For more information, see What is Amazon\nEventBridge? in the Amazon EventBridge User Guide.\nTo assist in troubleshooting any replication configuration issues, you can set up Amazon\nEventBridge to receive notifications about replication failure events. EventBridge can notify you in\ninstances when objects don't replicate to their destination Outposts. For more information about\nthe current state of an object that's being replicated, see Replication status overview.\nWhenever certain events happen in your Outposts bucket, S3 on Outposts can send events to\nEventBridge. Unlike other destinations, you don't need to select which event types that you\nwant to deliver. You can also use EventBridge rules to route events to additional targets. After\nEventBridge is enabled, S3 on Outposts sends all of the following events to EventBridge.\nEvent type Description Namespace\nOperation The replication of an object within a s3-outposts\nFailedRep replication rule failed. For more informati\nlication on about S3 Replication on Outposts\nfailure reasons, see Using EventBridge to\nManaging your replication API Version 2006-03-01 176",
      "start_idx": 318643,
      "end_idx": 320456,
      "metadata": {
        "num_sentences": 15,
        "num_words": 248,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "replication failure",
            "replication status",
            "Outposts bucket",
            "s3-outposts namespace",
            "FailedReplication",
            "EventBridge rules",
            "replication configuration",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge",
            "FailedReplication",
            "s3-outposts namespace",
            "Replication status overview"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Replication",
          "secondary_categories": [
            "Event-Driven Architecture",
            "Serverless Computing"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 on Outposts integrates with Amazon EventBridge for replication failure notifications and troubleshooting. It details the event types sent to EventBridge and how to use rules for routing events to additional targets.",
          "intents": [
            "Debug",
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I troubleshoot replication failures in Amazon S3 on Outposts?",
            "What events does Amazon S3 on Outposts send to EventBridge?",
            "How do EventBridge rules help with replication management?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage and Replication]",
        "tf_idf_keywords": [
          "EventBridge",
          "EventBridge rules",
          "s3-outposts namespace",
          "Replication status overview",
          "Outposts bucket",
          "Amazon S3 on Outposts",
          "API Version 2006-03-01",
          "replication status",
          "Amazon EventBridge",
          "FailedReplication",
          "replication failure",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_178",
      "text": "\n\nAmazon S3 on Outposts User Guide\nEvent type Description Namespace\nview S3 Replication on Outposts failure\nreasons.\nUsing EventBridge to view S3 Replication on Outposts failure reasons\nThe following table lists S3 Replication on Outposts failure reasons. You can configure an\nEventBridge rule to publish and view the failure reason through Amazon Simple Queue Service\n(Amazon SQS), Amazon Simple Notification Service (Amazon SNS), AWS Lambda, or Amazon\nCloudWatch Logs. For more information about the permissions that are required to use these\nresources for EventBridge, see Using resource-based policies for EventBridge.\nReplication failure reason Description\nAssumeRoleNotPermitted S3 on Outposts can't assume the AWS\nIdentity and Access Management (IAM) role\nthat's specified in the replication configura\ntion.\nDstBucketNotFound S3 on Outposts can't find the destination\nbucket that's specified in the replication\nconfiguration.\nDstBucketUnversioned Versioning isn't enabled on the Outposts\ndestination bucket. To replicate objects with\nS3 Replication on Outposts, you must enable\nversioning on the destination bucket.\nDstDelObjNotPermitted S3 on Outposts can't replicate deletes to\nthe destination bucket. The s3-outpos\nts:ReplicateDelete permission\nmight be missing for the destination bucket.\nDstMultipartCompleteNotPermitted S3 on Outposts can't complete a multipart\nupload of objects in the destination bucket.\nThe s3-outposts:ReplicateObject\nManaging your replication API Version 2006-03-01 177",
      "start_idx": 320456,
      "end_idx": 321960,
      "metadata": {
        "num_sentences": 12,
        "num_words": 201,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Event Handling"
            ]
          },
          "keywords": [
            "S3 Replication on Outposts",
            "EventBridge",
            "IAM role",
            "destination bucket",
            "versioning",
            "permissions",
            "Amazon SQS",
            "Amazon SNS",
            "AWS Lambda",
            "CloudWatch Logs"
          ],
          "entities": [
            "Amazon S3",
            "EventBridge",
            "IAM",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "EventBridge",
            "AWS Lambda"
          ],
          "mentioned_tools": [
            "Amazon SQS",
            "Amazon SNS",
            "CloudWatch Logs"
          ]
        },
        "semantic": {
          "summary": "The documentation provides a reference for handling S3 Replication on Outposts failure reasons using EventBridge and related AWS services. It outlines specific failure scenarios and permissions required for troubleshooting.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the common failure reasons for S3 Replication on Outposts?",
            "How can EventBridge be used to monitor S3 Replication failures?",
            "What permissions are needed to replicate objects with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "EventBridge",
          "permissions",
          "CloudWatch Logs",
          "IAM role",
          "versioning",
          "Amazon SNS",
          "Amazon S3",
          "Amazon SQS",
          "IAM",
          "destination bucket",
          "AWS Lambda",
          "S3 Replication on Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_179",
      "text": "\n\nAmazon S3 on Outposts User Guide\nReplication failure reason Description\npermission might be missing for the\ndestination bucket.\nDstMultipartInitNotPermitted S3 on Outposts can't initiate a multipart\nupload of objects to the destination bucket.\nThe s3-outposts:ReplicateObject\npermission might be missing for the\ndestination bucket.\nDstMultipartPartUploadNotPe S3 on Outposts can't upload multipart\nrmitted upload objects in the destination bucket.\nThe s3-outposts:ReplicateObject\npermission might be missing for the\ndestination bucket.\nDstOutOfCapacity S3 on Outposts can't replicate to the\ndestination Outpost because the Outpost is\nout of S3 storage capacity.\nDstPutObjNotPermitted S3 on Outposts can't replicate objects to\nthe destination bucket. The s3-outpos\nts:ReplicateObject permission\nmight be missing for the destination bucket.\nDstPutTaggingNotPermitted S3 on Outposts can't replicate object tags\nto the destination bucket. The s3-outpos\nts:ReplicateObject permission\nmight be missing for the destination bucket.\nDstVersionNotFound S3 on Outposts can't find the required object\nversion in the destination bucket in order to\nreplicate that object version's metadata.\nSrcBucketReplicationConfigMissing S3 on Outposts can't find a replication\nconfiguration for the access point that's\nassociated with the source Outposts bucket.\nManaging your replication API Version 2006-03-01 178",
      "start_idx": 321960,
      "end_idx": 323351,
      "metadata": {
        "num_sentences": 13,
        "num_words": 180,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Descriptions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "permission",
            "multipart upload",
            "destination bucket",
            "replicate object",
            "Outpost capacity",
            "object tags",
            "metadata",
            "replication configuration"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "s3-outposts:ReplicateObject",
            "API Version 2006-03-01",
            "access point"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "Permissions"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains various replication failure reasons in Amazon S3 on Outposts, including issues related to permissions, capacity, and configuration. Each failure reason is accompanied by a description and potential missing permissions.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the common reasons for replication failures in S3 on Outposts?",
            "Which permissions are required to replicate objects in S3 on Outposts?",
            "What does the error 'DstOutOfCapacity' mean in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outpost capacity",
          "multipart upload",
          "S3 on Outposts",
          "permission",
          "replicate object",
          "s3-outposts:ReplicateObject",
          "Amazon S3",
          "API Version 2006-03-01",
          "metadata",
          "Outposts",
          "destination bucket",
          "object tags",
          "replication",
          "replication configuration",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_180",
      "text": "\n\nAmazon S3 on Outposts User Guide\nReplication failure reason Description\nSrcGetObjNotPermitted S3 on Outposts can't access the object\nin the source bucket for replication. The\ns3-outposts:GetObjectVersio\nnForReplication permission might be\nmissing for the source bucket.\nSrcGetTaggingNotPermitted S3 on Outposts can't access the object tag\ninformation from the source bucket. The\ns3-outposts:GetObjectVersio\nnTagging permission might be missing for\nthe source bucket.\nSrcHeadObjectNotPermitted S3 on Outposts can't retrieve object\nmetadata from the source bucket. The\ns3-outposts:GetObjectVersio\nnForReplication permission might be\nmissing for the source bucket.\nSrcObjectNotEligible The object isn't eligible for replication. The\nobject or its object tags don't match the\nreplication configuration.\nFor more information about troubleshooting replication, see the following topics:\n\u2022 Creating an IAM role\n\u2022 Troubleshooting replication\nMonitoring EventBridge with CloudWatch\nFor monitoring, Amazon EventBridge integrates with Amazon CloudWatch. EventBridge\nautomatically sends metrics to CloudWatch every minute. These metrics include the number of\nevents that have been matched by a rule and the number of times a target is invoked by a rule.\nWhen a rule runs in EventBridge, all of the targets associated with the rule are invoked. You can\nmonitor your EventBridge behavior through CloudWatch in the following ways.\nManaging your replication API Version 2006-03-01 179",
      "start_idx": 323351,
      "end_idx": 324821,
      "metadata": {
        "num_sentences": 14,
        "num_words": 200,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Troubleshooting",
              "Monitoring"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "permissions",
            "EventBridge",
            "CloudWatch",
            "IAM role",
            "monitoring",
            "object metadata",
            "replication configuration",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "EventBridge",
            "CloudWatch",
            "IAM role"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Replication",
          "secondary_categories": [
            "Monitoring and Logging",
            "IAM Permissions"
          ],
          "mentioned_services": [
            "Amazon S3",
            "EventBridge",
            "CloudWatch"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on troubleshooting replication issues in Amazon S3 on Outposts, including error codes and permissions. It also explains how Amazon EventBridge integrates with CloudWatch for monitoring purposes.",
          "intents": [
            "Debug",
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are common replication failure reasons in S3 on Outposts?",
            "How can I monitor EventBridge metrics using CloudWatch?",
            "What permissions are required for replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage and Replication]",
        "tf_idf_keywords": [
          "EventBridge",
          "permissions",
          "IAM role",
          "S3 on Outposts",
          "monitoring",
          "API Version 2006-03-01",
          "Amazon S3",
          "CloudWatch",
          "Outposts",
          "replication configuration",
          "replication",
          "object metadata"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_181",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 You can monitor the available EventBridge metrics for your EventBridge rules from the\nCloudWatch dashboard. Then, you can use CloudWatch features, such as CloudWatch alarms,\nto set alarms on certain metrics. If those metrics reach the custom threshold values that you've\nspecified in the alarms, you receive notifications and can take action accordingly.\n\u2022 You can set Amazon CloudWatch Logs as a target of your EventBridge rule. Then, EventBridge\ncreates log streams and CloudWatch Logs stores the text from the events as log entries. For more\ninformation, see EventBridge and CloudWatch Logs.\nFor more information about debugging EventBridge event delivery and archiving events, see the\nfollowing topics:\n\u2022 Event retry policy and using dead-letter queues\n\u2022 Archiving EventBridge events\nSharing S3 on Outposts by using AWS RAM\nAmazon S3 on Outposts supports sharing S3 capacity across multiple accounts within an\norganization by using AWS Resource Access Manager (AWS RAM). With S3 on Outposts sharing, you\ncan allow others to create and manage buckets, endpoints, and access points on your Outpost.\nThis topic demonstrates how to use AWS RAM to share S3 on Outposts and related resources with\nanother AWS account in your AWS organization.\nPrerequisites\n\u2022 The Outpost owner account has an organization configured in AWS Organizations. For more\ninformation, see Creating an organization in the AWS Organizations User Guide.\n\u2022 The organization includes the AWS account that you want to share your S3 on Outposts capacity\nwith. For more information, see Sending invitations to AWS accounts in the AWS Organizations\nUser Guide.\n\u2022 Select one of the following options that you want to share. The second resource (either Subnets\nor Outposts) must be selected so that endpoints are also accessible. Endpoints are a networking\nrequirement in order to access data stored in S3 on Outposts.\nSharing S3 on Outposts API Version 2006-03-01 180",
      "start_idx": 324821,
      "end_idx": 326788,
      "metadata": {
        "num_sentences": 17,
        "num_words": 311,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Monitoring",
              "Debugging",
              "Resource Sharing"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "EventBridge metrics",
            "CloudWatch alarms",
            "AWS RAM",
            "dead-letter queues",
            "archiving events",
            "AWS Organizations",
            "S3 capacity sharing",
            "Outpost endpoints",
            "Event retry policy"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "CloudWatch",
            "AWS RAM",
            "AWS Organizations"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Monitoring and Logging",
            "Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "CloudWatch"
          ],
          "mentioned_tools": [
            "AWS RAM",
            "AWS Organizations"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to monitor EventBridge metrics using CloudWatch and how to share S3 capacity on Outposts across AWS accounts using AWS RAM. It also provides information on debugging event delivery and archiving events.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor EventBridge metrics using CloudWatch?",
            "What are the prerequisites for sharing S3 on Outposts using AWS RAM?",
            "How can I debug EventBridge event delivery issues?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "EventBridge metrics",
          "EventBridge",
          "Outpost endpoints",
          "Amazon S3 on Outposts",
          "AWS RAM",
          "CloudWatch",
          "CloudWatch alarms",
          "dead-letter queues",
          "AWS Organizations",
          "Event retry policy",
          "S3 capacity sharing",
          "archiving events"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_182",
      "text": "\n\nAmazon S3 on Outposts User Guide\nOption 1 Option 2\nS3 on Outposts S3 on Outposts\nAllows the user to create buckets on your Allows the user to create buckets on your\nOutposts and access points and to add Outposts and access points and to add\nobjects to those buckets. objects to those buckets.\nSubnets Outposts\nAllows the user to use your virtual private Allows the user to see S3 capacity charts\ncloud (VPC) and the endpoints that are and the AWS Outposts console home page.\nassociated with your subnet. Also allows users to create subnets on shared\nOutposts and create endpoints.\nProcedure\n1. Sign in to the AWS Management Console by using the AWS account that owns the Outpost,\nand then open the AWS RAM console at https://console.aws.amazon.com/ram.\n2. Make sure that you have enabled sharing with AWS Organizations in AWS RAM. For\ninformation, see Enable resource sharing within AWS Organizations in the AWS RAM User\nGuide.\n3. Use either Option 1 or Option 2 in the prerequisites to create a resource share. If you have\nmultiple S3 on Outposts resources, select the Amazon Resource Names (ARNs) of the resources\nthat you want to share. To enable endpoints, share either your subnet or Outpost.\nFor more information about how to create a resource share, see Create a resource share in the\nAWS RAM User Guide.\n4. The AWS account that you shared your resources with should now be able to use S3 on\nOutposts. Depending on the option that you selected in the prerequisites, provide the\nfollowing information to the account user:\nOption 1 Option 2\nThe Outpost ID The Outpost ID\nProcedure API Version 2006-03-01 181",
      "start_idx": 326788,
      "end_idx": 328402,
      "metadata": {
        "num_sentences": 18,
        "num_words": 278,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "AWS RAM",
            "resource share",
            "Outposts",
            "subnets",
            "endpoints",
            "virtual private cloud",
            "AWS Organizations",
            "Amazon Resource Names",
            "capacity charts"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS RAM",
            "AWS Organizations",
            "Outposts ID",
            "Amazon Resource Names (ARNs)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS RAM",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to configuring and sharing S3 on Outposts resources using AWS RAM, including enabling resource sharing and creating subnets or endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure S3 on Outposts for resource sharing?",
            "What are the steps to enable sharing with AWS Organizations in AWS RAM?",
            "What information do I need to provide for sharing S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Resource Names",
          "Amazon Resource Names (ARNs)",
          "virtual private cloud",
          "capacity charts",
          "subnets",
          "S3 on Outposts",
          "resource share",
          "AWS RAM",
          "Outposts ID",
          "endpoints",
          "Amazon S3",
          "Outposts",
          "AWS Organizations",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_183",
      "text": "\n\nAmazon S3 on Outposts User Guide\nOption 1 Option 2\nThe VPC ID\nThe subnet ID\nThe security group ID\nNote\nThe user can confirm that the resources have been shared with them by using the AWS\nRAM console, the AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. The\nuser can view their existing resource shares by using the get-resource-shares CLI command.\nUsage examples\nAfter you have shared your S3 on Outposts resources with another account, that account can\nmanage buckets and objects on your Outpost. If you shared the Subnets resource, then that\naccount can use the endpoint that you created. The following examples demonstrate how a user\ncan use the AWS CLI to interact with your Outpost after you share these resources.\nExample : Create a bucket\nThe following example creates a bucket named amzn-s3-demo-bucket1 on the Outpost\nop-01ac5d28a6a232904. Before using this command, replace each user input placeholder\nwith the appropriate values for your use case.\naws s3control create-bucket --bucket amzn-s3-demo-bucket1 --outpost-\nid op-01ac5d28a6a232904\nFor more information about this command, see create-bucket in the AWS CLI Reference.\nExample : Create an access point\nThe following example creates an access point on an Outpost by using the example parameters in\nthe following table. Before using this command, replace these user input placeholder values\nand the AWS Region code with the appropriate values for your use case.\nUsage examples API Version 2006-03-01 182",
      "start_idx": 328402,
      "end_idx": 329885,
      "metadata": {
        "num_sentences": 11,
        "num_words": 236,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "VPC ID",
            "subnet ID",
            "security group ID",
            "AWS RAM console",
            "AWS CLI",
            "create-bucket",
            "access point",
            "resource shares",
            "Outpost"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS RAM console",
            "Outpost ID",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Networking",
            "Resource Sharing"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS RAM",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to share and manage Amazon S3 on Outposts resources using AWS CLI and other tools, with examples of creating buckets and access points.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a bucket on an Outpost using AWS CLI?",
            "What resources can be shared for S3 on Outposts?",
            "How can I confirm that resources have been shared with my account?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS RAM console",
          "VPC ID",
          "Amazon S3 on Outposts",
          "security group ID",
          "create-bucket",
          "subnet ID",
          "Outpost",
          "API Version 2006-03-01",
          "AWS CLI",
          "Amazon S3",
          "AWS RAM",
          "resource shares",
          "AWS Outposts",
          "Outpost ID",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_185",
      "text": "\n\nAmazon S3 on Outposts User Guide\nFor more information about this command, see put-object in the AWS CLI Reference.\nNote\nIf this operation results in a Resource not found error or is unresponsive, your VPC might\nnot have a shared endpoint.\nTo check whether there is a shared endpoint, use the list-shared-endpoints AWS CLI\ncommand. If there is no shared endpoint, work with the Outpost owner to create one.\nFor more information, see ListSharedEndpoints in the Amazon Simple Storage Service API\nReference.\nExample : Create an endpoint\nThe following example creates an endpoint on a shared Outpost. Before using this command,\nreplace the user input placeholder values for the Outpost ID, subnet ID, and security group\nID with the appropriate values for your use case.\nNote\nThe user can perform this operation only if the resource share includes the Outposts\nresource.\naws s3outposts create-endpoint --outposts-id op-01ac5d28a6a232904 --subnet-id XXXXXX --\nsecurity-group-id XXXXXXX\nFor more information about this command, see create-endpoint in the AWS CLI Reference.\nOther AWS services that use S3 on Outposts\nOther AWS services that run local to your AWS Outposts can also use your Amazon S3 on Outposts\ncapacity. In Amazon CloudWatch the S3Outposts namespace shows detailed metrics for buckets\nwithin S3 on Outposts, but these metrics don't include usage for other AWS services. To manage\nyour S3 on Outposts capacity that is consumed by other AWS services, see the information in the\nfollowing table.\nOther services API Version 2006-03-01 184",
      "start_idx": 331222,
      "end_idx": 332768,
      "metadata": {
        "num_sentences": 13,
        "num_words": 243,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "shared endpoint",
            "AWS CLI",
            "create-endpoint",
            "VPC",
            "subnet ID",
            "security group ID",
            "CloudWatch",
            "S3Outposts"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Outposts",
            "CloudWatch",
            "S3Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI to create an endpoint on a shared Outpost, manage shared endpoints, and monitor S3 on Outposts capacity with CloudWatch. It also highlights potential issues and solutions when working with shared endpoints.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for S3 on Outposts?",
            "What should I do if I encounter a 'Resource not found' error?",
            "How can I monitor S3 on Outposts capacity usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "create-endpoint",
          "security group ID",
          "subnet ID",
          "Amazon S3",
          "AWS Outposts",
          "AWS CLI",
          "CloudWatch",
          "Outposts",
          "S3Outposts",
          "Amazon CloudWatch",
          "VPC",
          "shared endpoint"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_187",
      "text": "\n\nAmazon S3 on Outposts User Guide\nMonitoring S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about monitoring your Amazon S3 on Outposts storage capacity, see the\nfollowing topics.\nTopics\n\u2022 Managing S3 on Outposts capacity with Amazon CloudWatch metrics\n\u2022 Receiving S3 on Outposts event notifications by using Amazon CloudWatch Events\n\u2022 Monitoring S3 on Outposts with AWS CloudTrail logs\nManaging S3 on Outposts capacity with Amazon CloudWatch\nmetrics\nTo help manage the fixed S3 capacity on your Outpost, we recommend that you create CloudWatch\nalerts that tell you when your storage utilization exceeds a certain threshold. For more information\nabout the CloudWatch metrics for S3 on Outposts, see CloudWatch metrics. If there is not enough\nspace to store an object on your Outpost, the API returns an insufficient capacity exemption\n(ICE). To free up space, you can create CloudWatch alarms that trigger explicit data deletion, or\nuse a lifecycle expiration policy to expire objects. To save data before deletion, you can use AWS\nDataSync to copy data from your Amazon S3 on Outposts bucket to an S3 bucket in an AWS\nRegion. For more information about using DataSync, see Getting Started with AWS DataSync in the\nAWS DataSync User Guide.\nCloudWatch metrics API Version 2006-03-01 186",
      "start_idx": 333313,
      "end_idx": 335466,
      "metadata": {
        "num_sentences": 14,
        "num_words": 351,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Monitoring",
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CloudWatch metrics",
            "data residency",
            "lifecycle expiration policy",
            "AWS DataSync",
            "VPC",
            "encryption",
            "access policies",
            "event notifications"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon CloudWatch",
            "AWS CloudTrail",
            "AWS DataSync"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Monitoring and Alerts",
            "Data Processing"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to monitor and manage Amazon S3 on Outposts using tools like CloudWatch and AWS DataSync, emphasizing storage capacity management and event notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor storage capacity for Amazon S3 on Outposts?",
            "What happens if there is insufficient storage capacity on my Outpost?",
            "How can I use AWS DataSync to manage S3 on Outposts data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS DataSync",
          "access policies",
          "data residency",
          "lifecycle expiration policy",
          "event notifications",
          "AWS CloudTrail",
          "Amazon S3",
          "Amazon CloudWatch",
          "encryption",
          "Outposts",
          "VPC",
          "CloudWatch metrics",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_188",
      "text": "\n\nAmazon S3 on Outposts User Guide\nCloudWatch metrics\nThe S3Outposts namespace includes the following metrics for Amazon S3 on Outposts buckets.\nYou can monitor the total number of S3 on Outposts bytes provisioned, the total free bytes\navailable for objects, and the total size of all objects for a given bucket. Bucket or account-related\nmetrics exist for all direct S3 usage. Indirect S3 usage, such as storing Amazon Elastic Block Store\nlocal snapshots or Amazon Relational Database Service backups on an Outpost, consumes S3\ncapacity, but is not included in bucket or account-related metrics. For more information about\nAmazon EBS local snapshots, see Amazon EBS local snapshots on Outposts. To see your Amazon\nEBS cost report, visit https://console.aws.amazon.com/billing/.\nNote\nS3 on Outposts supports only the following metrics, and no other Amazon S3 metrics.\nBecause S3 on Outposts has a fixed capacity limit, we recommend creating CloudWatch\nalarms to notify you when your storage utilization exceeds a certain threshold.\nMetric Description Time Units Type\nPeriod\nOutpostToT he total provisioned capacity 5 Bytes S3 on Outposts\ntalBytesin bytes for an Outpost. minutes\nOutpostFrT he count of free bytes 5 Bytes S3 on Outposts\neeBytes available on an Outpost to minutes\nstore customer data.\nBucketUseT he total size of all objects 5 Bytes S3 on Outposts. Direct S3\ndBytes for the given bucket. minutes usage only.\nAccountUsT he total size of all objects 5 Bytes S3 on Outposts. Direct S3\nedBytes for the specified Outposts minutes usage only.\naccount.\nBytesPendT he total number of bytes 5 Bytes Optional. For S3 Replication\ningReplico f objects that are pending minutes on Outposts.\nation replication for a given\nCloudWatch metrics API Version 2006-03-01 187",
      "start_idx": 335466,
      "end_idx": 337234,
      "metadata": {
        "num_sentences": 19,
        "num_words": 278,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics",
              "Monitoring",
              "Capacity Management"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "CloudWatch metrics",
            "provisioned capacity",
            "free bytes",
            "bucket size",
            "direct usage",
            "indirect usage",
            "replication",
            "storage utilization",
            "fixed capacity"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "CloudWatch",
            "Amazon Elastic Block Store (EBS)",
            "Amazon Relational Database Service (RDS)",
            "S3 Replication"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Monitoring",
          "secondary_categories": [
            "Cloud Metrics",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon Elastic Block Store (EBS)",
            "Amazon Relational Database Service (RDS)"
          ],
          "mentioned_tools": [
            "CloudWatch"
          ]
        },
        "semantic": {
          "summary": "This documentation describes CloudWatch metrics available for monitoring Amazon S3 on Outposts, including metrics for provisioned capacity, free bytes, and object sizes. It also highlights the distinction between direct and indirect S3 usage and recommends setting up alarms for storage utilization thresholds.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What metrics are available for Amazon S3 on Outposts?",
            "How can I monitor storage utilization for S3 on Outposts?",
            "What is the difference between direct and indirect S3 usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Monitoring]",
        "tf_idf_keywords": [
          "direct usage",
          "free bytes",
          "storage utilization",
          "S3 Replication",
          "bucket size",
          "Amazon S3 on Outposts",
          "Amazon Relational Database Service (RDS)",
          "fixed capacity",
          "CloudWatch",
          "indirect usage",
          "replication",
          "Amazon Elastic Block Store (EBS)",
          "CloudWatch metrics",
          "provisioned capacity"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_189",
      "text": "\n\nAmazon S3 on Outposts User Guide\nMetric Description Time Units Type\nPeriod\nreplication rule. For more\ninformation about how to\nenable replication metrics,\nsee Creating replication rules\nbetween Outposts.\nOperationT he total number of 5 Counts Optional. For S3 Replication\nsPendingRo perations that are pending minutes on Outposts.\neplicatiore plication for a given\nn replication rule. For more\ninformation about how to\nenable replication metrics,\nsee Creating replication rules\nbetween Outposts.\nReplicatiT he current number of 5 Seconds Optional. For S3 Replication\nonLatencyseconds delay by which the minutes on Outposts.\nreplication destination bucket\nis behind the source bucket\nfor a given replication rule.\nFor more information about\nhow to enable replication\nmetrics, see Creating replicati\non rules between Outposts.\nReceiving S3 on Outposts event notifications by using Amazon\nCloudWatch Events\nYou can use CloudWatch Events to create a rule for any Amazon S3 on Outposts API event. When\nyou create a rule, you can choose to get notified through all supported CloudWatch targets,\nincluding Amazon Simple Queue Service (Amazon SQS), Amazon Simple Notification Service\n(Amazon SNS), and AWS Lambda. For more information, see the list of AWS services that can be\ntargets for CloudWatch Events in the Amazon CloudWatch Events User Guide. To choose a target\nAmazon CloudWatch Events API Version 2006-03-01 188",
      "start_idx": 337234,
      "end_idx": 338649,
      "metadata": {
        "num_sentences": 14,
        "num_words": 213,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics",
              "Notifications"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CloudWatch Events",
            "replication rule",
            "replication metrics",
            "Amazon SNS",
            "Amazon SQS",
            "AWS Lambda",
            "replication latency",
            "replication operations"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "CloudWatch Events",
            "Amazon SNS",
            "Amazon SQS",
            "AWS Lambda"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Notifications",
            "Monitoring and Metrics"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch Events",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Lambda",
            "Amazon SQS"
          ]
        },
        "semantic": {
          "summary": "This documentation explains metrics for Amazon S3 on Outposts replication rules and how to use CloudWatch Events for notifications about API events.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I enable replication metrics for Amazon S3 on Outposts?",
            "What targets can be used for CloudWatch Events notifications?",
            "What is replication latency in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replication operations",
          "Amazon S3 on Outposts",
          "replication rule",
          "Amazon S3",
          "Amazon SNS",
          "replication metrics",
          "Amazon SQS",
          "Outposts",
          "replication latency",
          "CloudWatch Events",
          "AWS Lambda"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_190",
      "text": "\n\nAmazon S3 on Outposts User Guide\nservice to work with your S3 on Outposts, see Creating a CloudWatch Events rule that triggers on\nan AWS API call using AWS CloudTrail in the Amazon CloudWatch Events User Guide.\nNote\nFor S3 on Outposts object operations, AWS API call events sent by CloudTrail will match\nyour rules only if you have trails (optionally with event selectors) configured to receive\nthose events. For more information, see Working with CloudTrail log files in the AWS\nCloudTrail User Guide.\nExample\nThe following is a sample rule for the DeleteObject operation. To use this sample rule, replace\namzn-s3-demo-bucket1 with the name of your S3 on Outposts bucket.\n{\n\"source\": [\n\"aws.s3-outposts\"\n],\n\"detail-type\": [\n\"AWS API call through CloudTrail\"\n],\n\"detail\": {\n\"eventSource\": [\n\"s3-outposts.amazonaws.com\"\n],\n\"eventName\": [\n\"DeleteObject\"\n],\n\"requestParameters\": {\n\"bucketName\": [\n\"amzn-s3-demo-bucket1\"\n]\n}\n}\n}\nAmazon CloudWatch Events API Version 2006-03-01 189",
      "start_idx": 338649,
      "end_idx": 339627,
      "metadata": {
        "num_sentences": 6,
        "num_words": 150,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "CloudWatch Events",
            "CloudTrail",
            "AWS API call",
            "event selectors",
            "DeleteObject",
            "bucketName",
            "log files",
            "eventSource",
            "requestParameters"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon CloudWatch Events",
            "DeleteObject operation",
            "amzn-s3-demo-bucket1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Monitoring",
            "Logging"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon CloudWatch Events"
          ],
          "mentioned_tools": [
            "CloudWatch Events",
            "CloudTrail"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a CloudWatch Events rule for S3 on Outposts operations using AWS CloudTrail, including an example for the DeleteObject operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a CloudWatch Events rule for S3 on Outposts?",
            "What is the sample rule for the DeleteObject operation in S3 on Outposts?",
            "How does CloudTrail integrate with S3 on Outposts for event monitoring?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS API call",
          "DeleteObject operation",
          "log files",
          "eventSource",
          "S3 on Outposts",
          "Amazon S3 on Outposts",
          "AWS CloudTrail",
          "DeleteObject",
          "CloudTrail",
          "amzn-s3-demo-bucket1",
          "bucketName",
          "CloudWatch Events",
          "Amazon CloudWatch Events",
          "event selectors",
          "requestParameters"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_191",
      "text": "\n\nAmazon S3 on Outposts User Guide\nMonitoring S3 on Outposts with AWS CloudTrail logs\nAmazon S3 on Outposts is integrated with AWS CloudTrail, a service that provides a record of\nactions taken by a user, role, or an AWS service in S3 on Outposts. You can use AWS CloudTrail to\nget information about S3 on Outposts bucket-level and object-level requests to audit and log your\nS3 on Outposts event activity.\nTo enable CloudTrail data events for all your Outposts buckets or for a list of specific Outposts\nbuckets, you must create a trail manually in CloudTrail. For more information about CloudTrail log\nfile entries, see S3 on Outposts log file entries.\nFor a complete list of CloudTrail data events for S3 on Outposts, see Amazon S3 data events in\nCloudTrail in the Amazon S3 User Guide.\nNote\n\u2022 It's a best practice to create a lifecycle policy for your AWS CloudTrail data event\nOutposts bucket. Configure the lifecycle policy to periodically remove log files after\nthe period of time that you need to audit them. Doing so reduces the amount of data\nthat Amazon Athena analyzes for each query. For more information, see Creating and\nmanaging a lifecycle configuration for your Amazon S3 on Outposts bucket.\n\u2022 For examples of how to query CloudTrail logs, see the AWS Big Data Blog post Analyze\nSecurity, Compliance, and Operational Activity Using AWS CloudTrail and Amazon\nAthena.\nEnable CloudTrail logging for objects in an S3 on Outposts bucket\nYou can use the Amazon S3 console to configure an AWS CloudTrail trail to log data events for\nobjects in an Amazon S3 on Outposts bucket. CloudTrail supports logging S3 on Outposts object-\nlevel API operations such as GetObject, DeleteObject, and PutObject. These events are called\ndata events.\nBy default, CloudTrail trails don't log data events. However, you can configure trails to log data\nevents for S3 on Outposts buckets that you specify or to log data events for all the S3 on Outposts\nbuckets in your AWS account.\nCloudTrail logs API Version 2006-03-01 190",
      "start_idx": 339627,
      "end_idx": 341641,
      "metadata": {
        "num_sentences": 16,
        "num_words": 340,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Best Practice",
              "Integration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "data events",
            "lifecycle policy",
            "log files",
            "bucket-level requests",
            "object-level requests",
            "API operations",
            "audit",
            "Amazon Athena"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon Athena",
            "AWS Big Data Blog",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Monitoring",
          "secondary_categories": [
            "Cloud Security",
            "Data Logging"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon Athena"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to monitor Amazon S3 on Outposts using AWS CloudTrail, configure logging for bucket and object-level events, and apply best practices such as lifecycle policies for log management.",
          "intents": [
            "How-To",
            "Reference",
            "Best Practice"
          ],
          "potential_questions": [
            "How do I enable CloudTrail logging for S3 on Outposts buckets?",
            "What are best practices for managing CloudTrail log files?",
            "Which API operations are logged for S3 on Outposts in CloudTrail?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Monitoring]",
        "tf_idf_keywords": [
          "object-level requests",
          "log files",
          "data events",
          "Amazon S3 on Outposts",
          "lifecycle policy",
          "AWS CloudTrail",
          "bucket-level requests",
          "API operations",
          "Amazon Athena",
          "AWS Big Data Blog",
          "audit",
          "API Version 2006-03-01"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_192",
      "text": "\n\nAmazon S3 on Outposts User Guide\nCloudTrail does not populate data events in the CloudTrail event history. Additionally, not all\nS3 on Outposts bucket\u2013level API operations are populated in the CloudTrail event history. For\nmore information about how to query CloudTrail logs, see Using Amazon CloudWatch Logs filter\npatterns and Amazon Athena to query CloudTrail logs on the AWS Knowledge Center.\nTo configure a trail to log data events for an S3 on Outposts bucket, you can use either the AWS\nCloudTrail console or the Amazon S3 console. If you are configuring a trail to log data events for\nall the S3 on Outposts buckets in your AWS account, it's easier to use the CloudTrail console. For\ninformation about using the CloudTrail console to configure a trail to log S3 on Outposts data\nevents, see Data events in the AWS CloudTrail User Guide.\nImportant\nAdditional charges apply for data events. For more information, see AWS CloudTrail pricing.\nThe following procedure shows how to use the Amazon S3 console to configure a CloudTrail trail to\nlog data events for an S3 on Outposts bucket.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can configure S3\non Outposts data events to be sent to AWS CloudTrail.\nTo enable CloudTrail data events logging for objects in an S3 on Outposts bucket\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the name of the Outposts bucket whose data events you want to log by using\nCloudTrail.\n4. Choose Properties.\n5. In the AWS CloudTrail data events section, choose Configure in CloudTrail.\nThe AWS CloudTrail console opens.\nEnabling CloudTrail logging for S3 on Outposts objects API Version 2006-03-01 191",
      "start_idx": 341641,
      "end_idx": 343445,
      "metadata": {
        "num_sentences": 22,
        "num_words": 302,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "CloudTrail",
            "data events",
            "AWS account",
            "Amazon S3 console",
            "Outposts bucket",
            "CloudTrail logs",
            "AWS CloudTrail pricing",
            "CloudWatch Logs",
            "Amazon Athena"
          ],
          "entities": [
            "Amazon S3",
            "CloudTrail",
            "AWS Management Console",
            "Amazon CloudWatch Logs",
            "Amazon Athena"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Event Logging",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS CloudTrail",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": [
            "Amazon Athena",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to configure AWS CloudTrail to log data events for objects in an S3 on Outposts bucket using the Amazon S3 console. It also highlights additional charges for data events and provides a step-by-step procedure for enabling logging.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable CloudTrail logging for an S3 on Outposts bucket?",
            "What are the additional charges for logging S3 on Outposts data events?",
            "Which AWS account owns an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS account",
          "AWS Management Console",
          "Amazon CloudWatch Logs",
          "CloudWatch Logs",
          "data events",
          "S3 on Outposts",
          "Outposts bucket",
          "AWS CloudTrail pricing",
          "Amazon Athena",
          "Amazon S3",
          "Amazon S3 console",
          "CloudTrail",
          "AWS CloudTrail",
          "Amazon CloudWatch",
          "CloudTrail logs"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_193",
      "text": "\n\nAmazon S3 on Outposts User Guide\nYou can create a new CloudTrail trail or reuse an existing trail and configure S3 on Outposts\ndata events to be logged in your trail.\n6. On the CloudTrail console Dashboard page, choose Create trail.\n7. On the Step 1 Choose trail attributes page, provide a name for the trail, choose an S3 bucket\nto store trail logs, specify any other settings that you want, and then choose Next.\n8. On the Step 2 Choose log events page, under Event type, choose Data events.\nFor Data event type, choose S3 Outposts. Choose Next.\nNote\n\u2022 When you create a trail and configure data event logging for S3 on Outposts, you\nmust specify the data event type correctly.\n\u2022 If you use the CloudTrail console, choose S3 Outposts for Data event type. For\ninformation about how to create trails in the CloudTrail console, see Creating and\nupdating a trail with the console in the AWS CloudTrail User Guide. For information\nabout how to configure S3 on Outposts data event logging in the CloudTrail\nconsole, see Logging data events for Amazon S3 Objects in the AWS CloudTrail\nUser Guide.\n\u2022 If you use the AWS Command Line Interface (AWS CLI) or the AWS SDKs, set the\nresources.type field to AWS::S3Outposts::Object. For more information\nabout how to log S3 on Outposts data events with the AWS CLI, see Log S3 on\nOutposts events in the AWS CloudTrail User Guide.\n\u2022 If you use the CloudTrail console or the Amazon S3 console to configure a trail to\nlog data events for an S3 on Outposts bucket, the Amazon S3 console shows that\nobject-level logging is enabled for the bucket.\n9. On the Step 3 Review and create page, review the trail attributes and the log events that you\nconfigured. Then, choose Create trail.\nTo disable CloudTrail data events logging for objects in an S3 on Outposts bucket\n1. Sign in to the AWS Management Console and open the CloudTrail console at https://\nconsole.aws.amazon.com/cloudtrail/.\n2. In the left navigation pane, choose Trails.\nEnabling CloudTrail logging for S3 on Outposts objects API Version 2006-03-01 192",
      "start_idx": 343445,
      "end_idx": 345493,
      "metadata": {
        "num_sentences": 24,
        "num_words": 355,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-step",
              "Warning"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 on Outposts",
            "Data events",
            "AWS CLI",
            "AWS SDKs",
            "trail attributes",
            "object-level logging",
            "log events",
            "Amazon S3 console",
            "resources.type"
          ],
          "entities": [
            "AWS CloudTrail",
            "Amazon S3",
            "S3 Outposts",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Services Configuration",
          "secondary_categories": [
            "Data Logging",
            "AWS Management"
          ],
          "mentioned_services": [
            "CloudTrail",
            "S3 on Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for configuring CloudTrail to log data events for S3 on Outposts, including trail creation, event type selection, and disabling logging if needed.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I configure CloudTrail to log data events for S3 on Outposts?",
            "What settings are required to enable object-level logging for S3 on Outposts?",
            "How can I disable CloudTrail data events logging for an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Services Configuration]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "resources.type",
          "log events",
          "Data events",
          "S3 on Outposts",
          "AWS CloudTrail",
          "Amazon S3",
          "CloudTrail",
          "AWS CLI",
          "trail attributes",
          "object-level logging",
          "Amazon S3 console",
          "AWS SDKs"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_194",
      "text": "\n\nAmazon S3 on Outposts User Guide\n3. Choose the name of the trail that you created to log events for your S3 on Outposts bucket.\n4. On the details page for your trail, choose Stop logging in the upper-right corner.\n5. In the dialog box that appears, choose Stop logging.\nAmazon S3 on Outposts AWS CloudTrail log file entries\nAmazon S3 on Outposts management events are available via AWS CloudTrail. In addition, you can\noptionally enable logging for data events in AWS CloudTrail.\nA trail is a configuration that enables delivery of events as log files to an S3 bucket in a Region that\nyou specify. CloudTrail logs for your Outposts buckets include a new field, edgeDeviceDetails,\nwhich identifies the Outpost where the specified bucket is located.\nAdditional log fields include the requested action, the date and time of the action, and the request\nparameters. CloudTrail log files are not an ordered stack trace of the public API calls, so they don't\nappear in any specific order.\nThe following example shows a CloudTrail log entry that demonstrates a PutObject action on s3-\noutposts.\n{\n\"eventVersion\": \"1.08\",\n\"userIdentity\": {\n\"type\": \"IAMUser\",\n\"principalId\": \"111122223333\",\n\"arn\": \"arn:aws:iam::111122223333:user/yourUserName\",\n\"accountId\": \"222222222222\",\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"userName\": \"yourUserName\"\n},\n\"eventTime\": \"2020-11-30T15:44:33Z\",\n\"eventSource\": \"s3-outposts.amazonaws.com\",\n\"eventName\": \"PutObject\",\n\"awsRegion\": \"us-east-1\",\n\"sourceIPAddress\": \"26.29.66.20\",\n\"userAgent\": \"aws-cli/1.18.39 Python/3.4.10 Darwin/18.7.0 botocore/1.15.39\",\n\"requestParameters\": {\n\"expires\": \"Wed, 21 Oct 2020 07:28:00 GMT\",\n\"Content-Language\": \"english\",\n\"x-amz-server-side-encryption-customer-key-MD5\": \"wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY\",\nAmazon S3 on Outposts AWS CloudTrail log file entries API Version 2006-03-01 193",
      "start_idx": 345493,
      "end_idx": 347344,
      "metadata": {
        "num_sentences": 14,
        "num_words": 243,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Logging"
            ]
          },
          "keywords": [
            "AWS CloudTrail",
            "S3 on Outposts",
            "edgeDeviceDetails",
            "PutObject",
            "log files",
            "management events",
            "data events",
            "IAMUser",
            "requestParameters",
            "encryption"
          ],
          "entities": [
            "Amazon S3",
            "AWS CloudTrail",
            "Outposts",
            "IAMUser",
            "PutObject"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Logging",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS CloudTrail",
            "Outposts"
          ],
          "mentioned_tools": [
            "aws-cli",
            "botocore"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure logging for Amazon S3 on Outposts buckets using AWS CloudTrail, including details about log file entries and an example of a PutObject action log entry.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop logging for an S3 on Outposts bucket?",
            "What information is included in AWS CloudTrail logs for S3 on Outposts?",
            "How is a PutObject action logged in AWS CloudTrail for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "management events",
          "log files",
          "edgeDeviceDetails",
          "S3 on Outposts",
          "data events",
          "AWS CloudTrail",
          "PutObject",
          "IAMUser",
          "Amazon S3",
          "encryption",
          "Outposts",
          "requestParameters"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_195",
      "text": "\n\nAmazon S3 on Outposts User Guide\nDeveloping with Amazon S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nThe following topics provide information about developing with S3 on Outposts.\nTopics\n\u2022 Amazon S3 on Outposts API operations\n\u2022 Configure the S3 control client for S3 on Outposts by using the SDK for Java\n\u2022 Making requests to S3 on Outposts over IPv6\nAmazon S3 on Outposts API operations\nThis topic lists the Amazon S3, Amazon S3 Control, and Amazon S3 on Outposts API operations\nthat you can use with Amazon S3 on Outposts.\nTopics\n\u2022 Amazon S3 API operations for managing objects\n\u2022 Amazon S3 Control API operations for managing buckets\n\u2022 S3 on Outposts API operations for managing Outposts\nAmazon S3 API operations for managing objects\nS3 on Outposts is designed to use the same object API operations as Amazon S3. You must use\naccess points to access any object in an Outpost bucket. When you use an object API operation with\nS3 on Outposts, you provide either the Outposts access point Amazon Resource Name (ARN) or the\nS3 on Outposts APIs API Version 2006-03-01 196",
      "start_idx": 349293,
      "end_idx": 351211,
      "metadata": {
        "num_sentences": 11,
        "num_words": 327,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS Outposts",
            "S3 buckets",
            "access points",
            "virtual private cloud",
            "S3 Outposts storage class",
            "API operations",
            "encryption",
            "data residency",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "AWS Management Console",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use Amazon S3 on Outposts to create and manage S3 buckets on AWS Outposts, enabling local data storage and processing through APIs and tools like AWS SDKs and CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts?",
            "How do I configure the S3 control client for S3 on Outposts?",
            "What API operations are available for managing S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Outposts",
          "AWS Management Console",
          "virtual private cloud",
          "S3 Outposts storage class",
          "API operations",
          "S3 buckets",
          "data residency",
          "Amazon S3",
          "access points",
          "encryption",
          "AWS CLI",
          "AWS SDKs",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_196",
      "text": "\n\nAmazon S3 on Outposts User Guide\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nAmazon S3 on Outposts supports the following Amazon S3 API operations:\n\u2022 AbortMultipartUpload\n\u2022 CompleteMultipartUpload\n\u2022 CopyObject\n\u2022 CreateMultipartUpload\n\u2022 DeleteObject\n\u2022 DeleteObjects\n\u2022 DeleteObjectTagging\n\u2022 GetObject\n\u2022 GetObjectTagging\n\u2022 HeadBucket\n\u2022 HeadObject\n\u2022 ListMultipartUploads\n\u2022 ListObjects\n\u2022 ListObjectsV2\n\u2022 ListObjectVersions\n\u2022 ListParts\n\u2022 PutObject\n\u2022 PutObjectTagging\n\u2022 UploadPart\n\u2022 UploadPartCopy\nAmazon S3 Control API operations for managing buckets\nS3 on Outposts supports the following Amazon S3 Control API operations for working with\nbuckets.\n\u2022 CreateAccessPoint\n\u2022 CreateBucket\nAmazon S3 Control API operations for managing buckets API Version 2006-03-01 197",
      "start_idx": 351211,
      "end_idx": 352071,
      "metadata": {
        "num_sentences": 4,
        "num_words": 119,
        "recursion_depth": 9,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Operations",
              "Feature Support"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point alias",
            "bucket",
            "API operations",
            "multipart upload",
            "object tagging",
            "S3 Control API",
            "CreateBucket",
            "UploadPart"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "S3 Control API",
            "API Version 2006-03-01",
            "access point alias"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Data Operations"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the Amazon S3 API and S3 Control API operations supported by S3 on Outposts, including multipart upload and bucket management features.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What API operations are supported by Amazon S3 on Outposts?",
            "How can I manage buckets using S3 Control API?",
            "What is an access point alias for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadPart",
          "multipart upload",
          "API operations",
          "S3 on Outposts",
          "Amazon S3",
          "CreateBucket",
          "API Version 2006-03-01",
          "Outposts",
          "S3 Control API",
          "bucket",
          "object tagging",
          "access point alias"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_198",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\u2022 ListOutpostsWithS3\n\u2022 ListSharedEndpoints\nConfigure the S3 control client for S3 on Outposts by using the\nSDK for Java\nThe following example configures the Amazon S3 control client for Amazon S3 on Outposts by\nusing the AWS SDK for Java. To use this example, replace each user input placeholder with\nyour own information.\nimport com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport com.amazonaws.services.s3control.AWSS3Control;\nimport com.amazonaws.services.s3control.AWSS3ControlClient;\npublic AWSS3Control createS3ControlClient() {\nString accessKey = AWSAccessKey;\nString secretKey = SecretAccessKey;\nBasicAWSCredentials awsCreds = new BasicAWSCredentials(accessKey, secretKey);\nreturn AWSS3ControlClient.builder().enableUseArnRegion()\n.withCredentials(new AWSStaticCredentialsProvider(awsCreds))\n.build();\n}\nMaking requests to S3 on Outposts over IPv6\nAmazon S3 on Outposts and S3 on Outposts dual-stack endpoints support requests to S3 on\nOutposts buckets using either the IPv6 or IPv4 protocol. With IPv6 support for S3 on Outposts, you\ncan access and operate your buckets and control plane resources through S3 on Outposts APIs over\nIPv6 networks.\nNote\nS3 on Outposts object actions (such as PutObject or GetObject) aren\u2019t supported over\nIPv6 networks.\nConfiguring S3 control client API Version 2006-03-01 199",
      "start_idx": 352900,
      "end_idx": 354302,
      "metadata": {
        "num_sentences": 6,
        "num_words": 173,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Code Example",
              "Networking"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 control client",
            "AWS SDK for Java",
            "IPv6",
            "dual-stack endpoints",
            "access key",
            "secret key",
            "S3 APIs",
            "PutObject",
            "GetObject"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "IPv6",
            "S3 control client"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure the Amazon S3 control client for S3 on Outposts using the AWS SDK for Java, along with considerations for IPv6 support and dual-stack endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the S3 control client for S3 on Outposts using Java?",
            "Does S3 on Outposts support IPv6?",
            "What are the limitations of using IPv6 with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "IPv6",
          "S3 control client",
          "Amazon S3 on Outposts",
          "GetObject",
          "PutObject",
          "S3 on Outposts",
          "Amazon S3",
          "dual-stack endpoints",
          "AWS SDK for Java",
          "S3 APIs",
          "Outposts",
          "access key",
          "secret key"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_199",
      "text": "\n\nAmazon S3 on Outposts User Guide\nThere are no additional charges for accessing S3 on Outposts over IPv6 networks. For more\ninformation about S3 on Outposts, see S3 on Outposts pricing.\nTopics\n\u2022 Getting started with IPv6\n\u2022 Using dual-stack endpoints to make requests over an IPv6 network\n\u2022 Using IPv6 addresses in IAM policies\n\u2022 Testing IP address compatibility\n\u2022 Using IPv6 with AWS PrivateLink\n\u2022 Using S3 on Outposts dual-stack endpoints\nGetting started with IPv6\nTo make a request to an S3 on Outposts bucket over IPv6, you must use a dual-stack endpoint. The\nnext section describes how to make requests over IPv6 by using dual-stack endpoints.\nThe following are important considerations before trying to access an S3 on Outposts bucket over\nIPv6:\n\u2022 The client and the network accessing the bucket must be enabled to use IPv6.\n\u2022 Both virtual hosted-style and path style requests are supported for IPv6 access. For more\ninformation, see Using S3 on Outposts dual-stack endpoints.\n\u2022 If you use source IP address filtering in your AWS Identity and Access Management (IAM) user or\nS3 on Outposts bucket policies, you must update the policies to include IPv6 address ranges.\nNote\nThis requirement only applies to S3 on Outposts bucket operations and control plane\nresources across IPv6 networks. Amazon S3 on Outposts object actions aren\u2019t supported\nacross IPv6 networks.\n\u2022 When using IPv6, server access log files output IP addresses in an IPv6 format. You must update\nexisting tools, scripts, and software that you use to parse S3 on Outposts log files, so that they\ncan parse the IPv6 formatted remote IP addresses. The updated tools, scripts, and software will\nthen correctly parse the IPv6 formatted remote IP addresses.\nGetting started with IPv6 API Version 2006-03-01 200",
      "start_idx": 354302,
      "end_idx": 356079,
      "metadata": {
        "num_sentences": 14,
        "num_words": 293,
        "recursion_depth": 7,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Requirements",
              "Considerations"
            ]
          },
          "keywords": [
            "IPv6",
            "S3 on Outposts",
            "dual-stack endpoints",
            "IAM policies",
            "source IP address filtering",
            "server access logs",
            "virtual hosted-style requests",
            "path style requests",
            "AWS PrivateLink",
            "IPv6 address ranges"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM",
            "AWS PrivateLink",
            "IPv6 networks"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Networking",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to access Amazon S3 on Outposts buckets over IPv6 networks using dual-stack endpoints, including key requirements and considerations for configuration and policy updates.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I configure S3 on Outposts for IPv6 access?",
            "What are the requirements for using dual-stack endpoints with IPv6?",
            "How do IAM policies need to be updated to include IPv6 address ranges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Networking]",
        "tf_idf_keywords": [
          "path style requests",
          "IPv6",
          "S3 on Outposts",
          "IPv6 networks",
          "Amazon S3",
          "IPv6 address ranges",
          "IAM",
          "dual-stack endpoints",
          "source IP address filtering",
          "server access logs",
          "AWS PrivateLink",
          "IAM policies",
          "virtual hosted-style requests"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_200",
      "text": "\n\nAmazon S3 on Outposts User Guide\nUsing dual-stack endpoints to make requests over an IPv6 network\nTo make requests with S3 on Outposts API calls over IPv6, you can use dual-stack endpoints\nvia AWS CLI or AWS SDK. The Amazon S3 control API operations and S3 on Outposts API\noperations work the same way whether you\u2019re accessing S3 on Outposts over an IPv6 protocol\nor IPv4 protocol. However, be aware that S3 on Outposts object actions (such as PutObject or\nGetObject) aren\u2019t supported over IPv6 networks.\nWhen using the AWS Command Line Interface (AWS CLI) and AWS SDKs, you can use a parameter\nor flag to change to a dual-stack endpoint. You can also specify the dual-stack endpoint directly as\nan override of the S3 on Outposts endpoint in the configuration file.\nYou can use a dual-stack endpoint to access an S3 on Outposts bucket over IPv6 from any of the\nfollowing:\n\u2022 The AWS CLI, see Using dual-stack endpoints from the AWS CLI.\n\u2022 The AWS SDKs, see Using S3 on Outposts dual-stack endpoints from the AWS SDKs.\nUsing IPv6 addresses in IAM policies\nBefore trying to access an S3 on Outposts bucket using an IPv6 protocol, make sure that IAM users\nor S3 on Outposts bucket policies used for IP address filtering are updated to include IPv6 address\nranges. If IP address filtering policies aren\u2019t updated to handle IPv6 addresses, you can lose access\nto an S3 on Outposts bucket while trying to use the IPv6 protocol.\nIAM policies that filter IP addresses use IP address condition operators. The following S3 on\nOutposts bucket policy identifies the 54.240.143.* IP range of allowed IPv4 addresses by using IP\naddress condition operators. Any IP addresses outside of this range will be denied access to the S3\non Outposts bucket (DOC-EXAMPLE-BUCKET). Since all IPv6 addresses are outside of the allowed\nrange, this policy prevents IPv6 addresses from being able to access DOC-EXAMPLE-BUCKET.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"IPAllow\",\n\"Effect\": \"Allow\",\n\"Principal\": \"*\",\nMaking requests using dual-stack endpoints API Version 2006-03-01 201",
      "start_idx": 356079,
      "end_idx": 358144,
      "metadata": {
        "num_sentences": 15,
        "num_words": 342,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy",
              "Network"
            ]
          },
          "keywords": [
            "dual-stack endpoints",
            "IPv6",
            "AWS CLI",
            "AWS SDK",
            "S3 on Outposts",
            "IAM policies",
            "IP address filtering",
            "bucket policy",
            "IPv4",
            "PutObject"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK",
            "S3 on Outposts",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This document explains how to use dual-stack endpoints for accessing Amazon S3 on Outposts over IPv6 and provides guidance on updating IAM policies for IPv6 compatibility. It also highlights limitations, such as unsupported object actions over IPv6 networks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use dual-stack endpoints for S3 on Outposts?",
            "What are the limitations of IPv6 with S3 on Outposts?",
            "How do I update IAM policies for IPv6 compatibility?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "IPv6",
          "IPv4",
          "IP address filtering",
          "S3 on Outposts",
          "PutObject",
          "Amazon S3",
          "AWS CLI",
          "bucket policy",
          "dual-stack endpoints",
          "IAM",
          "AWS SDK",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_201",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Action\": \"s3outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET/*\",\n\"Condition\": {\n\"IpAddress\": {\"aws:SourceIp\": \"54.240.143.0/24\"}\n}\n}\n]\n}\nYou can modify the S3 on Outposts bucket policy's Condition element to allow both IPv4\n(54.240.143.0/24) and IPv6 (2001:DB8:1234:5678::/64) address ranges as shown in the\nfollowing example. You can use the same type of Condition block shown in the example to\nupdate both your IAM user and bucket policies.\n\"Condition\": {\n\"IpAddress\": {\n\"aws:SourceIp\": [\n\"54.240.143.0/24\",\n\"2001:DB8:1234:5678::/64\"\n]\n}\n}\nBefore using IPv6 you must update all relevant IAM user and bucket policies that use IP address\nfiltering to allow IPv6 address ranges. We recommend that you update your IAM policies with your\norganization's IPv6 address ranges in addition to your existing IPv4 address ranges. For an example\nof a bucket policy that allows access over both IPv6 and IPv4, see Restrict access to specific IP\naddresses.\nYou can review your IAM user policies using the IAM console at https://console.aws.amazon.com/\niam/. For more information about IAM, see the IAM User Guide. For information about editing S3\non Outposts bucket policies, see Adding or editing a bucket policy for an Amazon S3 on Outposts\nbucket.\nTesting IP address compatibility\nIf you're using a Linux or Unix instance, or macOS X platform, you can test your access to a dual-\nstack endpoint over IPv6. For example, to test the connection to Amazon S3 on Outposts endpoints\nover IPv6, use the dig command:\nTesting IP address compatibility API Version 2006-03-01 202",
      "start_idx": 358144,
      "end_idx": 359802,
      "metadata": {
        "num_sentences": 10,
        "num_words": 248,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Configuration",
              "IPv4 and IPv6 Support",
              "Testing Connectivity"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "Condition element",
            "IPv4",
            "IPv6",
            "IAM user policies",
            "IP address filtering",
            "dual-stack endpoint",
            "access control",
            "dig command"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "IPv4",
            "IPv6",
            "Linux/Unix"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Access Management",
            "Network Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM console",
            "dig command"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 on Outposts bucket policies to support both IPv4 and IPv6 address ranges, update IAM policies, and test connectivity to dual-stack endpoints using tools like the dig command.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I configure S3 on Outposts bucket policies for both IPv4 and IPv6?",
            "What tools can I use to test dual-stack endpoint connectivity?",
            "How do I update IAM policies to include IPv6 address ranges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Condition element",
          "IAM user policies",
          "IPv6",
          "IPv4",
          "S3 on Outposts",
          "Amazon S3 on Outposts",
          "bucket policy",
          "dual-stack endpoint",
          "dig command",
          "IAM",
          "Linux/Unix",
          "IP address filtering",
          "access control"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_202",
      "text": "\n\nAmazon S3 on Outposts User Guide\ndig s3-outposts.us-west-2.api.aws AAAA +short\nIf your dual-stack endpoint over an IPv6 network is properly set up, the dig command returns the\nconnected IPv6 addresses. For example:\ndig s3-outposts.us-west-2.api.aws AAAA +short\n2600:1f14:2588:4800:b3a9:1460:159f:ebce\n2600:1f14:2588:4802:6df6:c1fd:ef8a:fc76\n2600:1f14:2588:4801:d802:8ccf:4e04:817\nUsing IPv6 with AWS PrivateLink\nS3 on Outposts supports the IPv6 protocol for AWS PrivateLink services and endpoints. With AWS\nPrivateLink support for the IPv6 protocol, you can connect to service endpoints within your VPC\nover IPv6 networks, from either on-premises or other private connections. The IPv6 support for\nAWS PrivateLink for S3 on Outposts also allows you to integrate AWS PrivateLink with dual-stack\nendpoints. For steps on how to enable IPv6 for AWS PrivateLink, see Expedite your IPv6 adoption\nwith AWS PrivateLink services and endpoints.\nNote\nTo update the supported IP address type from IPv4 to IPv6, see Modify the supported IP\naddress type in the AWS PrivateLink User Guide.\nUsing IPv6 with AWS PrivateLink\nIf you\u2019re using AWS PrivateLink with IPv6, you must create an IPv6 or dual-stack VPC interface\nendpoint. For general steps on how to create a VPC endpoint using the AWS Management Console,\nsee Access an AWS service using an interface VPC endpoint in the AWS PrivateLink User Guide.\nAWS Management Console\nUse the following procedure to create an interface VPC endpoint that connects to S3 on\nOutposts.\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 203",
      "start_idx": 359802,
      "end_idx": 361371,
      "metadata": {
        "num_sentences": 10,
        "num_words": 231,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "IPv6",
            "AWS PrivateLink",
            "S3 on Outposts",
            "dual-stack",
            "VPC endpoint",
            "interface endpoint",
            "AWS Management Console",
            "IPv4",
            "network",
            "Expedite IPv6 adoption"
          ],
          "entities": [
            "Amazon S3",
            "AWS PrivateLink",
            "IPv6 protocol",
            "VPC interface endpoint",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use IPv6 with AWS PrivateLink for S3 on Outposts, including setting up dual-stack endpoints and creating VPC interface endpoints. It provides procedural steps and examples for configuration using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I enable IPv6 for AWS PrivateLink with S3 on Outposts?",
            "What are the steps to create a VPC interface endpoint using AWS Management Console?",
            "How do I modify the supported IP address type from IPv4 to IPv6?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "IPv6",
          "interface endpoint",
          "IPv4",
          "VPC interface endpoint",
          "S3 on Outposts",
          "IPv6 protocol",
          "Amazon S3",
          "Expedite IPv6 adoption",
          "AWS PrivateLink",
          "network",
          "VPC endpoint",
          "dual-stack"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_203",
      "text": "\n\nAmazon S3 on Outposts User Guide\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/.\n2. In the navigation pane, choose Endpoints.\n3. Choose Create endpoint.\n4. For Service category, choose AWS services.\n5. For Service name, choose the S3 on Outposts service (com.amazonaws.us-east-1.s3-\noutposts).\n6. For VPC, choose the VPC from which you'll access S3 on Outposts.\n7. For Subnets, choose one subnet per Availability Zone from which you'll access S3 on\nOutposts. You can't select multiple subnets from the same Availability Zone. For each\nsubnet that you select, a new endpoint network interface is created. By default, IP\naddresses from the subnet IP address ranges are assigned to the endpoint network\ninterfaces. To designate an IP address for an endpoint network interface, choose Designate\nIP addresses and enter an IPv6 address from the subnet address range.\n8. For IP address type, choose Dualstack. Assign both IPv4 and IPv6 addresses to your\nendpoint network interfaces. This option is supported only if all selected subnets have both\nIPv4 and IPv6 address ranges.\n9. For Security groups, choose the security groups to associate with the endpoint network\ninterfaces for the VPC endpoint. By default, the default security group is associated with\nthe VPC.\n10. For Policy, choose Full access to allow all operations by all principals on all resources\nover the VPC endpoint. Otherwise, choose Custom to attach a VPC endpoint policy that\ncontrols the permissions that principals have toperform actions on resources over the VPC\nendpoint. This option is available only if the service supports VPC endpoint policies. For\nmore information, see Endpoint policies.\n11. (Optional) To add a tag, choose Add new tag and enter the tag key and the tag value.\n12. Choose Create endpoint.\nExample \u2013 S3 on Outposts bucket policy\nTo allow S3 on Outposts to interact with your VPC endpoints, you can then update your S3 on\nOutposts policy like this:\n{\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 204",
      "start_idx": 361371,
      "end_idx": 363428,
      "metadata": {
        "num_sentences": 35,
        "num_words": 333,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step instructions",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC endpoint",
            "subnets",
            "security groups",
            "IPv6",
            "Dualstack",
            "endpoint policy",
            "AWS PrivateLink",
            "tags"
          ],
          "entities": [
            "AWS Management Console",
            "VPC",
            "S3 on Outposts",
            "IPv6 address",
            "Endpoint policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "VPC",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for configuring an Amazon S3 on Outposts endpoint within a VPC using the AWS Management Console. It covers subnet selection, IP address assignment, security group configuration, and policy settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a VPC endpoint for S3 on Outposts?",
            "What are the configuration options for S3 on Outposts endpoints?",
            "How can I assign specific IP addresses to my endpoint network interfaces?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "endpoint policy",
          "AWS Management Console",
          "IPv6",
          "subnets",
          "S3 on Outposts",
          "Amazon S3",
          "IPv6 address",
          "Outposts",
          "AWS PrivateLink",
          "Endpoint policies",
          "VPC endpoint",
          "VPC",
          "tags",
          "security groups",
          "Dualstack"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_204",
      "text": "\n\nAmazon S3 on Outposts User Guide\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"*\",\n\"Principal\": \"*\"\n}\n]\n}\nAWS CLI\nNote\nTo enable the IPv6 network on your VPC endpoint, you must have IPv6 set for the\nSupportedIpAddressType filter for S3 on Outposts.\nThe following example uses the create-vpc-endpoint command to create a new dual-stack\ninterface endpoint.\naws ec2 create-vpc-endpoint \\\n--vpc-id vpc-12345678 \\\n--vpc-endpoint-type Interface \\\n--service-name com.amazonaws.us-east-1.s3-outposts \\\n--subnet-id subnet-12345678 \\\n--security-group-id sg-12345678 \\\n--ip-address-type dualstack \\\n--dns-options \"DnsRecordIpType=dualstack\"\nDepending on the AWS PrivateLink service configuration, newly created endpoint connections\nmight need to be accepted by the VPC endpoint service provider before they can be used. For\nmore information, see Accept and reject endpoint connection requests in the AWS PrivateLink\nUser Guide.\nThe following example uses the modify-vpc-endpoint command to update the IPv-only VPC\nendpoint to a dual-stack endpoint. The dual-stack endpoint allows access to both the IPv4 and\nIPv6 networks.\naws ec2 modify-vpc-endpoint \\\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 205",
      "start_idx": 363428,
      "end_idx": 364660,
      "metadata": {
        "num_sentences": 7,
        "num_words": 168,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "VPC endpoint",
            "IPv6",
            "dual-stack",
            "AWS CLI",
            "PrivateLink",
            "subnet",
            "security group",
            "dns-options",
            "interface endpoint"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "IPv6",
            "VPC",
            "AWS PrivateLink"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Services",
            "Infrastructure Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "EC2"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on creating and modifying VPC endpoints for Amazon S3 on Outposts, including enabling dual-stack (IPv4 and IPv6) configurations using AWS CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a dual-stack VPC endpoint for S3 on Outposts?",
            "What are the prerequisites for enabling IPv6 on a VPC endpoint?",
            "How do I modify an existing VPC endpoint to support dual-stack networking?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "IPv6",
          "interface endpoint",
          "EC2",
          "Amazon S3 on Outposts",
          "dns-options",
          "PrivateLink",
          "AWS CLI",
          "AWS PrivateLink",
          "security group",
          "VPC",
          "VPC endpoint",
          "dual-stack",
          "subnet"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_205",
      "text": "\n\nAmazon S3 on Outposts User Guide\n--vpc-endpoint-id vpce-12345678 \\\n--add-subnet-ids subnet-12345678 \\\n--remove-subnet-ids subnet-12345678 \\\n--ip-address-type dualstack \\\n--dns-options \"DnsRecordIpType=dualstack\"\nFor more information about how to enable the IPv6 network for AWS PrivateLink, see Expedite\nyour IPv6 adoption with AWS PrivateLink services and endpoints.\nUsing S3 on Outposts dual-stack endpoints\nS3 on Outposts dual-stack endpoints support requests to S3 on Outposts buckets over IPv6 and\nIPv4. This section describes how to use S3 on Outposts dual-stack endpoints.\nTopics\n\u2022 S3 on Outposts dual-stack endpoints\n\u2022 Using dual-stack endpoints from the AWS CLI\n\u2022 Using S3 on Outposts dual-stack endpoints from the AWS SDKs\nS3 on Outposts dual-stack endpoints\nWhen you make a request to a dual-stack endpoint, the S3 on Outposts bucket URL resolves to an\nIPv6 or an IPv4 address. For more information about accessing an S3 on Outposts bucket over IPv6,\nsee Making requests to S3 on Outposts over IPv6.\nTo access an S3 on Outposts bucket through a dual-stack endpoint, use a path-style endpoint\nname. S3 on Outposts supports only Regional dual-stack endpoint names, which means that you\nmust specify the Region as part of the name.\nFor a dual-stack path-style FIPs endpoint, use the following naming convention:\ns3-outposts-fips.region.api.aws\nFor dual-stack non-FIPS endpoint, use the following naming convention:\ns3-outposts.region.api.aws\nUsing dual-stack endpoints API Version 2006-03-01 206",
      "start_idx": 364660,
      "end_idx": 366165,
      "metadata": {
        "num_sentences": 8,
        "num_words": 219,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "dual-stack endpoints",
            "IPv6",
            "IPv4",
            "AWS PrivateLink",
            "path-style endpoint",
            "FIPS endpoint",
            "Region",
            "API Version 2006-03-01",
            "dns-options"
          ],
          "entities": [
            "Amazon S3",
            "AWS PrivateLink",
            "Outposts",
            "IPv6 network",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts dual-stack endpoints, which support both IPv6 and IPv4, and provides details on naming conventions, configurations, and accessing buckets via these endpoints.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I configure dual-stack endpoints for S3 on Outposts?",
            "What are the naming conventions for S3 on Outposts dual-stack endpoints?",
            "How can I enable IPv6 for AWS PrivateLink?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "IPv6",
          "IPv4",
          "FIPS endpoint",
          "S3 on Outposts",
          "Region",
          "dns-options",
          "API Version 2006-03-01",
          "Amazon S3",
          "AWS CLI",
          "dual-stack endpoints",
          "AWS PrivateLink",
          "path-style endpoint",
          "Outposts",
          "IPv6 network"
        ]
      }
    },
    {
      "chunk_id": "c98a4756-afac-4857-ac60-196e92443048_chunk_206",
      "text": "\n\nAmazon S3 on Outposts User Guide\nNote\nVirtual hosted-style endpoint names aren't supported in S3 on Outposts.\nUsing dual-stack endpoints from the AWS CLI\nThis section provides examples of AWS CLI commands used to make requests to a dual-stack\nendpoint. For instructions on setting up the AWS CLI, see Getting started by using the AWS CLI and\nSDK for Java.\nYou set the configuration value use_dualstack_endpoint to true in a profile in your AWS\nConfig file to direct all Amazon S3 requests made by the s3 and s3api AWS CLI commands to the\ndual-stack endpoint for the specified Region. You specify the Region in the configuration file or in a\ncommand using the --region option.\nWhen using dual-stack endpoints with the AWS CLI, only path addressing style is supported.\nThe addressing style, set in the configuration file, determines whether the bucket name is in the\nhostname or in the URL. For more information, see s3outposts in the AWS CLI User Guide.\nTo use a dual-stack endpoint via the AWS CLI, use the --endpoint-url parameter with\nthe http://s3.dualstack.region.amazonaws.com or https://s3-outposts-\nfips.region.api.aws endpoint for any s3control or s3outposts commands.\nFor example:\n$ aws s3control list-regional-buckets --endpoint-url https://s3-\noutposts.region.api.aws\nUsing S3 on Outposts dual-stack endpoints from the AWS SDKs\nThis section provides examples of how to access a dual-stack endpoint by using the AWS SDKs.\nAWS SDK for Java 2.x dual-stack endpoint example\nThe following examples show how to use the S3ControlClient and S3OutpostsClient classes\nto enable dual-stack endpoints when creating an S3 on Outposts client using the AWS SDK for Java\n2.x. For instructions on creating and testing a working Java example for Amazon S3 on Outposts,\nsee Getting started by using the AWS CLI and SDK for Java.\nUsing dual-stack endpoints API Version 2006-03-01 207",
      "start_idx": 366165,
      "end_idx": 368041,
      "metadata": {
        "num_sentences": 13,
        "num_words": 294,
        "recursion_depth": 8,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "dual-stack endpoint",
            "AWS CLI",
            "S3 on Outposts",
            "configuration file",
            "AWS SDK for Java",
            "s3control",
            "s3outposts",
            "endpoint-url",
            "path addressing style",
            "Region"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "S3ControlClient",
            "S3OutpostsClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS CLI Usage",
            "SDK Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "S3ControlClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and use dual-stack endpoints for Amazon S3 on Outposts with the AWS CLI and AWS SDK for Java. It provides specific examples and instructions for setting up configurations, using commands, and enabling dual-stack support in Java clients.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure dual-stack endpoints in AWS CLI for S3 on Outposts?",
            "What is the process for enabling dual-stack support using the AWS SDK for Java?",
            "What addressing styles are supported for dual-stack endpoints in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "s3control",
          "S3 on Outposts",
          "Region",
          "configuration file",
          "path addressing style",
          "s3outposts",
          "AWS CLI",
          "Amazon S3",
          "dual-stack endpoint",
          "AWS SDK for Java",
          "S3ControlClient",
          "endpoint-url",
          "S3OutpostsClient"
        ]
      }
    }
  ],
  "metadata": {
    "total_chunks": 194,
    "avg_chunk_size": 254.38144329896906,
    "chunking_method": "RecursiveChunker",
    "processed_at": "2025-05-04T18:53:35.203555",
    "total_sentences": 2510,
    "total_words": 52012,
    "chunking_strategy": "recursive_length",
    "max_chunk_length": 1000,
    "delimiters_used": null,
    "enrichment": {
      "method": "llm",
      "model": "VARELab-GPT4o",
      "enriched_at": "2025-05-05 07:38:37"
    }
  }
}