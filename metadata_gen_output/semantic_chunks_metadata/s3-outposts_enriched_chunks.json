{
  "document_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250",
  "document_name": "s3-outposts.txt",
  "chunks": [
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_0",
      "text": "User Guide\nAmazon S3 on Outposts\nAPI Version 2006-03-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved. Amazon S3 on Outposts User Guide\nAmazon S3 on Outposts: User Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.",
      "start_idx": 0,
      "end_idx": 297,
      "metadata": {
        "num_sentences": 4,
        "num_words": 47,
        "breakpoint_idx": 3,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3888126214345296,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "User Guide",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "API Version",
            "AWS",
            "User Guide",
            "Copyright",
            "Technical Documentation",
            "Cloud Storage",
            "2024",
            "API"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS",
            "API Version 2006-03-01",
            "Amazon Web Services"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides a user guide for Amazon S3 on Outposts, including reference details about the API version 2006-03-01.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts?",
            "What API version is used for Amazon S3 on Outposts?",
            "Where can I find documentation for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Web Services",
          "API Version 2006-03-01",
          "Copyright",
          "2024",
          "API",
          "Technical Documentation",
          "User Guide",
          "API Version",
          "Cloud Storage",
          "Outposts",
          "Amazon S3",
          "AWS"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_1",
      "text": "Amazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon. Amazon S3 on Outposts User Guide\nTable of Contents\nWhat is S3 on Outposts? ................................................................................................................. 1\nHow S3 on Outposts works ....................................................................................................................... 1\nRegions ...................................................................................................................................................... 2\nBuckets ....................................................................................................................................................... 2\nObjects....................................................................................................................................................... 3\nKeys ............................................................................................................................................................ 3\nS3 Versioning ........................................................................................................................................... 4\nVersion ID.................................................................................................................................................. 4\nStorage class and encryption............................................................................................................... 4\nBucket policy............................................................................................................................................ 4\nS3 on Outposts access points .............................................................................................................. 5\nFeatures of S3 on Outposts ....................................................................................................................... 5\nAccess management ............................................................................................................................... 5\nStorage logging and monitoring ......................................................................................................... 6\nStrong consistency.................................................................................................................................. 6\nRelated services............................................................................................................................................ 7\nAccessing S3 on Outposts .......................................................................................................................... 7\nAWS Management Console ................................................................................................................... 7\nAWS Command Line Interface ............................................................................................................. 7\nAWS SDKs ................................................................................................................................................. 8\nPaying for S3 on Outposts ......................................................................................................................... 8\nNext steps...................................................................................................................................................... 8\nSetting up your Outpost ............................................................................................................... 10\nOrder a new Outpost ................................................................................................................................ 10\nHow S3 on Outposts is different .................................................................................................. 11\nSpecifications.............................................................................................................................................. 11\nSupported API operations ........................................................................................................................ 12\nUnsupported Amazon S3 features ......................................................................................................... 12\nNetwork restrictions .................................................................................................................................. 13\nGetting started with S3 on Outposts ........................................................................................... 14\nUsing the S3 console ................................................................................................................................ 14\nCreate a bucket, an access point, and an endpoint ....................................................................... 15\nNext steps............................................................................................................................................... 17\nUsing the AWS CLI and SDK for Java .................................................................................................... 17\nAPI Version 2006-03-01 iii\n\nAmazon S3 on Outposts User Guide\nStep 1: Create a bucket ....................................................................................................................... 18\nStep 2: Create an access point ........................................................................................................... 19\nStep 3: Create an endpoint ................................................................................................................ 20\nStep 4: Upload an object to an S3 on Outposts bucket ............................................................... 22\nNetworking for S3 on Outposts ................................................................................................... 23\nChoosing your networking access type ................................................................................................. 23\nAccessing your S3 on Outposts buckets and objects ......................................................................... 23\nManaging connections using cross-account elastic network interfaces .......................................... 24\nWorking with S3 on Outposts buckets ........................................................................................ 25\nBuckets......................................................................................................................................................... 25\nAccess points ............................................................................................................................................... 25\nEndpoints ..................................................................................................................................................... 26\nAPI operations on S3 on Outposts ......................................................................................................... 26\nCreating and managing S3 on Outposts buckets ................................................................................ 28\nCreating a bucket ....................................................................................................................................... 28\nAdding tags................................................................................................................................................. 32\nUsing bucket policies ................................................................................................................................. 33\nAdding a bucket policy ........................................................................................................................ 34\nViewing a bucket policy ...................................................................................................................... 36\nDeleting a bucket policy ..................................................................................................................... 37\nBucket policy examples ....................................................................................................................... 38\nListing buckets............................................................................................................................................ 42\nGetting a bucket ......................................................................................................................................... 43\nDeleting your bucket ................................................................................................................................. 45\nWorking with access points ..................................................................................................................... 46\nCreating an access point ..................................................................................................................... 47\nUsing a bucket-style alias for your access point ............................................................................ 48\nViewing access point configuration .................................................................................................. 53\nListing access points ............................................................................................................................. 54\nDeleting an access point ..................................................................................................................... 55\nAdding an access point policy ............................................................................................................ 56\nViewing an access point policy .......................................................................................................... 58\nWorking with endpoints ........................................................................................................................... 59\nCreating an endpoint ........................................................................................................................... 60\nListing endpoints.................................................................................................................................. 62\nDeleting an endpoint ........................................................................................................................... 64\nAPI Version 2006-03-01 iv\n\nAmazon S3 on Outposts User Guide\nWorking with S3 on Outposts objects ......................................................................................... 66\nUpload an object ........................................................................................................................................ 67\nCopying an object ...................................................................................................................................... 69\nUsing the AWS SDK for Java .............................................................................................................. 70\nGetting an object ....................................................................................................................................... 71\nListing objects ............................................................................................................................................. 74\nDeleting objects .......................................................................................................................................... 77\nUsing HeadBucket ...................................................................................................................................... 81\nPerforming a multipart upload ............................................................................................................... 83\nPerform a multipart upload of an object in an S3 on Outposts bucket .................................... 84\nCopy a large object in an S3 on Outposts bucket by using multipart upload .......................... 86\nList parts of an object in an S3 on Outposts bucket .................................................................... 88\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts bucket ......................... 90\nUsing presigned URLs ............................................................................................................................... 91\nLimiting presigned URL capabilities .................................................................................................. 91\nWho can create a presigned URL...................................................................................................... 93\nWhen does S3 on Outposts check the expiration date and time of a presigned URL? ............ 94\nSharing objects...................................................................................................................................... 94\nUploading an object ............................................................................................................................. 99\nAmazon S3 on Outposts with local Amazon EMR ............................................................................ 104\nCreating an Amazon S3 on Outposts bucket ............................................................................... 105\nGetting started using Amazon EMR with Amazon S3 on Outposts ......................................... 106\nAuthorization and authentication caching ......................................................................................... 111\nConfiguring the authorization and authentication cache .......................................................... 112\nValidating SigV4A signing ................................................................................................................ 112\nSecurity ........................................................................................................................................ 113\nSetting up IAM ......................................................................................................................................... 113\nPrincipals for S3 on Outposts policies ........................................................................................... 116\nARNs for S3 on Outposts ................................................................................................................. 116\nExample policies for S3 on Outposts ............................................................................................. 118\nPermissions for endpoints ................................................................................................................ 119\nService-linked roles for S3 on Outposts ........................................................................................ 121\nData encryption........................................................................................................................................ 121\nAWS PrivateLink for S3 on Outposts .................................................................................................. 122\nRestrictions and limitations .............................................................................................................. 123\nAccessing S3 on Outposts interface endpoints ............................................................................ 124\nAPI Version 2006-03-01 v\n\nAmazon S3 on Outposts User Guide\nUpdating an on-premises DNS configuration ............................................................................... 126\nCreating a VPC endpoint .................................................................................................................. 126\nCreating VPC endpoint policies and bucket policies ................................................................... 126\nSignature Version 4 (SigV4) policy keys ............................................................................................. 128\nBucket policy examples that use Signature Version 4-related condition keys ....................... 130\nAWS managed policies ........................................................................................................................... 132\nAWSS3OnOutpostsServiceRolePolicy............................................................................................. 132\nPolicy updates..................................................................................................................................... 133\nUsing service-linked roles ...................................................................................................................... 133\nService-linked role permissions for S3 on Outposts ................................................................... 134\nCreating a service-linked role for S3 on Outposts ...................................................................... 137\nEditing a service-linked role for S3 on Outposts ......................................................................... 137\nDeleting a service-linked role for S3 on Outposts ...................................................................... 137\nSupported Regions for S3 on Outposts service-linked roles ..................................................... 138\nManaging S3 on Outposts storage ............................................................................................. 139\nManaging S3 Versioning ......................................................................................................................... 139\nCreating and managing a lifecycle configuration ............................................................................. 141\nUsing the console ............................................................................................................................... 142\nUsing the AWS CLI and SDK for Java ............................................................................................. 145\nReplicating objects for S3 on Outposts .............................................................................................. 149\nReplication configuration.................................................................................................................. 150\nRequirements for S3 Replication on Outposts ............................................................................. 151\nWhat is replicated?",
      "start_idx": 298,
      "end_idx": 19100,
      "metadata": {
        "num_sentences": 5,
        "num_words": 937,
        "breakpoint_idx": 8,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.17036776542663573,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "buckets",
            "access points",
            "endpoints",
            "multipart upload",
            "IAM policies",
            "encryption",
            "AWS CLI",
            "replication",
            "SigV4"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs",
            "Amazon EMR"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "Amazon EMR"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a comprehensive guide to using Amazon S3 on Outposts, including setup, configuration, features, and best practices for managing storage and access points.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I create a bucket in S3 on Outposts?",
            "What are the networking requirements for S3 on Outposts?",
            "How can I configure IAM policies for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "endpoints",
          "AWS Management Console",
          "AWS PrivateLink",
          "SigV4",
          "access points",
          "replication",
          "AWS SDKs",
          "Amazon EMR",
          "IAM policies",
          "encryption",
          "S3 on Outposts",
          "buckets",
          "Amazon S3",
          "AWS CLI",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_2",
      "text": "............................................................................................................................. 152\nWhat isn't replicated? ........................................................................................................................ 152\nWhat isn't supported by S3 Replication on Outposts? ............................................................... 153\nSetting up replication ........................................................................................................................ 153\nManaging your replication ................................................................................................................ 172\nSharing S3 on Outposts ......................................................................................................................... 180\nPrerequisites........................................................................................................................................ 180\nProcedure .............................................................................................................................................. 181\nUsage examples .................................................................................................................................. 182\nOther services........................................................................................................................................... 184\nMonitoring S3 on Outposts ........................................................................................................ 186\nCloudWatch metrics ................................................................................................................................ 186\nCloudWatch metrics........................................................................................................................... 187\nAmazon CloudWatch Events .................................................................................................................. 188\nAPI Version 2006-03-01 vi\n\nAmazon S3 on Outposts User Guide\nCloudTrail logs.......................................................................................................................................... 190\nEnabling CloudTrail logging for S3 on Outposts objects ........................................................... 190\nAmazon S3 on Outposts AWS CloudTrail log file entries ........................................................... 193\nDeveloping with S3 on Outposts ................................................................................................ 196\nS3 on Outposts APIs ............................................................................................................................... 196\nAmazon S3 API operations for managing objects ....................................................................... 196\nAmazon S3 Control API operations for managing buckets ....................................................... 197\nS3 on Outposts API operations for managing Outposts ............................................................ 198\nConfiguring S3 control client ................................................................................................................ 199\nMaking requests over IPv6 ..................................................................................................................... 199\nGetting started with IPv6 ................................................................................................................. 200\nMaking requests using dual-stack endpoints ............................................................................... 201\nUsing IPv6 addresses in IAM policies ............................................................................................. 201\nTesting IP address compatibility ..................................................................................................... 202\nUsing IPv6 with AWS PrivateLink .................................................................................................... 203\nUsing dual-stack endpoints .............................................................................................................. 206\nAPI Version 2006-03-01 vii\n\nAmazon S3 on Outposts User Guide\nWhat is Amazon S3 on Outposts? AWS Outposts is a fully managed service that offers the same AWS infrastructure, AWS services,\nAPIs, and tools to virtually any data center, co-location space, or on-premises facility for a truly\nconsistent hybrid experience.",
      "start_idx": 19101,
      "end_idx": 23663,
      "metadata": {
        "num_sentences": 4,
        "num_words": 240,
        "breakpoint_idx": 12,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2659274737040202,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "CloudWatch metrics",
            "CloudTrail logs",
            "IPv6",
            "AWS PrivateLink",
            "dual-stack endpoints",
            "IAM policies",
            "API operations",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "CloudWatch",
            "CloudTrail",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "CloudWatch"
          ],
          "mentioned_tools": [
            "CloudTrail",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This document provides a comprehensive guide to using Amazon S3 on AWS Outposts, covering replication, monitoring, API operations, and IPv6 configurations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the prerequisites for setting up S3 replication on Outposts?",
            "How can I monitor S3 on Outposts using CloudWatch metrics?",
            "What API operations are available for managing S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "AWS PrivateLink",
          "dual-stack endpoints",
          "CloudTrail logs",
          "IPv6",
          "IAM policies",
          "CloudTrail",
          "CloudWatch metrics",
          "API operations",
          "CloudWatch",
          "Outposts",
          "S3 Replication",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_3",
      "text": "AWS Outposts is ideal for workloads that require low-latency access\nto on-premises systems, local data processing, data residency, and migration of applications with\nlocal system interdependencies. For more information, see What is AWS Outposts? in the AWS\nOutposts User Guide. With Amazon S3 on Outposts, you can create S3 buckets on your Outposts and easily store and\nretrieve objects on premises. S3 on Outposts provides a new storage class, OUTPOSTS, which uses\nthe Amazon S3 APIs and is designed to store data durably and redundantly across multiple devices\nand servers on your Outposts. You communicate with your Outposts bucket by using an access\npoint and endpoint connection over a virtual private cloud (VPC). You can use the same APIs and features on Outposts buckets as you do on Amazon S3,\nincluding access policies, encryption, and tagging. You can use S3 on Outposts through the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. \u2022 How S3 on Outposts works\n\u2022 Features of S3 on Outposts\n\u2022 Related services\n\u2022 Accessing S3 on Outposts\n\u2022 Paying for S3 on Outposts\n\u2022 Next steps\nHow S3 on Outposts works\nS3 on Outposts is an object storage service that stores data as objects within buckets on your\nOutpost. An object is a data file and any metadata that describes the file.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 223,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5273161994086372,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Feature Description"
            ]
          },
          "keywords": [
            "AWS Outposts",
            "low-latency",
            "local data processing",
            "S3 buckets",
            "OUTPOSTS storage class",
            "Amazon S3 APIs",
            "access point",
            "virtual private cloud",
            "encryption",
            "tagging"
          ],
          "entities": [
            "AWS Outposts",
            "Amazon S3",
            "OUTPOSTS storage class",
            "VPC",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hybrid Cloud",
            "Object Storage"
          ],
          "mentioned_services": [
            "AWS Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "AWS Outposts enables low-latency access and local data processing, with support for Amazon S3 buckets on-premises using the OUTPOSTS storage class. It offers integration with existing S3 APIs and features such as encryption, tagging, and access policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is AWS Outposts and its use cases?",
            "How does S3 on Outposts work?",
            "What features are available for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "local data processing",
          "VPC",
          "AWS Management Console",
          "tagging",
          "low-latency",
          "OUTPOSTS storage class",
          "access point",
          "encryption",
          "Amazon S3 APIs",
          "S3 buckets",
          "Amazon S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_4",
      "text": "A bucket is a container for\nobjects. To store your data in S3 on Outposts, you first create a bucket. When you create the bucket, you\nspecify a bucket name and the Outpost that will hold the bucket. To access your S3 on Outposts\nbucket and perform object operations, you next create and configure an access point. You must\nalso create an endpoint to route requests to your access point. How S3 on Outposts works API Version 2006-03-01 1\n\nAmazon S3 on Outposts User Guide\nAccess points simplify data access for any AWS service or customer application that stores data\nin S3. Access points are named network endpoints that are attached to buckets and can be used\nto perform object operations, such as GetObject and PutObject. Each access point has distinct\npermissions and network controls. You can create and manage your S3 on Outposts buckets, access points, and endpoints by using\nthe AWS Management Console, AWS CLI, AWS SDKs, or REST API. To upload and manage objects in\nyour S3 on Outposts bucket, you can use the AWS CLI, AWS SDKs, or REST API.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 184,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40250591701931426,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "bucket",
            "S3 on Outposts",
            "access point",
            "endpoint",
            "object operations",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "permissions",
            "network controls"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS Management Console",
            "REST API"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and configure buckets, access points, and endpoints for Amazon S3 on Outposts, along with tools for managing and performing object operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in S3 on Outposts?",
            "What are access points in S3 on Outposts, and how do I configure them?",
            "Which tools can be used to manage S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "network controls",
          "AWS SDKs",
          "REST API",
          "object operations",
          "access point",
          "S3 on Outposts",
          "endpoint",
          "bucket",
          "Outposts",
          "Amazon S3",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_5",
      "text": "Regions\nDuring AWS Outposts provisioning, you or AWS creates a service link connection that connects\nyour Outpost back to your chosen AWS Region or Outposts home Region for bucket operations and\ntelemetry. An Outpost relies on connectivity to the parent AWS Region. The Outposts rack is not\ndesigned for disconnected operations or environments with limited to no connectivity. For more\ninformation, see Outpost connectivity to AWS Regions in the AWS Outposts User Guide. Buckets\nA bucket is a container for objects stored in S3 on Outposts. You can store any number of objects in\na bucket and can have up to 100 buckets per account per Outpost. When you create a bucket, you enter a bucket name and choose the Outpost where the bucket\nwill reside. After you create a bucket, you cannot change the bucket name or move the bucket to a\ndifferent Outpost. Bucket names must follow Amazon S3 bucket naming rules. In S3 on Outposts,\nbucket names are unique to an Outpost and AWS account.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4878933376736111,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS Outposts",
            "bucket",
            "S3",
            "Outpost connectivity",
            "AWS Region",
            "service link connection",
            "bucket naming rules",
            "telemetry",
            "rack",
            "disconnected operations"
          ],
          "entities": [
            "AWS Outposts",
            "S3 on Outposts",
            "AWS Region",
            "Outposts rack",
            "service link connection"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "AWS Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the connectivity requirements and bucket management for AWS Outposts, including naming rules, limitations, and dependencies on AWS Regions.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the connectivity requirements for AWS Outposts?",
            "How do bucket naming rules work in S3 on Outposts?",
            "Can I move a bucket to a different Outpost after creation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "service link connection",
          "bucket naming rules",
          "disconnected operations",
          "Outposts rack",
          "Outpost connectivity",
          "rack",
          "S3 on Outposts",
          "bucket",
          "S3",
          "AWS Region",
          "telemetry",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_6",
      "text": "S3 on Outposts buckets require the\noutpost-id, account-id, and bucket name to identify them. The following example shows the Amazon Resource Name (ARN) format for S3 on Outposts\nbuckets. The ARN is comprised of the Region your Outpost is homed to, your Outpost account, the\nOutpost ID, and the bucket name. arn:aws:s3-outposts:region:account-id:outpost/outpost-id/bucket/bucket-name\nEvery object is contained in a bucket. You must use access points to access any object in an\nOutposts bucket. When you specify the bucket for object operations, you use the access point ARN\nor access point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. Regions API Version 2006-03-01 2\n\nAmazon S3 on Outposts User Guide\nThe following example shows the access point ARN format for S3 on Outposts, which includes the\noutpost-id, account-id, and access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about buckets, see Working with S3 on Outposts buckets. Objects\nObjects are the fundamental entities stored in S3 on Outposts. Objects consist of object data and\nmetadata.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 174,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49091114468044705,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket",
            "ARN",
            "access point",
            "outpost-id",
            "account-id",
            "region",
            "object",
            "metadata",
            "alias"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "access point ARN",
            "bucket-style alias"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Regions"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the structure and usage of ARNs for Amazon S3 on Outposts buckets and access points, including required identifiers and access methods.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts buckets?",
            "How do I access objects in an S3 on Outposts bucket?",
            "What identifiers are required for S3 on Outposts access?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "metadata",
          "ARN",
          "Amazon S3 on Outposts",
          "region",
          "alias",
          "access point ARN",
          "account-id",
          "object",
          "access point",
          "bucket-style alias",
          "S3 on Outposts",
          "bucket",
          "Outposts",
          "Amazon S3",
          "AWS Regions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_7",
      "text": "The metadata is a set of name-value pairs that describe the object. These pairs include\nsome default metadata, such as the date last modified, and standard HTTP metadata, such as\nContent-Type. You can also specify custom metadata at the time that the object is stored. An\nobject is uniquely identified within a bucket by a key (or name). With Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. Keys\nAn object key (or key name) is the unique identifier for an object within a bucket.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 165,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32106552124023435,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metadata",
              "Storage",
              "AWS S3"
            ]
          },
          "keywords": [
            "metadata",
            "object key",
            "bucket",
            "Outpost",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "data-residency",
            "Content-Type",
            "HTTP metadata"
          ],
          "entities": [
            "Amazon S3",
            "Outpost",
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outpost"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains metadata management for objects in Amazon S3 on Outposts, emphasizing data residency compliance and detailing tools for object management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is metadata in Amazon S3 on Outposts?",
            "How do I manage objects in an Outpost without the AWS Management Console?",
            "What tools are available for managing objects in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "metadata",
          "data-residency",
          "Content-Type",
          "REST API",
          "AWS SDKs",
          "object key",
          "Outpost",
          "bucket",
          "HTTP metadata",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_8",
      "text": "Every object in a\nbucket has exactly one key. The combination of a bucket and object key uniquely identifies each\nobject. The following example shows the ARN format for S3 on Outposts objects, which includes the AWS\nRegion code for the Region that the Outpost is homed to, AWS account ID, Outpost ID, bucket\nname, and object key:\narn:aws:s3-outposts:us-west-2:123456789012:outpost/ op-01ac5d28a6a232904/bucket/amzn-\ns3-demo-bucket1/object/myobject\nFor more information about object keys, see Working with S3 on Outposts objects. Objects API Version 2006-03-01 3\n\nAmazon S3 on Outposts User Guide\nS3 Versioning\nYou can use S3 Versioning on Outposts buckets to keep multiple variants of an object in the\nsame bucket. With S3 Versioning, you can preserve, retrieve, and restore every version of every\nobject stored in your buckets. S3 Versioning helps you recover from unintended user actions and\napplication failures. For more information, see Managing S3 Versioning for your S3 on Outposts bucket. Version ID\nWhen you enable S3 Versioning in a bucket, S3 on Outposts generates a unique version ID for\neach object added to the bucket. Objects that already existed in the bucket at the time that you\nenable versioning have a version ID of null. If you modify these (or any other) objects with other\noperations, such as PutObject, the new objects get a unique version ID.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.495903311835395,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts",
            "object key",
            "bucket",
            "ARN format",
            "AWS Region code",
            "version ID",
            "PutObject",
            "AWS account ID",
            "S3 on Outposts"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "ARN",
            "Version ID",
            "PutObject"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the unique identification of objects in S3 on Outposts buckets, the use of S3 Versioning for object recovery, and the ARN format for Outposts objects.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts objects?",
            "How does S3 Versioning work on Outposts buckets?",
            "What happens to objects when S3 Versioning is enabled?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Region code",
          "AWS Outposts",
          "ARN",
          "PutObject",
          "AWS account ID",
          "object key",
          "version ID",
          "ARN format",
          "Version ID",
          "S3 on Outposts",
          "S3 Versioning",
          "bucket",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_9",
      "text": "For more information, see Managing S3 Versioning for your S3 on Outposts bucket. Storage class and encryption\nS3 on Outposts provides a new storage class, S3 Outposts (OUTPOSTS). The S3 Outposts storage\nclass is available only for objects stored in buckets on AWS Outposts. If you try to use other S3\nstorage classes with S3 on Outposts, S3 on Outposts returns the InvalidStorageClass error. By default, objects stored in the S3 Outposts (OUTPOSTS) storage class are encrypted using server-\nside encryption with Amazon S3 managed encryption keys (SSE-S3). For more information, see\nData encryption in S3 on Outposts. Bucket policy\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4340892367892795,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "S3 Outposts",
            "Storage class",
            "Encryption",
            "Bucket policy",
            "IAM policy",
            "SSE-S3",
            "AWS Outposts",
            "InvalidStorageClass",
            "Data encryption"
          ],
          "entities": [
            "S3 Outposts",
            "AWS Outposts",
            "SSE-S3",
            "IAM policy",
            "Bucket policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS S3",
          "secondary_categories": [
            "Data Encryption",
            "Access Management"
          ],
          "mentioned_services": [
            "S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains S3 Outposts storage class, its encryption using SSE-S3, and bucket policy configurations, including size limitations and permissions management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the S3 Outposts storage class?",
            "How is data encrypted in S3 on Outposts?",
            "What are the restrictions on bucket policies in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS S3]",
        "tf_idf_keywords": [
          "Bucket policy",
          "Encryption",
          "Storage class",
          "AWS Outposts",
          "Data encryption",
          "InvalidStorageClass",
          "SSE-S3",
          "S3 Versioning",
          "IAM policy",
          "S3",
          "S3 Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_10",
      "text": "Bucket policies use JSON-based IAM policy language that is standard across AWS. You can use\nbucket policies to add or deny permissions for the objects in a bucket. Bucket policies allow or deny\nrequests based on the elements in the policy. These elements can include the requester, S3 on\nOutposts actions, resources, and aspects or conditions of the request (for example, the IP address\nS3 Versioning API Version 2006-03-01 4\n\nAmazon S3 on Outposts User Guide\nused to make the request). For example, you can create a bucket policy that grants cross-account\npermissions to upload objects to an S3 on Outposts bucket while ensuring that the bucket owner\nhas full control of the uploaded objects. In your bucket policy, you can use wildcard characters (*) in ARNs and other values to grant\npermissions to a subset of objects. For example, you can control access to groups of objects that\nbegin with a common prefix or end with a given extension, such as .html. S3 on Outposts access points\nS3 on Outposts access points are named network endpoints with dedicated access policies that\ndescribe how data can be accessed using that endpoint. Access points simplify managing data\naccess at scale for shared datasets in S3 on Outposts. Access points are attached to buckets that\nyou can use to perform S3 object operations, such as GetObject and PutObject.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 226,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4258048163519965,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Explanation",
              "Use Case"
            ]
          },
          "keywords": [
            "Bucket policies",
            "IAM policy language",
            "S3 on Outposts",
            "Access points",
            "Cross-account permissions",
            "Wildcard characters",
            "ARNs",
            "S3 object operations",
            "GetObject",
            "PutObject"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM policy",
            "Access points",
            "ARNs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Data Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how bucket policies in Amazon S3 on Outposts use JSON-based IAM policy language to manage permissions for objects and access points, enabling granular control over data access and operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I use bucket policies to manage permissions in S3 on Outposts?",
            "What are S3 on Outposts access points and their purpose?",
            "How do wildcard characters work in bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "Bucket policies",
          "PutObject",
          "Cross-account permissions",
          "GetObject",
          "Wildcard characters",
          "S3 on Outposts",
          "ARNs",
          "S3 object operations",
          "IAM policy",
          "IAM policy language",
          "Access points",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_11",
      "text": "When you specify the bucket for object operations, you use the access point ARN or access point\nalias. For more information about access point aliases, see Using a bucket-style alias for your S3 on\nOutposts bucket access point. Access points have distinct permissions and network controls that S3 on Outposts applies for any\nrequest that is made through that access point. Each access point enforces a customized access\npoint policy that works in conjunction with the bucket policy that is attached to the underlying\nbucket. For more information, see Accessing your S3 on Outposts buckets and objects. Features of S3 on Outposts\nAccess management\nS3 on Outposts provides features for auditing and managing access to your buckets and objects. By\ndefault, S3 on Outposts buckets and the objects in them are private. You have access only to the S3\non Outposts resources that you create. To grant granular resource permissions that support your specific use case or to audit the\npermissions of your S3 on Outposts resources, you can use the following features. \u2022 S3 Block Public Access \u2013 Block public access to buckets and objects.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5520033094618055,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Permissions",
              "Access Management"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access point",
            "bucket policy",
            "access point policy",
            "network controls",
            "granular permissions",
            "S3 Block Public Access",
            "object operations",
            "bucket-style alias",
            "auditing"
          ],
          "entities": [
            "S3 on Outposts",
            "access point ARN",
            "bucket-style alias",
            "S3 Block Public Access",
            "access point policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Network Security"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how access points in S3 on Outposts enforce distinct permissions and network controls for object operations, and provides features for managing and auditing access to buckets and objects.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do access points enforce permissions in S3 on Outposts?",
            "What is the role of bucket and access point policies in S3 on Outposts?",
            "How can public access be blocked for S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point policy",
          "network controls",
          "bucket policy",
          "S3 Block Public Access",
          "auditing",
          "access point ARN",
          "object operations",
          "access point",
          "bucket-style alias",
          "S3 on Outposts",
          "granular permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_12",
      "text": "For buckets on Outposts,\nBlock Public Access is always enabled by default. S3 on Outposts access points API Version 2006-03-01 5\n\nAmazon S3 on Outposts User Guide\n\u2022 AWS Identity and Access Management (IAM) \u2013 IAM is a web service that helps you securely\ncontrol access to AWS resources, including your S3 on Outposts resources. With IAM, you can\ncentrally manage permissions that control which AWS resources users can access. You use IAM to\ncontrol who is authenticated (signed in) and authorized (has permissions) to use resources. \u2022 S3 on Outposts access points \u2013 Manage data access for shared datasets in S3 on Outposts. Access\npoints are named network endpoints with dedicated access policies. Access points are attached\nto buckets and can be used to perform object operations, such as GetObject and PutObject. \u2022 Bucket policies \u2013 Use IAM-based policy language to configure resource-based permissions for\nyour S3 buckets and the objects in them. \u2022 AWS Resource Access Manager (AWS RAM) \u2013 Securely share your S3 on Outposts capacity across\nAWS accounts, within your organization or organizational units (OUs) in AWS Organizations. Storage logging and monitoring\nS3 on Outposts provides logging and monitoring tools that you can use to monitor and control\nhow your S3 on Outposts resources are being used.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4389700995551215,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "Block Public Access",
            "IAM",
            "access points",
            "bucket policies",
            "AWS RAM",
            "resource-based permissions",
            "logging",
            "monitoring",
            "AWS Organizations"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS RAM",
            "AWS Organizations",
            "Block Public Access"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Storage Services",
          "secondary_categories": [
            "Access Management",
            "Logging and Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS RAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the access management, logging, and monitoring features for Amazon S3 on Outposts, including IAM, access points, bucket policies, and AWS RAM for secure resource sharing.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How is Block Public Access configured for S3 on Outposts?",
            "What are access points in S3 on Outposts and how are they used?",
            "How can I share S3 on Outposts capacity across AWS accounts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Storage Services]",
        "tf_idf_keywords": [
          "Block Public Access",
          "Amazon S3 on Outposts",
          "monitoring",
          "bucket policies",
          "AWS RAM",
          "AWS Organizations",
          "resource-based permissions",
          "logging",
          "S3 on Outposts",
          "access points",
          "IAM"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_13",
      "text": "For more information, see Monitoring tools. \u2022 Amazon CloudWatch metrics for S3 on Outposts \u2013 Track the operational health of your\nresources and understand your capacity availability. \u2022 Amazon CloudWatch Events events for S3 on Outposts \u2013 Create a rule for any S3 on Outposts\nAPI event to receive notifications through all supported CloudWatch Events targets, including\nAmazon Simple Queue Service (Amazon SQS), Amazon Simple Notification Service (Amazon\nSNS), and AWS Lambda. \u2022 AWS CloudTrail logs for S3 on Outposts \u2013 Record actions taken by a user, a role, or an AWS\nservice in S3 on Outposts. CloudTrail logs provide you with detailed API tracking for S3 bucket-\nlevel and object-level operations. Strong consistency\nS3 on Outposts provides strong read-after-write consistency for PUT and DELETE requests of\nobjects in your S3 on Outposts bucket in all AWS Regions. This behavior applies to both writes\nof new objects and to PUT requests that overwrite existing objects and to DELETE requests. In\naddition, S3 on Outposts object tags and object metadata (for example, the HEAD object) are\nstrongly consistent. For more information, see Amazon S3 data consistency model in the Amazon\nS3 User Guide. Storage logging and monitoring API Version 2006-03-01 6\n\nAmazon S3 on Outposts User Guide\nRelated services\nAfter you load your data into S3 on Outposts, you can use it with other AWS services.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 225,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43993937174479164,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Monitoring",
              "Consistency",
              "Logging"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "CloudWatch metrics",
            "CloudTrail logs",
            "Strong consistency",
            "API events",
            "S3 bucket-level operations",
            "Object metadata",
            "Monitoring tools",
            "Storage logging",
            "AWS Regions"
          ],
          "entities": [
            "Amazon CloudWatch",
            "AWS Lambda",
            "Amazon SQS",
            "Amazon SNS",
            "AWS CloudTrail"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Monitoring",
            "Logging"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "Amazon Simple Queue Service (Amazon SQS)",
            "Amazon Simple Notification Service (Amazon SNS)",
            "AWS Lambda"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on monitoring, logging, and consistency features for Amazon S3 on Outposts, including integration with AWS services like CloudWatch, CloudTrail, and Lambda.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I monitor S3 on Outposts resources using CloudWatch?",
            "What consistency model does S3 on Outposts use?",
            "Which AWS services integrate with S3 on Outposts for event notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Monitoring tools",
          "AWS Lambda",
          "Strong consistency",
          "Amazon S3 on Outposts",
          "API events",
          "CloudTrail logs",
          "Object metadata",
          "Storage logging",
          "S3 bucket-level operations",
          "Amazon CloudWatch",
          "Amazon SQS",
          "CloudWatch metrics",
          "Amazon SNS",
          "AWS CloudTrail",
          "AWS Regions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_14",
      "text": "The following\nare the services that you might use most frequently:\n\u2022 Amazon Elastic Compute Cloud (Amazon EC2) \u2013 Provides secure and scalable computing capacity\nin the AWS Cloud. Using Amazon EC2 lessens your need to invest in hardware up front, so you\ncan develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few\nvirtual servers as you need, configure security and networking, and manage storage. \u2022 Amazon Elastic Block Store (Amazon EBS) on Outposts \u2013 Use Amazon EBS local snapshots on\nOutposts to store snapshots of volumes on an Outpost locally in S3 on Outposts. \u2022 Amazon Relational Database Service (Amazon RDS) on Outposts \u2013 Use Amazon RDS local\nbackups to store your Amazon RDS backups locally on your Outpost. \u2022 AWS DataSync \u2013 Automate transferring data between your Outposts and AWS Regions, choosing\nwhat to transfer, when to transfer, and how much network bandwidth to use. S3 on Outposts is\nintegrated with AWS DataSync. For on-premises applications that require high-throughput local\nprocessing, S3 on Outposts provides on-premises object storage to minimize data transfers and\nbuffer from network variations, while providing you the ability to easily transfer data between\nOutposts and AWS Regions. Accessing S3 on Outposts\nYou can work with S3 on Outposts in any of the following ways:\nAWS Management Console\nThe console is a web-based user interface for managing S3 on Outposts and AWS resources. If\nyou've signed up for an AWS account, you can access S3 on Outposts by signing into the AWS\nManagement Console and choosing S3 from the AWS Management Console home page.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 267,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5111400604248046,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS",
            "AWS DataSync",
            "S3 on Outposts",
            "AWS Management Console",
            "computing capacity",
            "local snapshots",
            "object storage",
            "data transfer"
          ],
          "entities": [
            "Amazon Elastic Compute Cloud (Amazon EC2)",
            "Amazon Elastic Block Store (Amazon EBS)",
            "Amazon Relational Database Service (Amazon RDS)",
            "AWS DataSync",
            "S3 on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Data Storage",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines frequently used AWS services such as Amazon EC2, Amazon EBS, and Amazon RDS, along with tools like AWS DataSync and S3 on Outposts for efficient cloud computing and data management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I use Amazon EC2 to deploy applications?",
            "What are the features of S3 on Outposts?",
            "How does AWS DataSync facilitate data transfer between Outposts and AWS Regions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Computing]",
        "tf_idf_keywords": [
          "Amazon Elastic Block Store (Amazon EBS)",
          "Amazon EBS",
          "AWS Management Console",
          "AWS DataSync",
          "Amazon EC2",
          "Amazon Elastic Compute Cloud (Amazon EC2)",
          "object storage",
          "S3 on Outposts",
          "local snapshots",
          "Amazon Relational Database Service (Amazon RDS)",
          "data transfer",
          "computing capacity",
          "Amazon RDS"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_15",
      "text": "Then,\nchoose Outposts buckets from the left navigation pane. AWS Command Line Interface\nYou can use the AWS command line tools to issue commands or build scripts at your system's\ncommand line to perform AWS (including S3) tasks. Related services API Version 2006-03-01 7\n\nAmazon S3 on Outposts User Guide\nThe AWS Command Line Interface (AWS CLI) provides commands for a broad set of AWS services. The AWS CLI is supported on Windows, macOS, and Linux. To get started, see the AWS Command\nLine Interface User Guide. For more information about the commands that you can use with S3 on\nOutposts, see s3api, s3control, and s3outposts in the AWS CLI Command Reference. AWS SDKs\nAWS provides SDKs (software development kits) that consist of libraries and sample code for\nvarious programming languages and platforms (Java, Python, Ruby, .NET, iOS, Android, and so\non). The AWS SDKs provide a convenient way to create programmatic access to S3 on Outposts\nand AWS. Because S3 on Outposts uses the same SDKs as Amazon S3, S3 on Outposts provides a\nconsistent experience using the same S3 APIs, automation, and tools. S3 on Outposts is a REST service.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5204700893825955,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Documentation",
              "Command-Line",
              "SDK"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 on Outposts",
            "SDKs",
            "REST service",
            "s3api",
            "s3control",
            "s3outposts",
            "programmatic access",
            "command line tools",
            "automation"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "S3 on Outposts",
            "AWS SDKs",
            "AWS Command Line Interface"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development Tools",
            "Command-Line Interfaces"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This section provides an overview of using the AWS CLI and SDKs to interact with S3 on Outposts, including supported commands and tools for programmatic access.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What commands can I use with S3 on Outposts in the AWS CLI?",
            "How do AWS SDKs support programmatic access to S3 on Outposts?",
            "What platforms are supported by the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "s3api",
          "command line tools",
          "AWS SDKs",
          "AWS Command Line Interface",
          "programmatic access",
          "s3outposts",
          "S3 on Outposts",
          "automation",
          "s3control",
          "REST service",
          "SDKs",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_16",
      "text": "You can send requests to S3 on Outposts by using the AWS SDK\nlibraries, which wrap the underlying REST API and simplify your programming tasks. For example,\nthe SDKs take care of tasks such as calculating signatures, cryptographically signing requests,\nmanaging errors, and retrying requests automatically. For information about the AWS SDKs,\nincluding how to download and install them, see Tools to Build on AWS. Paying for S3 on Outposts\nYou can purchase a variety of AWS Outposts rack configurations featuring a combination of\nAmazon EC2 instance types, Amazon EBS General Purpose solid state drive (SSD) volumes (gp2),\nand S3 on Outposts. Pricing includes delivery, installation, infrastructure service maintenance, and\nsoftware patches and upgrades. For more information, see AWS Outposts rack pricing. Next steps\nFor more information about working with S3 on Outposts, see the following topics:\n\u2022 Setting up your Outpost\n\u2022 How is Amazon S3 on Outposts different from Amazon S3? \u2022 Getting started with Amazon S3 on Outposts\n\u2022 Networking for S3 on Outposts\n\u2022 Working with S3 on Outposts buckets\nAWS SDKs API Version 2006-03-01 8\n\nAmazon S3 on Outposts User Guide\n\u2022 Working with S3 on Outposts objects\n\u2022 Security in S3 on Outposts\n\u2022 Managing S3 on Outposts storage\n\u2022 Developing with Amazon S3 on Outposts\nNext steps API Version 2006-03-01 9\n\nAmazon S3 on Outposts User Guide\nSetting up your Outpost\nTo get started with Amazon S3 on Outposts, you will need an Outpost with Amazon S3 capacity\ndeployed at your facility. For information about options for ordering an Outpost and S3\ncapacity, see AWS Outposts. To check if your Outposts has S3 capacity on it, you can use the\nListOutpostsWithS3 API call.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 280,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44934149848090277,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS SDK",
            "S3 on Outposts",
            "Outposts rack",
            "REST API",
            "Amazon EC2",
            "Amazon EBS",
            "gp2 volumes",
            "ListOutpostsWithS3",
            "API signatures",
            "cryptographic signing"
          ],
          "entities": [
            "AWS SDKs",
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2",
            "Amazon EBS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Infrastructure",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EC2",
            "Amazon EBS"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "ListOutpostsWithS3 API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use AWS SDKs to interact with Amazon S3 on Outposts, covering features like automatic retries, error management, and cryptographic signing. It also provides information on purchasing Outposts racks and references related topics for further exploration.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "How do I set up Amazon S3 on Outposts?",
            "What are the differences between Amazon S3 and S3 on Outposts?",
            "What tools can I use to manage S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Amazon EBS",
          "Amazon S3 on Outposts",
          "AWS SDK",
          "Amazon EC2",
          "API signatures",
          "REST API",
          "Outposts rack",
          "AWS SDKs",
          "gp2 volumes",
          "S3 on Outposts",
          "cryptographic signing",
          "Amazon S3",
          "ListOutpostsWithS3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_17",
      "text": "For specifications and to see how S3 on Outposts is different than\nAmazon S3, see How is Amazon S3 on Outposts different from Amazon S3? For more information, see the following topics. Topics\n\u2022 Order a new Outpost\nOrder a new Outpost\nIf you need to order a new Outpost with S3 capacity, see AWS Outposts rack pricing to understand\nthe capacity options for Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Block Store\n(Amazon EBS), and Amazon S3. After you select your configuration, follow the steps in Create an Outpost and order Outpost\ncapacity in the AWS Outposts User Guide. Order a new Outpost API Version 2006-03-01 10\n\nAmazon S3 on Outposts User Guide\nHow is Amazon S3 on Outposts different from Amazon\nS3? Amazon S3 on Outposts delivers object storage to your on-premises AWS Outposts environment. Using S3 on Outposts helps you to meet local processing, data residency, and demanding\nperformance needs by keeping data close to on-premises applications. Because it uses Amazon\nS3 APIs and features, S3 on Outposts makes it easy to store, secure, tag, report on, and control\naccess to the data on your Outposts and extend AWS infrastructure to your on-premises facility for\na consistent hybrid experience. For more information about how S3 on Outposts is unique, see the following topics. Topics\n\u2022 S3 on Outposts specifications\n\u2022 API operations supported by S3 on Outposts\n\u2022 Amazon S3 features not supported by S3 on Outposts\n\u2022 S3 on Outposts network requirements\nS3 on Outposts specifications\n\u2022 The maximum Outposts bucket size is 50 TB.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 260,
        "chunk_type": "semantic_split",
        "coherence_score": 0.560491943359375,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specifications",
              "Procedural Steps"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS Outposts",
            "S3 on Outposts",
            "object storage",
            "data residency",
            "hybrid experience",
            "API operations",
            "bucket size",
            "network requirements",
            "capacity options"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2",
            "Amazon EBS",
            "S3 APIs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hybrid Cloud",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the differences between Amazon S3 and S3 on Outposts, including specifications, supported API operations, and ordering procedures for Outposts with S3 capacity.",
          "intents": [
            "Compare",
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How is Amazon S3 on Outposts different from Amazon S3?",
            "What are the specifications for S3 on Outposts?",
            "How do I order a new Outpost with S3 capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Amazon EBS",
          "data residency",
          "Amazon EC2",
          "capacity options",
          "network requirements",
          "object storage",
          "S3 APIs",
          "S3 on Outposts",
          "API operations",
          "bucket size",
          "hybrid experience",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_18",
      "text": "\u2022 The maximum number of Outposts buckets is 100 per AWS account. \u2022 Outposts buckets can be accessed only by using access points and endpoints. \u2022 The maximum number of access points per Outposts bucket is 10. \u2022 Access point policies are limited to 20 KB in size. \u2022 The Outpost owner can manage access within your organization in AWS Organizations by using\nAWS Resource Access Manager. All accounts that need access to the Outpost must be within the\nsame organization as the owner account in AWS Organizations. \u2022 The S3 on Outposts bucket owner account is always the owner of all objects in the bucket. \u2022 Only the S3 on Outposts bucket owner account can perform operations on the bucket. \u2022 Object size limitations are consistent with Amazon S3. \u2022 All objects stored on S3 on Outposts are stored in the OUTPOSTS storage class.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 145,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4623025258382161,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Limits",
              "Policies",
              "Ownership"
            ]
          },
          "keywords": [
            "Outposts buckets",
            "access points",
            "endpoints",
            "AWS Organizations",
            "AWS Resource Access Manager",
            "S3 on Outposts",
            "bucket owner",
            "object size",
            "OUTPOSTS storage class",
            "access point policies"
          ],
          "entities": [
            "AWS Organizations",
            "AWS Resource Access Manager",
            "S3 on Outposts",
            "OUTPOSTS storage class",
            "access points"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Data Governance"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS Organizations",
            "AWS Resource Access Manager"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the limitations and access management for S3 on Outposts buckets, including bucket ownership, access points, and object storage policies.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the limitations on the number of Outposts buckets per AWS account?",
            "How is access to Outposts buckets managed?",
            "What are the size limitations for access point policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "endpoints",
          "object size",
          "Outposts buckets",
          "AWS Resource Access Manager",
          "AWS Organizations",
          "OUTPOSTS storage class",
          "S3 on Outposts",
          "access point policies",
          "access points",
          "bucket owner"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_19",
      "text": "Specifications API Version 2006-03-01 11\n\nAmazon S3 on Outposts User Guide\n\u2022 By default, all objects stored in the OUTPOSTS storage class are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose to\nstore objects by using server-side encryption with customer-provided encryption keys (SSE-C). \u2022 If there is not enough space to store an object on your Outpost, the API returns an insufficient\ncapacity exception (ICE). API operations supported by S3 on Outposts\nFor a list of API operations supported by S3 on Outposts, see Amazon S3 on Outposts API\noperations. Amazon S3 features not supported by S3 on Outposts\nThe following Amazon S3 features are currently not supported by Amazon S3 on Outposts. Any\nattempts to use them are rejected. \u2022 Access control lists (ACLs)\n\u2022 Cross-origin resource sharing (CORS)\n\u2022 S3 Batch Operations\n\u2022 S3 Inventory reports\n\u2022 Changing the default bucket encryption\n\u2022 Public buckets\n\u2022 Multi-factor authentication (MFA) delete\n\u2022 S3 Lifecycle transitions (aside from object deletion and stopping incomplete multipart uploads)\n\u2022 S3 Object Lock legal hold\n\u2022 Object Lock retention\n\u2022 Server-side encryption with AWS Key Management Service (AWS KMS) keys (SSE-KMS)\n\u2022 S3 Replication Time Control (S3 RTC)\n\u2022 Amazon CloudWatch request metrics\n\u2022 Metrics configuration\n\u2022 Transfer Acceleration\n\u2022 S3 Event Notifications\n\u2022 Requester Pays buckets\nSupported API operations API Version 2006-03-01 12\n\nAmazon S3 on Outposts User Guide\n\u2022 S3 Select\n\u2022 AWS Lambda events\n\u2022 Server access logging\n\u2022 HTTP POST requests\n\u2022 SOAP\n\u2022 Website access\nS3 on Outposts network requirements\n\u2022 To route requests to an S3 on Outposts access point, you must create and configure an S3 on\nOutposts endpoint. The following limits apply to endpoints for S3 on Outposts:\n\u2022 Each virtual private cloud (VPC) on an Outpost can have one associated endpoint, and you can\nhave up to 100 endpoints per Outpost. \u2022 You can map multiple access points to the same endpoint. \u2022 You can add endpoints only to VPCs with CIDR blocks in the subspaces of the following CIDR\nranges:\n\u2022 10.0.0.0/8\n\u2022 172.16.0.0/12\n\u2022 192.168.0.0/16\n\u2022 You can create endpoints to an Outpost only from VPCs that have non-overlapping CIDR blocks.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 367,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3228402031792535,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specifications",
              "Limitations",
              "Supported Features"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "server-side encryption",
            "SSE-S3",
            "SSE-C",
            "insufficient capacity exception",
            "API operations",
            "CIDR blocks",
            "endpoints",
            "Outpost",
            "VPC"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SSE-S3",
            "SSE-C",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Key Management Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the features, limitations, and network requirements of Amazon S3 on Outposts, including supported API operations and encryption options.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What encryption methods are supported by Amazon S3 on Outposts?",
            "What are the limitations of Amazon S3 on Outposts?",
            "How can I configure endpoints for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "VPC",
          "endpoints",
          "Amazon S3 on Outposts",
          "insufficient capacity exception",
          "CIDR blocks",
          "AWS Key Management Service",
          "SSE-C",
          "SSE-S3",
          "Outpost",
          "API operations",
          "server-side encryption",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_20",
      "text": "\u2022 You can create an endpoint only from within its Outposts subnet. \u2022 The subnet that you use to create an endpoint must contain four IP addresses for S3 on Outposts\nto use. \u2022 If you specify the customer-owned IP address pool (CoIP pool), it must contain four IP addresses\nfor S3 on Outposts to use. \u2022 You can create only one endpoint per Outpost per VPC. Network restrictions API Version 2006-03-01 13\n\nAmazon S3 on Outposts User Guide\nGetting started with Amazon S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. With Amazon S3 on Outposts, you can use the Amazon S3 APIs and features, such as object\nstorage, access policies, encryption, and tagging, on AWS Outposts as you do on Amazon S3.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 254,
        "chunk_type": "semantic_split",
        "coherence_score": 0.569668197631836,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Explanation",
              "Configuration Guidelines"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "endpoint",
            "subnet",
            "VPC",
            "S3 buckets",
            "CoIP pool",
            "access point",
            "encryption",
            "tagging"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "VPC",
            "CoIP pool",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts to create S3 buckets for local data storage and processing, along with guidelines for endpoint creation and network requirements within a VPC.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements for creating an endpoint on S3 Outposts?",
            "How does Amazon S3 on Outposts handle data storage and redundancy?",
            "What tools can be used to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "VPC",
          "Amazon S3 on Outposts",
          "AWS Management Console",
          "tagging",
          "encryption",
          "CoIP pool",
          "access point",
          "endpoint",
          "Outposts",
          "subnet",
          "S3 buckets",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_21",
      "text": "For\ninformation about S3 on Outposts, see What is Amazon S3 on Outposts? Topics\n\u2022 Getting started by using the AWS Management Console\n\u2022 Getting started by using the AWS CLI and SDK for Java\nGetting started by using the AWS Management Console\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? To get started with S3 on Outposts by using the console, see the following topics. To get started by\nusing the AWS CLI or AWS SDK for Java, see Getting started by using the AWS CLI and SDK for Java. Topics\nUsing the S3 console API Version 2006-03-01 14\n\nAmazon S3 on Outposts User Guide\n\u2022 Create a bucket, an access point, and an endpoint\n\u2022 Next steps\nCreate a bucket, an access point, and an endpoint\nThe following procedure shows you how to create your first bucket in S3 on Outposts.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 10,
        "num_words": 281,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6392901102701823,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "buckets",
            "access point",
            "endpoint",
            "AWS CLI",
            "SDK for Java",
            "encryption",
            "tagging",
            "VPC"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to get started with Amazon S3 on Outposts, enabling users to create S3 buckets on AWS Outposts for local data access and processing, and provides procedural steps for setup using various tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on Amazon S3 on Outposts?",
            "What tools can I use to interact with S3 on Outposts?",
            "What features does S3 on Outposts support?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "VPC",
          "Amazon S3 on Outposts",
          "AWS Management Console",
          "tagging",
          "AWS CLI",
          "encryption",
          "access point",
          "endpoint",
          "buckets",
          "Outposts",
          "SDK for Java",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_22",
      "text": "When you\ncreate a bucket using the console, you also create an access point and an endpoint associated with\nthe bucket so that you can immediately begin storing objects in your bucket. 1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose Create Outposts bucket. 4. For Bucket name, enter a Domain Name System (DNS)-compliant name for your bucket. The bucket name must:\n\u2022 Be unique within the AWS account, the Outpost, and the AWS Region that the Outpost is\nhomed to. \u2022 Be 3\u201363 characters long.",
      "start_idx": 23664,
      "end_idx": 49545,
      "metadata": {
        "num_sentences": 11,
        "num_words": 105,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2781790299849077,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "bucket",
            "access point",
            "endpoint",
            "AWS Management Console",
            "Amazon S3",
            "Outposts buckets",
            "DNS-compliant name",
            "AWS Region",
            "Outpost",
            "objects"
          ],
          "entities": [
            "AWS Management Console",
            "Amazon S3",
            "Outposts buckets",
            "AWS Region",
            "Outpost"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an Outposts bucket in Amazon S3 using the AWS Management Console, including naming requirements and associated resources like access points and endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Outposts bucket in Amazon S3?",
            "What are the naming requirements for an Outposts bucket?",
            "What resources are automatically created when I create an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "AWS Management Console",
          "Outposts buckets",
          "DNS-compliant name",
          "access point",
          "objects",
          "endpoint",
          "bucket",
          "Outpost",
          "AWS Region",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_23",
      "text": "\u2022 Not contain uppercase characters. \u2022 Start with a lowercase letter or number. After you create the bucket, you can't change its name. For information about naming\nbuckets, see General purpose bucket naming rules in the Amazon S3 User Guide. Important\nAvoid including sensitive information such as account numbers in the bucket name. The bucket name is visible in the URLs that point to the objects in the bucket. 5. For Outpost, choose the Outpost where you want the bucket to reside. 6. Under Bucket Versioning, set the S3 Versioning state for your S3 on Outposts bucket to one of\nthe following options:\n\u2022 Disable (default) \u2013 The bucket remains unversioned. Create a bucket, an access point, and an endpoint API Version 2006-03-01 15\n\nAmazon S3 on Outposts User Guide\n\u2022 Enable \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID. For more information about S3 Versioning, see Managing S3 Versioning for your S3 on\nOutposts bucket. 7.",
      "start_idx": 49546,
      "end_idx": 50544,
      "metadata": {
        "num_sentences": 14,
        "num_words": 170,
        "breakpoint_idx": 227,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2642102293915801,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Guideline",
              "Warning"
            ]
          },
          "keywords": [
            "bucket",
            "Amazon S3",
            "Outposts",
            "S3 Versioning",
            "bucket name",
            "version ID",
            "access point",
            "endpoint",
            "naming rules",
            "URLs"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "S3 Versioning",
            "bucket",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides guidelines for naming and configuring S3 buckets on Outposts, including rules for bucket naming, versioning options, and security considerations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the rules for naming an S3 bucket?",
            "How do I enable versioning for an S3 bucket on Outposts?",
            "What security precautions should I take when naming an S3 bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "URLs",
          "API Version 2006-03-01",
          "naming rules",
          "version ID",
          "bucket name",
          "access point",
          "S3 Versioning",
          "endpoint",
          "bucket",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_24",
      "text": "(Optional) Add any optional tags that you would like to associate with the Outposts bucket. You can use tags to track criteria for individual projects or groups of projects, or to label your\nbuckets by using cost-allocation tags. By default, all objects stored in your Outposts bucket are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose\nto store objects by using server-side encryption with customer-provided encryption keys (SSE-\nC). To change the encryption type, you must use the REST API, AWS Command Line Interface\n(AWS CLI), or AWS SDKs. 8.",
      "start_idx": 50545,
      "end_idx": 51162,
      "metadata": {
        "num_sentences": 6,
        "num_words": 99,
        "breakpoint_idx": 233,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1799989700317383,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Encryption"
            ]
          },
          "keywords": [
            "Outposts bucket",
            "tags",
            "server-side encryption",
            "Amazon S3",
            "SSE-S3",
            "SSE-C",
            "REST API",
            "AWS CLI",
            "AWS SDKs",
            "cost-allocation"
          ],
          "entities": [
            "Outposts bucket",
            "Amazon S3",
            "SSE-S3",
            "SSE-C",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Encryption",
            "Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add optional tags to Outposts buckets and configure server-side encryption options using Amazon S3 managed keys or customer-provided keys. It also describes the tools required to change encryption settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Outposts bucket?",
            "What encryption options are available for Outposts buckets?",
            "Which tools can be used to change encryption settings for Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "tags",
          "REST API",
          "Outposts bucket",
          "AWS SDKs",
          "AWS CLI",
          "cost-allocation",
          "SSE-C",
          "SSE-S3",
          "server-side encryption",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_25",
      "text": "In the Outposts access point settings section, enter the access point name. S3 on Outposts access points simplify managing data access at scale for shared datasets in\nS3 on Outposts. Access points are named network endpoints that are attached to Outposts\nbuckets that you can use to perform S3 object operations. For more information, see Access\npoints. Access point names must be unique within the account for this Region and Outpost, and\ncomply with the access point restrictions and limitations. 9. Choose the VPC for this Amazon S3 on Outposts access point. If you don't have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide. A virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS. 10.",
      "start_idx": 51163,
      "end_idx": 52172,
      "metadata": {
        "num_sentences": 12,
        "num_words": 167,
        "breakpoint_idx": 245,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.296214248194839,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Outposts",
            "access point",
            "S3",
            "VPC",
            "AWS",
            "virtual private cloud",
            "network endpoints",
            "data access",
            "scalable infrastructure",
            "buckets"
          ],
          "entities": [
            "S3 on Outposts",
            "Amazon S3",
            "VPC",
            "AWS infrastructure",
            "Outposts buckets"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Infrastructure"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "Amazon S3",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure an access point for S3 on Outposts, including naming requirements, VPC selection, and access point restrictions. It also provides guidance on creating a VPC if one does not already exist.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an access point for S3 on Outposts?",
            "What are the naming restrictions for S3 on Outposts access points?",
            "How can I create a VPC for an S3 on Outposts access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "VPC",
          "AWS infrastructure",
          "Outposts buckets",
          "buckets",
          "data access",
          "network endpoints",
          "access point",
          "S3 on Outposts",
          "S3",
          "Outposts",
          "Amazon S3",
          "scalable infrastructure",
          "AWS",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_26",
      "text": "(Optional for an existing VPC) Choose an Endpoint subnet for your endpoint. A subnet is a range of IP addresses in your VPC. If you don't have the subnet that you want,\nchoose Create subnet. For more information, see Networking for S3 on Outposts. 11. (Optional for an existing VPC) Choose an Endpoint security group for your endpoint. Create a bucket, an access point, and an endpoint API Version 2006-03-01 16\n\nAmazon S3 on Outposts User Guide\nA security group acts as a virtual firewall to control inbound and outbound traffic. 12.",
      "start_idx": 52173,
      "end_idx": 52707,
      "metadata": {
        "num_sentences": 8,
        "num_words": 92,
        "breakpoint_idx": 253,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.27181577682495117,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "VPC",
            "Subnet",
            "Endpoint",
            "Security Group",
            "S3 on Outposts",
            "Bucket",
            "Access Point",
            "Endpoint API",
            "Firewall",
            "Networking"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Endpoint API Version 2006-03-01",
            "VPC",
            "Subnet",
            "Security Group"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure an endpoint for Amazon S3 on Outposts, including selecting a subnet and security group, and optionally creating a bucket, access point, or subnet.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an endpoint for Amazon S3 on Outposts?",
            "What is the role of a security group in an endpoint setup?",
            "How can I create a new subnet for my VPC?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "Endpoint API",
          "Endpoint API Version 2006-03-01",
          "VPC",
          "Amazon S3 on Outposts",
          "Access Point",
          "Subnet",
          "Endpoint",
          "Firewall",
          "S3 on Outposts",
          "Networking",
          "Security Group",
          "Bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_27",
      "text": "(Optional for an existing VPC) Choose the Endpoint access type:\n\u2022 Private \u2013 To be used with the VPC. \u2022 Customer owned IP \u2013 To be used with a customer-owned IP address pool (CoIP pool) from\nwithin your on-premises network. 13.",
      "start_idx": 52708,
      "end_idx": 52933,
      "metadata": {
        "num_sentences": 3,
        "num_words": 41,
        "breakpoint_idx": 256,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.10730310281117757,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration"
            ]
          },
          "keywords": [
            "VPC",
            "Endpoint access type",
            "Private",
            "Customer owned IP",
            "CoIP pool",
            "on-premises network"
          ],
          "entities": [
            "VPC",
            "Endpoint access type",
            "Customer owned IP"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking",
          "secondary_categories": [
            "Cloud Infrastructure",
            "Access Management"
          ],
          "mentioned_services": [
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to choose the Endpoint access type for an existing VPC, with options for Private or Customer owned IP configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the endpoint access type options for a VPC?",
            "How do I configure a Customer owned IP for my on-premises network?",
            "What is the difference between Private and Customer owned IP access types?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking]",
        "tf_idf_keywords": [
          "VPC",
          "on-premises network",
          "Private",
          "CoIP pool",
          "Endpoint access type",
          "Customer owned IP"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_28",
      "text": "(Optional) Specify the Outpost access point policy. The console automatically displays the\nAmazon Resource Name (ARN) for the access point, which you can use in the policy. 14.",
      "start_idx": 52934,
      "end_idx": 53110,
      "metadata": {
        "num_sentences": 3,
        "num_words": 28,
        "breakpoint_idx": 259,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.19482914606730142,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy"
            ]
          },
          "keywords": [
            "Outpost",
            "access point",
            "policy",
            "Amazon Resource Name",
            "ARN",
            "console",
            "specify",
            "automatically",
            "displays"
          ],
          "entities": [
            "Outpost",
            "Amazon Resource Name",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Access Management",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This section describes how to specify an Outpost access point policy, with the ARN automatically displayed in the console for use in the policy configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I specify an Outpost access point policy?",
            "What is the ARN used for in an Outpost access point policy?",
            "Where can I find the ARN for an Outpost access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "automatically",
          "ARN",
          "specify",
          "console",
          "policy",
          "Amazon Resource Name",
          "access point",
          "Outpost",
          "displays",
          "Amazon Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_29",
      "text": "Choose Create Outposts bucket. Note\nIt can take up to 5 minutes for your Outpost endpoint to be created and your bucket to\nbe ready to use. To configure additional bucket settings, choose View details. Next steps\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. After you create an S3 on Outposts bucket, access point, and endpoint, you can use the AWS CLI or\nSDK for Java to upload an object to your bucket. For more information, see Upload an object to an\nS3 on Outposts bucket. Getting started by using the AWS CLI and SDK for Java\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts.",
      "start_idx": 53111,
      "end_idx": 58827,
      "metadata": {
        "num_sentences": 12,
        "num_words": 250,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49026911186449457,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Outpost bucket",
            "data residency",
            "AWS CLI",
            "AWS SDK",
            "REST API",
            "Outpost endpoint",
            "S3 Outposts storage class",
            "local data access",
            "object management"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and manage Amazon S3 buckets on AWS Outposts, highlighting the data residency and local storage capabilities. It provides guidance on using AWS CLI, SDKs, and REST API for bucket and object management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What tools can I use to manage objects in an Outposts bucket?",
            "What are the data residency requirements for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Amazon S3 on Outposts",
          "data residency",
          "AWS SDK",
          "S3 Outposts storage class",
          "REST API",
          "Outpost endpoint",
          "Outpost bucket",
          "S3 Outposts",
          "object management",
          "local data access",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_30",
      "text": "You communicate with\nNext steps API Version 2006-03-01 17\n\nAmazon S3 on Outposts User Guide\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? To get started with S3 on Outposts, you must create a bucket, an access point, and an endpoint. Then, you can upload objects to your bucket. The following examples show you how to get started\nwith S3 on Outposts by using the AWS CLI and SDK for Java. To get started by using the console,\nsee Getting started by using the AWS Management Console. Topics\n\u2022 Step 1: Create a bucket\n\u2022 Step 2: Create an access point\n\u2022 Step 3: Create an endpoint\n\u2022 Step 4: Upload an object to an S3 on Outposts bucket\nStep 1: Create a bucket\nThe following AWS CLI and SDK for Java examples show you how to create an S3 on Outposts\nbucket. AWS CLI\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your\nown information. aws s3control create-bucket --bucket example-outposts-bucket --outpost-\nid op-01ac5d28a6a232904\nSDK for Java\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the SDK for Java.",
      "start_idx": 53111,
      "end_idx": 58827,
      "metadata": {
        "num_sentences": 12,
        "num_words": 267,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5494092305501302,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "endpoint",
            "AWS CLI",
            "SDK for Java",
            "encryption",
            "tagging",
            "virtual private cloud"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "APIs",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts",
            "AWS VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interact with Amazon S3 on Outposts using access points and endpoints within a VPC. It provides step-by-step instructions for creating a bucket, access point, and endpoint, as well as uploading objects using AWS CLI and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts bucket?",
            "What tools can I use to interact with Amazon S3 on Outposts?",
            "What are the steps to upload an object to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "AWS Management Console",
          "REST API",
          "tagging",
          "AWS CLI",
          "encryption",
          "access point",
          "AWS VPC",
          "endpoint",
          "bucket",
          "Outposts",
          "SDK for Java",
          "Amazon S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_31",
      "text": "Step 1: Create a bucket API Version 2006-03-01 18\n\nAmazon S3 on Outposts User Guide\nimport com.amazonaws.services.s3control.model. *;\npublic String createBucket(String bucketName) {\nCreateBucketRequest reqCreateBucket = new CreateBucketRequest()\n.withBucket(bucketName)\n.withOutpostId(OutpostId)\n.withCreateBucketConfiguration(new CreateBucketConfiguration());\nCreateBucketResult respCreateBucket =\ns3ControlClient.createBucket(reqCreateBucket);\nSystem.out.printf(\"CreateBucket Response: %s%n\", respCreateBucket.toString());\nreturn respCreateBucket.getBucketArn();\n}\nStep 2: Create an access point\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point. These examples how you how to create an access point by using the AWS CLI and the SDK for Java. Access points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. AWS CLI\nExample\nThe following AWS CLI example creates an access point for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information. aws s3control create-access-point --account-id 123456789012\n--name example-outposts-access-point --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\" --vpc-configuration VpcId=example-vpc-12345\nStep 2: Create an access point API Version 2006-03-01 19\n\nAmazon S3 on Outposts User Guide\nSDK for Java\nExample\nThe following SDK for Java example creates an access point for an Outposts bucket. To use this\nexample, replace the user input placeholders with your own information. import com.amazonaws.services.s3control.model. *;\npublic String createAccessPoint(String bucketArn, String accessPointName) {\nCreateAccessPointRequest reqCreateAP = new CreateAccessPointRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withName(accessPointName)\n.withVpcConfiguration(new VpcConfiguration().withVpcId(\"vpc-12345\"));\nCreateAccessPointResult respCreateAP =\ns3ControlClient.createAccessPoint(reqCreateAP);\nSystem.out.printf(\"CreateAccessPoint Response: %s%n\", respCreateAP.toString());\nreturn respCreateAP.getAccessPointArn();\n}\nStep 3: Create an endpoint\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region.",
      "start_idx": 53111,
      "end_idx": 58827,
      "metadata": {
        "num_sentences": 14,
        "num_words": 315,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37977801312457077,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access point",
            "bucket",
            "SDK for Java",
            "AWS CLI",
            "CreateBucketRequest",
            "CreateAccessPointRequest",
            "VpcConfiguration",
            "endpoint",
            "Outposts bucket"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "Outposts bucket",
            "VpcConfiguration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "SDK for Java"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a bucket, access point, and endpoint for Amazon S3 on Outposts using AWS CLI and SDK for Java, including code examples and configuration details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in Amazon S3 on Outposts?",
            "What are the steps to configure an access point for an Outposts bucket?",
            "How can I create an endpoint for S3 on Outposts using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "VpcConfiguration",
          "Outposts bucket",
          "CreateAccessPointRequest",
          "access point",
          "CreateBucketRequest",
          "bucket",
          "endpoint",
          "Amazon S3",
          "SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_32",
      "text": "Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints. These examples show you how to create an endpoint by using the AWS CLI and the SDK for\nJava. For more information about the permissions required to create and manage endpoints, see\nPermissions for S3 on Outposts endpoints. Step 3: Create an endpoint API Version 2006-03-01 20\n\nAmazon S3 on Outposts User Guide\nAWS CLI\nExample\nThe following AWS CLI example creates an endpoint for an Outpost by using the VPC resource\naccess type. The VPC is derived from the subnet. To run this command, replace the user input\nplaceholders with your own information. aws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1\nThe following AWS CLI example creates an endpoint for an Outpost by using the customer-\nowned IP address pool (CoIP pool) access type. To run this command, replace the user input\nplaceholders with your own information. aws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1 --access-type CustomerOwnedIp --\ncustomer-owned-ipv4-pool ipv4pool-coip-12345678901234567\nSDK for Java\nExample\nThe following SDK for Java example creates an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information. import com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointRequest;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointResult;\npublic void createEndpoint() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nCreateEndpointRequest createEndpointRequest = new CreateEndpointRequest()\n.withOutpostId(\"op-0d79779cef3c30a40\")\n.withSubnetId(\"subnet-8c7a57c5\")\n.withSecurityGroupId(\"sg-ab19e0d1\")\n.withAccessType(\"CustomerOwnedIp\")\n.withCustomerOwnedIpv4Pool(\"ipv4pool-coip-12345678901234567\");\nStep 3: Create an endpoint API Version 2006-03-01 21\n\nAmazon S3 on Outposts User Guide\n// Use .withAccessType and .withCustomerOwnedIpv4Pool only when the access type\nis\n// customer-owned IP address pool (CoIP pool)\nCreateEndpointResult createEndpointResult =\ns3OutpostsClient.createEndpoint(createEndpointRequest);\nSystem.out.println(\"Endpoint is created and its ARN is \" +\ncreateEndpointResult.getEndpointArn());\n}\nStep 4: Upload an object to an S3 on Outposts bucket\nTo upload an object, see Upload an object to an S3 on Outposts bucket. Step 4: Upload an object to an S3 on Outposts bucket API Version 2006-03-01 22\n\nAmazon S3 on Outposts User Guide\nNetworking for S3 on Outposts\nYou can use Amazon S3 on Outposts to store and retrieve objects on-premises for applications\nthat require local data access, data processing, and data residency.",
      "start_idx": 58828,
      "end_idx": 61933,
      "metadata": {
        "num_sentences": 15,
        "num_words": 380,
        "breakpoint_idx": 312,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32924107142857145,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "VPC",
            "Outposts",
            "endpoint",
            "AWS CLI",
            "SDK for Java",
            "CoIP pool",
            "permissions",
            "S3",
            "subnet",
            "security group"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "SDK for Java",
            "CoIP pool",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Services",
          "secondary_categories": [
            "Networking",
            "Storage"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an endpoint for Amazon S3 on Outposts using AWS CLI and SDK for Java, including examples and required permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for Amazon S3 on Outposts using AWS CLI?",
            "What are the required permissions for creating S3 on Outposts endpoints?",
            "How can I use SDK for Java to create an endpoint for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Services]",
        "tf_idf_keywords": [
          "VPC",
          "security group",
          "Amazon S3 on Outposts",
          "CoIP pool",
          "endpoint",
          "S3",
          "Outposts",
          "subnet",
          "SDK for Java",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_33",
      "text": "This section describes the\nnetworking requirements for accessing S3 on Outposts. Topics\n\u2022 Choosing your networking access type\n\u2022 Accessing your S3 on Outposts buckets and objects\n\u2022 Cross-account elastic network interfaces\nChoosing your networking access type\nYou can access S3 on Outposts from within a VPC or from your on-premises network. You\ncommunicate with your Outpost bucket by using an access point and endpoint connection. This\nconnection keeps traffic between your VPC and your S3 on Outposts buckets within the AWS\nnetwork. When you create an endpoint, you must specify the endpoint access type as either\nPrivate (for VPC routing) or CustomerOwnedIp (for a customer-owned IP address pool [CoIP\npool]). \u2022 Private (for VPC routing) \u2013 If you don't specify the access type, S3 on Outposts uses Private\nby default. With the Private access type, instances in your VPC don't require public IP addresses\nto communicate with resources in your Outpost. You can work with S3 on Outposts from within\na VPC. This type of endpoint is accessible from your on-premises network through direct VPC\nrouting. For more information, see Local gateway route tables in the AWS Outposts User Guide. \u2022 CustomerOwnedIp (for CoIP pool) \u2013 If you don't default to the Private access type and choose\nCustomerOwnedIp, you must specify an IP address range.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.485489931973544,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Networking",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC",
            "endpoint access type",
            "Private access type",
            "CustomerOwnedIp",
            "CoIP pool",
            "AWS network",
            "on-premises network",
            "local gateway route tables",
            "elastic network interfaces"
          ],
          "entities": [
            "S3 on Outposts",
            "VPC",
            "AWS network",
            "CoIP pool",
            "local gateway route tables"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking Configuration",
          "secondary_categories": [
            "AWS Services",
            "Cloud Infrastructure"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section outlines the networking requirements for accessing S3 on Outposts, including endpoint access types and their configurations for VPC and on-premises networks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the access types for S3 on Outposts endpoints?",
            "How can I configure a Private access type endpoint?",
            "What is the role of CustomerOwnedIp in networking for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Networking Configuration]",
        "tf_idf_keywords": [
          "VPC",
          "on-premises network",
          "CustomerOwnedIp",
          "Private access type",
          "CoIP pool",
          "endpoint access type",
          "S3 on Outposts",
          "AWS network",
          "elastic network interfaces",
          "local gateway route tables"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_34",
      "text": "You can use this access type to work\nwith S3 on Outposts from both your on-premises network and within a VPC. When accessing S3\non Outposts within a VPC, your traffic is limited to the bandwidth of the local gateway. Accessing your S3 on Outposts buckets and objects\nTo access your S3 on Outposts buckets and objects, you must have the following:\n\u2022 An access point for the VPC. Choosing your networking access type API Version 2006-03-01 23\n\nAmazon S3 on Outposts User Guide\n\u2022 An endpoint for the same VPC. \u2022 An active connection between your Outpost and your AWS Region. For more information about\nhow to connect your Outpost to a Region, see Outpost connectivity to AWS Regions in the AWS\nOutposts User Guide. For more information about accessing buckets and objects in S3 on Outposts, see Working with S3\non Outposts buckets and Working with S3 on Outposts objects. Cross-account elastic network interfaces\nS3 on Outposts endpoints are named resources with Amazon Resource Names (ARNs). When these\nendpoints are created, AWS Outposts sets up multiple cross-account elastic network interfaces. S3\non Outposts cross-account elastic network interfaces are like other network interfaces with one\nexception: S3 on Outposts associates the cross-account elastic network interfaces to Amazon EC2\ninstances. The S3 on Outposts Domain Name System (DNS) load balances your requests over the cross-\naccount elastic network interface.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 11,
        "num_words": 229,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5647461631081321,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Networking",
              "Access Configuration",
              "Resource Management"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC",
            "local gateway",
            "access point",
            "endpoint",
            "AWS Region",
            "elastic network interfaces",
            "DNS load balancing",
            "Outpost connectivity",
            "ARNs"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "Amazon EC2",
            "Outpost connectivity",
            "DNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS Infrastructure"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to access Amazon S3 on Outposts buckets and objects via a VPC or on-premises network, detailing required components like access points, endpoints, and cross-account elastic network interfaces.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements to access S3 on Outposts?",
            "How does S3 on Outposts handle cross-account elastic network interfaces?",
            "What is the role of DNS in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "VPC",
          "Amazon S3 on Outposts",
          "Amazon EC2",
          "DNS",
          "DNS load balancing",
          "Outpost connectivity",
          "access point",
          "local gateway",
          "S3 on Outposts",
          "elastic network interfaces",
          "endpoint",
          "ARNs",
          "AWS Region",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_35",
      "text": "S3 on Outposts creates the cross-account elastic network\ninterface in your AWS account that is visible from the Network interfaces pane of the Amazon EC2\nconsole. For endpoints that use the CoIP pool access type, S3 on Outposts allocates and associates IP\naddresses with the cross-account elastic network interface from the configured CoIP pool. Managing connections using cross-account elastic network interfaces API Version 2006-03-01 24\n\nAmazon S3 on Outposts User Guide\nWorking with S3 on Outposts buckets\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You can use the same APIs\nand features on Outpost buckets as you do on Amazon S3, including access policies, encryption,\nand tagging. For more information, see What is Amazon S3 on Outposts? You communicate with your Outpost buckets by using an access point and endpoint connection\nover a virtual private cloud (VPC). To access your S3 on Outposts buckets and objects, you must\nhave an access point for the VPC and an endpoint for the same VPC. For more information, see\nNetworking for S3 on Outposts. Buckets\nIn S3 on Outposts, bucket names are unique to an Outpost and require the AWS Region code for\nthe Region the Outpost is homed to, AWS account ID, Outpost ID, and the bucket name to identify\nthem. arn:aws:s3-outposts:region:account-id:outpost/outpost-id/bucket/bucket-name\nFor more information, see Resource ARNs for S3 on Outposts.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 11,
        "num_words": 283,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6467946832830256,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "elastic network interface",
            "CoIP pool",
            "access point",
            "endpoint",
            "VPC",
            "bucket",
            "AWS Region",
            "ARN",
            "data residency"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "CoIP pool",
            "VPC",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 on Outposts enables storage and retrieval of data on premises using buckets, access points, and endpoints within a VPC. It also details the use of elastic network interfaces and ARNs for resource identification in S3 on Outposts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create and access S3 buckets on AWS Outposts?",
            "What is the role of elastic network interfaces in S3 on Outposts?",
            "How are ARNs structured for S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "elastic network interface",
          "VPC",
          "AWS Outposts",
          "ARN",
          "data residency",
          "CoIP pool",
          "access point",
          "S3 on Outposts",
          "endpoint",
          "bucket",
          "AWS Region",
          "EC2",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_36",
      "text": "Access points\nAmazon S3 on Outposts supports virtual private cloud (VPC)-only access points as the only means\nto access your Outposts buckets. Access points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. Buckets API Version 2006-03-01 25\n\nAmazon S3 on Outposts User Guide\nThe following example shows the ARN format that you use for S3 on Outposts access points. The\naccess point ARN includes the AWS Region code for the Region the Outpost is homed to, AWS\naccount ID, Outpost ID, and access point name. arn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nEndpoints\nTo route requests to an S3 on Outposts access point, you must create and configure an S3 on\nOutposts endpoint. With S3 on Outposts endpoints, you can privately connect your VPC to your\nOutpost bucket. S3 on Outposts endpoints are virtual uniform resource identifiers (URIs) of the\nentry point to your S3 on Outposts bucket. They are horizontally scaled, redundant, and highly\navailable VPC components.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 11,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4919543873180043,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access points",
            "Outposts buckets",
            "VPC-only access",
            "ARN format",
            "virtual-host-style addressing",
            "S3 object operations",
            "S3 on Outposts endpoints",
            "AWS Region code",
            "Outpost ID"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "AWS Region code",
            "ARN",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "VPC"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts uses VPC-only access points to manage access to Outposts buckets, requiring endpoints for private connectivity and supporting virtual-host-style addressing. Access point ARNs include details such as AWS Region, account ID, Outpost ID, and access point name.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How do I configure S3 on Outposts endpoints?",
            "What are the access requirements for Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Region code",
          "VPC",
          "Amazon S3 on Outposts",
          "Outposts buckets",
          "VPC-only access",
          "ARN",
          "ARN format",
          "virtual-host-style addressing",
          "S3 on Outposts endpoints",
          "S3 object operations",
          "S3 on Outposts",
          "access points",
          "Amazon S3",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_37",
      "text": "Each virtual private cloud (VPC) on your Outpost can have one associated endpoint, and you can\nhave up to 100 endpoints per Outpost. You must create these endpoints to be able to access your\nOutpost buckets and perform object operations. Creating these endpoints also enables the API\nmodel and behaviors to be the same by allowing the same operations to work in S3 and S3 on\nOutposts. API operations on S3 on Outposts\nTo manage Outpost bucket API operations, S3 on Outposts hosts a separate endpoint that is\ndistinct from the Amazon S3 endpoint. This endpoint is s3-outposts.region.amazonaws.com. To use Amazon S3 API operations, you must sign the bucket and objects using the correct ARN\nformat. You must pass ARNs to API operations so that Amazon S3 can determine whether the\nrequest is for Amazon S3 (s3-control.region.amazonaws.com) or for S3 on Outposts (s3-\noutposts.region.amazonaws.com). Based on the ARN format, S3 can then sign and route the\nrequest appropriately. Whenever a request is sent to the Amazon S3 control plane, the SDK extracts the components from\nthe ARN and includes the additional header x-amz-outpost-id, with the outpost-id value\nextracted from the ARN. The service name from the ARN is used to sign the request before it is\nrouted to the S3 on Outposts endpoint. This behavior applies to all API operations handled by the\ns3control client.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 11,
        "num_words": 225,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4863499034534801,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "VPC",
            "Outpost",
            "endpoint",
            "S3",
            "API operations",
            "ARN format",
            "x-amz-outpost-id",
            "SDK",
            "bucket",
            "request routing"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "s3-outposts.region.amazonaws.com",
            "s3-control.region.amazonaws.com",
            "x-amz-outpost-id"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Cloud Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The documentation explains the use of endpoints for S3 on Outposts, detailing API operations, ARN formats, and request routing for accessing Outpost buckets and objects.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I create endpoints for S3 on Outposts?",
            "What is the correct ARN format for S3 on Outposts API operations?",
            "How does request routing work for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket",
          "VPC",
          "request routing",
          "SDK",
          "s3-control.region.amazonaws.com",
          "ARN format",
          "x-amz-outpost-id",
          "s3-outposts.region.amazonaws.com",
          "S3 on Outposts",
          "endpoint",
          "Outpost",
          "S3",
          "API operations",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_38",
      "text": "Endpoints API Version 2006-03-01 26\n\nAmazon S3 on Outposts User Guide\nThe following table lists the extended API operations for Amazon S3 on Outposts and their\nchanges relative to Amazon S3. API S3 on Outposts parameter value\nCreateBucket Bucket name as ARN, Outpost ID\nListRegionalBuckets Outpost ID\nDeleteBucket Bucket name as ARN\nDeleteBucketLifecy Bucket name as ARN\ncleConfiguration\nGetBucketLifecycle Bucket name as ARN\nConfiguration\nPutBucketLifecycle Bucket name as ARN\nConfiguration\nGetBucketPolicy Bucket name as ARN\nPutBucketPolicy Bucket name as ARN\nDeleteBucketPolicy Bucket name as ARN\nGetBucketTagging Bucket name as ARN\nPutBucketTagging Bucket name as ARN\nDeleteBucketTagging Bucket name as ARN\nCreateAccessPoint Access point name as ARN\nDeleteAccessPoint Access point name as ARN\nGetAccessPoint Access point name as ARN\nGetAccessPoint Access point name as ARN\nListAccessPoints Access point name as ARN\nAPI operations on S3 on Outposts API Version 2006-03-01 27\n\nAmazon S3 on Outposts User Guide\nAPI S3 on Outposts parameter value\nPutAccessPointPolicy Access point name as ARN\nGetAccessPointPolicy Access point name as ARN\nDeleteAccessPointPolicy Access point name as ARN\nCreating and managing S3 on Outposts buckets\nFor more information about creating and managing S3 on Outposts buckets, see the following\ntopics. Creating an S3 on Outposts bucket\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? Note\nThe AWS account that creates the bucket owns it and is the only one that can commit\nactions to it. Buckets have configuration properties, such as Outpost, tag, default\nencryption, and access point settings. The access point settings include the virtual private\ncloud (VPC), the access point policy for accessing the objects in the bucket, and other\nmetadata.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 11,
        "num_words": 403,
        "chunk_type": "semantic_split",
        "coherence_score": 0.554628545587713,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "User Guide"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "API operations",
            "Outpost ID",
            "Bucket name as ARN",
            "Access point",
            "Virtual private cloud (VPC)",
            "Access point policy",
            "Encryption",
            "Tagging",
            "Storage class"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts (OUTPOSTS)",
            "AWS Management Console",
            "AWS Command Line Interface (AWS CLI)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference information on the extended API operations for Amazon S3 on Outposts, detailing parameter values and usage for creating and managing S3 buckets on AWS Outposts. It also explains the features and configuration properties of S3 on Outposts buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the API operations available for Amazon S3 on Outposts?",
            "How can I create and manage an S3 bucket on AWS Outposts?",
            "What configuration properties are available for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Encryption",
          "Bucket name as ARN",
          "Access point",
          "Amazon S3 on Outposts",
          "Storage class",
          "AWS Outposts",
          "AWS Management Console",
          "S3 Outposts (OUTPOSTS)",
          "AWS Command Line Interface (AWS CLI)",
          "S3 Outposts",
          "Access point policy",
          "Virtual private cloud (VPC)",
          "API operations",
          "Amazon S3",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_39",
      "text": "For more information, see S3 on Outposts specifications. If you want to create a bucket that uses AWS PrivateLink to provide bucket and endpoint\nmanagement access through interface VPC endpoints in your virtual private cloud (VPC), see\nAWS PrivateLink for S3 on Outposts. Creating and managing S3 on Outposts buckets API Version 2006-03-01 28\n\nAmazon S3 on Outposts User Guide\nThe following examples show you how to create an S3 on Outposts bucket by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Using the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose Create Outposts bucket. 4. For Bucket name, enter a Domain Name System (DNS)-compliant name for your bucket. The bucket name must:\n\u2022 Be unique within the AWS account, the Outpost, and the AWS Region that the Outpost is\nhomed to. \u2022 Be 3\u201363 characters long.",
      "start_idx": 61934,
      "end_idx": 72789,
      "metadata": {
        "num_sentences": 13,
        "num_words": 167,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2834345010610727,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "AWS PrivateLink",
            "VPC endpoints",
            "Outposts bucket",
            "DNS-compliant name",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "API Version 2006-03-01",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3",
            "AWS PrivateLink",
            "Outposts bucket",
            "VPC endpoints",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "API Management"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS PrivateLink",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides steps to create and manage S3 on Outposts buckets using AWS tools like the Management Console, CLI, and SDK for Java, along with specifications for bucket naming and endpoint configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts bucket?",
            "What are the naming requirements for an Outposts bucket?",
            "How can I configure AWS PrivateLink for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "VPC endpoints",
          "API Version 2006-03-01",
          "AWS Management Console",
          "AWS PrivateLink",
          "DNS-compliant name",
          "Outposts bucket",
          "S3 on Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_40",
      "text": "\u2022 Not contain uppercase characters. \u2022 Start with a lowercase letter or number. After you create the bucket, you can't change its name. For information about naming\nbuckets, see General purpose bucket naming rules in the Amazon S3 User Guide. Important\nAvoid including sensitive information such as account numbers in the bucket name. The bucket name is visible in the URLs that point to the objects in the bucket. 5. For Outpost, choose the Outpost where you want the bucket to reside. 6. Under Bucket Versioning, set the S3 Versioning state for your S3 on Outposts bucket to one of\nthe following options:\n\u2022 Disable (default) \u2013 The bucket remains unversioned.",
      "start_idx": 72790,
      "end_idx": 74374,
      "metadata": {
        "num_sentences": 10,
        "num_words": 111,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25780775282118057,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "bucket name",
            "Amazon S3",
            "Outpost",
            "S3 Versioning",
            "URLs",
            "objects",
            "account numbers",
            "unversioned",
            "naming rules",
            "default"
          ],
          "entities": [
            "Amazon S3",
            "Outpost",
            "S3 Versioning"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains bucket naming conventions, warnings about sensitive information, and S3 Versioning options for Amazon S3 buckets on Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the rules for naming an Amazon S3 bucket?",
            "How can I set S3 Versioning for a bucket on Outposts?",
            "Why should sensitive information be avoided in bucket names?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "URLs",
          "naming rules",
          "default",
          "bucket name",
          "objects",
          "S3 Versioning",
          "Outpost",
          "Outposts",
          "unversioned",
          "account numbers",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_41",
      "text": "\u2022 Enable \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID. For more information about S3 Versioning, see Managing S3 Versioning for your S3 on\nOutposts bucket. Creating a bucket API Version 2006-03-01 29\n\nAmazon S3 on Outposts User Guide\n7. (Optional) Add any optional tags that you would like to associate with the Outposts bucket. You can use tags to track criteria for individual projects or groups of projects, or to label your\nbuckets by using cost-allocation tags. By default, all objects stored in your Outposts bucket are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose\nto store objects by using server-side encryption with customer-provided encryption keys (SSE-\nC). To change the encryption type, you must use the REST API, AWS Command Line Interface\n(AWS CLI), or AWS SDKs. 8.",
      "start_idx": 72790,
      "end_idx": 74374,
      "metadata": {
        "num_sentences": 10,
        "num_words": 152,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2865447574191623,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Encryption"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts bucket",
            "server-side encryption",
            "SSE-S3",
            "SSE-C",
            "encryption keys",
            "REST API",
            "AWS CLI",
            "AWS SDKs",
            "tags"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "S3 Versioning",
            "SSE-S3",
            "SSE-C"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Encryption",
            "Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "REST API",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This section explains how to enable S3 Versioning for an Outposts bucket, add optional tags, and configure server-side encryption options using various tools like REST API or AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning for an Outposts bucket?",
            "What encryption options are available for objects in an Outposts bucket?",
            "How can I add tags to an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "tags",
          "REST API",
          "Outposts bucket",
          "AWS SDKs",
          "SSE-C",
          "SSE-S3",
          "S3 Versioning",
          "encryption keys",
          "server-side encryption",
          "Outposts",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_42",
      "text": "In the Outposts access point settings section, enter the access point name. S3 on Outposts access points simplify managing data access at scale for shared datasets in\nS3 on Outposts. Access points are named network endpoints that are attached to Outposts\nbuckets that you can use to perform S3 object operations. For more information, see Access\npoints. Access point names must be unique within the account for this Region and Outpost, and\ncomply with the access point restrictions and limitations. 9. Choose the VPC for this Amazon S3 on Outposts access point. If you don't have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide. A virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS. 10.",
      "start_idx": 74375,
      "end_idx": 75384,
      "metadata": {
        "num_sentences": 12,
        "num_words": 167,
        "breakpoint_idx": 423,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.296214248194839,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Outposts access point",
            "S3 on Outposts",
            "access points",
            "Outposts buckets",
            "VPC",
            "virtual private cloud",
            "AWS resources",
            "network endpoints",
            "Amazon S3",
            "scalable infrastructure"
          ],
          "entities": [
            "Outposts access point",
            "S3 on Outposts",
            "VPC",
            "Amazon S3",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "AWS Infrastructure"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to configure an Amazon S3 on Outposts access point, including naming requirements, VPC selection, and the benefits of using AWS's scalable infrastructure for virtual networking.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an S3 on Outposts access point?",
            "What are the naming restrictions for Outposts access points?",
            "How do I create a VPC for an S3 on Outposts access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "VPC",
          "Outposts buckets",
          "Outposts access point",
          "network endpoints",
          "AWS",
          "AWS resources",
          "S3 on Outposts",
          "access points",
          "Amazon S3",
          "scalable infrastructure",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_43",
      "text": "(Optional for an existing VPC) Choose an Endpoint subnet for your endpoint. A subnet is a range of IP addresses in your VPC. If you don't have the subnet that you want,\nchoose Create subnet. For more information, see Networking for S3 on Outposts. 11. (Optional for an existing VPC) Choose an Endpoint security group for your endpoint. A security group acts as a virtual firewall to control inbound and outbound traffic. 12. (Optional for an existing VPC) Choose the Endpoint access type:\n\u2022 Private \u2013 To be used with the VPC. \u2022 Customer owned IP \u2013 To be used with a customer-owned IP address pool (CoIP pool) from\nwithin your on-premises network. Creating a bucket API Version 2006-03-01 30\n\nAmazon S3 on Outposts User Guide\n13. (Optional) Specify the Outpost access point policy. The console automatically displays the\nAmazon Resource Name (ARN) for the access point, which you can use in the policy. 14.",
      "start_idx": 75385,
      "end_idx": 76290,
      "metadata": {
        "num_sentences": 14,
        "num_words": 155,
        "breakpoint_idx": 437,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.22334991706596627,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "VPC",
            "Endpoint subnet",
            "Endpoint security group",
            "IP address",
            "Outposts",
            "S3",
            "Access point policy",
            "Amazon Resource Name (ARN)",
            "CoIP pool",
            "Firewall"
          ],
          "entities": [
            "VPC",
            "Amazon S3",
            "Outposts",
            "ARN",
            "CoIP pool"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure an endpoint for an existing VPC, including choosing a subnet, security group, and access type, and optionally specifying an Outpost access point policy.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an endpoint subnet for my VPC?",
            "What is the purpose of an endpoint security group?",
            "What are the endpoint access type options for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC",
          "ARN",
          "IP address",
          "Amazon Resource Name (ARN)",
          "Firewall",
          "Endpoint security group",
          "CoIP pool",
          "Endpoint subnet",
          "S3",
          "Outposts",
          "Amazon S3",
          "Access point policy"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_44",
      "text": "Choose Create Outposts bucket. Note\nIt can take up to 5 minutes for your Outpost endpoint to be created and your bucket to\nbe ready to use. To configure additional bucket settings, choose View details. Using the AWS CLI\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your own\ninformation. aws s3control create-bucket --bucket example-outposts-bucket --outpost-\nid op-01ac5d28a6a232904\nUsing the AWS SDK for Java\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the SDK for Java. import com.amazonaws.services.s3control.model. *;\npublic String createBucket(String bucketName) {\nCreateBucketRequest reqCreateBucket = new CreateBucketRequest()\n.withBucket(bucketName)\n.withOutpostId(OutpostId)\n.withCreateBucketConfiguration(new CreateBucketConfiguration());\nCreateBucketResult respCreateBucket =\ns3ControlClient.createBucket(reqCreateBucket);\nSystem.out.printf(\"CreateBucket Response: %s%n\", respCreateBucket.toString());\nCreating a bucket API Version 2006-03-01 31\n\nAmazon S3 on Outposts User Guide\nreturn respCreateBucket.getBucketArn();\n}\nAdding tags for S3 on Outposts buckets\nYou can add tags for your Amazon S3 on Outposts buckets to track storage costs and other criteria\nfor individual projects or groups of projects.",
      "start_idx": 76291,
      "end_idx": 78041,
      "metadata": {
        "num_sentences": 8,
        "num_words": 172,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39466520718165804,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Outposts bucket",
            "AWS CLI",
            "AWS SDK for Java",
            "CreateBucket",
            "create-bucket",
            "S3 on Outposts",
            "Outpost endpoint",
            "tags",
            "storage costs",
            "CreateBucketRequest"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "CreateBucketRequest",
            "OutpostId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an Amazon S3 on Outposts bucket using the AWS CLI and AWS SDK for Java, with details on adding tags for cost tracking and configuration examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts bucket using the AWS CLI?",
            "What is the Java SDK example for creating an S3 on Outposts bucket?",
            "How can I add tags to an Amazon S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "create-bucket",
          "CreateBucket",
          "tags",
          "storage costs",
          "Amazon S3 on Outposts",
          "Outposts bucket",
          "Outpost endpoint",
          "S3 on Outposts",
          "CreateBucketRequest",
          "OutpostId",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_45",
      "text": "Note\nThe AWS account that creates the bucket owns it and is the only one that can change its\ntags. Using the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket whose tags you want to edit. 4.",
      "start_idx": 76291,
      "end_idx": 78041,
      "metadata": {
        "num_sentences": 8,
        "num_words": 62,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2777471882956369,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Warning"
            ]
          },
          "keywords": [
            "AWS account",
            "bucket",
            "tags",
            "S3 console",
            "Outposts buckets",
            "Amazon S3",
            "Management Console",
            "edit tags",
            "navigation pane",
            "ownership"
          ],
          "entities": [
            "AWS account",
            "Amazon S3",
            "Outposts buckets",
            "Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Resource Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to edit tags for an Outposts bucket in Amazon S3 using the AWS Management Console, emphasizing that only the account that created the bucket can modify its tags.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit tags for an Outposts bucket in Amazon S3?",
            "Who can change tags for an Amazon S3 bucket?",
            "Where can I find the Outposts buckets section in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket",
          "navigation pane",
          "edit tags",
          "Outposts buckets",
          "tags",
          "AWS account",
          "ownership",
          "S3 console",
          "Management Console",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_46",
      "text": "Choose the Properties tab. 5. Under Tags, choose Edit. 6.",
      "start_idx": 78042,
      "end_idx": 78099,
      "metadata": {
        "num_sentences": 4,
        "num_words": 10,
        "breakpoint_idx": 457,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2549006938934326,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": []
          },
          "keywords": [
            "Properties tab",
            "Tags",
            "Edit"
          ],
          "entities": [
            "Properties tab",
            "Tags"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "User Interface Interaction",
          "secondary_categories": [
            "Configuration",
            "Editing"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This content provides step-by-step instructions for editing tags in the Properties tab.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I edit tags in the Properties tab?",
            "What steps are required to access the Tags section?",
            "Where can I find the Edit option under Tags?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [User Interface Interaction]",
        "tf_idf_keywords": [
          "Tags",
          "Edit",
          "Properties tab"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_47",
      "text": "Choose Add new tag, and enter the Key and optional Value. Add any tags that you would like to associate with an Outposts bucket to track other criteria\nfor individual projects or groups of projects. 7.",
      "start_idx": 78100,
      "end_idx": 78301,
      "metadata": {
        "num_sentences": 3,
        "num_words": 36,
        "breakpoint_idx": 460,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.15433446566263834,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Tagging"
            ]
          },
          "keywords": [
            "Add new tag",
            "Key",
            "Value",
            "Outposts bucket",
            "projects",
            "criteria",
            "groups",
            "tags",
            "associate",
            "track"
          ],
          "entities": [
            "Outposts bucket",
            "tags"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Resource Management",
          "secondary_categories": [
            "Tagging",
            "Project Organization"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to add and associate tags with an Outposts bucket for tracking criteria across projects or groups.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add a new tag to an Outposts bucket?",
            "What is the purpose of associating tags with an Outposts bucket?",
            "Can I use tags to track project criteria?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Resource Management]",
        "tf_idf_keywords": [
          "associate",
          "Value",
          "criteria",
          "tags",
          "Outposts bucket",
          "groups",
          "Add new tag",
          "track",
          "projects",
          "Outposts",
          "Key"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_48",
      "text": "Choose Save changes. Using the AWS CLI\nThe following AWS CLI example applies a tagging configuration to an S3 on Outposts bucket by\nusing a JSON document in the current folder that specifies tags (tagging.json). To use this\nexample, replace each user input placeholder with your own information. Adding tags API Version 2006-03-01 32\n\nAmazon S3 on Outposts User Guide\naws s3control put-bucket-tagging --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --tagging file://tagging.json\ntagging.json\n{\n\"TagSet\": [\n{\n\"Key\": \"organization\",\n\"Value\": \"marketing\"\n}\n]\n}\nThe following AWS CLI example applies a tagging configuration to an S3 on Outposts bucket\ndirectly from the command line. aws s3control put-bucket-tagging --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --tagging 'TagSet=[{Key=organization,Value=marketing}]'\nFor more information about this command, see put-bucket-tagging in the AWS CLI Reference. Managing access to an Amazon S3 on Outposts bucket using a\nbucket policy\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy. You can update your bucket policy to manage access to your Amazon S3 on Outposts bucket. For\nmore information, see the following topics. Topics\n\u2022 Adding or editing a bucket policy for an Amazon S3 on Outposts bucket\n\u2022 Viewing the bucket policy for your Amazon S3 on Outposts bucket\nUsing bucket policies API Version 2006-03-01 33\n\nAmazon S3 on Outposts User Guide\n\u2022 Deleting the bucket policy for your Amazon S3 on Outposts bucket\n\u2022 Bucket policy examples\nAdding or editing a bucket policy for an Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it.",
      "start_idx": 78302,
      "end_idx": 81351,
      "metadata": {
        "num_sentences": 13,
        "num_words": 338,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34443420018905246,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "IAM policy",
            "tagging configuration",
            "permissions",
            "bucket owner",
            "API Version 2006-03-01",
            "TagSet"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 on Outposts",
            "IAM",
            "tagging.json",
            "put-bucket-tagging"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation provides procedural examples for applying tagging configurations and managing access to Amazon S3 on Outposts buckets using AWS CLI and bucket policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I apply a tagging configuration to an Amazon S3 on Outposts bucket?",
            "What are the steps to manage access to an Amazon S3 on Outposts bucket using a bucket policy?",
            "What is the API version used for Amazon S3 on Outposts operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "TagSet",
          "put-bucket-tagging",
          "bucket policy",
          "IAM",
          "AWS CLI",
          "tagging.json",
          "tagging configuration",
          "Outposts",
          "IAM policy",
          "bucket owner",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_49",
      "text": "Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy. The following topics show you how to update your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDK for Java. Using the S3 console\nTo create or edit a bucket policy\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket whose bucket policy you want to edit. 4. Choose the Permissions tab.",
      "start_idx": 78302,
      "end_idx": 81351,
      "metadata": {
        "num_sentences": 13,
        "num_words": 134,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31494915791046924,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "bucket policy",
            "bucket owner",
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "permissions",
            "S3 console",
            "Outposts buckets"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts buckets",
            "Permissions tab"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This document explains how to create or edit a bucket policy for an Amazon S3 Outposts bucket using the AWS Management Console, AWS CLI, or AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I edit an Amazon S3 Outposts bucket policy?",
            "What tools can be used to manage bucket policies in AWS?",
            "What are the size limitations for bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "AWS Management Console",
          "Outposts buckets",
          "bucket policy",
          "AWS CLI",
          "Permissions tab",
          "S3 console",
          "Outposts",
          "AWS SDK for Java",
          "bucket owner",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_50",
      "text": "5. In the Outposts bucket policy section, to create or edit new policy, choose Edit. You can now add or edit the S3 on Outposts bucket policy. For more information, see Setting\nup IAM with S3 on Outposts. Using the AWS CLI\nThe following AWS CLI example puts a policy on an Outposts bucket. 1. Save the following bucket policy to a JSON file. In this example, the file is named\npolicy1.json.",
      "start_idx": 81352,
      "end_idx": 83661,
      "metadata": {
        "num_sentences": 8,
        "num_words": 72,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27559917313711985,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy"
            ]
          },
          "keywords": [
            "Outposts",
            "bucket policy",
            "IAM",
            "AWS CLI",
            "S3",
            "JSON",
            "policy1.json",
            "Edit",
            "create",
            "file"
          ],
          "entities": [
            "Outposts bucket",
            "S3 on Outposts",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create or edit an S3 on Outposts bucket policy using the AWS CLI, including saving the policy to a JSON file.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or edit an S3 on Outposts bucket policy?",
            "What steps are involved in saving a bucket policy to a file?",
            "How is the AWS CLI used to manage Outposts bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Edit",
          "file",
          "bucket policy",
          "Outposts bucket",
          "policy1.json",
          "IAM",
          "create",
          "S3 on Outposts",
          "JSON",
          "S3",
          "Outposts",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_51",
      "text": "Replace the user input placeholders with your own information. {\n\"Version\":\"2012-10-17\",\nAdding a bucket policy API Version 2006-03-01 34\n\nAmazon S3 on Outposts User Guide\n\"Id\":\"testBucketPolicy\",\n\"Statement\":[\n{\n\"Sid\":\"st1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\n}\n]\n}\n2. Submit the JSON file as part of the put-bucket-policy CLI command. To run this\ncommand, replace the user input placeholders with your own information. aws s3control put-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --policy file://policy1.json\nUsing the AWS SDK for Java\nThe following SDK for Java example puts a policy on an Outposts bucket. import com.amazonaws.services.s3control.model. *;\npublic void putBucketPolicy(String bucketArn) {\nString policy = \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"testBucketPolicy\\\",\n\\\"Statement\\\":[{\\\"Sid\\\":\\\"st1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"\" +\nAccountId+ \"\\\"},\\\"Action\\\":\\\"s3-outposts:*\\\",\\\"Resource\\\":\\\"\" + bucketArn + \"\\\"}]}\";\nPutBucketPolicyRequest reqPutBucketPolicy = new PutBucketPolicyRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withPolicy(policy);\nPutBucketPolicyResult respPutBucketPolicy =\ns3ControlClient.putBucketPolicy(reqPutBucketPolicy);\nAdding a bucket policy API Version 2006-03-01 35\n\nAmazon S3 on Outposts User Guide\nSystem.out.printf(\"PutBucketPolicy Response: %s%n\",\nrespPutBucketPolicy.toString());\n}\nViewing the bucket policy for your Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket.",
      "start_idx": 81352,
      "end_idx": 83661,
      "metadata": {
        "num_sentences": 8,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3537881714957101,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "bucket policy",
            "Amazon S3 on Outposts",
            "IAM policy",
            "AWS SDK for Java",
            "put-bucket-policy",
            "CLI command",
            "Outposts bucket",
            "resource-based policy",
            "access permissions",
            "policy JSON"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS SDK for Java",
            "IAM policy",
            "CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "SDK Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add and view bucket policies for Amazon S3 on Outposts using the AWS CLI and AWS SDK for Java, including code examples and JSON policy structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add a bucket policy to an Amazon S3 on Outposts bucket?",
            "What is the JSON structure for an Outposts bucket policy?",
            "How can I use the AWS SDK for Java to manage bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CLI command",
          "AWS Outposts",
          "Amazon S3 on Outposts",
          "policy JSON",
          "bucket policy",
          "Outposts bucket",
          "put-bucket-policy",
          "CLI",
          "resource-based policy",
          "IAM policy",
          "AWS SDK for Java",
          "access permissions",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_52",
      "text": "The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy. The following topics show you how to view your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDK for Java. Using the S3 console\nTo create or edit a bucket policy\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket whose permission you want to edit. 4. Choose the Permissions tab.",
      "start_idx": 83662,
      "end_idx": 84364,
      "metadata": {
        "num_sentences": 12,
        "num_words": 122,
        "breakpoint_idx": 514,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2974601225419478,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Instruction"
            ]
          },
          "keywords": [
            "bucket policy",
            "Amazon S3",
            "Outposts bucket",
            "AWS Management Console",
            "permissions",
            "AWS CLI",
            "AWS SDK",
            "bucket owner",
            "S3 console",
            "edit permissions"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view and edit the bucket policy for an Amazon S3 on Outposts bucket using the AWS Management Console, AWS CLI, or AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view an Amazon S3 on Outposts bucket policy?",
            "What steps are involved in editing bucket permissions in the AWS Management Console?",
            "Are there size limitations for bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "AWS Management Console",
          "AWS SDK",
          "bucket policy",
          "Outposts bucket",
          "AWS CLI",
          "edit permissions",
          "S3 console",
          "AWS SDK for Java",
          "bucket owner",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_53",
      "text": "5. In the Outposts bucket policy section, you can review your existing bucket policy. For more\ninformation, see Setting up IAM with S3 on Outposts. Using the AWS CLI\nThe following AWS CLI example gets a policy for an Outposts bucket. To run this command, replace\nthe user input placeholders with your own information. aws s3control get-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nViewing a bucket policy API Version 2006-03-01 36\n\nAmazon S3 on Outposts User Guide\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a policy for an Outposts bucket. import com.amazonaws.services.s3control.model. *;\npublic void getBucketPolicy(String bucketArn) {\nGetBucketPolicyRequest reqGetBucketPolicy = new GetBucketPolicyRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nGetBucketPolicyResult respGetBucketPolicy =\ns3ControlClient.getBucketPolicy(reqGetBucketPolicy);\nSystem.out.printf(\"GetBucketPolicy Response: %s%n\",\nrespGetBucketPolicy.toString());\n}\nDeleting the bucket policy for your Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket.",
      "start_idx": 84365,
      "end_idx": 85731,
      "metadata": {
        "num_sentences": 9,
        "num_words": 171,
        "breakpoint_idx": 523,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2916945881313748,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Outposts bucket policy",
            "AWS CLI",
            "IAM",
            "S3 on Outposts",
            "bucket owner",
            "resource-based policy",
            "GetBucketPolicyRequest",
            "GetBucketPolicyResult",
            "SDK for Java",
            "delete bucket policy"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "Outposts bucket",
            "IAM",
            "SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Identity and Access Management",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "IAM"
          ],
          "mentioned_tools": [
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to review, retrieve, and delete bucket policies for Amazon S3 on Outposts using AWS CLI and SDK for Java, including code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a bucket policy for Amazon S3 on Outposts?",
            "What is an example of using the AWS SDK for Java to manage bucket policies?",
            "Who can delete a bucket policy for an S3 Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "GetBucketPolicyResult",
          "Amazon S3 on Outposts",
          "delete bucket policy",
          "Outposts bucket",
          "resource-based policy",
          "GetBucketPolicyRequest",
          "Outposts bucket policy",
          "S3 on Outposts",
          "IAM",
          "Amazon S3",
          "SDK for Java",
          "bucket owner",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_54",
      "text": "The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy. The following topics show you how to view your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console or AWS Command Line Interface (AWS CLI). Using the S3 console\nTo delete a bucket policy\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket whose permission you want to edit. 4. Choose the Permissions tab.",
      "start_idx": 85732,
      "end_idx": 86364,
      "metadata": {
        "num_sentences": 12,
        "num_words": 107,
        "breakpoint_idx": 535,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2966393268469608,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step"
            ]
          },
          "keywords": [
            "bucket policy",
            "Amazon S3",
            "Outposts bucket",
            "permissions",
            "AWS Management Console",
            "AWS CLI",
            "S3 console",
            "delete policy",
            "Bucket owner",
            "20 KB limit"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "AWS Management Console",
            "AWS CLI",
            "Bucket policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "AWS Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view and delete bucket policies for Amazon S3 on Outposts using the AWS Management Console or AWS CLI. It also describes the permissions applied to bucket objects owned by the bucket owner.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a bucket policy in Amazon S3?",
            "What is the size limit for bucket policies?",
            "How do permissions work for objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Bucket policy",
          "AWS Management Console",
          "Outposts buckets",
          "bucket policy",
          "Outposts bucket",
          "AWS CLI",
          "delete policy",
          "Bucket owner",
          "S3 console",
          "Outposts",
          "20 KB limit",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_55",
      "text": "5. In the Outposts bucket policy section, choose Delete. 6. Confirm the deletion. Deleting a bucket policy API Version 2006-03-01 37\n\nAmazon S3 on Outposts User Guide\nUsing the AWS CLI\nThe following example deletes the bucket policy for an S3 on Outposts bucket (s3-\noutposts:DeleteBucket) by using the AWS CLI. To run this command, replace the user input\nplaceholders with your own information. aws s3control delete-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nBucket policy examples\nWith S3 on Outposts bucket policies, you can secure access to objects in your S3 on Outposts\nbuckets, so that only users with the appropriate permissions can access them. You can even prevent\nauthenticated users without the appropriate permissions from accessing your S3 on Outposts\nresources. This section presents examples of typical use cases for S3 on Outposts bucket policies. To test\nthese policies, replace the user input placeholders with your own information (such as your\nbucket name). To grant or deny permissions to a set of objects, you can use wildcard characters (*) in Amazon\nResource Names (ARNs) and other values.",
      "start_idx": 86365,
      "end_idx": 93416,
      "metadata": {
        "num_sentences": 11,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23784061778675425,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "Policy Management"
            ]
          },
          "keywords": [
            "Outposts bucket policy",
            "AWS CLI",
            "delete-bucket-policy",
            "S3 on Outposts",
            "bucket policy examples",
            "permissions",
            "Amazon Resource Names",
            "ARN",
            "wildcard characters",
            "authenticated users"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "S3 on Outposts",
            "ARN",
            "Outposts bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "AWS Command-Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an S3 on Outposts bucket policy using the AWS CLI, along with examples and guidelines for managing bucket policies securely.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a bucket policy for S3 on Outposts using the AWS CLI?",
            "What are examples of S3 on Outposts bucket policies?",
            "How can I secure access to objects in an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "ARN",
          "wildcard characters",
          "authenticated users",
          "Outposts bucket",
          "Outposts bucket policy",
          "S3 on Outposts",
          "delete-bucket-policy",
          "bucket policy examples",
          "Amazon Resource Names",
          "Amazon S3",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_56",
      "text": "For example, you can control access to groups of objects\nthat begin with a common prefix or end with a given extension, such as .html. For more information about AWS Identity and Access Management (IAM) policy language, see\nSetting up IAM with S3 on Outposts. Note\nWhen testing s3outposts permissions by using the Amazon S3 console, you must grant\nadditional permissions that the console requires, such as s3outposts:createendpoint,\ns3outposts:listendpoints, and so on. Additional resources for creating bucket policies\n\u2022 For a list of the IAM policy actions, resources, and condition keys you can use when creating\nan S3 on Outposts bucket policy, see Actions, resources, and condition keys for Amazon S3 on\nOutposts. Bucket policy examples API Version 2006-03-01 38\n\nAmazon S3 on Outposts User Guide\n\u2022 For guidance on creating your S3 on Outposts policy, see Adding or editing a bucket policy for an\nAmazon S3 on Outposts bucket. Topics\n\u2022 Managing access to an Amazon S3 on Outposts bucket based on specific IP addresses\nManaging access to an Amazon S3 on Outposts bucket based on specific IP\naddresses\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy. Restrict access to specific IP addresses\nThe following example denies all users from performing any S3 on Outposts operations on objects\nin the specified buckets unless the request originates from the specified range of IP addresses.",
      "start_idx": 86365,
      "end_idx": 93416,
      "metadata": {
        "num_sentences": 11,
        "num_words": 293,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4384257576682351,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS Identity and Access Management",
            "IAM policy",
            "S3 on Outposts",
            "bucket policy",
            "IP address restriction",
            "s3outposts:createendpoint",
            "s3outposts:listendpoints",
            "bucket owner",
            "condition keys",
            "resource-based policy"
          ],
          "entities": [
            "Amazon S3",
            "AWS Identity and Access Management",
            "S3 on Outposts",
            "bucket policy",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Access Management",
          "secondary_categories": [
            "AWS Services",
            "Network Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides guidance on managing access to Amazon S3 on Outposts buckets, including using bucket policies to restrict access based on IP addresses and IAM permissions. It also highlights required permissions for testing via the Amazon S3 console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket policy for S3 on Outposts?",
            "What permissions are required to test S3 on Outposts in the console?",
            "How can I restrict S3 on Outposts access by IP address?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Access Management]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "s3outposts:listendpoints",
          "Amazon S3",
          "AWS Identity and Access Management",
          "bucket policy",
          "IAM",
          "condition keys",
          "S3 on Outposts",
          "resource-based policy",
          "IP address restriction",
          "IAM policy",
          "bucket owner",
          "s3outposts:createendpoint"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_57",
      "text": "Note\nWhen restricting access to a specific IP address, make sure that you also specify which VPC\nendpoints, VPC source IP addresses, or external IP addresses can access the S3 on Outposts\nbucket. Otherwise, you might lose access to the bucket if your policy denies all users from\nperforming any s3outposts operations on objects in your S3 on Outposts bucket without\nthe proper permissions already in place. This policy's Condition statement identifies 192.0.2.0/24 as the range of allowed IP version 4\n(IPv4) IP addresses. The Condition block uses the NotIpAddress condition and the aws:SourceIp condition key,\nwhich is an AWS wide condition key. The aws:SourceIp condition key can only be used for public\nIP address ranges. For more information about these condition keys, see Actions, resources, and\ncondition keys for S3 on Outposts. The aws:SourceIp IPv4 values use standard CIDR notation. For more information, see IAM JSON policy elements reference in the IAM User Guide. Bucket policy examples API Version 2006-03-01 39\n\nAmazon S3 on Outposts User Guide\nWarning\nBefore using this S3 on Outposts policy, replace the 192.0.2.0/24 IP address range in\nthis example with an appropriate value for your use case. Otherwise, you'll lose the ability\nto access your bucket. {\n\"Version\": \"2012-10-17\",\n\"Id\": \"S3OutpostsPolicyId1\",\n\"Statement\": [\n{\n\"Sid\": \"IPAllow\",\n\"Effect\": \"Deny\",\n\"Principal\": \"*\",\n\"Action\": \"s3outposts:*\",\n\"Resource\": [\n\"arn:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\naccesspoint/EXAMPLE-ACCESS-POINT-NAME\"\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET\"\n],\n\"Condition\": {\n\"NotIpAddress\": {\n\"aws:SourceIp\": \"192.0.2.0/24\"\n}\n}\n}\n]\n}\nAllow both IPv4 and IPv6 addresses\nWhen you start using IPv6 addresses, we recommend that you update all of your organization's\npolicies with your IPv6 address ranges in addition to your existing IPv4 ranges.",
      "start_idx": 86365,
      "end_idx": 93416,
      "metadata": {
        "num_sentences": 11,
        "num_words": 270,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4060326662930575,
        "content": {
          "content_type": {
            "primary": "Warning",
            "subtypes": [
              "Policy Configuration",
              "Access Control"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "IP address",
            "VPC endpoints",
            "aws:SourceIp",
            "CIDR notation",
            "NotIpAddress condition",
            "bucket policy",
            "IAM JSON policy",
            "IPv4",
            "IPv6"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS",
            "IAM User Guide",
            "192.0.2.0/24",
            "DOC-EXAMPLE-BUCKET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Access Management",
          "secondary_categories": [
            "IAM Policies",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "IAM JSON Policy"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on configuring access policies for Amazon S3 on Outposts, emphasizing the importance of specifying IP ranges to avoid losing access. It includes an example policy and recommends updating policies to support both IPv4 and IPv6 addresses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure IP-based access control for S3 on Outposts?",
            "What is the significance of the aws:SourceIp condition key?",
            "How can I update policies to include both IPv4 and IPv6 addresses?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Warning] [Cloud Storage Access Management]",
        "tf_idf_keywords": [
          "CIDR notation",
          "IAM User Guide",
          "VPC endpoints",
          "Amazon S3 on Outposts",
          "DOC-EXAMPLE-BUCKET",
          "IP address",
          "bucket policy",
          "IPv6",
          "AWS IAM",
          "192.0.2.0/24",
          "IAM JSON policy",
          "S3 on Outposts",
          "IPv4",
          "aws:SourceIp",
          "AWS"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_58",
      "text": "Doing this will help\nto make sure that the policies continue to work as you make the transition to IPv6. The following S3 on Outposts example bucket policy shows how to mix IPv4 and IPv6 address\nranges to cover all of your organization's valid IP addresses. The example policy allows access to\nthe example IP addresses 192.0.2.1 and 2001:DB8:1234:5678::1 and denies access to the\naddresses 203.0.113.1 and 2001:DB8:1234:5678:ABCD::1. Bucket policy examples API Version 2006-03-01 40\n\nAmazon S3 on Outposts User Guide\nThe aws:SourceIp condition key can only be used for public IP address ranges. The IPv6 values\nfor aws:SourceIp must be in standard CIDR format. For IPv6, we support using :: to represent\na range of 0s (for example, 2001:DB8:1234:5678::/64). For more information, see IP address\ncondition operators in the IAM User Guide. Warning\nReplace the IP address ranges in this example with appropriate values for your use case\nbefore using this S3 on Outposts policy. Otherwise, you might lose the ability to access\nyour bucket. {\n\"Id\": \"S3OutpostsPolicyId2\",\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"AllowIPmix\",\n\"Effect\": \"Allow\",\n\"Principal\": \"*\",\n\"Action\": \"s3outposts:*\",\n\"Resource\": [\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET\",\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-\nID/bucket/DOC-EXAMPLE-BUCKET/*\"\n],\n\"Condition\": {\n\"IpAddress\": {\n\"aws:SourceIp\": [\n\"192.0.2.0/24\",\n\"2001:DB8:1234:5678::/64\"\n]\n},\n\"NotIpAddress\": {\n\"aws:SourceIp\": [\n\"203.0.113.0/24\",\n\"2001:DB8:1234:5678:ABCD::/80\"\n]\n}\n}\n}\nBucket policy examples API Version 2006-03-01 41\n\nAmazon S3 on Outposts User Guide\n]\n}\nListing Amazon S3 on Outposts buckets\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts.",
      "start_idx": 86365,
      "end_idx": 93416,
      "metadata": {
        "num_sentences": 11,
        "num_words": 300,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3644721984863281,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "IPv6",
            "S3 on Outposts",
            "Bucket policy",
            "aws:SourceIp",
            "CIDR format",
            "IP address ranges",
            "IAM User Guide",
            "S3 APIs",
            "data residency",
            "OUTPOSTS"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Bucket Policy",
            "IPv6 Addressing",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "S3 APIs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure bucket policies for Amazon S3 on Outposts to support both IPv4 and IPv6 address ranges, providing examples and warnings for proper implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a bucket policy for S3 on Outposts?",
            "What are the supported IP address formats for aws:SourceIp?",
            "What precautions should I take when setting IP address ranges in S3 policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Bucket policy",
          "IAM User Guide",
          "OUTPOSTS",
          "AWS Outposts",
          "data residency",
          "IPv6",
          "IP address ranges",
          "S3 APIs",
          "CIDR format",
          "Bucket Policy",
          "S3 on Outposts",
          "aws:SourceIp",
          "IAM",
          "IPv6 Addressing",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_59",
      "text": "You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? For more information about working with buckets in S3 on Outposts, see Working with S3 on\nOutposts buckets. The following examples show you how to return a list of your S3 on Outposts buckets by using the\nAWS Management Console, AWS CLI, and AWS SDK for Java. Using the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 10,
        "num_words": 144,
        "chunk_type": "semantic_split",
        "coherence_score": 0.438080808851454,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Example"
            ]
          },
          "keywords": [
            "Outpost bucket",
            "access point",
            "endpoint connection",
            "virtual private cloud",
            "Amazon S3",
            "AWS CLI",
            "AWS SDK",
            "encryption",
            "tagging",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "VPC Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interact with Amazon S3 on Outposts buckets using access points and endpoint connections in a VPC. It provides procedural steps and examples for using the AWS Management Console, AWS CLI, and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list S3 on Outposts buckets using the AWS Management Console?",
            "What tools can I use to interact with S3 on Outposts buckets?",
            "What features are available for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "endpoint connection",
          "AWS Management Console",
          "AWS SDK",
          "REST API",
          "tagging",
          "Outpost bucket",
          "AWS CLI",
          "encryption",
          "access point",
          "S3 on Outposts",
          "Outposts",
          "AWS SDK for Java",
          "Amazon S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_60",
      "text": "3. Under Outposts buckets, review your list of S3 on Outposts buckets. Using the AWS CLI\nThe following AWS CLI example gets a list of buckets in an Outpost. To use this command, replace\neach user input placeholder with your own information. For more information about this\ncommand, see list-regional-buckets in the AWS CLI Reference. aws s3control list-regional-buckets --account-id 123456789012 --outpost-\nid op-01ac5d28a6a232904\nListing buckets API Version 2006-03-01 42\n\nAmazon S3 on Outposts User Guide\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a list of buckets in an Outpost. For more information, see\nListRegionalBuckets in the Amazon Simple Storage Service API Reference. import com.amazonaws.services.s3control.model. *;\npublic void listRegionalBuckets() {\nListRegionalBucketsRequest reqListBuckets = new ListRegionalBucketsRequest()\n.withAccountId(AccountId)\n.withOutpostId(OutpostId);\nListRegionalBucketsResult respListBuckets =\ns3ControlClient.listRegionalBuckets(reqListBuckets);\nSystem.out.printf(\"ListRegionalBuckets Response: %s%n\",\nrespListBuckets.toString());\n}\nGetting an S3 on Outposts bucket by using the AWS CLI and the\nSDK for Java\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 10,
        "num_words": 217,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3689886305067274,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "AWS CLI",
            "SDK for Java",
            "list-regional-buckets",
            "Outpost ID",
            "Account ID",
            "ListRegionalBucketsRequest",
            "ListRegionalBucketsResult",
            "storage class",
            "Amazon S3 APIs"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts",
            "S3 Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "SDK Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list Amazon S3 buckets on AWS Outposts using the AWS CLI and SDK for Java, providing examples and references for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list S3 buckets on AWS Outposts using the AWS CLI?",
            "What is the Java SDK example for listing S3 buckets on Outposts?",
            "What storage class does S3 on Outposts use?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "storage class",
          "Account ID",
          "ListRegionalBucketsResult",
          "ListRegionalBucketsRequest",
          "S3 Outposts",
          "S3 on Outposts",
          "Outpost ID",
          "Amazon S3 APIs",
          "Outposts",
          "list-regional-buckets",
          "Amazon S3",
          "SDK for Java",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_61",
      "text": "You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? The following examples show you how to get an S3 on Outposts bucket by using the AWS CLI and\nAWS SDK for Java. Getting a bucket API Version 2006-03-01 43\n\nAmazon S3 on Outposts User Guide\nNote\nWhen you're working with Amazon S3 on Outposts through the AWS CLI or AWS SDKs, you\nprovide the access point ARN for the Outpost in place of the bucket name. The access point\nARN takes the following form, where region is the AWS Region code for the Region that\nthe Outpost is homed to:\narn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-outposts-access-point\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. Using the AWS CLI\nThe following S3 on Outposts example gets a bucket by using the AWS CLI. To use this command,\nreplace each user input placeholder with your own information. For more information about\nthis command, see get-bucket in the AWS CLI Reference.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 10,
        "num_words": 228,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49819844563802085,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Outpost bucket",
            "access point",
            "endpoint connection",
            "virtual private cloud",
            "Amazon S3",
            "AWS CLI",
            "AWS SDK",
            "access point ARN",
            "S3 on Outposts",
            "encryption"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK",
            "Outpost bucket",
            "access point ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interact with Amazon S3 on Outposts buckets using access points and endpoints in a VPC, and provides examples using AWS CLI and AWS SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I access an S3 on Outposts bucket?",
            "What is the format of an access point ARN for S3 on Outposts?",
            "Which tools can I use to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "endpoint connection",
          "AWS Management Console",
          "AWS SDK",
          "access point ARN",
          "Outpost bucket",
          "AWS CLI",
          "encryption",
          "access point",
          "S3 on Outposts",
          "Amazon S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_62",
      "text": "aws s3control get-bucket --account-id 123456789012 --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\nUsing the AWS SDK for Java\nThe following S3 on Outposts example gets a bucket by using the SDK for Java. For more\ninformation, see GetBucket in the Amazon Simple Storage Service API Reference. import com.amazonaws.services.s3control.model. *;\npublic void getBucket(String bucketArn) {\nGetBucketRequest reqGetBucket = new GetBucketRequest()\n.withBucket(bucketArn)\n.withAccountId(AccountId);\nGetBucketResult respGetBucket = s3ControlClient.getBucket(reqGetBucket);\nSystem.out.printf(\"GetBucket Response: %s%n\", respGetBucket.toString());\n}\nGetting a bucket API Version 2006-03-01 44\n\nAmazon S3 on Outposts User Guide\nDeleting your Amazon S3 on Outposts bucket\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? For more information about working with buckets in S3 on Outposts, see Working with S3 on\nOutposts buckets.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 10,
        "num_words": 251,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5771119859483507,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS S3Control",
            "Outposts",
            "GetBucket",
            "access point",
            "endpoint connection",
            "VPC",
            "S3 APIs",
            "encryption",
            "tagging",
            "SDK for Java"
          ],
          "entities": [
            "AWS S3 on Outposts",
            "GetBucketRequest",
            "GetBucketResult",
            "Amazon S3",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide on retrieving an Amazon S3 bucket on AWS Outposts using the AWS CLI and SDK for Java, with details on S3 Outposts functionality and features.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an S3 bucket on AWS Outposts using the AWS SDK for Java?",
            "What features does S3 on Outposts support?",
            "What is the process for interacting with S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "AWS S3Control",
          "endpoint connection",
          "VPC",
          "tagging",
          "AWS S3 on Outposts",
          "GetBucketRequest",
          "S3 APIs",
          "access point",
          "encryption",
          "GetBucketResult",
          "GetBucket",
          "Outposts",
          "S3 Outposts",
          "SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_63",
      "text": "The AWS account that creates the bucket owns it and is the only one that can delete it. Note\n\u2022 Outposts buckets must be empty before they can be deleted. The Amazon S3 console doesn't support S3 on Outposts object actions. To delete objects\nin an S3 on Outposts bucket, you must use the REST API, AWS CLI, or AWS SDKs. \u2022 Before you can delete an Outposts bucket, you must delete any Outposts access points\nfor the bucket. For more information, see Deleting an access point. \u2022 You cannot recover a bucket after it has been deleted. The following examples show you how to delete an S3 on Outposts bucket by using the AWS\nManagement Console and AWS Command Line Interface (AWS CLI). Using the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 10,
        "num_words": 145,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44610595703125,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "AWS account",
            "Outposts bucket",
            "Amazon S3 console",
            "REST API",
            "AWS CLI",
            "AWS SDKs",
            "access points",
            "delete bucket",
            "S3 on Outposts",
            "Management Console"
          ],
          "entities": [
            "AWS account",
            "Outposts bucket",
            "Amazon S3 console",
            "REST API",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "REST API",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process and prerequisites for deleting an S3 bucket on AWS Outposts, including necessary tools and warnings about irrecoverable deletion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an S3 bucket on AWS Outposts?",
            "What are the prerequisites for deleting an Outposts bucket?",
            "Which tools can be used to delete objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "REST API",
          "Outposts bucket",
          "AWS SDKs",
          "AWS account",
          "S3 on Outposts",
          "Amazon S3 console",
          "access points",
          "delete bucket",
          "Management Console",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_64",
      "text": "2. In the left navigation pane, choose Outposts buckets. Deleting your bucket API Version 2006-03-01 45\n\nAmazon S3 on Outposts User Guide\n3. Choose the bucket that you want to delete, and choose Delete. 4. Confirm the deletion. Using the AWS CLI\nThe following example deletes an S3 on Outposts bucket (s3-outposts:DeleteBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your own\ninformation. aws s3control delete-bucket --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nWorking with Amazon S3 on Outposts access points\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point. Access points simplify managing data access at scale for shared datasets in Amazon S3.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 10,
        "num_words": 117,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25702891879611545,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Deletion",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "AWS CLI",
            "access point",
            "delete-bucket",
            "s3control",
            "account-id",
            "region",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "s3-outposts:DeleteBucket",
            "arn:aws:s3-outposts",
            "example-outposts-bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Bucket Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an Amazon S3 on Outposts bucket using the AWS CLI and manage access points for the bucket.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an S3 on Outposts bucket using the AWS CLI?",
            "What is the process for configuring access points for Amazon S3 on Outposts?",
            "What parameters are required for the delete-bucket command in AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "region",
          "example-outposts-bucket",
          "account-id",
          "access point",
          "arn:aws:s3-outposts",
          "delete-bucket",
          "bucket",
          "s3control",
          "Outposts",
          "Amazon S3",
          "s3-outposts:DeleteBucket",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_65",
      "text": "Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. Note\nThe AWS account that creates the Outposts bucket owns it and is the only one that can\nassign access points to it. The following sections describe how to create and manage access points for S3 on Outposts\nbuckets. Topics\n\u2022 Creating an S3 on Outposts access point\n\u2022 Using a bucket-style alias for your S3 on Outposts bucket access point\n\u2022 Viewing information about an access point configuration\n\u2022 View a list of your Amazon S3 on Outposts access points\nWorking with access points API Version 2006-03-01 46\n\nAmazon S3 on Outposts User Guide\n\u2022 Deleting an access point\n\u2022 Adding or editing an access point policy\n\u2022 Viewing an access point policy for an S3 on Outposts access point\nCreating an S3 on Outposts access point\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point. Access points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. The following examples show you how to create an S3 on Outposts access point by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Note\nThe AWS account that creates the Outposts bucket owns it and is the only one that can\nassign access points to it. Using the S3 console\n1.",
      "start_idx": 93417,
      "end_idx": 102549,
      "metadata": {
        "num_sentences": 13,
        "num_words": 315,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5752785511505909,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "access points",
            "Outposts bucket",
            "Amazon S3",
            "GetObject",
            "PutObject",
            "virtual-host-style addressing",
            "access point policy",
            "AWS CLI",
            "AWS SDK for Java",
            "S3 console"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and manage Amazon S3 on Outposts access points, which are required for accessing objects in Outposts buckets. It provides procedural guidance using the AWS Management Console, AWS CLI, and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an S3 on Outposts bucket?",
            "What is the role of access points in S3 on Outposts?",
            "Which tools can be used to configure access points for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "access point policy",
          "AWS Management Console",
          "PutObject",
          "Outposts bucket",
          "GetObject",
          "AWS CLI",
          "virtual-host-style addressing",
          "S3 console",
          "access points",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_66",
      "text": "Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to create an Outposts access point for. 4. Choose the Outposts access points tab. 5. In the Outposts access points section, choose Create Outposts access point. 6. In Outposts access point settings, enter a name for the access point, and then choose the\nvirtual private cloud (VPC) for the access point. 7.",
      "start_idx": 102550,
      "end_idx": 107006,
      "metadata": {
        "num_sentences": 12,
        "num_words": 76,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3301049434777462,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts buckets",
            "Outposts access points",
            "virtual private cloud",
            "VPC",
            "access point settings",
            "AWS console",
            "create access point",
            "navigation pane",
            "Outposts tab"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "Outposts access points",
            "VPC",
            "AWS console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Network Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to creating an Outposts access point in Amazon S3 using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Outposts access point in Amazon S3?",
            "What settings are required for an Outposts access point?",
            "Where can I find the Outposts access points tab in the AWS console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point settings",
          "AWS console",
          "VPC",
          "create access point",
          "navigation pane",
          "Outposts buckets",
          "AWS Outposts",
          "Outposts tab",
          "Outposts access points",
          "Amazon S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_67",
      "text": "If you want to add a policy for your access point, enter it in the Outposts access point policy\nsection. For more information, see Setting up IAM with S3 on Outposts. Creating an access point API Version 2006-03-01 47\n\nAmazon S3 on Outposts User Guide\nUsing the AWS CLI\nExample\nThe following AWS CLI example creates an access point for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information. aws s3control create-access-point --account-id 123456789012\n--name example-outposts-access-point --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\" --vpc-configuration VpcId=example-vpc-12345\nUsing the AWS SDK for Java\nExample\nThe following SDK for Java example creates an access point for an Outposts bucket. To use this\nexample, replace the user input placeholders with your own information. import com.amazonaws.services.s3control.model. *;\npublic String createAccessPoint(String bucketArn, String accessPointName) {\nCreateAccessPointRequest reqCreateAP = new CreateAccessPointRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withName(accessPointName)\n.withVpcConfiguration(new VpcConfiguration().withVpcId(\"vpc-12345\"));\nCreateAccessPointResult respCreateAP =\ns3ControlClient.createAccessPoint(reqCreateAP);\nSystem.out.printf(\"CreateAccessPoint Response: %s%n\", respCreateAP.toString());\nreturn respCreateAP.getAccessPointArn();\n}\nUsing a bucket-style alias for your S3 on Outposts bucket access point\nWith S3 on Outposts, you must use access points to access any object in an Outposts bucket. Every\ntime you create an access point for a bucket, S3 on Outposts automatically generates an access\npoint alias. You can use this access point alias instead of an access point ARN for any data plane\nUsing a bucket-style alias for your access point API Version 2006-03-01 48\n\nAmazon S3 on Outposts User Guide\noperation. For example, you can use an access point alias to perform object-level operations such\nas PUT, GET, LIST, and more. For a list of these operations, see Amazon S3 API operations for\nmanaging objects.",
      "start_idx": 102550,
      "end_idx": 107006,
      "metadata": {
        "num_sentences": 12,
        "num_words": 272,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32249751235499524,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Outposts access point",
            "S3 on Outposts",
            "access point policy",
            "AWS CLI",
            "AWS SDK for Java",
            "access point alias",
            "bucket-style alias",
            "VPC configuration",
            "access point ARN",
            "Amazon S3 API operations"
          ],
          "entities": [
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 on Outposts",
            "access point alias",
            "VpcConfiguration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an access point for an Amazon S3 on Outposts bucket using AWS CLI and AWS SDK for Java, and discusses access point aliases for object-level operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an S3 on Outposts bucket?",
            "What is an access point alias in S3 on Outposts?",
            "How can I use the AWS CLI to configure an S3 Outposts access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point policy",
          "Amazon S3 on Outposts",
          "VPC configuration",
          "Outposts access point",
          "access point ARN",
          "VpcConfiguration",
          "access point alias",
          "bucket-style alias",
          "S3 on Outposts",
          "Amazon S3 API operations",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_68",
      "text": "The following examples show an ARN and access point alias for an access point named my-\naccess-point. \u2022 Access point ARN \u2013 arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/my-\naccess-point\n\u2022 Access point alias \u2013 my-access-\npo-o01ac5d28a6a232904e8xz5w8ijx1qzlbp3i3kuse10--op-s3\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the AWS General\nReference. For more information about access point aliases, see the following topics. Topics\n\u2022 Access point aliases\n\u2022 Using an access point alias in an S3 on Outposts object operation\n\u2022 Limitations\nAccess point aliases\nAn access point alias is created within the same namespace as an S3 on Outposts bucket. When you\ncreate an access point, S3 on Outposts automatically generates an access point alias that cannot be\nchanged. An access point alias meets all the requirements of a valid S3 on Outposts bucket name\nand consists of the following parts:\naccess point name prefix-metadata--op-s3\nNote\nThe --op-s3 suffix is reserved for access point aliases, we recommend that you don't use\nit for bucket or access point names. For more information about S3 on Outposts bucket-\nnaming rules, see Working with S3 on Outposts buckets. Using a bucket-style alias for your access point API Version 2006-03-01 49\n\nAmazon S3 on Outposts User Guide\nFinding the access point alias\nThe following examples show you how to find an access point alias by using the Amazon S3\nconsole and the AWS CLI. Example : Find and copy an access point alias in the Amazon S3 console\nAfter you create an access point in the console, you can get the access point alias from the Access\nPoint alias column in the Access Points list. To copy an access point alias\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points.",
      "start_idx": 102550,
      "end_idx": 107006,
      "metadata": {
        "num_sentences": 13,
        "num_words": 292,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43131305009890825,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "ARN",
            "access point alias",
            "S3 on Outposts",
            "bucket name",
            "AWS CLI",
            "metadata",
            "namespace",
            "Amazon S3 console",
            "API Version 2006-03-01",
            "Outposts access points"
          ],
          "entities": [
            "arn:aws:s3-outposts",
            "my-access-point",
            "op-01ac5d28a6a232904",
            "AWS General Reference",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Amazon S3 on Outposts",
          "secondary_categories": [
            "Access Points",
            "Bucket Naming Rules"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon S3 console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to find and use access point ARNs and aliases for Amazon S3 on Outposts, including naming conventions and procedural steps for accessing them via the AWS console and CLI.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I find an access point alias in the Amazon S3 console?",
            "What are the naming rules for S3 on Outposts bucket aliases?",
            "What is the structure of an access point alias?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Amazon S3 on Outposts]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "API Version 2006-03-01",
          "metadata",
          "ARN",
          "namespace",
          "bucket name",
          "access point alias",
          "S3 on Outposts",
          "Amazon S3 console",
          "arn:aws:s3-outposts",
          "AWS General Reference",
          "Outposts access points",
          "Amazon S3",
          "op-01ac5d28a6a232904",
          "my-access-point"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_69",
      "text": "3. To copy the access point alias, do one of the following:\n\u2022 In the Access Points list, select the option button next to the access point name, and then\nchoose Copy Access Point alias. \u2022 Choose the access point name. Then, under Outposts access point overview, copy the\naccess point alias. Example : Create an access point by using the AWS CLI and find the access point alias in the\nresponse\nThe following AWS CLI example for the create-access-point command creates the access\npoint and returns the automatically generated access point alias. To run this command, replace the\nuser input placeholders with your own information. aws s3control create-access-point --bucket example-outposts-bucket --name example-\noutposts-access-point --account-id 123456789012\n{\n\"AccessPointArn\":\n\"arn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-outposts-access-point\",\n\"Alias\": \"example-outp-o01ac5d28a6a232904e8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\nUsing a bucket-style alias for your access point API Version 2006-03-01 50\n\nAmazon S3 on Outposts User Guide\nExample : Get an access point alias by using the AWS CLI\nThe following AWS CLI example for the get-access-point command returns information about\nthe specified access point. This information includes the access point alias. To run this command,\nreplace the user input placeholders with your own information. aws s3control get-access-point --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --name example-outposts-access-point --account-id 123456789012\n{\n\"Name\": \"example-outposts-access-point\",\n\"Bucket\": \"example-outposts-bucket\",\n\"NetworkOrigin\": \"Vpc\",\n\"VpcConfiguration\": {\n\"VpcId\": \"vpc-01234567890abcdef\"\n},\n\"PublicAccessBlockConfiguration\": {\n\"BlockPublicAcls\": true,\n\"IgnorePublicAcls\": true,\n\"BlockPublicPolicy\": true,\n\"RestrictPublicBuckets\": true\n},\n\"CreationDate\": \"2022-09-18T17:49:15.584000+00:00\",\n\"Alias\": \"example-outp-o0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\nExample : List access points to find an access point alias by using the AWS CLI\nThe following AWS CLI example for the list-access-points command lists information about\nthe specified access point. This information includes the access point alias. To run this command,\nreplace the user input placeholders with your own information. aws s3control list-access-points --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\n{\n\"AccessPointList\": [\n{\n\"Name\": \"example-outposts-access-point\",\n\"NetworkOrigin\": \"Vpc\",\nUsing a bucket-style alias for your access point API Version 2006-03-01 51\n\nAmazon S3 on Outposts User Guide\n\"VpcConfiguration\": {\n\"VpcId\": \"vpc-01234567890abcdef\"\n},\n\"Bucket\": \"example-outposts-bucket\",\n\"AccessPointArn\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\",\n\"Alias\": \"example-outp-o0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\n]\n}\nUsing an access point alias in an S3 on Outposts object operation\nWhen adopting access points, you can use access point alias without requiring extensive code\nchanges.",
      "start_idx": 107007,
      "end_idx": 111928,
      "metadata": {
        "num_sentences": 13,
        "num_words": 358,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35592886117788464,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "access point alias",
            "AWS CLI",
            "S3 on Outposts",
            "create-access-point",
            "get-access-point",
            "list-access-points",
            "VpcConfiguration",
            "Bucket",
            "AccessPointArn",
            "PublicAccessBlockConfiguration"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "Outposts",
            "Vpc",
            "AccessPointArn"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Outposts",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create, retrieve, and list access point aliases for Amazon S3 on Outposts using the AWS CLI. It includes examples of CLI commands and their expected outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point alias using the AWS CLI?",
            "What information does the get-access-point command return?",
            "How can I list all access points for a specific bucket in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AccessPointArn",
          "AWS Outposts",
          "get-access-point",
          "VpcConfiguration",
          "PublicAccessBlockConfiguration",
          "access point alias",
          "create-access-point",
          "Vpc",
          "S3 on Outposts",
          "Outposts",
          "Amazon S3",
          "list-access-points",
          "AWS CLI",
          "Bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_70",
      "text": "This AWS CLI example shows a get-object operation for an S3 on Outposts bucket. This example\nuses the access point alias as the value for --bucket instead of the full access point ARN. aws s3api get-object --bucket my-access-po-\no0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3 --key testkey sample-object.rtf\n{\n\"AcceptRanges\": \"bytes\",\n\"LastModified\": \"2020-01-08T22:16:28+00:00\",\n\"ContentLength\": 910,\n\"ETag\": \"\\\"00751974dc146b76404bb7290f8f51bb\\\"\",\n\"VersionId\": \"null\",\n\"ContentType\": \"text/rtf\",\n\"Metadata\": {}\n}\nLimitations\n\u2022 Aliases cannot be configured by customers. \u2022 Aliases cannot be deleted or modified or disabled on an access point. \u2022 You can't use an access point alias for S3 on Outposts control plane operations. For a list of S3 on\nOutposts control plane operations, see Amazon S3 Control API operations for managing buckets. \u2022 Aliases cannot be used in AWS Identity and Access Management (IAM) policies. Using a bucket-style alias for your access point API Version 2006-03-01 52\n\nAmazon S3 on Outposts User Guide\nViewing information about an access point configuration\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. The following topics show you how to return configuration information for an S3 on Outposts\naccess point by using the AWS Management Console, AWS Command Line Interface (AWS CLI), and\nAWS SDK for Java. Using the S3 console\n1.",
      "start_idx": 107007,
      "end_idx": 111928,
      "metadata": {
        "num_sentences": 13,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4224382547231821,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CLI Command",
              "Operational Limitation"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 on Outposts",
            "access point alias",
            "get-object operation",
            "bucket",
            "IAM policies",
            "virtual-host-style addressing",
            "Amazon S3 Control API",
            "access points",
            "Outposts bucket"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "S3 on Outposts",
            "IAM",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS CLI to perform a get-object operation on an S3 on Outposts bucket, along with limitations of access point aliases and guidance on accessing configuration information.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use an access point alias with AWS CLI for S3 on Outposts?",
            "What are the limitations of access point aliases in S3 on Outposts?",
            "How can I view configuration information for an S3 on Outposts access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "get-object operation",
          "Amazon S3 Control API",
          "Outposts bucket",
          "IAM policies",
          "access point alias",
          "virtual-host-style addressing",
          "S3 on Outposts",
          "bucket",
          "access points",
          "IAM",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_71",
      "text": "Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points. 3. Choose the Outposts access point that you want to view configuration details for. 4. Under Outposts access point overview, review the access point configuration details. Using the AWS CLI\nThe following AWS CLI example gets an access point for an Outposts bucket.",
      "start_idx": 111929,
      "end_idx": 113794,
      "metadata": {
        "num_sentences": 8,
        "num_words": 60,
        "chunk_type": "semantic_split",
        "coherence_score": 0.27807685307094027,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts access points",
            "AWS CLI",
            "access point configuration",
            "Outposts bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts access points",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Configuration Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides steps to view and configure Outposts access points in Amazon S3 using the AWS console and CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view configuration details for an Outposts access point in Amazon S3?",
            "What are the steps to use AWS CLI to get an Outposts bucket access point?",
            "Where can I find Outposts access points in the Amazon S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts bucket",
          "AWS CLI",
          "Outposts access points",
          "Amazon S3",
          "access point configuration",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_72",
      "text": "Replace the user\ninput placeholders with your own information. aws s3control get-access-point --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following SDK for Java example gets an access point for an Outposts bucket. import com.amazonaws.services.s3control.model. *;\npublic void getAccessPoint(String accessPointArn) {\nGetAccessPointRequest reqGetAP = new GetAccessPointRequest()\n.withAccountId(AccountId)\n.withName(accessPointArn);\nViewing access point configuration API Version 2006-03-01 53\n\nAmazon S3 on Outposts User Guide\nGetAccessPointResult respGetAP = s3ControlClient.getAccessPoint(reqGetAP);\nSystem.out.printf(\"GetAccessPoint Response: %s%n\", respGetAP.toString());\n}\nView a list of your Amazon S3 on Outposts access points\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. The following topics show you how to return a list of your S3 on Outposts access points by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Using the S3 console\n1.",
      "start_idx": 111929,
      "end_idx": 113794,
      "metadata": {
        "num_sentences": 9,
        "num_words": 189,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38468095991346574,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration",
              "API Usage"
            ]
          },
          "keywords": [
            "AWS S3Control",
            "access point",
            "Outposts bucket",
            "GetAccessPoint",
            "virtual-host-style addressing",
            "AWS SDK for Java",
            "API Version 2006-03-01",
            "Amazon S3",
            "PutObject",
            "GetObject"
          ],
          "entities": [
            "AWS S3Control",
            "Amazon S3 on Outposts",
            "Outposts bucket",
            "AWS SDK for Java",
            "GetAccessPoint API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS S3Control",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "S3 Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve an access point for an Amazon S3 on Outposts bucket using the AWS CLI and the AWS SDK for Java, including code examples and configuration details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an access point for an S3 Outposts bucket?",
            "What is the correct way to use the AWS SDK for Java with S3 on Outposts?",
            "What are the supported addressing styles for S3 Outposts access points?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS S3Control",
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "PutObject",
          "Outposts bucket",
          "GetObject",
          "GetAccessPoint API",
          "virtual-host-style addressing",
          "access point",
          "GetAccessPoint",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_73",
      "text": "Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points. 3. Under Outposts access points, review your list of S3 on Outposts access points. Using the AWS CLI\nThe following AWS CLI example lists the access points for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information. aws s3control list-access-points --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nUsing the AWS SDK for Java\nThe following SDK for Java example lists the access points for an Outposts bucket. import com.amazonaws.services.s3control.model. *;\npublic void listAccessPoints(String bucketArn) {\nListing access points API Version 2006-03-01 54\n\nAmazon S3 on Outposts User Guide\nListAccessPointsRequest reqListAPs = new ListAccessPointsRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nListAccessPointsResult respListAPs = s3ControlClient.listAccessPoints(reqListAPs);\nSystem.out.printf(\"ListAccessPoints Response: %s%n\", respListAPs.toString());\n}\nDeleting an access point\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing. The following examples show you how to delete an access point by using the AWS Management\nConsole and the AWS Command Line Interface (AWS CLI). Using the S3 console\n1.",
      "start_idx": 113795,
      "end_idx": 115517,
      "metadata": {
        "num_sentences": 15,
        "num_words": 224,
        "breakpoint_idx": 747,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31249000912620906,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "AWS CLI",
            "AWS SDK for Java",
            "ListAccessPointsRequest",
            "virtual-host-style addressing",
            "GetObject",
            "PutObject",
            "bucket ARN"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts bucket",
            "ListAccessPointsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Outposts",
            "Access Point Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for listing and deleting Amazon S3 access points on Outposts using the AWS CLI, AWS SDK for Java, and the AWS Management Console. It includes code examples and procedural steps for each method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list access points for an Outposts bucket using the AWS CLI?",
            "What is the process for deleting an access point in Amazon S3 on Outposts?",
            "How can I use the AWS SDK for Java to manage Outposts access points?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "bucket ARN",
          "PutObject",
          "Outposts bucket",
          "GetObject",
          "virtual-host-style addressing",
          "ListAccessPointsRequest",
          "access points",
          "Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_74",
      "text": "Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points. 3. In the Outposts access points section, choose the Outposts access point that you want to\ndelete. 4.",
      "start_idx": 115518,
      "end_idx": 115749,
      "metadata": {
        "num_sentences": 6,
        "num_words": 35,
        "breakpoint_idx": 753,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28298619588216145,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts access points",
            "delete",
            "console",
            "navigation pane"
          ],
          "entities": [
            "Amazon S3",
            "Outposts access points",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Point Configuration"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions on how to delete an Outposts access point using the Amazon S3 console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Outposts access point in Amazon S3?",
            "Where can I find the Outposts access points section in the AWS Management Console?",
            "What are the steps to manage Outposts access points?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "console",
          "AWS",
          "Outposts access points",
          "delete",
          "Amazon S3",
          "navigation pane"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_75",
      "text": "Choose Delete. 5. Confirm the deletion. Using the AWS CLI\nThe following AWS CLI example deletes an Outposts access point. To run this command, replace\nthe user input placeholders with your own information. aws s3control delete-access-point --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nDeleting an access point API Version 2006-03-01 55\n\nAmazon S3 on Outposts User Guide\nAdding or editing an access point policy\nAccess points have distinct permissions and network controls that Amazon S3 on Outposts\napplies for any request that is made through that access point. Each access point enforces a\ncustomized access point policy that works in conjunction with the bucket policy that is attached to\nthe underlying bucket. For more information, see Access points. The following topics show you how to add or edit the access point policy for your S3 on Outposts\naccess point by using the AWS Management Console, AWS Command Line Interface (AWS CLI), and\nAWS SDK for Java. Using the S3 console\n1.",
      "start_idx": 115750,
      "end_idx": 116837,
      "metadata": {
        "num_sentences": 10,
        "num_words": 160,
        "breakpoint_idx": 763,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.21501221126980252,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Execution",
              "Policy Management"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 on Outposts",
            "access point",
            "delete-access-point",
            "access point policy",
            "bucket policy",
            "permissions",
            "network controls",
            "API Version 2006-03-01",
            "AWS Management Console"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "Outposts",
            "access point policy",
            "bucket policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an access point for Amazon S3 on Outposts using the AWS CLI and manage access point policies through the console, CLI, or SDK.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an access point for S3 on Outposts using the AWS CLI?",
            "What permissions and policies are applied to S3 access points on Outposts?",
            "How can I manage access point policies for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "access point policy",
          "API Version 2006-03-01",
          "AWS Management Console",
          "delete-access-point",
          "bucket policy",
          "network controls",
          "access point",
          "S3 on Outposts",
          "Outposts",
          "Amazon S3",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_76",
      "text": "Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to edit the access point policy for. 4. Choose the Outposts access points tab. 5. In the Outposts access points section, choose the access point whose policy you want to edit,\nand choose Edit policy. 6. Add or edit the policy in the Outposts access point policy section. For more information, see\nSetting up IAM with S3 on Outposts. Using the AWS CLI\nThe following AWS CLI example puts a policy on an Outposts access point. 1.",
      "start_idx": 116838,
      "end_idx": 117431,
      "metadata": {
        "num_sentences": 14,
        "num_words": 101,
        "breakpoint_idx": 777,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2991556859278417,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts buckets",
            "access point policy",
            "IAM",
            "AWS CLI",
            "Edit policy",
            "Outposts access points",
            "S3 console",
            "policy",
            "AWS"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "IAM",
            "AWS CLI",
            "Outposts access points"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This document provides a step-by-step guide to editing the access point policy for an Amazon S3 Outposts bucket using the AWS Management Console or AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit an access point policy for an Amazon S3 Outposts bucket?",
            "What steps are required to configure IAM with S3 on Outposts?",
            "How can I use the AWS CLI to update an Outposts access point policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "access point policy",
          "Outposts buckets",
          "Outposts access points",
          "Edit policy",
          "policy",
          "AWS",
          "S3 console",
          "IAM",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_77",
      "text": "Save the following access point policy to a JSON file. In this example, the file is named\nappolicy1.json. Replace the user input placeholders with your own information. {\n\"Version\":\"2012-10-17\",\n\"Id\":\"exampleAccessPointPolicy\",\n\"Statement\":[\n{\n\"Sid\":\"st1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\nAdding an access point policy API Version 2006-03-01 56\n\nAmazon S3 on Outposts User Guide\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point\n}\n]\n}\n2. Submit the JSON file as part of the put-access-point-policy CLI command. Replace the\nuser input placeholders with your own information. aws s3control put-access-point-policy --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --policy file://appolicy1.json\nUsing the AWS SDK for Java\nThe following SDK for Java example puts a policy on an Outposts access point. import com.amazonaws.services.s3control.model. *;\npublic void putAccessPointPolicy(String accessPointArn) {\nString policy = \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"testAccessPointPolicy\\\",\n\\\"Statement\\\":[{\\\"Sid\\\":\\\"st1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"\" +\nAccountId + \"\\\"},\\\"Action\\\":\\\"s3-outposts:*\\\",\\\"Resource\\\":\\\"\" + accessPointArn +\n\"\\\"}]}\";\nPutAccessPointPolicyRequest reqPutAccessPointPolicy = new\nPutAccessPointPolicyRequest()\n.withAccountId(AccountId)\n.withName(accessPointArn)\n.withPolicy(policy);\nPutAccessPointPolicyResult respPutAccessPointPolicy =\ns3ControlClient.putAccessPointPolicy(reqPutAccessPointPolicy);\nSystem.out.printf(\"PutAccessPointPolicy Response: %s%n\",\nrespPutAccessPointPolicy.toString());\nprintWriter.printf(\"PutAccessPointPolicy Response: %s%n\",\nrespPutAccessPointPolicy.toString());\n}\nAdding an access point policy API Version 2006-03-01 57\n\nAmazon S3 on Outposts User Guide\nViewing an access point policy for an S3 on Outposts access point\nAccess points have distinct permissions and network controls that Amazon S3 on Outposts\napplies for any request that is made through that access point. Each access point enforces a\ncustomized access point policy that works in conjunction with the bucket policy that is attached to\nthe underlying bucket.",
      "start_idx": 117432,
      "end_idx": 119740,
      "metadata": {
        "num_sentences": 10,
        "num_words": 228,
        "breakpoint_idx": 787,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3049418131510417,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "access point policy",
            "JSON file",
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "PutAccessPointPolicyRequest",
            "s3-outposts",
            "bucket policy",
            "permissions"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "PutAccessPointPolicyRequest",
            "access point"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This document explains how to save, submit, and apply an access point policy for Amazon S3 on Outposts using JSON, AWS CLI, and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and apply an access point policy for Amazon S3 on Outposts?",
            "What is the JSON structure for an access point policy?",
            "How can I use the AWS SDK for Java to manage access point policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point policy",
          "PutAccessPointPolicyRequest",
          "Amazon S3 on Outposts",
          "JSON file",
          "bucket policy",
          "access point",
          "S3 on Outposts",
          "s3-outposts",
          "Outposts",
          "Amazon S3",
          "SDK for Java",
          "AWS SDK for Java",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_78",
      "text": "For more information, see Access points. For more information about working with access points in S3 on Outposts, see Working with S3 on\nOutposts buckets. The following topics show you how to view your S3 on Outposts access point policy by using the\nAWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Using the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points. 3. Choose the Outposts access point that you want to view the policy for.",
      "start_idx": 119741,
      "end_idx": 121855,
      "metadata": {
        "num_sentences": 9,
        "num_words": 93,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2898689905802409,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instruction"
            ]
          },
          "keywords": [
            "S3",
            "Outposts",
            "access points",
            "policy",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 console",
            "navigation pane",
            "Outposts buckets"
          ],
          "entities": [
            "Amazon S3",
            "Outposts access points",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view the access point policy for S3 on Outposts using the AWS Management Console, AWS CLI, and AWS SDK for Java, with step-by-step instructions for the S3 console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I view the S3 on Outposts access point policy?",
            "What tools can be used to manage S3 on Outposts access points?",
            "Where can I find instructions for using the Amazon S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "navigation pane",
          "AWS Management Console",
          "Outposts buckets",
          "Outposts access points",
          "access points",
          "policy",
          "Amazon S3 console",
          "S3",
          "Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_79",
      "text": "4. On the Permissions tab, review the S3 on Outposts access point policy. 5. To edit the access point policy, see Adding or editing an access point policy. Using the AWS CLI\nThe following AWS CLI example gets a policy for an Outposts access point. To run this command,\nreplace the user input placeholders with your own information. aws s3control get-access-point-policy --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a policy for an Outposts access point. import com.amazonaws.services.s3control.model. *;\npublic void getAccessPointPolicy(String accessPointArn) {\nGetAccessPointPolicyRequest reqGetAccessPointPolicy = new\nGetAccessPointPolicyRequest()\nViewing an access point policy API Version 2006-03-01 58\n\nAmazon S3 on Outposts User Guide\n.withAccountId(AccountId)\n.withName(accessPointArn);\nGetAccessPointPolicyResult respGetAccessPointPolicy =\ns3ControlClient.getAccessPointPolicy(reqGetAccessPointPolicy);\nSystem.out.printf(\"GetAccessPointPolicy Response: %s%n\",\nrespGetAccessPointPolicy.toString());\nprintWriter.printf(\"GetAccessPointPolicy Response: %s%n\",\nrespGetAccessPointPolicy.toString());\n}\nWorking with Amazon S3 on Outposts endpoints\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region.",
      "start_idx": 119741,
      "end_idx": 121855,
      "metadata": {
        "num_sentences": 10,
        "num_words": 179,
        "chunk_type": "semantic_split",
        "coherence_score": 0.23584440019395617,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Permissions tab",
            "S3 on Outposts",
            "access point policy",
            "AWS CLI",
            "AWS SDK for Java",
            "GetAccessPointPolicy",
            "Outposts endpoint",
            "service link",
            "account ID",
            "region"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts access point",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 on Outposts",
          "secondary_categories": [
            "AWS CLI Usage",
            "AWS SDK for Java"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to review, edit, and retrieve policies for Amazon S3 on Outposts access points using AWS CLI and AWS SDK for Java, along with details on creating Outposts endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an access point policy using AWS CLI?",
            "What is the process to edit an access point policy for S3 on Outposts?",
            "How do I configure an Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 on Outposts]",
        "tf_idf_keywords": [
          "access point policy",
          "API Version 2006-03-01",
          "GetAccessPointPolicy",
          "account ID",
          "region",
          "Outposts access point",
          "Permissions tab",
          "service link",
          "S3 on Outposts",
          "Outposts endpoint",
          "Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_80",
      "text": "Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations.",
      "start_idx": 121856,
      "end_idx": 122125,
      "metadata": {
        "num_sentences": 3,
        "num_words": 42,
        "breakpoint_idx": 809,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.5061280727386475,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "VPC",
            "Outpost",
            "endpoint",
            "S3",
            "buckets",
            "object operations",
            "network requirements",
            "endpoint quotas",
            "virtual private cloud",
            "access"
          ],
          "entities": [
            "VPC",
            "Outpost",
            "S3",
            "endpoint quotas",
            "buckets"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Services"
          ],
          "mentioned_services": [
            "S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "Each VPC on an Outpost can have one endpoint, which is required to access Outposts buckets and perform object operations. Endpoint quotas and network requirements should be considered.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of an endpoint in an Outpost VPC?",
            "How do I access my Outposts buckets?",
            "What are the endpoint quotas for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC",
          "access",
          "object operations",
          "network requirements",
          "endpoint quotas",
          "endpoint",
          "Outpost",
          "buckets",
          "Outposts",
          "S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_81",
      "text": "For more information, see Endpoints. After you create an endpoint, you can use the \u2018Status\u2019 field, to understand the state of the\nendpoint. If your Outposts is offline, it will return a CREATE_FAILED. You can check your service link\nconnection, delete the endpoint, and retry the create operation after your connection has resumed. For a list of additional error codes, see below. For more information, see Endpoints. API Status Failed Reason Error Message - Failed Reason\nCode\nCreateEnd Create_Fa OutpostNotReachable Endpoint could not be created as\npoint iled the service link connection to your\nOutposts home Region is down. Check\nyour connection, delete the endpoint,\nand try again. CreateEnd Create_Fa InternalError Endpoint could not be created due\npoint iled to Internal Error. Please delete the\nendpoint and create again.",
      "start_idx": 122126,
      "end_idx": 128212,
      "metadata": {
        "num_sentences": 10,
        "num_words": 129,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39094323052300345,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "API Behavior"
            ]
          },
          "keywords": [
            "endpoint",
            "Outposts",
            "CREATE_FAILED",
            "service link connection",
            "error codes",
            "InternalError",
            "Failed Reason",
            "Status field",
            "retry",
            "delete operation"
          ],
          "entities": [
            "Endpoints",
            "Outposts",
            "CREATE_FAILED",
            "InternalError",
            "Failed Reason Code"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Error Handling",
            "API Management"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to understand the state of an endpoint and handle errors such as CREATE_FAILED when using Outposts. It provides guidance on troubleshooting service link connection issues and retrying operations.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What does the CREATE_FAILED error mean for an endpoint?",
            "How can I troubleshoot a failed endpoint creation in Outposts?",
            "What are the possible error codes for endpoint creation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "error codes",
          "Status field",
          "Failed Reason",
          "retry",
          "Failed Reason Code",
          "service link connection",
          "delete operation",
          "CREATE_FAILED",
          "endpoint",
          "Outposts",
          "InternalError",
          "Endpoints"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_82",
      "text": "Working with endpoints API Version 2006-03-01 59\n\nAmazon S3 on Outposts User Guide\nAPI Status Failed Reason Error Message - Failed Reason\nCode\nDeleteEnd Delete_Fa OutpostNotReachable Endpoint could not be deleted as\npoint iled the service link connection to your\nOutposts home Region is down. Check\nyour connection and please try again. DeleteEnd Delete_Fa InternalError Endpoint could not be deleted due to\npoint iled Internal Error. Please try again. For more information about working with buckets on S3 on Outposts, see Working with S3 on\nOutposts buckets. The following sections describe how to create and manage endpoints for S3 on Outposts. Topics\n\u2022 Creating an endpoint on an Outpost\n\u2022 Viewing a list of your Amazon S3 on Outposts endpoints\n\u2022 Deleting an Amazon S3 on Outposts endpoint\nCreating an endpoint on an Outpost\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements.",
      "start_idx": 122126,
      "end_idx": 128212,
      "metadata": {
        "num_sentences": 10,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.365714348687066,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Error Handling",
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "endpoint",
            "service link",
            "home region",
            "VPC",
            "InternalError",
            "OutpostNotReachable",
            "network requirements",
            "bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "VPC",
            "InternalError",
            "OutpostNotReachable"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines how to create and manage endpoints for Amazon S3 on Outposts, including error handling for failed endpoint deletions and configuration requirements for successful operation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for Amazon S3 on Outposts?",
            "What are the reasons for endpoint deletion failure in S3 on Outposts?",
            "What are the network requirements for configuring endpoints on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "VPC",
          "home region",
          "OutpostNotReachable",
          "network requirements",
          "service link",
          "endpoint",
          "bucket",
          "Outposts",
          "InternalError",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_83",
      "text": "You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints. Permissions\nFor more information about the permissions that are required to create an endpoint, see\nPermissions for S3 on Outposts endpoints. When you create an endpoint, S3 on Outposts also creates a service-linked role in your AWS\naccount. For more information, see Using service-linked roles for Amazon S3 on Outposts. Creating an endpoint API Version 2006-03-01 60\n\nAmazon S3 on Outposts User Guide\nThe following examples show you how to create an S3 on Outposts endpoint by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Using the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points.",
      "start_idx": 122126,
      "end_idx": 128212,
      "metadata": {
        "num_sentences": 10,
        "num_words": 146,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3627815246582031,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Permissions Information"
            ]
          },
          "keywords": [
            "endpoint",
            "Outposts",
            "S3",
            "permissions",
            "service-linked role",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts access points",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Service-Linked Roles"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an endpoint for accessing Amazon S3 on Outposts buckets, including details on permissions and tools like AWS CLI and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What permissions are required to create an S3 on Outposts endpoint?",
            "How do you create an endpoint using the AWS Management Console?",
            "What is the role of service-linked roles in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "API Version 2006-03-01",
          "Service-Linked Roles",
          "AWS Management Console",
          "Outposts access points",
          "service-linked role",
          "Amazon S3 console",
          "endpoint",
          "S3",
          "Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_84",
      "text": "3. Choose the Outposts endpoints tab. 4. Choose Create Outposts endpoint. 5. Under Outpost, choose the Outpost to create this endpoint on. 6. Under VPC, choose a VPC that does not yet have an endpoint and that also complies with the\nrules for Outposts endpoints. A virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.",
      "start_idx": 122126,
      "end_idx": 128212,
      "metadata": {
        "num_sentences": 10,
        "num_words": 90,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29483150906032984,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Outposts",
            "endpoints",
            "VPC",
            "virtual private cloud",
            "AWS resources",
            "virtual network",
            "data center",
            "scalable infrastructure",
            "Create Outposts endpoint",
            "rules for Outposts endpoints"
          ],
          "entities": [
            "Outposts",
            "VPC",
            "AWS",
            "Outposts endpoint",
            "virtual network"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Outposts",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to creating an Outposts endpoint on a specific VPC, explaining the role of a virtual private cloud in AWS infrastructure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Outposts endpoint?",
            "What are the requirements for a VPC to be used with Outposts endpoints?",
            "What is the purpose of a virtual private cloud (VPC) in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "VPC",
          "endpoints",
          "rules for Outposts endpoints",
          "virtual network",
          "AWS",
          "AWS resources",
          "Outposts endpoint",
          "Outposts",
          "Create Outposts endpoint",
          "scalable infrastructure",
          "virtual private cloud",
          "data center"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_85",
      "text": "If you don\u2019t have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide. 7. Choose Create Outposts endpoint. Using the AWS CLI\nExample\nThe following AWS CLI example creates an endpoint for an Outpost by using the VPC resource\naccess type. The VPC is derived from the subnet. To run this command, replace the user input\nplaceholders with your own information. aws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1\nThe following AWS CLI example creates an endpoint for an Outpost by using the customer-\nowned IP address pool (CoIP pool) access type. To run this command, replace the user input\nplaceholders with your own information. Creating an endpoint API Version 2006-03-01 61\n\nAmazon S3 on Outposts User Guide\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1 --access-type CustomerOwnedIp --\ncustomer-owned-ipv4-pool ipv4pool-coip-12345678901234567\nUsing the AWS SDK for Java\nExample\nThe following SDK for Java example creates an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information. import com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointRequest;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointResult;\npublic void createEndpoint() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nCreateEndpointRequest createEndpointRequest = new CreateEndpointRequest()\n.withOutpostId(\"op-0d79779cef3c30a40\")\n.withSubnetId(\"subnet-8c7a57c5\")\n.withSecurityGroupId(\"sg-ab19e0d1\")\n.withAccessType(\"CustomerOwnedIp\")\n.withCustomerOwnedIpv4Pool(\"ipv4pool-coip-12345678901234567\");\n// Use .withAccessType and .withCustomerOwnedIpv4Pool only when the access type is\n// customer-owned IP address pool (CoIP pool)\nCreateEndpointResult createEndpointResult =\ns3OutpostsClient.createEndpoint(createEndpointRequest);\nSystem.out.println(\"Endpoint is created and its ARN is \" +\ncreateEndpointResult.getEndpointArn());\n}\nViewing a list of your Amazon S3 on Outposts endpoints\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region.",
      "start_idx": 122126,
      "end_idx": 128212,
      "metadata": {
        "num_sentences": 13,
        "num_words": 293,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24032113490960536,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "VPC",
            "Outpost",
            "endpoint",
            "AWS CLI",
            "CoIP pool",
            "Amazon S3",
            "SDK for Java",
            "access point",
            "security group",
            "subnet"
          ],
          "entities": [
            "Amazon S3",
            "Outpost",
            "AWS CLI",
            "VPC",
            "SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and configure an Amazon S3 on Outposts endpoint using the AWS CLI and SDK for Java, including examples for both VPC and CoIP pool access types.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an Amazon S3 on Outposts endpoint using the AWS CLI?",
            "What is the process for setting up an endpoint with a customer-owned IP address pool?",
            "How can I use the SDK for Java to configure an S3 on Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "VPC",
          "security group",
          "CoIP pool",
          "access point",
          "endpoint",
          "Outpost",
          "subnet",
          "Amazon S3",
          "SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_86",
      "text": "Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nListing endpoints API Version 2006-03-01 62\n\nAmazon S3 on Outposts User Guide\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints. The following examples show you how to return a list of your S3 on Outposts endpoints by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Using the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points.",
      "start_idx": 128213,
      "end_idx": 130519,
      "metadata": {
        "num_sentences": 9,
        "num_words": 114,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30432841512891984,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Access"
            ]
          },
          "keywords": [
            "VPC",
            "Outpost",
            "endpoint",
            "S3",
            "AWS CLI",
            "AWS SDK",
            "Java",
            "bucket",
            "object operations",
            "API"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Storage",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure endpoints for accessing Amazon S3 buckets on Outposts and provides examples using the AWS Management Console, CLI, and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for my Outposts VPC?",
            "What tools can I use to list S3 on Outposts endpoints?",
            "What are the network requirements for accessing Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "bucket",
          "VPC",
          "AWS Management Console",
          "AWS SDK",
          "API",
          "object operations",
          "endpoint",
          "Outpost",
          "S3",
          "Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_87",
      "text": "3. On the Outposts access points page, choose the Outposts endpoints tab. 4. Under Outposts endpoints, you can view a list of your S3 on Outposts endpoints. Using the AWS CLI\nThe following AWS CLI example lists the endpoints for the AWS Outposts resources that are\nassociated with your account. For more information about this command, see list-endpoints in the\nAWS CLI Reference. aws s3outposts list-endpoints\nUsing the AWS SDK for Java\nThe following SDK for Java example lists the endpoints for an Outpost. For more information, see\nListEndpoints in the Amazon Simple Storage Service API Reference. import com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.ListEndpointsRequest;\nimport com.amazonaws.services.s3outposts.model.ListEndpointsResult;\npublic void listEndpoints() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nListEndpointsRequest listEndpointsRequest = new ListEndpointsRequest();\nListEndpointsResult listEndpointsResult =\ns3OutpostsClient.listEndpoints(listEndpointsRequest);\nSystem.out.println(\"List endpoints result is \" + listEndpointsResult);\n}\nListing endpoints API Version 2006-03-01 63\n\nAmazon S3 on Outposts User Guide\nDeleting an Amazon S3 on Outposts endpoint\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region.",
      "start_idx": 128213,
      "end_idx": 130519,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32022137112087673,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Outposts endpoints",
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 on Outposts",
            "ListEndpointsRequest",
            "ListEndpointsResult",
            "access point",
            "endpoint creation",
            "service link",
            "API Version 2006-03-01"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 on Outposts",
            "AmazonS3OutpostsClientBuilder",
            "ListEndpointsRequest",
            "ListEndpointsResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Storage Services",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for listing and managing endpoints for Amazon S3 on Outposts using AWS CLI and AWS SDK for Java, including code examples and prerequisites for endpoint creation.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list S3 on Outposts endpoints using AWS CLI?",
            "What is the Java SDK code example for listing Outposts endpoints?",
            "What prerequisites are needed to create an S3 on Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "AmazonS3OutpostsClientBuilder",
          "ListEndpointsRequest",
          "endpoint creation",
          "access point",
          "service link",
          "ListEndpointsResult",
          "AWS SDK for Java",
          "AWS CLI",
          "Outposts endpoints"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_88",
      "text": "Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints. The following examples show you how to delete your S3 on Outposts endpoints by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java. Using the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts access points. 3. On the Outposts access points page, choose the Outposts endpoints tab.",
      "start_idx": 130520,
      "end_idx": 140213,
      "metadata": {
        "num_sentences": 11,
        "num_words": 111,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28927914012562145,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Configuration"
            ]
          },
          "keywords": [
            "VPC",
            "Outposts",
            "endpoint",
            "S3",
            "AWS CLI",
            "AWS SDK",
            "object operations",
            "Amazon S3 console",
            "access points",
            "network requirements"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Storage",
            "Networking"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete S3 on Outposts endpoints using the AWS Management Console, AWS CLI, and AWS SDK for Java, and provides navigation instructions for the Amazon S3 console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an S3 on Outposts endpoint?",
            "What are the steps to access Outposts buckets?",
            "Where can I find endpoint quotas for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "VPC",
          "AWS Management Console",
          "AWS SDK",
          "access points",
          "object operations",
          "network requirements",
          "S3 on Outposts",
          "Amazon S3 console",
          "endpoint",
          "S3",
          "Outposts",
          "Amazon S3",
          "AWS SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_89",
      "text": "4. Under Outposts endpoints, choose the endpoint that you want to delete, and choose Delete. Using the AWS CLI\nThe following AWS CLI example deletes an endpoint for an Outpost. To run this command, replace\nthe user input placeholders with your own information. aws s3outposts delete-endpoint --endpoint-id example-endpoint-id --outpost-\nid op-01ac5d28a6a232904\nUsing the AWS SDK for Java\nThe following SDK for Java example deletes an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information. import com.amazonaws.arn.Arn;\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.DeleteEndpointRequest;\npublic void deleteEndpoint(String endpointArnInput) {\nString outpostId = \"op-01ac5d28a6a232904\";\nDeleting an endpoint API Version 2006-03-01 64\n\nAmazon S3 on Outposts User Guide\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nArn endpointArn = Arn.fromString(endpointArnInput);\nString[] resourceParts = endpointArn.getResource().getResource().split(\"/\");\nString endpointId = resourceParts[resourceParts.length - 1];\nDeleteEndpointRequest deleteEndpointRequest = new DeleteEndpointRequest()\n.withEndpointId(endpointId)\n.withOutpostId(outpostId);\ns3OutpostsClient.deleteEndpoint(deleteEndpointRequest);\nSystem.out.println(\"Endpoint with id \" + endpointId + \" is deleted. \");\n}\nDeleting an endpoint API Version 2006-03-01 65\n\nAmazon S3 on Outposts User Guide\nWorking with S3 on Outposts objects\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging.",
      "start_idx": 130520,
      "end_idx": 140213,
      "metadata": {
        "num_sentences": 11,
        "num_words": 284,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3087850744074041,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line",
              "SDK",
              "Code Example"
            ]
          },
          "keywords": [
            "AWS Outposts",
            "S3 Outposts",
            "delete endpoint",
            "endpoint ID",
            "Outpost ID",
            "Amazon S3 APIs",
            "access point",
            "virtual private cloud",
            "data residency",
            "AWS CLI"
          ],
          "entities": [
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 Outposts",
            "DeleteEndpointRequest",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3 Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AmazonS3OutpostsClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an endpoint for an AWS Outpost using the AWS CLI and AWS SDK for Java, including code examples and API usage details. It also provides an overview of Amazon S3 on Outposts and its features for local data storage and processing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an endpoint for an AWS Outpost using the AWS CLI?",
            "What is the process to delete an endpoint for an AWS Outpost using the AWS SDK for Java?",
            "What are the features of Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "VPC",
          "DeleteEndpointRequest",
          "data residency",
          "delete endpoint",
          "AWS CLI",
          "Amazon S3 Outposts",
          "access point",
          "Amazon S3 APIs",
          "S3 Outposts",
          "endpoint ID",
          "AWS SDK for Java",
          "Outpost ID",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_90",
      "text": "You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. Objects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. Object ARNs use the following format, which includes the AWS Region that the Outpost is homed\nto, AWS account ID, Outpost ID, bucket name, and object key:\narn:aws:s3-outposts:us-west-2:123456789012:outpost/ op-01ac5d28a6a232904/bucket/amzn-\ns3-demo-bucket1/object/myobject\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost.",
      "start_idx": 130520,
      "end_idx": 140213,
      "metadata": {
        "num_sentences": 11,
        "num_words": 245,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4685788934881037,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket",
            "access point",
            "ARN",
            "Outpost ID",
            "AWS Region",
            "object key",
            "data residency",
            "Outpost rack",
            "AWS Management Console"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDKs",
            "Outpost bucket",
            "AWS Region code"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "AWS Infrastructure"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts enables local storage of objects to meet data residency requirements, using buckets and access points for operations. It provides specific ARN formats for access points and objects tied to Outposts infrastructure.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How does Amazon S3 on Outposts meet data residency requirements?",
            "Why can't the AWS Management Console upload objects to Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Region code",
          "ARN",
          "data residency",
          "AWS Management Console",
          "AWS SDKs",
          "object key",
          "Outpost bucket",
          "AWS CLI",
          "access point",
          "S3 on Outposts",
          "bucket",
          "AWS Region",
          "Amazon S3",
          "Outpost ID",
          "Outpost rack"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_91",
      "text": "However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. API Version 2006-03-01 66\n\nAmazon S3 on Outposts User Guide\nTopics\n\u2022 Upload an object to an S3 on Outposts bucket\n\u2022 Copying an object in an Amazon S3 on Outposts bucket using the AWS SDK for Java\n\u2022 Getting an object from an Amazon S3 on Outposts bucket\n\u2022 Listing the objects in an Amazon S3 on Outposts bucket\n\u2022 Deleting objects in Amazon S3 on Outposts buckets\n\u2022 Using HeadBucket to determine if an S3 on Outposts bucket exists and you have access\npermissions\n\u2022 Performing and managing a multipart upload with the SDK for Java\n\u2022 Using presigned URLs for S3 on Outposts\n\u2022 Amazon S3 on Outposts with local Amazon EMR on Outposts\n\u2022 Authorization and authentication caching\nUpload an object to an S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. With Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost.",
      "start_idx": 130520,
      "end_idx": 140213,
      "metadata": {
        "num_sentences": 11,
        "num_words": 350,
        "chunk_type": "semantic_split",
        "coherence_score": 0.46059584184126423,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access points",
            "Outpost bucket",
            "AWS CLI",
            "AWS SDK",
            "multipart upload",
            "presigned URLs",
            "data residency",
            "ARN",
            "Outpost rack"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS Management Console",
            "Amazon EMR on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "Amazon EMR on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts for object storage and management, including access points, ARNs, and data residency requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object to an Amazon S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "Can I use the AWS Management Console to manage S3 on Outposts objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outpost rack",
          "Amazon S3 on Outposts",
          "data residency",
          "AWS SDK",
          "presigned URLs",
          "ARN",
          "AWS Management Console",
          "Outpost bucket",
          "Amazon EMR on Outposts",
          "access points",
          "AWS SDK for Java",
          "AWS CLI",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_92",
      "text": "However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. Upload an object API Version 2006-03-01 67\n\nAmazon S3 on Outposts User Guide\nThe following AWS CLI and AWS SDK for Java examples show you how to upload an object to an S3\non Outposts bucket by using an access point. AWS CLI\nExample\nThe following example puts an object named sample-object.xml into an S3 on Outposts\nbucket (s3-outposts:PutObject) by using the AWS CLI. To use this command, replace each\nuser input placeholder with your own information. For more information about this\ncommand, see put-object in the AWS CLI Reference. aws s3api put-object --bucket arn:aws:s3-\noutposts:Region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --key sample-object.xml --body sample-object.xml\nSDK for Java\nExample\nThe following example puts an object into an S3 on Outposts bucket by using the SDK for Java. To use this example, replace each user input placeholder with your own information. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ObjectMetadata;\nimport com.amazonaws.services.s3.model.PutObjectRequest;\nimport java.io.File;\npublic class PutObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString stringObjKeyName = \"*** String object key name ***\";\nString fileObjKeyName = \"*** File object key name ***\";\nString fileName = \"*** Path to file to upload ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nUpload an object API Version 2006-03-01 68\n\nAmazon S3 on Outposts User Guide\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Upload a text string as a new object. s3Client.putObject(accessPointArn, stringObjKeyName, \"Uploaded String\nObject\");\n// Upload a file as a new object with ContentType and title specified. PutObjectRequest request = new PutObjectRequest(accessPointArn,\nfileObjKeyName, new File(fileName));\nObjectMetadata metadata = new ObjectMetadata();\nmetadata.setContentType(\"plain/text\");\nmetadata.addUserMetadata(\"title\", \"someTitle\");\nrequest.setMetadata(metadata);\ns3Client.putObject(request);\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n}\nCopying an object in an Amazon S3 on Outposts bucket using\nthe AWS SDK for Java\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket.",
      "start_idx": 130520,
      "end_idx": 140213,
      "metadata": {
        "num_sentences": 13,
        "num_words": 391,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37628447703826123,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "SDK for Java",
            "PutObjectRequest",
            "ObjectMetadata",
            "access point",
            "bucket",
            "upload",
            "API Version 2006-03-01",
            "credentials"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "PutObjectRequest",
            "ObjectMetadata"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to upload objects to an Amazon S3 on Outposts bucket using AWS CLI and SDK for Java, including code examples and metadata configuration.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload objects to an Amazon S3 on Outposts bucket?",
            "What are the steps to use AWS CLI for uploading objects?",
            "How do I configure metadata while uploading files using SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "credentials",
          "ObjectMetadata",
          "upload",
          "access point",
          "bucket",
          "PutObjectRequest",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_93",
      "text": "You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\nCopying an object API Version 2006-03-01 69\n\nAmazon S3 on Outposts User Guide\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. With Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. The following example shows you how to copy an object in an S3 on Outposts bucket by using the\nAWS SDK for Java.",
      "start_idx": 140214,
      "end_idx": 149073,
      "metadata": {
        "num_sentences": 10,
        "num_words": 237,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4938286675347222,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "access points",
            "Outpost bucket",
            "ARN",
            "AWS Region",
            "data-residency",
            "REST API",
            "AWS CLI",
            "AWS SDK",
            "object operations",
            "Outpost rack"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Region",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Infrastructure",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use access points to interact with objects in an Amazon S3 on Outposts bucket, emphasizing data residency and available management tools such as AWS CLI and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use access points with S3 on Outposts?",
            "What is the ARN format for S3 on Outposts access points?",
            "How can I manage objects in an Outposts bucket without using the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "data-residency",
          "ARN",
          "AWS SDK",
          "Amazon S3 on Outposts",
          "AWS Management Console",
          "REST API",
          "Outpost bucket",
          "object operations",
          "access points",
          "AWS Region",
          "AWS SDK for Java",
          "AWS CLI",
          "Outpost rack"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_94",
      "text": "Using the AWS SDK for Java\nThe following S3 on Outposts example copies an object into a new object in the same bucket by\nusing the SDK for Java. To use this example, replace the user input placeholders with your\nown information. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.CopyObjectRequest;\npublic class CopyObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString sourceKey = \"*** Source object key ***\";\nString destinationKey = \"*** Destination object key ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Copy the object into a new object in the same bucket. Using the AWS SDK for Java API Version 2006-03-01 70\n\nAmazon S3 on Outposts User Guide\nCopyObjectRequest copyObjectRequest = new CopyObjectRequest(accessPointArn,\nsourceKey, accessPointArn, destinationKey);\ns3Client.copyObject(copyObjectRequest);\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n}\nGetting an object from an Amazon S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.",
      "start_idx": 140214,
      "end_idx": 149073,
      "metadata": {
        "num_sentences": 10,
        "num_words": 283,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37779244316948785,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "AWS SDK for Java",
            "Amazon S3",
            "S3 on Outposts",
            "access point ARN",
            "CopyObjectRequest",
            "AmazonServiceException",
            "SdkClientException",
            "object operations",
            "bucket",
            "access point alias"
          ],
          "entities": [
            "AWS SDK for Java",
            "Amazon S3",
            "S3 on Outposts",
            "CopyObjectRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to copy an object within the same Amazon S3 on Outposts bucket, including error handling and setup requirements.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I copy an object within the same S3 on Outposts bucket using Java?",
            "What are the error handling mechanisms for S3 operations in Java?",
            "What is the role of access points in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SdkClientException",
          "access point ARN",
          "AmazonServiceException",
          "object operations",
          "access point alias",
          "AmazonS3ClientBuilder",
          "S3 on Outposts",
          "bucket",
          "AWS SDK for Java",
          "CopyObjectRequest",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_95",
      "text": "The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. With Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. The following examples show you how to download (get) an object by using the AWS Command\nLine Interface (AWS CLI) and AWS SDK for Java. Getting an object API Version 2006-03-01 71\n\nAmazon S3 on Outposts User Guide\nUsing the AWS CLI\nThe following example gets an object named sample-object.xml from an S3 on Outposts\nbucket (s3-outposts:GetObject) by using the AWS CLI. To use this command, replace each\nuser input placeholder with your own information. For more information about this\ncommand, see get-object in the AWS CLI Reference.",
      "start_idx": 140214,
      "end_idx": 149073,
      "metadata": {
        "num_sentences": 10,
        "num_words": 234,
        "chunk_type": "semantic_split",
        "coherence_score": 0.377538087632921,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "ARN format",
            "AWS Region code",
            "Outpost ID",
            "access point name",
            "AWS CLI",
            "REST API",
            "AWS SDK",
            "get-object",
            "data-residency"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outpost",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the ARN format for S3 on Outposts access points and provides examples of using the AWS CLI and AWS SDK to manage objects stored locally on Outposts for data-residency compliance.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How do I get an object from an S3 on Outposts bucket using the AWS CLI?",
            "What tools can be used to manage objects in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Region code",
          "access point name",
          "data-residency",
          "AWS SDK",
          "ARN",
          "Amazon S3 on Outposts",
          "REST API",
          "AWS Management Console",
          "get-object",
          "AWS CLI",
          "ARN format",
          "S3 on Outposts",
          "Outpost",
          "Amazon S3",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_96",
      "text": "aws s3api get-object --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point --key testkey sample-object.xml\nUsing the AWS SDK for Java\nThe following S3 on Outposts example gets an object by using the SDK for Java. To use this\nexample, replace each user input placeholder with your own information. For more\ninformation, see GetObject in the Amazon Simple Storage Service API Reference. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\npublic class GetObject {\npublic static void main(String[] args) throws IOException {\nString accessPointArn = \"*** access point ARN ***\";\nString key = \"*** Object key ***\";\nS3Object fullObject = null, objectPortion = null, headerOverrideObject = null;\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\nGetting an object API Version 2006-03-01 72\n\nAmazon S3 on Outposts User Guide\n.build();\n// Get an object and print its contents. System.out.println(\"Downloading an object\");\nfullObject = s3Client.getObject(new GetObjectRequest(accessPointArn, key));\nSystem.out.println(\"Content-Type: \" +\nfullObject.getObjectMetadata().getContentType());\nSystem.out.println(\"Content: \");\ndisplayTextInputStream(fullObject.getObjectContent());\n// Get a range of bytes from an object and print the bytes. GetObjectRequest rangeObjectRequest = new GetObjectRequest(accessPointArn,\nkey)\n.withRange(0, 9);\nobjectPortion = s3Client.getObject(rangeObjectRequest);\nSystem.out.println(\"Printing bytes retrieved. \");\ndisplayTextInputStream(objectPortion.getObjectContent());\n// Get an entire object, overriding the specified response headers, and\nprint the object's content. ResponseHeaderOverrides headerOverrides = new ResponseHeaderOverrides()\n.withCacheControl(\"No-cache\")\n.withContentDisposition(\"attachment; filename=example.txt\");\nGetObjectRequest getObjectRequestHeaderOverride = new\nGetObjectRequest(accessPointArn, key)\n.withResponseHeaders(headerOverrides);\nheaderOverrideObject = s3Client.getObject(getObjectRequestHeaderOverride);\ndisplayTextInputStream(headerOverrideObject.getObjectContent());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n} finally {\n// To ensure that the network connection doesn't remain open, close any\nopen input streams. if (fullObject != null) {\nfullObject.close();\n}\nif (objectPortion != null) {\nobjectPortion.close();\nGetting an object API Version 2006-03-01 73\n\nAmazon S3 on Outposts User Guide\n}\nif (headerOverrideObject != null) {\nheaderOverrideObject.close();\n}\n}\n}\nprivate static void displayTextInputStream(InputStream input) throws IOException {\n// Read the text input stream one line at a time and display each line. BufferedReader reader = new BufferedReader(new InputStreamReader(input));\nString line = null;\nwhile ((line = reader.readLine()) != null) {\nSystem.out.println(line);\n}\nSystem.out.println();\n}\n}\nListing the objects in an Amazon S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket.",
      "start_idx": 140214,
      "end_idx": 149073,
      "metadata": {
        "num_sentences": 13,
        "num_words": 416,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35411966764009917,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "AWS S3",
            "Outposts",
            "GetObjectRequest",
            "AmazonS3ClientBuilder",
            "ResponseHeaderOverrides",
            "access point ARN",
            "object key",
            "SDK for Java",
            "object metadata",
            "range request"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "GetObjectRequest",
            "ResponseHeaderOverrides",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java example for retrieving objects from Amazon S3 on Outposts using the AWS SDK for Java, including handling metadata and byte ranges.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve objects from Amazon S3 on Outposts using Java?",
            "What is the process to handle response headers in an S3 GetObject request?",
            "How can I fetch a specific byte range from an object in S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "ResponseHeaderOverrides",
          "GetObjectRequest",
          "access point ARN",
          "AWS S3",
          "object key",
          "object metadata",
          "AmazonS3ClientBuilder",
          "range request",
          "Outposts",
          "SDK for Java",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_97",
      "text": "You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. Note\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS\ninstalls an Outpost rack, your data stays local to your Outpost to meet data-residency\nrequirements. Your objects never leave your Outpost and are not in an AWS Region. Because the AWS Management Console is hosted in-Region, you can't use the console\nListing objects API Version 2006-03-01 74\n\nAmazon S3 on Outposts User Guide\nto upload or manage objects in your Outpost. However, you can use the REST API, AWS\nCommand Line Interface (AWS CLI), and AWS SDKs to upload and manage your objects\nthrough your access points. The following examples show you how to list the objects in an S3 on Outposts bucket using the\nAWS CLI and AWS SDK for Java. Using the AWS CLI\nThe following example lists the objects in an S3 on Outposts bucket (s3-\noutposts:ListObjectsV2) by using the AWS CLI.",
      "start_idx": 149074,
      "end_idx": 153615,
      "metadata": {
        "num_sentences": 11,
        "num_words": 262,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5130693609064275,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access points",
            "ARN",
            "AWS CLI",
            "AWS SDK",
            "Outpost bucket",
            "data residency",
            "object operations",
            "REST API",
            "bucket-style alias"
          ],
          "entities": [
            "Amazon S3",
            "AWS Region",
            "Outpost ID",
            "AWS Management Console",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to access objects in an S3 on Outposts bucket using access points and provides examples for listing objects using AWS CLI and AWS SDK for Java. It clarifies the data residency requirements and the limitations of using the AWS Management Console for object management on Outposts.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I access objects in an S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "Can I use the AWS Management Console to manage objects on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "ARN",
          "data residency",
          "AWS SDK",
          "AWS Management Console",
          "Amazon S3 on Outposts",
          "REST API",
          "Outpost bucket",
          "AWS Region",
          "object operations",
          "bucket-style alias",
          "S3 on Outposts",
          "Outpost ID",
          "access points",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_98",
      "text": "To use this command, replace each user\ninput placeholder with your own information. For more information about this command, see\nlist-objects-v2 in the AWS CLI Reference. aws s3api list-objects-v2 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nNote\nWhen using this action with Amazon S3 on Outposts through the AWS SDKs, you provide\nthe Outposts access point ARN in place of the bucket name, in the following form:\narn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-Outposts-Access-Point. For more information about S3 on\nOutposts ARNs, see Resource ARNs for S3 on Outposts. Using the AWS SDK for Java\nThe following S3 on Outposts example lists objects in a bucket by using the SDK for Java. To use\nthis example, replace each user input placeholder with your own information. Important\nThis example uses ListObjectsV2, which is the latest revision of the ListObjects\nAPI operation. We recommend that you use this revised API operation for application\nListing objects API Version 2006-03-01 75\n\nAmazon S3 on Outposts User Guide\ndevelopment. For backward compatibility, Amazon S3 continues to support the prior\nversion of this API operation. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ListObjectsV2Request;\nimport com.amazonaws.services.s3.model.ListObjectsV2Result;\nimport com.amazonaws.services.s3.model.S3ObjectSummary;\npublic class ListObjectsV2 {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\nSystem.out.println(\"Listing objects\");\n// maxKeys is set to 2 to demonstrate the use of\n// ListObjectsV2Result.getNextContinuationToken()\nListObjectsV2Request req = new\nListObjectsV2Request().withBucketName(accessPointArn).withMaxKeys(2);\nListObjectsV2Result result;\ndo {\nresult = s3Client.listObjectsV2(req);\nfor (S3ObjectSummary objectSummary : result.getObjectSummaries()) {\nSystem.out.printf(\" - %s (size: %d)\\n\", objectSummary.getKey(),\nobjectSummary.getSize());\n}\n// If there are more than maxKeys keys in the bucket, get a\ncontinuation token\n// and list the next objects. Listing objects API Version 2006-03-01 76\n\nAmazon S3 on Outposts User Guide\nString token = result.getNextContinuationToken();\nSystem.out.println(\"Next Continuation Token: \" + token);\nreq.setContinuationToken(token);\n} while (result.isTruncated());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.",
      "start_idx": 149074,
      "end_idx": 153615,
      "metadata": {
        "num_sentences": 11,
        "num_words": 338,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34673933549360797,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3",
            "Outposts",
            "access point ARN",
            "ListObjectsV2",
            "SDK for Java",
            "ListObjectsV2Request",
            "ListObjectsV2Result",
            "continuation token",
            "API operation"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "Outposts access point ARN",
            "AWS SDK for Java",
            "ListObjectsV2 API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the ListObjectsV2 API with Amazon S3 on Outposts, including an example in Java for listing objects via an access point ARN.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I list objects in an Amazon S3 bucket on Outposts?",
            "What is the correct usage of the ListObjectsV2 API?",
            "How can I implement object listing using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts access point ARN",
          "AWS Outposts",
          "ListObjectsV2 API",
          "access point ARN",
          "API operation",
          "AWS SDK for Java",
          "AWS CLI",
          "ListObjectsV2Request",
          "Outposts",
          "ListObjectsV2",
          "ListObjectsV2Result",
          "SDK for Java",
          "continuation token",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_99",
      "text": "e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n}\nDeleting objects in Amazon S3 on Outposts buckets\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. With Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost.",
      "start_idx": 153616,
      "end_idx": 164425,
      "metadata": {
        "num_sentences": 11,
        "num_words": 231,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42164736661044033,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "bucket",
            "ARN",
            "AWS Region",
            "Outpost ID",
            "data residency",
            "object operations",
            "AWS Management Console"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Region",
            "Outpost ID",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete objects in Amazon S3 on Outposts, including details about access points, ARNs, and data residency requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete objects in an Amazon S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "Can I use the AWS Management Console to manage objects in an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "ARN",
          "data residency",
          "AWS Management Console",
          "object operations",
          "Outpost ID",
          "S3 on Outposts",
          "bucket",
          "access points",
          "Outposts",
          "AWS Region",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_100",
      "text": "However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points. Deleting objects API Version 2006-03-01 77\n\nAmazon S3 on Outposts User Guide\nThe following examples show you how to delete a single object or multiple objects in an S3 on\nOutposts bucket by using the AWS Command Line Interface (AWS CLI) and AWS SDK for Java. Using the AWS CLI\nThe following examples show you how to delete a single object or multiple objects from an S3 on\nOutposts bucket. delete-object\nThe following example deletes an object named sample-object.xml from an S3 on Outposts\nbucket (s3-outposts:DeleteObject) by using the AWS CLI. To use this command, replace\neach user input placeholder with your own information. For more information about this\ncommand, see delete-object in the AWS CLI Reference. aws s3api delete-object --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --key sample-object.xml\ndelete-objects\nThe following example deletes two objects named sample-object.xml and test1.text\nfrom an S3 on Outposts bucket (s3-outposts:DeleteObject) by using the AWS CLI. To use\nthis command, replace each user input placeholder with your own information. For more\ninformation about this command, see delete-objects in the AWS CLI Reference. aws s3api delete-objects --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --delete file://delete.json\ndelete.json\n{\n\"Objects\": [\n{\n\"Key\": \"test1.txt\"\n},\n{\n\"Key\": \"sample-object.xml\"\n}\n],\nDeleting objects API Version 2006-03-01 78\n\nAmazon S3 on Outposts User Guide\n\"Quiet\": false\n}\nUsing the AWS SDK for Java\nThe following examples show you how to delete a single object or multiple objects from an S3 on\nOutposts bucket. DeleteObject\nThe following S3 on Outposts example deletes an object in a bucket by using the SDK for Java.",
      "start_idx": 153616,
      "end_idx": 164425,
      "metadata": {
        "num_sentences": 11,
        "num_words": 283,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5272679415616122,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "REST API",
            "AWS CLI",
            "AWS SDKs",
            "S3 on Outposts",
            "delete-object",
            "delete-objects",
            "access points",
            "delete.json",
            "DeleteObject",
            "Java SDK"
          ],
          "entities": [
            "AWS Command Line Interface",
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts bucket",
            "delete-object API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Object Storage Management",
          "secondary_categories": [
            "Cloud Computing",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of how to delete single or multiple objects from an Amazon S3 on Outposts bucket using AWS CLI and AWS SDK for Java, including relevant commands and JSON file structures.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete objects from an S3 on Outposts bucket using AWS CLI?",
            "What is the JSON structure required for deleting multiple objects in AWS CLI?",
            "How can I use AWS SDK for Java to delete objects from an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Object Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Java SDK",
          "delete-object",
          "delete.json",
          "REST API",
          "AWS SDKs",
          "AWS SDK for Java",
          "Outposts bucket",
          "delete-objects",
          "delete-object API",
          "S3 on Outposts",
          "access points",
          "AWS Command Line Interface",
          "DeleteObject",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_101",
      "text": "To use this example, specify the access point ARN for the Outpost and the key name for the\nobject that you want to delete. For more information, see DeleteObject in the Amazon Simple\nStorage Service API Reference. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.DeleteObjectRequest;\npublic class DeleteObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString keyName = \"*** key name ****\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\ns3Client.deleteObject(new DeleteObjectRequest(accessPointArn, keyName));\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. Deleting objects API Version 2006-03-01 79\n\nAmazon S3 on Outposts User Guide\ne.printStackTrace();\n}\n}\n}\nDeleteObjects\nThe following S3 on Outposts example uploads and then deletes objects in a bucket by using\nthe SDK for Java. To use this example, specify the access point ARN for the Outpost. For more\ninformation, see DeleteObjects in the Amazon Simple Storage Service API Reference. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.DeleteObjectsRequest;\nimport com.amazonaws.services.s3.model.DeleteObjectsRequest.KeyVersion;\nimport com.amazonaws.services.s3.model.DeleteObjectsResult;\nimport java.util.ArrayList;\npublic class DeleteObjects {\npublic static void main(String[] args) {\nString accessPointArn = \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Upload three sample objects. ArrayList<KeyVersion> keys = new ArrayList<KeyVersion>();\nfor (int i = 0; i < 3; i++) {\nString keyName = \"delete object example \" + i;\ns3Client.putObject(accessPointArn, keyName, \"Object number \" + i + \"\nto be deleted. \");\nDeleting objects API Version 2006-03-01 80\n\nAmazon S3 on Outposts User Guide\nkeys.add(new KeyVersion(keyName));\n}\nSystem.out.println(keys.size() + \" objects successfully created. \");\n// Delete the sample objects.",
      "start_idx": 153616,
      "end_idx": 164425,
      "metadata": {
        "num_sentences": 11,
        "num_words": 334,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44556184248490766,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "access point ARN",
            "Amazon S3",
            "Outposts",
            "DeleteObjectRequest",
            "DeleteObjectsRequest",
            "AWS SDK for Java",
            "credentials",
            "KeyVersion",
            "delete objects",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts",
            "DeleteObjectRequest",
            "DeleteObjectsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides Java code examples for deleting objects from Amazon S3 on Outposts using the AWS SDK for Java, including setup instructions and error handling.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete objects from Amazon S3 on Outposts using Java?",
            "What are the error handling best practices for deleting objects in Amazon S3?",
            "How do I set up AWS credentials for the SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteObjectRequest",
          "API Version 2006-03-01",
          "DeleteObjectsRequest",
          "credentials",
          "delete objects",
          "KeyVersion",
          "access point ARN",
          "Outposts",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_102",
      "text": "DeleteObjectsRequest multiObjectDeleteRequest = new\nDeleteObjectsRequest(accessPointArn)\n.withKeys(keys)\n.withQuiet(false);\n// Verify that the objects were deleted successfully. DeleteObjectsResult delObjRes =\ns3Client.deleteObjects(multiObjectDeleteRequest);\nint successfulDeletes = delObjRes.getDeletedObjects().size();\nSystem.out.println(successfulDeletes + \" objects successfully\ndeleted. \");\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n}\nUsing HeadBucket to determine if an S3 on Outposts bucket\nexists and you have access permissions\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point. The following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\nUsing HeadBucket API Version 2006-03-01 81\n\nAmazon S3 on Outposts User Guide\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts. Note\nWith Amazon S3 on Outposts, object data is always stored on the Outpost.",
      "start_idx": 153616,
      "end_idx": 164425,
      "metadata": {
        "num_sentences": 11,
        "num_words": 255,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3689756220037287,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "ErrorHandling",
              "APIUsage"
            ]
          },
          "keywords": [
            "DeleteObjectsRequest",
            "DeleteObjectsResult",
            "Amazon S3",
            "Outposts",
            "access point ARN",
            "HeadBucket",
            "bucket",
            "AWS Region",
            "SDK",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "DeleteObjectsRequest",
            "HeadBucket API",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete multiple objects in an Amazon S3 on Outposts bucket using the AWS SDK, handle potential errors, and verify successful deletions. It also covers determining bucket existence and access permissions using the HeadBucket API.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete multiple objects in an S3 on Outposts bucket?",
            "What is the ARN format for an S3 on Outposts access point?",
            "How can I handle errors when interacting with Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket",
          "AWS Outposts",
          "ARN",
          "DeleteObjectsRequest",
          "HeadBucket",
          "SDK",
          "access point ARN",
          "AmazonServiceException",
          "DeleteObjectsResult",
          "Outposts",
          "AWS Region",
          "HeadBucket API",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_103",
      "text": "When AWS\ninstalls an Outpost rack, your data stays local to your Outpost to meet data-residency\nrequirements. Your objects never leave your Outpost and are not in an AWS Region. Because the AWS Management Console is hosted in-Region, you can't use the console\nto upload or manage objects in your Outpost. However, you can use the REST API, AWS\nCommand Line Interface (AWS CLI), and AWS SDKs to upload and manage your objects\nthrough your access points. The following AWS Command Line Interface (AWS CLI) and AWS SDK for Java examples show\nyou how to use the HeadBucket API operation to determine if an Amazon S3 on Outposts bucket\nexists and whether you have permission to access it. For more information, see HeadBucket in the\nAmazon Simple Storage Service API Reference. Using the AWS CLI\nThe following S3 on Outposts AWS CLI example uses the head-bucket command to determine\nif a bucket exists and you have permissions to access it. To use this command, replace each user\ninput placeholder with your own information. For more information about this command, see\nhead-bucket in the AWS CLI Reference. aws s3api head-bucket --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following S3 on Outposts example shows how to determine if a bucket exists and if you have\npermission to access it. To use this example, specify the access point ARN for the Outpost. For more\ninformation, see HeadBucket in the Amazon Simple Storage Service API Reference. import com.amazonaws.AmazonServiceException;\nUsing HeadBucket API Version 2006-03-01 82\n\nAmazon S3 on Outposts User Guide\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.HeadBucketRequest;\npublic class HeadBucket {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\ns3Client.headBucket(new HeadBucketRequest(accessPointArn));\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.",
      "start_idx": 153616,
      "end_idx": 164425,
      "metadata": {
        "num_sentences": 14,
        "num_words": 361,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38911530211731626,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS Outposts",
            "data residency",
            "HeadBucket API",
            "Amazon S3",
            "access point ARN",
            "AWS CLI",
            "AWS SDK for Java",
            "head-bucket command",
            "AmazonServiceException",
            "SdkClientException"
          ],
          "entities": [
            "AWS Outposts",
            "Amazon S3",
            "HeadBucket API",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI and AWS SDK for Java to determine if an Amazon S3 on Outposts bucket exists and whether you have access permissions using the HeadBucket API operation.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I check if an Amazon S3 on Outposts bucket exists?",
            "What tools can I use to manage Amazon S3 on Outposts buckets?",
            "What is the HeadBucket API used for?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "AWS Management Console",
          "data residency",
          "SdkClientException",
          "access point ARN",
          "AmazonServiceException",
          "AWS CLI",
          "head-bucket command",
          "HeadBucket API",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_104",
      "text": "e.printStackTrace();\n}\n}\n}\nPerforming and managing a multipart upload with the SDK for\nJava\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts resources and\nstore and retrieve objects on-premises for applications that require local data access, local data\nprocessing, and data residency. You can use S3 on Outposts through the AWS Management\nConsole, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information,\nsee What is Amazon S3 on Outposts? The following examples show how you can use S3 on Outposts with the AWS SDK for Java to\nperform and manage a multipart upload. Performing a multipart upload API Version 2006-03-01 83\n\nAmazon S3 on Outposts User Guide\nTopics\n\u2022 Perform a multipart upload of an object in an S3 on Outposts bucket\n\u2022 Copy a large object in an S3 on Outposts bucket by using multipart upload\n\u2022 List parts of an object in an S3 on Outposts bucket\n\u2022 Retrieve a list of in-progress multipart uploads in an S3 on Outposts bucket\nPerform a multipart upload of an object in an S3 on Outposts bucket\nThe following S3 on Outposts example initiates, uploads, and finishes a multipart upload of an\nobject to a bucket by using the SDK for Java. To use this example, replace each user input\nplaceholder with your own information. For more information, see Uploading an object using\nmultipart upload in the Amazon Simple Storage Service User Guide. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model. *;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class MultipartUploadCopy {\npublic static void main(String[] args) {\nString accessPointArn = \"*** Source access point ARN ***\";\nString sourceObjectKey = \"*** Source object key ***\";\nString destObjectKey = \"*** Target object key ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Initiate the multipart upload. InitiateMultipartUploadRequest initRequest = new\nInitiateMultipartUploadRequest(accessPointArn, destObjectKey);\nPerform a multipart upload of an object in an S3 on Outposts bucket API Version 2006-03-01 84\n\nAmazon S3 on Outposts User Guide\nInitiateMultipartUploadResult initResult =\ns3Client.initiateMultipartUpload(initRequest);\n// Get the object size to track the end of the copy operation. GetObjectMetadataRequest metadataRequest = new\nGetObjectMetadataRequest(accessPointArn, sourceObjectKey);\nObjectMetadata metadataResult =\ns3Client.getObjectMetadata(metadataRequest);\nlong objectSize = metadataResult.getContentLength();\n// Copy the object using 5 MB parts.",
      "start_idx": 164426,
      "end_idx": 170681,
      "metadata": {
        "num_sentences": 11,
        "num_words": 390,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4567780928178267,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "multipart upload",
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts",
            "bucket",
            "object",
            "access point ARN",
            "metadata",
            "credentials",
            "copy operation"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "AWS Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform and manage multipart uploads in Amazon S3 on Outposts using the AWS SDK for Java, including initiating, uploading, and completing the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload using AWS SDK for Java?",
            "What is the process for uploading objects to an S3 on Outposts bucket?",
            "What are the prerequisites for initiating a multipart upload in Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "metadata",
          "credentials",
          "access point ARN",
          "copy operation",
          "object",
          "bucket",
          "Outposts",
          "AWS SDK for Java",
          "Amazon S3",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_105",
      "text": "long partSize = 5 * 1024 * 1024;\nlong bytePosition = 0;\nint partNum = 1;\nList<CopyPartResult> copyResponses = new ArrayList<CopyPartResult>();\nwhile (bytePosition < objectSize) {\n// The last part might be smaller than partSize, so check to make sure\n// that lastByte isn't beyond the end of the object. long lastByte = Math.min(bytePosition + partSize - 1, objectSize - 1);\n// Copy this part. CopyPartRequest copyRequest = new CopyPartRequest()\n.withSourceBucketName(accessPointArn)\n.withSourceKey(sourceObjectKey)\n.withDestinationBucketName(accessPointArn)\n.withDestinationKey(destObjectKey)\n.withUploadId(initResult.getUploadId())\n.withFirstByte(bytePosition)\n.withLastByte(lastByte)\n.withPartNumber(partNum++);\ncopyResponses.add(s3Client.copyPart(copyRequest));\nbytePosition += partSize;\n}\n// Complete the upload request to concatenate all uploaded parts and make\nthe copied object available. CompleteMultipartUploadRequest completeRequest = new\nCompleteMultipartUploadRequest(\naccessPointArn,\ndestObjectKey,\ninitResult.getUploadId(),\ngetETags(copyResponses));\ns3Client.completeMultipartUpload(completeRequest);\nSystem.out.println(\"Multipart copy complete. \");\nPerform a multipart upload of an object in an S3 on Outposts bucket API Version 2006-03-01 85\n\nAmazon S3 on Outposts User Guide\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n// This is a helper function to construct a list of ETags. private static List<PartETag> getETags(List<CopyPartResult> responses) {\nList<PartETag> etags = new ArrayList<PartETag>();\nfor (CopyPartResult response : responses) {\netags.add(new PartETag(response.getPartNumber(), response.getETag()));\n}\nreturn etags;\n}\nCopy a large object in an S3 on Outposts bucket by using multipart\nupload\nThe following S3 on Outposts example uses the SDK for Java to copy an object in a bucket. To use\nthis example, replace each user input placeholder with your own information. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model. *;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class MultipartUploadCopy {\npublic static void main(String[] args) {\nString accessPointArn = \"*** Source access point ARN ***\";\nString sourceObjectKey = \"*** Source object key ***\";\nString destObjectKey = \"*** Target object key ***\";\ntry {\nCopy a large object in an S3 on Outposts bucket by using multipart upload API Version 2006-03-01 86\n\nAmazon S3 on Outposts User Guide\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Initiate the multipart upload. InitiateMultipartUploadRequest initRequest = new\nInitiateMultipartUploadRequest(accessPointArn, destObjectKey);\nInitiateMultipartUploadResult initResult =\ns3Client.initiateMultipartUpload(initRequest);\n// Get the object size to track the end of the copy operation.",
      "start_idx": 164426,
      "end_idx": 170681,
      "metadata": {
        "num_sentences": 12,
        "num_words": 395,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3474932005911162,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "multipart upload",
            "Amazon S3",
            "Outposts bucket",
            "CopyPartRequest",
            "ETags",
            "AWS SDK for Java",
            "AmazonServiceException",
            "SdkClientException",
            "access point ARN",
            "object key"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS SDK for Java",
            "AmazonServiceException",
            "CopyPartRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java-based example for performing a multipart upload to copy a large object in an Amazon S3 on Outposts bucket, including error handling and helper functions for constructing ETags.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload to copy an object in S3 on Outposts?",
            "What is the process for handling errors during an S3 multipart upload?",
            "How do I use ETags to complete a multipart upload in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CopyPartRequest",
          "SdkClientException",
          "ETags",
          "Outposts bucket",
          "AmazonServiceException",
          "access point ARN",
          "object key",
          "S3 on Outposts",
          "AWS SDK for Java",
          "Amazon S3",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_106",
      "text": "GetObjectMetadataRequest metadataRequest = new\nGetObjectMetadataRequest(accessPointArn, sourceObjectKey);\nObjectMetadata metadataResult =\ns3Client.getObjectMetadata(metadataRequest);\nlong objectSize = metadataResult.getContentLength();\n// Copy the object using 5 MB parts. long partSize = 5 * 1024 * 1024;\nlong bytePosition = 0;\nint partNum = 1;\nList<CopyPartResult> copyResponses = new ArrayList<CopyPartResult>();\nwhile (bytePosition < objectSize) {\n// The last part might be smaller than partSize, so check to make sure\n// that lastByte isn't beyond the end of the object. long lastByte = Math.min(bytePosition + partSize - 1, objectSize - 1);\n// Copy this part. CopyPartRequest copyRequest = new CopyPartRequest()\n.withSourceBucketName(accessPointArn)\n.withSourceKey(sourceObjectKey)\n.withDestinationBucketName(accessPointArn)\n.withDestinationKey(destObjectKey)\n.withUploadId(initResult.getUploadId())\n.withFirstByte(bytePosition)\n.withLastByte(lastByte)\n.withPartNumber(partNum++);\ncopyResponses.add(s3Client.copyPart(copyRequest));\nbytePosition += partSize;\n}\nCopy a large object in an S3 on Outposts bucket by using multipart upload API Version 2006-03-01 87\n\nAmazon S3 on Outposts User Guide\n// Complete the upload request to concatenate all uploaded parts and make\nthe copied object available. CompleteMultipartUploadRequest completeRequest = new\nCompleteMultipartUploadRequest(\naccessPointArn,\ndestObjectKey,\ninitResult.getUploadId(),\ngetETags(copyResponses));\ns3Client.completeMultipartUpload(completeRequest);\nSystem.out.println(\"Multipart copy complete. \");\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n// This is a helper function to construct a list of ETags. private static List<PartETag> getETags(List<CopyPartResult> responses) {\nList<PartETag> etags = new ArrayList<PartETag>();\nfor (CopyPartResult response : responses) {\netags.add(new PartETag(response.getPartNumber(), response.getETag()));\n}\nreturn etags;\n}\n}\nList parts of an object in an S3 on Outposts bucket\nThe following S3 on Outposts example lists the parts of an object in a bucket by using the SDK for\nJava. To use this example, replace each user input placeholder with your own information.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 294,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2968797047932943,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "multipart upload",
            "CopyPartRequest",
            "CompleteMultipartUploadRequest",
            "AmazonServiceException",
            "SdkClientException",
            "ETags",
            "CopyPartResult",
            "bucket",
            "object metadata"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "CopyPartRequest",
            "CompleteMultipartUploadRequest",
            "Java SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 Multipart Upload",
          "secondary_categories": [
            "Cloud Storage",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example of copying a large object in an Amazon S3 on Outposts bucket using the multipart upload API with Java SDK, including error handling and ETag management.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I copy a large object in an S3 on Outposts bucket using multipart upload?",
            "What is the process for handling multipart uploads with the Java SDK?",
            "How can I manage ETags during a multipart upload in Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 Multipart Upload]",
        "tf_idf_keywords": [
          "CopyPartRequest",
          "Java SDK",
          "SdkClientException",
          "ETags",
          "AmazonServiceException",
          "object metadata",
          "CompleteMultipartUploadRequest",
          "S3 on Outposts",
          "bucket",
          "CopyPartResult",
          "Amazon S3",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_107",
      "text": "import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model. *;\nimport java.util.List;\nList parts of an object in an S3 on Outposts bucket API Version 2006-03-01 88\n\nAmazon S3 on Outposts User Guide\npublic class ListParts {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString keyName = \"*** Key name ***\";\nString uploadId = \"*** Upload ID ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\nListPartsRequest listPartsRequest = new ListPartsRequest(accessPointArn,\nkeyName, uploadId);\nPartListing partListing = s3Client.listParts(listPartsRequest);\nList<PartSummary> partSummaries = partListing.getParts();\nSystem.out.println(partSummaries.size() + \" multipart upload parts\");\nfor (PartSummary p : partSummaries) {\nSystem.out.println(\"Upload part: Part number = \\\"\" + p.getPartNumber()\n+ \"\\\", ETag = \" + p.getETag());\n}\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n}\nList parts of an object in an S3 on Outposts bucket API Version 2006-03-01 89\n\nAmazon S3 on Outposts User Guide\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts\nbucket\nThe following S3 on Outposts example shows how to retrieve a list of the in-progress multipart\nuploads from an Outposts bucket by using the SDK for Java. To use this example, replace each\nuser input placeholder with your own information. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ListMultipartUploadsRequest;\nimport com.amazonaws.services.s3.model.MultipartUpload;\nimport com.amazonaws.services.s3.model.MultipartUploadListing;\nimport java.util.List;\npublic class ListMultipartUploads {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Retrieve a list of all in-progress multipart uploads. ListMultipartUploadsRequest allMultipartUploadsRequest = new\nListMultipartUploadsRequest(accessPointArn);\nMultipartUploadListing multipartUploadListing =\ns3Client.listMultipartUploads(allMultipartUploadsRequest);\nList<MultipartUpload> uploads =\nmultipartUploadListing.getMultipartUploads();\n// Display information about all in-progress multipart uploads. System.out.println(uploads.size() + \" multipart upload(s) in progress. \");\nfor (MultipartUpload u : uploads) {\nSystem.out.println(\"Upload in progress: Key = \\\"\" + u.getKey() + \"\\\",\nid = \" + u.getUploadId());\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts bucket API Version 2006-03-01 90\n\nAmazon S3 on Outposts User Guide\n}\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 450,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4460484822591146,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "multipart upload",
            "ListPartsRequest",
            "PartListing",
            "ListMultipartUploadsRequest",
            "MultipartUploadListing",
            "AWS SDK for Java",
            "access point ARN",
            "AmazonS3ClientBuilder"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts bucket",
            "ListPartsRequest",
            "MultipartUploadListing"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for listing parts of an object and retrieving in-progress multipart uploads in an Amazon S3 on Outposts bucket using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list parts of an object in an Amazon S3 on Outposts bucket?",
            "How do I retrieve in-progress multipart uploads using the AWS SDK for Java?",
            "What is the process for using ListPartsRequest in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts bucket",
          "access point ARN",
          "AmazonS3ClientBuilder",
          "MultipartUploadListing",
          "PartListing",
          "ListPartsRequest",
          "Outposts",
          "ListMultipartUploadsRequest",
          "AWS SDK for Java",
          "Amazon S3",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_108",
      "text": "e.printStackTrace();\n}\n}\n}\nUsing presigned URLs for S3 on Outposts\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects. When you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works. Limiting presigned URL capabilities\nThe capabilities of a presigned URL are limited by the permissions of the user who created it. In\nessence, presigned URLs are bearer tokens that grant access to those who possess them. As such,\nwe recommend that you protect them appropriately. AWS Signature Version 4 (SigV4)\nTo enforce specific behavior when presigned URL requests are authenticated by using AWS\nSignature Version 4 (SigV4), you can use condition keys in bucket policies and access point policies.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 240,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3981586456298828,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Usage",
              "Security"
            ]
          },
          "keywords": [
            "presigned URL",
            "S3 on Outposts",
            "bucket policy",
            "AWS SDKs",
            "AWS CLI",
            "AWS Signature Version 4",
            "SigV4",
            "condition keys",
            "access point policies",
            "expiration time"
          ],
          "entities": [
            "AWS SDKs",
            "AWS CLI",
            "S3 on Outposts",
            "SigV4",
            "bucket policies"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Security"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use presigned URLs to grant time-limited access to S3 objects stored on AWS Outposts, including security considerations and usage with AWS Signature Version 4 (SigV4).",
          "intents": [
            "How-To",
            "Reference",
            "Security"
          ],
          "potential_questions": [
            "How do presigned URLs work with S3 on Outposts?",
            "What are the security considerations for using presigned URLs?",
            "What permissions are required to create a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "expiration time",
          "AWS Signature Version 4",
          "bucket policies",
          "SigV4",
          "bucket policy",
          "AWS SDKs",
          "condition keys",
          "S3 on Outposts",
          "access point policies",
          "presigned URL",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_109",
      "text": "For example, you can create a bucket policy that uses the s3-outposts:signatureAge condition\nto deny any Amazon S3 on Outposts presigned URL request on objects in the example-outpost-\nUsing presigned URLs API Version 2006-03-01 91\n\nAmazon S3 on Outposts User Guide\nbucket bucket if the signature is more than 10 minutes old. To use this example, replace the user\ninput placeholders with your own information. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny a presigned URL request if the signature is more than 10\nminutes old\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"444455556666\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"NumericGreaterThan\": {\"s3-outposts:signatureAge\": 600000},\n\"StringEquals\": {\"s3-outposts:authType\": \"REST-QUERY-STRING\"}\n}\n}\n]\n}\nFor a list of condition keys and additional example policies that you can use to enforce specific\nbehavior when presigned URL requests are authenticated by using Signature Version 4, see AWS\nSignature Version 4 (SigV4) authentication-specific policy keys. Network path restriction\nIf you want to restrict the use of presigned URLs and all S3 on Outposts access to particular\nnetwork paths, you can write policies that require a particular network path. To set the restriction\non the IAM principal that makes the call, you can use identity-based AWS Identity and Access\nManagement (IAM) policies (for example, user, group, or role policies). To set the restriction on the\nS3 on Outposts resource, you can use resource-based policies (for example, bucket and access point\npolicies). A network-path restriction on the IAM principal requires the user of those credentials to make\nrequests from the specified network. A restriction on the bucket or access point requires that\nall requests to that resource originate from the specified network. These restrictions also apply\noutside of the presigned URL scenario. Limiting presigned URL capabilities API Version 2006-03-01 92\n\nAmazon S3 on Outposts User Guide\nThe IAM global condition that you use depends on the type of endpoint.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 308,
        "chunk_type": "semantic_split",
        "coherence_score": 0.38591185675726997,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "bucket policy",
            "presigned URL",
            "s3-outposts",
            "signatureAge",
            "IAM policies",
            "resource-based policies",
            "network-path restriction",
            "Signature Version 4",
            "REST-QUERY-STRING",
            "condition keys"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS Signature Version 4",
            "bucket",
            "access point"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "IAM Configuration",
            "Network Security"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to create bucket policies for Amazon S3 on Outposts, including using conditions like 'signatureAge' to restrict presigned URL usage and network-path restrictions for enhanced security.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I deny presigned URL requests based on signature age?",
            "What are the condition keys for configuring S3 on Outposts policies?",
            "How do I restrict S3 on Outposts access to specific network paths?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "Amazon S3 on Outposts",
          "s3-outposts",
          "bucket policy",
          "IAM policies",
          "REST-QUERY-STRING",
          "condition keys",
          "network-path restriction",
          "access point",
          "signatureAge",
          "bucket",
          "presigned URL",
          "IAM",
          "resource-based policies",
          "Signature Version 4"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_110",
      "text": "If you are using the public\nendpoint for S3 on Outposts, use aws:SourceIp. If you are using a VPC endpoint for S3 on\nOutposts, use aws:SourceVpc or aws:SourceVpce. The following IAM policy statement requires the principal to access AWS only from the specified\nnetwork range. With this policy statement, all access must originate from that range. This includes\nthe case of someone who's using a presigned URL for S3 on Outposts. To use this example, replace\nthe user input placeholders with your own information. {\n\"Sid\": \"NetworkRestrictionForIAMPrincipal\",\n\"Effect\": \"Deny\",\n\"Action\": \"*\",\n\"Resource\": \"*\",\n\"Condition\": {\n\"NotIpAddressIfExists\": {\"aws:SourceIp\": \"IP-address-range\"},\n\"BoolIfExists\": {\"aws:ViaAWSService\": \"false\"}\n}\n}\nFor an example bucket policy that uses the aws:SourceIP AWS global condition key to restrict\naccess to an S3 on Outposts bucket to a specific network range, see Setting up IAM with S3 on\nOutposts. Who can create a presigned URL\nAnyone with valid security credentials can create a presigned URL. But for a user in the VPC to\nsuccessfully access an object, the presigned URL must be created by someone who has permission\nto perform the operation that the presigned URL is based upon. You can use the following credentials to create a presigned URL:\n\u2022 IAM instance profile \u2013 Valid up to 6 hours.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 209,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2970733218722873,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Access Control",
              "IAM Policy",
              "Network Restriction"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "aws:SourceIp",
            "aws:SourceVpc",
            "aws:SourceVpce",
            "IAM policy",
            "presigned URL",
            "VPC endpoint",
            "aws:ViaAWSService",
            "NotIpAddressIfExists",
            "bucket policy"
          ],
          "entities": [
            "S3 on Outposts",
            "IAM policy",
            "AWS global condition key",
            "VPC endpoint",
            "presigned URL"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Access Control",
          "secondary_categories": [
            "IAM Policies",
            "Networking"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to restrict access to S3 on Outposts using IAM policies, specifying conditions based on network range and endpoints, and provides guidance on creating presigned URLs with appropriate permissions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I restrict access to S3 on Outposts using IAM policies?",
            "What conditions can I use to enforce network restrictions for S3 on Outposts?",
            "Who can create and use a presigned URL for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control]",
        "tf_idf_keywords": [
          "aws:ViaAWSService",
          "VPC",
          "VPC endpoint",
          "aws:SourceVpce",
          "bucket policy",
          "AWS global condition key",
          "presigned URL",
          "NotIpAddressIfExists",
          "S3 on Outposts",
          "aws:SourceIp",
          "IAM",
          "IAM policy",
          "aws:SourceVpc"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_111",
      "text": "\u2022 AWS Security Token Service \u2013 Valid up to 36 hours when signed with permanent credentials,\nsuch as the credentials of the AWS account root user or an IAM user. \u2022 IAM user \u2013 Valid up to 7 days when you're using AWS Signature Version 4. To create a presigned URL that's valid for up to 7 days, first delegate IAM user credentials (the\naccess key and secret key) to the SDK that you're using. Then, generate a presigned URL by using\nAWS Signature Version 4.\nWho can create a presigned URL API Version 2006-03-01 93\n\nAmazon S3 on Outposts User Guide\nNote\n\u2022 If you created a presigned URL by using a temporary token, the URL expires when the\ntoken expires, even if you created the URL with a later expiration time. \u2022 Because presigned URLs grant access to your S3 on Outposts buckets to whoever has the\nURL, we recommend that you protect them appropriately. For more information about\nprotecting presigned URLs, see Limiting presigned URL capabilities. When does S3 on Outposts check the expiration date and time of a\npresigned URL? At the time of the HTTP request, S3 on Outposts checks the expiration date and time of a signed\nURL. For example, if a client begins to download a large file immediately before the expiration\ntime, the download continues even if the expiration time passes during the download. However, if\nthe connection drops and the client tries to restart the download after the expiration time passes,\nthe download fails.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39514999389648436,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Guidelines",
              "Warning"
            ]
          },
          "keywords": [
            "AWS Security Token Service",
            "IAM user",
            "AWS Signature Version 4",
            "presigned URL",
            "temporary token",
            "S3 on Outposts",
            "expiration date",
            "HTTP request",
            "access key",
            "secret key"
          ],
          "entities": [
            "AWS Security Token Service",
            "IAM user",
            "S3 on Outposts",
            "AWS Signature Version 4",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Authentication"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS Security Token Service",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The documentation explains the validity periods of presigned URLs in AWS services, including the impact of temporary tokens and best practices for securing URLs. It also details how S3 on Outposts handles expiration during ongoing downloads.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How long is a presigned URL valid when using IAM user credentials?",
            "What happens if a download continues past the expiration time of a presigned URL?",
            "How can I secure presigned URLs for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "presigned URL",
          "secret key",
          "access key",
          "S3 on Outposts",
          "expiration date",
          "HTTP request",
          "IAM user",
          "IAM",
          "temporary token",
          "Amazon S3",
          "AWS Security Token Service"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_112",
      "text": "For more information about using a presigned URL to share or upload objects, see the following\ntopics. Topics\n\u2022 Sharing objects by using presigned URLs\n\u2022 Generating a presigned URL to upload an object to an S3 on Outposts bucket\nSharing objects by using presigned URLs\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects. When you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nWhen does S3 on Outposts check the expiration date and time of a presigned URL? API Version 2006-03-01 94\n\nAmazon S3 on Outposts User Guide\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works. When you create a presigned URL, you must provide your security credentials, and then specify the\nfollowing:\n\u2022 An access point Amazon Resource Name (ARN) for the Amazon S3 on Outposts bucket\n\u2022 An object key\n\u2022 An HTTP method (GET for downloading objects)\n\u2022 An expiration date and time\nA presigned URL is valid only for the specified duration. That is, you must start the action that's\nallowed by the URL before the expiration date and time.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 299,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4612976498074002,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "presigned URL",
            "Amazon S3",
            "Outposts bucket",
            "VPC",
            "expiration time",
            "AWS SDKs",
            "AWS CLI",
            "access point ARN",
            "object key",
            "HTTP method"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS SDKs",
            "AWS CLI",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use presigned URLs to share or upload objects to an Amazon S3 on Outposts bucket, including time-limited access and required parameters.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a presigned URL for an S3 on Outposts bucket?",
            "What parameters are required to generate a presigned URL?",
            "What is the maximum expiration time for a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "expiration time",
          "VPC",
          "AWS SDKs",
          "Outposts bucket",
          "access point ARN",
          "object key",
          "AWS CLI",
          "S3 on Outposts",
          "presigned URL",
          "HTTP method",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_113",
      "text": "You can use a presigned URL multiple\ntimes, up to the expiration date and time. If you created a presigned URL by using a temporary\ntoken, then the URL expires when the token expires, even if you created the URL with a later\nexpiration time. Users in the virtual private cloud (VPC) who have access to the presigned URL can access the object. For example, if you have a video in your bucket and both the bucket and the object are private,\nyou can share the video with others by generating a presigned URL. Because presigned URLs\ngrant access to your S3 on Outposts buckets to whoever has the URL, we recommend that you\nprotect these URLs appropriately. For more details about protecting presigned URLs, see Limiting\npresigned URL capabilities. Anyone with valid security credentials can create a presigned URL. However, the presigned URL\nmust be created by someone who has permission to perform the operation that the presigned URL\nis based upon. For more information, see Who can create a presigned URL. You can generate a presigned URL to share an object in an S3 on Outposts bucket by using the\nAWS SDKs and the AWS CLI.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 10,
        "num_words": 198,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5209488762749566,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Access Control",
              "Usage Guidance"
            ]
          },
          "keywords": [
            "presigned URL",
            "S3 on Outposts",
            "expiration time",
            "temporary token",
            "virtual private cloud",
            "bucket",
            "object",
            "AWS SDKs",
            "AWS CLI",
            "access control"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS SDKs",
            "AWS CLI",
            "virtual private cloud (VPC)",
            "temporary token"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Security"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "Presigned URLs allow secure, temporary access to private objects in S3 on Outposts. Proper protection and permissions are necessary to ensure security when sharing these URLs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL for an S3 object?",
            "What security considerations should I follow when using presigned URLs?",
            "Who can create a presigned URL in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "expiration time",
          "access control",
          "AWS SDKs",
          "virtual private cloud (VPC)",
          "object",
          "AWS CLI",
          "S3 on Outposts",
          "bucket",
          "presigned URL",
          "temporary token",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_114",
      "text": "For more information, see the following examples. Using the AWS SDKs\nYou can use the AWS SDKs to generate a presigned URL that you can give to others so that they\ncan retrieve an object. Sharing objects API Version 2006-03-01 95\n\nAmazon S3 on Outposts User Guide\nNote\nWhen you use the AWS SDKs to generate a presigned URL, the maximum expiration time\nfor a presigned URL is 7 days from the time of creation. Java\nExample\nThe following example generates a presigned URL that you can give to others so that they can\nretrieve an object from an S3 on Outposts bucket. For more information, see Using presigned\nURLs for S3 on Outposts. To use this example, replace the user input placeholders with\nyour own information. import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.time.Instant;\npublic class GeneratePresignedURL {\npublic static void main(String[] args) throws IOException {\nRegions clientRegion = Regions.DEFAULT_REGION;\nString accessPointArn = \"*** access point ARN ***\";\nString objectKey = \"*** object key ***\";\ntry {\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.withRegion(clientRegion)\n.withCredentials(new ProfileCredentialsProvider())\n.build();\n// Set the presigned URL to expire after one hour. Sharing objects API Version 2006-03-01 96\n\nAmazon S3 on Outposts User Guide\njava.util.Date expiration = new java.util.Date();\nlong expTimeMillis = Instant.now().toEpochMilli();\nexpTimeMillis += 1000 * 60 * 60;\nexpiration.setTime(expTimeMillis);\n// Generate the presigned URL. System.out.println(\"Generating pre-signed URL. \");\nGeneratePresignedUrlRequest generatePresignedUrlRequest =\nnew GeneratePresignedUrlRequest(accessPointArn, objectKey)\n.withMethod(HttpMethod.GET)\n.withExpiration(expiration);\nURL url = s3Client.generatePresignedUrl(generatePresignedUrlRequest);\nSystem.out.println(\"Pre-Signed URL: \" + url.toString());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't\nprocess\n// it, so it returned an error response. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3. e.printStackTrace();\n}\n}\n}\n.NET\nExample\nThe following example generates a presigned URL that you can give to others so that they can\nretrieve an object from an S3 on Outposts bucket. For more information, see Using presigned\nURLs for S3 on Outposts. To use this example, replace the user input placeholders with\nyour own information. using Amazon;\nusing Amazon.S3;\nusing Amazon.S3.Model;\nusing System;\nnamespace Amazon.DocSamples.S3\n{\nSharing objects API Version 2006-03-01 97\n\nAmazon S3 on Outposts User Guide\nclass GenPresignedURLTest\n{\nprivate const string accessPointArn = \"*** access point ARN ***\";\nprivate const string objectKey = \"*** object key ***\";\n// Specify how long the presigned URL lasts, in hours. private const double timeoutDuration = 12;\n// Specify your bucket Region (an example Region is shown). private static readonly RegionEndpoint bucketRegion =\nRegionEndpoint.USWest2;\nprivate static IAmazonS3 s3Client;\npublic static void Main()\n{\ns3Client = new AmazonS3Client(bucketRegion);\nstring urlString = GeneratePreSignedURL(timeoutDuration);\n}\nstatic string GeneratePreSignedURL(double duration)\n{\nstring urlString = \"\";\ntry\n{\nGetPreSignedUrlRequest request1 = new GetPreSignedUrlRequest\n{\nBucketName = accessPointArn,\nKey = objectKey,\nExpires = DateTime.UtcNow.AddHours(duration)\n};\nurlString = s3Client.GetPreSignedURL(request1);\n}\ncatch (AmazonS3Exception e)\n{\nConsole.WriteLine(\"Error encountered on server. Message:'{0}' when\nwriting an object\", e.Message);\n}\ncatch (Exception e)\n{\nConsole.WriteLine(\"Unknown encountered on server.",
      "start_idx": 170682,
      "end_idx": 190237,
      "metadata": {
        "num_sentences": 18,
        "num_words": 511,
        "chunk_type": "semantic_split",
        "coherence_score": 0.33397779277726714,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS SDKs",
            "presigned URL",
            "Amazon S3",
            "Outposts",
            "access point ARN",
            "object key",
            "expiration time",
            "Java",
            ".NET",
            "HTTP method"
          ],
          "entities": [
            "AWS SDKs",
            "Amazon S3",
            "Outposts",
            "Regions",
            "AmazonServiceException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS SDKs",
            "Outposts"
          ],
          "mentioned_tools": [
            "Java",
            ".NET",
            "AmazonS3Client"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples in Java and .NET for generating presigned URLs using AWS SDKs to share objects stored in Amazon S3 on Outposts buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL using AWS SDKs?",
            "What is the maximum expiration time for a presigned URL?",
            "How do I handle errors when generating presigned URLs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "expiration time",
          "AWS SDKs",
          "access point ARN",
          "object key",
          "AmazonServiceException",
          ".NET",
          "presigned URL",
          "Outposts",
          "Regions",
          "HTTP method",
          "Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_115",
      "text": "Message:'{0}' when\nwriting an object\", e.Message);\n}\nreturn urlString;\n}\n}\n}\nSharing objects API Version 2006-03-01 98\n\nAmazon S3 on Outposts User Guide\nPython\nThe following example generates a presigned URL to share an object by using the SDK for\nPython (Boto3). For example, use a Boto3 client and the generate_presigned_url function\nto generate a presigned URL that allows you to GET an object. import boto3\nurl = boto3.client('s3').generate_presigned_url(\nClientMethod='get_object',\nParams={'Bucket': 'ACCESS_POINT_ARN', 'Key': 'OBJECT_KEY'},\nExpiresIn=3600)\nFor more information about using the SDK for Python (Boto3) to generate a presigned URL, see\nPython in the AWS SDK for Python (Boto) API Reference. Using the AWS CLI\nThe following example AWS CLI command generates a presigned URL for an S3 on Outposts\nbucket. To use this example, replace the user input placeholders with your own information. Note\nWhen you use the AWS CLI to generate a presigned URL, the maximum expiration time for\na presigned URL is 7 days from the time of creation. aws s3 presign s3://arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/example-outpost-access-\npoint/mydoc.txt --expires-in 604800\nFor more information, see presign in the AWS CLI Command Reference. Generating a presigned URL to upload an object to an S3 on Outposts\nbucket\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects. Uploading an object API Version 2006-03-01 99\n\nAmazon S3 on Outposts User Guide\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 289,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4688430362277561,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "presigned URL",
            "AWS SDK",
            "Boto3",
            "AWS CLI",
            "Outposts bucket",
            "access point",
            "expires-in",
            "upload object",
            "bucket policy",
            "virtual private cloud"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Boto3",
            "ACCESS_POINT_ARN",
            "OBJECT_KEY"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate presigned URLs for sharing or uploading objects to Amazon S3 on Outposts using AWS SDKs and AWS CLI. It includes examples for Python and CLI commands, detailing expiration limits and use cases.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL using Boto3?",
            "What is the expiration limit for presigned URLs in AWS CLI?",
            "How do presigned URLs work with S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload object",
          "AWS Outposts",
          "AWS SDK",
          "bucket policy",
          "Outposts bucket",
          "ACCESS_POINT_ARN",
          "access point",
          "expires-in",
          "presigned URL",
          "Boto3",
          "Amazon S3",
          "OBJECT_KEY",
          "AWS CLI",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_116",
      "text": "You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works. When you create a presigned URL, you must provide your security credentials, and then specify the\nfollowing:\n\u2022 An access point Amazon Resource Name (ARN) for the Amazon S3 on Outposts bucket\n\u2022 An object key\n\u2022 An HTTP method (PUT for uploading objects)\n\u2022 An expiration date and time\nA presigned URL is valid only for the specified duration. That is, you must start the action that's\nallowed by the URL before the expiration date and time. You can use a presigned URL multiple\ntimes, up to the expiration date and time. If you created a presigned URL by using a temporary\ntoken, then the URL expires when the token expires, even if you created the URL with a later\nexpiration time. If the action allowed by a presigned URL consists of multiple steps, such as a multipart upload,\nyou must start all steps before the expiration time. If S3 on Outposts tries to start a step with an\nexpired URL, you receive an error. Users in the virtual private cloud (VPC) who have access to the presigned URL can upload objects.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5022958119710287,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "presigned URL",
            "expiration time",
            "Amazon S3 on Outposts",
            "access point ARN",
            "object key",
            "HTTP method",
            "temporary token",
            "multipart upload",
            "virtual private cloud",
            "security credentials"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "presigned URL",
            "access point ARN",
            "HTTP method",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to create and use presigned URLs for Amazon S3 on Outposts, including setting expiration times and managing access within a VPC.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a presigned URL for Amazon S3 on Outposts?",
            "What happens if a presigned URL expires during a multipart upload?",
            "What security credentials are required to generate a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "expiration time",
          "VPC",
          "Amazon S3 on Outposts",
          "access point ARN",
          "object key",
          "temporary token",
          "security credentials",
          "presigned URL",
          "HTTP method",
          "virtual private cloud",
          "multipart upload"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_117",
      "text": "For example, a user in the VPC who has access to the presigned URL can upload an object to your\nbucket. Because presigned URLs grant access to your S3 on Outposts bucket to any user in the VPC\nwho has access to the presigned URL, we recommend that you protect these URLs appropriately. For more details about protecting presigned URLs, see Limiting presigned URL capabilities. Anyone with valid security credentials can create a presigned URL. However, the presigned URL\nmust be created by someone who has permission to perform the operation that the presigned URL\nis based upon. For more information, see Who can create a presigned URL. Uploading an object API Version 2006-03-01 100\n\nAmazon S3 on Outposts User Guide\nUsing the AWS SDKs to generate a presigned URL for an S3 on Outposts object\noperation\nJava\nSDK for Java 2.x\nThis example shows how to generate a presigned URL that you can use to upload an object\nto an S3 on Outposts bucket for a limited time. For more information, see Using presigned\nURLs for S3 on Outposts. public static void signBucket(S3Presigner presigner, String\noutpostAccessPointArn, String keyName) {\ntry {\nPutObjectRequest objectRequest = PutObjectRequest.builder()\n.bucket(accessPointArn)\n.key(keyName)\n.contentType(\"text/plain\")\n.build();\nPutObjectPresignRequest presignRequest =\nPutObjectPresignRequest.builder()\n.signatureDuration(Duration.ofMinutes(10))\n.putObjectRequest(objectRequest)\n.build();\nPresignedPutObjectRequest presignedRequest =\npresigner.presignPutObject(presignRequest);\nString myURL = presignedRequest.url().toString();\nSystem.out.println(\"Presigned URL to upload a file to: \" +myURL);\nSystem.out.println(\"Which HTTP method must be used when uploading a\nfile: \" +\npresignedRequest.httpRequest().method());\n// Upload content to the S3 on Outposts bucket by using this URL. URL url = presignedRequest.url();\n// Create the connection and use it to upload the new object by using\nthe presigned URL.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 271,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5053832583957248,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "presigned URL",
            "S3 on Outposts",
            "bucket",
            "AWS SDK",
            "PutObjectRequest",
            "PresignedPutObjectRequest",
            "signatureDuration",
            "accessPointArn",
            "upload",
            "Java SDK"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS SDK",
            "Java SDK",
            "PutObjectRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate a presigned URL using the AWS SDK for Java to upload objects to an S3 on Outposts bucket, including a code example and best practices for securing presigned URLs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL for S3 on Outposts using Java?",
            "What are the security recommendations for presigned URLs?",
            "What is the process to upload objects to S3 on Outposts using a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Java SDK",
          "Amazon S3 on Outposts",
          "AWS SDK",
          "signatureDuration",
          "upload",
          "S3 on Outposts",
          "accessPointArn",
          "bucket",
          "presigned URL",
          "PutObjectRequest",
          "Amazon S3",
          "PresignedPutObjectRequest"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_118",
      "text": "Uploading an object API Version 2006-03-01 101\n\nAmazon S3 on Outposts User Guide\nHttpURLConnection connection = (HttpURLConnection)\nurl.openConnection();\nconnection.setDoOutput(true);\nconnection.setRequestProperty(\"Content-Type\",\"text/plain\");\nconnection.setRequestMethod(\"PUT\");\nOutputStreamWriter out = new\nOutputStreamWriter(connection.getOutputStream());\nout.write(\"This text was uploaded as an object by using a presigned\nURL. \");\nout.close();\nconnection.getResponseCode();\nSystem.out.println(\"HTTP response code is \" +\nconnection.getResponseCode());\n} catch (S3Exception e) {\ne.getStackTrace();\n} catch (IOException e) {\ne.getStackTrace();\n}\n}\nPython\nSDK for Python (Boto3)\nThis example shows how to generate a presigned URL that can perform an S3 on Outposts\naction for a limited time. For more information, see Using presigned URLs for S3 on\nOutposts. To make a request with the URL, use the Requests package. import argparse\nimport logging\nimport boto3\nfrom botocore.exceptions import ClientError\nimport requests\nlogger = logging.getLogger(__name__)\ndef generate_presigned_url(s3_client, client_method, method_parameters,\nexpires_in):\n\"\"\"\nUploading an object API Version 2006-03-01 102\n\nAmazon S3 on Outposts User Guide\nGenerate a presigned S3 on Outposts URL that can be used to perform an\naction. :param s3_client: A Boto3 Amazon S3 client. :param client_method: The name of the client method that the URL performs. :param method_parameters: The parameters of the specified client method. :param expires_in: The number of seconds that the presigned URL is valid for. :return: The presigned URL.\n\"\"\"",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3956336127387153,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "Boto3",
            "HttpURLConnection",
            "PUT method",
            "ClientError",
            "logging",
            "Requests package",
            "expires_in"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Boto3",
            "HttpURLConnection",
            "Requests package"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Python Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "Requests package",
            "HttpURLConnection"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an object to Amazon S3 on Outposts using a presigned URL, with examples in Java and Python. It covers generating presigned URLs and making PUT requests to perform S3 actions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object using a presigned URL in Amazon S3 on Outposts?",
            "What is the process to generate a presigned URL with Boto3?",
            "How can I handle errors when using presigned URLs in S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ClientError",
          "expires_in",
          "PUT method",
          "HttpURLConnection",
          "logging",
          "Boto3",
          "Requests package",
          "presigned URL",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_119",
      "text": "try:\nurl = s3_client.generate_presigned_url(\nClientMethod=client_method,\nParams=method_parameters,\nExpiresIn=expires_in\n)\nlogger.info(\"Got presigned URL: %s\", url)\nexcept ClientError:\nlogger.exception(\n\"Couldn't get a presigned URL for client method '%s'. \",\nclient_method)\nraise\nreturn url\ndef usage_demo():\nlogging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')\nprint('-'*88)\nprint(\"Welcome to the Amazon S3 on Outposts presigned URL demo.\") print('-'*88)\nparser = argparse.ArgumentParser()\nparser.add_argument('accessPointArn', help=\"The name of the S3 on Outposts\naccess point ARN.\") parser.add_argument(\n'key', help=\"For a GET operation, the key of the object in S3 on\nOutposts. For a \"\n\"PUT operation, the name of a file to upload.\") parser.add_argument(\n'action', choices=('get', 'put'), help=\"The action to perform.\") args = parser.parse_args()\ns3_client = boto3.client('s3')\nclient_action = 'get_object' if args.action == 'get' else 'put_object'\nUploading an object API Version 2006-03-01 103\n\nAmazon S3 on Outposts User Guide\nurl = generate_presigned_url(\ns3_client, client_action, {'Bucket': args.accessPointArn, 'Key':\nargs.key}, 1000)\nprint(\"Using the Requests package to send a request to the URL.\") response = None\nif args.action == 'get':\nresponse = requests.get(url)\nelif args.action == 'put':\nprint(\"Putting data to the URL.\") try:\nwith open(args.key, 'r') as object_file:\nobject_text = object_file.read()\nresponse = requests.put(url, data=object_text)\nexcept FileNotFoundError:\nprint(f\"Couldn't find {args.key}. For a PUT operation, the key must\nbe the \"\nf\"name of a file that exists on your computer.\")",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 201,
        "chunk_type": "semantic_split",
        "coherence_score": 0.406512451171875,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeSnippet",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "boto3",
            "ClientError",
            "GET operation",
            "PUT operation",
            "access point ARN",
            "requests package",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "boto3",
            "ClientError",
            "requests"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "boto3",
            "requests",
            "argparse"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to generate and use presigned URLs for Amazon S3 on Outposts using the boto3 library, with examples for GET and PUT operations.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for Amazon S3 on Outposts?",
            "What are the steps to upload or retrieve objects using presigned URLs?",
            "What should I do if a presigned URL generation fails?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ClientError",
          "API Version 2006-03-01",
          "boto3",
          "access point ARN",
          "requests package",
          "PUT operation",
          "requests",
          "presigned URL",
          "Outposts",
          "Amazon S3",
          "GET operation"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_120",
      "text": "if response is not None:\nprint(\"Got response:\")\nprint(f\"Status: {response.status_code}\")\nprint(response.text)\nprint('-'*88)\nif __name__ == '__main__':\nusage_demo()\nAmazon S3 on Outposts with local Amazon EMR on Outposts\nAmazon EMR is a managed cluster platform that simplifies running big data frameworks, such\nas Apache Hadoop and Apache Spark, on AWS to process and analyze vast amounts of data. By\nusing these frameworks and related open-source projects, you can process data for analytics\npurposes and business intelligence workloads. Amazon EMR also helps you transform and move\nlarge amounts of data into and out of other AWS data stores and databases, and supports Amazon\nS3 on Outposts. For more information about Amazon EMR, see Amazon EMR on Outposts in the\nAmazon EMR Management Guide. Amazon S3 on Outposts with local Amazon EMR API Version 2006-03-01 104\n\nAmazon S3 on Outposts User Guide\nFor Amazon S3 on Outposts, Amazon EMR started to support the Apache Hadoop S3A connector in\nversion 7.0.0. Earlier versions of Amazon EMR don't support local S3 on Outposts, and the EMR File\nSystem (EMRFS) is not supported. Supported applications\nAmazon EMR with Amazon S3 on Outposts supports the following applications:\n\u2022 Hadoop\n\u2022 Spark\n\u2022 Hue\n\u2022 Hive\n\u2022 Sqoop\n\u2022 Pig\n\u2022 Hudi\n\u2022 Flink\nFor more information, see the Amazon EMR Release Guide. Create and configure an Amazon S3 on Outposts bucket\nAmazon EMR uses the AWS SDK for Java with Amazon S3 on Outposts to store input data and\noutput data. Your Amazon EMR log files are stored in a Regional Amazon S3 location that you\nselect and aren't stored locally on the Outpost. For more information, see Amazon EMR logs in the\nAmazon EMR Management Guide.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 279,
        "chunk_type": "semantic_split",
        "coherence_score": 0.50731324089898,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon EMR",
            "Amazon S3 on Outposts",
            "Apache Hadoop",
            "Apache Spark",
            "EMRFS",
            "AWS SDK for Java",
            "S3A connector",
            "big data frameworks",
            "Outposts bucket",
            "Amazon EMR logs"
          ],
          "entities": [
            "Amazon EMR",
            "Amazon S3 on Outposts",
            "Apache Hadoop",
            "Apache Spark",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Data Storage"
          ],
          "mentioned_services": [
            "Amazon EMR",
            "Amazon S3 on Outposts",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "Hadoop",
            "Spark",
            "Hive"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how Amazon EMR integrates with Amazon S3 on Outposts, detailing supported applications, configuration steps, and the use of the AWS SDK for Java. It also highlights compatibility with big data frameworks like Hadoop and Spark.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What applications are supported by Amazon EMR with Amazon S3 on Outposts?",
            "How can I configure an Amazon S3 on Outposts bucket for Amazon EMR?",
            "What versions of Amazon EMR support the S3A connector for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Computing]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "EMRFS",
          "Amazon EMR logs",
          "Amazon EMR",
          "Outposts bucket",
          "big data frameworks",
          "Apache Hadoop",
          "Apache Spark",
          "S3A connector",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_121",
      "text": "To conform with Amazon S3 and DNS requirements, S3 on Outposts buckets have naming\nrestrictions and limitations. For more information, see Creating an S3 on Outposts bucket. With Amazon EMR version 7.0.0 and later, you can use Amazon EMR with S3 on Outposts and the\nS3A file system. Prerequisites\nS3 on Outposts permissions \u2013 When you create your Amazon EMR instance profile, your role must\ncontain the AWS Identity and Access Management (IAM) namespace for S3 on Outposts. S3 on\nOutposts has its own namespace, s3-outposts*. For an example policy that uses this namespace,\nsee Setting up IAM with S3 on Outposts. Creating an Amazon S3 on Outposts bucket API Version 2006-03-01 105\n\nAmazon S3 on Outposts User Guide\nS3A connector \u2013 To configure your EMR cluster to access data from an Amazon S3 on Outposts\nbucket, you must use the Apache Hadoop S3A connector. To use the connector, ensure that all of\nyour S3 URIs use the s3a scheme. If they don't, you can configure the file system implementation\nthat you use for your EMR cluster so that your S3 URIs work with the S3A connector. To configure the file system implementation to work with the S3A connector, you use the\nfs.file_scheme.impl and fs.AbstractFileSystem.file_scheme.impl configuration\nproperties for your EMR cluster, where file_scheme corresponds to the type of S3 URIs that\nyou have.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 223,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5545453389485677,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon S3",
            "S3 on Outposts",
            "Amazon EMR",
            "IAM namespace",
            "S3A connector",
            "Apache Hadoop",
            "S3 URIs",
            "fs.file_scheme.impl",
            "permissions",
            "bucket naming restrictions"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "Amazon EMR",
            "IAM",
            "Apache Hadoop"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Big Data Processing",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "Apache Hadoop",
            "S3A connector"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon EMR to use Amazon S3 on Outposts with the S3A file system and outlines prerequisites, including IAM permissions and file system properties.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon EMR to work with S3 on Outposts?",
            "What are the prerequisites for using S3 on Outposts with Amazon EMR?",
            "How do I set up the S3A connector for my EMR cluster?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM namespace",
          "Amazon EMR",
          "S3 URIs",
          "Apache Hadoop",
          "S3 on Outposts",
          "fs.file_scheme.impl",
          "IAM",
          "S3A connector",
          "bucket naming restrictions",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_122",
      "text": "To use the following example, replace the user input placeholders with your own\ninformation. For example, to change the file system implementation for S3 URIs that use the s3\nscheme, specify the following cluster configuration properties:\n[\n{\n\"Classification\": \"core-site\",\n\"Properties\": {\n\"fs.s3.impl\": \"org.apache.hadoop.fs.s3a.S3AFileSystem\",\n\"fs.AbstractFileSystem.s3.impl\": \"org.apache.hadoop.fs.s3a.S3A\"\n}\n}\n]\nTo use S3A, set the fs.file_scheme.impl configuration property\nto org.apache.hadoop.fs.s3a.S3AFileSystem, and set the\nfs.AbstractFileSystem.file_scheme.impl property to\norg.apache.hadoop.fs.s3a.S3A. For example, if you are accessing the path s3a://bucket/..., set the fs.s3a.impl\nproperty to org.apache.hadoop.fs.s3a.S3AFileSystem, and set the\nfs.AbstractFileSystem.s3a.impl property to org.apache.hadoop.fs.s3a.S3A. Getting started using Amazon EMR with Amazon S3 on Outposts\nThe following topics explain how to get started using Amazon EMR with Amazon S3 on Outposts. Topics\n\u2022 Create a permissions policy\n\u2022 Create and configure your cluster\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 106\n\nAmazon S3 on Outposts User Guide\n\u2022 Configurations overview\n\u2022 Considerations\nCreate a permissions policy\nBefore you can create an EMR cluster that uses Amazon S3 on Outposts, you must create an\nIAM policy to attach to the Amazon EC2 instance profile for the cluster. The policy must have\npermissions to access the S3 on Outposts access point Amazon Resource Name (ARN). For more\ninformation about creating IAM policies for S3 on Outposts, see Setting up IAM with S3 on\nOutposts. The following example policy shows how to grant the required permissions. After you create the\npolicy, attach the policy to the instance profile role that you use to create your EMR cluster, as\ndescribed in the the section called \u201cCreate and configure your cluster\u201d section. To use this example,\nreplace the user input placeholders with your own information.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 279,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28973545498318143,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup",
              "Example"
            ]
          },
          "keywords": [
            "Amazon EMR",
            "Amazon S3",
            "S3AFileSystem",
            "IAM policy",
            "cluster configuration",
            "fs.s3.impl",
            "fs.AbstractFileSystem.s3.impl",
            "S3 on Outposts",
            "permissions policy",
            "access point ARN"
          ],
          "entities": [
            "Amazon EMR",
            "Amazon S3",
            "S3AFileSystem",
            "IAM",
            "Amazon EC2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Storage"
          ],
          "mentioned_services": [
            "Amazon EMR",
            "Amazon S3",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "Hadoop",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on configuring Amazon EMR to use Amazon S3 on Outposts, including setting up cluster properties and IAM policies for proper access. It includes code examples and considerations for implementing S3AFileSystem for S3 URIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon EMR to use S3AFileSystem?",
            "What permissions are required for Amazon S3 on Outposts?",
            "How do I create an IAM policy for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "fs.AbstractFileSystem.s3.impl",
          "permissions policy",
          "Amazon S3 on Outposts",
          "Amazon EC2",
          "Amazon EMR",
          "access point ARN",
          "fs.s3.impl",
          "S3 on Outposts",
          "cluster configuration",
          "IAM",
          "S3AFileSystem",
          "IAM policy",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_123",
      "text": "{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3-outposts:us-\nwest-2:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/access-point-name,\n\"Action\": [\n\"s3-outposts:*\"\n]\n}\n]\n}\nCreate and configure your cluster\nTo create a cluster that runs Spark with S3 on Outposts, complete the following steps in the\nconsole. To create a cluster that runs Spark with S3 on Outposts\n1. Open the Amazon EMR console at https://console.aws.amazon.com/elasticmapreduce/. 2. In the left navigation pane, choose Clusters. Getting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 107\n\nAmazon S3 on Outposts User Guide\n3. Choose Create cluster. 4. For Amazon EMR release, choose emr-7.0.0 or later. 5.",
      "start_idx": 190238,
      "end_idx": 204495,
      "metadata": {
        "num_sentences": 10,
        "num_words": 101,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2448953840467665,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon EMR",
            "S3 on Outposts",
            "Spark",
            "cluster",
            "access point",
            "AWS",
            "policy",
            "Action",
            "Effect",
            "Resource"
          ],
          "entities": [
            "Amazon EMR",
            "S3 on Outposts",
            "Spark",
            "AWS IAM Policy",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon EMR",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "Spark"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on creating and configuring a cluster to run Spark with Amazon S3 on Outposts, including an example IAM policy for access control.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a Spark cluster with S3 on Outposts?",
            "What IAM policy is needed for S3 on Outposts?",
            "What Amazon EMR release is required for Spark with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "Resource",
          "Amazon EMR",
          "policy",
          "cluster",
          "Action",
          "access point",
          "Effect",
          "S3 on Outposts",
          "AWS IAM Policy",
          "AWS",
          "Spark"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_124",
      "text": "For Application bundle, choose Spark interactive. Then select any other supported\napplications that you want to be included in your cluster. 6. To enable Amazon S3 on Outposts, enter your configuration settings. Sample configuration settings\nTo use the following sample configuration settings, replace the user input placeholders\nwith your own information. [\n{\n\"Classification\": \"core-site\",\n\"Properties\": {\n\"fs.s3a.bucket.DOC-EXAMPLE-BUCKET.accesspoint.arn\": \"arn:aws:s3-outposts:us-\nwest-2:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/access-point-name\"\n\"fs.s3a.committer.name\": \"magic\",\n\"fs.s3a.select.enabled\": \"false\"\n}\n},\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-corretto.x86_64\"\n}\n}\n],\n\"Properties\": {}\n},\n{\n\"Classification\": \"spark-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-corretto.x86_64\"\n}\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 108\n\nAmazon S3 on Outposts User Guide\n}\n],\n\"Properties\": {}\n},\n{\n\"Classification\": \"spark-defaults\",\n\"Properties\": {\n\"spark.executorEnv.JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-\ncorretto.x86_64\",\n\"spark.sql.sources.fastS3PartitionDiscovery.enabled\": \"false\"\n}\n}\n]\n7. In the Networking section, choose a virtual private cloud (VPC) and subnet that are on your\nAWS Outposts rack.",
      "start_idx": 204496,
      "end_idx": 205939,
      "metadata": {
        "num_sentences": 7,
        "num_words": 155,
        "breakpoint_idx": 1279,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.15662938072567895,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon EMR",
            "Amazon S3 on Outposts",
            "Spark interactive",
            "VPC",
            "subnet",
            "core-site",
            "hadoop-env",
            "spark-env",
            "spark-defaults",
            "JAVA_HOME"
          ],
          "entities": [
            "Amazon EMR",
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "Spark interactive",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Distributed Systems"
          ],
          "mentioned_services": [
            "Amazon EMR",
            "Amazon S3 on Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "Spark",
            "Hadoop",
            "Amazon Corretto"
          ]
        },
        "semantic": {
          "summary": "This document provides steps for configuring an Amazon EMR cluster with Spark interactive and enabling Amazon S3 on Outposts, including sample configuration settings and networking setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon EMR with Spark interactive?",
            "What are the sample configuration settings for enabling Amazon S3 on Outposts?",
            "Which VPC and subnet should I choose for AWS Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "JAVA_HOME",
          "VPC",
          "hadoop-env",
          "Amazon S3 on Outposts",
          "AWS Outposts",
          "core-site",
          "Amazon EMR",
          "Spark interactive",
          "spark-env",
          "subnet",
          "spark-defaults"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_125",
      "text": "For more information about Amazon EMR on Outposts, see EMR clusters\non AWS Outposts in the Amazon EMR Management Guide. 8. In the EC2 instance profile for Amazon EMR section, choose the IAM role that has the\npermissions policy that you created earlier attached. 9. Configure your remaining cluster settings, and then choose Create cluster. Configurations overview\nThe following table describes S3A configurations and the values to specify for their parameters\nwhen you set up a cluster that uses S3 on Outposts with Amazon EMR. Parameter Default value Required value for Explanation\nS3 on Outposts\nfs.s3a.aw If not specified, S3A The access point Amazon S3 on\ns.credent will look for S3 in ARN of the S3 on Outposts supports\nials.provider Region bucket with Outposts bucket virtual private cloud\nthe Outposts bucket (VPC)-only access\nname. points as the only\nmeans to access your\nOutposts buckets. Getting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 109\n\nAmazon S3 on Outposts User Guide\nParameter Default value Required value for Explanation\nS3 on Outposts\nfs.s3a.co file magic Magic committer is\nmmitter.name the only supported\ncommitter for S3 on\nOutposts. fs.s3a.se TRUE FALSE S3 Select is not\nlect.enabled supported on\nOutposts.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 200,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2559505462646484,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon EMR",
            "AWS Outposts",
            "S3A configurations",
            "IAM role",
            "access point",
            "virtual private cloud",
            "S3 Select",
            "committer",
            "fs.s3a.credentials.provider",
            "fs.s3a.committer.name"
          ],
          "entities": [
            "Amazon EMR",
            "AWS Outposts",
            "S3A",
            "IAM role",
            "S3 Select"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Storage"
          ],
          "mentioned_services": [
            "Amazon EMR",
            "AWS Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides procedural steps and configuration details for setting up an Amazon EMR cluster on AWS Outposts, including S3A configurations and required parameter values for using S3 on Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an Amazon EMR cluster on AWS Outposts?",
            "What are the required S3A configurations for using S3 on Outposts?",
            "What permissions are needed in the IAM role for Amazon EMR?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "committer",
          "S3A",
          "Amazon EMR",
          "IAM role",
          "access point",
          "fs.s3a.credentials.provider",
          "S3 Select",
          "fs.s3a.committer.name",
          "Amazon S3",
          "virtual private cloud",
          "S3A configurations"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_126",
      "text": "JAVA_HOME /usr/lib/jvm/ /usr/lib/jvm/ S3 on Outposts on\njava-8 java-11-amazon S3A requires Java\n-corretto version 11. .x86_64\nThe following table describes Spark configurations and the values to specify for their parameters\nwhen you set up a cluster that uses S3 on Outposts with Amazon EMR. Parameter Default value Required value for Explanation\nS3 on Outposts\nspark.sql TRUE FALSE S3 on Outposts\n.sources. doesn't support fast\nfastS3Par partition. titionDis\ncovery.enabled\nspark.exe /usr/lib/jvm/ /usr/lib/jvm/ S3 on Outposts on\ncutorEnv. java-8 java-11-amazon S3A requires Java\nJAVA_HOME -corretto version 11. .x86_64\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 110\n\nAmazon S3 on Outposts User Guide\nConsiderations\nConsider the following when you integrate Amazon EMR with S3 on Outposts buckets:\n\u2022 Amazon S3 on Outposts is supported with Amazon EMR version 7.0.0 and later. \u2022 The S3A connector is required to use S3 on Outposts with Amazon EMR. Only S3A has the\nfeatures required to interact with S3 on Outposts buckets. For S3A connector setup information,\nsee Prerequisites.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4055696275499132,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Integration"
            ]
          },
          "keywords": [
            "JAVA_HOME",
            "Amazon EMR",
            "S3 on Outposts",
            "S3A connector",
            "Java version 11",
            "spark.sql",
            "fast partition discovery",
            "Amazon S3",
            "API version 2006-03-01",
            "Amazon Corretto"
          ],
          "entities": [
            "JAVA_HOME",
            "Amazon EMR",
            "S3 on Outposts",
            "S3A connector",
            "Amazon Corretto"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Integration",
          "secondary_categories": [
            "Big Data Processing",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "Java",
            "Spark",
            "S3A connector"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the configuration requirements and considerations for using Amazon EMR with S3 on Outposts, including Java and Spark setup details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the configuration requirements for using S3 on Outposts with Amazon EMR?",
            "Which Java version is required for the S3A connector?",
            "What considerations should I keep in mind when integrating Amazon EMR with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Integration]",
        "tf_idf_keywords": [
          "JAVA_HOME",
          "Amazon EMR",
          "Amazon Corretto",
          "API version 2006-03-01",
          "spark.sql",
          "S3 on Outposts",
          "fast partition discovery",
          "S3A connector",
          "Amazon S3",
          "Java version 11"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_127",
      "text": "\u2022 Amazon S3 on Outposts supports only server-side encryption with Amazon S3 managed keys\n(SSE-S3) with Amazon EMR. For more information, see the section called \u201cData encryption\u201d. \u2022 Amazon S3 on Outposts doesn't support writes with the S3A FileOutputCommitter. Writes\nwith the S3A FileOutputCommitter on S3 on Outposts buckets result in the following error:\nInvalidStorageClass: The storage class you specified is not valid. \u2022 Amazon S3 on Outposts isn't supported with Amazon EMR Serverless or Amazon EMR on EKS. \u2022 Amazon EMR logs are stored in a Regional Amazon S3 location that you select, and are not\nstored locally in the S3 on Outposts bucket. Authorization and authentication caching\nS3 on Outposts securely caches authentication and authorization data locally on Outposts racks. The cache removes round trips to the parent AWS Region for every request. This eliminates the\nvariability that is introduced by network round trips. With the authentication and authorization\ncache in S3 on Outposts, you get consistent latencies that are independent from the latency of the\nconnection between the Outposts and the AWS Region.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 176,
        "chunk_type": "semantic_split",
        "coherence_score": 0.346377690633138,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "server-side encryption",
            "SSE-S3",
            "Amazon EMR",
            "S3A FileOutputCommitter",
            "InvalidStorageClass",
            "Amazon EMR Serverless",
            "Amazon EKS",
            "authentication caching",
            "authorization caching"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EMR",
            "S3A FileOutputCommitter",
            "AWS Region",
            "Outposts racks"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Big Data",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "S3A FileOutputCommitter"
          ]
        },
        "semantic": {
          "summary": "The document outlines the capabilities and limitations of Amazon S3 on Outposts, including encryption support, incompatibilities with certain tools, and caching mechanisms for consistent latency. It also specifies that EMR logs are stored in regional S3 locations, not locally on Outposts.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What encryption methods are supported by Amazon S3 on Outposts?",
            "Why does the S3A FileOutputCommitter fail on S3 on Outposts?",
            "Where are Amazon EMR logs stored when using S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Amazon S3 on Outposts",
          "InvalidStorageClass",
          "authorization caching",
          "Amazon EMR",
          "authentication caching",
          "SSE-S3",
          "Amazon EMR Serverless",
          "Amazon EKS",
          "S3A FileOutputCommitter",
          "Outposts racks",
          "server-side encryption",
          "AWS Region",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_128",
      "text": "When you make an S3 on Outposts API request, the authentication and authorization data is\nsecurely cached. The cached data is then used to authenticate subsequent S3 object API requests. S3 on Outposts only caches authentication and authorization data when the request is signed\nusing Signature Version 4A (SigV4A). The cache is stored locally on the Outposts within the S3\non Outposts service. It asynchronously refreshes when you make an S3 API request. The cache is\nencrypted, and no plaintext cryptographic keys are stored on Outposts. The cache is valid for up to 10 minutes when the Outpost is connected to the AWS Region. It is\nrefreshed asynchronously when you make an S3 on Outposts API request, to ensure that the latest\npolicies are used. If the Outpost is disconnected from the AWS Region, the cache will be valid for\nup to 12 hours. Authorization and authentication caching API Version 2006-03-01 111\n\nAmazon S3 on Outposts User Guide\nConfiguring the authorization and authentication cache\nS3 on Outposts automatically caches authentication and authorization data for requests signed\nwith the SigV4A algorithm.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 180,
        "chunk_type": "semantic_split",
        "coherence_score": 0.598690923055013,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "Authorization",
              "Caching"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "SigV4A",
            "authentication",
            "authorization",
            "cache",
            "AWS Region",
            "encryption",
            "Outposts",
            "API request",
            "cryptographic keys"
          ],
          "entities": [
            "S3 on Outposts",
            "Signature Version 4A",
            "AWS Region",
            "Outposts",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Authentication",
            "Security"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS Region"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains how S3 on Outposts caches authentication and authorization data for API requests signed with Signature Version 4A (SigV4A), including caching behavior, encryption, and validity periods.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How does S3 on Outposts handle authentication caching?",
            "What is the validity period of the cache for S3 on Outposts?",
            "What encryption mechanisms are used for cached data in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "API request",
          "SigV4A",
          "cache",
          "encryption",
          "S3 on Outposts",
          "authentication",
          "cryptographic keys",
          "Signature Version 4A",
          "Outposts",
          "AWS Region",
          "authorization",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_129",
      "text": "For more information, see Signing AWS API requests in the AWS\nIdentity and Access Management User Guide. The SigV4A algorithm is available in the latest versions\nof the AWS SDKs. You can obtain it through a dependency on the AWS Common Runtime (CRT)\nlibraries. You need to use the latest version of the AWS SDK and install the latest version of the CRT. For\nexample, you can run pip install awscrt to obtain the latest version of the CRT with Boto3. S3 on Outposts does not cache authentication and authorization data for requests signed with the\nSigV4 algorithm. Validating SigV4A signing\nYou can use AWS CloudTrail to validate that requests were signed with SigV4A. For more\ninformation on setting up CloudTrail for S3 on Outposts, see Monitoring S3 on Outposts with AWS\nCloudTrail logs. After you have configured CloudTrail, you can verify how a request was signed in the\nSignatureVersion field of the CloudTrail logs. Requests that were signed with SigV4A will have\na SignatureVersion set to AWS4-ECDSA-P256-SHA256.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 168,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41180767483181424,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Authentication",
              "Validation"
            ]
          },
          "keywords": [
            "SigV4A",
            "AWS SDK",
            "AWS Common Runtime",
            "CloudTrail",
            "SignatureVersion",
            "S3 on Outposts",
            "authentication",
            "authorization",
            "Boto3",
            "ECDSA-P256-SHA256"
          ],
          "entities": [
            "AWS Identity and Access Management User Guide",
            "AWS SDKs",
            "AWS Common Runtime (CRT)",
            "AWS CloudTrail",
            "S3 on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Authentication and Security",
          "secondary_categories": [
            "Cloud Monitoring",
            "Development Libraries"
          ],
          "mentioned_services": [
            "AWS Identity and Access Management",
            "AWS CloudTrail",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS Common Runtime",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use SigV4A for signing AWS API requests, validate these signatures using AWS CloudTrail, and install the required AWS SDK and CRT libraries for implementation.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I sign AWS API requests using SigV4A?",
            "How can I validate SigV4A signatures using AWS CloudTrail?",
            "What dependencies are required for SigV4A implementation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Authentication and Security]",
        "tf_idf_keywords": [
          "AWS Common Runtime (CRT)",
          "AWS CloudTrail",
          "AWS SDK",
          "AWS Common Runtime",
          "SigV4A",
          "AWS SDKs",
          "AWS Identity and Access Management",
          "SignatureVersion",
          "CloudTrail",
          "S3 on Outposts",
          "authentication",
          "ECDSA-P256-SHA256",
          "Boto3",
          "authorization",
          "AWS Identity and Access Management User Guide"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_130",
      "text": "Requests that were signed with SigV4\nwill have SignatureVersion set to AWS4-HMAC-SHA256. Configuring the authorization and authentication cache API Version 2006-03-01 112\n\nAmazon S3 on Outposts User Guide\nSecurity in S3 on Outposts\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from data centers\nand network architectures that are built to meet the requirements of the most security-sensitive\norganizations. Security is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely. Third-\nparty auditors regularly test and verify the effectiveness of our security as part of the AWS\nCompliance Programs. To learn about the compliance programs that apply to Amazon S3 on\nOutposts, see AWS Services in Scope by Compliance Program. \u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your company's\nrequirements, and applicable laws and regulations.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 200,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4695747799343533,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Authorization",
              "Authentication"
            ]
          },
          "keywords": [
            "SigV4",
            "AWS4-HMAC-SHA256",
            "authorization",
            "authentication",
            "AWS Compliance Programs",
            "Amazon S3",
            "Outposts",
            "shared responsibility model",
            "security",
            "data sensitivity"
          ],
          "entities": [
            "SigV4",
            "AWS4-HMAC-SHA256",
            "AWS Compliance Programs",
            "Amazon S3",
            "Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Compliance"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation discusses the shared responsibility model for security in AWS, focusing on Amazon S3 on Outposts and the use of SigV4 for authorization and authentication.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the shared responsibility model in AWS?",
            "How does SigV4 ensure secure authorization in Amazon S3?",
            "What compliance programs apply to Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Security]",
        "tf_idf_keywords": [
          "security",
          "AWS Outposts",
          "AWS4-HMAC-SHA256",
          "data sensitivity",
          "SigV4",
          "AWS Compliance Programs",
          "authentication",
          "Outposts",
          "authorization",
          "shared responsibility model",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_131",
      "text": "This documentation helps you understand how to apply the shared responsibility model when\nusing S3 on Outposts. The following topics show you how to configure S3 on Outposts to meet\nyour security and compliance objectives. You also learn how to use other AWS services that help\nyou to monitor and secure your S3 on Outposts resources. Topics\n\u2022 Setting up IAM with S3 on Outposts\n\u2022 Data encryption in S3 on Outposts\n\u2022 AWS PrivateLink for S3 on Outposts\n\u2022 AWS Signature Version 4 (SigV4) authentication-specific policy keys\n\u2022 AWS managed policies for Amazon S3 on Outposts\n\u2022 Using service-linked roles for Amazon S3 on Outposts\nSetting up IAM with S3 on Outposts\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nSetting up IAM API Version 2006-03-01 113\n\nAmazon S3 on Outposts User Guide\nand authorized (have permissions) to use Amazon S3 on Outposts resources. IAM is an AWS service\nthat you can use with no additional charge. By default, users don't have permissions for S3 on\nOutposts resources and operations. To grant access permissions for S3 on Outposts resources and\nAPI operations, you can use IAM to create users, groups, or roles and attach permissions. To provide access, add permissions to your users, groups, or roles:\n\u2022 Users and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM\nIdentity Center User Guide.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 257,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5465799119737413,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "IAM",
            "AWS PrivateLink",
            "SigV4",
            "data encryption",
            "service-linked roles",
            "AWS managed policies",
            "permission set",
            "access control",
            "security compliance"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "AWS PrivateLink",
            "AWS Signature Version 4 (SigV4)",
            "AWS IAM Identity Center"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Access Management",
            "Data Encryption"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM",
            "AWS PrivateLink"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to apply the shared responsibility model for S3 on Outposts, focusing on security, compliance, and access control using AWS services like IAM and PrivateLink.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure IAM for S3 on Outposts?",
            "What are the security features available for S3 on Outposts?",
            "How does AWS PrivateLink integrate with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Security]",
        "tf_idf_keywords": [
          "access control",
          "Amazon S3 on Outposts",
          "AWS PrivateLink",
          "SigV4",
          "AWS managed policies",
          "service-linked roles",
          "permission set",
          "AWS IAM",
          "security compliance",
          "data encryption",
          "S3 on Outposts",
          "AWS Identity and Access Management (IAM)",
          "IAM",
          "AWS Signature Version 4 (SigV4)",
          "AWS IAM Identity Center"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_132",
      "text": "\u2022 Users managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Creating a role for a third-party\nidentity provider (federation) in the IAM User Guide. \u2022 IAM users:\n\u2022 Create a role that your user can assume. Follow the instructions in Creating a role for an IAM\nuser in the IAM User Guide. \u2022 (Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the\ninstructions in Adding permissions to a user (console) in the IAM User Guide. In addition to IAM identity-based policies, S3 on Outposts supports both bucket and access point\npolicies. Bucket policies and access point policies are resource-based policies that are attached to\nthe S3 on Outposts resource. \u2022 A bucket policy is attached to the bucket and allows or denies requests to the bucket and the\nobjects in it based on the elements in the policy. \u2022 In contrast, an access point policy is attached to the access point and allows or denies requests to\nthe access point.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 179,
        "chunk_type": "semantic_split",
        "coherence_score": 0.387764400906033,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "IAM",
            "identity provider",
            "identity federation",
            "role",
            "policy",
            "bucket policy",
            "access point policy",
            "S3 on Outposts",
            "permissions",
            "resource-based policies"
          ],
          "entities": [
            "IAM",
            "S3 on Outposts",
            "bucket policy",
            "access point policy",
            "identity provider"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Policy Management"
          ],
          "mentioned_services": [
            "IAM",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides instructions on managing users in IAM, including creating roles for identity federation, IAM users, and configuring bucket and access point policies for S3 on Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a role for identity federation in IAM?",
            "What is the difference between bucket policies and access point policies in S3 on Outposts?",
            "How can I add permissions to an IAM user?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Identity and Access Management]",
        "tf_idf_keywords": [
          "access point policy",
          "identity federation",
          "bucket policy",
          "policy",
          "role",
          "S3 on Outposts",
          "IAM",
          "resource-based policies",
          "identity provider",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_133",
      "text": "The access point policy works with the bucket policy that is attached to the underlying S3 on\nOutposts bucket. For an application or user to access objects in an S3 on Outposts bucket through\nan S3 on Outposts access point, both the access point policy and the bucket policy must permit the\nrequest. Restrictions that you include in an access point policy apply only to requests made through that\naccess point. For example, if an access point is attached to a bucket, you can't use the access point\nSetting up IAM API Version 2006-03-01 114\n\nAmazon S3 on Outposts User Guide\npolicy to allow or deny requests that are made directly to the bucket. However, restrictions that\nyou apply to a bucket policy can allow or deny requests made directly to the bucket or through the\naccess point. In an IAM policy or a resource-based policy, you define which S3 on Outposts actions are allowed\nor denied. S3 on Outposts actions correspond to specific S3 on Outposts API operations. S3 on\nOutposts actions use the s3-outposts: namespace prefix. Requests made to the S3 on Outposts\ncontrol API in an AWS Region and requests made to the object API endpoints on the Outpost are\nauthenticated by using IAM and authorized against the s3-outposts: namespace prefix. To work\nwith S3 on Outposts, configure your IAM users and authorize them against the s3-outposts: IAM\nnamespace.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 232,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5390115949842665,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM Policies",
              "Access Control",
              "S3 on Outposts"
            ]
          },
          "keywords": [
            "access point policy",
            "bucket policy",
            "S3 on Outposts",
            "IAM policy",
            "resource-based policy",
            "namespace prefix",
            "AWS Region",
            "object API endpoints",
            "authentication",
            "authorization"
          ],
          "entities": [
            "S3 on Outposts",
            "IAM",
            "AWS Region",
            "s3-outposts namespace",
            "Outpost"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Access Control",
          "secondary_categories": [
            "IAM Management",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This content explains the interaction between access point policies and bucket policies for S3 on Outposts, detailing how IAM policies and the s3-outposts namespace are used for access control and authorization.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do access point policies and bucket policies interact in S3 on Outposts?",
            "What is the role of the s3-outposts namespace in IAM policies?",
            "How are requests authenticated and authorized for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Access Control]",
        "tf_idf_keywords": [
          "access point policy",
          "s3-outposts namespace",
          "namespace prefix",
          "bucket policy",
          "AWS Region",
          "IAM",
          "S3 on Outposts",
          "authentication",
          "Outpost",
          "resource-based policy",
          "IAM policy",
          "authorization",
          "object API endpoints"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_134",
      "text": "For more information, see Actions, resources, and condition keys for Amazon S3 on Outposts in the\nService Authorization Reference. Note\n\u2022 Access control lists (ACLs) are not supported by S3 on Outposts. \u2022 S3 on Outposts defaults to the bucket owner as object owner to help ensure that the\nowner of a bucket can't be prevented from accessing or deleting objects. \u2022 S3 on Outposts always has S3 Block Public Access enabled to help ensure that objects\ncan never have public access. For more information about setting up IAM for S3 on Outposts, see the following topics. Topics\n\u2022 Principals for S3 on Outposts policies\n\u2022 Resource ARNs for S3 on Outposts\n\u2022 Example policies for S3 on Outposts\n\u2022 Permissions for S3 on Outposts endpoints\n\u2022 Service-linked roles for S3 on Outposts\nSetting up IAM API Version 2006-03-01 115\n\nAmazon S3 on Outposts User Guide\nPrincipals for S3 on Outposts policies\nWhen you create a resource-based policy to grant access to your S3 on Outposts bucket, you must\nuse the Principal element to specify the person or application that can make a request for an\naction or operation on that resource. For S3 on Outposts policies, you can use one of the following\nprincipals:\n\u2022 An AWS account\n\u2022 An IAM user\n\u2022 An IAM role\n\u2022 All principals, by specifying a wildcard character (*) in a policy that uses a Condition element to\nlimit access to a specific IP range\nImportant\nYou can't write a policy for an S3 on Outposts bucket that uses a wildcard character (*) in\nthe Principal element unless the policy also includes a Condition that limits access to a\nspecific IP address range. This restriction helps ensure that there is no public access to your\nS3 on Outposts bucket. For an example, see Example policies for S3 on Outposts. For more information about the Principal element, see AWS JSON policy elements: Principal in\nthe IAM User Guide.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 10,
        "num_words": 324,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6017590840657552,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "IAM policies",
            "Access control",
            "Principal element",
            "Resource ARNs",
            "Service-linked roles",
            "Condition keys",
            "AWS account",
            "IAM role",
            "Block Public Access"
          ],
          "entities": [
            "Amazon S3",
            "IAM User Guide",
            "AWS account",
            "S3 Block Public Access",
            "Service Authorization Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines key IAM policies and access control considerations for Amazon S3 on Outposts, emphasizing restrictions on public access and the use of Principal elements in resource-based policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the access control restrictions for S3 on Outposts?",
            "How do I configure IAM policies for S3 on Outposts?",
            "What principals can be used in S3 on Outposts policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Principal element",
          "Condition keys",
          "Resource ARNs",
          "Block Public Access",
          "Service Authorization Reference",
          "S3 Block Public Access",
          "IAM policies",
          "IAM role",
          "AWS account",
          "S3 on Outposts",
          "Service-linked roles",
          "IAM",
          "Access control",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_135",
      "text": "Resource ARNs for S3 on Outposts\nAmazon Resource Names (ARNs) for S3 on Outposts contain the Outpost ID in addition to the\nAWS Region that the Outpost is homed to, the AWS account ID, and the resource name. To access\nand perform actions on your Outposts buckets and objects, you must use one of the ARN formats\nshown in the following table. The partition value in the ARN refers to a group of AWS Regions. Each AWS account is scoped to\none partition. The following are the supported partitions:\n\u2022 aws \u2013 AWS Regions\n\u2022 aws-us-gov \u2013 AWS GovCloud (US) Regions\nPrincipals for S3 on Outposts policies API Version 2006-03-01 116\n\nAmazon S3 on Outposts User Guide\nThe following table shows S3 on Outposts ARN formats. Amazon S3 on Outposts ARN ARN format Example\nBucket ARN arn:partition :s3- arn:aws:s3-outpo\noutposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id / outpost/ op-01ac5d\nbucket/bucket_name 28a6a232904 /\nbucket/amzn-s3-demo-\nbucket1\nAccess point ARN arn:partition :s3- arn:aws:s3-outpo\noutposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id /accesspo outpost/ op-01ac5d\nint/ accesspoint_name 28a6a232904 /accesspo\nint/ access-point-\nname\nObject ARN arn:partition :s3- arn:aws:s3-outpo\noutposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id / outpost/ op-01ac5d\nbucket/bucket_name / 28a6a232904 /\nobject/object_key bucket/amzn-s3-demo-\nbucket1 /object/m\nyobject\nS3 on Outposts access point arn:partition :s3- arn:aws:s3-outpo\nobject ARN (used in policies) outposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id /accesspo outpost/ op-01ac5d\nint/ accesspoi 28a6a232904 /accesspo\nnt_name / int/ access-point-\nobject/object_key name/object/myobject\nARNs for S3 on Outposts API Version 2006-03-01 117\n\nAmazon S3 on Outposts User Guide\nAmazon S3 on Outposts ARN ARN format Example\nS3 on Outposts ARN arn:partition :s3- arn:aws:s3-outpo\noutposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id outpost/ op-01ac5d\n28a6a232904\nExample policies for S3 on Outposts\nExample : S3 on Outposts bucket policy with an AWS account principal\nThe following bucket policy uses an AWS account principal to grant access to an S3 on Outposts\nbucket. To use this bucket policy, replace the user input placeholders with your own\ninformation. {\n\"Version\":\"2012-10-17\",\n\"Id\":\"ExampleBucketPolicy1\",\n\"Statement\":[\n{\n\"Sid\":\"statement1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\n}\n]\n}\nExample : S3 on Outposts bucket policy with a wildcard principal (*) and condition key to limit\naccess to a specific IP address range\nThe following bucket policy uses a wildcard principal (*) with the aws:SourceIp condition to\nlimit access to a specific IP address range. To use this bucket policy, replace the user input\nplaceholders with your own information. Example policies for S3 on Outposts API Version 2006-03-01 118\n\nAmazon S3 on Outposts User Guide\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"ExampleBucketPolicy2\",\n\"Statement\": [\n{\n\"Sid\": \"statement1\",\n\"Effect\": \"Allow\",\n\"Principal\": { \"AWS\" : \"*\" },\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\",\n\"Condition\" : {\n\"IpAddress\" : {\n\"aws:SourceIp\": \"192.0.2.0/24\"\n},\n\"NotIpAddress\" : {\n\"aws:SourceIp\": \"198.51.100.0/24\"\n}\n}\n}\n]\n}\nPermissions for S3 on Outposts endpoints\nS3 on Outposts requires its own permissions in IAM to manage S3 on Outposts endpoint actions. Note\n\u2022 For endpoints that use the customer-owned IP address pool (CoIP pool) access type, you\nalso must have permissions to work with IP addresses from your CoIP pool, as described\nin the following table. \u2022 For shared accounts that access S3 on Outposts by using AWS Resource Access Manager,\nusers in these shared accounts can't create their own endpoints on a shared subnet. If\na user in a shared account wants to manage their own endpoints, the shared account\nmust create its own subnet on the Outpost. For more information, see the section called\n\u201cSharing S3 on Outposts\u201d. Permissions for endpoints API Version 2006-03-01 119\n\nAmazon S3 on Outposts User Guide\nThe following table shows S3 on Outposts endpoint-related IAM permissions. Action IAM permissions\nCreateEndpoint s3-outposts:CreateEndpoint\nec2:CreateNetworkInterface\nec2:DescribeNetworkInterfaces\nec2:DescribeVpcs\nec2:DescribeSecurityGroups\nec2:DescribeSubnets\nec2:CreateTags\niam:CreateServiceLinkedRole\nFor endpoints that are using the on-premises\ncustomer-owned IP address pool (CoIP pool)\naccess type, the following additional permissio\nns are required:\ns3-outposts:CreateEndpoint\nec2:DescribeCoipPools\nec2:GetCoipPoolUsage\nec2:AllocateAddress\nec2:AssociateAddress\nec2:DescribeAddresses\nec2:DescribeLocalGatewayRou\nteTableVpcAssociations\nDeleteEndpoint s3-outposts:DeleteEndpoint\nPermissions for endpoints API Version 2006-03-01 120\n\nAmazon S3 on Outposts User Guide\nAction IAM permissions\nec2:DeleteNetworkInterface\nec2:DescribeNetworkInterfaces\nFor endpoints that are using the on-premises\ncustomer-owned IP address pool (CoIP pool)\naccess type, the following additional permissio\nns are required:\ns3-outposts:DeleteEndpoint\nec2:DisassociateAddress\nec2:DescribeAddresses\nec2:ReleaseAddress\nListEndpoints s3-outposts:ListEndpoints\nNote\nYou can use resource tags in an IAM policy to manage permissions. Service-linked roles for S3 on Outposts\nS3 on Outposts uses IAM service-linked roles to create some network resources on your behalf.",
      "start_idx": 205940,
      "end_idx": 224297,
      "metadata": {
        "num_sentences": 17,
        "num_words": 741,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4193749147302964,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "ARN Formats",
              "IAM Permissions",
              "Example Policies"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "ARN",
            "IAM permissions",
            "Outpost ID",
            "AWS account ID",
            "AWS Region",
            "CoIP pool",
            "access point",
            "bucket policy",
            "service-linked roles"
          ],
          "entities": [
            "Amazon S3",
            "AWS GovCloud",
            "IAM",
            "CoIP pool",
            "Outpost ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "EC2"
          ],
          "mentioned_tools": [
            "IAM Policy Editor"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a detailed reference for Amazon S3 on Outposts, including ARN formats, example IAM policies, and required permissions for endpoint management. It also explains the use of service-linked roles and conditions for access control.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the ARN formats for S3 on Outposts?",
            "What IAM permissions are required for S3 on Outposts endpoints?",
            "How can I create a bucket policy for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "ARN",
          "Amazon S3 on Outposts",
          "AWS GovCloud",
          "IAM permissions",
          "AWS account ID",
          "bucket policy",
          "service-linked roles",
          "CoIP pool",
          "access point",
          "IAM",
          "AWS Region",
          "EC2",
          "Amazon S3",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_136",
      "text": "For\nmore information, see Using service-linked roles for Amazon S3 on Outposts. Data encryption in S3 on Outposts\nBy default, all data stored in Amazon S3 on Outposts is encrypted by using server-side encryption\nwith Amazon S3 managed encryption keys (SSE-S3). For more information, see Using server-side\nencryption with Amazon S3 managed keys (SSE-S3) in the Amazon S3 User Guide. You can optionally use server-side encryption with customer-provided encryption keys (SSE-C). To\nuse SSE-C, specify an encryption key as part of your object API requests. Server-side encryption\nService-linked roles for S3 on Outposts API Version 2006-03-01 121\n\nAmazon S3 on Outposts User Guide\nencrypts only the object data, not the object metadata. For more information, see Using server-\nside encryption with customer-provided keys in the Amazon S3 User Guide. Note\nS3 on Outposts doesn't support server-side encryption with AWS Key Management Service\n(AWS KMS) keys (SSE-KMS). AWS PrivateLink for S3 on Outposts\nS3 on Outposts supports AWS PrivateLink, which provides direct management access to your S3\non Outposts storage through a private endpoint within your virtual private network. This allows\nyou to simplify your internal network architecture and perform management operations on your\nOutposts object storage by using private IP addresses in your Virtual Private Cloud (VPC).",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 207,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5032450358072916,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Encryption",
              "Networking",
              "Roles"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "server-side encryption",
            "SSE-S3",
            "SSE-C",
            "AWS PrivateLink",
            "virtual private network",
            "VPC",
            "encryption keys",
            "AWS KMS",
            "service-linked roles"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS PrivateLink",
            "SSE-S3",
            "SSE-C"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "AWS KMS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains encryption and networking features in Amazon S3 on Outposts, including server-side encryption options, service-linked roles, and AWS PrivateLink support for private endpoint access.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What encryption options are available for Amazon S3 on Outposts?",
            "How does AWS PrivateLink work with S3 on Outposts?",
            "Does S3 on Outposts support SSE-KMS encryption?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "VPC",
          "AWS KMS",
          "Amazon S3 on Outposts",
          "AWS PrivateLink",
          "service-linked roles",
          "virtual private network",
          "SSE-C",
          "SSE-S3",
          "encryption keys",
          "server-side encryption",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_137",
      "text": "Using\nAWS PrivateLink eliminates the need to use public IP addresses or proxy servers. With AWS PrivateLink for Amazon S3 on Outposts, you can provision interface VPC endpoints in\nyour virtual private cloud (VPC) to access your S3 on Outposts bucket management and endpoint\nmanagement APIs. Interface VPC endpoints are directly accessible from applications deployed\nin your VPC or on premises over your virtual private network (VPN) or AWS Direct Connect. You can access the bucket and endpoint management APIs through AWS PrivateLink. AWS\nPrivateLink doesn't support data transfer API operations, such as GET, PUT, and similar APIs. These\noperations are already transferred privately through the S3 on Outposts endpoint and access point\nconfiguration. For more information, see Networking for S3 on Outposts. Interface endpoints are represented by one or more elastic network interfaces (ENIs) that are\nassigned private IP addresses from subnets in your VPC. Requests made to interface endpoints for\nS3 on Outposts are automatically routed to S3 on Outposts bucket and endpoint management\nAPIs on the AWS network. You can also access interface endpoints in your VPC from on-premises\napplications through AWS Direct Connect or AWS Virtual Private Network (AWS VPN).",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 194,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5094491746690538,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Networking",
              "Configuration"
            ]
          },
          "keywords": [
            "AWS PrivateLink",
            "Amazon S3 on Outposts",
            "interface VPC endpoints",
            "elastic network interfaces",
            "AWS Direct Connect",
            "AWS VPN",
            "bucket management APIs",
            "endpoint management APIs",
            "subnets",
            "virtual private cloud"
          ],
          "entities": [
            "AWS PrivateLink",
            "Amazon S3 on Outposts",
            "VPC",
            "AWS Direct Connect",
            "AWS VPN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "API Management"
          ],
          "mentioned_services": [
            "AWS PrivateLink",
            "Amazon S3 on Outposts",
            "AWS Direct Connect"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how AWS PrivateLink enables secure access to Amazon S3 on Outposts bucket and endpoint management APIs via interface VPC endpoints in a virtual private cloud (VPC). It highlights routing, accessibility, and limitations of data transfer operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does AWS PrivateLink work with Amazon S3 on Outposts?",
            "What APIs can be accessed through AWS PrivateLink for S3 on Outposts?",
            "Can data transfer operations be performed using AWS PrivateLink?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC",
          "interface VPC endpoints",
          "Amazon S3 on Outposts",
          "AWS PrivateLink",
          "bucket management APIs",
          "endpoint management APIs",
          "subnets",
          "AWS VPN",
          "elastic network interfaces",
          "AWS Direct Connect",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_138",
      "text": "For more\ninformation about how to connect your VPC with your on-premises network, see the AWS Direct\nConnect User Guide and the AWS Site-to-Site VPN User Guide. Interface endpoints route requests for S3 on Outposts bucket and endpoint management APIs over\nthe AWS network and through AWS PrivateLink, as illustrated in the following diagram. AWS PrivateLink for S3 on Outposts API Version 2006-03-01 122\n\nAmazon S3 on Outposts User Guide\nFor general information about interface endpoints, see Interface VPC endpoints (AWS PrivateLink)\nin the AWS PrivateLink Guide. Topics\n\u2022 Restrictions and limitations\n\u2022 Accessing S3 on Outposts interface endpoints\n\u2022 Updating an on-premises DNS configuration\n\u2022 Creating a VPC endpoint for S3 on Outposts\n\u2022 Creating bucket policies and VPC endpoint policies for S3 on Outposts\nRestrictions and limitations\nWhen you access S3 on Outposts bucket and endpoint management APIs through AWS PrivateLink,\nVPC limitations apply. For more information, see Interface endpoint properties and limitations and\nAWS PrivateLink quotas in the AWS PrivateLink Guide. In addition, AWS PrivateLink doesn't support the following:\n\u2022 Federal Information Processing Standard (FIPS) endpoints\n\u2022 S3 on Outposts data transfer APIs, for example, GET, PUT, and similar object API operations. \u2022 Private DNS\nRestrictions and limitations API Version 2006-03-01 123\n\nAmazon S3 on Outposts User Guide\nAccessing S3 on Outposts interface endpoints\nTo access S3 on Outposts bucket and endpoint management APIs using AWS PrivateLink, you\nmust update your applications to use endpoint-specific DNS names. When you create an interface\nendpoint, AWS PrivateLink generates two types of endpoint-specific S3 on Outposts names:\nRegional and zonal. \u2022 Regional DNS names \u2013 include a unique VPC endpoint ID, a service identifier, the AWS Region,\nand vpce.amazonaws.com, for example, vpce-1a2b3c4d-5e6f.s3-outposts.us-\neast-1.vpce.amazonaws.com. \u2022 Zonal DNS names \u2013 include a unique VPC endpoint ID, the Availability Zone, a service identifier,\nthe AWS Region, and vpce.amazonaws.com, for example, vpce-1a2b3c4d-5e6f-us-\neast-1a.s3-outposts.us-east-1.vpce.amazonaws.com.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 309,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5704277886284722,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "VPC",
            "AWS PrivateLink",
            "S3 on Outposts",
            "interface endpoints",
            "DNS configuration",
            "bucket policies",
            "endpoint policies",
            "AWS Direct Connect",
            "zonal DNS names",
            "Regional DNS names"
          ],
          "entities": [
            "AWS PrivateLink",
            "S3 on Outposts",
            "VPC",
            "AWS Direct Connect",
            "DNS configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Storage",
            "DNS Management"
          ],
          "mentioned_services": [
            "AWS PrivateLink",
            "S3 on Outposts",
            "AWS Direct Connect"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to connect your VPC to on-premises networks and access S3 on Outposts using AWS PrivateLink, including restrictions, DNS configurations, and endpoint-specific details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the restrictions for using AWS PrivateLink with S3 on Outposts?",
            "How can I configure DNS for accessing S3 on Outposts interface endpoints?",
            "What are the differences between Regional and Zonal DNS names for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC",
          "AWS PrivateLink",
          "bucket policies",
          "AWS Direct Connect",
          "zonal DNS names",
          "Regional DNS names",
          "endpoint policies",
          "S3 on Outposts",
          "interface endpoints",
          "DNS configuration"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_139",
      "text": "You might use this option if\nyour architecture isolates Availability Zones. For example, you could use zonal DNS names for\nfault containment or to reduce Regional data transfer costs. Important\nS3 on Outposts interface endpoints are resolved from the public DNS domain. S3 on\nOutposts does not support private DNS. Use the --endpoint-url parameter for all\nbucket and endpoint management APIs. AWS CLI examples\nUse the --region and --endpoint-url parameters to access bucket management and endpoint\nmanagement APIs through S3 on Outposts interface endpoints. Example : Use the endpoint URL to list buckets with the S3 control API\nIn the following example, replace the Region us-east-1, VPC endpoint URL\nvpce-1a2b3c4d-5e6f.s3.us-east-1.vpce.amazonaws.com, and account ID 111122223333\nwith appropriate information. aws s3control list-regional-buckets --region us-east-1 --endpoint-url\nhttps://vpce-1a2b3c4d-5e6f.s3-outposts.us-east-1.vpce.amazonaws.com --account-\nid 111122223333\nAccessing S3 on Outposts interface endpoints API Version 2006-03-01 124\n\nAmazon S3 on Outposts User Guide\nAWS SDK examples\nUpdate your SDKs to the latest version, and configure your clients to use an endpoint URL for\naccessing the S3 control API for S3 on Outposts interface endpoints. SDK for Python (Boto3)\nExample : Use an endpoint URL to access the S3 control API\nIn the following example, replace the Region us-east-1 and VPC endpoint URL\nvpce-1a2b3c4d-5e6f.s3-outposts.us-east-1.vpce.amazonaws.com with appropriate\ninformation. control_client = session.client(\nservice_name='s3control',\nregion_name='us-east-1',\nendpoint_url='https://vpce-1a2b3c4d-5e6f.s3-outposts.us-east-1.vpce.amazonaws.com'\n)\nFor more information, see AWS PrivateLink for Amazon S3 in the Boto3 developer guide.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 227,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4221038394504123,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "Availability Zones",
            "zonal DNS names",
            "S3 on Outposts",
            "private DNS",
            "endpoint URL",
            "AWS CLI",
            "bucket management",
            "VPC endpoint",
            "S3 control API",
            "Boto3"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Boto3",
            "VPC endpoint",
            "AWS PrivateLink"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and use endpoint URLs for accessing S3 on Outposts interface endpoints with AWS CLI and SDKs like Boto3, including examples for bucket and endpoint management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure S3 on Outposts with a VPC endpoint?",
            "What is the correct way to use the AWS CLI for S3 control API?",
            "How can I use Boto3 to access S3 on Outposts interface endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Availability Zones",
          "AWS PrivateLink",
          "VPC endpoint",
          "private DNS",
          "endpoint URL",
          "bucket management",
          "S3 control API",
          "S3 on Outposts",
          "zonal DNS names",
          "Boto3",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_140",
      "text": "SDK for Java 2.x\nExample : Use an endpoint URL to access the S3 control API\nIn the following example, replace the VPC endpoint URL vpce-1a2b3c4d-5e6f.s3-\noutposts.us-east-1.vpce.amazonaws.com and the Region Region.US_EAST_1 with\nappropriate information. // control client\nRegion region = Region.US_EAST_1;\ns3ControlClient = S3ControlClient.builder().region(region)\n.endpointOverride(URI.create(\"https://vpce-1a2b3c4d-5e6f.s3-outposts.us-\neast-1.vpce.amazonaws.com\"))\n.build()\nFor more information, see S3ControlClient in the AWS SDK for Java API Reference. Accessing S3 on Outposts interface endpoints API Version 2006-03-01 125\n\nAmazon S3 on Outposts User Guide\nUpdating an on-premises DNS configuration\nWhen using endpoint-specific DNS names to access the interface endpoints for S3 on Outposts\nbucket management and endpoint management APIs, you don\u2019t have to update your on-premises\nDNS resolver. You can resolve the endpoint-specific DNS name with the private IP address of the\ninterface endpoint from the public S3 on Outposts DNS domain. Creating a VPC endpoint for S3 on Outposts\nTo create a VPC interface endpoint for S3 on Outposts, see Create a VPC endpoint in the AWS\nPrivateLink Guide. Creating bucket policies and VPC endpoint policies for S3 on Outposts\nYou can attach an endpoint policy to your VPC endpoint that controls access to S3 on Outposts. You can also use the aws:sourceVpce condition in S3 on Outposts bucket policies to restrict\naccess to specific buckets from a specific VPC endpoint. With VPC endpoint policies, you can\ncontrol access to S3 on Outposts bucket management APIs and endpoint management APIs. With\nbucket policies, you can control access to the S3 on Outposts bucket management APIs. However,\nyou can't manage access to object actions for S3 on Outposts using aws:sourceVpce.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 262,
        "chunk_type": "semantic_split",
        "coherence_score": 0.674737548828125,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Configuration"
            ]
          },
          "keywords": [
            "VPC endpoint",
            "S3 on Outposts",
            "endpoint policy",
            "bucket policy",
            "aws:sourceVpce",
            "DNS configuration",
            "interface endpoints",
            "S3ControlClient",
            "AWS SDK for Java",
            "PrivateLink"
          ],
          "entities": [
            "AWS SDK for Java",
            "S3 on Outposts",
            "VPC endpoint",
            "Region.US_EAST_1",
            "S3ControlClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "S3ControlClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and use VPC endpoints and policies for accessing Amazon S3 on Outposts using the AWS SDK for Java. It includes a code example for setting up an S3ControlClient with a specific endpoint URL.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a VPC endpoint for S3 on Outposts?",
            "What is the role of endpoint policies in managing access to S3 on Outposts?",
            "How do I use the AWS SDK for Java to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Region.US_EAST_1",
          "AWS PrivateLink",
          "VPC endpoint",
          "S3ControlClient",
          "bucket policy",
          "endpoint policy",
          "S3 on Outposts",
          "aws:sourceVpce",
          "interface endpoints",
          "PrivateLink",
          "DNS configuration",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_141",
      "text": "Access policies for S3 on Outposts specify the following information:\n\u2022 The AWS Identity and Access Management (IAM) principal for which actions are allowed or\ndenied. \u2022 The S3 control actions that are allowed or denied. \u2022 The S3 on Outposts resources on which actions are allowed or denied. The following examples show policies that restrict access to a bucket or to an endpoint. For\nmore information about VPC connectivity, see Network-to-VPC connectivity options in the AWS\nwhitepaper Amazon Virtual Private Cloud Connectivity Options. Important\n\u2022 When you apply the example policies for VPC endpoints described in this section, you\nmight block your access to the bucket without intending to do so. Bucket permissions\nthat limit bucket access to connections originating from your VPC endpoint can block\nUpdating an on-premises DNS configuration API Version 2006-03-01 126\n\nAmazon S3 on Outposts User Guide\nall connections to the bucket. For information about how to fix this issue, see My bucket\npolicy has the wrong VPC or VPC endpoint ID. How can I fix the policy so that I can access\nthe bucket? in the AWS Support Knowledge Center.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.42300516764322915,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "Access policies",
            "S3 on Outposts",
            "IAM principal",
            "S3 control actions",
            "VPC connectivity",
            "bucket permissions",
            "endpoint",
            "DNS configuration",
            "VPC endpoint",
            "AWS Support Knowledge Center"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "VPC",
            "IAM",
            "AWS Support Knowledge Center"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon VPC",
            "AWS Support Knowledge Center"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains access policies for S3 on Outposts, highlighting IAM principals, S3 actions, and resources, along with warnings about potential VPC endpoint misconfigurations.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What are access policies for S3 on Outposts?",
            "How do VPC endpoint restrictions affect bucket access?",
            "How can I fix an incorrect VPC or VPC endpoint ID in my bucket policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Support Knowledge Center",
          "VPC",
          "VPC endpoint",
          "IAM",
          "Outposts",
          "bucket permissions",
          "S3 control actions",
          "Access policies",
          "S3 on Outposts",
          "endpoint",
          "DNS configuration",
          "VPC connectivity",
          "Amazon VPC",
          "Amazon S3",
          "IAM principal"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_142",
      "text": "\u2022 Before using the following example bucket policies, replace the VPC endpoint ID with an\nappropriate value for your use case. Otherwise, you won't be able to access your bucket. \u2022 If your policy only allows access to an S3 on Outposts bucket from a specific VPC\nendpoint, it disables console access for that bucket because console requests don't\noriginate from the specified VPC endpoint. Topics\n\u2022 Example: Restricting access to a specific bucket from a VPC endpoint\n\u2022 Example: Denying access from a specific VPC endpoint in an S3 on Outposts bucket policy\nExample: Restricting access to a specific bucket from a VPC endpoint\nYou can create an endpoint policy that restricts access to specific S3 on Outposts buckets only. The\nfollowing policy restricts access for the GetBucketPolicy action only to the example-outpost-\nbucket. To use this policy, replace the example values with your own. {\n\"Version\": \"2012-10-17\",\n\"Id\": \"Policy1415115909151\",\n\"Statement\": [\n{ \"Sid\": \"Access-to-specific-bucket-only\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:GetBucketPolicy\",\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outpost-\nbucket\"\n}\n]\n}\nCreating VPC endpoint policies and bucket policies API Version 2006-03-01 127\n\nAmazon S3 on Outposts User Guide\nExample: Denying access from a specific VPC endpoint in an S3 on Outposts\nbucket policy\nThe following S3 on Outposts bucket policy denies access to GetBucketPolicy on the example-\noutpost-bucket bucket through the vpce-1a2b3c4d VPC endpoint. The aws:sourceVpce condition specifies the endpoint and does not require an Amazon Resource\nName (ARN) for the VPC endpoint resource, only the endpoint ID. To use this policy, replace the\nexample values with your own. {\n\"Version\": \"2012-10-17\",\n\"Id\": \"Policy1415115909152\",\n\"Statement\": [\n{\n\"Sid\": \"Deny-access-to-specific-VPCE\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:GetBucketPolicy\",\n\"Effect\": \"Deny\",\n\"Resource\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outpost-\nbucket\",\n\"Condition\": {\n\"StringEquals\": {\"aws:sourceVpce\": \"vpce-1a2b3c4d\"}\n}\n}\n]\n}\nAWS Signature Version 4 (SigV4) authentication-specific policy\nkeys\nThe following table shows the condition keys related to AWS Signature Version 4 (SigV4)\nauthentication that you can use with Amazon S3 on Outposts.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 318,
        "chunk_type": "semantic_split",
        "coherence_score": 0.44892853630913626,
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Bucket Policy",
              "Access Restriction",
              "VPC Endpoint"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "bucket policy",
            "GetBucketPolicy",
            "aws:sourceVpce",
            "ARN",
            "SigV4 authentication",
            "condition keys",
            "Amazon Resource Name",
            "AWS Signature Version 4"
          ],
          "entities": [
            "example-outpost-bucket",
            "vpce-1a2b3c4d",
            "AWS",
            "ARN",
            "SigV4"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "AWS Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS VPC",
            "AWS Signature Version 4"
          ],
          "mentioned_tools": [
            "Policy Editor"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of bucket policies for Amazon S3 on Outposts, including restricting access via specific VPC endpoints and denying access using conditions based on endpoint IDs.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I restrict access to an S3 bucket from a specific VPC endpoint?",
            "How can I deny access to an S3 bucket using VPC endpoint conditions?",
            "What condition keys are related to AWS Signature Version 4 authentication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "ARN",
          "example-outpost-bucket",
          "GetBucketPolicy",
          "VPC endpoint",
          "SigV4",
          "bucket policy",
          "vpce-1a2b3c4d",
          "Amazon S3 on Outposts",
          "Amazon Resource Name",
          "condition keys",
          "AWS VPC",
          "S3 on Outposts",
          "aws:sourceVpce",
          "SigV4 authentication"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_143",
      "text": "In a bucket policy, you can add\nthese conditions to enforce specific behavior when requests are authenticated by using Signature\nVersion 4. For example policies, see Bucket policy examples that use Signature Version 4-related\ncondition keys. For more information about authenticating requests using Signature Version 4,\nsee Authenticating requests (AWS Signature Version 4) in the Amazon Simple Storage Service API\nReference\nSignature Version 4 (SigV4) policy keys API Version 2006-03-01 128\n\nAmazon S3 on Outposts User Guide\nApplicable keys Description\ns3-outpos S3 on Outposts supports various methods of authentication. To restrict\nts:authType incoming requests to use a specific authentication method, you can use\nthis optional condition key. For example, you can use this condition key\nto allow only the HTTP Authorization header to be used in request\nauthentication. Valid values:\nREST-HEADER\nREST-QUERY-STRING\ns3-outpos The length of time, in milliseconds, that a signature is valid in an\nts:signatur authenticated request. eAge\nThis condition works only for presigned URLs. In Signature Version 4, the signing key is valid for up to seven days. Therefore, the signatures are also valid for up to seven days. For more\ninformation, see Introduction to signing requests in the Amazon Simple\nStorage Service API Reference.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 10,
        "num_words": 198,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3814289093017578,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "bucket policy",
            "Signature Version 4",
            "condition keys",
            "authentication",
            "presigned URLs",
            "Amazon S3",
            "S3 on Outposts",
            "authType",
            "signatures",
            "signing key"
          ],
          "entities": [
            "Signature Version 4",
            "s3-outposts",
            "Amazon S3",
            "HTTP Authorization header",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "Authentication",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use specific condition keys in bucket policies to enforce behavior when using Signature Version 4 for authentication in Amazon S3 and S3 on Outposts. It also discusses validity periods for signatures and provides examples of applicable keys.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the condition keys for Signature Version 4 in bucket policies?",
            "How can I restrict authentication methods in S3 on Outposts?",
            "What is the validity period for presigned URL signatures in Signature Version 4?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "signing key",
          "authType",
          "signatures",
          "presigned URLs",
          "HTTP Authorization header",
          "bucket policy",
          "condition keys",
          "S3 on Outposts",
          "authentication",
          "s3-outposts",
          "Amazon S3",
          "Signature Version 4"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_144",
      "text": "You can use this condition to further limit\nthe signature age. Example value: 600000\ns3-outposts:x- You can use this condition key to disallow unsigned content in your\namz-content- bucket. sha256\nWhen you use Signature Version 4, for requests that use the\nAuthorization header, you add the x-amz-content-sha256\nheader in the signature calculation and then set its value to the hash\npayload. You can use this condition key in your bucket policy to deny any uploads\nwhere the payloads are not signed. For example:\n\u2022 Deny uploads that use the Authorization header to authentic\nate requests but don't sign the payload. For more information, see\nSignature Version 4 (SigV4) policy keys API Version 2006-03-01 129\n\nAmazon S3 on Outposts User Guide\nApplicable keys Description\nTransferring payload in a single chunk in the Amazon Simple Storage\nService API Reference. \u2022 Deny uploads that use presigned URLs. Presigned URLs always have\nan UNSIGNED_PAYLOAD . For more information, see Authenticating\nrequests and Authentication methods in the Amazon Simple Storage\nService API Reference. Valid value: UNSIGNED-PAYLOAD\nBucket policy examples that use Signature Version 4-related condition\nkeys\nTo use the following examples, replace the user input placeholders with your own\ninformation. Example : s3-outposts:signatureAge\nThe following bucket policy denies any S3 on Outposts presigned URL request on objects in\nexample-outpost-bucket if the signature is more than 10 minutes old. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny a presigned URL request if the signature is more than 10\nminutes old\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"444455556666\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"NumericGreaterThan\": {\"s3-outposts:signatureAge\": 600000},\n\"StringEquals\": {\"s3-outposts:authType\": \"REST-QUERY-STRING\"}\n}\n}\nBucket policy examples that use Signature Version 4-related condition keys API Version 2006-03-01 130\n\nAmazon S3 on Outposts User Guide\n]\n}\nExample : s3-outposts:authType\nThe following bucket policy allows only requests that use the Authorization header for\nrequest authentication. Any presigned URL requests will be denied since presigned URLs use\nquery parameters to provide request and authentication information.",
      "start_idx": 224298,
      "end_idx": 239920,
      "metadata": {
        "num_sentences": 13,
        "num_words": 323,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4091947506635617,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Policy",
              "Condition Keys"
            ]
          },
          "keywords": [
            "Signature Version 4",
            "s3-outposts",
            "presigned URLs",
            "x-amz-content-sha256",
            "bucket policy",
            "authType",
            "signatureAge",
            "Authorization header",
            "UNSIGNED_PAYLOAD",
            "REST-QUERY-STRING"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "SigV4",
            "AWS",
            "example-outpost-bucket",
            "us-east-1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "AWS S3 Policies",
            "Authentication Methods"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Signature Version 4"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This document explains how to use Signature Version 4-related condition keys in Amazon S3 on Outposts bucket policies to enforce secure uploads and deny unsigned content, including examples of policies for specific conditions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I deny unsigned content in an S3 bucket on Outposts?",
            "What is the purpose of the s3-outposts:signatureAge condition key?",
            "How do presigned URLs interact with Signature Version 4 policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "authType",
          "Amazon S3 on Outposts",
          "presigned URLs",
          "Authorization header",
          "SigV4",
          "bucket policy",
          "UNSIGNED_PAYLOAD",
          "example-outpost-bucket",
          "REST-QUERY-STRING",
          "x-amz-content-sha256",
          "signatureAge",
          "s3-outposts",
          "us-east-1",
          "AWS"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_145",
      "text": "For more information, see\nAuthentication methods in the Amazon Simple Storage Service API Reference. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Allow only requests that use the Authorization header for\nrequest authentication. Deny presigned URL requests. \",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"StringNotEquals\": {\n\"s3-outposts:authType\": \"REST-HEADER\"\n}\n}\n}\n]\n}\nExample : s3-outposts:x-amz-content-sha256\nThe following bucket policy denies any uploads with unsigned payloads, such as uploads that are\nusing presigned URLs. For more information, see Authenticating requests and Authentication\nmethods in the Amazon Simple Storage Service API Reference. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny uploads with unsigned payloads. \",\nBucket policy examples that use Signature Version 4-related condition keys API Version 2006-03-01 131\n\nAmazon S3 on Outposts User Guide\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"StringEquals\": {\n\"s3-outposts:x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n}\n}\n}\n]\n}\nAWS managed policies for Amazon S3 on Outposts\nAn AWS managed policy is a standalone policy that is created and administered by AWS. AWS\nmanaged policies are designed to provide permissions for many common use cases so that you can\nstart assigning permissions to users, groups, and roles. Keep in mind that AWS managed policies might not grant least-privilege permissions for your\nspecific use cases because they're available for all AWS customers to use. We recommend that you\nreduce permissions further by defining customer managed policies that are specific to your use\ncases.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 243,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3734643300374349,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Authentication",
            "Authorization header",
            "presigned URLs",
            "Signature Version 4",
            "bucket policy",
            "condition keys",
            "UNSIGNED-PAYLOAD",
            "AWS managed policies"
          ],
          "entities": [
            "Amazon Simple Storage Service",
            "AWS",
            "s3-outposts:authType",
            "s3-outposts:x-amz-content-sha256",
            "arn:aws:s3-outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "IAM Policies",
            "API Authentication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains authentication methods and bucket policies for Amazon S3 on Outposts, focusing on restricting access via Authorization headers and denying unsigned payload uploads. It highlights the use of AWS managed policies and Signature Version 4 for enhanced security configurations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I deny presigned URL requests in Amazon S3 on Outposts?",
            "What are the condition keys used for bucket policies in Signature Version 4?",
            "What permissions do AWS managed policies provide for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "presigned URLs",
          "Authorization header",
          "UNSIGNED-PAYLOAD",
          "bucket policy",
          "AWS managed policies",
          "Amazon Simple Storage Service",
          "condition keys",
          "Authentication",
          "AWS",
          "s3-outposts:authType",
          "s3-outposts:x-amz-content-sha256",
          "arn:aws:s3-outposts",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_146",
      "text": "You cannot change the permissions defined in AWS managed policies. If AWS updates the\npermissions defined in an AWS managed policy, the update affects all principal identities (users,\ngroups, and roles) that the policy is attached to. AWS is most likely to update an AWS managed\npolicy when a new AWS service is launched or new API operations become available for existing\nservices. For more information, see AWS managed policies in the IAM User Guide. AWS managed policy: AWSS3OnOutpostsServiceRolePolicy\nHelps manage network resources for you as part of the service-linked role\nAWSServiceRoleForS3OnOutposts. To view the permissions for this policy, see AWSS3OnOutpostsServiceRolePolicy. AWS managed policies API Version 2006-03-01 132\n\nAmazon S3 on Outposts User Guide\nS3 on Outposts updates to AWS managed policies\nView details about updates to AWS managed policies for S3 on Outposts since this service began\ntracking these changes. Change Description Date\nS3 on Outposts added S3 on Outposts added October 3, 2023\nAWSS3OnOutpostsSer AWSS3OnOutpostsSer\nviceRolePolicy viceRolePolicy as part\nof the service-linked role\nAWSServiceRoleForS\n3OnOutposts , which helps\nmanage network resources\nfor you. S3 on Outposts started S3 on Outposts started October 3, 2023\ntracking changes tracking changes for its AWS\nmanaged policies. Using service-linked roles for Amazon S3 on Outposts\nAmazon S3 on Outposts uses AWS Identity and Access Management (IAM) service-linked roles.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5217503865559896,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Details",
              "Service Updates",
              "Role Management"
            ]
          },
          "keywords": [
            "AWS managed policies",
            "IAM",
            "S3 on Outposts",
            "service-linked roles",
            "permissions",
            "AWSServiceRoleForS3OnOutposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "API operations",
            "network resources",
            "policy updates"
          ],
          "entities": [
            "AWS managed policies",
            "IAM",
            "Amazon S3 on Outposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "AWSServiceRoleForS3OnOutposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security and Access Management",
          "secondary_categories": [
            "Policy Updates",
            "Service-Linked Roles"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains AWS managed policies, focusing on updates to policies for Amazon S3 on Outposts, and the use of service-linked roles to manage network resources effectively.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are AWS managed policies and how do they work?",
            "What updates have been made to S3 on Outposts managed policies?",
            "How are service-linked roles used in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Security and Access Management]",
        "tf_idf_keywords": [
          "AWSS3OnOutpostsServiceRolePolicy",
          "Amazon S3 on Outposts",
          "network resources",
          "policy updates",
          "AWS managed policies",
          "service-linked roles",
          "S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "API operations",
          "IAM",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_147",
      "text": "A\nservice-linked role is a unique type of IAM role that is linked directly to S3 on Outposts. Service-\nlinked roles are predefined by S3 on Outposts and include all the permissions that the service\nrequires to call other AWS services on your behalf. A service-linked role makes setting up S3 on Outposts easier because you don\u2019t have to manually\nadd the necessary permissions. S3 on Outposts defines the permissions of its service-linked roles,\nand unless defined otherwise, only S3 on Outposts can assume its roles. The defined permissions\ninclude the trust policy and the permissions policy, and that permissions policy cannot be attached\nto any other IAM entity. You can delete a service-linked role only after first deleting their related resources. This protects\nyour S3 on Outposts resources because you can't inadvertently remove permission to access the\nresources. Policy updates API Version 2006-03-01 133\n\nAmazon S3 on Outposts User Guide\nFor information about other services that support service-linked roles, see AWS Services That Work\nwith IAM and look for the services that have Yes in the Service-linked roles column. Choose a Yes\nwith a link to view the service-linked role documentation for that service. Service-linked role permissions for S3 on Outposts\nS3 on Outposts uses the service-linked role named AWSServiceRoleForS3OnOutposts to help\nmanage network resources for you.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 218,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5840805053710938,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "IAM Role",
              "Service-Linked Role",
              "Permissions"
            ]
          },
          "keywords": [
            "service-linked role",
            "IAM role",
            "S3 on Outposts",
            "permissions policy",
            "trust policy",
            "AWS services",
            "API Version 2006-03-01",
            "AWSServiceRoleForS3OnOutposts",
            "network resources",
            "deleting resources"
          ],
          "entities": [
            "S3 on Outposts",
            "IAM",
            "AWSServiceRoleForS3OnOutposts",
            "AWS Services That Work with IAM",
            "Amazon S3 on Outposts User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Services"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "AWS Services"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the concept of service-linked roles in AWS, specifically for S3 on Outposts, detailing their predefined permissions, trust policies, and usage constraints to manage resources securely and efficiently.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is a service-linked role for S3 on Outposts?",
            "How do service-linked roles simplify permissions management?",
            "What are the constraints for deleting a service-linked role?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "network resources",
          "AWS Services That Work with IAM",
          "service-linked role",
          "IAM",
          "deleting resources",
          "IAM role",
          "trust policy",
          "S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "AWS Services",
          "AWS services",
          "Amazon S3 on Outposts User Guide",
          "permissions policy"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_148",
      "text": "The AWSServiceRoleForS3OnOutposts service-linked role trusts the following services to\nassume the role:\n\u2022 s3-outposts.amazonaws.com\nThe role permissions policy named AWSS3OnOutpostsServiceRolePolicy allows S3 on\nOutposts to complete the following actions on the specified resources:\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:DescribeSubnets\",\n\"ec2:DescribeSecurityGroups\",\n\"ec2:DescribeNetworkInterfaces\",\n\"ec2:DescribeVpcs\",\n\"ec2:DescribeCoipPools\",\n\"ec2:GetCoipPoolUsage\",\n\"ec2:DescribeAddresses\",\n\"ec2:DescribeLocalGatewayRouteTableVpcAssociations\"\n],\n\"Resource\": \"*\",\n\"Sid\": \"DescribeVpcResources\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateNetworkInterface\"\n],\n\"Resource\": [\n\"arn:aws:ec2:*:*:subnet/*\",\n\"arn:aws:ec2:*:*:security-group/*\"\nService-linked role permissions for S3 on Outposts API Version 2006-03-01 134\n\nAmazon S3 on Outposts User Guide\n],\n\"Sid\": \"CreateNetworkInterface\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateNetworkInterface\"\n],\n\"Resource\": [\n\"arn:aws:ec2:*:*:network-interface/*\"\n],\n\"Condition\": {\n\"StringEquals\": {\n\"aws:RequestTag/CreatedBy\": \"S3 On Outposts\"\n}\n},\n\"Sid\": \"CreateTagsForCreateNetworkInterface\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:AllocateAddress\"\n],\n\"Resource\": [\n\"arn:aws:ec2:*:*:ipv4pool-ec2/*\"\n],\n\"Sid\": \"AllocateIpAddress\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:AllocateAddress\"\n],\n\"Resource\": [\n\"arn:aws:ec2:*:*:elastic-ip/*\"\n],\n\"Condition\": {\n\"StringEquals\": {\n\"aws:RequestTag/CreatedBy\": \"S3 On Outposts\"\n}\n},\n\"Sid\": \"CreateTagsForAllocateIpAddress\"\n},\n{\nService-linked role permissions for S3 on Outposts API Version 2006-03-01 135\n\nAmazon S3 on Outposts User Guide\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:ModifyNetworkInterfaceAttribute\",\n\"ec2:CreateNetworkInterfacePermission\",\n\"ec2:DeleteNetworkInterface\",\n\"ec2:DeleteNetworkInterfacePermission\",\n\"ec2:DisassociateAddress\",\n\"ec2:ReleaseAddress\",\n\"ec2:AssociateAddress\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"aws:ResourceTag/CreatedBy\": \"S3 On Outposts\"\n}\n},\n\"Sid\": \"ReleaseVpcResources\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateTags\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"ec2:CreateAction\": [\n\"CreateNetworkInterface\",\n\"AllocateAddress\"\n],\n\"aws:RequestTag/CreatedBy\": [\n\"S3 On Outposts\"\n]\n}\n},\n\"Sid\": \"CreateTags\"\n}\n]\n}\nYou must configure permissions to allow an IAM entity (such as a role) to create, edit, or delete a\nservice-linked role. For more information, see Service-linked role permissions in the IAM User Guide. Service-linked role permissions for S3 on Outposts API Version 2006-03-01 136\n\nAmazon S3 on Outposts User Guide\nCreating a service-linked role for S3 on Outposts\nYou don't need to manually create a service-linked role. When you create an S3 on Outposts\nendpoint in the AWS Management Console, the AWS CLI, or the AWS API, S3 on Outposts creates\nthe service-linked role for you. If you delete this service-linked role, and then need to create it again, you can use the same process\nto recreate the role in your account. When you create an S3 on Outposts endpoint, S3 on Outposts\ncreates the service-linked role for you again. You can also use the IAM console to create a service-linked role with the S3 on Outposts\nuse case. In the AWS CLI or the AWS API, create a service-linked role with the s3-\noutposts.amazonaws.com service name. For more information, see Creating a service-linked\nrole in the IAM User Guide. If you delete this service-linked role, you can use this same process to\ncreate the role again.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 433,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5904212103949653,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "IAM Role Configuration",
              "Service Integration"
            ]
          },
          "keywords": [
            "AWSServiceRoleForS3OnOutposts",
            "service-linked role",
            "permissions policy",
            "S3 on Outposts",
            "IAM",
            "ec2 actions",
            "resource tagging",
            "AWS CLI",
            "AWS API",
            "service trust"
          ],
          "entities": [
            "AWSServiceRoleForS3OnOutposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "s3-outposts.amazonaws.com",
            "Amazon S3 on Outposts",
            "IAM User Guide"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "IAM Role and Permissions Management",
          "secondary_categories": [
            "S3 on Outposts",
            "AWS Service Integration"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "EC2"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API",
            "IAM Console"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the AWSServiceRoleForS3OnOutposts service-linked role, its permissions policy, and how it facilitates S3 on Outposts operations by allowing specific EC2 actions. It also explains the automated and manual processes for creating and managing this role.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What actions are allowed by the AWSS3OnOutpostsServiceRolePolicy?",
            "How can I create a service-linked role for S3 on Outposts?",
            "What services are trusted by the AWSServiceRoleForS3OnOutposts role?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [IAM Role and Permissions Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "s3-outposts.amazonaws.com",
          "ec2 actions",
          "AWS API",
          "Amazon S3 on Outposts",
          "service-linked role",
          "resource tagging",
          "AWS CLI",
          "S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "service trust",
          "IAM",
          "EC2",
          "permissions policy",
          "AWSS3OnOutpostsServiceRolePolicy"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_149",
      "text": "Editing a service-linked role for S3 on Outposts\nS3 on Outposts does not allow you to edit the AWSServiceRoleForS3OnOutposts service-\nlinked role. This includes the name of the role because various entities might reference it. However,\nyou can edit the description of the role using IAM. For more information, see Editing a service-\nlinked role in the IAM User Guide. Deleting a service-linked role for S3 on Outposts\nIf you no longer need to use a feature or service that requires a service-linked role, we recommend\nthat you delete that role. That way you don\u2019t have an unused entity that is not actively monitored\nor maintained. However, you must clean up the resources for your service-linked role before you\ncan manually delete it. Note\nIf the S3 on Outposts service is using the role when you try to delete the resources, then\nthe deletion might fail. If that happens, wait for a few minutes and try the operation again. To delete S3 on Outposts resources used by the AWSServiceRoleForS3OnOutposts role\n1.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.39283743964301215,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Editing",
              "Deleting",
              "Service-Linked Roles"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "service-linked role",
            "AWSServiceRoleForS3OnOutposts",
            "IAM",
            "delete resources",
            "description editing",
            "role deletion",
            "resources cleanup",
            "failure handling",
            "Outposts resources"
          ],
          "entities": [
            "AWSServiceRoleForS3OnOutposts",
            "S3 on Outposts",
            "IAM User Guide",
            "service-linked role",
            "Outposts resources"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Storage",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage the AWSServiceRoleForS3OnOutposts service-linked role, including editing its description and deleting it after cleaning up resources. It also provides guidance on handling potential deletion failures.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I edit the description of the AWSServiceRoleForS3OnOutposts role?",
            "What steps are required to delete a service-linked role for S3 on Outposts?",
            "What should I do if the role deletion fails?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Identity and Access Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "service-linked role",
          "role deletion",
          "delete resources",
          "Outposts resources",
          "failure handling",
          "S3 on Outposts",
          "AWSServiceRoleForS3OnOutposts",
          "description editing",
          "resources cleanup",
          "IAM"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_150",
      "text": "Delete the S3 on Outposts endpoints in your AWS account across all AWS Regions. Creating a service-linked role for S3 on Outposts API Version 2006-03-01 137\n\nAmazon S3 on Outposts User Guide\n2. Delete the service-linked role using IAM. Use the IAM console, the AWS CLI, or the AWS API to delete the\nAWSServiceRoleForS3OnOutposts service-linked role. For more information, see Deleting\na service-linked role in the IAM User Guide. Supported Regions for S3 on Outposts service-linked roles\nS3 on Outposts supports using service-linked roles in all of the AWS Regions where the service is\navailable. For more information, see S3 on Outposts Regions and endpoints. Supported Regions for S3 on Outposts service-linked roles API Version 2006-03-01 138\n\nAmazon S3 on Outposts User Guide\nManaging S3 on Outposts storage\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC).",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 218,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4880832672119141,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Deletion"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "service-linked role",
            "AWS Regions",
            "IAM User Guide",
            "Outposts bucket",
            "storage class",
            "VPC",
            "endpoints",
            "access point",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "IAM",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "IAM Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete S3 on Outposts endpoints and service-linked roles across AWS Regions, and provides guidance on managing S3 buckets on AWS Outposts for local data access and processing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete the service-linked role for S3 on Outposts?",
            "What are the supported AWS Regions for S3 on Outposts?",
            "How do I manage storage on S3 buckets for AWS Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "VPC",
          "endpoints",
          "API Version 2006-03-01",
          "AWS Outposts",
          "storage class",
          "Outposts bucket",
          "service-linked role",
          "AWS CLI",
          "S3 Outposts",
          "access point",
          "S3 on Outposts",
          "IAM",
          "Amazon S3",
          "AWS Regions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_151",
      "text": "You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? For more information about managing and sharing your Amazon S3 on Outposts storage capacity,\nsee the following topics. Topics\n\u2022 Managing S3 Versioning for your S3 on Outposts bucket\n\u2022 Creating and managing a lifecycle configuration for your Amazon S3 on Outposts bucket\n\u2022 Replicating objects for S3 on Outposts\n\u2022 Sharing S3 on Outposts by using AWS RAM\n\u2022 Other AWS services that use S3 on Outposts\nManaging S3 Versioning for your S3 on Outposts bucket\nWhen enabled, S3 Versioning saves multiple distinct copies of an object in the same bucket. You\ncan use S3 Versioning to preserve, retrieve, and restore every version of every object stored in your\nOutposts buckets. S3 Versioning helps you recover from unintended user actions and application\nfailures. Amazon S3 on Outposts buckets have three versioning states:\n\u2022 Unversioned \u2013 If you\u2019ve never enabled or suspended S3 Versioning on your bucket, it is\nunversioned and returns no S3 Versioning status. For more information about S3 Versioning, see\nManaging S3 Versioning for your S3 on Outposts bucket. Managing S3 Versioning API Version 2006-03-01 139\n\nAmazon S3 on Outposts User Guide\n\u2022 Enabled \u2013 Enables S3 Versioning for the objects in the bucket.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 253,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6942005581325955,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 Versioning",
            "Outpost buckets",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "lifecycle configuration",
            "object replication",
            "AWS RAM"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "AWS Management Console",
            "AWS CLI",
            "AWS RAM"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Versioning",
            "AWS Service Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS RAM",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use Amazon S3 on Outposts, including features like versioning, lifecycle configurations, and object replication, and describes access methods through AWS tools and APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning on Outposts buckets?",
            "What tools can I use to manage S3 on Outposts?",
            "What are the versioning states for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Amazon S3 on Outposts",
          "AWS Management Console",
          "object replication",
          "AWS RAM",
          "Outposts buckets",
          "AWS SDKs",
          "REST API",
          "Outpost buckets",
          "lifecycle configuration",
          "S3 Versioning",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_152",
      "text": "All objects added to the bucket\nreceive a unique version ID. Objects that already existed in the bucket at the time that you\nenable versioning have a version ID of null. If you modify these (or any other) objects with other\noperations, such as PutObject, the new objects get a unique version ID. \u2022 Suspended \u2013 Suspends S3 Versioning for the objects in the bucket. All objects added to the\nbucket after versioning is suspended receive the version ID null. For more information, see\nAdding objects to versioning-suspended buckets in the Amazon S3 User Guide. After you enable S3 Versioning for an S3 on Outposts bucket, it can never return to an unversioned\nstate. However, you can suspend versioning. For more information about S3 Versioning, see\nManaging S3 Versioning for your S3 on Outposts bucket. For each object in your bucket, you have a current version and zero or more noncurrent versions.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 10,
        "num_words": 152,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5466082255045573,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "version ID",
            "PutObject",
            "versioning-suspended",
            "Amazon S3 User Guide",
            "S3 on Outposts",
            "current version",
            "noncurrent versions",
            "bucket",
            "objects"
          ],
          "entities": [
            "S3 Versioning",
            "Amazon S3",
            "S3 on Outposts",
            "PutObject",
            "Amazon S3 User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Version Control",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains S3 Versioning, including how version IDs are assigned to objects in a bucket, the effects of enabling or suspending versioning, and the persistence of versioning settings for S3 on Outposts buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What happens to objects in an S3 bucket when versioning is enabled?",
            "Can S3 Versioning be disabled after being enabled?",
            "What is the behavior of version IDs in a versioning-suspended bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "PutObject",
          "versioning-suspended",
          "version ID",
          "current version",
          "noncurrent versions",
          "objects",
          "S3 on Outposts",
          "S3 Versioning",
          "bucket",
          "Amazon S3",
          "Amazon S3 User Guide"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_153",
      "text": "To reduce storage costs, you can configure your bucket S3 Lifecycle rules to expire noncurrent\nversions after a specified time period. For more information, see Creating and managing a lifecycle\nconfiguration for your Amazon S3 on Outposts bucket. The following examples show you how to enable or suspend versioning for an existing S3 on\nOutposts bucket by using the AWS Management Console and the AWS Command Line Interface\n(AWS CLI). To create a bucket with S3 Versioning enabled, see Creating an S3 on Outposts bucket. Note\nThe AWS account that creates the bucket owns it and is the only one that can commit\nactions to it. Buckets have configuration properties, such as Outpost, tag, default\nencryption, and access point settings. The access point settings include the virtual private\ncloud (VPC), the access point policy for accessing the objects in the bucket, and other\nmetadata. For more information, see S3 on Outposts specifications. Using the S3 console\nTo edit the S3 Versioning settings for your bucket\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to enable S3 Versioning for. Managing S3 Versioning API Version 2006-03-01 140\n\nAmazon S3 on Outposts User Guide\n4. Choose the Properties tab.",
      "start_idx": 239921,
      "end_idx": 254446,
      "metadata": {
        "num_sentences": 16,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3635004679361979,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "S3 Lifecycle rules",
            "S3 Versioning",
            "Outposts bucket",
            "AWS CLI",
            "AWS Management Console",
            "encryption",
            "access point policy",
            "virtual private cloud (VPC)",
            "bucket properties",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS Management Console",
            "Outposts bucket",
            "S3 Versioning"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Bucket Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This section explains how to manage S3 Versioning and configure lifecycle rules for Amazon S3 on Outposts buckets using the AWS Management Console or AWS CLI to optimize storage costs and manage bucket properties.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enable or suspend S3 Versioning for an Outposts bucket?",
            "What are the configuration properties of an S3 on Outposts bucket?",
            "How do I create lifecycle rules to expire noncurrent versions in S3 buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "access point policy",
          "AWS Management Console",
          "S3 Lifecycle rules",
          "bucket properties",
          "Outposts bucket",
          "virtual private cloud (VPC)",
          "encryption",
          "S3 on Outposts",
          "S3 Versioning",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_154",
      "text": "5. Under Bucket Versioning, choose Edit. 6. Edit the S3 Versioning settings for the bucket by choosing one of the following options:\n\u2022 To suspend S3 Versioning and stop the creation of new object versions, choose Suspend. \u2022 To enable S3 Versioning and save multiple distinct copies of each object, choose Enable. 7. Choose Save changes. Using the AWS CLI\nTo enable or suspend S3 Versioning for your bucket by using the AWS CLI, use the put-bucket-\nversioning command, as shown in the following examples. To use these examples, replace each\nuser input placeholder with your own information. For more information, see put-bucket-versioning in the AWS CLI Reference. Example : To enable S3 Versioning\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --versioning-configuration Status=Enabled\nExample : To suspend S3 Versioning\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --versioning-configuration Status=Suspended\nCreating and managing a lifecycle configuration for your\nAmazon S3 on Outposts bucket\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions.",
      "start_idx": 254447,
      "end_idx": 257628,
      "metadata": {
        "num_sentences": 12,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24706597761674362,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "CLI Usage"
            ]
          },
          "keywords": [
            "Bucket Versioning",
            "S3 Versioning",
            "AWS CLI",
            "put-bucket-versioning",
            "Lifecycle configuration",
            "Amazon S3 on Outposts",
            "Enable",
            "Suspend",
            "Lifecycle rules",
            "Object versions"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "S3 Versioning",
            "Lifecycle configuration",
            "Outposts bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS CLI Usage",
            "Lifecycle Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable or suspend S3 Versioning for Amazon S3 buckets using both the AWS Management Console and AWS CLI, along with lifecycle configuration for optimizing storage on S3 Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning using the AWS CLI?",
            "What are the steps to suspend S3 Versioning in the AWS Management Console?",
            "How can I create lifecycle rules for an Amazon S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "Lifecycle rules",
          "Outposts bucket",
          "AWS S3 Outposts",
          "Bucket Versioning",
          "put-bucket-versioning",
          "Enable",
          "Suspend",
          "S3 Versioning",
          "Object versions",
          "Amazon S3",
          "AWS CLI",
          "Lifecycle configuration"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_155",
      "text": "You can create,\nenable, disable, or delete a lifecycle rule. For more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket. Creating and managing a lifecycle configuration API Version 2006-03-01 141\n\nAmazon S3 on Outposts User Guide\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule. To create and manage the lifecycle configuration for your S3 on Outposts bucket, see the following\ntopics. Topics\n\u2022 Creating and managing a lifecycle rule by using the AWS Management Console\n\u2022 Creating and managing a lifecycle configuration by using the AWS CLI and SDK for Java\nCreating and managing a lifecycle rule by using the AWS Management\nConsole\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule. For more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket. Note\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule. To create and manage a lifecycle rule for an S3 on Outposts by using the AWS Management\nConsole, see the following topics. Topics\n\u2022 Creating a lifecycle rule\n\u2022 Enabling a lifecycle rule\n\u2022 Editing a lifecycle rule\nUsing the console API Version 2006-03-01 142\n\nAmazon S3 on Outposts User Guide\n\u2022 Deleting a lifecycle rule\nCreating a lifecycle rule\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.",
      "start_idx": 254447,
      "end_idx": 257628,
      "metadata": {
        "num_sentences": 12,
        "num_words": 293,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5594429247307054,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "S3 Lifecycle",
            "Outposts bucket",
            "lifecycle rule",
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java",
            "expire objects",
            "storage optimization",
            "bucket ownership",
            "lifecycle configuration"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Lifecycle Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on creating, enabling, disabling, and deleting lifecycle rules for Amazon S3 on Outposts using various tools like the AWS Management Console, CLI, and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a lifecycle rule for Amazon S3 on Outposts?",
            "What tools can I use to manage S3 lifecycle configurations?",
            "Who can manage lifecycle rules for an S3 bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "lifecycle rule",
          "AWS Management Console",
          "bucket ownership",
          "Outposts bucket",
          "S3 Lifecycle",
          "lifecycle configuration",
          "expire objects",
          "storage optimization",
          "Outposts",
          "Amazon S3",
          "SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_156",
      "text": "2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to create a lifecycle rule for. 4. Choose the Management tab, and then choose Create Lifecycle rule. 5. Enter a value for Lifecycle rule name.",
      "start_idx": 257629,
      "end_idx": 257872,
      "metadata": {
        "num_sentences": 8,
        "num_words": 42,
        "breakpoint_idx": 1617,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3292522430419922,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Outposts",
            "buckets",
            "lifecycle rule",
            "Management tab",
            "Create Lifecycle rule"
          ],
          "entities": [
            "Outposts buckets",
            "Lifecycle rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Lifecycle Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for creating a lifecycle rule for an Outposts bucket using the AWS Management Console.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I create a lifecycle rule for an Outposts bucket?",
            "What steps are involved in managing lifecycle rules in AWS?",
            "Where can I find the Management tab in the Outposts bucket interface?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Management tab",
          "Outposts buckets",
          "Lifecycle rule",
          "Create Lifecycle rule",
          "buckets",
          "Outposts",
          "lifecycle rule"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_157",
      "text": "6. Under Rule scope, choose one of the following options:\n\u2022 To limit the scope to specific filters, choose Limit the scope of this rule using one or more\nfilters. Then, add a prefix filter, tags, or object size. \u2022 To apply the rule to all objects in the bucket, choose Apply to all objects in the bucket.",
      "start_idx": 257873,
      "end_idx": 258177,
      "metadata": {
        "num_sentences": 4,
        "num_words": 58,
        "breakpoint_idx": 1621,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.20402848720550537,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Options"
            ]
          },
          "keywords": [
            "Rule scope",
            "prefix filter",
            "tags",
            "object size",
            "bucket"
          ],
          "entities": [
            "Rule scope",
            "prefix filter",
            "bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Data Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Bucket"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to configure the scope of a rule in a cloud storage bucket, either by applying filters or targeting all objects in the bucket.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I limit the scope of a rule using filters?",
            "What options are available for applying a rule to a bucket?",
            "Can I apply a rule to all objects in a bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "prefix filter",
          "object size",
          "tags",
          "Rule scope",
          "bucket",
          "Bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_158",
      "text": "7. Under Lifecycle rule actions, choose one of the following options:\n\u2022 Expire current versions of objects \u2013 For versioning-enabled buckets, S3 on Outposts adds a\ndelete marker and retains the objects as noncurrent versions. For buckets that don't use S3\nVersioning, S3 on Outposts permanently deletes the objects. \u2022 Permanently delete noncurrent versions of objects \u2013 S3 on Outposts permanently deletes\nnoncurrent versions of objects. \u2022 Delete expired object delete markers or incomplete multipart uploads \u2013 S3 on Outposts\npermanently deletes expired object delete markers or incomplete multipart uploads. If you limit the scope of your Lifecycle rule by using object tags, you can't choose Delete\nexpired object delete markers. You also can't choose Delete expired object delete markers\nif you choose Expire current object versions. Note\nSize-based filters can't be used with delete markers and incomplete multipart uploads. 8.",
      "start_idx": 258178,
      "end_idx": 259107,
      "metadata": {
        "num_sentences": 9,
        "num_words": 141,
        "breakpoint_idx": 1630,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.35336097081502277,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Options"
            ]
          },
          "keywords": [
            "Lifecycle rule actions",
            "Expire current versions",
            "Delete markers",
            "Noncurrent versions",
            "Incomplete multipart uploads",
            "Versioning-enabled buckets",
            "Object tags",
            "Size-based filters",
            "S3 Versioning",
            "S3 on Outposts"
          ],
          "entities": [
            "S3 on Outposts",
            "Lifecycle rule",
            "Versioning-enabled buckets",
            "Object tags",
            "Delete markers"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Data Lifecycle Management",
            "Object Storage"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the options for configuring lifecycle rule actions in S3 on Outposts, including expiring current object versions, deleting noncurrent versions, and handling delete markers or incomplete multipart uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the lifecycle rule actions available in S3 on Outposts?",
            "How does S3 on Outposts handle expired object delete markers?",
            "Can size-based filters be used with delete markers in lifecycle rules?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Versioning-enabled buckets",
          "Expire current versions",
          "Object tags",
          "Size-based filters",
          "Incomplete multipart uploads",
          "Lifecycle rule",
          "S3 on Outposts",
          "S3 Versioning",
          "Lifecycle rule actions",
          "Delete markers",
          "Noncurrent versions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_159",
      "text": "If you chose Expire current versions of objects or Permanently delete noncurrent versions of\nobjects, configure the rule trigger based on a specific date or the object's age. Using the console API Version 2006-03-01 143\n\nAmazon S3 on Outposts User Guide\n9. If you chose Delete expired object delete markers, to confirm that you want to delete expired\nobject delete markers, select Delete expired object delete markers. 10.",
      "start_idx": 259108,
      "end_idx": 259530,
      "metadata": {
        "num_sentences": 4,
        "num_words": 68,
        "breakpoint_idx": 1634,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.12508273124694824,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Confirmation"
            ]
          },
          "keywords": [
            "Expire current versions",
            "Permanently delete",
            "noncurrent versions",
            "rule trigger",
            "specific date",
            "object's age",
            "Delete expired object delete markers",
            "Amazon S3",
            "Outposts",
            "console API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "console API",
            "Version 2006-03-01",
            "object delete markers"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Lifecycle Management",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "console API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure rules for expiring or permanently deleting object versions and delete markers in Amazon S3 on Outposts using specific criteria like date or object age.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure rules for expiring object versions in Amazon S3?",
            "What is the process for deleting expired object delete markers?",
            "Which API version is used for configuring object lifecycle rules?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Expire current versions",
          "console API Version 2006-03-01",
          "Permanently delete",
          "rule trigger",
          "object's age",
          "noncurrent versions",
          "console API",
          "specific date",
          "object delete markers",
          "Outposts",
          "Delete expired object delete markers",
          "Version 2006-03-01",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_160",
      "text": "Under Timeline Summary, review your Lifecycle rule, and choose Create rule. Enabling a lifecycle rule\nTo enable or disable a bucket lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to enable or disable a lifecycle rule for. 4. Choose the Management tab, and then under Lifecycle rule, choose the rule that you want to\nenable or disable. 5. For Action, choose Enable or disable rule.",
      "start_idx": 259531,
      "end_idx": 260049,
      "metadata": {
        "num_sentences": 11,
        "num_words": 84,
        "breakpoint_idx": 1645,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.27365042946555396,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3",
            "lifecycle rule",
            "Outposts bucket",
            "enable rule",
            "disable rule",
            "Management tab",
            "Action",
            "Create rule",
            "Timeline Summary",
            "AWS console"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "Lifecycle rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Lifecycle Configuration"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable or disable a lifecycle rule for an Amazon S3 Outposts bucket using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable a lifecycle rule for an Amazon S3 Outposts bucket?",
            "What steps are required to disable a lifecycle rule in Amazon S3?",
            "Where can I find the lifecycle rule settings in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS console",
          "Timeline Summary",
          "enable rule",
          "Management tab",
          "Outposts buckets",
          "Outposts bucket",
          "Lifecycle rule",
          "Action",
          "disable rule",
          "Amazon S3",
          "Create rule",
          "lifecycle rule"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_161",
      "text": "Editing a lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to edit a lifecycle rule for. 4. Choose the Management tab, and then choose the Lifecycle rule that you want to edit. 5. (Optional) Update the value for Lifecycle rule name. 6. Under Rule scope, edit the scope as needed:\n\u2022 To limit the scope to specific filters, choose Limit the scope of this rule using one or more\nfilters. Then, add a prefix filter, tags, or object size. \u2022 To apply the rule to all objects in the bucket, choose Apply to all objects in the bucket.",
      "start_idx": 260050,
      "end_idx": 260712,
      "metadata": {
        "num_sentences": 14,
        "num_words": 117,
        "breakpoint_idx": 1659,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.25310237591083234,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "Lifecycle rule",
            "Rule scope",
            "Prefix filter",
            "Tags",
            "Object size",
            "Management tab",
            "Bucket",
            "Filters"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "Lifecycle rule",
            "Rule scope",
            "Management tab"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Lifecycle Configuration"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for editing a lifecycle rule in an Amazon S3 Outposts bucket using the AWS console. It includes options to update the rule name, scope, and apply filters or settings for all objects in the bucket.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I edit a lifecycle rule in an Amazon S3 Outposts bucket?",
            "What options are available for configuring the scope of a lifecycle rule?",
            "How do I apply a lifecycle rule to all objects in a bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Management tab",
          "Outposts buckets",
          "Filters",
          "Outposts bucket",
          "Lifecycle rule",
          "Prefix filter",
          "Rule scope",
          "Bucket",
          "Tags",
          "Amazon S3",
          "Object size"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_162",
      "text": "7. Under Lifecycle rule actions, choose one of the following options:\n\u2022 Expire current versions of objects \u2013 For versioning-enabled buckets, S3 on Outposts adds a\ndelete marker and retains the objects as noncurrent versions. For buckets that don't use S3\nVersioning, S3 on Outposts permanently deletes the objects. \u2022 Permanently delete noncurrent versions of objects \u2013 S3 on Outposts permanently deletes\nnoncurrent versions of objects. Using the console API Version 2006-03-01 144\n\nAmazon S3 on Outposts User Guide\n\u2022 Delete expired object delete markers or incomplete multipart uploads \u2013 S3 on Outposts\npermanently deletes expired object delete markers or incomplete multipart uploads. If you limit the scope of your Lifecycle rule by using object tags, you can't choose Delete\nexpired object delete markers. You also can't choose Delete expired object delete markers\nif you choose Expire current object versions. Note\nSize-based filters can't be used with delete markers and incomplete multipart uploads. 8. If you chose Expire current versions of objects or Permanently delete noncurrent versions of\nobjects, configure the rule trigger based on a specific date or the object age. 9. If you chose Delete expired object delete markers, to confirm that you want to delete expired\nobject delete markers, select Delete expired object delete markers. 10.",
      "start_idx": 260713,
      "end_idx": 262063,
      "metadata": {
        "num_sentences": 13,
        "num_words": 209,
        "breakpoint_idx": 1672,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.30982428330641526,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Lifecycle Management"
            ]
          },
          "keywords": [
            "Lifecycle rule actions",
            "S3 on Outposts",
            "delete markers",
            "noncurrent versions",
            "versioning-enabled buckets",
            "multipart uploads",
            "object tags",
            "size-based filters",
            "rule trigger",
            "object age"
          ],
          "entities": [
            "S3 on Outposts",
            "Lifecycle rule",
            "delete marker",
            "multipart uploads",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Lifecycle Policies",
            "AWS Services"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure lifecycle rule actions in Amazon S3 on Outposts, including expiring object versions, deleting noncurrent versions, and handling delete markers or incomplete multipart uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure lifecycle rule actions in S3 on Outposts?",
            "What happens to noncurrent object versions in versioning-enabled buckets?",
            "Can I use size-based filters with delete markers or multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "size-based filters",
          "object age",
          "API Version 2006-03-01",
          "delete marker",
          "Lifecycle rule",
          "delete markers",
          "rule trigger",
          "versioning-enabled buckets",
          "noncurrent versions",
          "object tags",
          "S3 on Outposts",
          "multipart uploads",
          "Lifecycle rule actions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_163",
      "text": "Choose Save. Deleting a lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.",
      "start_idx": 262064,
      "end_idx": 262171,
      "metadata": {
        "num_sentences": 3,
        "num_words": 14,
        "breakpoint_idx": 1675,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.12311124801635742,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructions",
              "Action Steps"
            ]
          },
          "keywords": [
            "Save",
            "lifecycle rule",
            "Amazon S3 console",
            "deleting",
            "AWS"
          ],
          "entities": [
            "Amazon S3",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Lifecycle Management",
            "AWS Console Usage"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on how to delete a lifecycle rule in Amazon S3 using the AWS Management Console.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I delete a lifecycle rule in Amazon S3?",
            "What steps are involved in managing lifecycle rules in AWS?",
            "Where can I access the Amazon S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "lifecycle rule",
          "Save",
          "deleting",
          "Amazon S3 console",
          "Amazon S3",
          "AWS"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_164",
      "text": "2. In the left navigation pane, choose Outposts buckets. 3. Choose the Outposts bucket that you want to delete a lifecycle rule for. 4. Choose the Management tab, and then under Lifecycle rule, choose the rule that you want to\ndelete. 5.",
      "start_idx": 262172,
      "end_idx": 262409,
      "metadata": {
        "num_sentences": 7,
        "num_words": 42,
        "breakpoint_idx": 1682,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.36045369647798087,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Outposts",
            "buckets",
            "lifecycle rule",
            "delete",
            "Management tab",
            "navigation pane"
          ],
          "entities": [
            "Outposts buckets",
            "Lifecycle rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Outposts",
            "Lifecycle Policies"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides steps to delete a lifecycle rule from an Outposts bucket via the Management tab.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I delete a lifecycle rule from an Outposts bucket?",
            "Where can I find the lifecycle rule management options in Outposts?",
            "What are the steps to manage lifecycle rules in AWS Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "navigation pane",
          "Management tab",
          "Outposts buckets",
          "Lifecycle rule",
          "buckets",
          "Outposts",
          "delete",
          "lifecycle rule"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_165",
      "text": "Choose Delete. Creating and managing a lifecycle configuration by using the AWS CLI\nand SDK for Java\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule. For more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket. Using the AWS CLI and SDK for Java API Version 2006-03-01 145\n\nAmazon S3 on Outposts User Guide\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule. To create and manage a lifecycle configuration for an S3 on Outposts bucket by using the AWS\nCommand Line Interface (AWS CLI) and the AWS SDK for Java, see the following examples. Topics\n\u2022 PUT a lifecycle configuration\n\u2022 GET the lifecycle configuration on an S3 on Outposts bucket\nPUT a lifecycle configuration\nAWS CLI\nThe following AWS CLI example puts a lifecycle configuration policy on an Outposts bucket. This policy specifies that all objects that have the flagged prefix (myprefix) and tags expire\nafter 10 days.",
      "start_idx": 262410,
      "end_idx": 263631,
      "metadata": {
        "num_sentences": 9,
        "num_words": 208,
        "breakpoint_idx": 1691,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.37416034274631077,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Example"
            ]
          },
          "keywords": [
            "S3 Lifecycle",
            "Amazon S3 on Outposts",
            "lifecycle configuration",
            "AWS CLI",
            "SDK for Java",
            "lifecycle rule",
            "expire objects",
            "Outposts bucket",
            "storage optimization",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "Outposts bucket",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Storage Optimization"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and manage lifecycle configurations for Amazon S3 on Outposts buckets using the AWS CLI and SDK for Java. It includes an example of setting a lifecycle rule to expire objects after 10 days.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a lifecycle rule for an Amazon S3 on Outposts bucket?",
            "What tools can I use to manage S3 lifecycle configurations?",
            "How do I set expiration policies for objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "lifecycle rule",
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "Outposts bucket",
          "S3 Lifecycle",
          "lifecycle configuration",
          "expire objects",
          "storage optimization",
          "Amazon S3",
          "SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_166",
      "text": "To use this example, replace each user input placeholder with your own\ninformation. 1. Save the lifecycle configuration policy to a JSON file.",
      "start_idx": 263632,
      "end_idx": 263774,
      "metadata": {
        "num_sentences": 3,
        "num_words": 23,
        "breakpoint_idx": 1694,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.05578148365020752,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "lifecycle configuration",
            "policy",
            "JSON file",
            "user input",
            "example"
          ],
          "entities": [
            "lifecycle configuration policy",
            "JSON file"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Configuration Management",
          "secondary_categories": [
            "File Handling",
            "Policy Management"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This example demonstrates how to save a lifecycle configuration policy to a JSON file by replacing user input placeholders with specific information.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I save a lifecycle configuration policy to a JSON file?",
            "What steps are needed to replace user input placeholders in a lifecycle configuration policy?",
            "Can you provide an example of saving a policy to a JSON file?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Configuration Management]",
        "tf_idf_keywords": [
          "JSON file",
          "example",
          "policy",
          "lifecycle configuration",
          "user input",
          "lifecycle configuration policy"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_167",
      "text": "In this example, the file is named\nlifecycle1.json. {\n\"Rules\": [\n{\n\"ID\": \"id-1\",\n\"Filter\": {\n\"And\": {\n\"Prefix\": \"myprefix\",\n\"Tags\": [\n{\n\"Value\": \"mytagvalue1\",\n\"Key\": \"mytagkey1\"\n},\n{\n\"Value\": \"mytagvalue2\",\n\"Key\": \"mytagkey2\"\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 146\n\nAmazon S3 on Outposts User Guide\n}\n],\n\"ObjectSizeGreaterThan\": 1000,\n\"ObjectSizeLessThan\": 5000\n}\n},\n\"Status\": \"Enabled\",\n\"Expiration\": {\n\"Days\": 10\n}\n}\n]\n}\n2. Submit the JSON file as part of the put-bucket-lifecycle-configuration CLI\ncommand. To use this command, replace each user input placeholder with your\nown information. For more information about this command, see put-bucket-lifecycle-\nconfiguration in the AWS CLI Reference. aws s3control put-bucket-lifecycle-configuration --account-id 123456789012 --\nbucket arn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\nbucket/example-outposts-bucket --lifecycle-configuration file://lifecycle1.json\nSDK for Java\nThe following SDK for Java example puts a lifecycle configuration on an Outposts bucket. This lifecycle configuration specifies that all objects that have the flagged prefix (myprefix)\nand tags expire after 10 days. To use this example, replace each user input placeholder\nwith your own information. For more information, see PutBucketLifecycleConfiguration in the\nAmazon Simple Storage Service API Reference. import com.amazonaws.services.s3control.model. *;\npublic void putBucketLifecycleConfiguration(String bucketArn) {\nS3Tag tag1 = new S3Tag().withKey(\"mytagkey1\").withValue(\"mytagkey1\");\nS3Tag tag2 = new S3Tag().withKey(\"mytagkey2\").withValue(\"mytagkey2\");\nLifecycleRuleFilter lifecycleRuleFilter = new LifecycleRuleFilter()\n.withAnd(new LifecycleRuleAndOperator()\n.withPrefix(\"myprefix\")\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 147\n\nAmazon S3 on Outposts User Guide\n.withTags(tag1, tag2))\n.withObjectSizeGreaterThan(1000)\n.withObjectSizeLessThan(5000);\nLifecycleExpiration lifecycleExpiration = new LifecycleExpiration()\n.withExpiredObjectDeleteMarker(false)\n.withDays(10);\nLifecycleRule lifecycleRule = new LifecycleRule()\n.withStatus(\"Enabled\")\n.withFilter(lifecycleRuleFilter)\n.withExpiration(lifecycleExpiration)\n.withID(\"id-1\");\nLifecycleConfiguration lifecycleConfiguration = new LifecycleConfiguration()\n.withRules(lifecycleRule);\nPutBucketLifecycleConfigurationRequest reqPutBucketLifecycle = new\nPutBucketLifecycleConfigurationRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withLifecycleConfiguration(lifecycleConfiguration);\nPutBucketLifecycleConfigurationResult respPutBucketLifecycle =\ns3ControlClient.putBucketLifecycleConfiguration(reqPutBucketLifecycle);\nSystem.out.printf(\"PutBucketLifecycleConfiguration Response: %s%n\",\nrespPutBucketLifecycle.toString());\n}\nGET the lifecycle configuration on an S3 on Outposts bucket\nAWS CLI\nThe following AWS CLI example gets a lifecycle configuration on an Outposts bucket. To use\nthis command, replace each user input placeholder with your own information.",
      "start_idx": 263775,
      "end_idx": 270534,
      "metadata": {
        "num_sentences": 12,
        "num_words": 306,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3154933813846473,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "SDK for Java",
            "S3 Outposts",
            "lifecycle configuration",
            "put-bucket-lifecycle-configuration",
            "LifecycleRuleFilter",
            "LifecycleExpiration",
            "tags",
            "object size",
            "expiration"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "LifecycleConfiguration",
            "PutBucketLifecycleConfigurationRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Lifecycle Management",
          "secondary_categories": [
            "AWS Development",
            "S3 Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure a lifecycle policy for an Amazon S3 Outposts bucket using AWS CLI and SDK for Java, including code examples and key parameters like prefix, tags, and object expiration settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a lifecycle policy for an S3 Outposts bucket?",
            "What parameters are required for the put-bucket-lifecycle-configuration command?",
            "How can I use the SDK for Java to manage lifecycle configurations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Lifecycle Management]",
        "tf_idf_keywords": [
          "object size",
          "expiration",
          "tags",
          "PutBucketLifecycleConfigurationRequest",
          "LifecycleRuleFilter",
          "lifecycle configuration",
          "put-bucket-lifecycle-configuration",
          "LifecycleConfiguration",
          "LifecycleExpiration",
          "S3 Outposts",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_168",
      "text": "For\nmore information about this command, see get-bucket-lifecycle-configuration in the AWS CLI\nReference. Using the AWS CLI and SDK for Java API Version 2006-03-01 148\n\nAmazon S3 on Outposts User Guide\naws s3control get-bucket-lifecycle-configuration --account-id 123456789012 --bucket\narn:aws:s3-outposts:<your-region>:123456789012:outpost/op-01ac5d28a6a232904/\nbucket/example-outposts-bucket\nSDK for Java\nThe following SDK for Java example gets a lifecycle configuration for an Outposts bucket. For\nmore information, see GetBucketLifecycleConfiguration in the Amazon Simple Storage Service\nAPI Reference. import com.amazonaws.services.s3control.model. *;\npublic void getBucketLifecycleConfiguration(String bucketArn) {\nGetBucketLifecycleConfigurationRequest reqGetBucketLifecycle = new\nGetBucketLifecycleConfigurationRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nGetBucketLifecycleConfigurationResult respGetBucketLifecycle =\ns3ControlClient.getBucketLifecycleConfiguration(reqGetBucketLifecycle);\nSystem.out.printf(\"GetBucketLifecycleConfiguration Response: %s%n\",\nrespGetBucketLifecycle.toString());\n}\nReplicating objects for S3 on Outposts\nWith S3 Replication on AWS Outposts, you can configure Amazon S3 on Outposts to automatically\nreplicate S3 objects across different Outposts, or between buckets on the same Outpost. You\ncan use S3 Replication on Outposts to maintain multiple replicas of your data in the same or\ndifferent Outposts, or across different accounts, to help meet data-residency needs. S3 Replication\non Outposts helps power your compliant storage needs and data sharing across accounts. If you\nneed to ensure that your replicas are identical to the source data, you can use S3 Replication on\nOutposts to make replicas of your objects that retain all metadata, such as the original object\ncreation time, tags, and version IDs. S3 Replication on Outposts also provides detailed metrics and notifications to monitor the\nstatus of object replication between buckets. You can use Amazon CloudWatch to monitor\nReplicating objects for S3 on Outposts API Version 2006-03-01 149\n\nAmazon S3 on Outposts User Guide\nreplication progress by tracking bytes pending replication, operations pending replication, and\nreplication latency between your source and destination buckets. To quickly diagnose and correct\nconfiguration issues, you can also set up Amazon EventBridge to receive notifications about\nreplication object failures. To learn more, see Managing your replication.",
      "start_idx": 263775,
      "end_idx": 270534,
      "metadata": {
        "num_sentences": 12,
        "num_words": 302,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45025785041577887,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Outposts",
            "Lifecycle Configuration",
            "Replication",
            "Amazon CloudWatch",
            "Amazon EventBridge",
            "SDK for Java",
            "Replication Metrics",
            "Replication Latency",
            "Bucket ARN"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3",
            "Amazon CloudWatch",
            "Amazon EventBridge",
            "SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon CloudWatch",
            "Amazon EventBridge"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS CLI and SDK for Java to retrieve lifecycle configurations for S3 Outposts buckets and details replication capabilities for S3 objects on Outposts. It also covers monitoring and troubleshooting replication using CloudWatch and EventBridge.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I retrieve a lifecycle configuration for an S3 Outposts bucket?",
            "What are the features of S3 Replication on Outposts?",
            "How can I monitor replication progress and troubleshoot issues?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Replication Metrics",
          "Lifecycle Configuration",
          "Replication Latency",
          "Amazon CloudWatch",
          "Bucket ARN",
          "Amazon EventBridge",
          "Replication",
          "S3 Outposts",
          "SDK for Java",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_169",
      "text": "Topics\n\u2022 Replication configuration\n\u2022 Requirements for S3 Replication on Outposts\n\u2022 What is replicated? \u2022 What isn't replicated? \u2022 What isn't supported by S3 Replication on Outposts? \u2022 Setting up replication\n\u2022 Managing your replication\nReplication configuration\nS3 on Outposts stores a replication configuration as XML. In the replication configuration XML file,\nyou specify an AWS Identity and Access Management (IAM) role and one or more rules. <ReplicationConfiguration>\n<Role>IAM-role-ARN</Role>\n<Rule>\n...\n</Rule>\n<Rule>\n...\n</Rule>\n...\n</ReplicationConfiguration>\nS3 on Outposts can't replicate objects without your permission. You grant S3 on Outposts\npermissions with the IAM role that you specify in the replication configuration. S3 on Outposts\nassumes that IAM role to replicate objects on your behalf. You must grant the required permissions\nto the IAM role before starting replication. For more information about these permissions for S3 on\nOutposts, see Creating an IAM role. You add one rule in a replication configuration in the following scenarios:\nReplication configuration API Version 2006-03-01 150\n\nAmazon S3 on Outposts User Guide\n\u2022 You want to replicate all objects. \u2022 You want to replicate one subset of objects.",
      "start_idx": 263775,
      "end_idx": 270534,
      "metadata": {
        "num_sentences": 12,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5095987608938506,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "Replication Configuration",
            "IAM Role",
            "XML",
            "Permissions",
            "Replication Rules",
            "API Version 2006-03-01",
            "AWS Identity and Access Management",
            "Amazon S3"
          ],
          "entities": [
            "S3 on Outposts",
            "IAM Role",
            "ReplicationConfiguration",
            "Amazon S3",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Permissions",
            "Replication Setup"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "IAM Role"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for Amazon S3 on Outposts, including setting up IAM roles, defining replication rules in XML, and granting necessary permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts?",
            "What permissions are required for S3 replication?",
            "What objects are replicated in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "ReplicationConfiguration",
          "Replication Configuration",
          "AWS Identity and Access Management",
          "Replication Rules",
          "Permissions",
          "S3 on Outposts",
          "XML",
          "Outposts",
          "S3 Replication",
          "Amazon S3",
          "IAM Role"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_170",
      "text": "You identify the object subset by adding a filter in\nthe rule. In the filter, you specify an object key prefix, tags, or a combination of both, to identify\nthe subset of objects that the rule applies to. You add multiple rules in a replication configuration if you want to replicate different subsets of\nobjects. In each rule, you specify a filter that selects a different subset of objects. For example,\nyou might choose to replicate objects that have either tax/ or document/ key prefixes.",
      "start_idx": 270535,
      "end_idx": 271026,
      "metadata": {
        "num_sentences": 5,
        "num_words": 85,
        "breakpoint_idx": 1735,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.5308643341064453,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "filter",
            "rule",
            "object key prefix",
            "tags",
            "replication configuration",
            "subset",
            "objects",
            "key prefixes",
            "replicate",
            "multiple rules"
          ],
          "entities": [
            "replication configuration",
            "object key prefix",
            "tags",
            "tax/",
            "document/"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "Object Management",
            "Data Filtering"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use filters in replication rules to identify subsets of objects based on key prefixes or tags, enabling selective replication of data in a configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I filter objects for replication?",
            "Can I use multiple rules to replicate different subsets of objects?",
            "What key prefixes are supported in replication filters?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "filter",
          "tags",
          "multiple rules",
          "replication configuration",
          "key prefixes",
          "rule",
          "objects",
          "document/",
          "tax/",
          "object key prefix",
          "replicate",
          "subset"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_171",
      "text": "To do\nthis, you add two rules, one that specifies the tax/ key prefix filter and another that specifies the\ndocument/ key prefix. For more information about S3 on Outposts replication configuration and replication rules, see\nReplicationConfiguration in the Amazon Simple Storage Service API Reference. Requirements for S3 Replication on Outposts\nReplication requires the following:\n\u2022 The destination Outpost CIDR range must be associated in your source Outpost subnet table. For\nmore information, see Prerequisites for creating replication rules. \u2022 Both the source and destination buckets must have S3 Versioning enabled. For more information\nabout versioning, see Managing S3 Versioning for your S3 on Outposts bucket. \u2022 Amazon S3 on Outposts must have permission to replicate objects from the source bucket to the\ndestination bucket on your behalf. That means you must create a service role to delegate GET\nand PUT permissions to S3 on Outposts. 1. Before creating the service role, you must have GET permission on the source bucket and PUT\npermission on the destination bucket. 2.",
      "start_idx": 271027,
      "end_idx": 279581,
      "metadata": {
        "num_sentences": 11,
        "num_words": 169,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2861125599254261,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup Requirements"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication configuration",
            "replication rules",
            "Outpost CIDR range",
            "subnet table",
            "S3 Versioning",
            "service role",
            "GET permission",
            "PUT permission",
            "Amazon S3"
          ],
          "entities": [
            "S3 on Outposts",
            "Amazon Simple Storage Service API Reference",
            "ReplicationConfiguration",
            "Outpost CIDR range",
            "subnet table"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the setup requirements for configuring S3 replication on Outposts, including rules for key prefix filters, CIDR range associations, and permissions delegation via service roles.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the prerequisites for S3 replication on Outposts?",
            "How do I configure replication rules for S3 on Outposts?",
            "What permissions are required to enable replication on S3 Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ReplicationConfiguration",
          "service role",
          "PUT permission",
          "subnet table",
          "S3 on Outposts",
          "S3 Versioning",
          "GET permission",
          "Amazon Simple Storage Service API Reference",
          "Outpost CIDR range",
          "replication rules",
          "replication configuration",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_172",
      "text": "To create the service role to delegate permissions to S3 on Outposts, you must first configure\npermissions to allow an IAM entity (a user or role) to perform the iam:CreateRole and\niam:PassRole actions. Then, you allow the IAM entity to create a service role. To make S3\non Outposts assume the service role on your behalf and delegate GET and PUT permissions to\nS3 on Outposts, you must assign the necessary trust and permissions policies to the role. For\nmore information about these permissions for S3 on Outposts, see Creating an IAM role. For\nmore information about creating a service role, see Creating a service role. Requirements for S3 Replication on Outposts API Version 2006-03-01 151\n\nAmazon S3 on Outposts User Guide\nWhat is replicated? By default, S3 on Outposts replicates the following:\n\u2022 Objects created after you add a replication configuration. \u2022 Object metadata from the source objects to the replicas. For information about how to replicate\nmetadata from the replicas to the source objects, see Replication status if Amazon S3 replica\nmodification sync on Outposts is enabled. \u2022 Object tags, if there are any. How delete operations affect replication\nIf you delete an object from the source bucket, the following actions occur by default:\n\u2022 If you make a DELETE request without specifying an object version ID, S3 on Outposts adds a\ndelete marker.",
      "start_idx": 271027,
      "end_idx": 279581,
      "metadata": {
        "num_sentences": 11,
        "num_words": 226,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37812794772061437,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions",
              "Replication"
            ]
          },
          "keywords": [
            "IAM entity",
            "service role",
            "S3 on Outposts",
            "permissions policies",
            "replication configuration",
            "delete marker",
            "object metadata",
            "replica modification sync",
            "trust policies",
            "object tags"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "S3 on Outposts",
            "Replication configuration",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure permissions and create a service role for Amazon S3 on Outposts, including setting up replication and handling delete operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a service role for S3 on Outposts?",
            "What permissions are needed for S3 on Outposts replication?",
            "How are delete operations handled in S3 on Outposts replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM entity",
          "API Version 2006-03-01",
          "delete marker",
          "replica modification sync",
          "permissions policies",
          "trust policies",
          "object metadata",
          "Replication configuration",
          "object tags",
          "S3 on Outposts",
          "service role",
          "IAM",
          "replication configuration",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_173",
      "text": "S3 on Outposts deals with the delete marker as follows:\n\u2022 S3 on Outposts does not replicate the delete marker by default. \u2022 However, you can add delete marker replication to non-tag-based rules. For more information\nabout how to enable delete marker replication in your replication configuration, see Using the\nS3 console. \u2022 If you specify an object version ID to delete in a DELETE request, S3 on Outposts permanently\ndeletes that object version in the source bucket. However, it doesn't replicate the deletion in\nthe destination buckets. In other words, it doesn't delete the same object version from the\ndestination buckets. This behavior protects data from malicious deletions. What isn't replicated? By default, S3 on Outposts doesn't replicate the following:\n\u2022 Objects in the source bucket that are replicas that were created by another replication rule. For\nexample, suppose you configure replication where bucket A is the source and bucket B is the\ndestination. Now suppose that you add another replication configuration where bucket B is the\nsource and bucket C is the destination.",
      "start_idx": 271027,
      "end_idx": 279581,
      "metadata": {
        "num_sentences": 11,
        "num_words": 175,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43403864773837003,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Behavior Explanation",
              "Configuration Guidance"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "delete marker",
            "replication",
            "object version ID",
            "source bucket",
            "destination bucket",
            "malicious deletions",
            "replication rule",
            "replication configuration",
            "S3 console"
          ],
          "entities": [
            "S3 on Outposts",
            "delete marker",
            "source bucket",
            "destination bucket",
            "replication rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Data Protection"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "S3 console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how S3 on Outposts handles delete markers and replication behavior, including scenarios where deletions are not replicated to destination buckets for data protection purposes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does S3 on Outposts handle delete markers?",
            "What isn't replicated by default in S3 on Outposts?",
            "How can I enable delete marker replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "delete marker",
          "destination bucket",
          "replication",
          "object version ID",
          "replication configuration",
          "S3 on Outposts",
          "S3 console",
          "malicious deletions",
          "replication rule",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_174",
      "text": "In this case, objects in bucket B that are replicas of objects\nin bucket A are not replicated to bucket C.\nWhat is replicated? API Version 2006-03-01 152\n\nAmazon S3 on Outposts User Guide\n\u2022 Objects in the source bucket that have already been replicated to a different destination. For\nexample, if you change the destination bucket in an existing replication configuration, S3 on\nOutposts won't replicate the objects again. \u2022 Objects that are created with server-side encryption with customer-provided encryption keys\n(SSE-C). \u2022 Updates to bucket-level subresources. For example, if you change the lifecycle configuration or add a notification configuration to your\nsource bucket, these changes are not applied to the destination bucket. This feature makes it\npossible to have different configurations on the source and destination buckets. \u2022 Actions performed by lifecycle configuration. For example, if you enable a lifecycle configuration only on your source bucket and configure\nexpiration actions, S3 on Outposts creates delete markers for expired objects in the source\nbucket but doesn't replicate those markers to the destination buckets. If you want the same\nlifecycle configuration applied to both the source and destination buckets, enable the same\nlifecycle configuration on both. For more information about lifecycle configuration, see Creating\nand managing a lifecycle configuration for your Amazon S3 on Outposts bucket.",
      "start_idx": 271027,
      "end_idx": 279581,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40303164395419033,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Replication Rules"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication configuration",
            "lifecycle configuration",
            "server-side encryption",
            "delete markers",
            "bucket-level subresources",
            "destination bucket",
            "source bucket",
            "SSE-C",
            "Amazon S3"
          ],
          "entities": [
            "S3 on Outposts",
            "API Version 2006-03-01",
            "Amazon S3",
            "bucket A",
            "bucket B"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Encryption"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains replication behavior in Amazon S3 on Outposts, including conditions under which objects are not replicated and configuration considerations for lifecycle and encryption settings.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What objects are excluded from replication in S3 on Outposts?",
            "How does lifecycle configuration affect replication in S3 on Outposts?",
            "What are the implications of using SSE-C for replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket-level subresources",
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "destination bucket",
          "delete markers",
          "lifecycle configuration",
          "SSE-C",
          "S3 on Outposts",
          "bucket B",
          "server-side encryption",
          "bucket A",
          "replication configuration",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_175",
      "text": "What isn't supported by S3 Replication on Outposts? The following S3 Replication features are currently not supported by S3 on Outposts:\n\u2022 S3 Replication Time Control (S3 RTC). S3 RTC is not supported because the object traffic in S3\nReplication on Outposts travels over your on-premises network (the local gateway). For more\ninformation about local gateways, see Working with the local gateway in the AWS Outposts User\nGuide. \u2022 S3 Replication for Batch Operations. Setting up replication\nNote\nObjects that existed in your bucket before you set up a replication rule aren't replicated\nautomatically. In other words, Amazon S3 on Outposts doesn't replicate objects\nretroactively. To replicate objects that were created before your replication configuration,\nWhat isn't supported by S3 Replication on Outposts? API Version 2006-03-01 153\n\nAmazon S3 on Outposts User Guide\nyou can use the CopyObject API operation to copy them to the same bucket. After\nthe objects are copied, they appear as \"new\" objects in the bucket and the replication\nconfiguration will apply to them. For more information about copying an object, see\nCopying an object in an Amazon S3 on Outposts bucket using the AWS SDK for Java and\nCopyObject in the Amazon Simple Storage Service API Reference.",
      "start_idx": 271027,
      "end_idx": 279581,
      "metadata": {
        "num_sentences": 11,
        "num_words": 202,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4693909384987571,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "S3 RTC",
            "local gateway",
            "Batch Operations",
            "CopyObject API",
            "replication rule",
            "Amazon S3",
            "AWS SDK for Java",
            "API Reference"
          ],
          "entities": [
            "S3 Replication",
            "AWS Outposts",
            "S3 RTC",
            "CopyObject API",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the features of S3 Replication that are not supported on AWS Outposts, including S3 RTC and Batch Operations, and provides guidance on replicating pre-existing objects using the CopyObject API.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What S3 Replication features are unsupported on AWS Outposts?",
            "How can I replicate objects created before setting up a replication rule?",
            "What is the role of the CopyObject API in S3 Replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "replication rule",
          "Batch Operations",
          "CopyObject API",
          "API Reference",
          "local gateway",
          "Outposts",
          "AWS SDK for Java",
          "S3 Replication",
          "Amazon S3",
          "S3 RTC"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_176",
      "text": "To enable S3 Replication on Outposts, add a replication rule to your source Outposts bucket. The\nreplication rule tells S3 on Outposts to replicate objects as specified. In the replication rule, you\nmust provide the following:\n\u2022 The source Outposts bucket access point \u2013 The access point Amazon Resource Name (ARN) or\naccess point alias of the bucket from which you want S3 on Outposts to replicate the objects. For\nmore information about using access point aliases, see Using a bucket-style alias for your S3 on\nOutposts bucket access point. \u2022 The objects that you want to replicate \u2013 You can replicate all of the objects in the source\nOutposts bucket or a subset. You identify a subset by providing a key name prefix, one or more\nobject tags, or both in the configuration. For example, if you configure a replication rule to replicate only objects with the key name prefix\nTax/, S3 on Outposts replicates objects with keys such as Tax/doc1 or Tax/doc2. But it doesn't\nreplicate objects with the key Legal/doc3. If you specify both a prefix and one or more tags, S3\non Outposts replicates only objects that have the specific key prefix and tags. \u2022 The destination Outposts bucket \u2013 The ARN or access point alias of the bucket to which you\nwant S3 on Outposts to replicate the objects. You can configure the replication rule by using the REST API, AWS SDKs, AWS Command Line\nInterface (AWS CLI), or Amazon S3 console. S3 on Outposts also provides API operations to support setting up replication rules. For more\ninformation, see the following topics in the Amazon Simple Storage Service API Reference:\n\u2022 PutBucketReplication\n\u2022 GetBucketReplication\n\u2022 DeleteBucketReplication\nTopics\nSetting up replication API Version 2006-03-01 154\n\nAmazon S3 on Outposts User Guide\n\u2022 Prerequisites for creating replication rules\n\u2022 Creating replication rules on Outposts\nPrerequisites for creating replication rules\nTopics\n\u2022 Connecting your source and destination Outpost subnets\n\u2022 Creating an IAM role\nConnecting your source and destination Outpost subnets\nTo have your replication traffic go from your source Outpost to your destination Outpost over your\nlocal gateway, you must add a new route to set up networking. You must connect the Classless\nInter-Domain Routing (CIDR) networking ranges of your access points together.",
      "start_idx": 271027,
      "end_idx": 279581,
      "metadata": {
        "num_sentences": 14,
        "num_words": 376,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4489645067152086,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "replication rule",
            "access point",
            "Amazon Resource Name (ARN)",
            "key name prefix",
            "object tags",
            "IAM role",
            "CIDR",
            "local gateway"
          ],
          "entities": [
            "S3 on Outposts",
            "Amazon Resource Name (ARN)",
            "AWS CLI",
            "IAM role",
            "Classless Inter-Domain Routing (CIDR)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "Amazon S3 console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable S3 Replication on Outposts by configuring replication rules and setting up networking between source and destination Outposts buckets. It covers prerequisites, such as creating an IAM role and connecting subnets, and provides references to relevant API operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Replication on Outposts?",
            "What are the prerequisites for creating replication rules on S3 Outposts?",
            "How can I configure networking for replication traffic between Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Resource Name (ARN)",
          "CIDR",
          "IAM role",
          "Classless Inter-Domain Routing (CIDR)",
          "access point",
          "key name prefix",
          "object tags",
          "local gateway",
          "S3 on Outposts",
          "Outposts",
          "Amazon S3",
          "S3 Replication",
          "replication rule",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_177",
      "text": "For each pair of\naccess points, you need to set up this connection only once. Some steps to set up the connection are different, depending on the access type of your Outposts\nendpoints that are associated with your access points. The access type for endpoints is either\nPrivate (direct virtual private cloud [VPC] routing for AWS Outposts) or Customer owned IP (a\ncustomer-owned IP address pool [CoIP pool] within your on-premises network). Step 1: Find the CIDR range of your source Outposts endpoint\nTo find the CIDR range of your source endpoint that's associated with your source access point\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets.",
      "start_idx": 279582,
      "end_idx": 280347,
      "metadata": {
        "num_sentences": 7,
        "num_words": 125,
        "breakpoint_idx": 1811,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.23180284954252697,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "access points",
            "Outposts endpoints",
            "access type",
            "Private",
            "Customer owned IP",
            "VPC routing",
            "CoIP pool",
            "CIDR range",
            "AWS Management Console",
            "Amazon S3"
          ],
          "entities": [
            "AWS Outposts",
            "VPC",
            "CoIP pool",
            "Amazon S3",
            "CIDR range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Services",
            "Network Configuration"
          ],
          "mentioned_services": [
            "AWS Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up a connection between access points on AWS Outposts, detailing steps that vary based on the access type (Private or Customer owned IP). It includes instructions for identifying the CIDR range of a source endpoint.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up a connection between access points on AWS Outposts?",
            "What are the differences between Private and Customer owned IP access types?",
            "How can I find the CIDR range of my source Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC routing",
          "AWS Outposts",
          "VPC",
          "AWS Management Console",
          "Private",
          "CIDR range",
          "CoIP pool",
          "access type",
          "Customer owned IP",
          "access points",
          "Amazon S3",
          "Outposts endpoints"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_178",
      "text": "3. In the Outposts buckets list, choose the source bucket that you want for replication. 4. Choose the Outposts access points tab, and choose the Outposts access point for the source\nbucket for your replication rule. 5.",
      "start_idx": 280348,
      "end_idx": 280567,
      "metadata": {
        "num_sentences": 5,
        "num_words": 37,
        "breakpoint_idx": 1816,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3815800666809082,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Outposts",
            "buckets",
            "replication",
            "access points",
            "source bucket"
          ],
          "entities": [
            "Outposts buckets",
            "Outposts access points"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to select a source bucket and configure an access point for replication in Amazon S3 Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for an Outposts bucket?",
            "What is the process for selecting an access point in Amazon S3 Outposts?",
            "What steps are involved in setting up replication rules in Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "Outposts access points",
          "access points",
          "replication",
          "Amazon S3 Outposts",
          "buckets",
          "Outposts",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_179",
      "text": "Choose the Outposts endpoint. 6. Copy the subnet ID for use in Step 5. 7. The method that you use to find the CIDR range of the source Outposts endpoint depends on\nthe access type of your endpoint. Setting up replication API Version 2006-03-01 155\n\nAmazon S3 on Outposts User Guide\nIn the Outposts endpoint overview section, see the Access Type. \u2022 If the access type is Private, copy the Classless inter-domain routing (CIDR) value to use in\nStep 6.",
      "start_idx": 280568,
      "end_idx": 281017,
      "metadata": {
        "num_sentences": 7,
        "num_words": 80,
        "breakpoint_idx": 1823,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.19828557968139648,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Outposts endpoint",
            "subnet ID",
            "CIDR range",
            "Amazon S3",
            "Private access type",
            "replication",
            "API version",
            "Classless inter-domain routing",
            "User Guide",
            "Access Type"
          ],
          "entities": [
            "Outposts endpoint",
            "Amazon S3",
            "CIDR value",
            "API Version 2006-03-01",
            "Subnet ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides procedural steps for configuring an Outposts endpoint, including copying subnet IDs and determining CIDR ranges based on access type.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an Outposts endpoint?",
            "What is the CIDR range for a Private access type endpoint?",
            "Where can I find the subnet ID for replication setup?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "Access Type",
          "subnet ID",
          "Private access type",
          "Classless inter-domain routing",
          "replication",
          "User Guide",
          "API version",
          "CIDR value",
          "CIDR range",
          "Subnet ID",
          "Outposts endpoint",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_180",
      "text": "\u2022 If the access type is Customer Owned IP, do the following:\n1. Copy the Customer owned IPv4 pool value to use as the ID of the address pool later on. 2.",
      "start_idx": 281018,
      "end_idx": 281171,
      "metadata": {
        "num_sentences": 3,
        "num_words": 32,
        "breakpoint_idx": 1826,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1517031192779541,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Configuration"
            ]
          },
          "keywords": [
            "Customer Owned IP",
            "IPv4 pool",
            "address pool",
            "access type",
            "ID"
          ],
          "entities": [
            "Customer Owned IP",
            "IPv4 pool"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking",
          "secondary_categories": [
            "Cloud Infrastructure",
            "IP Management"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides instructions for configuring a Customer Owned IP access type by using an IPv4 pool value as the ID for the address pool.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a Customer Owned IP access type?",
            "What is the process for using an IPv4 pool value as an address pool ID?",
            "What steps are needed to manage a Customer Owned IP?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking]",
        "tf_idf_keywords": [
          "IPv4 pool",
          "access type",
          "ID",
          "Customer Owned IP",
          "address pool"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_181",
      "text": "Open the AWS Outposts console at https://console.aws.amazon.com/outposts/. 3. In the navigation pane, choose Local gateway route tables. 4. Choose the Local gateway route table ID value of your source Outpost. 5. In the details pane, choose the CoIP pools tab. Paste the value of your CoIP pool ID that\nyou copied previously in the search box.",
      "start_idx": 281172,
      "end_idx": 282386,
      "metadata": {
        "num_sentences": 8,
        "num_words": 56,
        "chunk_type": "semantic_split",
        "coherence_score": 0.20922793660845077,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "AWS Outposts",
            "Local gateway route tables",
            "CoIP pools",
            "CoIP pool ID",
            "navigation pane"
          ],
          "entities": [
            "AWS Outposts",
            "Local gateway route table",
            "CoIP pools"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Infrastructure",
            "Routing"
          ],
          "mentioned_services": [
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for accessing and configuring Local Gateway Route Tables and CoIP pools in AWS Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I locate the Local Gateway Route Table ID in AWS Outposts?",
            "Where can I input the CoIP pool ID in the AWS Outposts console?",
            "What steps are needed to configure CoIP pools in AWS Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Local gateway route tables",
          "Local gateway route table",
          "CoIP pool ID",
          "CoIP pools",
          "navigation pane"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_182",
      "text": "6. For the matched CoIP pool, copy the corresponding CIDRs value of your source Outposts\nendpoint for use in Step 6. Step 2: Find the subnet ID and the CIDR range of your destination Outposts endpoint\nTo find the subnet ID and the CIDR range of your destination endpoint that's associated with your\ndestination access point, follow the same substeps in Step 1 and change your source Outposts\nendpoint to your destination Outposts endpoint when you apply those substeps. Copy the subnet\nID value of your destination Outposts endpoint for use in Step 6. Copy the CIDR value of your\ndestination Outposts endpoint for use in Step 5. Step 3: Find the local gateway ID of your source Outpost\nTo find the local gateway ID of your source Outpost\n1. Open the AWS Outposts console at https://console.aws.amazon.com/outposts/. 2. In the left navigation pane, choose Local gateways.",
      "start_idx": 281172,
      "end_idx": 282386,
      "metadata": {
        "num_sentences": 9,
        "num_words": 146,
        "chunk_type": "semantic_split",
        "coherence_score": 0.32890404595269096,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "CoIP pool",
            "CIDR",
            "Outposts endpoint",
            "subnet ID",
            "local gateway ID",
            "AWS Outposts console",
            "destination access point",
            "source Outpost",
            "local gateways",
            "navigation pane"
          ],
          "entities": [
            "AWS Outposts",
            "CoIP pool",
            "CIDR range",
            "local gateway ID",
            "subnet ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Configuration",
            "Networking Subnets"
          ],
          "mentioned_services": [
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural steps to configure CIDR values, subnet IDs, and local gateway IDs for source and destination Outposts endpoints using AWS Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I find the subnet ID of a destination Outposts endpoint?",
            "What steps are needed to locate the local gateway ID for an Outpost?",
            "How do I copy CIDR values for use in Outposts configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "subnet ID",
          "AWS Outposts console",
          "CIDR",
          "source Outpost",
          "CIDR range",
          "CoIP pool",
          "local gateways",
          "Outposts endpoint",
          "destination access point",
          "local gateway ID",
          "navigation pane"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_183",
      "text": "3. On the Local gateways page, find the Outpost ID of your source Outpost that you want to use\nfor replication. 4. Copy the local gateway ID value of your source Outpost for use in Step 5. For more information about local gateway, see Local gateway in the AWS Outposts User Guide. Setting up replication API Version 2006-03-01 156\n\nAmazon S3 on Outposts User Guide\nStep 4: Find the local gateway ID of your destination Outpost\nTo find the local gateway ID of your destination Outpost, follow the same substeps in Step 3,\nexcept look for the Outpost ID for your destination Outpost. Copy the local gateway ID value of\nyour destination Outpost for use in Step 6. Step 5: Set up the connection from your source Outpost subnet to your destination Outpost\nsubnet\nTo connect from your source Outpost subnet to your destination Outpost subnet\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/. 2.",
      "start_idx": 282387,
      "end_idx": 283332,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "breakpoint_idx": 1853,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.28322198655870223,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "local gateway",
            "Outpost ID",
            "replication",
            "destination Outpost",
            "source Outpost",
            "VPC console",
            "AWS Management Console",
            "subnet",
            "connection",
            "Amazon S3"
          ],
          "entities": [
            "AWS Outposts",
            "Amazon S3",
            "VPC console",
            "local gateway ID",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Networking",
            "Storage"
          ],
          "mentioned_services": [
            "AWS Outposts",
            "Amazon S3",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for setting up replication between source and destination Outposts using local gateway IDs in AWS Outposts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I find the local gateway ID for an Outpost?",
            "What steps are required to set up replication between Outposts?",
            "How do I connect subnets between source and destination Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "API Version 2006-03-01",
          "VPC",
          "AWS Management Console",
          "replication",
          "source Outpost",
          "VPC console",
          "destination Outpost",
          "local gateway",
          "connection",
          "subnet",
          "Amazon S3",
          "local gateway ID",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_184",
      "text": "In the left navigation pane, choose Subnets. 3. In the search box, enter the subnet ID for your source Outposts endpoint that you found in\nStep 1. Choose the subnet with the matched subnet ID. 4. For the matched subnet item, choose the Route table value of this subnet. 5. On the page with a selected route table, choose Actions, and then choose Edit routes. 6. On the Edit routes page, choose Add route.",
      "start_idx": 283333,
      "end_idx": 283737,
      "metadata": {
        "num_sentences": 10,
        "num_words": 74,
        "breakpoint_idx": 1863,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.3074928283691406,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Subnets",
            "Outposts endpoint",
            "Route table",
            "Edit routes",
            "Add route"
          ],
          "entities": [
            "subnet ID",
            "source Outposts endpoint",
            "route table"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking",
          "secondary_categories": [
            "Cloud Infrastructure",
            "Configuration Management"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for configuring routes in a subnet associated with an Outposts endpoint.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit routes in a subnet?",
            "What steps are involved in configuring a route table for an Outposts endpoint?",
            "How can I add a route in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking]",
        "tf_idf_keywords": [
          "Route table",
          "Subnets",
          "source Outposts endpoint",
          "subnet ID",
          "Edit routes",
          "Outposts endpoint",
          "route table",
          "Add route",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_185",
      "text": "7. Under Destination, enter the CIDR range of your destination Outposts endpoint that you\nfound in Step 2. 8. Under Target, choose Outpost Local Gateway, and enter the local gateway ID of your source\nOutpost that you found in Step 3. 9.",
      "start_idx": 283738,
      "end_idx": 283974,
      "metadata": {
        "num_sentences": 5,
        "num_words": 42,
        "breakpoint_idx": 1868,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.351741361618042,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration"
            ]
          },
          "keywords": [
            "CIDR range",
            "Outpost Local Gateway",
            "destination endpoint",
            "local gateway ID",
            "source Outpost"
          ],
          "entities": [
            "CIDR range",
            "Outpost Local Gateway",
            "destination endpoint",
            "local gateway ID",
            "source Outpost"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking Configuration",
          "secondary_categories": [
            "Cloud Infrastructure",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section provides steps to configure a destination endpoint and specify a local gateway ID for an Outpost setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the destination endpoint for an AWS Outpost?",
            "What is the process to enter the local gateway ID for a source Outpost?",
            "What is required to set up a local gateway for an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking Configuration]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "Outpost Local Gateway",
          "source Outpost",
          "CIDR range",
          "destination endpoint",
          "local gateway ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_186",
      "text": "Choose Save changes. 10. Make sure the Status for the route is Active. Step 6: Set up the connection from your destination Outpost subnet to your source Outpost\nsubnet\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/. 2.",
      "start_idx": 283975,
      "end_idx": 284252,
      "metadata": {
        "num_sentences": 6,
        "num_words": 46,
        "breakpoint_idx": 1874,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.1382024129231771,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "route",
            "Active",
            "connection",
            "Outpost subnet",
            "AWS Management Console",
            "VPC console",
            "Status",
            "Save changes",
            "destination",
            "source"
          ],
          "entities": [
            "AWS Management Console",
            "VPC console",
            "Outpost subnet"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Services",
            "Infrastructure Setup"
          ],
          "mentioned_services": [
            "AWS Management Console",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation provides steps to verify the route status and set up a connection between Outpost subnets using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I verify the route status in AWS?",
            "How can I set up a connection between Outpost subnets?",
            "What steps are needed to configure the VPC console for Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC",
          "Status",
          "AWS Management Console",
          "source",
          "Outpost subnet",
          "route",
          "VPC console",
          "Save changes",
          "destination",
          "connection",
          "Active"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_187",
      "text": "In the left navigation pane, choose Subnets. 3. In the search box, enter the subnet ID for your destination Outposts endpoint that you found\nin Step 2. Choose the subnet with the matched subnet ID. 4.",
      "start_idx": 284253,
      "end_idx": 284453,
      "metadata": {
        "num_sentences": 5,
        "num_words": 36,
        "breakpoint_idx": 1879,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.30859994888305664,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Navigation",
              "Search"
            ]
          },
          "keywords": [
            "Subnets",
            "Outposts",
            "subnet ID",
            "destination endpoint",
            "search box"
          ],
          "entities": [
            "subnet ID",
            "Outposts endpoint",
            "subnet"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Management Console",
            "Subnet Configuration"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to navigate to the Subnets section in the AWS Management Console, search for a specific subnet ID, and select the matching subnet for a destination Outposts endpoint.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I find a subnet ID in the AWS Management Console?",
            "How do I select a subnet for an Outposts endpoint?",
            "What are the steps to navigate to Subnets in the AWS console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "Subnets",
          "subnet ID",
          "search box",
          "Outposts endpoint",
          "destination endpoint",
          "subnet",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_188",
      "text": "For the matched subnet item, choose the Route table value of this subnet. Setting up replication API Version 2006-03-01 157\n\nAmazon S3 on Outposts User Guide\n5. On the page with a selected route table, choose Actions, and then choose Edit routes.",
      "start_idx": 284454,
      "end_idx": 284700,
      "metadata": {
        "num_sentences": 3,
        "num_words": 42,
        "breakpoint_idx": 1882,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.20309344927469888,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "subnet",
            "route table",
            "replication",
            "API version",
            "Amazon S3",
            "Outposts",
            "Edit routes",
            "Actions",
            "matched subnet",
            "replication setup"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Route table",
            "API Version 2006-03-01",
            "Replication"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure the route table for a subnet in Amazon S3 on Outposts, including editing routes and referencing specific API versions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the route table for a subnet in Amazon S3 on Outposts?",
            "What API version is used for replication setup in Amazon S3 on Outposts?",
            "What steps are required to edit routes in a selected route table?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "Route table",
          "Actions",
          "API Version 2006-03-01",
          "replication",
          "matched subnet",
          "API version",
          "Edit routes",
          "replication setup",
          "Replication",
          "route table",
          "subnet",
          "Amazon S3",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_189",
      "text": "6. On the Edit routes page, choose Add route. 7. Under Destination, enter the CIDR range of your source Outposts endpoint that you found in\nStep 1. 8. Under Target, choose Outpost Local Gateway, and enter the local gateway ID of your\ndestination Outpost that you found in Step 4. 9.",
      "start_idx": 284701,
      "end_idx": 284983,
      "metadata": {
        "num_sentences": 7,
        "num_words": 51,
        "breakpoint_idx": 1889,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.33637278420584543,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "Edit routes",
            "CIDR range",
            "Outposts endpoint",
            "Local Gateway",
            "gateway ID"
          ],
          "entities": [
            "Outpost Local Gateway",
            "CIDR",
            "Local Gateway ID",
            "Outposts endpoint"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Outposts",
            "Routing"
          ],
          "mentioned_services": [
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides step-by-step instructions for configuring a route to an Outposts endpoint using a local gateway ID.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add a route to an Outposts endpoint?",
            "What is the local gateway ID used for in AWS Outposts?",
            "How do I configure the destination CIDR range for an Outposts route?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "gateway ID",
          "AWS Outposts",
          "Outpost Local Gateway",
          "CIDR",
          "Edit routes",
          "CIDR range",
          "Outposts endpoint",
          "Local Gateway",
          "Local Gateway ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_190",
      "text": "Choose Save changes. 10. Make sure the Status for the route is Active. After you connect the CIDR networking ranges of your source and destination access points, you\nmust create an AWS Identity and Access Management (IAM) role. Creating an IAM role\nBy default, all S3 on Outposts resources\u2014buckets, objects, and related subresources\u2014are private,\nand only the resource owner can access the resource. S3 on Outposts needs permissions to read\nand replicate objects from the source Outposts bucket. You grant these permissions by creating an\nIAM service role and specifying that role in your replication configuration.",
      "start_idx": 284984,
      "end_idx": 285598,
      "metadata": {
        "num_sentences": 7,
        "num_words": 96,
        "breakpoint_idx": 1896,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.16767011369977677,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions"
            ]
          },
          "keywords": [
            "IAM role",
            "S3 on Outposts",
            "replication configuration",
            "CIDR networking ranges",
            "AWS Identity and Access Management",
            "permissions",
            "resource owner",
            "service role",
            "replication",
            "Outposts bucket"
          ],
          "entities": [
            "IAM role",
            "S3 on Outposts",
            "Outposts bucket",
            "CIDR networking ranges",
            "AWS Identity and Access Management"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to create an IAM role to grant S3 on Outposts the necessary permissions for replication and ensure the route status is active.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an IAM role for S3 on Outposts replication?",
            "What permissions are required for S3 on Outposts replication?",
            "How do I ensure the route status is active?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "AWS Identity and Access Management",
          "replication",
          "Outposts bucket",
          "CIDR networking ranges",
          "resource owner",
          "IAM role",
          "S3 on Outposts",
          "service role",
          "IAM",
          "replication configuration",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_191",
      "text": "This section explains the trust policy and minimum required permissions policy. The example\nwalkthroughs provide step-by-step instructions to create an IAM role. For more information, see\nCreating replication rules on Outposts. For more information about IAM roles, see IAM roles in the\nIAM User Guide. \u2022 The following example shows a trust policy, where you identify S3 on Outposts as the service\nprincipal that can assume the role. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"s3-outposts.amazonaws.com\"\n},\n\"Action\":\"sts:AssumeRole\"\n}\n]\nSetting up replication API Version 2006-03-01 158\n\nAmazon S3 on Outposts User Guide\n}\n\u2022 The following example shows an access policy, where you grant the role permissions to perform\nreplication tasks on your behalf. When S3 on Outposts assumes the role, it has the permissions\nthat you specify in this policy. To use this policy, replace the user input placeholders\nwith your own information. Make sure to replace them with the Outpost IDs of your source\nand destination Outposts and the bucket names and access point names of your source and\ndestination Outposts buckets. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\nbucket/SOURCE-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\naccesspoint/SOURCE-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n},\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/\nbucket/DESTINATION-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/\naccesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n}\n]\n}\nThe access policy grants permissions for the following actions:\nSetting up replication API Version 2006-03-01 159\n\nAmazon S3 on Outposts User Guide\n\u2022 s3-outposts:GetObjectVersionForReplication \u2013 Permission for this action is granted\non all objects to allow S3 on Outposts to get a specific object version that's associated with\neach object.",
      "start_idx": 285599,
      "end_idx": 296011,
      "metadata": {
        "num_sentences": 10,
        "num_words": 255,
        "chunk_type": "semantic_split",
        "coherence_score": 0.297336917453342,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "trust policy",
            "permissions policy",
            "IAM role",
            "S3 on Outposts",
            "replication rules",
            "access policy",
            "Outpost IDs",
            "bucket names",
            "access point names",
            "assume role"
          ],
          "entities": [
            "IAM role",
            "S3 on Outposts",
            "Amazon S3",
            "Outposts buckets",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "IAM Policies",
          "secondary_categories": [
            "S3 on Outposts",
            "Replication"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "STS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to set up IAM roles for S3 on Outposts replication, including trust and access policies with example JSON configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a trust policy for S3 on Outposts?",
            "What permissions are required for replication tasks in S3 on Outposts?",
            "How do I configure an access policy for S3 on Outposts replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [IAM Policies]",
        "tf_idf_keywords": [
          "access point names",
          "assume role",
          "Outposts buckets",
          "bucket names",
          "Outpost IDs",
          "STS",
          "access policy",
          "IAM role",
          "trust policy",
          "AWS",
          "S3 on Outposts",
          "IAM",
          "replication rules",
          "Amazon S3",
          "permissions policy"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_192",
      "text": "\u2022 s3-outposts:GetObjectVersionTagging \u2013 Permission for this action on objects in the\nSOURCE-OUTPOSTS-BUCKET bucket (the source bucket) allows S3 on Outposts to read object\ntags for replication. For more information, see Adding tags for S3 on Outposts buckets. If S3\non Outposts doesn't have this permission, it replicates the objects, but not the object tags. \u2022 s3-outposts:ReplicateObject and s3-outposts:ReplicateDelete \u2013 Permissions for\nthese actions on all objects in the DESTINATION-OUTPOSTS-BUCKET bucket (the destination\nbucket) allow S3 on Outposts to replicate objects or delete markers to the destination\nOutposts bucket. For information about delete markers, see How delete operations affect\nreplication. Note\n\u2022 Permission for the s3-outposts:ReplicateObject action on the DESTINATION-\nOUTPOSTS-BUCKET bucket (the destination bucket) also allows replication of\nobject tags. Therefore, you don't need to explicitly grant permission for the s3-\noutposts:ReplicateTags action. \u2022 For cross-account replication, the owner of the destination Outposts\nbucket must update its bucket policy to grant permission for the s3-\noutposts:ReplicateObject action on theDESTINATION-OUTPOSTS-BUCKET. The s3-outposts:ReplicateObject action allows S3 on Outposts to replicate\nobjects and object tags to the destination Outposts bucket. For a list of S3 on Outposts actions, see Actions defined by S3 on Outposts.",
      "start_idx": 285599,
      "end_idx": 296011,
      "metadata": {
        "num_sentences": 10,
        "num_words": 192,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6122825622558594,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Replication",
              "S3 Outposts"
            ]
          },
          "keywords": [
            "s3-outposts:GetObjectVersionTagging",
            "s3-outposts:ReplicateObject",
            "s3-outposts:ReplicateDelete",
            "object tags",
            "replication",
            "delete markers",
            "bucket policy",
            "cross-account replication",
            "destination bucket",
            "source bucket"
          ],
          "entities": [
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "S3 on Outposts",
            "s3-outposts:ReplicateTags",
            "delete markers"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Permissions",
          "secondary_categories": [
            "Replication",
            "AWS S3"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the permissions required for S3 on Outposts to replicate objects, object tags, and delete markers between source and destination buckets, including cross-account replication considerations.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What permissions are required for S3 on Outposts to replicate object tags?",
            "How does cross-account replication work with S3 on Outposts?",
            "What is the role of delete markers in S3 replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Permissions]",
        "tf_idf_keywords": [
          "s3-outposts:ReplicateObject",
          "SOURCE-OUTPOSTS-BUCKET",
          "destination bucket",
          "replication",
          "bucket policy",
          "delete markers",
          "AWS S3",
          "DESTINATION-OUTPOSTS-BUCKET",
          "s3-outposts:ReplicateTags",
          "object tags",
          "S3 on Outposts",
          "s3-outposts:GetObjectVersionTagging",
          "s3-outposts:ReplicateDelete",
          "cross-account replication",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_193",
      "text": "Important\nThe AWS account that owns the IAM role must have permissions for the actions that it\ngrants to the IAM role. For example, suppose that the source Outposts bucket contains objects owned by\nanother AWS account. The owner of the objects must explicitly grant the AWS account\nthat owns the IAM role the required permissions through the bucket policy and the access\nSetting up replication API Version 2006-03-01 160\n\nAmazon S3 on Outposts User Guide\npoint policy. Otherwise, S3 on Outposts can't access the objects, and replication of the\nobjects fails. The permissions described here are related to the minimum replication configuration. If you choose to add optional replication configurations, you must grant additional\npermissions to S3 on Outposts. Granting permissions when the source and destination Outposts buckets are owned by different\nAWS accounts\nWhen the source and destination Outposts buckets aren't owned by the same accounts, the\nowner of the destination Outposts bucket must update the bucket and access point policies for\nthe destination bucket. These policies must grant the owner of the source Outposts bucket and\nthe IAM service role permissions to perform replication actions, as shown in the following policy\nexamples, or replication will fail. In these policy examples, DESTINATION-OUTPOSTS-BUCKET is\nthe destination bucket. To use these policy examples, replace the user input placeholders\nwith your own information.",
      "start_idx": 285599,
      "end_idx": 296011,
      "metadata": {
        "num_sentences": 10,
        "num_words": 222,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41506483289930557,
        "content": {
          "content_type": {
            "primary": "Warning",
            "subtypes": [
              "Permissions",
              "Replication",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "IAM role",
            "AWS account",
            "Outposts bucket",
            "bucket policy",
            "access point policy",
            "replication",
            "permissions",
            "S3 on Outposts",
            "API Version 2006-03-01",
            "destination bucket"
          ],
          "entities": [
            "IAM role",
            "AWS account",
            "S3 on Outposts",
            "Outposts bucket",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "Replication Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the permissions required for setting up replication between Outposts buckets, including scenarios where buckets are owned by different AWS accounts and the necessary updates to bucket and access point policies.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What permissions are required for replication between Outposts buckets?",
            "How can I configure bucket policies for cross-account replication?",
            "What happens if replication permissions are not correctly set?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Warning] [Cloud Storage]",
        "tf_idf_keywords": [
          "access point policy",
          "API Version 2006-03-01",
          "destination bucket",
          "replication",
          "bucket policy",
          "Outposts bucket",
          "IAM role",
          "AWS account",
          "S3 on Outposts",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_194",
      "text": "If you're creating the IAM service role manually, set the role path as role/service-role/, as\nshown in the following policy examples. For more information, see IAM ARNs in the IAM User Guide. {\n\"Version\":\"2012-10-17\",\n\"Id\":\"PolicyForDestinationBucket\",\n\"Statement\":[\n{\n\"Sid\":\"Permissions on objects\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"arn:aws:iam::SourceBucket-account-ID:role/service-role/source-\naccount-IAM-role\"\n},\n\"Action\":[\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateObject\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:DestinationBucket-account-\nID:outpost/DESTINATION-OUTPOST-ID/bucket/DESTINATION-OUTPOSTS-BUCKET/object/*\"\n]\n}\nSetting up replication API Version 2006-03-01 161\n\nAmazon S3 on Outposts User Guide\n]\n}\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"PolicyForDestinationAccessPoint\",\n\"Statement\":[\n{\n\"Sid\":\"Permissions on objects\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"arn:aws:iam::SourceBucket-account-ID:role/service-role/source-\naccount-IAM-role\"\n},\n\"Action\":[\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateObject\"\n],\n\"Resource\" :[\n\"arn:aws:s3-outposts:region:DestinationBucket-account-\nID:outpost/DESTINATION-OUTPOST-ID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/\nobject/*\"\n]\n}\n]\n}\nNote\nIf objects in the source Outposts bucket are tagged, note the following:\nIf the source Outposts bucket owner grants S3 on Outposts permission for the s3-\noutposts:GetObjectVersionTagging and s3-outposts:ReplicateTags actions to\nreplicate object tags (through the IAM role), Amazon S3 replicates the tags along with the\nobjects. For information about the IAM role, see Creating an IAM role. Creating replication rules on Outposts\nS3 Replication on Outposts is the automatic, asynchronous replication of objects across buckets in\nthe same or different AWS Outposts. Replication copies newly created objects and object updates\nSetting up replication API Version 2006-03-01 162\n\nAmazon S3 on Outposts User Guide\nfrom a source Outposts bucket to a destination Outposts bucket or buckets. For more information,\nsee Replicating objects for S3 on Outposts. Note\nObjects that existed in the source Outposts bucket before you set up replication rules\naren't replicated. In other words, S3 on Outposts doesn't replicate objects retroactively. To\nreplicate objects that were created before your replication configuration, you can use the\nCopyObject API operation to copy them to the same bucket.",
      "start_idx": 285599,
      "end_idx": 296011,
      "metadata": {
        "num_sentences": 10,
        "num_words": 273,
        "chunk_type": "semantic_split",
        "coherence_score": 0.37926292419433594,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Example",
              "Note"
            ]
          },
          "keywords": [
            "IAM service role",
            "replication",
            "S3 Outposts",
            "policy examples",
            "object tagging",
            "CopyObject API",
            "replicate tags",
            "replication rules",
            "IAM role",
            "permissions"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "IAM",
            "Replication API",
            "CopyObject API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Role Management",
            "Replication Policies"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "Replication API",
            "CopyObject API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to configure IAM roles and policies for S3 replication on AWS Outposts, including replication rules, permissions, and handling object tags. It highlights procedural steps and considerations for setting up replication between Outposts buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication for S3 on Outposts?",
            "What permissions are required for replicating object tags in S3 on Outposts?",
            "Can I replicate objects that existed before setting up replication rules?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Replication API",
          "AWS Outposts",
          "policy examples",
          "CopyObject API",
          "replication",
          "IAM service role",
          "IAM",
          "IAM role",
          "replication rules",
          "object tagging",
          "replicate tags",
          "S3 Outposts",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_195",
      "text": "After the objects are copied,\nthey appear as \"new\" objects in the bucket and the replication configuration will apply to\nthem. For more information about copying an object, see Copying an object in an Amazon\nS3 on Outposts bucket using the AWS SDK for Java and CopyObject in the Amazon Simple\nStorage Service API Reference. When you configure replication, you add replication rules to the source Outposts bucket. Replication rules define which source Outposts bucket objects to replicate and the destination\nOutposts bucket or buckets where the replicated objects will be stored. You can create a rule to\nreplicate all the objects in a bucket or a subset of objects with a specific key name prefix, one or\nmore object tags, or both. A destination Outposts bucket can be in the same Outpost as the source\nOutposts bucket, or it can be in a different Outpost. For S3 on Outposts replication rules, you must provide both the source Outposts bucket's access\npoint Amazon Resource Name (ARN) and the destination Outposts bucket's access point ARN\ninstead of the source and destination Outposts bucket names. If you specify an object version ID to delete, S3 on Outposts deletes that object version in the\nsource Outposts bucket. But it doesn't replicate the deletion to the destination Outposts bucket. In\nother words, it doesn't delete the same object version from the destination Outposts bucket.",
      "start_idx": 285599,
      "end_idx": 296011,
      "metadata": {
        "num_sentences": 10,
        "num_words": 230,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4894789801703559,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "replication rules",
            "Outposts bucket",
            "Amazon S3",
            "AWS SDK for Java",
            "CopyObject",
            "object version ID",
            "access point ARN",
            "source bucket",
            "destination bucket",
            "object tags"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts bucket",
            "CopyObject",
            "Amazon Resource Name (ARN)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of configuring replication rules for Amazon S3 on Outposts buckets, including details on specifying source and destination buckets, using ARNs, and handling object deletions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication rules for an S3 on Outposts bucket?",
            "What is required to replicate objects between Outposts buckets?",
            "Does S3 on Outposts replicate object deletions to the destination bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "destination bucket",
          "object version ID",
          "Outposts bucket",
          "access point ARN",
          "Amazon Resource Name (ARN)",
          "object tags",
          "S3 on Outposts",
          "CopyObject",
          "replication rules",
          "AWS SDK for Java",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_196",
      "text": "This\nbehavior protects data from malicious deletions. When you add a replication rule to an Outposts bucket, the rule is enabled by default, so the rule\nstarts working as soon as you save it. In this example, you set up replication for source and destination Outposts buckets that are on\ndifferent Outposts and are owned by the same AWS account. Examples are provided for using the\nAmazon S3 console, the AWS Command Line Interface (AWS CLI), and the AWS SDK for Java and\nAWS SDK for .NET. For information about cross-account S3 Replication on Outposts permissions,\nSetting up replication API Version 2006-03-01 163\n\nAmazon S3 on Outposts User Guide\nsee Granting permissions when the source and destination Outposts buckets are owned by\ndifferent AWS accounts. For prerequisites to set up S3 on Outposts replication rules, see Prerequisites for creating\nreplication rules. Using the S3 console\nFollow these steps to configure a replication rule when the destination Amazon S3 on Outposts\nbucket is in a different Outpost from the source Outposts bucket. If the destination Outposts bucket is in a different account from the source Outposts bucket, you\nmust add a bucket policy to the destination Outposts bucket to grant the owner of the source\nOutposts bucket account permission to replicate objects in the destination Outposts bucket. To create a replication rule\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.",
      "start_idx": 285599,
      "end_idx": 296011,
      "metadata": {
        "num_sentences": 10,
        "num_words": 238,
        "chunk_type": "semantic_split",
        "coherence_score": 0.40914717780219184,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "replication rule",
            "Outposts bucket",
            "AWS account",
            "Amazon S3 console",
            "bucket policy",
            "AWS CLI",
            "AWS SDK",
            "permissions",
            "replicate objects",
            "destination bucket"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Outposts bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up replication rules for Amazon S3 on Outposts buckets, including prerequisites, permissions, and step-by-step configuration using the AWS Management Console, AWS CLI, and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for Amazon S3 on Outposts buckets?",
            "What permissions are required for cross-account S3 replication on Outposts?",
            "What tools can I use to set up S3 replication rules?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "destination bucket",
          "AWS SDK",
          "bucket policy",
          "Outposts bucket",
          "AWS SDK for .NET",
          "AWS account",
          "replicate objects",
          "Amazon S3 console",
          "Amazon S3",
          "AWS SDK for Java",
          "replication rule",
          "AWS CLI",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_197",
      "text": "2. In the Outposts Buckets list, choose the name of the bucket that you want to use as the source\nbucket. 3. Choose the Management tab, scroll down to the Replication rules section, and then choose\nCreate replication rule. 4. For Replication rule name, enter a name for your rule to help identify the rule later. The name\nis required and must be unique within the bucket.",
      "start_idx": 296012,
      "end_idx": 296383,
      "metadata": {
        "num_sentences": 7,
        "num_words": 67,
        "breakpoint_idx": 1963,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2605950491768973,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Outposts",
            "Buckets",
            "Replication rules",
            "Management tab",
            "Source bucket"
          ],
          "entities": [
            "Outposts Buckets",
            "Replication rule",
            "Management tab"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Replication",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to create a replication rule for an Outposts bucket, including steps to navigate the Management tab and configure the rule with a unique name.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a replication rule in an Outposts bucket?",
            "What are the requirements for naming a replication rule?",
            "Where can I find the replication rules section in the Management tab?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Buckets",
          "Management tab",
          "Source bucket",
          "Outposts Buckets",
          "Replication rule",
          "Replication rules",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_198",
      "text": "5. Under Status, Enabled is chosen by default. An enabled rule starts to work as soon as you save\nit. If you want to enable the rule later, choose Disabled. 6.",
      "start_idx": 296384,
      "end_idx": 296543,
      "metadata": {
        "num_sentences": 5,
        "num_words": 31,
        "breakpoint_idx": 1968,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2743070602416992,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Rule Management"
            ]
          },
          "keywords": [
            "Status",
            "Enabled",
            "Disabled",
            "rule",
            "save",
            "work",
            "later"
          ],
          "entities": [
            "Status",
            "Enabled",
            "Disabled",
            "rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Configuration Management",
          "secondary_categories": [
            "Rule Management",
            "System Settings"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure the status of a rule, with 'Enabled' being the default and 'Disabled' as an optional setting for later activation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable a rule immediately?",
            "What is the default status of a rule?",
            "Can I save a rule as disabled for later use?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Configuration Management]",
        "tf_idf_keywords": [
          "Status",
          "save",
          "later",
          "work",
          "rule",
          "Enabled",
          "Disabled"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_199",
      "text": "Under Priority, the rule's priority value determines which rule to apply if there are overlapping\nrules. When objects are included in the scope of more than one replication rule, S3 on\nOutposts uses these priority values to avoid conflicts. By default, new rules are added to the\nreplication configuration at the highest priority. The higher the number, the higher the priority. To change the priority for the rule, after you save the rule, choose the rule name from the\nreplication rule list, choose Actions, and then choose Edit priority. 7. Under Source bucket, you have the following options for setting the replication source:\n\u2022 To replicate the whole bucket, choose Apply to all objects in the bucket. Setting up replication API Version 2006-03-01 164\n\nAmazon S3 on Outposts User Guide\n\u2022 To apply prefix or tag filtering to the replication source, choose Limit the scope of this rule\nby using one or more filters. You can combine a prefix and tags. \u2022 To replicate all objects that have the same prefix, under Prefix, enter a prefix in the box. Using the Prefix filter limits replication to all objects that have names that begin with the\nsame string (for example, pictures). If you enter a prefix that is the name of a folder, you must use a / (forward slash) as the\nlast character (for example, pictures/). \u2022 To replicate all objects that have one or more of the same object tags, choose Add tag,\nand then enter the key-value pair in the boxes.",
      "start_idx": 296544,
      "end_idx": 297995,
      "metadata": {
        "num_sentences": 13,
        "num_words": 253,
        "breakpoint_idx": 1981,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.2500334030542618,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-step",
              "Instruction"
            ]
          },
          "keywords": [
            "priority",
            "replication rule",
            "S3 on Outposts",
            "source bucket",
            "prefix",
            "tags",
            "filtering",
            "replication configuration",
            "key-value pair",
            "conflicts"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "replication rule",
            "prefix filter",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to set up and manage replication rules in Amazon S3 on Outposts, including configuring priority, applying filters, and using prefixes or tags to limit the scope of replication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set the priority for a replication rule in S3 on Outposts?",
            "What are the filtering options for replication sources in S3 on Outposts?",
            "How can I replicate objects with specific prefixes or tags?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "prefix filter",
          "Amazon S3 on Outposts",
          "tags",
          "conflicts",
          "prefix",
          "replication configuration",
          "Outposts",
          "S3 on Outposts",
          "filtering",
          "key-value pair",
          "priority",
          "replication rule",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_200",
      "text": "To add another tag, repeat the procedure. For more information about object tags, see Adding tags for S3 on Outposts buckets. 8. To access your S3 on Outposts source bucket for replication, under Source access point name,\nchoose an access point that is attached to the source bucket. 9. Under Destination, choose the access point ARN of the destination Outposts bucket where you\nwant S3 on Outposts to replicate objects. The destination Outposts bucket can be in the same\nor a different AWS account as the source Outposts bucket. If the destination bucket is in a different account from the source Outposts bucket, you must\nadd a bucket policy to the destination Outposts bucket to grant the owner of the source\nOutposts bucket account permission to replicate objects to the destination Outposts bucket. For more information, see Granting permissions when the source and destination Outposts\nbuckets are owned by different AWS accounts. Note\nIf versioning is not enabled on the destination Outposts bucket, you get a warning that\ncontains an Enable versioning button.",
      "start_idx": 297996,
      "end_idx": 303461,
      "metadata": {
        "num_sentences": 10,
        "num_words": 173,
        "chunk_type": "semantic_split",
        "coherence_score": 0.28624538845486114,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Replication",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "tags",
            "access point",
            "bucket policy",
            "versioning",
            "replication",
            "source bucket",
            "destination bucket",
            "AWS account",
            "permissions"
          ],
          "entities": [
            "S3 on Outposts",
            "access point ARN",
            "Outposts bucket",
            "bucket policy",
            "AWS account"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Control"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS Accounts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication between S3 on Outposts buckets, including setting access points, bucket policies, and handling versioning requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts buckets?",
            "What permissions are required for replicating objects between AWS accounts?",
            "What happens if versioning is not enabled on the destination bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Accounts",
          "destination bucket",
          "versioning",
          "tags",
          "replication",
          "bucket policy",
          "access point ARN",
          "Outposts bucket",
          "AWS account",
          "access point",
          "S3 on Outposts",
          "permissions",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_201",
      "text": "Choose this button to enable versioning on the\nbucket. 10. Set up an AWS Identity and Access Management (IAM) service role that S3 on Outposts can\nassume to replicate objects on your behalf. To set up an IAM role, under IAM role, do one of the following:\n\u2022 To have S3 on Outposts create a new IAM role for your replication configuration, choose\nChoose from existing IAM roles, and then choose Create new role. When you save the rule,\nSetting up replication API Version 2006-03-01 165\n\nAmazon S3 on Outposts User Guide\na new policy is generated for the IAM role that matches the source and destination Outposts\nbuckets that you choose. We recommend that you choose Create new role. \u2022 You can also choose to use an existing IAM role. If you do, you must choose a role that\ngrants S3 on Outposts the necessary permissions for replication. If this role doesn't grant S3\non Outposts sufficient permissions to follow your replication rule, replication fails. To choose an existing role, choose Choose from existing IAM roles, and then choose the role\nfrom the dropdown menu.",
      "start_idx": 297996,
      "end_idx": 303461,
      "metadata": {
        "num_sentences": 10,
        "num_words": 186,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3587050543891059,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "versioning",
            "IAM role",
            "replication",
            "S3 on Outposts",
            "permissions",
            "policy",
            "source bucket",
            "destination bucket",
            "replication rule",
            "API Version 2006-03-01"
          ],
          "entities": [
            "AWS Identity and Access Management (IAM)",
            "Amazon S3",
            "Outposts",
            "replication configuration",
            "IAM policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Role Management",
            "Replication Setup"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable versioning on an S3 bucket, set up an IAM role for replication, and configure replication for Amazon S3 on Outposts, including creating or selecting an appropriate IAM role with sufficient permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable versioning on an S3 bucket?",
            "What permissions does an IAM role need for S3 on Outposts replication?",
            "How can I set up replication for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "API Version 2006-03-01",
          "destination bucket",
          "versioning",
          "replication",
          "policy",
          "IAM",
          "IAM role",
          "replication configuration",
          "S3 on Outposts",
          "AWS Identity and Access Management (IAM)",
          "Outposts",
          "source bucket",
          "IAM policy",
          "replication rule"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_202",
      "text": "You can also choose Enter an IAM role ARN and then enter the\nIAM role's Amazon Resource Name (ARN). Important\nWhen you add a replication rule to an S3 on Outposts bucket, you must have the\niam:CreateRole and iam:PassRole permissions to be able to create and pass the\nIAM role that grants S3 on Outposts replication permissions. For more information, see\nGranting a user permissions to pass a role to an AWS service in the IAM User Guide. 11. All objects in Outposts buckets are encrypted by default. For more information about S3 on\nOutposts encryption, see Data encryption in S3 on Outposts. Only objects that are encrypted\nby using server-side encryption with Amazon S3 managed keys (SSE-S3) can be replicated. The replication of objects that are encrypted by using server-side encryption with AWS Key\nManagement Service (AWS KMS) keys (SSE-KMS) or server-side encryption with customer-\nprovided encryption keys (SSE-C) is not supported. 12. As needed, enable the following additional options while setting the replication rule\nconfiguration:\n\u2022 If you want to enable S3 on Outposts replication metrics in your replication configuration,\nselect Replication metrics.",
      "start_idx": 297996,
      "end_idx": 303461,
      "metadata": {
        "num_sentences": 10,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25740793016221786,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions",
              "Encryption"
            ]
          },
          "keywords": [
            "IAM role ARN",
            "S3 on Outposts",
            "replication rule",
            "iam:CreateRole",
            "iam:PassRole",
            "encryption",
            "SSE-S3",
            "SSE-KMS",
            "SSE-C",
            "replication metrics"
          ],
          "entities": [
            "IAM role",
            "S3 on Outposts",
            "Amazon Resource Name (ARN)",
            "AWS Key Management Service (AWS KMS)",
            "IAM User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Permissions",
            "Data Encryption"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "AWS Key Management Service (AWS KMS)",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This text explains the requirements and steps for configuring replication rules in S3 on Outposts buckets, including necessary IAM permissions and encryption constraints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What permissions are required to configure replication in S3 on Outposts?",
            "What encryption methods are supported for replication in S3 on Outposts?",
            "How can I enable replication metrics for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "SSE-KMS",
          "Amazon Resource Name (ARN)",
          "AWS Key Management Service (AWS KMS)",
          "IAM role ARN",
          "replication metrics",
          "encryption",
          "SSE-C",
          "SSE-S3",
          "S3 on Outposts",
          "iam:CreateRole",
          "IAM role",
          "iam:PassRole",
          "IAM",
          "replication rule"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_203",
      "text": "For more information, see Monitoring progress with replication\nmetrics. \u2022 If you want to enable delete marker replication in your replication configuration, select\nDelete marker replication. For more information, see How delete operations affect\nreplication. \u2022 If you want to replicate metadata changes made to the replicas back to the source objects,\nselect Replica modification sync. For more information, see Replication status if Amazon S3\nreplica modification sync on Outposts is enabled. 13. To finish, choose Create rule. Setting up replication API Version 2006-03-01 166\n\nAmazon S3 on Outposts User Guide\nAfter you save your rule, you can edit, enable, disable, or delete your rule. To do so, go to the\nManagement tab for the source Outposts bucket, scroll down to the Replication rules section,\nchoose your rule, and then choose Edit rule. Using the AWS CLI\nTo use the AWS CLI to set up replication when the source and destination Outposts buckets are\nowned by the same AWS account, you do the following:\n\u2022 Create source and destination Outposts buckets.",
      "start_idx": 297996,
      "end_idx": 303461,
      "metadata": {
        "num_sentences": 10,
        "num_words": 171,
        "chunk_type": "semantic_split",
        "coherence_score": 0.30154198540581595,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Replication Setup"
            ]
          },
          "keywords": [
            "replication",
            "delete marker",
            "replica modification sync",
            "Amazon S3",
            "Outposts",
            "replication configuration",
            "AWS CLI",
            "replication rules",
            "source bucket",
            "destination bucket"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Outposts",
            "Replication API",
            "Replication rules"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up replication in Amazon S3 on Outposts, including enabling delete marker replication and replica modification sync. It also provides instructions for managing replication rules and configuring replication using the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable delete marker replication in Amazon S3?",
            "What is replica modification sync and how is it configured?",
            "How can I manage replication rules for an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Replication API",
          "replica modification sync",
          "delete marker",
          "destination bucket",
          "replication",
          "AWS CLI",
          "Replication rules",
          "Outposts",
          "replication rules",
          "replication configuration",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_204",
      "text": "\u2022 Enable versioning on both of the buckets. \u2022 Create an IAM role that gives S3 on Outposts permission to replicate objects. \u2022 Add the replication configuration to the source Outposts bucket. To verify your setup, you test it. To set up replication when the source and destination Outposts buckets are owned by the same\nAWS account\n1. Set a credentials profile for the AWS CLI. In this example, we use the profile name acctA. For\ninformation about setting credential profiles, see Named profiles in the AWS Command Line\nInterface User Guide. Important\nThe profile that you use for this exercise must have the necessary permissions. For\nexample, in the replication configuration, you specify the IAM service role that S3\non Outposts can assume. You can do this only if the profile that you use has the\niam:CreateRole and iam:PassRole permissions. For more information, see\nGranting a user permissions to pass a role to an AWS service in the IAM User Guide. If you use administrator credentials to create a named profile, the named profile will\nhave the necessary permission to perform all the tasks.",
      "start_idx": 297996,
      "end_idx": 303461,
      "metadata": {
        "num_sentences": 13,
        "num_words": 185,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31005213810847354,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration",
              "Verification"
            ]
          },
          "keywords": [
            "versioning",
            "IAM role",
            "S3 on Outposts",
            "replication configuration",
            "AWS CLI",
            "credentials profile",
            "iam:CreateRole",
            "iam:PassRole",
            "administrator credentials",
            "named profile"
          ],
          "entities": [
            "S3 on Outposts",
            "IAM role",
            "AWS CLI",
            "IAM User Guide",
            "AWS account"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS CLI"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to setting up replication between Outposts buckets owned by the same AWS account, including enabling versioning, creating an IAM role, and configuring replication settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable replication for S3 on Outposts buckets?",
            "What permissions are required to configure replication with IAM roles?",
            "How can I verify my replication setup for Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "versioning",
          "IAM role",
          "credentials profile",
          "AWS account",
          "S3 on Outposts",
          "iam:CreateRole",
          "administrator credentials",
          "iam:PassRole",
          "IAM",
          "named profile",
          "replication configuration",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_205",
      "text": "2. Create a source bucket and enable versioning on it. The following create-bucket command\ncreates a SOURCE-OUTPOSTS-BUCKET bucket in the US East (N. Virginia) (us-east-1) Region. To use this command, replace the user input placeholders with your own information. Setting up replication API Version 2006-03-01 167\n\nAmazon S3 on Outposts User Guide\naws s3control create-bucket --bucket SOURCE-OUTPOSTS-BUCKET --outpost-id SOURCE-\nOUTPOST-ID --profile acctA --region us-east-1\nThe following put-bucket-versioning command enables versioning on the SOURCE-\nOUTPOSTS-BUCKET bucket. To use this command, replace the user input placeholders\nwith your own information. aws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/bucket/SOURCE-OUTPOSTS-\nBUCKET --versioning-configuration Status=Enabled --profile acctA\n3. Create a destination bucket and enable versioning on it. The following create-bucket\ncommand creates a DESTINATION-OUTPOSTS-BUCKET bucket in the US West (Oregon) (us-\nwest-2) Region. To use this command, replace the user input placeholders with your\nown information.",
      "start_idx": 303462,
      "end_idx": 305915,
      "metadata": {
        "num_sentences": 10,
        "num_words": 140,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31892598470052086,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Command Usage"
            ]
          },
          "keywords": [
            "source bucket",
            "destination bucket",
            "versioning",
            "Amazon S3",
            "Outposts",
            "create-bucket",
            "put-bucket-versioning",
            "replication",
            "API Version 2006-03-01",
            "us-east-1"
          ],
          "entities": [
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "us-east-1",
            "us-west-2",
            "SOURCE-OUTPOST-ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS Outposts",
            "Bucket Versioning"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "aws s3control"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create source and destination buckets on AWS Outposts and enable versioning using AWS CLI commands. It includes detailed steps and example commands for configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on AWS Outposts?",
            "How can I enable versioning for an S3 bucket?",
            "What commands are used to configure source and destination buckets on AWS Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "API Version 2006-03-01",
          "SOURCE-OUTPOSTS-BUCKET",
          "create-bucket",
          "destination bucket",
          "versioning",
          "replication",
          "us-west-2",
          "DESTINATION-OUTPOSTS-BUCKET",
          "put-bucket-versioning",
          "SOURCE-OUTPOST-ID",
          "Outposts",
          "us-east-1",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_206",
      "text": "Note\nTo set up a replication configuration when both the source and destination Outposts\nbuckets are in the same AWS account, you use the same named profile. This example\nuses acctA. To test the replication configuration when the buckets are owned by\ndifferent AWS accounts, you specify different profiles for each bucket. aws s3control create-bucket --bucket DESTINATION-OUTPOSTS-BUCKET --create-bucket-\nconfiguration LocationConstraint=us-west-2 --outpost-id DESTINATION-OUTPOST-ID --\nprofile acctA --region us-west-2\nThe following put-bucket-versioning command enables versioning on the\nDESTINATION-OUTPOSTS-BUCKET bucket. To use this command, replace the user input\nplaceholders with your own information. aws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/bucket/DESTINATION-\nOUTPOSTS-BUCKET --versioning-configuration Status=Enabled --profile acctA\nSetting up replication API Version 2006-03-01 168\n\nAmazon S3 on Outposts User Guide\n4. Create an IAM service role. Later in the replication configuration, you add this service role to\nthe SOURCE-OUTPOSTS-BUCKET bucket. S3 on Outposts assumes this role to replicate objects\non your behalf. You create an IAM role in two steps:\na. Create an IAM role.",
      "start_idx": 303462,
      "end_idx": 305915,
      "metadata": {
        "num_sentences": 11,
        "num_words": 161,
        "chunk_type": "semantic_split",
        "coherence_score": 0.29922006780450994,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "replication configuration",
            "Outposts buckets",
            "AWS account",
            "IAM role",
            "versioning",
            "AWS CLI",
            "profile",
            "S3Control",
            "destination bucket",
            "service role"
          ],
          "entities": [
            "AWS Outposts",
            "IAM role",
            "S3Control",
            "LocationConstraint",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Roles",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up a replication configuration for AWS Outposts buckets, including enabling versioning, creating an IAM service role, and using AWS CLI commands for configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication for AWS Outposts buckets?",
            "What commands are needed to enable versioning on an Outposts bucket?",
            "How do I create an IAM role for S3 replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "LocationConstraint",
          "API Version 2006-03-01",
          "Outposts buckets",
          "versioning",
          "destination bucket",
          "profile",
          "S3Control",
          "IAM role",
          "AWS account",
          "service role",
          "IAM",
          "Amazon S3",
          "replication configuration",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_207",
      "text": "i. Copy the following trust policy and save it to a file named s3-on-outposts-role-\ntrust-policy.json in the current directory on your local computer. This policy\ngrants S3 on Outposts service principal permissions to assume the service role. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"s3-outposts.amazonaws.com\"\n},\n\"Action\":\"sts:AssumeRole\"\n}\n]\n}\nii. Run the following command to create the role. Replace the user input\nplaceholders with your own information. aws iam create-role --role-name replicationRole --assume-role-policy-\ndocument file://s3-on-outposts-role-trust-policy.json --profile acctA\nb. Attach a permissions policy to the service role. i. Copy the following permissions policy and save it to a file named s3-on-outposts-\nrole-permissions-policy.json in the current directory on your local computer. This policy grants permissions for various S3 on Outposts bucket and object\nactions. To use this policy, replace the user input placeholders with your own\ninformation. {\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\nSetting up replication API Version 2006-03-01 169\n\nAmazon S3 on Outposts User Guide\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-\nOUTPOST-ID/bucket/SOURCE-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-\nOUTPOST-ID/accesspoint/SOURCE-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n},\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-\nOUTPOST-ID/bucket/DESTINATION-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-\nOUTPOST-ID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n}\n]\n}\nii. Run the following command to create a policy and attach it to the role.",
      "start_idx": 305916,
      "end_idx": 307883,
      "metadata": {
        "num_sentences": 14,
        "num_words": 194,
        "breakpoint_idx": 2069,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31206881344973386,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Creation"
            ]
          },
          "keywords": [
            "trust policy",
            "permissions policy",
            "S3 on Outposts",
            "service role",
            "IAM role",
            "sts:AssumeRole",
            "replication",
            "AWS CLI",
            "access point",
            "policy document"
          ],
          "entities": [
            "s3-on-outposts.amazonaws.com",
            "AWS IAM",
            "Amazon S3",
            "ARN",
            "Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Access Management",
            "Storage Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an IAM role and attach policies for Amazon S3 on Outposts to enable replication functionality. It includes trust and permissions policy examples and relevant AWS CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a trust policy for S3 on Outposts?",
            "What permissions are needed for S3 on Outposts replication?",
            "How can I use AWS CLI to create and attach IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "s3-on-outposts.amazonaws.com",
          "AWS Outposts",
          "ARN",
          "replication",
          "policy document",
          "AWS CLI",
          "AWS IAM",
          "IAM role",
          "trust policy",
          "access point",
          "S3 on Outposts",
          "service role",
          "Outposts",
          "sts:AssumeRole",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_208",
      "text": "Replace the\nuser input placeholders with your own information. aws iam put-role-policy --role-name replicationRole --policy-\ndocument file://s3-on-outposts-role-permissions-policy.json --policy-\nname replicationRolePolicy --profile acctA\n5. Add a replication configuration to the SOURCE-OUTPOSTS-BUCKET bucket. a. Although the S3 on Outposts API requires a replication configuration in XML format, the\nAWS CLI requires that you specify the replication configuration in JSON format. Save\nthe following JSON in a file called replication.json to the local directory on your\ncomputer. To use this configuration, replace the user input placeholders with your\nown information. Setting up replication API Version 2006-03-01 170\n\nAmazon S3 on Outposts User Guide\n{\n\"Role\": \"IAM-role-ARN\",\n\"Rules\": [\n{\n\"Status\": \"Enabled\",\n\"Priority\": 1,\n\"DeleteMarkerReplication\": { \"Status\": \"Disabled\" },\n\"Filter\" : { \"Prefix\": \"Tax\"},\n\"Destination\": {\n\"Bucket\":\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-\nID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT\"\n}\n}\n]\n}\nb. Run the following put-bucket-replication command to add the replication\nconfiguration to your source Outposts bucket. To use this command, replace the user\ninput placeholders with your own information.",
      "start_idx": 307884,
      "end_idx": 315098,
      "metadata": {
        "num_sentences": 10,
        "num_words": 158,
        "chunk_type": "semantic_split",
        "coherence_score": 0.25621439615885416,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Command-Line Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 on Outposts",
            "replication configuration",
            "IAM role",
            "JSON format",
            "put-role-policy",
            "replication.json",
            "put-bucket-replication",
            "Outposts bucket",
            "access point"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 on Outposts",
            "IAM-role-ARN",
            "replicationRolePolicy",
            "DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Policies",
            "AWS S3 Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for an Amazon S3 on Outposts bucket using AWS CLI, including setting IAM role policies and specifying replication configurations in JSON format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for an S3 on Outposts bucket?",
            "What is the required format for replication configurations in AWS CLI?",
            "How do I use the put-role-policy command with IAM roles?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "put-role-policy",
          "put-bucket-replication",
          "Outposts bucket",
          "AWS IAM",
          "replicationRolePolicy",
          "IAM role",
          "replication.json",
          "access point",
          "S3 on Outposts",
          "IAM-role-ARN",
          "DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT",
          "JSON format",
          "Amazon S3",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_209",
      "text": "aws s3control put-bucket-replication --account-id 123456789012 --\nbucket arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-\nID/bucket/SOURCE-OUTPOSTS-BUCKET --replication-configuration file://\nreplication.json --profile acctA\nc. To retrieve the replication configuration, use the get-bucket-replication command. To use this command, replace the user input placeholders with your own\ninformation. aws s3control get-bucket-replication --account-id 123456789012 --bucket\narn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\nbucket/SOURCE-OUTPOSTS-BUCKET --profile acctA\n6. Test the setup in the Amazon S3 console:\na. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. b. In the SOURCE-OUTPOSTS-BUCKET bucket, create a folder named Tax. c. Add sample objects to the Tax folder in the SOURCE-OUTPOSTS-BUCKET bucket. Setting up replication API Version 2006-03-01 171\n\nAmazon S3 on Outposts User Guide\nd. In the DESTINATION-OUTPOSTS-BUCKET bucket, verify the following:\n\u2022 S3 on Outposts replicated the objects. Note\nThe amount of time that it takes for S3 on Outposts to replicate an object\ndepends on the size of the object.",
      "start_idx": 307884,
      "end_idx": 315098,
      "metadata": {
        "num_sentences": 10,
        "num_words": 146,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3124664306640625,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Instructions",
              "Validation Steps"
            ]
          },
          "keywords": [
            "AWS S3",
            "Outposts",
            "replication",
            "bucket",
            "get-bucket-replication",
            "put-bucket-replication",
            "replication.json",
            "Amazon S3 console",
            "Tax folder",
            "replicated objects"
          ],
          "entities": [
            "AWS S3",
            "S3 on Outposts",
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "Amazon S3 console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS Command-Line Interface",
            "Data Replication"
          ],
          "mentioned_services": [
            "AWS S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for setting up bucket replication on S3 Outposts using AWS CLI commands and validating the replication process in the Amazon S3 console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up bucket replication on S3 Outposts using AWS CLI?",
            "What commands are used to validate replication configurations?",
            "How can I verify if objects are replicated in the destination bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "SOURCE-OUTPOSTS-BUCKET",
          "Tax folder",
          "replication",
          "put-bucket-replication",
          "AWS S3",
          "DESTINATION-OUTPOSTS-BUCKET",
          "replicated objects",
          "replication.json",
          "S3 on Outposts",
          "Amazon S3 console",
          "bucket",
          "get-bucket-replication",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_210",
      "text": "For information about how to see the status\nof replication, see Getting replication status information. \u2022 On the object's Properties tab, the Replication status is set to Replica (identifying this\nas a replica object). Managing your replication\nThis section describes additional replication configuration options that are available in S3 on\nOutposts, how to determine the replication status, and how to troubleshot replication. For\ninformation about core replication configuration, see Setting up replication. Topics\n\u2022 Monitoring progress with replication metrics\n\u2022 Getting replication status information\n\u2022 Troubleshooting replication\n\u2022 Using EventBridge for S3 Replication on Outposts\nMonitoring progress with replication metrics\nS3 Replication on Outposts provides detailed metrics for the replication rules in your replication\nconfiguration. With replication metrics, you can monitor in 5-minute intervals the progress of\nreplication by tracking bytes pending replication, replication latency replication, and operations\npending. To assist in troubleshooting any configuration issues, you can also set up Amazon\nEventBridge to receive notifications about replication failures. When replication metrics are enabled, S3 Replication on Outposts publishes the following metrics\nto Amazon CloudWatch:\nManaging your replication API Version 2006-03-01 172\n\nAmazon S3 on Outposts User Guide\n\u2022 Bytes Pending Replication \u2013 The total number of bytes of objects that are pending replication\nfor a given replication rule. \u2022 Replication Latency \u2013 The maximum number of seconds by which the replication destination\nbucket is behind the source bucket for a given replication rule. \u2022 Operations Pending Replication \u2013 The number of operations that are pending replication for a\ngiven replication rule.",
      "start_idx": 307884,
      "end_idx": 315098,
      "metadata": {
        "num_sentences": 10,
        "num_words": 252,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5287705739339192,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Monitoring",
              "Troubleshooting",
              "Configuration"
            ]
          },
          "keywords": [
            "replication",
            "S3 on Outposts",
            "replication metrics",
            "Amazon CloudWatch",
            "replication latency",
            "EventBridge",
            "bytes pending replication",
            "replication status",
            "operations pending",
            "replication failures"
          ],
          "entities": [
            "S3 Replication on Outposts",
            "Amazon EventBridge",
            "Amazon CloudWatch",
            "Replication status",
            "Bytes Pending Replication"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "Monitoring",
            "Troubleshooting"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon CloudWatch",
            "Amazon EventBridge"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes how to monitor and troubleshoot replication in Amazon S3 on Outposts, including using replication metrics and EventBridge for notifications about failures.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor replication progress in S3 on Outposts?",
            "What metrics are available for replication in Amazon CloudWatch?",
            "How do I troubleshoot replication issues in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "S3 Replication on Outposts",
          "replication status",
          "Replication status",
          "replication",
          "replication failures",
          "Bytes Pending Replication",
          "Amazon CloudWatch",
          "replication metrics",
          "EventBridge",
          "S3 on Outposts",
          "replication latency",
          "Amazon EventBridge",
          "operations pending",
          "Amazon S3",
          "bytes pending replication"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_211",
      "text": "Operations include objects, delete markers, and tags. Note\nS3 Replication on Outposts metrics are billed at the same rate as CloudWatch custom\nmetrics. For more information, see CloudWatch pricing. Getting replication status information\nThe replication status can help you determine the current state of an object that's being replicated\nby Amazon S3 on Outposts. The replication status of a source object will return either PENDING,\nCOMPLETED, or FAILED. The replication status of a replica will return REPLICA. Replication status overview\nIn a replication scenario, you have a source bucket on which you configure replication and a\ndestination bucket to which S3 on Outposts replicates objects. When you request an object (using\nGetObject) or object metadata (using HeadObject) from these buckets, S3 on Outposts returns\nthe x-amz-replication-status header in the response as follows:\n\u2022 When you request an object from the source bucket, S3 on Outposts returns the x-amz-\nreplication-status header if the object in your request is eligible for replication. For example, suppose that you specify the object prefix TaxDocs in your replication\nconfiguration to tell S3 on Outposts to replicate only objects with the key name prefix\nTaxDocs. Any objects that you upload that have this key name prefix\u2014for example, TaxDocs/\ndocument1.pdf\u2014will be replicated.",
      "start_idx": 307884,
      "end_idx": 315098,
      "metadata": {
        "num_sentences": 10,
        "num_words": 205,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3496002197265625,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Status Information"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "replication status",
            "source bucket",
            "destination bucket",
            "x-amz-replication-status",
            "CloudWatch",
            "custom metrics",
            "delete markers",
            "tags"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "CloudWatch",
            "TaxDocs",
            "x-amz-replication-status"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "AWS Services",
            "Monitoring Metrics"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the replication status of objects in Amazon S3 on Outposts, including the use of the x-amz-replication-status header and billing details for replication metrics in CloudWatch.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the replication status of an object in Amazon S3 on Outposts?",
            "How are S3 Replication metrics billed in CloudWatch?",
            "What does the x-amz-replication-status header indicate?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "destination bucket",
          "replication status",
          "custom metrics",
          "tags",
          "delete markers",
          "TaxDocs",
          "x-amz-replication-status",
          "CloudWatch",
          "Outposts",
          "S3 Replication",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_212",
      "text": "For object requests with this key name prefix, S3 on\nOutposts returns the x-amz-replication-status header with one of the following values for\nthe object's replication status: PENDING, COMPLETED, or FAILED. Managing your replication API Version 2006-03-01 173\n\nAmazon S3 on Outposts User Guide\nNote\nIf object replication fails after you upload an object, you can't retry replication. You must\nupload the object again. Objects transition to a FAILED state for issues such as missing\nreplication role permissions or missing bucket permissions. For temporary failures, such\nas if a bucket or your Outpost is unavailable, the replication status doesn't transition\nto FAILED, but remains PENDING. After the resource is back online, S3 on Outposts\nresumes replicating those objects. \u2022 When you request an object from a destination bucket, if the object in your request is a replica\nthat S3 on Outposts created, S3 on Outposts returns the x-amz-replication-status header\nwith the value REPLICA. Note\nBefore deleting an object from a source bucket that has replication enabled, check the\nobject's replication status to ensure that the object has been replicated. Replication status if Amazon S3 replica modification sync on Outposts is enabled\nWhen your replication rules enable S3 on Outposts replica modification sync, replicas can report\nstatuses other than REPLICA. If metadata changes are in the process of replicating, the x-amz-\nreplication-status header for the replica returns PENDING. If replica modification sync fails to\nreplicate metadata, the header for the replica returns FAILED.",
      "start_idx": 307884,
      "end_idx": 315098,
      "metadata": {
        "num_sentences": 11,
        "num_words": 241,
        "chunk_type": "semantic_split",
        "coherence_score": 0.46632790998979046,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication status",
            "x-amz-replication-status",
            "FAILED",
            "PENDING",
            "REPLICA",
            "replication role permissions",
            "bucket permissions",
            "replica modification sync",
            "metadata replication"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "x-amz-replication-status header",
            "replication rules",
            "destination bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the replication status values for objects in Amazon S3 on Outposts, including handling failures and metadata replication sync behavior. It also provides guidance on verifying replication status before deleting objects from source buckets.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the possible replication status values in Amazon S3 on Outposts?",
            "How does S3 on Outposts handle replication failures?",
            "What should you check before deleting an object in a source bucket with replication enabled?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "replica modification sync",
          "destination bucket",
          "replication status",
          "FAILED",
          "metadata replication",
          "replication role permissions",
          "x-amz-replication-status header",
          "x-amz-replication-status",
          "bucket permissions",
          "S3 on Outposts",
          "PENDING",
          "Outposts",
          "replication rules",
          "REPLICA"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_213",
      "text": "If metadata is replicated correctly,\nthe header for the replica returns the value REPLICA. Troubleshooting replication\nIf object replicas don't appear in the destination Amazon S3 on Outposts bucket after you\nconfigure replication, use these troubleshooting tips to identify and fix issues. \u2022 The time it takes S3 on Outposts to replicate an object depends on several factors, including the\ndistance between the source and destination Outposts, and the size of the object. You can check the source object's replication status. If the object's replication status is PENDING,\nS3 on Outposts hasn't completed the replication. If the object's replication status is FAILED,\ncheck the replication configuration that you set on the source bucket. Managing your replication API Version 2006-03-01 174\n\nAmazon S3 on Outposts User Guide\n\u2022 In the replication configuration on the source bucket, verify the following:\n\u2022 The access point Amazon Resource Name (ARN) of the destination bucket is correct. \u2022 The key name prefix is correct. For example, if you set the configuration to replicate objects\nwith the prefix Tax, then only objects with key names such as Tax/document1 or Tax/\ndocument2 are replicated. An object with the key name document3 is not replicated.",
      "start_idx": 315099,
      "end_idx": 316352,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "breakpoint_idx": 2130,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.37543661329481337,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Troubleshooting",
              "Configuration"
            ]
          },
          "keywords": [
            "metadata",
            "replication",
            "Amazon S3 on Outposts",
            "destination bucket",
            "replication configuration",
            "replication status",
            "PENDING",
            "FAILED",
            "access point ARN",
            "key name prefix"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "replication configuration",
            "access point ARN",
            "destination bucket",
            "key name prefix"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Troubleshooting"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides troubleshooting steps for replication issues in Amazon S3 on Outposts, including verifying configuration settings like access point ARNs and key name prefixes.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I troubleshoot replication issues in Amazon S3 on Outposts?",
            "What does the replication status PENDING or FAILED mean?",
            "How do I configure key name prefixes for replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "metadata",
          "Amazon S3 on Outposts",
          "destination bucket",
          "replication status",
          "FAILED",
          "replication",
          "access point ARN",
          "key name prefix",
          "PENDING",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_214",
      "text": "\u2022 The status is Enabled. \u2022 Verify that versioning hasn't been suspended on either bucket. Both the source and destination\nbuckets must have versioning enabled. \u2022 If the destination bucket is owned by another AWS account, verify that the bucket owner has a\nbucket policy on the destination bucket that allows the source bucket owner to replicate objects. For an example, see Granting permissions when the source and destination Outposts buckets are\nowned by different AWS accounts. \u2022 If an object replica doesn't appear in the destination bucket, the following issues might prevent\nreplication:\n\u2022 S3 on Outposts doesn't replicate an object in a source bucket that is a replica created by\nanother replication configuration. For example, if you set a replication configuration from\nbucket A to bucket B to bucket C, S3 on Outposts doesn't replicate object replicas in bucket B\nto bucket C.\nIf you want to replicate objects in bucket A to bucket B and bucket C, set multiple bucket\ndestinations in different replication rules for your source bucket replication configuration. For example, create two replication rules on source bucket A, with one rule to replicate to\ndestination bucket B and the other rule to replicate to destination bucket C.\n\u2022 A source bucket owner can grant other AWS accounts permission to upload objects. By default,\nthe source bucket owner doesn't have permissions for the objects created by other accounts.",
      "start_idx": 316353,
      "end_idx": 319387,
      "metadata": {
        "num_sentences": 9,
        "num_words": 233,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45463911692301434,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "versioning",
            "replication",
            "bucket policy",
            "S3 on Outposts",
            "source bucket",
            "destination bucket",
            "replication configuration",
            "replica",
            "permissions",
            "AWS account"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS account",
            "bucket A",
            "bucket B",
            "bucket C"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure and troubleshoot object replication between S3 on Outposts buckets, including handling versioning, permissions, and replication rules.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements for enabling replication between S3 on Outposts buckets?",
            "Why might an object replica not appear in the destination bucket?",
            "How can I configure multiple replication destinations for a source bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket C",
          "destination bucket",
          "versioning",
          "replication",
          "bucket policy",
          "AWS account",
          "S3 on Outposts",
          "permissions",
          "bucket B",
          "bucket A",
          "replication configuration",
          "replica",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_215",
      "text": "The replication configuration replicates only the objects for which the source bucket owner has\naccess permissions. To avoid replication issues, the source bucket owner can grant other AWS\naccounts permissions to create objects conditionally, requiring explicit access permissions on\nthose objects. \u2022 Suppose that in the replication configuration, you add a rule to replicate a subset of objects that\nhave a specific tag. In this case, you must assign the specific tag key and value at the time that\nthe object is created in order for S3 on Outposts to replicate the object. If you first create an\nobject and then add the tag to that existing object, S3 on Outposts doesn't replicate the object. \u2022 Replication fails if the bucket policy denies access to the replication role for any of the following\nactions:\nManaging your replication API Version 2006-03-01 175\n\nAmazon S3 on Outposts User Guide\nSource bucket:\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\nDestination buckets:\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateTags\"\n\u2022 Amazon EventBridge can notify you when objects don't replicate to their destination Outposts. For more information, see Using EventBridge for S3 Replication on Outposts. Using EventBridge for S3 Replication on Outposts\nAmazon S3 on Outposts is integrated with Amazon EventBridge and uses the s3-outposts\nnamespace. EventBridge is a serverless event bus service that you can use to connect your\napplications with data from a variety of sources. For more information, see What is Amazon\nEventBridge?",
      "start_idx": 316353,
      "end_idx": 319387,
      "metadata": {
        "num_sentences": 10,
        "num_words": 232,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3877064175075955,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Error Handling"
            ]
          },
          "keywords": [
            "replication configuration",
            "source bucket owner",
            "access permissions",
            "specific tag",
            "S3 on Outposts",
            "bucket policy",
            "replication role",
            "Amazon EventBridge",
            "namespace",
            "event bus"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "s3-outposts:GetObjectVersionForReplication",
            "s3-outposts:ReplicateObject",
            "s3-outposts namespace"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "Event-Driven Architecture"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the replication configuration for Amazon S3 on Outposts, detailing access permissions, tagging requirements, bucket policies, and integration with Amazon EventBridge for monitoring replication failures.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the access requirements for replication in S3 on Outposts?",
            "How does tagging affect object replication in S3 on Outposts?",
            "How can EventBridge notify about replication failures in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "s3-outposts:ReplicateObject",
          "s3-outposts namespace",
          "namespace",
          "Amazon S3 on Outposts",
          "bucket policy",
          "access permissions",
          "s3-outposts:GetObjectVersionForReplication",
          "replication role",
          "EventBridge",
          "S3 on Outposts",
          "Amazon EventBridge",
          "specific tag",
          "event bus",
          "replication configuration",
          "source bucket owner"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_216",
      "text": "in the Amazon EventBridge User Guide. To assist in troubleshooting any replication configuration issues, you can set up Amazon\nEventBridge to receive notifications about replication failure events. EventBridge can notify you in\ninstances when objects don't replicate to their destination Outposts.",
      "start_idx": 319388,
      "end_idx": 319685,
      "metadata": {
        "num_sentences": 3,
        "num_words": 41,
        "breakpoint_idx": 2152,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.4387830893198649,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Troubleshooting",
              "Notification Setup"
            ]
          },
          "keywords": [
            "Amazon EventBridge",
            "replication",
            "configuration",
            "notifications",
            "failure events",
            "objects",
            "destination",
            "Outposts",
            "troubleshooting",
            "setup"
          ],
          "entities": [
            "Amazon EventBridge",
            "Outposts",
            "replication configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Event Management",
            "Troubleshooting"
          ],
          "mentioned_services": [
            "Amazon EventBridge",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to configure Amazon EventBridge to receive notifications for replication failure events to assist in troubleshooting issues related to object replication to Outposts.",
          "intents": [
            "Troubleshooting",
            "How-To"
          ],
          "potential_questions": [
            "How can I set up notifications for replication failures in Amazon EventBridge?",
            "What should I do if objects fail to replicate to their destination Outposts?",
            "How does Amazon EventBridge assist in troubleshooting replication issues?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "failure events",
          "setup",
          "replication",
          "configuration",
          "objects",
          "destination",
          "Amazon EventBridge",
          "Outposts",
          "troubleshooting",
          "notifications",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_217",
      "text": "For more information about\nthe current state of an object that's being replicated, see Replication status overview. Whenever certain events happen in your Outposts bucket, S3 on Outposts can send events to\nEventBridge. Unlike other destinations, you don't need to select which event types that you\nwant to deliver. You can also use EventBridge rules to route events to additional targets. After\nEventBridge is enabled, S3 on Outposts sends all of the following events to EventBridge. Event type Description Namespace\nOperation The replication of an object within a s3-outposts\nFailedRep replication rule failed. For more informati\nlication on about S3 Replication on Outposts\nfailure reasons, see Using EventBridge to\nManaging your replication API Version 2006-03-01 176\n\nAmazon S3 on Outposts User Guide\nEvent type Description Namespace\nview S3 Replication on Outposts failure\nreasons. Using EventBridge to view S3 Replication on Outposts failure reasons\nThe following table lists S3 Replication on Outposts failure reasons. You can configure an\nEventBridge rule to publish and view the failure reason through Amazon Simple Queue Service\n(Amazon SQS), Amazon Simple Notification Service (Amazon SNS), AWS Lambda, or Amazon\nCloudWatch Logs. For more information about the permissions that are required to use these\nresources for EventBridge, see Using resource-based policies for EventBridge. Replication failure reason Description\nAssumeRoleNotPermitted S3 on Outposts can't assume the AWS\nIdentity and Access Management (IAM) role\nthat's specified in the replication configura\ntion.",
      "start_idx": 319686,
      "end_idx": 326544,
      "metadata": {
        "num_sentences": 11,
        "num_words": 231,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3907983953302557,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "EventBridge",
            "replication",
            "IAM role",
            "permissions",
            "failure reasons",
            "EventBridge rules",
            "Amazon SQS",
            "Amazon SNS",
            "AWS Lambda"
          ],
          "entities": [
            "S3 on Outposts",
            "EventBridge",
            "Amazon SQS",
            "Amazon SNS",
            "AWS Lambda"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Management",
            "Access Control"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "EventBridge",
            "IAM"
          ],
          "mentioned_tools": [
            "Amazon SQS",
            "Amazon SNS",
            "AWS Lambda"
          ]
        },
        "semantic": {
          "summary": "The document explains how S3 on Outposts integrates with EventBridge to handle replication events and provides details on failure reasons and permissions required for using related AWS services.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the failure reasons for S3 Replication on Outposts?",
            "How does EventBridge handle events from S3 on Outposts?",
            "What permissions are needed to use EventBridge with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Lambda",
          "replication",
          "Amazon SQS",
          "IAM role",
          "EventBridge rules",
          "Amazon SNS",
          "EventBridge",
          "S3 on Outposts",
          "failure reasons",
          "IAM",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_218",
      "text": "DstBucketNotFound S3 on Outposts can't find the destination\nbucket that's specified in the replication\nconfiguration. DstBucketUnversioned Versioning isn't enabled on the Outposts\ndestination bucket. To replicate objects with\nS3 Replication on Outposts, you must enable\nversioning on the destination bucket. DstDelObjNotPermitted S3 on Outposts can't replicate deletes to\nthe destination bucket. The s3-outpos\nts:ReplicateDelete permission\nmight be missing for the destination bucket. DstMultipartCompleteNotPermitted S3 on Outposts can't complete a multipart\nupload of objects in the destination bucket. The s3-outposts:ReplicateObject\nManaging your replication API Version 2006-03-01 177\n\nAmazon S3 on Outposts User Guide\nReplication failure reason Description\npermission might be missing for the\ndestination bucket. DstMultipartInitNotPermitted S3 on Outposts can't initiate a multipart\nupload of objects to the destination bucket. The s3-outposts:ReplicateObject\npermission might be missing for the\ndestination bucket. DstMultipartPartUploadNotPe S3 on Outposts can't upload multipart\nrmitted upload objects in the destination bucket. The s3-outposts:ReplicateObject\npermission might be missing for the\ndestination bucket.",
      "start_idx": 319686,
      "end_idx": 326544,
      "metadata": {
        "num_sentences": 11,
        "num_words": 153,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6950037175958806,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Descriptions",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "destination bucket",
            "versioning",
            "multipart upload",
            "permission",
            "s3-outposts:ReplicateObject",
            "s3-outposts:ReplicateDelete",
            "replication configuration",
            "error codes"
          ],
          "entities": [
            "DstBucketNotFound",
            "DstBucketUnversioned",
            "DstDelObjNotPermitted",
            "DstMultipartCompleteNotPermitted",
            "DstMultipartInitNotPermitted"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "Permission Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on various error codes related to Amazon S3 on Outposts replication and their possible causes, including missing permissions and configuration issues.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the common replication error codes in S3 on Outposts?",
            "How can I resolve missing permissions for S3 on Outposts replication?",
            "Why is versioning required for S3 replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "DstMultipartInitNotPermitted",
          "s3-outposts:ReplicateObject",
          "error codes",
          "Amazon S3 on Outposts",
          "destination bucket",
          "versioning",
          "DstBucketUnversioned",
          "replication",
          "DstBucketNotFound",
          "S3 on Outposts",
          "DstDelObjNotPermitted",
          "permission",
          "s3-outposts:ReplicateDelete",
          "DstMultipartCompleteNotPermitted",
          "replication configuration"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_219",
      "text": "DstOutOfCapacity S3 on Outposts can't replicate to the\ndestination Outpost because the Outpost is\nout of S3 storage capacity. DstPutObjNotPermitted S3 on Outposts can't replicate objects to\nthe destination bucket. The s3-outpos\nts:ReplicateObject permission\nmight be missing for the destination bucket. DstPutTaggingNotPermitted S3 on Outposts can't replicate object tags\nto the destination bucket. The s3-outpos\nts:ReplicateObject permission\nmight be missing for the destination bucket. DstVersionNotFound S3 on Outposts can't find the required object\nversion in the destination bucket in order to\nreplicate that object version's metadata. SrcBucketReplicationConfigMissing S3 on Outposts can't find a replication\nconfiguration for the access point that's\nassociated with the source Outposts bucket. Managing your replication API Version 2006-03-01 178\n\nAmazon S3 on Outposts User Guide\nReplication failure reason Description\nSrcGetObjNotPermitted S3 on Outposts can't access the object\nin the source bucket for replication. The\ns3-outposts:GetObjectVersio\nnForReplication permission might be\nmissing for the source bucket. SrcGetTaggingNotPermitted S3 on Outposts can't access the object tag\ninformation from the source bucket. The\ns3-outposts:GetObjectVersio\nnTagging permission might be missing for\nthe source bucket.",
      "start_idx": 319686,
      "end_idx": 326544,
      "metadata": {
        "num_sentences": 11,
        "num_words": 173,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6741591020063921,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Descriptions",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "permissions",
            "DstOutOfCapacity",
            "DstPutObjNotPermitted",
            "DstVersionNotFound",
            "SrcBucketReplicationConfigMissing",
            "s3-outposts:ReplicateObject",
            "s3-outposts:GetObjectVersionForReplication",
            "s3-outposts:GetObjectVersionTagging"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Replication API",
            "DstOutOfCapacity",
            "SrcBucketReplicationConfigMissing"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "Access Permissions"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines replication failure reasons for Amazon S3 on Outposts, including errors related to capacity, permissions, and missing configurations.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the common replication failure reasons for S3 on Outposts?",
            "Which permissions are required for S3 on Outposts replication?",
            "How can I resolve the DstOutOfCapacity error?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Replication API",
          "s3-outposts:ReplicateObject",
          "DstVersionNotFound",
          "replication",
          "DstOutOfCapacity",
          "s3-outposts:GetObjectVersionForReplication",
          "SrcBucketReplicationConfigMissing",
          "DstPutObjNotPermitted",
          "S3 on Outposts",
          "s3-outposts:GetObjectVersionTagging",
          "Outposts",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_220",
      "text": "SrcHeadObjectNotPermitted S3 on Outposts can't retrieve object\nmetadata from the source bucket. The\ns3-outposts:GetObjectVersio\nnForReplication permission might be\nmissing for the source bucket. SrcObjectNotEligible The object isn't eligible for replication. The\nobject or its object tags don't match the\nreplication configuration. For more information about troubleshooting replication, see the following topics:\n\u2022 Creating an IAM role\n\u2022 Troubleshooting replication\nMonitoring EventBridge with CloudWatch\nFor monitoring, Amazon EventBridge integrates with Amazon CloudWatch. EventBridge\nautomatically sends metrics to CloudWatch every minute. These metrics include the number of\nevents that have been matched by a rule and the number of times a target is invoked by a rule. When a rule runs in EventBridge, all of the targets associated with the rule are invoked. You can\nmonitor your EventBridge behavior through CloudWatch in the following ways. Managing your replication API Version 2006-03-01 179\n\nAmazon S3 on Outposts User Guide\n\u2022 You can monitor the available EventBridge metrics for your EventBridge rules from the\nCloudWatch dashboard. Then, you can use CloudWatch features, such as CloudWatch alarms,\nto set alarms on certain metrics.",
      "start_idx": 319686,
      "end_idx": 326544,
      "metadata": {
        "num_sentences": 11,
        "num_words": 178,
        "chunk_type": "semantic_split",
        "coherence_score": 0.2866241801868786,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "IAM role",
            "EventBridge",
            "CloudWatch",
            "metrics",
            "replication configuration",
            "permissions",
            "alarms",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EventBridge",
            "Amazon CloudWatch",
            "IAM role",
            "S3-outposts:GetObjectVersionForReplication"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Services",
          "secondary_categories": [
            "Monitoring",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EventBridge",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "The documentation discusses potential issues with Amazon S3 on Outposts replication, including missing permissions and object eligibility, and provides guidance on monitoring EventBridge behavior using CloudWatch metrics and alarms.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What permissions are required for S3 on Outposts replication?",
            "How can I monitor EventBridge metrics in CloudWatch?",
            "What causes an object to be ineligible for replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Services]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "replication",
          "alarms",
          "metrics",
          "IAM role",
          "Amazon CloudWatch",
          "EventBridge",
          "S3 on Outposts",
          "S3-outposts:GetObjectVersionForReplication",
          "Amazon EventBridge",
          "CloudWatch",
          "replication configuration",
          "Amazon S3",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_221",
      "text": "If those metrics reach the custom threshold values that you've\nspecified in the alarms, you receive notifications and can take action accordingly. \u2022 You can set Amazon CloudWatch Logs as a target of your EventBridge rule. Then, EventBridge\ncreates log streams and CloudWatch Logs stores the text from the events as log entries. For more\ninformation, see EventBridge and CloudWatch Logs. For more information about debugging EventBridge event delivery and archiving events, see the\nfollowing topics:\n\u2022 Event retry policy and using dead-letter queues\n\u2022 Archiving EventBridge events\nSharing S3 on Outposts by using AWS RAM\nAmazon S3 on Outposts supports sharing S3 capacity across multiple accounts within an\norganization by using AWS Resource Access Manager (AWS RAM). With S3 on Outposts sharing, you\ncan allow others to create and manage buckets, endpoints, and access points on your Outpost. This topic demonstrates how to use AWS RAM to share S3 on Outposts and related resources with\nanother AWS account in your AWS organization. Prerequisites\n\u2022 The Outpost owner account has an organization configured in AWS Organizations. For more\ninformation, see Creating an organization in the AWS Organizations User Guide. \u2022 The organization includes the AWS account that you want to share your S3 on Outposts capacity\nwith. For more information, see Sending invitations to AWS accounts in the AWS Organizations\nUser Guide. \u2022 Select one of the following options that you want to share.",
      "start_idx": 319686,
      "end_idx": 326544,
      "metadata": {
        "num_sentences": 12,
        "num_words": 234,
        "chunk_type": "semantic_split",
        "coherence_score": 0.34412979357170337,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Integration"
            ]
          },
          "keywords": [
            "Amazon CloudWatch Logs",
            "EventBridge",
            "AWS RAM",
            "S3 on Outposts",
            "dead-letter queues",
            "Event retry policy",
            "archiving events",
            "AWS Organizations",
            "sharing S3 capacity",
            "log streams"
          ],
          "entities": [
            "Amazon CloudWatch Logs",
            "EventBridge",
            "AWS RAM",
            "S3 on Outposts",
            "AWS Organizations"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure Management",
          "secondary_categories": [
            "Event Monitoring",
            "Resource Sharing"
          ],
          "mentioned_services": [
            "Amazon CloudWatch Logs",
            "EventBridge",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure EventBridge with CloudWatch Logs and how to share S3 on Outposts capacity using AWS RAM within an AWS organization. It includes prerequisites and related topics for debugging and event archiving.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I configure EventBridge rules to log events in CloudWatch Logs?",
            "What are the prerequisites for sharing S3 on Outposts with AWS RAM?",
            "How can I debug EventBridge event delivery issues?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure Management]",
        "tf_idf_keywords": [
          "log streams",
          "AWS RAM",
          "dead-letter queues",
          "AWS Organizations",
          "EventBridge",
          "S3 on Outposts",
          "Event retry policy",
          "Amazon CloudWatch Logs",
          "archiving events",
          "sharing S3 capacity"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_222",
      "text": "The second resource (either Subnets\nor Outposts) must be selected so that endpoints are also accessible. Endpoints are a networking\nrequirement in order to access data stored in S3 on Outposts. Sharing S3 on Outposts API Version 2006-03-01 180\n\nAmazon S3 on Outposts User Guide\nOption 1 Option 2\nS3 on Outposts S3 on Outposts\nAllows the user to create buckets on your Allows the user to create buckets on your\nOutposts and access points and to add Outposts and access points and to add\nobjects to those buckets. objects to those buckets. Subnets Outposts\nAllows the user to use your virtual private Allows the user to see S3 capacity charts\ncloud (VPC) and the endpoints that are and the AWS Outposts console home page. associated with your subnet. Also allows users to create subnets on shared\nOutposts and create endpoints. Procedure\n1. Sign in to the AWS Management Console by using the AWS account that owns the Outpost,\nand then open the AWS RAM console at https://console.aws.amazon.com/ram. 2.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 169,
        "chunk_type": "semantic_split",
        "coherence_score": 0.24998558892144096,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "endpoints",
            "subnets",
            "AWS RAM console",
            "Outposts",
            "virtual private cloud",
            "buckets",
            "access points",
            "AWS Management Console",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS RAM console",
            "AWS Management Console",
            "VPC",
            "Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Outposts Configuration",
          "secondary_categories": [
            "Networking",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS RAM",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS RAM console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure endpoints and subnets to access Amazon S3 on Outposts, including steps to use the AWS RAM console for setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure endpoints for S3 on Outposts?",
            "What are the networking requirements for accessing S3 on Outposts?",
            "How can I use the AWS RAM console to manage Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Outposts Configuration]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "endpoints",
          "AWS Management Console",
          "Amazon S3 on Outposts",
          "VPC",
          "AWS RAM",
          "access points",
          "subnets",
          "AWS RAM console",
          "S3 on Outposts",
          "buckets",
          "Outposts",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_223",
      "text": "Make sure that you have enabled sharing with AWS Organizations in AWS RAM. For\ninformation, see Enable resource sharing within AWS Organizations in the AWS RAM User\nGuide. 3. Use either Option 1 or Option 2 in the prerequisites to create a resource share. If you have\nmultiple S3 on Outposts resources, select the Amazon Resource Names (ARNs) of the resources\nthat you want to share. To enable endpoints, share either your subnet or Outpost. For more information about how to create a resource share, see Create a resource share in the\nAWS RAM User Guide. 4. The AWS account that you shared your resources with should now be able to use S3 on\nOutposts. Depending on the option that you selected in the prerequisites, provide the\nfollowing information to the account user:\nOption 1 Option 2\nThe Outpost ID The Outpost ID\nProcedure API Version 2006-03-01 181\n\nAmazon S3 on Outposts User Guide\nOption 1 Option 2\nThe VPC ID\nThe subnet ID\nThe security group ID\nNote\nThe user can confirm that the resources have been shared with them by using the AWS\nRAM console, the AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 199,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31780319213867186,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "AWS RAM",
            "resource sharing",
            "S3 on Outposts",
            "Amazon Resource Names",
            "Outpost ID",
            "VPC ID",
            "subnet ID",
            "security group ID",
            "AWS Organizations",
            "endpoints"
          ],
          "entities": [
            "AWS RAM",
            "AWS Organizations",
            "Amazon S3 on Outposts",
            "Outpost ID",
            "VPC ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Resource Management",
          "secondary_categories": [
            "Storage Services",
            "Networking"
          ],
          "mentioned_services": [
            "AWS RAM",
            "S3 on Outposts",
            "AWS Organizations"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable resource sharing with AWS Organizations in AWS RAM and outlines the steps to create a resource share for S3 on Outposts, including sharing subnets or Outposts and providing required IDs to other accounts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable resource sharing in AWS RAM?",
            "What information do I need to share S3 on Outposts resources?",
            "How can a user confirm shared resources in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Resource Management]",
        "tf_idf_keywords": [
          "endpoints",
          "subnet ID",
          "Amazon S3 on Outposts",
          "resource sharing",
          "AWS RAM",
          "VPC ID",
          "security group ID",
          "AWS Organizations",
          "S3 on Outposts",
          "Amazon Resource Names",
          "Outpost ID"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_224",
      "text": "The\nuser can view their existing resource shares by using the get-resource-shares CLI command. Usage examples\nAfter you have shared your S3 on Outposts resources with another account, that account can\nmanage buckets and objects on your Outpost. If you shared the Subnets resource, then that\naccount can use the endpoint that you created. The following examples demonstrate how a user\ncan use the AWS CLI to interact with your Outpost after you share these resources. Example : Create a bucket\nThe following example creates a bucket named amzn-s3-demo-bucket1 on the Outpost\nop-01ac5d28a6a232904. Before using this command, replace each user input placeholder\nwith the appropriate values for your use case. aws s3control create-bucket --bucket amzn-s3-demo-bucket1 --outpost-\nid op-01ac5d28a6a232904\nFor more information about this command, see create-bucket in the AWS CLI Reference. Example : Create an access point\nThe following example creates an access point on an Outpost by using the example parameters in\nthe following table. Before using this command, replace these user input placeholder values\nand the AWS Region code with the appropriate values for your use case. Usage examples API Version 2006-03-01 182\n\nAmazon S3 on Outposts User Guide\nParameter Value\nAccount ID 111122223333\nAccess point name example-outpost-access-point\nOutpost ID op-01ac5d28a6a232904\nOutpost bucket name amzn-s3-demo-bucket1\nVPC ID vpc-1a2b3c4d5e6f7g8h9\nNote\nThe Account ID parameter must be the AWS account ID of the bucket owner, which is the\nshared user.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 230,
        "chunk_type": "semantic_split",
        "coherence_score": 0.31672015719943575,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Usage Examples",
              "Command Explanation"
            ]
          },
          "keywords": [
            "resource shares",
            "S3 on Outposts",
            "create-bucket",
            "access point",
            "AWS CLI",
            "Outpost ID",
            "VPC ID",
            "Account ID",
            "bucket owner",
            "shared user"
          ],
          "entities": [
            "amzn-s3-demo-bucket1",
            "op-01ac5d28a6a232904",
            "example-outpost-access-point",
            "vpc-1a2b3c4d5e6f7g8h9",
            "111122223333"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS S3 on Outposts",
          "secondary_categories": [
            "AWS CLI Commands",
            "Cloud Resource Sharing"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how users can interact with Amazon S3 on Outposts resources using AWS CLI commands, including creating buckets and access points after resource sharing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on an AWS Outpost using the CLI?",
            "What parameters are required to create an access point on an Outpost?",
            "What permissions does a shared user have for S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS S3 on Outposts]",
        "tf_idf_keywords": [
          "VPC",
          "create-bucket",
          "Amazon S3 on Outposts",
          "Account ID",
          "VPC ID",
          "amzn-s3-demo-bucket1",
          "vpc-1a2b3c4d5e6f7g8h9",
          "example-outpost-access-point",
          "access point",
          "resource shares",
          "S3 on Outposts",
          "Outpost ID",
          "shared user",
          "op-01ac5d28a6a232904",
          "bucket owner"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_225",
      "text": "aws s3control create-access-point --account-id 111122223333 --name example-outpost-\naccess-point \\\n--bucket arn:aws:s3-outposts:us-east-1:111122223333:outpost/op-01ac5d28a6a232904/\nbucket/amzn-s3-demo-bucket1 \\\n--vpc-configuration VpcId=vpc-1a2b3c4d5e6f7g8h9\nFor more information about this command, see create-access-point in the AWS CLI Reference. Example : Upload an object\nThe following example uploads the file my_image.jpg from the user's local file system to an\nobject named images/my_image.jpg through the access point example-outpost-access-\npoint on the Outpost op-01ac5d28a6a232904, owned by the AWS account 111122223333. Before using this command, replace these user input placeholder values and the AWS Region\ncode with the appropriate values for your use case. aws s3api put-object --bucket arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/example-outpost-access-\npoint \\\n--body my_image.jpg --key images/my_image.jpg\nUsage examples API Version 2006-03-01 183\n\nAmazon S3 on Outposts User Guide\nFor more information about this command, see put-object in the AWS CLI Reference. Note\nIf this operation results in a Resource not found error or is unresponsive, your VPC might\nnot have a shared endpoint. To check whether there is a shared endpoint, use the list-shared-endpoints AWS CLI\ncommand. If there is no shared endpoint, work with the Outpost owner to create one. For more information, see ListSharedEndpoints in the Amazon Simple Storage Service API\nReference. Example : Create an endpoint\nThe following example creates an endpoint on a shared Outpost. Before using this command,\nreplace the user input placeholder values for the Outpost ID, subnet ID, and security group\nID with the appropriate values for your use case.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 233,
        "chunk_type": "semantic_split",
        "coherence_score": 0.35688794453938805,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Outposts",
            "access point",
            "VPC configuration",
            "endpoint",
            "put-object",
            "create-access-point",
            "shared endpoint",
            "Outpost ID",
            "Resource not found"
          ],
          "entities": [
            "AWS S3",
            "VPC",
            "Outpost",
            "Amazon Simple Storage Service",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "S3 Outposts",
            "Amazon VPC",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural examples for creating an access point and uploading objects to Amazon S3 on Outposts using the AWS CLI, along with troubleshooting tips for shared endpoints.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I create an access point on AWS S3 Outposts?",
            "What are the steps to upload an object using an access point?",
            "How can I troubleshoot a 'Resource not found' error in this context?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "put-object",
          "VPC",
          "VPC configuration",
          "AWS S3",
          "Amazon Simple Storage Service",
          "access point",
          "create-access-point",
          "shared endpoint",
          "Outpost ID",
          "endpoint",
          "Outpost",
          "Resource not found",
          "S3 Outposts",
          "Amazon VPC",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_226",
      "text": "Note\nThe user can perform this operation only if the resource share includes the Outposts\nresource. aws s3outposts create-endpoint --outposts-id op-01ac5d28a6a232904 --subnet-id XXXXXX --\nsecurity-group-id XXXXXXX\nFor more information about this command, see create-endpoint in the AWS CLI Reference. Other AWS services that use S3 on Outposts\nOther AWS services that run local to your AWS Outposts can also use your Amazon S3 on Outposts\ncapacity. In Amazon CloudWatch the S3Outposts namespace shows detailed metrics for buckets\nwithin S3 on Outposts, but these metrics don't include usage for other AWS services. To manage\nyour S3 on Outposts capacity that is consumed by other AWS services, see the information in the\nfollowing table. Other services API Version 2006-03-01 184\n\nAmazon S3 on Outposts User Guide\nAWS service Description Learn more\nAmazon S3 All direct S3 on Outposts usage has a matching account See metrics\nand bucket CloudWatch metric. Amazon Elastic For Amazon EBS on Outposts, you can choose an AWS Learn more\nBlock Store Outpost as your snapshot destination and store locally\n(Amazon EBS) in your S3 on Outpost. Amazon You can use Amazon RDS local backups to store your Learn more\nRelationa RDS backups locally on your Outpost. l Database\nService (Amazon\nRDS)\nOther services API Version 2006-03-01 185\n\nAmazon S3 on Outposts User Guide\nMonitoring S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 289,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5451312594943576,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Command Explanation",
              "Service Integration",
              "Monitoring"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "create-endpoint",
            "Outposts resource",
            "AWS CLI",
            "Amazon CloudWatch",
            "S3Outposts namespace",
            "Amazon EBS",
            "Amazon RDS",
            "local backups",
            "storage class"
          ],
          "entities": [
            "AWS Outposts",
            "Amazon S3",
            "Amazon CloudWatch",
            "Amazon EBS",
            "Amazon RDS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Services",
          "secondary_categories": [
            "Cloud Storage",
            "Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EBS",
            "Amazon RDS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts, including creating endpoints, monitoring usage, and integrating with other AWS services like Amazon EBS and Amazon RDS. It also provides details on metrics and storage management for S3 on Outposts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I create an endpoint for S3 on Outposts?",
            "What metrics are available for S3 on Outposts in Amazon CloudWatch?",
            "How can Amazon RDS use S3 on Outposts for local backups?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Services]",
        "tf_idf_keywords": [
          "local backups",
          "AWS Outposts",
          "Amazon EBS",
          "storage class",
          "Amazon CloudWatch",
          "S3 on Outposts",
          "create-endpoint",
          "S3Outposts namespace",
          "Outposts resource",
          "Amazon S3",
          "Amazon RDS",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_227",
      "text": "You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? For more information about monitoring your Amazon S3 on Outposts storage capacity, see the\nfollowing topics. Topics\n\u2022 Managing S3 on Outposts capacity with Amazon CloudWatch metrics\n\u2022 Receiving S3 on Outposts event notifications by using Amazon CloudWatch Events\n\u2022 Monitoring S3 on Outposts with AWS CloudTrail logs\nManaging S3 on Outposts capacity with Amazon CloudWatch\nmetrics\nTo help manage the fixed S3 capacity on your Outpost, we recommend that you create CloudWatch\nalerts that tell you when your storage utilization exceeds a certain threshold. For more information\nabout the CloudWatch metrics for S3 on Outposts, see CloudWatch metrics. If there is not enough\nspace to store an object on your Outpost, the API returns an insufficient capacity exemption\n(ICE). To free up space, you can create CloudWatch alarms that trigger explicit data deletion, or\nuse a lifecycle expiration policy to expire objects. To save data before deletion, you can use AWS\nDataSync to copy data from your Amazon S3 on Outposts bucket to an S3 bucket in an AWS\nRegion.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 247,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5175633748372396,
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Outpost bucket",
            "access point",
            "endpoint connection",
            "virtual private cloud",
            "Amazon S3",
            "AWS Management Console",
            "CloudWatch metrics",
            "CloudTrail logs",
            "DataSync",
            "lifecycle expiration policy"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudWatch",
            "AWS CloudTrail",
            "AWS DataSync",
            "Amazon VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Monitoring and Alerts",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage Amazon S3 on Outposts buckets using access points, endpoints, and monitoring tools like AWS CloudWatch and AWS CloudTrail. It also covers methods for handling insufficient storage capacity and transferring data using AWS DataSync.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I monitor storage capacity for S3 on Outposts?",
            "What happens if there is insufficient storage space on an Outpost bucket?",
            "How can I transfer data from an Outpost bucket to an AWS Region bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CloudWatch",
          "endpoint connection",
          "DataSync",
          "AWS Management Console",
          "lifecycle expiration policy",
          "Amazon S3 on Outposts",
          "AWS DataSync",
          "CloudTrail logs",
          "Outpost bucket",
          "CloudWatch metrics",
          "access point",
          "AWS CloudTrail",
          "Amazon VPC",
          "Amazon S3",
          "virtual private cloud"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_228",
      "text": "For more information about using DataSync, see Getting Started with AWS DataSync in the\nAWS DataSync User Guide. CloudWatch metrics API Version 2006-03-01 186\n\nAmazon S3 on Outposts User Guide\nCloudWatch metrics\nThe S3Outposts namespace includes the following metrics for Amazon S3 on Outposts buckets. You can monitor the total number of S3 on Outposts bytes provisioned, the total free bytes\navailable for objects, and the total size of all objects for a given bucket. Bucket or account-related\nmetrics exist for all direct S3 usage. Indirect S3 usage, such as storing Amazon Elastic Block Store\nlocal snapshots or Amazon Relational Database Service backups on an Outpost, consumes S3\ncapacity, but is not included in bucket or account-related metrics. For more information about\nAmazon EBS local snapshots, see Amazon EBS local snapshots on Outposts. To see your Amazon\nEBS cost report, visit https://console.aws.amazon.com/billing/. Note\nS3 on Outposts supports only the following metrics, and no other Amazon S3 metrics. Because S3 on Outposts has a fixed capacity limit, we recommend creating CloudWatch\nalarms to notify you when your storage utilization exceeds a certain threshold. Metric Description Time Units Type\nPeriod\nOutpostToT he total provisioned capacity 5 Bytes S3 on Outposts\ntalBytesin bytes for an Outpost.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 203,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43988193935818143,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics",
              "Guidelines"
            ]
          },
          "keywords": [
            "AWS DataSync",
            "CloudWatch metrics",
            "Amazon S3",
            "Outposts",
            "provisioned capacity",
            "bucket metrics",
            "Amazon EBS",
            "storage utilization",
            "fixed capacity",
            "CloudWatch alarms"
          ],
          "entities": [
            "AWS DataSync",
            "Amazon S3 on Outposts",
            "CloudWatch",
            "Amazon EBS",
            "Amazon Relational Database Service"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Monitoring and Metrics",
            "AWS Services"
          ],
          "mentioned_services": [
            "AWS DataSync",
            "Amazon S3 on Outposts",
            "Amazon EBS"
          ],
          "mentioned_tools": [
            "CloudWatch"
          ]
        },
        "semantic": {
          "summary": "The documentation provides details on monitoring Amazon S3 on Outposts storage metrics using CloudWatch and includes recommendations for managing storage utilization with alarms. It also highlights the exclusion of indirect S3 usage from bucket metrics and provides links to relevant resources.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What metrics are available for Amazon S3 on Outposts?",
            "How can I monitor storage utilization for S3 on Outposts?",
            "What is excluded from bucket-related metrics in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon EBS",
          "Amazon S3 on Outposts",
          "AWS DataSync",
          "provisioned capacity",
          "Amazon Relational Database Service",
          "CloudWatch metrics",
          "fixed capacity",
          "storage utilization",
          "CloudWatch alarms",
          "bucket metrics",
          "CloudWatch",
          "Outposts",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_229",
      "text": "minutes\nOutpostFrT he count of free bytes 5 Bytes S3 on Outposts\neeBytes available on an Outpost to minutes\nstore customer data. BucketUseT he total size of all objects 5 Bytes S3 on Outposts. Direct S3\ndBytes for the given bucket. minutes usage only. AccountUsT he total size of all objects 5 Bytes S3 on Outposts. Direct S3\nedBytes for the specified Outposts minutes usage only. account. BytesPendT he total number of bytes 5 Bytes Optional. For S3 Replication\ningReplico f objects that are pending minutes on Outposts. ation replication for a given\nCloudWatch metrics API Version 2006-03-01 187\n\nAmazon S3 on Outposts User Guide\nMetric Description Time Units Type\nPeriod\nreplication rule.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 113,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3667218526204427,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics",
              "Description"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "CloudWatch",
            "metrics",
            "replication",
            "bytes",
            "bucket",
            "account",
            "pending",
            "storage",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "CloudWatch",
            "Outposts",
            "S3 Replication",
            "Bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Metrics Monitoring",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes metrics for Amazon S3 on Outposts, including storage usage, replication status, and related CloudWatch monitoring details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the key metrics for Amazon S3 on Outposts?",
            "How is storage usage measured in S3 on Outposts?",
            "What does the 'BytesPendingReplication' metric indicate?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "storage",
          "replication",
          "pending",
          "metrics",
          "Bucket",
          "Outposts",
          "S3 on Outposts",
          "bucket",
          "CloudWatch",
          "account",
          "S3 Replication",
          "Amazon S3",
          "bytes"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_230",
      "text": "For more\ninformation about how to\nenable replication metrics,\nsee Creating replication rules\nbetween Outposts. OperationT he total number of 5 Counts Optional. For S3 Replication\nsPendingRo perations that are pending minutes on Outposts. eplicatiore plication for a given\nn replication rule. For more\ninformation about how to\nenable replication metrics,\nsee Creating replication rules\nbetween Outposts. ReplicatiT he current number of 5 Seconds Optional. For S3 Replication\nonLatencyseconds delay by which the minutes on Outposts. replication destination bucket\nis behind the source bucket\nfor a given replication rule. For more information about\nhow to enable replication\nmetrics, see Creating replicati\non rules between Outposts. Receiving S3 on Outposts event notifications by using Amazon\nCloudWatch Events\nYou can use CloudWatch Events to create a rule for any Amazon S3 on Outposts API event.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 133,
        "chunk_type": "semantic_split",
        "coherence_score": 0.3776092105441623,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "replication metrics",
            "replication rules",
            "Outposts",
            "S3 Replication",
            "CloudWatch Events",
            "API event",
            "replication latency",
            "replication operations",
            "destination bucket",
            "source bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "CloudWatch Events",
            "replication rules",
            "replication destination bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Monitoring",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch Events",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to enable replication metrics for Amazon S3 on Outposts, including details on replication rules, latency, and pending operations. It also covers using CloudWatch Events to create rules for S3 API events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable replication metrics for Amazon S3 on Outposts?",
            "What is the latency for replication between source and destination buckets?",
            "How can I use CloudWatch Events to monitor S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replication destination bucket",
          "destination bucket",
          "API event",
          "replication metrics",
          "replication operations",
          "CloudWatch Events",
          "replication latency",
          "Outposts",
          "replication rules",
          "S3 Replication",
          "Amazon S3",
          "source bucket"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_231",
      "text": "When\nyou create a rule, you can choose to get notified through all supported CloudWatch targets,\nincluding Amazon Simple Queue Service (Amazon SQS), Amazon Simple Notification Service\n(Amazon SNS), and AWS Lambda. For more information, see the list of AWS services that can be\ntargets for CloudWatch Events in the Amazon CloudWatch Events User Guide. To choose a target\nAmazon CloudWatch Events API Version 2006-03-01 188\n\nAmazon S3 on Outposts User Guide\nservice to work with your S3 on Outposts, see Creating a CloudWatch Events rule that triggers on\nan AWS API call using AWS CloudTrail in the Amazon CloudWatch Events User Guide. Note\nFor S3 on Outposts object operations, AWS API call events sent by CloudTrail will match\nyour rules only if you have trails (optionally with event selectors) configured to receive\nthose events. For more information, see Working with CloudTrail log files in the AWS\nCloudTrail User Guide. Example\nThe following is a sample rule for the DeleteObject operation. To use this sample rule, replace\namzn-s3-demo-bucket1 with the name of your S3 on Outposts bucket. {\n\"source\": [\n\"aws.s3-outposts\"\n],\n\"detail-type\": [\n\"AWS API call through CloudTrail\"\n],\n\"detail\": {\n\"eventSource\": [\n\"s3-outposts.amazonaws.com\"\n],\n\"eventName\": [\n\"DeleteObject\"\n],\n\"requestParameters\": {\n\"bucketName\": [\n\"amzn-s3-demo-bucket1\"\n]\n}\n}\n}\nAmazon CloudWatch Events API Version 2006-03-01 189\n\nAmazon S3 on Outposts User Guide\nMonitoring S3 on Outposts with AWS CloudTrail logs\nAmazon S3 on Outposts is integrated with AWS CloudTrail, a service that provides a record of\nactions taken by a user, role, or an AWS service in S3 on Outposts. You can use AWS CloudTrail to\nget information about S3 on Outposts bucket-level and object-level requests to audit and log your\nS3 on Outposts event activity. To enable CloudTrail data events for all your Outposts buckets or for a list of specific Outposts\nbuckets, you must create a trail manually in CloudTrail.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 312,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4551847669813368,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "CloudWatch Events",
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "DeleteObject",
            "trail",
            "event selectors",
            "bucketName",
            "API call",
            "log files",
            "notification"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon CloudWatch Events",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Services Integration",
          "secondary_categories": [
            "Cloud Monitoring",
            "Event Logging"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon CloudWatch Events"
          ],
          "mentioned_tools": [
            "AWS Lambda"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create CloudWatch rules for notifications and monitoring S3 on Outposts operations using AWS CloudTrail and CloudWatch Events, with an example for the DeleteObject operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a CloudWatch rule for S3 on Outposts?",
            "What is an example of a CloudWatch rule for the DeleteObject operation?",
            "How does AWS CloudTrail integrate with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Services Integration]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "DeleteObject",
          "notification",
          "API call",
          "Amazon SQS",
          "Amazon SNS",
          "CloudWatch Events",
          "bucketName",
          "log files",
          "event selectors",
          "AWS CloudTrail",
          "trail",
          "Amazon CloudWatch Events"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_232",
      "text": "For more information about CloudTrail log\nfile entries, see S3 on Outposts log file entries. For a complete list of CloudTrail data events for S3 on Outposts, see Amazon S3 data events in\nCloudTrail in the Amazon S3 User Guide. Note\n\u2022 It's a best practice to create a lifecycle policy for your AWS CloudTrail data event\nOutposts bucket. Configure the lifecycle policy to periodically remove log files after\nthe period of time that you need to audit them. Doing so reduces the amount of data\nthat Amazon Athena analyzes for each query. For more information, see Creating and\nmanaging a lifecycle configuration for your Amazon S3 on Outposts bucket. \u2022 For examples of how to query CloudTrail logs, see the AWS Big Data Blog post Analyze\nSecurity, Compliance, and Operational Activity Using AWS CloudTrail and Amazon\nAthena. Enable CloudTrail logging for objects in an S3 on Outposts bucket\nYou can use the Amazon S3 console to configure an AWS CloudTrail trail to log data events for\nobjects in an Amazon S3 on Outposts bucket. CloudTrail supports logging S3 on Outposts object-\nlevel API operations such as GetObject, DeleteObject, and PutObject. These events are called\ndata events.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4327481163872613,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Best Practice",
              "Configuration",
              "Guidance"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 on Outposts",
            "lifecycle policy",
            "data events",
            "Amazon Athena",
            "log files",
            "AWS Big Data Blog",
            "API operations",
            "audit",
            "Amazon S3 User Guide"
          ],
          "entities": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts",
            "Amazon Athena",
            "AWS Big Data Blog",
            "S3 console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Logging and Monitoring",
          "secondary_categories": [
            "Data Management",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts",
            "Amazon Athena"
          ],
          "mentioned_tools": [
            "S3 console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on configuring AWS CloudTrail to log data events for objects in Amazon S3 on Outposts buckets, including lifecycle policy recommendations and querying examples using Amazon Athena.",
          "intents": [
            "How-To",
            "Reference",
            "Best Practice"
          ],
          "potential_questions": [
            "How can I configure CloudTrail to log data events for S3 on Outposts?",
            "What is the best practice for managing CloudTrail log files in S3 on Outposts?",
            "How can I query CloudTrail logs using Amazon Athena?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Logging and Monitoring]",
        "tf_idf_keywords": [
          "audit",
          "AWS CloudTrail",
          "Amazon S3 on Outposts",
          "lifecycle policy",
          "S3 console",
          "Amazon Athena",
          "CloudTrail",
          "data events",
          "S3 on Outposts",
          "AWS Big Data Blog",
          "log files",
          "API operations",
          "Amazon S3 User Guide"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_233",
      "text": "By default, CloudTrail trails don't log data events. However, you can configure trails to log data\nevents for S3 on Outposts buckets that you specify or to log data events for all the S3 on Outposts\nbuckets in your AWS account. CloudTrail logs API Version 2006-03-01 190\n\nAmazon S3 on Outposts User Guide\nCloudTrail does not populate data events in the CloudTrail event history. Additionally, not all\nS3 on Outposts bucket\u2013level API operations are populated in the CloudTrail event history. For\nmore information about how to query CloudTrail logs, see Using Amazon CloudWatch Logs filter\npatterns and Amazon Athena to query CloudTrail logs on the AWS Knowledge Center. To configure a trail to log data events for an S3 on Outposts bucket, you can use either the AWS\nCloudTrail console or the Amazon S3 console. If you are configuring a trail to log data events for\nall the S3 on Outposts buckets in your AWS account, it's easier to use the CloudTrail console. For\ninformation about using the CloudTrail console to configure a trail to log S3 on Outposts data\nevents, see Data events in the AWS CloudTrail User Guide. Important\nAdditional charges apply for data events. For more information, see AWS CloudTrail pricing. The following procedure shows how to use the Amazon S3 console to configure a CloudTrail trail to\nlog data events for an S3 on Outposts bucket. Note\nThe AWS account that creates the bucket owns it and is the only one that can configure S3\non Outposts data events to be sent to AWS CloudTrail. To enable CloudTrail data events logging for objects in an S3 on Outposts bucket\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/. 2. In the left navigation pane, choose Outposts buckets.",
      "start_idx": 326545,
      "end_idx": 343132,
      "metadata": {
        "num_sentences": 16,
        "num_words": 299,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4866570790608724,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Guidance",
              "Warning"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 on Outposts",
            "data events",
            "AWS CloudTrail console",
            "Amazon S3 console",
            "CloudWatch Logs",
            "Amazon Athena",
            "trail configuration",
            "bucket-level API operations",
            "AWS CloudTrail pricing"
          ],
          "entities": [
            "CloudTrail",
            "S3 on Outposts",
            "AWS Management Console",
            "Amazon Athena",
            "CloudWatch Logs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS CloudTrail Configuration",
          "secondary_categories": [
            "Amazon S3 on Outposts",
            "AWS Monitoring and Logging"
          ],
          "mentioned_services": [
            "CloudTrail",
            "Amazon S3",
            "Amazon Athena"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "Amazon S3 console",
            "CloudWatch Logs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure CloudTrail to log data events for S3 on Outposts buckets using either the AWS CloudTrail or Amazon S3 console. It also highlights the limitations, additional charges, and provides a step-by-step guide for enabling this feature.",
          "intents": [
            "How-To",
            "Reference",
            "Warning"
          ],
          "potential_questions": [
            "How do I configure CloudTrail to log data events for S3 on Outposts buckets?",
            "Are there additional charges for logging data events in CloudTrail?",
            "What are the limitations of CloudTrail event history for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CloudTrail Configuration]",
        "tf_idf_keywords": [
          "trail configuration",
          "AWS CloudTrail console",
          "bucket-level API operations",
          "AWS Management Console",
          "Amazon Athena",
          "CloudWatch Logs",
          "CloudTrail",
          "AWS CloudTrail pricing",
          "data events",
          "S3 on Outposts",
          "Amazon S3 console",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_234",
      "text": "3. Choose the name of the Outposts bucket whose data events you want to log by using\nCloudTrail. 4.",
      "start_idx": 343133,
      "end_idx": 343232,
      "metadata": {
        "num_sentences": 3,
        "num_words": 19,
        "breakpoint_idx": 2337,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31029462814331055,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": []
          },
          "keywords": [
            "Outposts bucket",
            "data events",
            "CloudTrail",
            "log",
            "name"
          ],
          "entities": [
            "Outposts bucket",
            "CloudTrail"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Data Logging",
            "AWS Services"
          ],
          "mentioned_services": [
            "CloudTrail",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The text explains how to choose an Outposts bucket for logging data events using CloudTrail.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I log data events for an Outposts bucket using CloudTrail?",
            "What steps are involved in selecting an Outposts bucket for CloudTrail logging?",
            "Which AWS services are used for logging data events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "name",
          "Outposts bucket",
          "CloudTrail",
          "log",
          "data events",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_235",
      "text": "Choose Properties. 5. In the AWS CloudTrail data events section, choose Configure in CloudTrail. The AWS CloudTrail console opens. Enabling CloudTrail logging for S3 on Outposts objects API Version 2006-03-01 191\n\nAmazon S3 on Outposts User Guide\nYou can create a new CloudTrail trail or reuse an existing trail and configure S3 on Outposts\ndata events to be logged in your trail. 6.",
      "start_idx": 343233,
      "end_idx": 343616,
      "metadata": {
        "num_sentences": 6,
        "num_words": 63,
        "breakpoint_idx": 2343,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.18898684183756512,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "AWS CloudTrail",
            "S3 on Outposts",
            "CloudTrail logging",
            "data events",
            "API Version 2006-03-01"
          ],
          "entities": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts",
            "CloudTrail trail",
            "S3 data events",
            "Outposts objects"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Services",
          "secondary_categories": [
            "Data Logging",
            "Storage"
          ],
          "mentioned_services": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to enable AWS CloudTrail logging for S3 on Outposts data events by configuring a CloudTrail trail.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure AWS CloudTrail for S3 on Outposts?",
            "What are the steps to enable CloudTrail logging for Outposts objects?",
            "Can I reuse an existing CloudTrail trail for S3 on Outposts data events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Services]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "S3 data events",
          "Amazon S3 on Outposts",
          "CloudTrail logging",
          "data events",
          "S3 on Outposts",
          "Outposts objects",
          "CloudTrail trail",
          "AWS CloudTrail"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_236",
      "text": "On the CloudTrail console Dashboard page, choose Create trail. 7. On the Step 1 Choose trail attributes page, provide a name for the trail, choose an S3 bucket\nto store trail logs, specify any other settings that you want, and then choose Next. 8. On the Step 2 Choose log events page, under Event type, choose Data events. For Data event type, choose S3 Outposts. Choose Next. Note\n\u2022 When you create a trail and configure data event logging for S3 on Outposts, you\nmust specify the data event type correctly. \u2022 If you use the CloudTrail console, choose S3 Outposts for Data event type. For\ninformation about how to create trails in the CloudTrail console, see Creating and\nupdating a trail with the console in the AWS CloudTrail User Guide. For information\nabout how to configure S3 on Outposts data event logging in the CloudTrail\nconsole, see Logging data events for Amazon S3 Objects in the AWS CloudTrail\nUser Guide. \u2022 If you use the AWS Command Line Interface (AWS CLI) or the AWS SDKs, set the\nresources.type field to AWS::S3Outposts::Object. For more information\nabout how to log S3 on Outposts data events with the AWS CLI, see Log S3 on\nOutposts events in the AWS CloudTrail User Guide. \u2022 If you use the CloudTrail console or the Amazon S3 console to configure a trail to\nlog data events for an S3 on Outposts bucket, the Amazon S3 console shows that\nobject-level logging is enabled for the bucket. 9.",
      "start_idx": 343617,
      "end_idx": 345028,
      "metadata": {
        "num_sentences": 15,
        "num_words": 250,
        "breakpoint_idx": 2358,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31413399832589284,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 Outposts",
            "data event logging",
            "AWS CLI",
            "trail",
            "S3 bucket",
            "log events",
            "AWS SDKs",
            "object-level logging",
            "Amazon S3 console"
          ],
          "entities": [
            "CloudTrail",
            "S3 Outposts",
            "AWS CLI",
            "AWS SDKs",
            "Amazon S3 console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Monitoring and Logging",
          "secondary_categories": [
            "AWS Services",
            "Data Event Management"
          ],
          "mentioned_services": [
            "CloudTrail",
            "S3 Outposts",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "CloudTrail console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a trail in CloudTrail, configure data event logging for S3 on Outposts, and provides guidance on using the AWS CLI, SDKs, and console for configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a trail in CloudTrail?",
            "How do I configure data event logging for S3 on Outposts?",
            "What settings are required for logging S3 on Outposts data events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Monitoring and Logging]",
        "tf_idf_keywords": [
          "data event logging",
          "S3 bucket",
          "AWS SDKs",
          "log events",
          "CloudTrail",
          "Amazon S3 console",
          "S3 Outposts",
          "trail",
          "Amazon S3",
          "AWS CLI",
          "object-level logging"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_237",
      "text": "On the Step 3 Review and create page, review the trail attributes and the log events that you\nconfigured. Then, choose Create trail. To disable CloudTrail data events logging for objects in an S3 on Outposts bucket\n1. Sign in to the AWS Management Console and open the CloudTrail console at https://\nconsole.aws.amazon.com/cloudtrail/.",
      "start_idx": 345029,
      "end_idx": 345364,
      "metadata": {
        "num_sentences": 4,
        "num_words": 53,
        "breakpoint_idx": 2362,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.264731486638387,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "CloudTrail",
            "data events",
            "S3",
            "Outposts",
            "AWS Management Console"
          ],
          "entities": [
            "CloudTrail",
            "S3",
            "Outposts",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Logging",
            "AWS Services"
          ],
          "mentioned_services": [
            "CloudTrail",
            "S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to review and create a CloudTrail trail and disable data events logging for S3 on Outposts buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a CloudTrail trail?",
            "How can I disable data events logging for an S3 on Outposts bucket?",
            "What are the steps to configure CloudTrail in the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "AWS Management Console",
          "CloudTrail",
          "data events",
          "S3",
          "Outposts"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_238",
      "text": "2. In the left navigation pane, choose Trails. Enabling CloudTrail logging for S3 on Outposts objects API Version 2006-03-01 192\n\nAmazon S3 on Outposts User Guide\n3. Choose the name of the trail that you created to log events for your S3 on Outposts bucket. 4.",
      "start_idx": 345365,
      "end_idx": 345625,
      "metadata": {
        "num_sentences": 5,
        "num_words": 46,
        "breakpoint_idx": 2367,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.22207698822021485,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 on Outposts",
            "logging",
            "API Version",
            "trail",
            "bucket",
            "events",
            "navigation pane",
            "User Guide"
          ],
          "entities": [
            "CloudTrail",
            "S3 on Outposts",
            "Amazon S3",
            "API Version 2006-03-01",
            "Amazon"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Logging",
          "secondary_categories": [
            "Cloud Storage",
            "API Management"
          ],
          "mentioned_services": [
            "CloudTrail",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation provides steps to enable CloudTrail logging for Amazon S3 on Outposts by configuring trails and selecting the appropriate bucket.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable CloudTrail logging for S3 on Outposts?",
            "What steps are required to configure a trail for logging events?",
            "Which API version is used for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Logging]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "Amazon",
          "events",
          "API Version",
          "User Guide",
          "CloudTrail",
          "logging",
          "S3 on Outposts",
          "bucket",
          "Amazon S3",
          "trail",
          "navigation pane"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_239",
      "text": "On the details page for your trail, choose Stop logging in the upper-right corner. 5. In the dialog box that appears, choose Stop logging. Amazon S3 on Outposts AWS CloudTrail log file entries\nAmazon S3 on Outposts management events are available via AWS CloudTrail. In addition, you can\noptionally enable logging for data events in AWS CloudTrail. A trail is a configuration that enables delivery of events as log files to an S3 bucket in a Region that\nyou specify. CloudTrail logs for your Outposts buckets include a new field, edgeDeviceDetails,\nwhich identifies the Outpost where the specified bucket is located.",
      "start_idx": 345626,
      "end_idx": 346242,
      "metadata": {
        "num_sentences": 7,
        "num_words": 101,
        "breakpoint_idx": 2374,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.287975583757673,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Configuration"
            ]
          },
          "keywords": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts",
            "trail",
            "log file entries",
            "data events",
            "management events",
            "S3 bucket",
            "edgeDeviceDetails",
            "Region",
            "Outposts buckets"
          ],
          "entities": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts",
            "edgeDeviceDetails",
            "Outposts buckets",
            "S3 bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Logging",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Services"
          ],
          "mentioned_services": [
            "AWS CloudTrail",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to stop logging for a trail and describes the integration of Amazon S3 on Outposts with AWS CloudTrail for logging management and data events, including specific metadata fields like edgeDeviceDetails.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop logging for an AWS CloudTrail trail?",
            "What metadata fields are included in CloudTrail logs for Outposts buckets?",
            "Can AWS CloudTrail log data events for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Logging]",
        "tf_idf_keywords": [
          "log file entries",
          "Amazon S3 on Outposts",
          "Outposts buckets",
          "S3 bucket",
          "Region",
          "data events",
          "management events",
          "edgeDeviceDetails",
          "AWS CloudTrail",
          "trail"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_240",
      "text": "Additional log fields include the requested action, the date and time of the action, and the request\nparameters. CloudTrail log files are not an ordered stack trace of the public API calls, so they don't\nappear in any specific order. The following example shows a CloudTrail log entry that demonstrates a PutObject action on s3-\noutposts. {\n\"eventVersion\": \"1.08\",\n\"userIdentity\": {\n\"type\": \"IAMUser\",\n\"principalId\": \"111122223333\",\n\"arn\": \"arn:aws:iam::111122223333:user/yourUserName\",\n\"accountId\": \"222222222222\",\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"userName\": \"yourUserName\"\n},\n\"eventTime\": \"2020-11-30T15:44:33Z\",\n\"eventSource\": \"s3-outposts.amazonaws.com\",\n\"eventName\": \"PutObject\",\n\"awsRegion\": \"us-east-1\",\n\"sourceIPAddress\": \"26.29.66.20\",\n\"userAgent\": \"aws-cli/1.18.39 Python/3.4.10 Darwin/18.7.0 botocore/1.15.39\",\n\"requestParameters\": {\n\"expires\": \"Wed, 21 Oct 2020 07:28:00 GMT\",\n\"Content-Language\": \"english\",\n\"x-amz-server-side-encryption-customer-key-MD5\": \"wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY\",\nAmazon S3 on Outposts AWS CloudTrail log file entries API Version 2006-03-01 193\n\nAmazon S3 on Outposts User Guide\n\"ObjectCannedACL\": \"BucketOwnerFullControl\",\n\"x-amz-server-side-encryption\": \"Aes256\",\n\"Content-Encoding\": \"gzip\",\n\"Content-Length\": \"10\",\n\"Cache-Control\": \"no-cache\",\n\"Content-Type\": \"text/html; charset=UTF-8\",\n\"Content-Disposition\": \"attachment\",\n\"Content-MD5\": \"je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY\",\n\"x-amz-storage-class\": \"Outposts\",\n\"x-amz-server-side-encryption-customer-algorithm\": \"Aes256\",\n\"bucketName\": \"amzn-s3-demo-bucket1\",\n\"Key\": \"path/upload.sh\"\n},\n\"responseElements\": {\n\"x-amz-server-side-encryption-customer-key-MD5\": \"wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY\",\n\"x-amz-server-side-encryption\": \"Aes256\",\n\"x-amz-version-id\": \"001\",\n\"x-amz-server-side-encryption-customer-algorithm\": \"Aes256\",\n\"ETag\": \"d41d8cd98f00b204e9800998ecf8427f\"\n},\n\"additionalEventData\": {\n\"CipherSuite\": \"ECDHE-RSA-AES128-SHA\",\n\"bytesTransferredIn\": 10,\n\"x-amz-id-2\": \"29xXQBV2O\n+xOHKItvzY1suLv1i6A52E0zOX159fpfsItYd58JhXwKxXAXI4IQkp6\",\n\"SignatureVersion\": \"SigV4\",\n\"bytesTransferredOut\": 20,\n\"AuthenticationMethod\": \"AuthHeader\"\n},\n\"requestID\": \"8E96D972160306FA\",\n\"eventID\": \"ee3b4e0c-ab12-459b-9998-0a5a6f2e4015\",\n\"readOnly\": false,\n\"resources\": [\n{\n\"accountId\": \"222222222222\",\n\"type\": \"AWS::S3Outposts::Object\",\n\"ARN\": \"arn:aws:s3-outposts:us-east-1:YYY:outpost/op-01ac5d28a6a232904/\nbucket/path/upload.sh\"\n},\n{\n\"accountId\": \"222222222222\",\n\"type\": \"AWS::S3Outposts::Bucket\",\nAmazon S3 on Outposts AWS CloudTrail log file entries API Version 2006-03-01 194\n\nAmazon S3 on Outposts User Guide\n\"ARN\": \"arn:aws:s3-outposts:us-east-1:YYY:outpost/op-01ac5d28a6a232904/\nbucket/\"\n}\n],\n\"eventType\": \"AwsApiCall\",\n\"managementEvent\": false,\n\"recipientAccountId\": \"444455556666\",\n\"sharedEventID\": \"02759a4c-c040-4758-b84b-7cbaaf17747a\",\n\"edgeDeviceDetails\": {\n\"type\": \"outposts\",\n\"deviceId\": \"op-01ac5d28a6a232904\"\n},\n\"eventCategory\": \"Data\"\n}\nAmazon S3 on Outposts AWS CloudTrail log file entries API Version 2006-03-01 195\n\nAmazon S3 on Outposts User Guide\nDeveloping with Amazon S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts.",
      "start_idx": 346243,
      "end_idx": 349794,
      "metadata": {
        "num_sentences": 5,
        "num_words": 337,
        "breakpoint_idx": 2379,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.31945075988769533,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 Outposts",
            "PutObject",
            "AWS",
            "IAMUser",
            "encryption",
            "API call",
            "log entry",
            "AWS CLI",
            "storage class"
          ],
          "entities": [
            "CloudTrail",
            "Amazon S3",
            "AWS Outposts",
            "IAMUser",
            "PutObject"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Logging and Monitoring",
          "secondary_categories": [
            "Storage",
            "Security"
          ],
          "mentioned_services": [
            "CloudTrail",
            "S3 Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "botocore",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the structure and details of CloudTrail log entries for Amazon S3 on Outposts, including an example of a PutObject API call and its parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What information is included in a CloudTrail log entry for S3 Outposts?",
            "How is the PutObject action logged in CloudTrail?",
            "What encryption parameters are used in the example log entry?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Logging and Monitoring]",
        "tf_idf_keywords": [
          "AWS Outposts",
          "IAMUser",
          "PutObject",
          "storage class",
          "API call",
          "AWS CLI",
          "CloudTrail",
          "encryption",
          "log entry",
          "IAM",
          "S3 Outposts",
          "Amazon S3",
          "AWS"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_241",
      "text": "You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information, see What is Amazon S3 on Outposts? The following topics provide information about developing with S3 on Outposts. Topics\n\u2022 Amazon S3 on Outposts API operations\n\u2022 Configure the S3 control client for S3 on Outposts by using the SDK for Java\n\u2022 Making requests to S3 on Outposts over IPv6\nAmazon S3 on Outposts API operations\nThis topic lists the Amazon S3, Amazon S3 Control, and Amazon S3 on Outposts API operations\nthat you can use with Amazon S3 on Outposts. Topics\n\u2022 Amazon S3 API operations for managing objects\n\u2022 Amazon S3 Control API operations for managing buckets\n\u2022 S3 on Outposts API operations for managing Outposts\nAmazon S3 API operations for managing objects\nS3 on Outposts is designed to use the same object API operations as Amazon S3. You must use\naccess points to access any object in an Outpost bucket. When you use an object API operation with\nS3 on Outposts, you provide either the Outposts access point Amazon Resource Name (ARN) or the\nS3 on Outposts APIs API Version 2006-03-01 196\n\nAmazon S3 on Outposts User Guide\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.",
      "start_idx": 349795,
      "end_idx": 361515,
      "metadata": {
        "num_sentences": 10,
        "num_words": 274,
        "chunk_type": "semantic_split",
        "coherence_score": 0.6194079081217448,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Operations",
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "Outpost bucket",
            "access point",
            "endpoint connection",
            "VPC",
            "Amazon S3",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "encryption",
            "tagging"
          ],
          "entities": [
            "Amazon S3",
            "Amazon S3 Control",
            "S3 on Outposts",
            "AWS Management Console",
            "SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interact with Amazon S3 on Outposts buckets using access points and endpoints over a VPC, and provides details about supported API operations, configuration, and usage methods.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What API operations are available for S3 on Outposts?",
            "How can I configure the S3 control client for S3 on Outposts using the SDK for Java?",
            "What are the methods to access objects in an Outpost bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "endpoint connection",
          "VPC",
          "Amazon S3 Control",
          "AWS Management Console",
          "AWS SDKs",
          "REST API",
          "Outpost bucket",
          "tagging",
          "AWS CLI",
          "encryption",
          "access point",
          "S3 on Outposts",
          "SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_242",
      "text": "Amazon S3 on Outposts supports the following Amazon S3 API operations:\n\u2022 AbortMultipartUpload\n\u2022 CompleteMultipartUpload\n\u2022 CopyObject\n\u2022 CreateMultipartUpload\n\u2022 DeleteObject\n\u2022 DeleteObjects\n\u2022 DeleteObjectTagging\n\u2022 GetObject\n\u2022 GetObjectTagging\n\u2022 HeadBucket\n\u2022 HeadObject\n\u2022 ListMultipartUploads\n\u2022 ListObjects\n\u2022 ListObjectsV2\n\u2022 ListObjectVersions\n\u2022 ListParts\n\u2022 PutObject\n\u2022 PutObjectTagging\n\u2022 UploadPart\n\u2022 UploadPartCopy\nAmazon S3 Control API operations for managing buckets\nS3 on Outposts supports the following Amazon S3 Control API operations for working with\nbuckets. \u2022 CreateAccessPoint\n\u2022 CreateBucket\nAmazon S3 Control API operations for managing buckets API Version 2006-03-01 197\n\nAmazon S3 on Outposts User Guide\n\u2022 DeleteAccessPoint\n\u2022 DeleteAccessPointPolicy\n\u2022 DeleteBucket\n\u2022 DeleteBucketLifecycleConfiguration\n\u2022 DeleteBucketPolicy\n\u2022 DeleteBucketReplication\n\u2022 DeleteBucketTagging\n\u2022 GetAccessPoint\n\u2022 GetAccessPointPolicy\n\u2022 GetBucket\n\u2022 GetBucketLifecycleConfiguration\n\u2022 GetBucketPolicy\n\u2022 GetBucketReplication\n\u2022 GetBucketTagging\n\u2022 GetBucketVersioning\n\u2022 ListAccessPoints\n\u2022 ListRegionalBuckets\n\u2022 PutAccessPointPolicy\n\u2022 PutBucketLifecycleConfiguration\n\u2022 PutBucketPolicy\n\u2022 PutBucketReplication\n\u2022 PutBucketTagging\n\u2022 PutBucketVersioning\nS3 on Outposts API operations for managing Outposts\nS3 on Outposts supports the following Amazon S3 on Outposts API operations for managing\nendpoints. \u2022 CreateEndpoint\n\u2022 DeleteEndpoint\n\u2022 ListEndpoints\nS3 on Outposts API operations for managing Outposts API Version 2006-03-01 198\n\nAmazon S3 on Outposts User Guide\n\u2022 ListOutpostsWithS3\n\u2022 ListSharedEndpoints\nConfigure the S3 control client for S3 on Outposts by using the\nSDK for Java\nThe following example configures the Amazon S3 control client for Amazon S3 on Outposts by\nusing the AWS SDK for Java. To use this example, replace each user input placeholder with\nyour own information. import com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport com.amazonaws.services.s3control.AWSS3Control;\nimport com.amazonaws.services.s3control.AWSS3ControlClient;\npublic AWSS3Control createS3ControlClient() {\nString accessKey = AWSAccessKey;\nString secretKey = SecretAccessKey;\nBasicAWSCredentials awsCreds = new BasicAWSCredentials(accessKey, secretKey);\nreturn AWSS3ControlClient.builder().enableUseArnRegion()\n.withCredentials(new AWSStaticCredentialsProvider(awsCreds))\n.build();\n}\nMaking requests to S3 on Outposts over IPv6\nAmazon S3 on Outposts and S3 on Outposts dual-stack endpoints support requests to S3 on\nOutposts buckets using either the IPv6 or IPv4 protocol. With IPv6 support for S3 on Outposts, you\ncan access and operate your buckets and control plane resources through S3 on Outposts APIs over\nIPv6 networks. Note\nS3 on Outposts object actions (such as PutObject or GetObject) aren\u2019t supported over\nIPv6 networks. Configuring S3 control client API Version 2006-03-01 199\n\nAmazon S3 on Outposts User Guide\nThere are no additional charges for accessing S3 on Outposts over IPv6 networks. For more\ninformation about S3 on Outposts, see S3 on Outposts pricing. Topics\n\u2022 Getting started with IPv6\n\u2022 Using dual-stack endpoints to make requests over an IPv6 network\n\u2022 Using IPv6 addresses in IAM policies\n\u2022 Testing IP address compatibility\n\u2022 Using IPv6 with AWS PrivateLink\n\u2022 Using S3 on Outposts dual-stack endpoints\nGetting started with IPv6\nTo make a request to an S3 on Outposts bucket over IPv6, you must use a dual-stack endpoint.",
      "start_idx": 349795,
      "end_idx": 361515,
      "metadata": {
        "num_sentences": 10,
        "num_words": 451,
        "chunk_type": "semantic_split",
        "coherence_score": 0.4932269626193576,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Operations",
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "API operations",
            "IPv6",
            "dual-stack endpoints",
            "AWS SDK for Java",
            "access points",
            "object actions",
            "bucket management",
            "credentials"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS SDK for Java",
            "IPv6",
            "AWS PrivateLink"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWSStaticCredentialsProvider",
            "AWSS3ControlClient"
          ]
        },
        "semantic": {
          "summary": "This documentation details the supported API operations for Amazon S3 on Outposts, including bucket management, endpoint management, and IPv6 support, along with configuration examples using the AWS SDK for Java.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What API operations are supported by Amazon S3 on Outposts?",
            "How can I configure the AWS SDK for Java to interact with S3 on Outposts?",
            "Is IPv6 supported for S3 on Outposts operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "credentials",
          "dual-stack endpoints",
          "AWS PrivateLink",
          "object actions",
          "IPv6",
          "bucket management",
          "S3 on Outposts",
          "API operations",
          "access points",
          "Outposts",
          "AWS SDK for Java",
          "Amazon S3"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_243",
      "text": "The\nnext section describes how to make requests over IPv6 by using dual-stack endpoints. The following are important considerations before trying to access an S3 on Outposts bucket over\nIPv6:\n\u2022 The client and the network accessing the bucket must be enabled to use IPv6. \u2022 Both virtual hosted-style and path style requests are supported for IPv6 access. For more\ninformation, see Using S3 on Outposts dual-stack endpoints. \u2022 If you use source IP address filtering in your AWS Identity and Access Management (IAM) user or\nS3 on Outposts bucket policies, you must update the policies to include IPv6 address ranges. Note\nThis requirement only applies to S3 on Outposts bucket operations and control plane\nresources across IPv6 networks. Amazon S3 on Outposts object actions aren\u2019t supported\nacross IPv6 networks. \u2022 When using IPv6, server access log files output IP addresses in an IPv6 format. You must update\nexisting tools, scripts, and software that you use to parse S3 on Outposts log files, so that they\ncan parse the IPv6 formatted remote IP addresses. The updated tools, scripts, and software will\nthen correctly parse the IPv6 formatted remote IP addresses.",
      "start_idx": 349795,
      "end_idx": 361515,
      "metadata": {
        "num_sentences": 10,
        "num_words": 190,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5176655663384332,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Considerations"
            ]
          },
          "keywords": [
            "IPv6",
            "dual-stack endpoints",
            "S3 on Outposts",
            "IAM policies",
            "server access logs",
            "bucket operations",
            "control plane resources",
            "object actions",
            "remote IP addresses",
            "source IP filtering"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "IPv6 networks",
            "dual-stack endpoints"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking",
          "secondary_categories": [
            "Cloud Storage",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "IAM policies",
            "server access log parsers"
          ]
        },
        "semantic": {
          "summary": "This section explains how to make IPv6 requests to S3 on Outposts buckets using dual-stack endpoints, detailing prerequisites and considerations such as policy updates and log parsing adjustments.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the requirements for accessing S3 on Outposts buckets over IPv6?",
            "How do I update IAM policies to include IPv6 address ranges?",
            "What adjustments are needed for tools parsing server access logs in IPv6 format?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking]",
        "tf_idf_keywords": [
          "bucket operations",
          "dual-stack endpoints",
          "IPv6 networks",
          "object actions",
          "IPv6",
          "IAM policies",
          "source IP filtering",
          "S3 on Outposts",
          "AWS Identity and Access Management (IAM)",
          "server access logs",
          "remote IP addresses",
          "Amazon S3",
          "control plane resources"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_244",
      "text": "Getting started with IPv6 API Version 2006-03-01 200\n\nAmazon S3 on Outposts User Guide\nUsing dual-stack endpoints to make requests over an IPv6 network\nTo make requests with S3 on Outposts API calls over IPv6, you can use dual-stack endpoints\nvia AWS CLI or AWS SDK. The Amazon S3 control API operations and S3 on Outposts API\noperations work the same way whether you\u2019re accessing S3 on Outposts over an IPv6 protocol\nor IPv4 protocol. However, be aware that S3 on Outposts object actions (such as PutObject or\nGetObject) aren\u2019t supported over IPv6 networks. When using the AWS Command Line Interface (AWS CLI) and AWS SDKs, you can use a parameter\nor flag to change to a dual-stack endpoint. You can also specify the dual-stack endpoint directly as\nan override of the S3 on Outposts endpoint in the configuration file. You can use a dual-stack endpoint to access an S3 on Outposts bucket over IPv6 from any of the\nfollowing:\n\u2022 The AWS CLI, see Using dual-stack endpoints from the AWS CLI. \u2022 The AWS SDKs, see Using S3 on Outposts dual-stack endpoints from the AWS SDKs. Using IPv6 addresses in IAM policies\nBefore trying to access an S3 on Outposts bucket using an IPv6 protocol, make sure that IAM users\nor S3 on Outposts bucket policies used for IP address filtering are updated to include IPv6 address\nranges. If IP address filtering policies aren\u2019t updated to handle IPv6 addresses, you can lose access\nto an S3 on Outposts bucket while trying to use the IPv6 protocol. IAM policies that filter IP addresses use IP address condition operators.",
      "start_idx": 349795,
      "end_idx": 361515,
      "metadata": {
        "num_sentences": 10,
        "num_words": 268,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5474633958604601,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "IPv6",
            "dual-stack endpoints",
            "S3 on Outposts",
            "Amazon S3",
            "AWS CLI",
            "AWS SDK",
            "IAM policies",
            "PutObject",
            "GetObject",
            "IP address filtering"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS CLI",
            "AWS SDK",
            "IAM"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking",
          "secondary_categories": [
            "Cloud Storage",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to use dual-stack endpoints for making Amazon S3 on Outposts API requests over IPv6 and highlights the need to update IAM policies to support IPv6 address filtering.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure dual-stack endpoints for S3 on Outposts?",
            "What limitations exist for S3 on Outposts object actions over IPv6?",
            "How do I update IAM policies to include IPv6 address ranges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking]",
        "tf_idf_keywords": [
          "AWS SDK",
          "dual-stack endpoints",
          "PutObject",
          "IPv6",
          "IAM policies",
          "GetObject",
          "IP address filtering",
          "S3 on Outposts",
          "IAM",
          "Amazon S3",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_245",
      "text": "The following S3 on\nOutposts bucket policy identifies the 54.240.143. * IP range of allowed IPv4 addresses by using IP\naddress condition operators. Any IP addresses outside of this range will be denied access to the S3\non Outposts bucket (DOC-EXAMPLE-BUCKET). Since all IPv6 addresses are outside of the allowed\nrange, this policy prevents IPv6 addresses from being able to access DOC-EXAMPLE-BUCKET. {\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"IPAllow\",\n\"Effect\": \"Allow\",\n\"Principal\": \"*\",\nMaking requests using dual-stack endpoints API Version 2006-03-01 201\n\nAmazon S3 on Outposts User Guide\n\"Action\": \"s3outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET/*\",\n\"Condition\": {\n\"IpAddress\": {\"aws:SourceIp\": \"54.240.143.0/24\"}\n}\n}\n]\n}\nYou can modify the S3 on Outposts bucket policy's Condition element to allow both IPv4\n(54.240.143.0/24) and IPv6 (2001:DB8:1234:5678::/64) address ranges as shown in the\nfollowing example. You can use the same type of Condition block shown in the example to\nupdate both your IAM user and bucket policies. \"Condition\": {\n\"IpAddress\": {\n\"aws:SourceIp\": [\n\"54.240.143.0/24\",\n\"2001:DB8:1234:5678::/64\"\n]\n}\n}\nBefore using IPv6 you must update all relevant IAM user and bucket policies that use IP address\nfiltering to allow IPv6 address ranges. We recommend that you update your IAM policies with your\norganization's IPv6 address ranges in addition to your existing IPv4 address ranges. For an example\nof a bucket policy that allows access over both IPv6 and IPv4, see Restrict access to specific IP\naddresses. You can review your IAM user policies using the IAM console at https://console.aws.amazon.com/\niam/.",
      "start_idx": 349795,
      "end_idx": 361515,
      "metadata": {
        "num_sentences": 10,
        "num_words": 244,
        "chunk_type": "semantic_split",
        "coherence_score": 0.43440140618218315,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Update",
              "Security"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "IPv4",
            "IPv6",
            "IP address condition operators",
            "IAM policies",
            "dual-stack endpoints",
            "SourceIp",
            "AWS",
            "access restriction"
          ],
          "entities": [
            "S3 on Outposts",
            "DOC-EXAMPLE-BUCKET",
            "IAM",
            "IPv4 range",
            "IPv6 range"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure an S3 on Outposts bucket policy to restrict access based on specific IPv4 and IPv6 address ranges using IP address condition operators. It also provides guidance on updating IAM user and bucket policies to support IPv6 address ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I restrict access to an S3 on Outposts bucket using IP address ranges?",
            "What changes are needed to allow both IPv4 and IPv6 in S3 bucket policies?",
            "How can I review and update IAM policies for IPv6 compatibility?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "Amazon S3 on Outposts",
          "DOC-EXAMPLE-BUCKET",
          "dual-stack endpoints",
          "bucket policy",
          "IPv6",
          "IP address condition operators",
          "IAM policies",
          "access restriction",
          "IPv4",
          "S3 on Outposts",
          "IPv6 range",
          "IAM",
          "IPv4 range",
          "AWS",
          "SourceIp"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_246",
      "text": "For more information about IAM, see the IAM User Guide. For information about editing S3\non Outposts bucket policies, see Adding or editing a bucket policy for an Amazon S3 on Outposts\nbucket. Testing IP address compatibility\nIf you're using a Linux or Unix instance, or macOS X platform, you can test your access to a dual-\nstack endpoint over IPv6. For example, to test the connection to Amazon S3 on Outposts endpoints\nover IPv6, use the dig command:\nTesting IP address compatibility API Version 2006-03-01 202\n\nAmazon S3 on Outposts User Guide\ndig s3-outposts.us-west-2.api.aws AAAA +short\nIf your dual-stack endpoint over an IPv6 network is properly set up, the dig command returns the\nconnected IPv6 addresses. For example:\ndig s3-outposts.us-west-2.api.aws AAAA +short\n2600:1f14:2588:4800:b3a9:1460:159f:ebce\n2600:1f14:2588:4802:6df6:c1fd:ef8a:fc76\n2600:1f14:2588:4801:d802:8ccf:4e04:817\nUsing IPv6 with AWS PrivateLink\nS3 on Outposts supports the IPv6 protocol for AWS PrivateLink services and endpoints. With AWS\nPrivateLink support for the IPv6 protocol, you can connect to service endpoints within your VPC\nover IPv6 networks, from either on-premises or other private connections. The IPv6 support for\nAWS PrivateLink for S3 on Outposts also allows you to integrate AWS PrivateLink with dual-stack\nendpoints. For steps on how to enable IPv6 for AWS PrivateLink, see Expedite your IPv6 adoption\nwith AWS PrivateLink services and endpoints. Note\nTo update the supported IP address type from IPv4 to IPv6, see Modify the supported IP\naddress type in the AWS PrivateLink User Guide. Using IPv6 with AWS PrivateLink\nIf you\u2019re using AWS PrivateLink with IPv6, you must create an IPv6 or dual-stack VPC interface\nendpoint. For general steps on how to create a VPC endpoint using the AWS Management Console,\nsee Access an AWS service using an interface VPC endpoint in the AWS PrivateLink User Guide. AWS Management Console\nUse the following procedure to create an interface VPC endpoint that connects to S3 on\nOutposts. Using IPv6 with AWS PrivateLink API Version 2006-03-01 203\n\nAmazon S3 on Outposts User Guide\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/. 2.",
      "start_idx": 349795,
      "end_idx": 361515,
      "metadata": {
        "num_sentences": 15,
        "num_words": 341,
        "chunk_type": "semantic_split",
        "coherence_score": 0.41956307547433036,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "IAM",
            "Amazon S3 on Outposts",
            "IPv6",
            "AWS PrivateLink",
            "VPC endpoint",
            "bucket policy",
            "dual-stack endpoint",
            "dig command",
            "interface endpoint",
            "IP address compatibility"
          ],
          "entities": [
            "IAM User Guide",
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "AWS Management Console",
            "VPC console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "IAM"
          ],
          "mentioned_tools": [
            "dig",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "The documentation provides information on using IPv6 with Amazon S3 on Outposts and AWS PrivateLink, including testing IP address compatibility and configuring VPC endpoints. It also references IAM and bucket policy editing for S3 on Outposts.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I test IPv6 compatibility for Amazon S3 on Outposts?",
            "What are the steps to create a VPC endpoint for S3 on Outposts?",
            "How can I enable IPv6 for AWS PrivateLink services?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Networking]",
        "tf_idf_keywords": [
          "IP address compatibility",
          "IAM User Guide",
          "Amazon S3 on Outposts",
          "AWS Management Console",
          "AWS PrivateLink",
          "VPC endpoint",
          "bucket policy",
          "dig command",
          "IPv6",
          "dual-stack endpoint",
          "VPC console",
          "interface endpoint",
          "IAM"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_247",
      "text": "In the navigation pane, choose Endpoints. 3. Choose Create endpoint.",
      "start_idx": 361516,
      "end_idx": 361584,
      "metadata": {
        "num_sentences": 3,
        "num_words": 10,
        "breakpoint_idx": 2447,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.19920126597086588,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step"
            ]
          },
          "keywords": [
            "navigation pane",
            "endpoints",
            "create endpoint",
            "AWS",
            "user interface"
          ],
          "entities": [
            "Endpoints",
            "Create endpoint"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "User Interface",
            "Service Configuration"
          ],
          "mentioned_services": [
            "Endpoints"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides steps on how to create an endpoint using the navigation pane.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I create an endpoint?",
            "Where is the 'Endpoints' option located in the navigation pane?",
            "What steps are required to configure an endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "endpoints",
          "navigation pane",
          "user interface",
          "create endpoint",
          "Create endpoint",
          "AWS",
          "Endpoints"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_248",
      "text": "4. For Service category, choose AWS services. 5. For Service name, choose the S3 on Outposts service (com.amazonaws.us-east-1.s3-\noutposts). 6. For VPC, choose the VPC from which you'll access S3 on Outposts. 7. For Subnets, choose one subnet per Availability Zone from which you'll access S3 on\nOutposts. You can't select multiple subnets from the same Availability Zone. For each\nsubnet that you select, a new endpoint network interface is created.",
      "start_idx": 361585,
      "end_idx": 362035,
      "metadata": {
        "num_sentences": 10,
        "num_words": 71,
        "breakpoint_idx": 2457,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.27672292921278213,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "AWS services",
            "S3 on Outposts",
            "VPC",
            "subnets",
            "Availability Zone",
            "endpoint network interface"
          ],
          "entities": [
            "AWS services",
            "S3 on Outposts",
            "VPC",
            "subnets",
            "Availability Zone"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "Storage"
          ],
          "mentioned_services": [
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure S3 on Outposts by selecting the appropriate VPC, subnets, and service settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure S3 on Outposts?",
            "What are the requirements for selecting subnets in S3 on Outposts?",
            "Can I select multiple subnets from the same Availability Zone for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "VPC",
          "subnets",
          "endpoint network interface",
          "S3 on Outposts",
          "Availability Zone",
          "AWS services"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_249",
      "text": "By default, IP\naddresses from the subnet IP address ranges are assigned to the endpoint network\ninterfaces. To designate an IP address for an endpoint network interface, choose Designate\nIP addresses and enter an IPv6 address from the subnet address range. 8. For IP address type, choose Dualstack. Assign both IPv4 and IPv6 addresses to your\nendpoint network interfaces. This option is supported only if all selected subnets have both\nIPv4 and IPv6 address ranges. 9. For Security groups, choose the security groups to associate with the endpoint network\ninterfaces for the VPC endpoint. By default, the default security group is associated with\nthe VPC. 10. For Policy, choose Full access to allow all operations by all principals on all resources\nover the VPC endpoint. Otherwise, choose Custom to attach a VPC endpoint policy that\ncontrols the permissions that principals have toperform actions on resources over the VPC\nendpoint. This option is available only if the service supports VPC endpoint policies. For\nmore information, see Endpoint policies.",
      "start_idx": 362036,
      "end_idx": 363092,
      "metadata": {
        "num_sentences": 14,
        "num_words": 167,
        "breakpoint_idx": 2471,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.26914168976165437,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "IP addresses",
            "IPv6",
            "subnet",
            "Dualstack",
            "Security groups",
            "VPC endpoint",
            "Policy",
            "permissions",
            "resources",
            "Endpoint policies"
          ],
          "entities": [
            "VPC endpoint",
            "IPv4",
            "IPv6",
            "Security groups",
            "Endpoint policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Networking",
          "secondary_categories": [
            "Cloud Computing",
            "Security"
          ],
          "mentioned_services": [
            "VPC endpoint"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to configure IP addresses, security groups, and policies for VPC endpoint network interfaces, including support for Dualstack addressing and endpoint policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I assign IPv6 addresses to a VPC endpoint network interface?",
            "What are the security group options for a VPC endpoint?",
            "What is the purpose of a VPC endpoint policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Networking]",
        "tf_idf_keywords": [
          "Security groups",
          "Endpoint policies",
          "VPC endpoint",
          "Policy",
          "resources",
          "IPv6",
          "IP addresses",
          "IPv4",
          "subnet",
          "Dualstack",
          "permissions"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_250",
      "text": "11. (Optional) To add a tag, choose Add new tag and enter the tag key and the tag value. 12.",
      "start_idx": 363093,
      "end_idx": 363185,
      "metadata": {
        "num_sentences": 3,
        "num_words": 20,
        "breakpoint_idx": 2474,
        "chunk_type": "semantic_breakpoint",
        "coherence_score": 0.32462406158447266,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step"
            ]
          },
          "keywords": [
            "tag",
            "tag key",
            "tag value",
            "Add new tag"
          ],
          "entities": [
            "tag key",
            "tag value"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tag Management",
          "secondary_categories": [
            "User Interface Interaction",
            "Configuration"
          ],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to optionally add a tag by specifying its key and value.",
          "intents": [
            "How-To"
          ],
          "potential_questions": [
            "How do I add a new tag?",
            "What information is required to create a tag?",
            "Is adding a tag mandatory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Tag Management]",
        "tf_idf_keywords": [
          "Add new tag",
          "tag",
          "tag value",
          "tag key"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_251",
      "text": "Choose Create endpoint. Example \u2013 S3 on Outposts bucket policy\nTo allow S3 on Outposts to interact with your VPC endpoints, you can then update your S3 on\nOutposts policy like this:\n{\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 204\n\nAmazon S3 on Outposts User Guide\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"*\",\n\"Principal\": \"*\"\n}\n]\n}\nAWS CLI\nNote\nTo enable the IPv6 network on your VPC endpoint, you must have IPv6 set for the\nSupportedIpAddressType filter for S3 on Outposts. The following example uses the create-vpc-endpoint command to create a new dual-stack\ninterface endpoint. aws ec2 create-vpc-endpoint \\\n--vpc-id vpc-12345678 \\\n--vpc-endpoint-type Interface \\\n--service-name com.amazonaws.us-east-1.s3-outposts \\\n--subnet-id subnet-12345678 \\\n--security-group-id sg-12345678 \\\n--ip-address-type dualstack \\\n--dns-options \"DnsRecordIpType=dualstack\"\nDepending on the AWS PrivateLink service configuration, newly created endpoint connections\nmight need to be accepted by the VPC endpoint service provider before they can be used. For\nmore information, see Accept and reject endpoint connection requests in the AWS PrivateLink\nUser Guide. The following example uses the modify-vpc-endpoint command to update the IPv-only VPC\nendpoint to a dual-stack endpoint. The dual-stack endpoint allows access to both the IPv4 and\nIPv6 networks. aws ec2 modify-vpc-endpoint \\\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 205\n\nAmazon S3 on Outposts User Guide\n--vpc-endpoint-id vpce-12345678 \\\n--add-subnet-ids subnet-12345678 \\\n--remove-subnet-ids subnet-12345678 \\\n--ip-address-type dualstack \\\n--dns-options \"DnsRecordIpType=dualstack\"\nFor more information about how to enable the IPv6 network for AWS PrivateLink, see Expedite\nyour IPv6 adoption with AWS PrivateLink services and endpoints. Using S3 on Outposts dual-stack endpoints\nS3 on Outposts dual-stack endpoints support requests to S3 on Outposts buckets over IPv6 and\nIPv4. This section describes how to use S3 on Outposts dual-stack endpoints. Topics\n\u2022 S3 on Outposts dual-stack endpoints\n\u2022 Using dual-stack endpoints from the AWS CLI\n\u2022 Using S3 on Outposts dual-stack endpoints from the AWS SDKs\nS3 on Outposts dual-stack endpoints\nWhen you make a request to a dual-stack endpoint, the S3 on Outposts bucket URL resolves to an\nIPv6 or an IPv4 address.",
      "start_idx": 363186,
      "end_idx": 371771,
      "metadata": {
        "num_sentences": 11,
        "num_words": 341,
        "chunk_type": "semantic_split",
        "coherence_score": 0.49612225619229405,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "IPv6",
            "AWS PrivateLink",
            "dual-stack",
            "interface endpoint",
            "bucket policy",
            "security group",
            "DNS options",
            "subnet ID"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "VPC",
            "IPv6 network",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "EC2"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines how to configure S3 on Outposts with IPv6 support using AWS PrivateLink, including creating and modifying VPC endpoints to enable dual-stack networking. It provides example commands and references for implementation via the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable dual-stack endpoints for S3 on Outposts?",
            "What are the steps to update a VPC endpoint for IPv6 support?",
            "What is the role of bucket policies in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "IPv6 network",
          "security group",
          "VPC",
          "subnet ID",
          "Amazon S3 on Outposts",
          "AWS PrivateLink",
          "VPC endpoint",
          "bucket policy",
          "IPv6",
          "DNS options",
          "dual-stack",
          "S3 on Outposts",
          "interface endpoint",
          "EC2",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_252",
      "text": "For more information about accessing an S3 on Outposts bucket over IPv6,\nsee Making requests to S3 on Outposts over IPv6. To access an S3 on Outposts bucket through a dual-stack endpoint, use a path-style endpoint\nname. S3 on Outposts supports only Regional dual-stack endpoint names, which means that you\nmust specify the Region as part of the name. For a dual-stack path-style FIPs endpoint, use the following naming convention:\ns3-outposts-fips.region.api.aws\nFor dual-stack non-FIPS endpoint, use the following naming convention:\ns3-outposts.region.api.aws\nUsing dual-stack endpoints API Version 2006-03-01 206\n\nAmazon S3 on Outposts User Guide\nNote\nVirtual hosted-style endpoint names aren't supported in S3 on Outposts. Using dual-stack endpoints from the AWS CLI\nThis section provides examples of AWS CLI commands used to make requests to a dual-stack\nendpoint. For instructions on setting up the AWS CLI, see Getting started by using the AWS CLI and\nSDK for Java. You set the configuration value use_dualstack_endpoint to true in a profile in your AWS\nConfig file to direct all Amazon S3 requests made by the s3 and s3api AWS CLI commands to the\ndual-stack endpoint for the specified Region. You specify the Region in the configuration file or in a\ncommand using the --region option. When using dual-stack endpoints with the AWS CLI, only path addressing style is supported. The addressing style, set in the configuration file, determines whether the bucket name is in the\nhostname or in the URL. For more information, see s3outposts in the AWS CLI User Guide.",
      "start_idx": 363186,
      "end_idx": 371771,
      "metadata": {
        "num_sentences": 11,
        "num_words": 249,
        "chunk_type": "semantic_split",
        "coherence_score": 0.45501462763006034,
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "dual-stack endpoint",
            "IPv6",
            "path-style endpoint",
            "Region",
            "FIPS",
            "AWS CLI",
            "configuration file",
            "bucket name",
            "addressing style"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "s3-outposts",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to access Amazon S3 on Outposts buckets using dual-stack endpoints over IPv6, including path-style naming conventions and AWS CLI configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I access an S3 on Outposts bucket over IPv6?",
            "What is the naming convention for dual-stack endpoints in S3 on Outposts?",
            "How can I configure AWS CLI to use dual-stack endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "addressing style",
          "API Version 2006-03-01",
          "Amazon S3 on Outposts",
          "configuration file",
          "FIPS",
          "Region",
          "dual-stack endpoint",
          "IPv6",
          "bucket name",
          "path-style endpoint",
          "S3 on Outposts",
          "s3-outposts",
          "Amazon S3",
          "SDK for Java",
          "AWS CLI"
        ]
      }
    },
    {
      "chunk_id": "11f472bd-d07c-4c4e-bf8c-cfa7c03de250_chunk_253",
      "text": "To use a dual-stack endpoint via the AWS CLI, use the --endpoint-url parameter with\nthe http://s3.dualstack.region.amazonaws.com or https://s3-outposts-\nfips.region.api.aws endpoint for any s3control or s3outposts commands. For example:\n$ aws s3control list-regional-buckets --endpoint-url https://s3-\noutposts.region.api.aws\nUsing S3 on Outposts dual-stack endpoints from the AWS SDKs\nThis section provides examples of how to access a dual-stack endpoint by using the AWS SDKs. AWS SDK for Java 2.x dual-stack endpoint example\nThe following examples show how to use the S3ControlClient and S3OutpostsClient classes\nto enable dual-stack endpoints when creating an S3 on Outposts client using the AWS SDK for Java\n2.x. For instructions on creating and testing a working Java example for Amazon S3 on Outposts,\nsee Getting started by using the AWS CLI and SDK for Java. Using dual-stack endpoints API Version 2006-03-01 207\n\nAmazon S3 on Outposts User Guide\nExample \u2013 Create an S3ControlClient class with dual-stack endpoints enabled\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.s3control.S3ControlClient;\nimport software.amazon.awssdk.services.s3control.model.ListRegionalBucketsRequest;\nimport software.amazon.awssdk.services.s3control.model.ListRegionalBucketsResponse;\nimport software.amazon.awssdk.services.s3control.model.S3ControlException;\npublic class DualStackEndpointsExample1 {\npublic static void main(String[] args) {\nRegion clientRegion = Region.of(\"us-east-1\");\nString accountId = \"111122223333\";\nString navyId = \"9876543210\";\ntry {\n// Create an S3ControlClient with dual-stack endpoints enabled. S3ControlClient s3ControlClient = S3ControlClient.builder()\n.region(clientRegion)\n.dualstackEnabled(true)\n.build();\nListRegionalBucketsRequest listRegionalBucketsRequest =\nListRegionalBucketsRequest.builder()\n.accountId(accountId)\n.outpostId(navyId)\n.build();\nListRegionalBucketsResponse listBuckets =\ns3ControlClient.listRegionalBuckets(listRegionalBucketsRequest);\nSystem.out.printf(\"ListRegionalBuckets Response: %s%n\",\nlistBuckets.toString());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 on Outposts\ncouldn't process\n// it, so it returned an error response. e.printStackTrace();\n}\ncatch (S3ControlException e) {\nUsing dual-stack endpoints API Version 2006-03-01 208\n\nAmazon S3 on Outposts User Guide\n// Unknown exceptions will be thrown as an instance of this type. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 on Outposts couldn't be contacted for a response, or the\nclient\n// couldn't parse the response from Amazon S3 on Outposts. e.printStackTrace();\n}\n}\n}\nExample \u2013 Create an S3OutpostsClient with dual-stack endpoints enabled\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.s3outposts.S3OutpostsClient;\nimport software.amazon.awssdk.services.s3outposts.model.ListEndpointsRequest;\nimport software.amazon.awssdk.services.s3outposts.model.ListEndpointsResponse;\nimport software.amazon.awssdk.services.s3outposts.model.S3OutpostsException;\npublic class DualStackEndpointsExample2 {\npublic static void main(String[] args) {\nRegion clientRegion = Region.of(\"us-east-1\");\ntry {\n// Create an S3OutpostsClient with dual-stack endpoints enabled. S3OutpostsClient s3OutpostsClient = S3OutpostsClient.builder()\n.region(clientRegion)\n.dualstackEnabled(true)\n.build();\nListEndpointsRequest listEndpointsRequest =\nListEndpointsRequest.builder().build();\nListEndpointsResponse listEndpoints =\ns3OutpostsClient.listEndpoints(listEndpointsRequest);\nSystem.out.printf(\"ListEndpoints Response: %s%n\",\nlistEndpoints.toString());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 on Outposts\ncouldn't process\nUsing dual-stack endpoints API Version 2006-03-01 209\n\nAmazon S3 on Outposts User Guide\n// it, so it returned an error response. e.printStackTrace();\n}\ncatch (S3OutpostsException e) {\n// Unknown exceptions will be thrown as an instance of this type. e.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 on Outposts couldn't be contacted for a response, or the\nclient\n// couldn't parse the response from Amazon S3 on Outposts. e.printStackTrace();\n}\n}\n}\nIf you're using the AWS SDK for Java 2.x on Windows, you might have to set the following Java\nvirtual machine (JVM) property:\njava.net.preferIPv6Addresses=true\nUsing dual-stack endpoints API Version 2006-03-01 210",
      "start_idx": 363186,
      "end_idx": 371771,
      "metadata": {
        "num_sentences": 13,
        "num_words": 496,
        "chunk_type": "semantic_split",
        "coherence_score": 0.5792079827724359,
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "dual-stack endpoint",
            "AWS CLI",
            "AWS SDK",
            "S3ControlClient",
            "S3OutpostsClient",
            "Java",
            "Amazon S3 on Outposts",
            "API Version 2006-03-01",
            "ListRegionalBuckets",
            "ListEndpoints"
          ],
          "entities": [
            "AWS CLI",
            "AWS SDK for Java 2.x",
            "Amazon S3 on Outposts",
            "S3ControlClient",
            "S3OutpostsClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Development",
          "secondary_categories": [
            "Cloud Storage",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java 2.x"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use dual-stack endpoints for Amazon S3 on Outposts via AWS CLI and AWS SDK for Java 2.x, including code examples for S3ControlClient and S3OutpostsClient configurations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I enable dual-stack endpoints using AWS CLI?",
            "What is the Java code example for configuring S3ControlClient with dual-stack endpoints?",
            "What are the steps to list regional buckets using AWS SDK for Java 2.x?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Development]",
        "tf_idf_keywords": [
          "API Version 2006-03-01",
          "ListEndpoints",
          "Amazon S3 on Outposts",
          "ListRegionalBuckets",
          "AWS SDK",
          "S3ControlClient",
          "dual-stack endpoint",
          "S3OutpostsClient",
          "AWS SDK for Java 2.x",
          "Java",
          "AWS CLI"
        ]
      }
    }
  ],
  "metadata": {
    "total_chunks": 254,
    "avg_chunk_size": 204.89370078740157,
    "chunking_method": "SemanticChunker",
    "processed_at": "2025-05-04T17:51:26.552831",
    "total_sentences": 2510,
    "total_words": 52012,
    "chunking_strategy": "semantic",
    "embedding_model": "all-MiniLM-L6-v2",
    "percentile_threshold": 95,
    "original_breakpoints": 102,
    "final_chunks": 254,
    "avg_chunk_size_sentences": 9.881889763779528,
    "enrichment": {
      "method": "llm",
      "model": "VARELab-GPT4o",
      "enriched_at": "2025-05-04 23:59:30"
    }
  }
}