{
  "document_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec",
  "document_name": "s3-outposts.txt",
  "chunks": [
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_0",
      "text": "User Guide\nAmazon S3 on Outposts\nAPI Version 2006-03-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.",
      "start_idx": 0,
      "end_idx": 142,
      "metadata": {
        "num_sentences": 2,
        "num_words": 22,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": []
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "API",
            "2006-03-01",
            "AWS"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "API Version 2006-03-01",
            "Amazon Web Services",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document is a user guide for Amazon S3 on Outposts, detailing the API version 2006-03-01 provided by AWS.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the API version for Amazon S3 on Outposts?",
            "What services are covered in this documentation?",
            "Who owns the copyright for this guide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "Outposts",
          "Amazon S3",
          "API",
          "API Version 2006-03-01",
          "AWS Outposts",
          "2006-03-01",
          "Amazon Web Services"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_1",
      "text": "Amazon S3 on Outposts User Guide\nAmazon S3 on Outposts: User Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.\nAmazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon.",
      "start_idx": 144,
      "end_idx": 696,
      "metadata": {
        "num_sentences": 4,
        "num_words": 93,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Legal Notice",
              "Trademark Information"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "User Guide",
            "trademarks",
            "copyright",
            "AWS",
            "affiliates",
            "services",
            "property",
            "owners"
          ],
          "entities": [
            "Amazon S3",
            "Amazon Web Services",
            "Outposts",
            "Amazon trademarks",
            "affiliates"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Legal Information",
            "Amazon Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document is the user guide for Amazon S3 on Outposts and includes copyright and trademark information related to Amazon Web Services and its affiliates.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts?",
            "What are the legal restrictions on using Amazon trademarks?",
            "Who owns the trademarks mentioned in this guide?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "Outposts",
          "Amazon S3",
          "Amazon trademarks",
          "property",
          "affiliates",
          "User Guide",
          "copyright",
          "services",
          "owners",
          "trademarks",
          "Amazon Web Services"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_2",
      "text": "Amazon S3 on Outposts User Guide\nTable of Contents\nWhat is S3 on Outposts? ................................................................................................................. 1\nHow S3 on Outposts works ....................................................................................................................... 1\nRegions ...................................................................................................................................................... 2\nBuckets ....................................................................................................................................................... 2\nObjects....................................................................................................................................................... 3\nKeys ............................................................................................................................................................ 3\nS3 Versioning ........................................................................................................................................... 4\nVersion ID.................................................................................................................................................. 4\nStorage class and encryption............................................................................................................... 4\nBucket policy............................................................................................................................................ 4\nS3 on Outposts access points .............................................................................................................. 5\nFeatures of S3 on Outposts ....................................................................................................................... 5\nAccess management ............................................................................................................................... 5\nStorage logging and monitoring ......................................................................................................... 6\nStrong consistency.................................................................................................................................. 6\nRelated services............................................................................................................................................ 7\nAccessing S3 on Outposts .......................................................................................................................... 7\nAWS Management Console ................................................................................................................... 7\nAWS Command Line Interface ............................................................................................................. 7\nAWS SDKs ................................................................................................................................................. 8\nPaying for S3 on Outposts ......................................................................................................................... 8\nNext steps...................................................................................................................................................... 8\nSetting up your Outpost ............................................................................................................... 10\nOrder a new Outpost ................................................................................................................................ 10\nHow S3 on Outposts is different .................................................................................................. 11\nSpecifications.............................................................................................................................................. 11\nSupported API operations ........................................................................................................................ 12\nUnsupported Amazon S3 features ......................................................................................................... 12\nNetwork restrictions .................................................................................................................................. 13\nGetting started with S3 on Outposts ........................................................................................... 14\nUsing the S3 console ................................................................................................................................ 14\nCreate a bucket, an access point, and an endpoint ....................................................................... 15\nNext steps............................................................................................................................................... 17\nUsing the AWS CLI and SDK for Java .................................................................................................... 17\nAPI Version 2006-03-01 iii",
      "start_idx": 698,
      "end_idx": 5845,
      "metadata": {
        "num_sentences": 2,
        "num_words": 189,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "buckets",
            "access points",
            "encryption",
            "storage class",
            "AWS CLI",
            "AWS SDKs",
            "network restrictions",
            "API operations",
            "strong consistency"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS Command Line Interface",
            "AWS SDKs",
            "Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides an overview of Amazon S3 on Outposts, detailing its features, setup process, supported operations, and access methods using AWS tools.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts?",
            "How do I set up and access S3 on Outposts?",
            "What are the differences between S3 on Outposts and regular S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "network restrictions",
          "AWS Command Line Interface",
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "storage class",
          "API operations",
          "Amazon S3",
          "AWS Management Console",
          "access points",
          "strong consistency",
          "encryption",
          "buckets",
          "AWS Outposts",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_3",
      "text": "Amazon S3 on Outposts User Guide\nStep 1: Create a bucket ....................................................................................................................... 18\nStep 2: Create an access point ........................................................................................................... 19\nStep 3: Create an endpoint ................................................................................................................ 20\nStep 4: Upload an object to an S3 on Outposts bucket ............................................................... 22\nNetworking for S3 on Outposts ................................................................................................... 23\nChoosing your networking access type ................................................................................................. 23\nAccessing your S3 on Outposts buckets and objects ......................................................................... 23\nManaging connections using cross-account elastic network interfaces .......................................... 24\nWorking with S3 on Outposts buckets ........................................................................................ 25\nBuckets......................................................................................................................................................... 25\nAccess points ............................................................................................................................................... 25\nEndpoints ..................................................................................................................................................... 26\nAPI operations on S3 on Outposts ......................................................................................................... 26\nCreating and managing S3 on Outposts buckets ................................................................................ 28\nCreating a bucket ....................................................................................................................................... 28\nAdding tags................................................................................................................................................. 32\nUsing bucket policies ................................................................................................................................. 33\nAdding a bucket policy ........................................................................................................................ 34\nViewing a bucket policy ...................................................................................................................... 36\nDeleting a bucket policy ..................................................................................................................... 37\nBucket policy examples ....................................................................................................................... 38\nListing buckets............................................................................................................................................ 42\nGetting a bucket ......................................................................................................................................... 43\nDeleting your bucket ................................................................................................................................. 45\nWorking with access points ..................................................................................................................... 46\nCreating an access point ..................................................................................................................... 47\nUsing a bucket-style alias for your access point ............................................................................ 48\nViewing access point configuration .................................................................................................. 53\nListing access points ............................................................................................................................. 54\nDeleting an access point ..................................................................................................................... 55\nAdding an access point policy ............................................................................................................ 56\nViewing an access point policy .......................................................................................................... 58\nWorking with endpoints ........................................................................................................................... 59\nCreating an endpoint ........................................................................................................................... 60\nListing endpoints.................................................................................................................................. 62\nDeleting an endpoint ........................................................................................................................... 64\nAPI Version 2006-03-01 iv",
      "start_idx": 5847,
      "end_idx": 11121,
      "metadata": {
        "num_sentences": 1,
        "num_words": 232,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "endpoint",
            "bucket policy",
            "tags",
            "elastic network interfaces",
            "API operations",
            "bucket-style alias"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "buckets",
            "access points",
            "endpoints",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide provides detailed steps to configure and manage Amazon S3 on Outposts, including creating buckets, access points, and endpoints, as well as managing policies and connections.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in Amazon S3 on Outposts?",
            "What are the steps to configure an access point?",
            "How can I manage bucket policies in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "elastic network interfaces",
          "Outposts",
          "Amazon S3",
          "API operations",
          "Amazon S3 on Outposts",
          "access points",
          "API Version 2006-03-01",
          "bucket policy",
          "endpoints",
          "buckets",
          "bucket",
          "tags",
          "access point",
          "endpoint",
          "bucket-style alias"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_4",
      "text": "Amazon S3 on Outposts User Guide\nWorking with S3 on Outposts objects ......................................................................................... 66\nUpload an object ........................................................................................................................................ 67\nCopying an object ...................................................................................................................................... 69\nUsing the AWS SDK for Java .............................................................................................................. 70\nGetting an object ....................................................................................................................................... 71\nListing objects ............................................................................................................................................. 74\nDeleting objects .......................................................................................................................................... 77\nUsing HeadBucket ...................................................................................................................................... 81\nPerforming a multipart upload ............................................................................................................... 83\nPerform a multipart upload of an object in an S3 on Outposts bucket .................................... 84\nCopy a large object in an S3 on Outposts bucket by using multipart upload .......................... 86\nList parts of an object in an S3 on Outposts bucket .................................................................... 88\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts bucket ......................... 90\nUsing presigned URLs ............................................................................................................................... 91\nLimiting presigned URL capabilities .................................................................................................. 91\nWho can create a presigned URL...................................................................................................... 93\nWhen does S3 on Outposts check the expiration date and time of a presigned URL? ............ 94\nSharing objects...................................................................................................................................... 94\nUploading an object ............................................................................................................................. 99\nAmazon S3 on Outposts with local Amazon EMR ............................................................................ 104\nCreating an Amazon S3 on Outposts bucket ............................................................................... 105\nGetting started using Amazon EMR with Amazon S3 on Outposts ......................................... 106\nAuthorization and authentication caching ......................................................................................... 111\nConfiguring the authorization and authentication cache .......................................................... 112\nValidating SigV4A signing ................................................................................................................ 112\nSecurity ........................................................................................................................................ 113\nSetting up IAM ......................................................................................................................................... 113\nPrincipals for S3 on Outposts policies ........................................................................................... 116\nARNs for S3 on Outposts ................................................................................................................. 116\nExample policies for S3 on Outposts ............................................................................................. 118\nPermissions for endpoints ................................................................................................................ 119\nService-linked roles for S3 on Outposts ........................................................................................ 121\nData encryption........................................................................................................................................ 121\nAWS PrivateLink for S3 on Outposts .................................................................................................. 122\nRestrictions and limitations .............................................................................................................. 123\nAccessing S3 on Outposts interface endpoints ............................................................................ 124\nAPI Version 2006-03-01 v",
      "start_idx": 11123,
      "end_idx": 16116,
      "metadata": {
        "num_sentences": 2,
        "num_words": 279,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "multipart upload",
            "presigned URLs",
            "IAM policies",
            "data encryption",
            "authorization",
            "authentication",
            "AWS SDK for Java",
            "AWS PrivateLink",
            "interface endpoints"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "Amazon EMR",
            "SigV4A"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a comprehensive guide to working with Amazon S3 on Outposts, covering object operations, security, and integration with other AWS services and tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload in Amazon S3 on Outposts?",
            "What are the restrictions and limitations of Amazon S3 on Outposts?",
            "How do I configure IAM policies for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "presigned URLs",
          "Outposts",
          "Amazon S3",
          "SigV4A",
          "data encryption",
          "multipart upload",
          "authentication",
          "authorization",
          "AWS PrivateLink",
          "interface endpoints",
          "AWS SDK for Java",
          "Amazon EMR",
          "Amazon S3 on Outposts",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_5",
      "text": "Amazon S3 on Outposts User Guide\nUpdating an on-premises DNS configuration ............................................................................... 126\nCreating a VPC endpoint .................................................................................................................. 126\nCreating VPC endpoint policies and bucket policies ................................................................... 126\nSignature Version 4 (SigV4) policy keys ............................................................................................. 128\nBucket policy examples that use Signature Version 4-related condition keys ....................... 130\nAWS managed policies ........................................................................................................................... 132\nAWSS3OnOutpostsServiceRolePolicy............................................................................................. 132\nPolicy updates..................................................................................................................................... 133\nUsing service-linked roles ...................................................................................................................... 133\nService-linked role permissions for S3 on Outposts ................................................................... 134\nCreating a service-linked role for S3 on Outposts ...................................................................... 137\nEditing a service-linked role for S3 on Outposts ......................................................................... 137\nDeleting a service-linked role for S3 on Outposts ...................................................................... 137\nSupported Regions for S3 on Outposts service-linked roles ..................................................... 138\nManaging S3 on Outposts storage ............................................................................................. 139\nManaging S3 Versioning ......................................................................................................................... 139\nCreating and managing a lifecycle configuration ............................................................................. 141\nUsing the console ............................................................................................................................... 142\nUsing the AWS CLI and SDK for Java ............................................................................................. 145\nReplicating objects for S3 on Outposts .............................................................................................. 149\nReplication configuration.................................................................................................................. 150\nRequirements for S3 Replication on Outposts ............................................................................. 151\nWhat is replicated? ............................................................................................................................. 152\nWhat isn't replicated? ........................................................................................................................ 152\nWhat isn't supported by S3 Replication on Outposts? ............................................................... 153\nSetting up replication ........................................................................................................................ 153\nManaging your replication ................................................................................................................ 172\nSharing S3 on Outposts ......................................................................................................................... 180\nPrerequisites........................................................................................................................................ 180\nProcedure .............................................................................................................................................. 181\nUsage examples .................................................................................................................................. 182\nOther services........................................................................................................................................... 184\nMonitoring S3 on Outposts ........................................................................................................ 186\nCloudWatch metrics ................................................................................................................................ 186\nCloudWatch metrics........................................................................................................................... 187\nAmazon CloudWatch Events .................................................................................................................. 188\nAPI Version 2006-03-01 vi",
      "start_idx": 16118,
      "end_idx": 21160,
      "metadata": {
        "num_sentences": 4,
        "num_words": 236,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "Signature Version 4",
            "service-linked roles",
            "replication",
            "CloudWatch metrics",
            "bucket policies",
            "lifecycle configuration",
            "DNS configuration",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "CloudWatch",
            "AWS CLI",
            "SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "IAM Policies",
            "Monitoring and Metrics"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "CloudWatch"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a comprehensive guide to managing Amazon S3 on Outposts, including DNS configuration, VPC endpoints, IAM policies, replication, and monitoring using CloudWatch.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a VPC endpoint for S3 on Outposts?",
            "What are the requirements for S3 replication on Outposts?",
            "How can I monitor S3 on Outposts using CloudWatch?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "bucket policies",
          "AWS CLI",
          "VPC endpoint",
          "Amazon S3",
          "Signature Version 4",
          "DNS configuration",
          "CloudWatch metrics",
          "service-linked roles",
          "SDK for Java",
          "lifecycle configuration",
          "replication",
          "CloudWatch",
          "AWS Outposts",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_6",
      "text": "Amazon S3 on Outposts User Guide\nCloudTrail logs.......................................................................................................................................... 190\nEnabling CloudTrail logging for S3 on Outposts objects ........................................................... 190\nAmazon S3 on Outposts AWS CloudTrail log file entries ........................................................... 193\nDeveloping with S3 on Outposts ................................................................................................ 196\nS3 on Outposts APIs ............................................................................................................................... 196\nAmazon S3 API operations for managing objects ....................................................................... 196\nAmazon S3 Control API operations for managing buckets ....................................................... 197\nS3 on Outposts API operations for managing Outposts ............................................................ 198\nConfiguring S3 control client ................................................................................................................ 199\nMaking requests over IPv6 ..................................................................................................................... 199\nGetting started with IPv6 ................................................................................................................. 200\nMaking requests using dual-stack endpoints ............................................................................... 201\nUsing IPv6 addresses in IAM policies ............................................................................................. 201\nTesting IP address compatibility ..................................................................................................... 202\nUsing IPv6 with AWS PrivateLink .................................................................................................... 203\nUsing dual-stack endpoints .............................................................................................................. 206\nAPI Version 2006-03-01 vii",
      "start_idx": 21162,
      "end_idx": 23372,
      "metadata": {
        "num_sentences": 1,
        "num_words": 127,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CloudTrail",
            "IPv6",
            "API operations",
            "AWS PrivateLink",
            "IAM policies",
            "dual-stack endpoints",
            "log files",
            "S3 control client"
          ],
          "entities": [
            "Amazon S3",
            "AWS CloudTrail",
            "IPv6",
            "IAM policies",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Logging"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS CloudTrail",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "S3 APIs",
            "S3 Control APIs"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference and procedural guidance for using Amazon S3 on Outposts, including CloudTrail logging, API operations, and IPv6 configurations.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I enable CloudTrail logging for S3 on Outposts?",
            "What are the API operations for managing S3 on Outposts?",
            "How can I configure IPv6 for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM policies",
          "Outposts",
          "Amazon S3",
          "API operations",
          "dual-stack endpoints",
          "AWS PrivateLink",
          "S3 control client",
          "log files",
          "CloudTrail",
          "AWS CloudTrail",
          "IPv6"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_7",
      "text": "Amazon S3 on Outposts User Guide\nWhat is Amazon S3 on Outposts?\nAWS Outposts is a fully managed service that offers the same AWS infrastructure, AWS services,\nAPIs, and tools to virtually any data center, co-location space, or on-premises facility for a truly\nconsistent hybrid experience. AWS Outposts is ideal for workloads that require low-latency access\nto on-premises systems, local data processing, data residency, and migration of applications with\nlocal system interdependencies. For more information, see What is AWS Outposts? in the AWS\nOutposts User Guide.\nWith Amazon S3 on Outposts, you can create S3 buckets on your Outposts and easily store and\nretrieve objects on premises. S3 on Outposts provides a new storage class, OUTPOSTS, which uses\nthe Amazon S3 APIs and is designed to store data durably and redundantly across multiple devices\nand servers on your Outposts. You communicate with your Outposts bucket by using an access\npoint and endpoint connection over a virtual private cloud (VPC).\nYou can use the same APIs and features on Outposts buckets as you do on Amazon S3,\nincluding access policies, encryption, and tagging. You can use S3 on Outposts through the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\n\u2022 How S3 on Outposts works\n\u2022 Features of S3 on Outposts\n\u2022 Related services\n\u2022 Accessing S3 on Outposts\n\u2022 Paying for S3 on Outposts\n\u2022 Next steps\nHow S3 on Outposts works\nS3 on Outposts is an object storage service that stores data as objects within buckets on your\nOutpost. An object is a data file and any metadata that describes the file. A bucket is a container for\nobjects.\nTo store your data in S3 on Outposts, you first create a bucket. When you create the bucket, you\nspecify a bucket name and the Outpost that will hold the bucket. To access your S3 on Outposts\nbucket and perform object operations, you next create and configure an access point. You must\nalso create an endpoint to route requests to your access point.\nHow S3 on Outposts works API Version 2006-03-01 1",
      "start_idx": 23374,
      "end_idx": 25418,
      "metadata": {
        "num_sentences": 18,
        "num_words": 348,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Feature Description",
              "Procedural Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "S3 buckets",
            "OUTPOSTS storage class",
            "object storage",
            "access point",
            "endpoint",
            "VPC",
            "encryption",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "OUTPOSTS storage class",
            "VPC",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hybrid Cloud",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts enables users to create S3 buckets on AWS Outposts for low-latency, on-premises object storage, using familiar S3 APIs and tools. It supports features like encryption, access policies, and tagging, and integrates with VPC for secure communication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts and how does it work?",
            "What features does S3 on Outposts provide?",
            "How can I access and manage S3 buckets on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Amazon S3",
          "Amazon S3 on Outposts",
          "REST API",
          "endpoint",
          "VPC",
          "encryption",
          "OUTPOSTS storage class",
          "AWS Outposts",
          "S3 buckets",
          "access point",
          "object storage"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_8",
      "text": "Amazon S3 on Outposts User Guide\nAccess points simplify data access for any AWS service or customer application that stores data\nin S3. Access points are named network endpoints that are attached to buckets and can be used\nto perform object operations, such as GetObject and PutObject. Each access point has distinct\npermissions and network controls.\nYou can create and manage your S3 on Outposts buckets, access points, and endpoints by using\nthe AWS Management Console, AWS CLI, AWS SDKs, or REST API. To upload and manage objects in\nyour S3 on Outposts bucket, you can use the AWS CLI, AWS SDKs, or REST API.\nRegions\nDuring AWS Outposts provisioning, you or AWS creates a service link connection that connects\nyour Outpost back to your chosen AWS Region or Outposts home Region for bucket operations and\ntelemetry. An Outpost relies on connectivity to the parent AWS Region. The Outposts rack is not\ndesigned for disconnected operations or environments with limited to no connectivity. For more\ninformation, see Outpost connectivity to AWS Regions in the AWS Outposts User Guide.\nBuckets\nA bucket is a container for objects stored in S3 on Outposts. You can store any number of objects in\na bucket and can have up to 100 buckets per account per Outpost.\nWhen you create a bucket, you enter a bucket name and choose the Outpost where the bucket\nwill reside. After you create a bucket, you cannot change the bucket name or move the bucket to a\ndifferent Outpost. Bucket names must follow Amazon S3 bucket naming rules. In S3 on Outposts,\nbucket names are unique to an Outpost and AWS account. S3 on Outposts buckets require the\noutpost-id, account-id, and bucket name to identify them.\nThe following example shows the Amazon Resource Name (ARN) format for S3 on Outposts\nbuckets. The ARN is comprised of the Region your Outpost is homed to, your Outpost account, the\nOutpost ID, and the bucket name.\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/bucket/bucket-name\nEvery object is contained in a bucket. You must use access points to access any object in an\nOutposts bucket. When you specify the bucket for object operations, you use the access point ARN\nor access point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nRegions API Version 2006-03-01 2",
      "start_idx": 25420,
      "end_idx": 27767,
      "metadata": {
        "num_sentences": 23,
        "num_words": 388,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Access points",
            "Buckets",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "Regions",
            "ARN",
            "Connectivity"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS CLI",
            "REST API",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Regions"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts, focusing on access points, buckets, and connectivity to AWS Regions. It provides details on managing buckets and access points using AWS tools and APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and manage buckets in S3 on Outposts?",
            "What is the ARN format for S3 on Outposts buckets?",
            "What tools can I use to manage S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "AWS Regions",
          "Amazon S3",
          "ARN",
          "REST API",
          "Regions",
          "Connectivity",
          "Buckets",
          "AWS Outposts",
          "Access points"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_9",
      "text": "Amazon S3 on Outposts User Guide\nThe following example shows the access point ARN format for S3 on Outposts, which includes the\noutpost-id, account-id, and access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about buckets, see Working with S3 on Outposts buckets.\nObjects\nObjects are the fundamental entities stored in S3 on Outposts. Objects consist of object data and\nmetadata. The metadata is a set of name-value pairs that describe the object. These pairs include\nsome default metadata, such as the date last modified, and standard HTTP metadata, such as\nContent-Type. You can also specify custom metadata at the time that the object is stored. An\nobject is uniquely identified within a bucket by a key (or name).\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nKeys\nAn object key (or key name) is the unique identifier for an object within a bucket. Every object in a\nbucket has exactly one key. The combination of a bucket and object key uniquely identifies each\nobject.\nThe following example shows the ARN format for S3 on Outposts objects, which includes the AWS\nRegion code for the Region that the Outpost is homed to, AWS account ID, Outpost ID, bucket\nname, and object key:\narn:aws:s3-outposts:us-west-2:123456789012:outpost/ op-01ac5d28a6a232904/bucket/amzn-\ns3-demo-bucket1/object/myobject\nFor more information about object keys, see Working with S3 on Outposts objects.\nObjects API Version 2006-03-01 3",
      "start_idx": 27769,
      "end_idx": 29737,
      "metadata": {
        "num_sentences": 17,
        "num_words": 303,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access point ARN",
            "metadata",
            "object key",
            "Outpost",
            "bucket",
            "data residency",
            "REST API",
            "AWS CLI",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3",
            "Outpost",
            "AWS Region",
            "ARN",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details about Amazon S3 on Outposts, including the ARN format for access points and objects, metadata management, and data residency requirements. It also explains how to manage objects using APIs and tools like AWS CLI and SDKs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How is metadata managed in S3 on Outposts?",
            "What tools can be used to upload and manage objects on an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "data residency",
          "AWS Management Console",
          "REST API",
          "access point ARN",
          "AWS Region",
          "object key",
          "Outpost",
          "bucket",
          "AWS Outposts",
          "metadata",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_10",
      "text": "Amazon S3 on Outposts User Guide\nS3 Versioning\nYou can use S3 Versioning on Outposts buckets to keep multiple variants of an object in the\nsame bucket. With S3 Versioning, you can preserve, retrieve, and restore every version of every\nobject stored in your buckets. S3 Versioning helps you recover from unintended user actions and\napplication failures.\nFor more information, see Managing S3 Versioning for your S3 on Outposts bucket.\nVersion ID\nWhen you enable S3 Versioning in a bucket, S3 on Outposts generates a unique version ID for\neach object added to the bucket. Objects that already existed in the bucket at the time that you\nenable versioning have a version ID of null. If you modify these (or any other) objects with other\noperations, such as PutObject, the new objects get a unique version ID.\nFor more information, see Managing S3 Versioning for your S3 on Outposts bucket.\nStorage class and encryption\nS3 on Outposts provides a new storage class, S3 Outposts (OUTPOSTS). The S3 Outposts storage\nclass is available only for objects stored in buckets on AWS Outposts. If you try to use other S3\nstorage classes with S3 on Outposts, S3 on Outposts returns the InvalidStorageClass error.\nBy default, objects stored in the S3 Outposts (OUTPOSTS) storage class are encrypted using server-\nside encryption with Amazon S3 managed encryption keys (SSE-S3). For more information, see\nData encryption in S3 on Outposts.\nBucket policy\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size.\nBucket policies use JSON-based IAM policy language that is standard across AWS. You can use\nbucket policies to add or deny permissions for the objects in a bucket. Bucket policies allow or deny\nrequests based on the elements in the policy. These elements can include the requester, S3 on\nOutposts actions, resources, and aspects or conditions of the request (for example, the IP address\nS3 Versioning API Version 2006-03-01 4",
      "start_idx": 29739,
      "end_idx": 31990,
      "metadata": {
        "num_sentences": 21,
        "num_words": 378,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts buckets",
            "version ID",
            "storage class",
            "bucket policy"
          ],
          "entities": [
            "S3 Versioning",
            "AWS Outposts",
            "S3 Outposts storage class",
            "SSE-S3",
            "IAM"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of S3 Versioning, storage classes, encryption, and bucket policies for S3 on Outposts, enabling object version management and secure storage on AWS Outposts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does S3 Versioning work on Outposts buckets?",
            "What is the default encryption for objects in the S3 Outposts storage class?",
            "How can I set up a bucket policy for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "storage class",
          "IAM",
          "Amazon S3",
          "version ID",
          "bucket policy",
          "SSE-S3",
          "S3 Versioning",
          "S3 Outposts storage class",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_11",
      "text": "Amazon S3 on Outposts User Guide\nused to make the request). For example, you can create a bucket policy that grants cross-account\npermissions to upload objects to an S3 on Outposts bucket while ensuring that the bucket owner\nhas full control of the uploaded objects.\nIn your bucket policy, you can use wildcard characters (*) in ARNs and other values to grant\npermissions to a subset of objects. For example, you can control access to groups of objects that\nbegin with a common prefix or end with a given extension, such as .html.\nS3 on Outposts access points\nS3 on Outposts access points are named network endpoints with dedicated access policies that\ndescribe how data can be accessed using that endpoint. Access points simplify managing data\naccess at scale for shared datasets in S3 on Outposts. Access points are attached to buckets that\nyou can use to perform S3 object operations, such as GetObject and PutObject.\nWhen you specify the bucket for object operations, you use the access point ARN or access point\nalias. For more information about access point aliases, see Using a bucket-style alias for your S3 on\nOutposts bucket access point.\nAccess points have distinct permissions and network controls that S3 on Outposts applies for any\nrequest that is made through that access point. Each access point enforces a customized access\npoint policy that works in conjunction with the bucket policy that is attached to the underlying\nbucket.\nFor more information, see Accessing your S3 on Outposts buckets and objects.\nFeatures of S3 on Outposts\nAccess management\nS3 on Outposts provides features for auditing and managing access to your buckets and objects. By\ndefault, S3 on Outposts buckets and the objects in them are private. You have access only to the S3\non Outposts resources that you create.\nTo grant granular resource permissions that support your specific use case or to audit the\npermissions of your S3 on Outposts resources, you can use the following features.\n\u2022 S3 Block Public Access \u2013 Block public access to buckets and objects. For buckets on Outposts,\nBlock Public Access is always enabled by default.\nS3 on Outposts access points API Version 2006-03-01 5",
      "start_idx": 31992,
      "end_idx": 34169,
      "metadata": {
        "num_sentences": 19,
        "num_words": 363,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "bucket policy",
            "S3 on Outposts",
            "access points",
            "bucket owner",
            "wildcard characters",
            "access point ARN",
            "access point alias",
            "Block Public Access",
            "object operations",
            "access management"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "Access Points",
            "Block Public Access",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage access and permissions for Amazon S3 on Outposts, including bucket policies, access points, and features like Block Public Access. It highlights how to control object operations and enforce security using customized policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket policy for S3 on Outposts?",
            "What are S3 on Outposts access points and how do they work?",
            "How can I enforce Block Public Access on S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "object operations",
          "bucket owner",
          "Amazon S3",
          "Access Points",
          "Block Public Access",
          "access points",
          "API Version 2006-03-01",
          "wildcard characters",
          "access point ARN",
          "bucket policy",
          "access point alias",
          "access management",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_12",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 AWS Identity and Access Management (IAM) \u2013 IAM is a web service that helps you securely\ncontrol access to AWS resources, including your S3 on Outposts resources. With IAM, you can\ncentrally manage permissions that control which AWS resources users can access. You use IAM to\ncontrol who is authenticated (signed in) and authorized (has permissions) to use resources.\n\u2022 S3 on Outposts access points \u2013 Manage data access for shared datasets in S3 on Outposts. Access\npoints are named network endpoints with dedicated access policies. Access points are attached\nto buckets and can be used to perform object operations, such as GetObject and PutObject.\n\u2022 Bucket policies \u2013 Use IAM-based policy language to configure resource-based permissions for\nyour S3 buckets and the objects in them.\n\u2022 AWS Resource Access Manager (AWS RAM) \u2013 Securely share your S3 on Outposts capacity across\nAWS accounts, within your organization or organizational units (OUs) in AWS Organizations.\nStorage logging and monitoring\nS3 on Outposts provides logging and monitoring tools that you can use to monitor and control\nhow your S3 on Outposts resources are being used. For more information, see Monitoring tools.\n\u2022 Amazon CloudWatch metrics for S3 on Outposts \u2013 Track the operational health of your\nresources and understand your capacity availability.\n\u2022 Amazon CloudWatch Events events for S3 on Outposts \u2013 Create a rule for any S3 on Outposts\nAPI event to receive notifications through all supported CloudWatch Events targets, including\nAmazon Simple Queue Service (Amazon SQS), Amazon Simple Notification Service (Amazon\nSNS), and AWS Lambda.\n\u2022 AWS CloudTrail logs for S3 on Outposts \u2013 Record actions taken by a user, a role, or an AWS\nservice in S3 on Outposts. CloudTrail logs provide you with detailed API tracking for S3 bucket-\nlevel and object-level operations.\nStrong consistency\nS3 on Outposts provides strong read-after-write consistency for PUT and DELETE requests of\nobjects in your S3 on Outposts bucket in all AWS Regions. This behavior applies to both writes\nof new objects and to PUT requests that overwrite existing objects and to DELETE requests. In\naddition, S3 on Outposts object tags and object metadata (for example, the HEAD object) are\nstrongly consistent. For more information, see Amazon S3 data consistency model in the Amazon\nS3 User Guide.\nStorage logging and monitoring API Version 2006-03-01 6",
      "start_idx": 34171,
      "end_idx": 36604,
      "metadata": {
        "num_sentences": 19,
        "num_words": 390,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "IAM",
            "S3 on Outposts",
            "access points",
            "bucket policies",
            "AWS RAM",
            "CloudWatch metrics",
            "CloudTrail logs",
            "strong consistency",
            "object metadata",
            "API tracking"
          ],
          "entities": [
            "AWS Identity and Access Management (IAM)",
            "S3 on Outposts",
            "AWS Resource Access Manager (AWS RAM)",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "Monitoring and Logging"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "AWS RAM"
          ],
          "mentioned_tools": [
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of managing access, logging, and consistency for Amazon S3 on Outposts, including tools like IAM, AWS RAM, CloudWatch, and CloudTrail. It also highlights strong read-after-write consistency for object operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I manage access to S3 on Outposts resources?",
            "What logging and monitoring tools are available for S3 on Outposts?",
            "Does S3 on Outposts provide strong consistency for object operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "bucket policies",
          "AWS RAM",
          "API tracking",
          "object metadata",
          "CloudTrail logs",
          "IAM",
          "CloudWatch metrics",
          "access points",
          "Amazon CloudWatch",
          "strong consistency",
          "AWS Identity and Access Management (IAM)",
          "AWS CloudTrail",
          "AWS Resource Access Manager (AWS RAM)",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_13",
      "text": "Amazon S3 on Outposts User Guide\nRelated services\nAfter you load your data into S3 on Outposts, you can use it with other AWS services. The following\nare the services that you might use most frequently:\n\u2022 Amazon Elastic Compute Cloud (Amazon EC2) \u2013 Provides secure and scalable computing capacity\nin the AWS Cloud. Using Amazon EC2 lessens your need to invest in hardware up front, so you\ncan develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few\nvirtual servers as you need, configure security and networking, and manage storage.\n\u2022 Amazon Elastic Block Store (Amazon EBS) on Outposts \u2013 Use Amazon EBS local snapshots on\nOutposts to store snapshots of volumes on an Outpost locally in S3 on Outposts.\n\u2022 Amazon Relational Database Service (Amazon RDS) on Outposts \u2013 Use Amazon RDS local\nbackups to store your Amazon RDS backups locally on your Outpost.\n\u2022 AWS DataSync \u2013 Automate transferring data between your Outposts and AWS Regions, choosing\nwhat to transfer, when to transfer, and how much network bandwidth to use. S3 on Outposts is\nintegrated with AWS DataSync. For on-premises applications that require high-throughput local\nprocessing, S3 on Outposts provides on-premises object storage to minimize data transfers and\nbuffer from network variations, while providing you the ability to easily transfer data between\nOutposts and AWS Regions.\nAccessing S3 on Outposts\nYou can work with S3 on Outposts in any of the following ways:\nAWS Management Console\nThe console is a web-based user interface for managing S3 on Outposts and AWS resources. If\nyou've signed up for an AWS account, you can access S3 on Outposts by signing into the AWS\nManagement Console and choosing S3 from the AWS Management Console home page. Then,\nchoose Outposts buckets from the left navigation pane.\nAWS Command Line Interface\nYou can use the AWS command line tools to issue commands or build scripts at your system's\ncommand line to perform AWS (including S3) tasks.\nRelated services API Version 2006-03-01 7",
      "start_idx": 36606,
      "end_idx": 38632,
      "metadata": {
        "num_sentences": 14,
        "num_words": 336,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Integration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS services",
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS",
            "AWS DataSync",
            "object storage",
            "local snapshots",
            "on-premises",
            "AWS Management Console"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EC2",
            "Amazon EBS",
            "Amazon RDS",
            "AWS DataSync"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Cloud Services",
          "secondary_categories": [
            "Cloud Storage",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS DataSync",
            "Amazon EC2"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts with other AWS services, including EC2, EBS, RDS, and DataSync, and details ways to access it via the AWS Management Console or CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I access Amazon S3 on Outposts?",
            "What AWS services integrate with Amazon S3 on Outposts?",
            "What tools can I use to manage S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS Cloud Services]",
        "tf_idf_keywords": [
          "Amazon EC2",
          "AWS Management Console",
          "on-premises",
          "AWS DataSync",
          "Amazon RDS",
          "Amazon EBS",
          "object storage",
          "AWS services",
          "Amazon S3 on Outposts",
          "local snapshots"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_14",
      "text": "Amazon S3 on Outposts User Guide\nThe AWS Command Line Interface (AWS CLI) provides commands for a broad set of AWS services.\nThe AWS CLI is supported on Windows, macOS, and Linux. To get started, see the AWS Command\nLine Interface User Guide. For more information about the commands that you can use with S3 on\nOutposts, see s3api, s3control, and s3outposts in the AWS CLI Command Reference.\nAWS SDKs\nAWS provides SDKs (software development kits) that consist of libraries and sample code for\nvarious programming languages and platforms (Java, Python, Ruby, .NET, iOS, Android, and so\non). The AWS SDKs provide a convenient way to create programmatic access to S3 on Outposts\nand AWS. Because S3 on Outposts uses the same SDKs as Amazon S3, S3 on Outposts provides a\nconsistent experience using the same S3 APIs, automation, and tools.\nS3 on Outposts is a REST service. You can send requests to S3 on Outposts by using the AWS SDK\nlibraries, which wrap the underlying REST API and simplify your programming tasks. For example,\nthe SDKs take care of tasks such as calculating signatures, cryptographically signing requests,\nmanaging errors, and retrying requests automatically. For information about the AWS SDKs,\nincluding how to download and install them, see Tools to Build on AWS.\nPaying for S3 on Outposts\nYou can purchase a variety of AWS Outposts rack configurations featuring a combination of\nAmazon EC2 instance types, Amazon EBS General Purpose solid state drive (SSD) volumes (gp2),\nand S3 on Outposts. Pricing includes delivery, installation, infrastructure service maintenance, and\nsoftware patches and upgrades.\nFor more information, see AWS Outposts rack pricing.\nNext steps\nFor more information about working with S3 on Outposts, see the following topics:\n\u2022 Setting up your Outpost\n\u2022 How is Amazon S3 on Outposts different from Amazon S3?\n\u2022 Getting started with Amazon S3 on Outposts\n\u2022 Networking for S3 on Outposts\n\u2022 Working with S3 on Outposts buckets\nAWS SDKs API Version 2006-03-01 8",
      "start_idx": 38634,
      "end_idx": 40636,
      "metadata": {
        "num_sentences": 16,
        "num_words": 328,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 on Outposts",
            "AWS SDKs",
            "REST API",
            "S3 APIs",
            "Outposts rack",
            "EC2 instance types",
            "EBS volumes",
            "cryptographic signing",
            "automation"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 on Outposts",
            "AWS SDKs",
            "AWS Outposts rack",
            "Amazon EC2"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development Tools",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EC2",
            "Amazon EBS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an overview of using Amazon S3 on Outposts, including its integration with AWS CLI and SDKs, pricing details, and setup guidance.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts and how does it work?",
            "How can I use AWS SDKs to interact with S3 on Outposts?",
            "What are the pricing details for AWS Outposts racks?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon EC2",
          "AWS SDKs",
          "S3 APIs",
          "AWS CLI",
          "EC2 instance types",
          "cryptographic signing",
          "REST API",
          "EBS volumes",
          "automation",
          "AWS Outposts rack",
          "Outposts rack",
          "Amazon EBS",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_16",
      "text": "Amazon S3 on Outposts User Guide\nSetting up your Outpost\nTo get started with Amazon S3 on Outposts, you will need an Outpost with Amazon S3 capacity\ndeployed at your facility. For information about options for ordering an Outpost and S3\ncapacity, see AWS Outposts. To check if your Outposts has S3 capacity on it, you can use the\nListOutpostsWithS3 API call. For specifications and to see how S3 on Outposts is different than\nAmazon S3, see How is Amazon S3 on Outposts different from Amazon S3?\nFor more information, see the following topics.\nTopics\n\u2022 Order a new Outpost\nOrder a new Outpost\nIf you need to order a new Outpost with S3 capacity, see AWS Outposts rack pricing to understand\nthe capacity options for Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Block Store\n(Amazon EBS), and Amazon S3.\nAfter you select your configuration, follow the steps in Create an Outpost and order Outpost\ncapacity in the AWS Outposts User Guide.\nOrder a new Outpost API Version 2006-03-01 10",
      "start_idx": 40849,
      "end_idx": 41842,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Ordering",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS Outposts",
            "S3 capacity",
            "ListOutpostsWithS3",
            "EC2",
            "EBS",
            "Create an Outpost",
            "Outpost capacity",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "ListOutpostsWithS3",
            "Amazon EC2",
            "Amazon EBS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Storage Services",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides guidance on setting up Amazon S3 on Outposts, including ordering an Outpost with S3 capacity and using the ListOutpostsWithS3 API for verification.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I order an Outpost with S3 capacity?",
            "What is the difference between Amazon S3 on Outposts and Amazon S3?",
            "How can I verify if my Outpost has S3 capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "Amazon EC2",
          "ListOutpostsWithS3",
          "Outposts",
          "S3 capacity",
          "Amazon S3",
          "Amazon EBS",
          "EBS",
          "API Version 2006-03-01",
          "Outpost capacity",
          "EC2",
          "Create an Outpost",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_17",
      "text": "Amazon S3 on Outposts User Guide\nHow is Amazon S3 on Outposts different from Amazon\nS3?\nAmazon S3 on Outposts delivers object storage to your on-premises AWS Outposts environment.\nUsing S3 on Outposts helps you to meet local processing, data residency, and demanding\nperformance needs by keeping data close to on-premises applications. Because it uses Amazon\nS3 APIs and features, S3 on Outposts makes it easy to store, secure, tag, report on, and control\naccess to the data on your Outposts and extend AWS infrastructure to your on-premises facility for\na consistent hybrid experience.\nFor more information about how S3 on Outposts is unique, see the following topics.\nTopics\n\u2022 S3 on Outposts specifications\n\u2022 API operations supported by S3 on Outposts\n\u2022 Amazon S3 features not supported by S3 on Outposts\n\u2022 S3 on Outposts network requirements\nS3 on Outposts specifications\n\u2022 The maximum Outposts bucket size is 50 TB.\n\u2022 The maximum number of Outposts buckets is 100 per AWS account.\n\u2022 Outposts buckets can be accessed only by using access points and endpoints.\n\u2022 The maximum number of access points per Outposts bucket is 10.\n\u2022 Access point policies are limited to 20 KB in size.\n\u2022 The Outpost owner can manage access within your organization in AWS Organizations by using\nAWS Resource Access Manager. All accounts that need access to the Outpost must be within the\nsame organization as the owner account in AWS Organizations.\n\u2022 The S3 on Outposts bucket owner account is always the owner of all objects in the bucket.\n\u2022 Only the S3 on Outposts bucket owner account can perform operations on the bucket.\n\u2022 Object size limitations are consistent with Amazon S3.\n\u2022 All objects stored on S3 on Outposts are stored in the OUTPOSTS storage class.\nSpecifications API Version 2006-03-01 11",
      "start_idx": 41844,
      "end_idx": 43628,
      "metadata": {
        "num_sentences": 17,
        "num_words": 301,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specifications",
              "Comparison",
              "Requirements"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "object storage",
            "AWS Organizations",
            "access points",
            "endpoints",
            "bucket size",
            "storage class",
            "access policies",
            "Resource Access Manager"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Organizations",
            "AWS Resource Access Manager",
            "OUTPOSTS storage class"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hybrid Cloud",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Organizations"
          ],
          "mentioned_tools": [
            "AWS Resource Access Manager"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts provides object storage for on-premises environments, enabling local data processing and residency while leveraging Amazon S3 APIs and features. Key specifications and limitations for S3 on Outposts are outlined, including bucket size, access points, and organizational access control.",
          "intents": [
            "Reference",
            "Compare",
            "How-To"
          ],
          "potential_questions": [
            "What are the specifications of Amazon S3 on Outposts?",
            "How does Amazon S3 on Outposts differ from standard Amazon S3?",
            "What are the access control requirements for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS Organizations",
          "AWS Resource Access Manager",
          "Amazon S3",
          "storage class",
          "access points",
          "access policies",
          "endpoints",
          "OUTPOSTS storage class",
          "AWS Outposts",
          "bucket size",
          "object storage",
          "Resource Access Manager"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_18",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 By default, all objects stored in the OUTPOSTS storage class are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose to\nstore objects by using server-side encryption with customer-provided encryption keys (SSE-C).\n\u2022 If there is not enough space to store an object on your Outpost, the API returns an insufficient\ncapacity exception (ICE).\nAPI operations supported by S3 on Outposts\nFor a list of API operations supported by S3 on Outposts, see Amazon S3 on Outposts API\noperations.\nAmazon S3 features not supported by S3 on Outposts\nThe following Amazon S3 features are currently not supported by Amazon S3 on Outposts. Any\nattempts to use them are rejected.\n\u2022 Access control lists (ACLs)\n\u2022 Cross-origin resource sharing (CORS)\n\u2022 S3 Batch Operations\n\u2022 S3 Inventory reports\n\u2022 Changing the default bucket encryption\n\u2022 Public buckets\n\u2022 Multi-factor authentication (MFA) delete\n\u2022 S3 Lifecycle transitions (aside from object deletion and stopping incomplete multipart uploads)\n\u2022 S3 Object Lock legal hold\n\u2022 Object Lock retention\n\u2022 Server-side encryption with AWS Key Management Service (AWS KMS) keys (SSE-KMS)\n\u2022 S3 Replication Time Control (S3 RTC)\n\u2022 Amazon CloudWatch request metrics\n\u2022 Metrics configuration\n\u2022 Transfer Acceleration\n\u2022 S3 Event Notifications\n\u2022 Requester Pays buckets\nSupported API operations API Version 2006-03-01 12",
      "start_idx": 43630,
      "end_idx": 45061,
      "metadata": {
        "num_sentences": 7,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Feature List",
              "API Support",
              "Limitations"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "server-side encryption",
            "SSE-S3",
            "SSE-C",
            "insufficient capacity exception",
            "API operations",
            "unsupported features",
            "Outposts storage class",
            "bucket encryption",
            "object lock"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SSE-S3",
            "SSE-C",
            "AWS Key Management Service"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Encryption",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Key Management Service",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the default encryption methods, supported API operations, and unsupported features for Amazon S3 on Outposts. It also explains how insufficient capacity exceptions are handled.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What encryption methods are supported by Amazon S3 on Outposts?",
            "What features are not supported by S3 on Outposts?",
            "What happens if there is insufficient storage capacity on an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "API operations",
          "SSE-C",
          "unsupported features",
          "insufficient capacity exception",
          "Outposts storage class",
          "bucket encryption",
          "object lock",
          "AWS Key Management Service",
          "Amazon CloudWatch",
          "SSE-S3",
          "server-side encryption",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_19",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 S3 Select\n\u2022 AWS Lambda events\n\u2022 Server access logging\n\u2022 HTTP POST requests\n\u2022 SOAP\n\u2022 Website access\nS3 on Outposts network requirements\n\u2022 To route requests to an S3 on Outposts access point, you must create and configure an S3 on\nOutposts endpoint. The following limits apply to endpoints for S3 on Outposts:\n\u2022 Each virtual private cloud (VPC) on an Outpost can have one associated endpoint, and you can\nhave up to 100 endpoints per Outpost.\n\u2022 You can map multiple access points to the same endpoint.\n\u2022 You can add endpoints only to VPCs with CIDR blocks in the subspaces of the following CIDR\nranges:\n\u2022 10.0.0.0/8\n\u2022 172.16.0.0/12\n\u2022 192.168.0.0/16\n\u2022 You can create endpoints to an Outpost only from VPCs that have non-overlapping CIDR blocks.\n\u2022 You can create an endpoint only from within its Outposts subnet.\n\u2022 The subnet that you use to create an endpoint must contain four IP addresses for S3 on Outposts\nto use.\n\u2022 If you specify the customer-owned IP address pool (CoIP pool), it must contain four IP addresses\nfor S3 on Outposts to use.\n\u2022 You can create only one endpoint per Outpost per VPC.\nNetwork restrictions API Version 2006-03-01 13",
      "start_idx": 45063,
      "end_idx": 46241,
      "metadata": {
        "num_sentences": 9,
        "num_words": 211,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Limits"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "access point",
            "endpoint",
            "VPC",
            "CIDR blocks",
            "subnet",
            "CoIP pool",
            "network requirements",
            "AWS Lambda events",
            "Server access logging"
          ],
          "entities": [
            "Amazon S3",
            "AWS Lambda",
            "Outposts",
            "VPC",
            "CIDR ranges"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Lambda"
          ],
          "mentioned_tools": [
            "SOAP"
          ]
        },
        "semantic": {
          "summary": "This document outlines the network requirements and endpoint configuration limits for Amazon S3 on Outposts, including CIDR block restrictions and subnet specifications. It also references key features like S3 Select, AWS Lambda events, and server access logging.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the network requirements for S3 on Outposts?",
            "How can I configure endpoints for S3 on Outposts?",
            "What CIDR ranges are supported for VPCs on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Lambda events",
          "Outposts",
          "Amazon S3",
          "Server access logging",
          "subnet",
          "VPC",
          "CIDR blocks",
          "CIDR ranges",
          "network requirements",
          "AWS Lambda",
          "CoIP pool",
          "access point",
          "endpoint",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_20",
      "text": "Amazon S3 on Outposts User Guide\nGetting started with Amazon S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nWith Amazon S3 on Outposts, you can use the Amazon S3 APIs and features, such as object\nstorage, access policies, encryption, and tagging, on AWS Outposts as you do on Amazon S3. For\ninformation about S3 on Outposts, see What is Amazon S3 on Outposts?\nTopics\n\u2022 Getting started by using the AWS Management Console\n\u2022 Getting started by using the AWS CLI and SDK for Java\nGetting started by using the AWS Management Console\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nTo get started with S3 on Outposts by using the console, see the following topics. To get started by\nusing the AWS CLI or AWS SDK for Java, see Getting started by using the AWS CLI and SDK for Java.\nTopics\nUsing the S3 console API Version 2006-03-01 14",
      "start_idx": 46243,
      "end_idx": 48691,
      "metadata": {
        "num_sentences": 16,
        "num_words": 419,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Introduction",
              "Overview"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS Outposts",
            "S3 buckets",
            "local data access",
            "local data processing",
            "data residency",
            "access point",
            "virtual private cloud",
            "encryption",
            "tagging"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The document introduces Amazon S3 on Outposts, a service enabling users to create S3 buckets on AWS Outposts for local data storage and processing. It highlights features like access policies, encryption, and tagging, and describes usage through various AWS tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is Amazon S3 on Outposts?",
            "How do I create S3 buckets on AWS Outposts?",
            "What APIs and features are supported by S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "virtual private cloud",
          "tagging",
          "Amazon S3",
          "AWS CLI",
          "data residency",
          "AWS Management Console",
          "local data processing",
          "encryption",
          "local data access",
          "AWS Outposts",
          "S3 buckets",
          "access point",
          "AWS VPC"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_21",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Create a bucket, an access point, and an endpoint\n\u2022 Next steps\nCreate a bucket, an access point, and an endpoint\nThe following procedure shows you how to create your first bucket in S3 on Outposts. When you\ncreate a bucket using the console, you also create an access point and an endpoint associated with\nthe bucket so that you can immediately begin storing objects in your bucket.\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose Create Outposts bucket.\n4. For Bucket name, enter a Domain Name System (DNS)-compliant name for your bucket.\nThe bucket name must:\n\u2022 Be unique within the AWS account, the Outpost, and the AWS Region that the Outpost is\nhomed to.\n\u2022 Be 3\u201363 characters long.\n\u2022 Not contain uppercase characters.\n\u2022 Start with a lowercase letter or number.\nAfter you create the bucket, you can't change its name. For information about naming\nbuckets, see General purpose bucket naming rules in the Amazon S3 User Guide.\nImportant\nAvoid including sensitive information such as account numbers in the bucket name.\nThe bucket name is visible in the URLs that point to the objects in the bucket.\n5. For Outpost, choose the Outpost where you want the bucket to reside.\n6. Under Bucket Versioning, set the S3 Versioning state for your S3 on Outposts bucket to one of\nthe following options:\n\u2022 Disable (default) \u2013 The bucket remains unversioned.\nCreate a bucket, an access point, and an endpoint API Version 2006-03-01 15",
      "start_idx": 48693,
      "end_idx": 50281,
      "metadata": {
        "num_sentences": 23,
        "num_words": 272,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "endpoint",
            "AWS Management Console",
            "DNS-compliant name",
            "bucket versioning",
            "S3 Versioning",
            "Outpost bucket"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "Outposts buckets",
            "S3 Versioning",
            "DNS-compliant name"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create a bucket, an access point, and an endpoint in Amazon S3 on Outposts using the AWS Management Console. It includes details on naming conventions, versioning options, and Outpost selection.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in Amazon S3 on Outposts?",
            "What are the naming rules for an S3 bucket on Outposts?",
            "What is the purpose of bucket versioning in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "Outposts",
          "Amazon S3",
          "bucket versioning",
          "AWS Management Console",
          "Outpost bucket",
          "DNS-compliant name",
          "S3 Versioning",
          "bucket",
          "access point",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_22",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Enable \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID.\nFor more information about S3 Versioning, see Managing S3 Versioning for your S3 on\nOutposts bucket.\n7. (Optional) Add any optional tags that you would like to associate with the Outposts bucket.\nYou can use tags to track criteria for individual projects or groups of projects, or to label your\nbuckets by using cost-allocation tags.\nBy default, all objects stored in your Outposts bucket are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose\nto store objects by using server-side encryption with customer-provided encryption keys (SSE-\nC). To change the encryption type, you must use the REST API, AWS Command Line Interface\n(AWS CLI), or AWS SDKs.\n8. In the Outposts access point settings section, enter the access point name.\nS3 on Outposts access points simplify managing data access at scale for shared datasets in\nS3 on Outposts. Access points are named network endpoints that are attached to Outposts\nbuckets that you can use to perform S3 object operations. For more information, see Access\npoints.\nAccess point names must be unique within the account for this Region and Outpost, and\ncomply with the access point restrictions and limitations.\n9. Choose the VPC for this Amazon S3 on Outposts access point.\nIf you don't have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide.\nA virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.\n10. (Optional for an existing VPC) Choose an Endpoint subnet for your endpoint.\nA subnet is a range of IP addresses in your VPC. If you don't have the subnet that you want,\nchoose Create subnet. For more information, see Networking for S3 on Outposts.\n11. (Optional for an existing VPC) Choose an Endpoint security group for your endpoint.\nCreate a bucket, an access point, and an endpoint API Version 2006-03-01 16",
      "start_idx": 50283,
      "end_idx": 52584,
      "metadata": {
        "num_sentences": 29,
        "num_words": 383,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Encryption",
              "Networking"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts bucket",
            "server-side encryption",
            "SSE-S3",
            "SSE-C",
            "access point",
            "VPC",
            "subnet",
            "security group",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "VPC",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to configure Amazon S3 on Outposts, including enabling versioning, setting encryption options, and configuring access points and VPC settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable versioning for an S3 Outposts bucket?",
            "What encryption options are available for S3 on Outposts?",
            "How do I configure access points and VPC settings for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "AWS CLI",
          "Amazon S3",
          "SSE-C",
          "REST API",
          "VPC",
          "Outposts bucket",
          "security group",
          "SSE-S3",
          "server-side encryption",
          "S3 Versioning",
          "AWS Outposts",
          "access point",
          "subnet"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_23",
      "text": "Amazon S3 on Outposts User Guide\nA security group acts as a virtual firewall to control inbound and outbound traffic.\n12. (Optional for an existing VPC) Choose the Endpoint access type:\n\u2022 Private \u2013 To be used with the VPC.\n\u2022 Customer owned IP \u2013 To be used with a customer-owned IP address pool (CoIP pool) from\nwithin your on-premises network.\n13. (Optional) Specify the Outpost access point policy. The console automatically displays the\nAmazon Resource Name (ARN) for the access point, which you can use in the policy.\n14. Choose Create Outposts bucket.\nNote\nIt can take up to 5 minutes for your Outpost endpoint to be created and your bucket to\nbe ready to use. To configure additional bucket settings, choose View details.\nNext steps\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nAfter you create an S3 on Outposts bucket, access point, and endpoint, you can use the AWS CLI or\nSDK for Java to upload an object to your bucket. For more information, see Upload an object to an\nS3 on Outposts bucket.\nGetting started by using the AWS CLI and SDK for Java\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nNext steps API Version 2006-03-01 17",
      "start_idx": 52586,
      "end_idx": 54609,
      "metadata": {
        "num_sentences": 21,
        "num_words": 349,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC",
            "Endpoint access type",
            "Outpost access point policy",
            "AWS CLI",
            "SDK for Java",
            "REST API",
            "Bucket",
            "Data residency"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "VPC",
            "S3 Outposts storage class",
            "Endpoint access type"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up and configure Amazon S3 on Outposts, including creating buckets, access points, and endpoints to meet data residency requirements and enable local data processing using AWS CLI or SDK tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What is the purpose of an Outpost access point policy?",
            "How can I upload objects to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Data residency",
          "Amazon S3",
          "SDK for Java",
          "AWS Management Console",
          "REST API",
          "VPC",
          "Bucket",
          "Endpoint access type",
          "S3 Outposts storage class",
          "AWS Outposts",
          "Outpost access point policy"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_24",
      "text": "Amazon S3 on Outposts User Guide\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nTo get started with S3 on Outposts, you must create a bucket, an access point, and an endpoint.\nThen, you can upload objects to your bucket. The following examples show you how to get started\nwith S3 on Outposts by using the AWS CLI and SDK for Java. To get started by using the console,\nsee Getting started by using the AWS Management Console.\nTopics\n\u2022 Step 1: Create a bucket\n\u2022 Step 2: Create an access point\n\u2022 Step 3: Create an endpoint\n\u2022 Step 4: Upload an object to an S3 on Outposts bucket\nStep 1: Create a bucket\nThe following AWS CLI and SDK for Java examples show you how to create an S3 on Outposts\nbucket.\nAWS CLI\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your\nown information.\naws s3control create-bucket --bucket example-outposts-bucket --outpost-\nid op-01ac5d28a6a232904\nSDK for Java\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the SDK for Java.\nStep 1: Create a bucket API Version 2006-03-01 18",
      "start_idx": 54611,
      "end_idx": 56167,
      "metadata": {
        "num_sentences": 13,
        "num_words": 267,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "endpoint",
            "AWS CLI",
            "SDK for Java",
            "encryption",
            "tagging",
            "VPC"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS CLI",
            "SDK for Java",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide provides a step-by-step process for creating and using an Amazon S3 on Outposts bucket, including creating buckets, access points, and endpoints, with examples using AWS CLI and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts bucket?",
            "What tools can I use to manage S3 on Outposts buckets?",
            "What are the steps to upload an object to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "tagging",
          "Amazon S3",
          "SDK for Java",
          "VPC",
          "Outposts bucket",
          "encryption",
          "bucket",
          "AWS Outposts",
          "access point",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_25",
      "text": "Amazon S3 on Outposts User Guide\nimport com.amazonaws.services.s3control.model.*;\npublic String createBucket(String bucketName) {\nCreateBucketRequest reqCreateBucket = new CreateBucketRequest()\n.withBucket(bucketName)\n.withOutpostId(OutpostId)\n.withCreateBucketConfiguration(new CreateBucketConfiguration());\nCreateBucketResult respCreateBucket =\ns3ControlClient.createBucket(reqCreateBucket);\nSystem.out.printf(\"CreateBucket Response: %s%n\", respCreateBucket.toString());\nreturn respCreateBucket.getBucketArn();\n}\nStep 2: Create an access point\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point.\nThese examples how you how to create an access point by using the AWS CLI and the SDK for Java.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nAWS CLI\nExample\nThe following AWS CLI example creates an access point for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control create-access-point --account-id 123456789012\n--name example-outposts-access-point --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\" --vpc-configuration VpcId=example-vpc-12345\nStep 2: Create an access point API Version 2006-03-01 19",
      "start_idx": 56169,
      "end_idx": 57789,
      "metadata": {
        "num_sentences": 10,
        "num_words": 190,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "CreateBucketRequest",
            "access point",
            "Outposts bucket",
            "AWS CLI",
            "SDK for Java",
            "virtual-host-style addressing",
            "VpcId",
            "GetObject",
            "PutObject"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "VpcId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Network Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a bucket and an access point for Amazon S3 on Outposts using the AWS SDK for Java and AWS CLI, including code examples and command syntax.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket in Amazon S3 on Outposts?",
            "What is the command to create an access point for an Outposts bucket using AWS CLI?",
            "What is the purpose of virtual-host-style addressing in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "CreateBucketRequest",
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "SDK for Java",
          "VpcId",
          "Outposts bucket",
          "virtual-host-style addressing",
          "access point",
          "Amazon S3 on Outposts",
          "GetObject"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_26",
      "text": "Amazon S3 on Outposts User Guide\nSDK for Java\nExample\nThe following SDK for Java example creates an access point for an Outposts bucket. To use this\nexample, replace the user input placeholders with your own information.\nimport com.amazonaws.services.s3control.model.*;\npublic String createAccessPoint(String bucketArn, String accessPointName) {\nCreateAccessPointRequest reqCreateAP = new CreateAccessPointRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withName(accessPointName)\n.withVpcConfiguration(new VpcConfiguration().withVpcId(\"vpc-12345\"));\nCreateAccessPointResult respCreateAP =\ns3ControlClient.createAccessPoint(reqCreateAP);\nSystem.out.printf(\"CreateAccessPoint Response: %s%n\", respCreateAP.toString());\nreturn respCreateAP.getAccessPointArn();\n}\nStep 3: Create an endpoint\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nThese examples show you how to create an endpoint by using the AWS CLI and the SDK for\nJava. For more information about the permissions required to create and manage endpoints, see\nPermissions for S3 on Outposts endpoints.\nStep 3: Create an endpoint API Version 2006-03-01 20",
      "start_idx": 57791,
      "end_idx": 59410,
      "metadata": {
        "num_sentences": 12,
        "num_words": 208,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-step"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "endpoint",
            "bucket",
            "AWS CLI",
            "SDK for Java",
            "permissions",
            "VPC",
            "API version"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "CreateAccessPointRequest",
            "VpcConfiguration",
            "CreateAccessPointResult",
            "S3ControlClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an access point for an Amazon S3 on Outposts bucket using the SDK for Java and configure an endpoint for routing requests to the access point.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an Amazon S3 on Outposts bucket?",
            "What are the steps to configure an endpoint for S3 on Outposts?",
            "What permissions are required to manage S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "permissions",
          "SDK for Java",
          "Amazon S3 on Outposts",
          "VPC",
          "VpcConfiguration",
          "API version",
          "CreateAccessPointResult",
          "S3ControlClient",
          "bucket",
          "access point",
          "endpoint",
          "CreateAccessPointRequest"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_27",
      "text": "Amazon S3 on Outposts User Guide\nAWS CLI\nExample\nThe following AWS CLI example creates an endpoint for an Outpost by using the VPC resource\naccess type. The VPC is derived from the subnet. To run this command, replace the user input\nplaceholders with your own information.\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1\nThe following AWS CLI example creates an endpoint for an Outpost by using the customer-\nowned IP address pool (CoIP pool) access type. To run this command, replace the user input\nplaceholders with your own information.\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1 --access-type CustomerOwnedIp --\ncustomer-owned-ipv4-pool ipv4pool-coip-12345678901234567\nSDK for Java\nExample\nThe following SDK for Java example creates an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information.\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointRequest;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointResult;\npublic void createEndpoint() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nCreateEndpointRequest createEndpointRequest = new CreateEndpointRequest()\n.withOutpostId(\"op-0d79779cef3c30a40\")\n.withSubnetId(\"subnet-8c7a57c5\")\n.withSecurityGroupId(\"sg-ab19e0d1\")\n.withAccessType(\"CustomerOwnedIp\")\n.withCustomerOwnedIpv4Pool(\"ipv4pool-coip-12345678901234567\");\nStep 3: Create an endpoint API Version 2006-03-01 21",
      "start_idx": 59412,
      "end_idx": 61140,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CLI Usage",
              "SDK Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Outposts",
            "endpoint",
            "Outpost",
            "VPC",
            "subnet",
            "security group",
            "CoIP pool",
            "SDK for Java",
            "access type"
          ],
          "entities": [
            "Amazon S3 Outposts",
            "AWS CLI",
            "SDK for Java",
            "VPC",
            "CoIP pool"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for creating an endpoint for an Amazon S3 Outpost using AWS CLI and SDK for Java, demonstrating both VPC and CoIP pool access types.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for an Amazon S3 Outpost using AWS CLI?",
            "What is the process for setting up an endpoint with a CoIP pool?",
            "How can I use the SDK for Java to create an Amazon S3 Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3 Outposts",
          "AWS CLI",
          "SDK for Java",
          "VPC",
          "access type",
          "security group",
          "Outpost",
          "CoIP pool",
          "subnet",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_29",
      "text": "Amazon S3 on Outposts User Guide\nNetworking for S3 on Outposts\nYou can use Amazon S3 on Outposts to store and retrieve objects on-premises for applications\nthat require local data access, data processing, and data residency. This section describes the\nnetworking requirements for accessing S3 on Outposts.\nTopics\n\u2022 Choosing your networking access type\n\u2022 Accessing your S3 on Outposts buckets and objects\n\u2022 Cross-account elastic network interfaces\nChoosing your networking access type\nYou can access S3 on Outposts from within a VPC or from your on-premises network. You\ncommunicate with your Outpost bucket by using an access point and endpoint connection. This\nconnection keeps traffic between your VPC and your S3 on Outposts buckets within the AWS\nnetwork. When you create an endpoint, you must specify the endpoint access type as either\nPrivate (for VPC routing) or CustomerOwnedIp (for a customer-owned IP address pool [CoIP\npool]).\n\u2022 Private (for VPC routing) \u2013 If you don't specify the access type, S3 on Outposts uses Private\nby default. With the Private access type, instances in your VPC don't require public IP addresses\nto communicate with resources in your Outpost. You can work with S3 on Outposts from within\na VPC. This type of endpoint is accessible from your on-premises network through direct VPC\nrouting. For more information, see Local gateway route tables in the AWS Outposts User Guide.\n\u2022 CustomerOwnedIp (for CoIP pool) \u2013 If you don't default to the Private access type and choose\nCustomerOwnedIp, you must specify an IP address range. You can use this access type to work\nwith S3 on Outposts from both your on-premises network and within a VPC. When accessing S3\non Outposts within a VPC, your traffic is limited to the bandwidth of the local gateway.\nAccessing your S3 on Outposts buckets and objects\nTo access your S3 on Outposts buckets and objects, you must have the following:\n\u2022 An access point for the VPC.\nChoosing your networking access type API Version 2006-03-01 23",
      "start_idx": 61709,
      "end_idx": 63709,
      "metadata": {
        "num_sentences": 16,
        "num_words": 330,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Networking",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "VPC",
            "access point",
            "endpoint connection",
            "Private access type",
            "CustomerOwnedIp",
            "CoIP pool",
            "local gateway",
            "direct VPC routing",
            "bandwidth"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "VPC",
            "CustomerOwnedIp",
            "CoIP pool",
            "AWS Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Networking",
          "secondary_categories": [
            "AWS Networking",
            "Hybrid Cloud"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the networking requirements for accessing Amazon S3 on Outposts, including access types (Private and CustomerOwnedIp) and endpoint configurations for VPC and on-premises networks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the networking requirements for Amazon S3 on Outposts?",
            "How do I configure access points for S3 on Outposts?",
            "What is the difference between Private and CustomerOwnedIp access types?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Networking]",
        "tf_idf_keywords": [
          "CustomerOwnedIp",
          "endpoint connection",
          "local gateway",
          "VPC",
          "bandwidth",
          "AWS Outposts",
          "CoIP pool",
          "access point",
          "Amazon S3 on Outposts",
          "direct VPC routing",
          "Private access type"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_30",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 An endpoint for the same VPC.\n\u2022 An active connection between your Outpost and your AWS Region. For more information about\nhow to connect your Outpost to a Region, see Outpost connectivity to AWS Regions in the AWS\nOutposts User Guide.\nFor more information about accessing buckets and objects in S3 on Outposts, see Working with S3\non Outposts buckets and Working with S3 on Outposts objects.\nCross-account elastic network interfaces\nS3 on Outposts endpoints are named resources with Amazon Resource Names (ARNs). When these\nendpoints are created, AWS Outposts sets up multiple cross-account elastic network interfaces. S3\non Outposts cross-account elastic network interfaces are like other network interfaces with one\nexception: S3 on Outposts associates the cross-account elastic network interfaces to Amazon EC2\ninstances.\nThe S3 on Outposts Domain Name System (DNS) load balances your requests over the cross-\naccount elastic network interface. S3 on Outposts creates the cross-account elastic network\ninterface in your AWS account that is visible from the Network interfaces pane of the Amazon EC2\nconsole.\nFor endpoints that use the CoIP pool access type, S3 on Outposts allocates and associates IP\naddresses with the cross-account elastic network interface from the configured CoIP pool.\nManaging connections using cross-account elastic network interfaces API Version 2006-03-01 24",
      "start_idx": 63711,
      "end_idx": 65133,
      "metadata": {
        "num_sentences": 11,
        "num_words": 216,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "cross-account elastic network interfaces",
            "Amazon Resource Names (ARNs)",
            "CoIP pool",
            "DNS load balancing",
            "Amazon EC2",
            "Outpost connectivity",
            "AWS Regions",
            "endpoints",
            "network interfaces"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "Amazon EC2",
            "CoIP pool",
            "Domain Name System (DNS)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "Amazon EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 on Outposts uses cross-account elastic network interfaces to manage connectivity and load balancing, including details on endpoints, ARNs, and CoIP pool configurations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does S3 on Outposts manage connectivity using elastic network interfaces?",
            "What are the requirements for connecting an Outpost to an AWS Region?",
            "How are IP addresses allocated for S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "DNS load balancing",
          "Amazon EC2",
          "AWS Regions",
          "cross-account elastic network interfaces",
          "endpoints",
          "Amazon Resource Names (ARNs)",
          "AWS Outposts",
          "Domain Name System (DNS)",
          "Outpost connectivity",
          "CoIP pool",
          "network interfaces",
          "Amazon S3 on Outposts",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_31",
      "text": "Amazon S3 on Outposts User Guide\nWorking with S3 on Outposts buckets\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You can use the same APIs\nand features on Outpost buckets as you do on Amazon S3, including access policies, encryption,\nand tagging. For more information, see What is Amazon S3 on Outposts?\nYou communicate with your Outpost buckets by using an access point and endpoint connection\nover a virtual private cloud (VPC). To access your S3 on Outposts buckets and objects, you must\nhave an access point for the VPC and an endpoint for the same VPC. For more information, see\nNetworking for S3 on Outposts.\nBuckets\nIn S3 on Outposts, bucket names are unique to an Outpost and require the AWS Region code for\nthe Region the Outpost is homed to, AWS account ID, Outpost ID, and the bucket name to identify\nthem.\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/bucket/bucket-name\nFor more information, see Resource ARNs for S3 on Outposts.\nAccess points\nAmazon S3 on Outposts supports virtual private cloud (VPC)-only access points as the only means\nto access your Outposts buckets.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nBuckets API Version 2006-03-01 25",
      "start_idx": 65135,
      "end_idx": 67048,
      "metadata": {
        "num_sentences": 15,
        "num_words": 308,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 buckets",
            "AWS Outposts",
            "access points",
            "endpoint connection",
            "virtual private cloud",
            "VPC",
            "storage class",
            "Resource ARNs",
            "encryption"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "VPC",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts, including creating S3 buckets, accessing them via VPC access points, and using the same APIs and features as Amazon S3. It also details bucket naming conventions and access requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and manage S3 buckets on AWS Outposts?",
            "What are the access requirements for S3 on Outposts buckets?",
            "What is the naming convention for S3 on Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "virtual private cloud",
          "storage class",
          "endpoint connection",
          "Resource ARNs",
          "Amazon S3",
          "access points",
          "ARN",
          "VPC",
          "S3 Outposts",
          "encryption",
          "AWS Outposts",
          "S3 buckets",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_32",
      "text": "Amazon S3 on Outposts User Guide\nThe following example shows the ARN format that you use for S3 on Outposts access points. The\naccess point ARN includes the AWS Region code for the Region the Outpost is homed to, AWS\naccount ID, Outpost ID, and access point name.\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nEndpoints\nTo route requests to an S3 on Outposts access point, you must create and configure an S3 on\nOutposts endpoint. With S3 on Outposts endpoints, you can privately connect your VPC to your\nOutpost bucket. S3 on Outposts endpoints are virtual uniform resource identifiers (URIs) of the\nentry point to your S3 on Outposts bucket. They are horizontally scaled, redundant, and highly\navailable VPC components.\nEach virtual private cloud (VPC) on your Outpost can have one associated endpoint, and you can\nhave up to 100 endpoints per Outpost. You must create these endpoints to be able to access your\nOutpost buckets and perform object operations. Creating these endpoints also enables the API\nmodel and behaviors to be the same by allowing the same operations to work in S3 and S3 on\nOutposts.\nAPI operations on S3 on Outposts\nTo manage Outpost bucket API operations, S3 on Outposts hosts a separate endpoint that is\ndistinct from the Amazon S3 endpoint. This endpoint is s3-outposts.region.amazonaws.com.\nTo use Amazon S3 API operations, you must sign the bucket and objects using the correct ARN\nformat. You must pass ARNs to API operations so that Amazon S3 can determine whether the\nrequest is for Amazon S3 (s3-control.region.amazonaws.com) or for S3 on Outposts (s3-\noutposts.region.amazonaws.com). Based on the ARN format, S3 can then sign and route the\nrequest appropriately.\nWhenever a request is sent to the Amazon S3 control plane, the SDK extracts the components from\nthe ARN and includes the additional header x-amz-outpost-id, with the outpost-id value\nextracted from the ARN. The service name from the ARN is used to sign the request before it is\nrouted to the S3 on Outposts endpoint. This behavior applies to all API operations handled by the\ns3control client.\nEndpoints API Version 2006-03-01 26",
      "start_idx": 67050,
      "end_idx": 69216,
      "metadata": {
        "num_sentences": 18,
        "num_words": 345,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "access point",
            "endpoint",
            "VPC",
            "bucket",
            "API operations",
            "x-amz-outpost-id",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "ARN",
            "VPC",
            "Outpost bucket"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts, including details on ARN formatting, endpoint configuration, and API operations for managing Outpost buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for S3 on Outposts access points?",
            "How do I configure an endpoint for S3 on Outposts?",
            "What API operations are supported for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "x-amz-outpost-id",
          "Amazon S3",
          "ARN",
          "API operations",
          "Outpost bucket",
          "VPC",
          "AWS Region",
          "bucket",
          "access point",
          "endpoint",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_34",
      "text": "Amazon S3 on Outposts User Guide\nAPI S3 on Outposts parameter value\nPutAccessPointPolicy Access point name as ARN\nGetAccessPointPolicy Access point name as ARN\nDeleteAccessPointPolicy Access point name as ARN\nCreating and managing S3 on Outposts buckets\nFor more information about creating and managing S3 on Outposts buckets, see the following\ntopics.\nCreating an S3 on Outposts bucket\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nNote\nThe AWS account that creates the bucket owns it and is the only one that can commit\nactions to it. Buckets have configuration properties, such as Outpost, tag, default\nencryption, and access point settings. The access point settings include the virtual private\ncloud (VPC), the access point policy for accessing the objects in the bucket, and other\nmetadata. For more information, see S3 on Outposts specifications.\nIf you want to create a bucket that uses AWS PrivateLink to provide bucket and endpoint\nmanagement access through interface VPC endpoints in your virtual private cloud (VPC), see\nAWS PrivateLink for S3 on Outposts.\nCreating and managing S3 on Outposts buckets API Version 2006-03-01 28",
      "start_idx": 70160,
      "end_idx": 72131,
      "metadata": {
        "num_sentences": 13,
        "num_words": 317,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference",
              "Note"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access point",
            "AWS PrivateLink",
            "VPC",
            "encryption",
            "tagging",
            "API",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "The documentation provides guidance on creating and managing S3 buckets on AWS Outposts, including configuration properties, access policies, and integration with AWS PrivateLink for endpoint management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create an S3 bucket on AWS Outposts?",
            "What are the configuration properties for S3 on Outposts buckets?",
            "How does AWS PrivateLink integrate with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "tagging",
          "Amazon S3",
          "API",
          "AWS Management Console",
          "Amazon S3 on Outposts",
          "VPC",
          "AWS PrivateLink",
          "encryption",
          "bucket",
          "AWS Outposts",
          "access point",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_35",
      "text": "Amazon S3 on Outposts User Guide\nThe following examples show you how to create an S3 on Outposts bucket by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose Create Outposts bucket.\n4. For Bucket name, enter a Domain Name System (DNS)-compliant name for your bucket.\nThe bucket name must:\n\u2022 Be unique within the AWS account, the Outpost, and the AWS Region that the Outpost is\nhomed to.\n\u2022 Be 3\u201363 characters long.\n\u2022 Not contain uppercase characters.\n\u2022 Start with a lowercase letter or number.\nAfter you create the bucket, you can't change its name. For information about naming\nbuckets, see General purpose bucket naming rules in the Amazon S3 User Guide.\nImportant\nAvoid including sensitive information such as account numbers in the bucket name.\nThe bucket name is visible in the URLs that point to the objects in the bucket.\n5. For Outpost, choose the Outpost where you want the bucket to reside.\n6. Under Bucket Versioning, set the S3 Versioning state for your S3 on Outposts bucket to one of\nthe following options:\n\u2022 Disable (default) \u2013 The bucket remains unversioned.\n\u2022 Enable \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID.\nFor more information about S3 Versioning, see Managing S3 Versioning for your S3 on\nOutposts bucket.\nCreating a bucket API Version 2006-03-01 29",
      "start_idx": 72133,
      "end_idx": 73719,
      "metadata": {
        "num_sentences": 25,
        "num_words": 270,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "AWS Management Console",
            "S3 Versioning",
            "DNS-compliant name",
            "bucket creation",
            "AWS CLI",
            "AWS SDK",
            "bucket naming rules",
            "Outpost"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Bucket Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for creating an S3 on Outposts bucket using the AWS Management Console, CLI, or SDK for Java, along with bucket naming rules and versioning options.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts bucket using the AWS Management Console?",
            "What are the naming rules for S3 on Outposts buckets?",
            "How can I enable versioning for an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "AWS Management Console",
          "Outposts bucket",
          "AWS SDK for Java",
          "Outpost",
          "S3 Versioning",
          "bucket creation",
          "AWS Outposts",
          "AWS SDK",
          "bucket naming rules",
          "DNS-compliant name"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_36",
      "text": "Amazon S3 on Outposts User Guide\n7. (Optional) Add any optional tags that you would like to associate with the Outposts bucket.\nYou can use tags to track criteria for individual projects or groups of projects, or to label your\nbuckets by using cost-allocation tags.\nBy default, all objects stored in your Outposts bucket are stored by using server-side\nencryption with Amazon S3 managed encryption keys (SSE-S3). You can also explicitly choose\nto store objects by using server-side encryption with customer-provided encryption keys (SSE-\nC). To change the encryption type, you must use the REST API, AWS Command Line Interface\n(AWS CLI), or AWS SDKs.\n8. In the Outposts access point settings section, enter the access point name.\nS3 on Outposts access points simplify managing data access at scale for shared datasets in\nS3 on Outposts. Access points are named network endpoints that are attached to Outposts\nbuckets that you can use to perform S3 object operations. For more information, see Access\npoints.\nAccess point names must be unique within the account for this Region and Outpost, and\ncomply with the access point restrictions and limitations.\n9. Choose the VPC for this Amazon S3 on Outposts access point.\nIf you don't have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide.\nA virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.\n10. (Optional for an existing VPC) Choose an Endpoint subnet for your endpoint.\nA subnet is a range of IP addresses in your VPC. If you don't have the subnet that you want,\nchoose Create subnet. For more information, see Networking for S3 on Outposts.\n11. (Optional for an existing VPC) Choose an Endpoint security group for your endpoint.\nA security group acts as a virtual firewall to control inbound and outbound traffic.\n12. (Optional for an existing VPC) Choose the Endpoint access type:\n\u2022 Private \u2013 To be used with the VPC.\n\u2022 Customer owned IP \u2013 To be used with a customer-owned IP address pool (CoIP pool) from\nwithin your on-premises network.\nCreating a bucket API Version 2006-03-01 30",
      "start_idx": 73721,
      "end_idx": 76075,
      "metadata": {
        "num_sentences": 30,
        "num_words": 393,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Encryption",
              "Networking"
            ]
          },
          "keywords": [
            "Outposts bucket",
            "server-side encryption",
            "access points",
            "VPC",
            "subnet",
            "security group",
            "endpoint access type",
            "CoIP pool",
            "SSE-S3",
            "SSE-C"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "VPC",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the steps for configuring an Amazon S3 bucket on Outposts, including adding tags, encryption settings, access points, and VPC-related options.",
          "intents": [
            "How-To",
            "Reference",
            "Configuration"
          ],
          "potential_questions": [
            "How do I configure encryption for an Outposts bucket?",
            "What are the requirements for setting up an access point in Amazon S3 on Outposts?",
            "How can I restrict access to an Outposts bucket using a VPC?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "SSE-C",
          "access points",
          "VPC",
          "Outposts bucket",
          "security group",
          "server-side encryption",
          "endpoint access type",
          "SSE-S3",
          "CoIP pool",
          "subnet"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_37",
      "text": "Amazon S3 on Outposts User Guide\n13. (Optional) Specify the Outpost access point policy. The console automatically displays the\nAmazon Resource Name (ARN) for the access point, which you can use in the policy.\n14. Choose Create Outposts bucket.\nNote\nIt can take up to 5 minutes for your Outpost endpoint to be created and your bucket to\nbe ready to use. To configure additional bucket settings, choose View details.\nUsing the AWS CLI\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your own\ninformation.\naws s3control create-bucket --bucket example-outposts-bucket --outpost-\nid op-01ac5d28a6a232904\nUsing the AWS SDK for Java\nExample\nThe following example creates an S3 on Outposts bucket (s3-outposts:CreateBucket) by\nusing the SDK for Java.\nimport com.amazonaws.services.s3control.model.*;\npublic String createBucket(String bucketName) {\nCreateBucketRequest reqCreateBucket = new CreateBucketRequest()\n.withBucket(bucketName)\n.withOutpostId(OutpostId)\n.withCreateBucketConfiguration(new CreateBucketConfiguration());\nCreateBucketResult respCreateBucket =\ns3ControlClient.createBucket(reqCreateBucket);\nSystem.out.printf(\"CreateBucket Response: %s%n\", respCreateBucket.toString());\nCreating a bucket API Version 2006-03-01 31",
      "start_idx": 76077,
      "end_idx": 77430,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point policy",
            "AWS CLI",
            "SDK for Java",
            "CreateBucket",
            "Outpost endpoint",
            "create-bucket",
            "bucket configuration",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "CreateBucketRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an S3 bucket on AWS Outposts using the AWS CLI or SDK for Java, including optional access point policy configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 bucket on AWS Outposts?",
            "What is the command to create an Outposts bucket using AWS CLI?",
            "How can I use the SDK for Java to create an S3 bucket on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreateBucket",
          "Outposts",
          "AWS CLI",
          "CreateBucketRequest",
          "Amazon S3",
          "SDK for Java",
          "API Version 2006-03-01",
          "Outpost endpoint",
          "access point policy",
          "bucket configuration",
          "create-bucket"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_38",
      "text": "Amazon S3 on Outposts User Guide\nreturn respCreateBucket.getBucketArn();\n}\nAdding tags for S3 on Outposts buckets\nYou can add tags for your Amazon S3 on Outposts buckets to track storage costs and other criteria\nfor individual projects or groups of projects.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can change its\ntags.\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose tags you want to edit.\n4. Choose the Properties tab.\n5. Under Tags, choose Edit.\n6. Choose Add new tag, and enter the Key and optional Value.\nAdd any tags that you would like to associate with an Outposts bucket to track other criteria\nfor individual projects or groups of projects.\n7. Choose Save changes.\nUsing the AWS CLI\nThe following AWS CLI example applies a tagging configuration to an S3 on Outposts bucket by\nusing a JSON document in the current folder that specifies tags (tagging.json). To use this\nexample, replace each user input placeholder with your own information.\nAdding tags API Version 2006-03-01 32",
      "start_idx": 77432,
      "end_idx": 78635,
      "metadata": {
        "num_sentences": 20,
        "num_words": 203,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "tags",
            "buckets",
            "AWS Management Console",
            "AWS CLI",
            "tagging",
            "JSON document",
            "storage costs",
            "projects"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "Outposts buckets",
            "tagging.json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Tag Management",
            "AWS Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to add tags to Amazon S3 on Outposts buckets using the AWS Management Console or AWS CLI, enabling tracking of storage costs and project-specific criteria.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 on Outposts bucket?",
            "What steps are required to edit tags using the AWS Management Console?",
            "How do I apply a tagging configuration using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "Outposts",
          "AWS CLI",
          "tagging",
          "Amazon S3",
          "AWS Management Console",
          "JSON document",
          "storage costs",
          "tagging.json",
          "buckets",
          "tags",
          "AWS Outposts",
          "projects"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_39",
      "text": "Amazon S3 on Outposts User Guide\naws s3control put-bucket-tagging --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --tagging file://tagging.json\ntagging.json\n{\n\"TagSet\": [\n{\n\"Key\": \"organization\",\n\"Value\": \"marketing\"\n}\n]\n}\nThe following AWS CLI example applies a tagging configuration to an S3 on Outposts bucket\ndirectly from the command line.\naws s3control put-bucket-tagging --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --tagging 'TagSet=[{Key=organization,Value=marketing}]'\nFor more information about this command, see put-bucket-tagging in the AWS CLI Reference.\nManaging access to an Amazon S3 on Outposts bucket using a\nbucket policy\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nYou can update your bucket policy to manage access to your Amazon S3 on Outposts bucket. For\nmore information, see the following topics.\nTopics\n\u2022 Adding or editing a bucket policy for an Amazon S3 on Outposts bucket\n\u2022 Viewing the bucket policy for your Amazon S3 on Outposts bucket\nUsing bucket policies API Version 2006-03-01 33",
      "start_idx": 78637,
      "end_idx": 80220,
      "metadata": {
        "num_sentences": 10,
        "num_words": 220,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Example",
              "Configuration",
              "Policy Management"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "bucket policy",
            "IAM policy",
            "tagging configuration",
            "permissions",
            "bucket owner",
            "AWS CLI",
            "TagSet",
            "access management",
            "bucket tagging"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "IAM",
            "bucket policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Access Control",
            "Tagging"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to apply tagging configurations and manage access permissions for an Amazon S3 on Outposts bucket using the AWS CLI and bucket policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I apply a tagging configuration to an Amazon S3 on Outposts bucket?",
            "What is the process for managing access to an S3 on Outposts bucket using bucket policies?",
            "What are the size limitations of bucket policies in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "IAM policy",
          "AWS CLI",
          "bucket tagging",
          "bucket owner",
          "Amazon S3",
          "permissions",
          "tagging configuration",
          "Outposts",
          "IAM",
          "TagSet",
          "bucket policy",
          "AWS Outposts",
          "access management",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_40",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Deleting the bucket policy for your Amazon S3 on Outposts bucket\n\u2022 Bucket policy examples\nAdding or editing a bucket policy for an Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nThe following topics show you how to update your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDK for Java.\nUsing the S3 console\nTo create or edit a bucket policy\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose bucket policy you want to edit.\n4. Choose the Permissions tab.\n5. In the Outposts bucket policy section, to create or edit new policy, choose Edit.\nYou can now add or edit the S3 on Outposts bucket policy. For more information, see Setting\nup IAM with S3 on Outposts.\nUsing the AWS CLI\nThe following AWS CLI example puts a policy on an Outposts bucket.\n1. Save the following bucket policy to a JSON file. In this example, the file is named\npolicy1.json. Replace the user input placeholders with your own information.\n{\n\"Version\":\"2012-10-17\",\nAdding a bucket policy API Version 2006-03-01 34",
      "start_idx": 80222,
      "end_idx": 81880,
      "metadata": {
        "num_sentences": 24,
        "num_words": 289,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "bucket policy",
            "IAM policy",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "permissions",
            "JSON file",
            "policy editing"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS Management Console",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create, edit, or delete bucket policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, or AWS SDK for Java. It also provides a step-by-step walkthrough for managing policies and includes an example JSON policy file.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or edit a bucket policy for Amazon S3 on Outposts?",
            "What tools can I use to manage Amazon S3 bucket policies?",
            "What is the size limit for bucket policies in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "IAM policy",
          "AWS CLI",
          "Outposts",
          "Amazon S3",
          "IAM",
          "permissions",
          "AWS Management Console",
          "bucket policy",
          "Outposts bucket",
          "AWS SDK for Java",
          "policy editing",
          "JSON file"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_41",
      "text": "Amazon S3 on Outposts User Guide\n\"Id\":\"testBucketPolicy\",\n\"Statement\":[\n{\n\"Sid\":\"st1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\n}\n]\n}\n2. Submit the JSON file as part of the put-bucket-policy CLI command. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control put-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --policy file://policy1.json\nUsing the AWS SDK for Java\nThe following SDK for Java example puts a policy on an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void putBucketPolicy(String bucketArn) {\nString policy = \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"testBucketPolicy\\\",\n\\\"Statement\\\":[{\\\"Sid\\\":\\\"st1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"\" +\nAccountId+ \"\\\"},\\\"Action\\\":\\\"s3-outposts:*\\\",\\\"Resource\\\":\\\"\" + bucketArn + \"\\\"}]}\";\nPutBucketPolicyRequest reqPutBucketPolicy = new PutBucketPolicyRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withPolicy(policy);\nPutBucketPolicyResult respPutBucketPolicy =\ns3ControlClient.putBucketPolicy(reqPutBucketPolicy);\nAdding a bucket policy API Version 2006-03-01 35",
      "start_idx": 81882,
      "end_idx": 83249,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS CLI",
            "AWS SDK for Java",
            "PutBucketPolicyRequest",
            "s3-outposts",
            "policy JSON",
            "account ID",
            "resource ARN"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "s3-outposts",
            "PutBucketPolicyRequest",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to apply a bucket policy to an Amazon S3 Outposts bucket using the AWS CLI and AWS SDK for Java, including a code example and required JSON structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I apply a bucket policy to an Amazon S3 Outposts bucket?",
            "What is the JSON structure for an Amazon S3 Outposts bucket policy?",
            "How can I use the AWS SDK for Java to manage S3 Outposts bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "resource ARN",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "PutBucketPolicyRequest",
          "bucket policy",
          "AWS SDK for Java",
          "account ID",
          "AWS Outposts",
          "s3-outposts",
          "policy JSON"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_42",
      "text": "Amazon S3 on Outposts User Guide\nSystem.out.printf(\"PutBucketPolicy Response: %s%n\",\nrespPutBucketPolicy.toString());\n}\nViewing the bucket policy for your Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nThe following topics show you how to view your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDK for Java.\nUsing the S3 console\nTo create or edit a bucket policy\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose permission you want to edit.\n4. Choose the Permissions tab.\n5. In the Outposts bucket policy section, you can review your existing bucket policy. For more\ninformation, see Setting up IAM with S3 on Outposts.\nUsing the AWS CLI\nThe following AWS CLI example gets a policy for an Outposts bucket. To run this command, replace\nthe user input placeholders with your own information.\naws s3control get-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nViewing a bucket policy API Version 2006-03-01 36",
      "start_idx": 83251,
      "end_idx": 84901,
      "metadata": {
        "num_sentences": 20,
        "num_words": 255,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Viewing",
              "Editing"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "IAM",
            "permissions",
            "AWS CLI",
            "AWS SDK",
            "S3 console",
            "Outposts bucket",
            "resource-based policy"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS CLI",
            "IAM",
            "AWS SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "AWS Command Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to view and manage bucket policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, or AWS SDK for Java. It includes procedural steps and a code snippet for retrieving bucket policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view a bucket policy for Amazon S3 on Outposts?",
            "What are the steps to edit a bucket policy using the S3 console?",
            "How do I retrieve an Outposts bucket policy using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "IAM",
          "permissions",
          "S3 console",
          "bucket policy",
          "Outposts bucket",
          "resource-based policy",
          "AWS Outposts",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_43",
      "text": "Amazon S3 on Outposts User Guide\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a policy for an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void getBucketPolicy(String bucketArn) {\nGetBucketPolicyRequest reqGetBucketPolicy = new GetBucketPolicyRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nGetBucketPolicyResult respGetBucketPolicy =\ns3ControlClient.getBucketPolicy(reqGetBucketPolicy);\nSystem.out.printf(\"GetBucketPolicy Response: %s%n\",\nrespGetBucketPolicy.toString());\n}\nDeleting the bucket policy for your Amazon S3 on Outposts bucket\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nThe following topics show you how to view your Amazon S3 on Outposts bucket policy by using\nthe AWS Management Console or AWS Command Line Interface (AWS CLI).\nUsing the S3 console\nTo delete a bucket policy\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket whose permission you want to edit.\n4. Choose the Permissions tab.\n5. In the Outposts bucket policy section, choose Delete.\n6. Confirm the deletion.\nDeleting a bucket policy API Version 2006-03-01 37",
      "start_idx": 84903,
      "end_idx": 86497,
      "metadata": {
        "num_sentences": 21,
        "num_words": 227,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS SDK for Java",
            "IAM",
            "permissions",
            "AWS CLI",
            "S3 console",
            "GetBucketPolicy",
            "DeleteBucketPolicy"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java",
            "IAM",
            "GetBucketPolicyRequest",
            "GetBucketPolicyResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Identity and Access Management (IAM)",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS Management Console",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage bucket policies for Amazon S3 on Outposts using the AWS SDK for Java, AWS CLI, and the S3 console, including steps to view and delete policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a bucket policy for an Amazon S3 on Outposts bucket?",
            "What are the steps to delete a bucket policy using the S3 console?",
            "What tools can be used to manage Amazon S3 on Outposts bucket policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "IAM",
          "permissions",
          "DeleteBucketPolicy",
          "GetBucketPolicyResult",
          "S3 console",
          "bucket policy",
          "GetBucketPolicy",
          "GetBucketPolicyRequest",
          "AWS SDK for Java",
          "AWS Identity and Access Management (IAM)",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_44",
      "text": "Amazon S3 on Outposts User Guide\nUsing the AWS CLI\nThe following example deletes the bucket policy for an S3 on Outposts bucket (s3-\noutposts:DeleteBucket) by using the AWS CLI. To run this command, replace the user input\nplaceholders with your own information.\naws s3control delete-bucket-policy --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nBucket policy examples\nWith S3 on Outposts bucket policies, you can secure access to objects in your S3 on Outposts\nbuckets, so that only users with the appropriate permissions can access them. You can even prevent\nauthenticated users without the appropriate permissions from accessing your S3 on Outposts\nresources.\nThis section presents examples of typical use cases for S3 on Outposts bucket policies. To test\nthese policies, replace the user input placeholders with your own information (such as your\nbucket name).\nTo grant or deny permissions to a set of objects, you can use wildcard characters (*) in Amazon\nResource Names (ARNs) and other values. For example, you can control access to groups of objects\nthat begin with a common prefix or end with a given extension, such as .html.\nFor more information about AWS Identity and Access Management (IAM) policy language, see\nSetting up IAM with S3 on Outposts.\nNote\nWhen testing s3outposts permissions by using the Amazon S3 console, you must grant\nadditional permissions that the console requires, such as s3outposts:createendpoint,\ns3outposts:listendpoints, and so on.\nAdditional resources for creating bucket policies\n\u2022 For a list of the IAM policy actions, resources, and condition keys you can use when creating\nan S3 on Outposts bucket policy, see Actions, resources, and condition keys for Amazon S3 on\nOutposts.\nBucket policy examples API Version 2006-03-01 38",
      "start_idx": 86499,
      "end_idx": 88355,
      "metadata": {
        "num_sentences": 12,
        "num_words": 277,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "AWS CLI",
            "permissions",
            "IAM policy",
            "ARN",
            "wildcard characters",
            "authenticated users",
            "S3 console"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "IAM",
            "bucket policy",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an S3 on Outposts bucket policy using the AWS CLI and provides examples of bucket policies for managing access permissions. It also highlights the use of IAM policies and additional permissions required for testing in the Amazon S3 console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a bucket policy for an S3 on Outposts bucket using the AWS CLI?",
            "What are some examples of S3 on Outposts bucket policies?",
            "What permissions are required to test S3 on Outposts policies in the S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "IAM policy",
          "Amazon S3",
          "ARN",
          "permissions",
          "IAM",
          "Amazon S3 on Outposts",
          "wildcard characters",
          "S3 console",
          "bucket policy",
          "authenticated users"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_45",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 For guidance on creating your S3 on Outposts policy, see Adding or editing a bucket policy for an\nAmazon S3 on Outposts bucket.\nTopics\n\u2022 Managing access to an Amazon S3 on Outposts bucket based on specific IP addresses\nManaging access to an Amazon S3 on Outposts bucket based on specific IP\naddresses\nA bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you\ncan use to grant access permissions to your bucket and the objects in it. Only the bucket owner can\nassociate a policy with a bucket. The permissions attached to the bucket apply to all of the objects\nin the bucket that are owned by the bucket owner. Bucket policies are limited to 20 KB in size. For\nmore information, see Bucket policy.\nRestrict access to specific IP addresses\nThe following example denies all users from performing any S3 on Outposts operations on objects\nin the specified buckets unless the request originates from the specified range of IP addresses.\nNote\nWhen restricting access to a specific IP address, make sure that you also specify which VPC\nendpoints, VPC source IP addresses, or external IP addresses can access the S3 on Outposts\nbucket. Otherwise, you might lose access to the bucket if your policy denies all users from\nperforming any s3outposts operations on objects in your S3 on Outposts bucket without\nthe proper permissions already in place.\nThis policy's Condition statement identifies 192.0.2.0/24 as the range of allowed IP version 4\n(IPv4) IP addresses.\nThe Condition block uses the NotIpAddress condition and the aws:SourceIp condition key,\nwhich is an AWS wide condition key. The aws:SourceIp condition key can only be used for public\nIP address ranges. For more information about these condition keys, see Actions, resources, and\ncondition keys for S3 on Outposts. The aws:SourceIp IPv4 values use standard CIDR notation.\nFor more information, see IAM JSON policy elements reference in the IAM User Guide.\nBucket policy examples API Version 2006-03-01 39",
      "start_idx": 88357,
      "end_idx": 90384,
      "metadata": {
        "num_sentences": 16,
        "num_words": 335,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy",
              "Access Control"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "IAM",
            "access permissions",
            "Condition statement",
            "aws:SourceIp",
            "CIDR notation",
            "IP addresses",
            "VPC endpoints"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "VPC",
            "aws:SourceIp",
            "Condition block"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Policy Editor"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage access to Amazon S3 on Outposts buckets by creating bucket policies that restrict access based on specific IP addresses. It includes details about the use of IAM conditions and CIDR notation for specifying allowed IP ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I restrict access to an S3 on Outposts bucket based on IP addresses?",
            "What is the purpose of the aws:SourceIp condition key in bucket policies?",
            "How can I prevent losing access to my S3 on Outposts bucket when setting IP restrictions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "IP addresses",
          "Outposts",
          "Condition block",
          "Amazon S3",
          "IAM",
          "aws:SourceIp",
          "VPC endpoints",
          "VPC",
          "bucket policy",
          "CIDR notation",
          "Condition statement",
          "Amazon S3 on Outposts",
          "access permissions"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_46",
      "text": "Amazon S3 on Outposts User Guide\nWarning\nBefore using this S3 on Outposts policy, replace the 192.0.2.0/24 IP address range in\nthis example with an appropriate value for your use case. Otherwise, you'll lose the ability\nto access your bucket.\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"S3OutpostsPolicyId1\",\n\"Statement\": [\n{\n\"Sid\": \"IPAllow\",\n\"Effect\": \"Deny\",\n\"Principal\": \"*\",\n\"Action\": \"s3outposts:*\",\n\"Resource\": [\n\"arn:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\naccesspoint/EXAMPLE-ACCESS-POINT-NAME\"\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET\"\n],\n\"Condition\": {\n\"NotIpAddress\": {\n\"aws:SourceIp\": \"192.0.2.0/24\"\n}\n}\n}\n]\n}\nAllow both IPv4 and IPv6 addresses\nWhen you start using IPv6 addresses, we recommend that you update all of your organization's\npolicies with your IPv6 address ranges in addition to your existing IPv4 ranges. Doing this will help\nto make sure that the policies continue to work as you make the transition to IPv6.\nThe following S3 on Outposts example bucket policy shows how to mix IPv4 and IPv6 address\nranges to cover all of your organization's valid IP addresses. The example policy allows access to\nthe example IP addresses 192.0.2.1 and 2001:DB8:1234:5678::1 and denies access to the\naddresses 203.0.113.1 and 2001:DB8:1234:5678:ABCD::1.\nBucket policy examples API Version 2006-03-01 40",
      "start_idx": 90386,
      "end_idx": 91758,
      "metadata": {
        "num_sentences": 7,
        "num_words": 183,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Warning",
            "subtypes": [
              "Configuration",
              "Policy",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket policy",
            "IPv4",
            "IPv6",
            "IP address range",
            "NotIpAddress",
            "accesspoint",
            "policy example",
            "SourceIp"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IPv4",
            "IPv6",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Networking",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure bucket policies for Amazon S3 on Outposts, including examples for handling both IPv4 and IPv6 address ranges. It highlights the importance of replacing example IP ranges with appropriate values to avoid losing access to buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an S3 on Outposts bucket policy?",
            "How can I mix IPv4 and IPv6 address ranges in a bucket policy?",
            "What happens if I don't replace the example IP address range in the policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Warning] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "AWS",
          "SourceIp",
          "Outposts",
          "S3 on Outposts",
          "Amazon S3",
          "NotIpAddress",
          "accesspoint",
          "bucket policy",
          "IPv4",
          "IP address range",
          "IPv6",
          "policy example"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_47",
      "text": "Amazon S3 on Outposts User Guide\nThe aws:SourceIp condition key can only be used for public IP address ranges. The IPv6 values\nfor aws:SourceIp must be in standard CIDR format. For IPv6, we support using :: to represent\na range of 0s (for example, 2001:DB8:1234:5678::/64). For more information, see IP address\ncondition operators in the IAM User Guide.\nWarning\nReplace the IP address ranges in this example with appropriate values for your use case\nbefore using this S3 on Outposts policy. Otherwise, you might lose the ability to access\nyour bucket.\n{\n\"Id\": \"S3OutpostsPolicyId2\",\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"AllowIPmix\",\n\"Effect\": \"Allow\",\n\"Principal\": \"*\",\n\"Action\": \"s3outposts:*\",\n\"Resource\": [\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET\",\n\"arn:aws:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-\nID/bucket/DOC-EXAMPLE-BUCKET/*\"\n],\n\"Condition\": {\n\"IpAddress\": {\n\"aws:SourceIp\": [\n\"192.0.2.0/24\",\n\"2001:DB8:1234:5678::/64\"\n]\n},\n\"NotIpAddress\": {\n\"aws:SourceIp\": [\n\"203.0.113.0/24\",\n\"2001:DB8:1234:5678:ABCD::/80\"\n]\n}\n}\n}\nBucket policy examples API Version 2006-03-01 41",
      "start_idx": 91760,
      "end_idx": 92911,
      "metadata": {
        "num_sentences": 7,
        "num_words": 141,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "aws:SourceIp",
            "IPv6",
            "CIDR format",
            "S3 on Outposts",
            "IAM User Guide",
            "bucket policy",
            "IpAddress",
            "NotIpAddress",
            "Principal",
            "Action"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IAM User Guide",
            "CIDR",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Control",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of an Amazon S3 on Outposts bucket policy, highlighting the use of the aws:SourceIp condition key and its limitations for IP address ranges, including IPv6 support in CIDR format.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the correct format for IPv6 values in aws:SourceIp?",
            "How can I configure an S3 on Outposts bucket policy with IP restrictions?",
            "What are the potential risks of using the example IP ranges provided?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Outposts",
          "Amazon S3",
          "IpAddress",
          "aws:SourceIp",
          "API Version 2006-03-01",
          "NotIpAddress",
          "Action",
          "CIDR",
          "bucket policy",
          "CIDR format",
          "Principal",
          "S3 on Outposts",
          "IPv6"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_48",
      "text": "Amazon S3 on Outposts User Guide\n]\n}\nListing Amazon S3 on Outposts buckets\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about working with buckets in S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe following examples show you how to return a list of your S3 on Outposts buckets by using the\nAWS Management Console, AWS CLI, and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Under Outposts buckets, review your list of S3 on Outposts buckets.\nUsing the AWS CLI\nThe following AWS CLI example gets a list of buckets in an Outpost. To use this command, replace\neach user input placeholder with your own information. For more information about this\ncommand, see list-regional-buckets in the AWS CLI Reference.\naws s3control list-regional-buckets --account-id 123456789012 --outpost-\nid op-01ac5d28a6a232904\nListing buckets API Version 2006-03-01 42",
      "start_idx": 92913,
      "end_idx": 94745,
      "metadata": {
        "num_sentences": 18,
        "num_words": 297,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 buckets",
            "AWS Outposts",
            "local data processing",
            "S3 Outposts storage class",
            "access point",
            "endpoint connection",
            "AWS CLI",
            "AWS SDK",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts",
            "AWS Management Console",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list Amazon S3 on Outposts buckets using various tools like the AWS Management Console, AWS CLI, and AWS SDK. It provides procedural instructions and examples for interacting with S3 on Outposts buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list S3 on Outposts buckets using the AWS CLI?",
            "What tools can I use to interact with S3 on Outposts buckets?",
            "What is the S3 Outposts storage class?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Amazon S3",
          "endpoint connection",
          "AWS Management Console",
          "REST API",
          "local data processing",
          "AWS SDK",
          "S3 Outposts",
          "S3 Outposts storage class",
          "AWS Outposts",
          "S3 buckets",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_49",
      "text": "Amazon S3 on Outposts User Guide\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a list of buckets in an Outpost. For more information, see\nListRegionalBuckets in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void listRegionalBuckets() {\nListRegionalBucketsRequest reqListBuckets = new ListRegionalBucketsRequest()\n.withAccountId(AccountId)\n.withOutpostId(OutpostId);\nListRegionalBucketsResult respListBuckets =\ns3ControlClient.listRegionalBuckets(reqListBuckets);\nSystem.out.printf(\"ListRegionalBuckets Response: %s%n\",\nrespListBuckets.toString());\n}\nGetting an S3 on Outposts bucket by using the AWS CLI and the\nSDK for Java\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nThe following examples show you how to get an S3 on Outposts bucket by using the AWS CLI and\nAWS SDK for Java.\nGetting a bucket API Version 2006-03-01 43",
      "start_idx": 94747,
      "end_idx": 96483,
      "metadata": {
        "num_sentences": 11,
        "num_words": 253,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java",
            "ListRegionalBuckets",
            "Outpost buckets",
            "S3 Outposts storage class",
            "AWS CLI",
            "access point",
            "virtual private cloud (VPC)",
            "encryption",
            "tagging"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "AWS CLI",
            "Outposts",
            "S3 Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Amazon S3 on Outposts",
          "secondary_categories": [
            "AWS SDK",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use the AWS SDK for Java and AWS CLI to interact with Amazon S3 buckets on Outposts, including listing and retrieving buckets using code examples and APIs.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How can I list buckets in an AWS Outpost using the AWS SDK for Java?",
            "What is the S3 Outposts storage class and how does it work?",
            "How do I access an S3 bucket on Outposts using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Amazon S3 on Outposts]",
        "tf_idf_keywords": [
          "ListRegionalBuckets",
          "virtual private cloud (VPC)",
          "AWS CLI",
          "tagging",
          "Outpost buckets",
          "Amazon S3",
          "Outposts",
          "S3 Outposts",
          "AWS SDK for Java",
          "encryption",
          "S3 Outposts storage class",
          "AWS Outposts",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_50",
      "text": "Amazon S3 on Outposts User Guide\nNote\nWhen you're working with Amazon S3 on Outposts through the AWS CLI or AWS SDKs, you\nprovide the access point ARN for the Outpost in place of the bucket name. The access point\nARN takes the following form, where region is the AWS Region code for the Region that\nthe Outpost is homed to:\narn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-outposts-access-point\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nUsing the AWS CLI\nThe following S3 on Outposts example gets a bucket by using the AWS CLI. To use this command,\nreplace each user input placeholder with your own information. For more information about\nthis command, see get-bucket in the AWS CLI Reference.\naws s3control get-bucket --account-id 123456789012 --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\nUsing the AWS SDK for Java\nThe following S3 on Outposts example gets a bucket by using the SDK for Java. For more\ninformation, see GetBucket in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void getBucket(String bucketArn) {\nGetBucketRequest reqGetBucket = new GetBucketRequest()\n.withBucket(bucketArn)\n.withAccountId(AccountId);\nGetBucketResult respGetBucket = s3ControlClient.getBucket(reqGetBucket);\nSystem.out.printf(\"GetBucket Response: %s%n\", respGetBucket.toString());\n}\nGetting a bucket API Version 2006-03-01 44",
      "start_idx": 96485,
      "end_idx": 98007,
      "metadata": {
        "num_sentences": 9,
        "num_words": 195,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point ARN",
            "AWS CLI",
            "AWS SDK",
            "get-bucket",
            "Java SDK",
            "Resource ARNs",
            "bucket",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "ARN",
            "Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interact with Amazon S3 on Outposts using the AWS CLI and AWS SDK for Java, focusing on accessing buckets via access point ARNs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS CLI to get a bucket on S3 Outposts?",
            "What is the format of an access point ARN for S3 on Outposts?",
            "How can I use the AWS SDK for Java to retrieve a bucket on S3 Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "Resource ARNs",
          "API Version 2006-03-01",
          "get-bucket",
          "access point ARN",
          "Java SDK",
          "AWS SDK for Java",
          "bucket",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_51",
      "text": "Amazon S3 on Outposts User Guide\nDeleting your Amazon S3 on Outposts bucket\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about working with buckets in S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe AWS account that creates the bucket owns it and is the only one that can delete it.\nNote\n\u2022 Outposts buckets must be empty before they can be deleted.\nThe Amazon S3 console doesn't support S3 on Outposts object actions. To delete objects\nin an S3 on Outposts bucket, you must use the REST API, AWS CLI, or AWS SDKs.\n\u2022 Before you can delete an Outposts bucket, you must delete any Outposts access points\nfor the bucket. For more information, see Deleting an access point.\n\u2022 You cannot recover a bucket after it has been deleted.\nThe following examples show you how to delete an S3 on Outposts bucket by using the AWS\nManagement Console and AWS Command Line Interface (AWS CLI).\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\nDeleting your bucket API Version 2006-03-01 45",
      "start_idx": 98009,
      "end_idx": 99987,
      "metadata": {
        "num_sentences": 20,
        "num_words": 338,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts buckets",
            "AWS CLI",
            "REST API",
            "access points",
            "encryption",
            "tagging",
            "virtual private cloud",
            "data residency",
            "bucket deletion"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an Amazon S3 bucket on AWS Outposts, including prerequisites and supported tools like AWS CLI and REST API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Amazon S3 bucket on Outposts?",
            "What prerequisites are necessary before deleting an Outposts bucket?",
            "Which tools can I use to delete objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "bucket deletion",
          "Outposts buckets",
          "AWS SDKs",
          "AWS CLI",
          "tagging",
          "Amazon S3",
          "virtual private cloud",
          "data residency",
          "access points",
          "REST API",
          "AWS Management Console",
          "encryption",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_52",
      "text": "Amazon S3 on Outposts User Guide\n3. Choose the bucket that you want to delete, and choose Delete.\n4. Confirm the deletion.\nUsing the AWS CLI\nThe following example deletes an S3 on Outposts bucket (s3-outposts:DeleteBucket) by\nusing the AWS CLI. To run this command, replace the user input placeholders with your own\ninformation.\naws s3control delete-bucket --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nWorking with Amazon S3 on Outposts access points\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nNote\nThe AWS account that creates the Outposts bucket owns it and is the only one that can\nassign access points to it.\nThe following sections describe how to create and manage access points for S3 on Outposts\nbuckets.\nTopics\n\u2022 Creating an S3 on Outposts access point\n\u2022 Using a bucket-style alias for your S3 on Outposts bucket access point\n\u2022 Viewing information about an access point configuration\n\u2022 View a list of your Amazon S3 on Outposts access points\nWorking with access points API Version 2006-03-01 46",
      "start_idx": 99989,
      "end_idx": 101530,
      "metadata": {
        "num_sentences": 14,
        "num_words": 239,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "AWS CLI",
            "access points",
            "DeleteBucket",
            "GetObject",
            "PutObject",
            "virtual-host-style addressing",
            "bucket alias",
            "access point configuration"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "access points",
            "DeleteBucket",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an Amazon S3 on Outposts bucket using the AWS CLI and manage access points for Outposts buckets, including creating and configuring them for object operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Amazon S3 on Outposts bucket using the AWS CLI?",
            "How do I create and configure an access point for an Outposts bucket?",
            "What are the requirements for accessing objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "DeleteBucket",
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "access point configuration",
          "access points",
          "API Version 2006-03-01",
          "Outposts bucket",
          "virtual-host-style addressing",
          "bucket alias",
          "Amazon S3 on Outposts",
          "GetObject"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_53",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Deleting an access point\n\u2022 Adding or editing an access point policy\n\u2022 Viewing an access point policy for an S3 on Outposts access point\nCreating an S3 on Outposts access point\nTo access your Amazon S3 on Outposts bucket, you must create and configure an access point.\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following examples show you how to create an S3 on Outposts access point by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nNote\nThe AWS account that creates the Outposts bucket owns it and is the only one that can\nassign access points to it.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to create an Outposts access point for.\n4. Choose the Outposts access points tab.\n5. In the Outposts access points section, choose Create Outposts access point.\n6. In Outposts access point settings, enter a name for the access point, and then choose the\nvirtual private cloud (VPC) for the access point.\n7. If you want to add a policy for your access point, enter it in the Outposts access point policy\nsection.\nFor more information, see Setting up IAM with S3 on Outposts.\nCreating an access point API Version 2006-03-01 47",
      "start_idx": 101532,
      "end_idx": 103241,
      "metadata": {
        "num_sentences": 23,
        "num_words": 292,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "access point",
            "virtual-host-style addressing",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK",
            "IAM",
            "GetObject",
            "PutObject"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and configure an access point for Amazon S3 on Outposts buckets using various tools like the AWS Management Console, AWS CLI, and AWS SDK for Java. Access points are required for accessing objects in Outposts buckets and support virtual-host-style addressing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an Amazon S3 on Outposts bucket?",
            "What tools can be used to configure an S3 on Outposts access point?",
            "What are the requirements for accessing objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "IAM",
          "S3 on Outposts",
          "AWS Management Console",
          "Outposts bucket",
          "virtual-host-style addressing",
          "AWS SDK for Java",
          "AWS SDK",
          "access point",
          "GetObject"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_54",
      "text": "Amazon S3 on Outposts User Guide\nUsing the AWS CLI\nExample\nThe following AWS CLI example creates an access point for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control create-access-point --account-id 123456789012\n--name example-outposts-access-point --bucket \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\" --vpc-configuration VpcId=example-vpc-12345\nUsing the AWS SDK for Java\nExample\nThe following SDK for Java example creates an access point for an Outposts bucket. To use this\nexample, replace the user input placeholders with your own information.\nimport com.amazonaws.services.s3control.model.*;\npublic String createAccessPoint(String bucketArn, String accessPointName) {\nCreateAccessPointRequest reqCreateAP = new CreateAccessPointRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withName(accessPointName)\n.withVpcConfiguration(new VpcConfiguration().withVpcId(\"vpc-12345\"));\nCreateAccessPointResult respCreateAP =\ns3ControlClient.createAccessPoint(reqCreateAP);\nSystem.out.printf(\"CreateAccessPoint Response: %s%n\", respCreateAP.toString());\nreturn respCreateAP.getAccessPointArn();\n}\nUsing a bucket-style alias for your S3 on Outposts bucket access point\nWith S3 on Outposts, you must use access points to access any object in an Outposts bucket. Every\ntime you create an access point for a bucket, S3 on Outposts automatically generates an access\npoint alias. You can use this access point alias instead of an access point ARN for any data plane\nUsing a bucket-style alias for your access point API Version 2006-03-01 48",
      "start_idx": 103243,
      "end_idx": 104908,
      "metadata": {
        "num_sentences": 8,
        "num_words": 191,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "access point",
            "AWS CLI",
            "AWS SDK for Java",
            "VpcConfiguration",
            "access point alias",
            "bucket ARN",
            "data plane",
            "CreateAccessPointRequest"
          ],
          "entities": [
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3",
            "Outposts bucket",
            "VpcId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an access point for an Amazon S3 Outposts bucket using AWS CLI and AWS SDK for Java, including details about access point aliases and VPC configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an access point for an S3 Outposts bucket?",
            "What is the purpose of an access point alias in S3 on Outposts?",
            "How do I use the AWS SDK for Java to configure an access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "data plane",
          "AWS CLI",
          "Amazon S3",
          "VpcConfiguration",
          "VpcId",
          "Outposts bucket",
          "AWS SDK for Java",
          "access point alias",
          "bucket ARN",
          "AWS Outposts",
          "access point",
          "CreateAccessPointRequest"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_55",
      "text": "Amazon S3 on Outposts User Guide\noperation. For example, you can use an access point alias to perform object-level operations such\nas PUT, GET, LIST, and more. For a list of these operations, see Amazon S3 API operations for\nmanaging objects.\nThe following examples show an ARN and access point alias for an access point named my-\naccess-point.\n\u2022 Access point ARN \u2013 arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/my-\naccess-point\n\u2022 Access point alias \u2013 my-access-\npo-o01ac5d28a6a232904e8xz5w8ijx1qzlbp3i3kuse10--op-s3\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the AWS General\nReference.\nFor more information about access point aliases, see the following topics.\nTopics\n\u2022 Access point aliases\n\u2022 Using an access point alias in an S3 on Outposts object operation\n\u2022 Limitations\nAccess point aliases\nAn access point alias is created within the same namespace as an S3 on Outposts bucket. When you\ncreate an access point, S3 on Outposts automatically generates an access point alias that cannot be\nchanged. An access point alias meets all the requirements of a valid S3 on Outposts bucket name\nand consists of the following parts:\naccess point name prefix-metadata--op-s3\nNote\nThe --op-s3 suffix is reserved for access point aliases, we recommend that you don't use\nit for bucket or access point names. For more information about S3 on Outposts bucket-\nnaming rules, see Working with S3 on Outposts buckets.\nUsing a bucket-style alias for your access point API Version 2006-03-01 49",
      "start_idx": 104910,
      "end_idx": 106448,
      "metadata": {
        "num_sentences": 11,
        "num_words": 235,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "ARN",
            "access point alias",
            "S3 API operations",
            "bucket name",
            "namespace",
            "metadata",
            "object-level operations"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "access point alias",
            "AWS General Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the use of access point aliases in Amazon S3 on Outposts, including their structure, naming rules, and examples of ARNs and aliases.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is an access point alias in Amazon S3 on Outposts?",
            "How do I use an access point alias for object-level operations?",
            "What are the naming rules for S3 on Outposts buckets and aliases?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts",
          "bucket name",
          "Amazon S3",
          "ARN",
          "object-level operations",
          "AWS General Reference",
          "access point alias",
          "namespace",
          "AWS Outposts",
          "metadata",
          "access point",
          "S3 API operations"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_56",
      "text": "Amazon S3 on Outposts User Guide\nFinding the access point alias\nThe following examples show you how to find an access point alias by using the Amazon S3\nconsole and the AWS CLI.\nExample : Find and copy an access point alias in the Amazon S3 console\nAfter you create an access point in the console, you can get the access point alias from the Access\nPoint alias column in the Access Points list.\nTo copy an access point alias\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. To copy the access point alias, do one of the following:\n\u2022 In the Access Points list, select the option button next to the access point name, and then\nchoose Copy Access Point alias.\n\u2022 Choose the access point name. Then, under Outposts access point overview, copy the\naccess point alias.\nExample : Create an access point by using the AWS CLI and find the access point alias in the\nresponse\nThe following AWS CLI example for the create-access-point command creates the access\npoint and returns the automatically generated access point alias. To run this command, replace the\nuser input placeholders with your own information.\naws s3control create-access-point --bucket example-outposts-bucket --name example-\noutposts-access-point --account-id 123456789012\n{\n\"AccessPointArn\":\n\"arn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-outposts-access-point\",\n\"Alias\": \"example-outp-o01ac5d28a6a232904e8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\nUsing a bucket-style alias for your access point API Version 2006-03-01 50",
      "start_idx": 106450,
      "end_idx": 108052,
      "metadata": {
        "num_sentences": 13,
        "num_words": 233,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point alias",
            "AWS CLI",
            "create-access-point",
            "console",
            "AccessPointArn",
            "bucket-style alias",
            "API Version",
            "Outposts access points"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AccessPointArn",
            "Outposts",
            "Alias"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon S3 console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to find an access point alias for Amazon S3 on Outposts using both the AWS console and AWS CLI, with detailed steps and examples provided.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I find an access point alias in Amazon S3 on Outposts?",
            "What is the process to create an access point using AWS CLI?",
            "Where can I locate the access point alias in the Amazon S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "create-access-point",
          "AccessPointArn",
          "Outposts",
          "AWS CLI",
          "API Version",
          "Amazon S3",
          "Outposts access points",
          "Alias",
          "console",
          "access point alias",
          "AWS Outposts",
          "bucket-style alias"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_57",
      "text": "Amazon S3 on Outposts User Guide\nExample : Get an access point alias by using the AWS CLI\nThe following AWS CLI example for the get-access-point command returns information about\nthe specified access point. This information includes the access point alias. To run this command,\nreplace the user input placeholders with your own information.\naws s3control get-access-point --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --name example-outposts-access-point --account-id 123456789012\n{\n\"Name\": \"example-outposts-access-point\",\n\"Bucket\": \"example-outposts-bucket\",\n\"NetworkOrigin\": \"Vpc\",\n\"VpcConfiguration\": {\n\"VpcId\": \"vpc-01234567890abcdef\"\n},\n\"PublicAccessBlockConfiguration\": {\n\"BlockPublicAcls\": true,\n\"IgnorePublicAcls\": true,\n\"BlockPublicPolicy\": true,\n\"RestrictPublicBuckets\": true\n},\n\"CreationDate\": \"2022-09-18T17:49:15.584000+00:00\",\n\"Alias\": \"example-outp-o0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\nExample : List access points to find an access point alias by using the AWS CLI\nThe following AWS CLI example for the list-access-points command lists information about\nthe specified access point. This information includes the access point alias. To run this command,\nreplace the user input placeholders with your own information.\naws s3control list-access-points --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\n{\n\"AccessPointList\": [\n{\n\"Name\": \"example-outposts-access-point\",\n\"NetworkOrigin\": \"Vpc\",\nUsing a bucket-style alias for your access point API Version 2006-03-01 51",
      "start_idx": 108054,
      "end_idx": 109703,
      "metadata": {
        "num_sentences": 7,
        "num_words": 174,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CLI Usage",
              "Access Point Management"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point alias",
            "AWS CLI",
            "get-access-point",
            "list-access-points",
            "VpcConfiguration",
            "PublicAccessBlockConfiguration",
            "bucket-style alias",
            "account-id"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "VpcConfiguration",
            "PublicAccessBlockConfiguration",
            "example-outposts-access-point"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of using the AWS CLI to retrieve and list access point aliases for Amazon S3 on Outposts, including details about their configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an access point alias using the AWS CLI?",
            "What information is included when listing access points with AWS CLI?",
            "How can I configure PublicAccessBlock settings for an access point?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "example-outposts-access-point",
          "PublicAccessBlockConfiguration",
          "VpcConfiguration",
          "account-id",
          "access point alias",
          "list-access-points",
          "get-access-point",
          "bucket-style alias"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_58",
      "text": "Amazon S3 on Outposts User Guide\n\"VpcConfiguration\": {\n\"VpcId\": \"vpc-01234567890abcdef\"\n},\n\"Bucket\": \"example-outposts-bucket\",\n\"AccessPointArn\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\",\n\"Alias\": \"example-outp-o0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3\"\n}\n]\n}\nUsing an access point alias in an S3 on Outposts object operation\nWhen adopting access points, you can use access point alias without requiring extensive code\nchanges.\nThis AWS CLI example shows a get-object operation for an S3 on Outposts bucket. This example\nuses the access point alias as the value for --bucket instead of the full access point ARN.\naws s3api get-object --bucket my-access-po-\no0b1d075431d83bebde8xz5w8ijx1qzlbp3i3kuse10--op-s3 --key testkey sample-object.rtf\n{\n\"AcceptRanges\": \"bytes\",\n\"LastModified\": \"2020-01-08T22:16:28+00:00\",\n\"ContentLength\": 910,\n\"ETag\": \"\\\"00751974dc146b76404bb7290f8f51bb\\\"\",\n\"VersionId\": \"null\",\n\"ContentType\": \"text/rtf\",\n\"Metadata\": {}\n}\nLimitations\n\u2022 Aliases cannot be configured by customers.\n\u2022 Aliases cannot be deleted or modified or disabled on an access point.\n\u2022 You can't use an access point alias for S3 on Outposts control plane operations. For a list of S3 on\nOutposts control plane operations, see Amazon S3 Control API operations for managing buckets.\n\u2022 Aliases cannot be used in AWS Identity and Access Management (IAM) policies.\nUsing a bucket-style alias for your access point API Version 2006-03-01 52",
      "start_idx": 109705,
      "end_idx": 111214,
      "metadata": {
        "num_sentences": 9,
        "num_words": 187,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Example",
              "Limitations"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Access Point Alias",
            "Bucket",
            "AWS CLI",
            "get-object",
            "Metadata",
            "IAM Policies",
            "Control Plane Operations",
            "ContentType"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "VpcConfiguration",
            "AccessPointArn",
            "AWS CLI",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use access point aliases for Amazon S3 on Outposts, including an example of a get-object operation and limitations of using aliases.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use an access point alias in Amazon S3 on Outposts?",
            "What are the limitations of access point aliases?",
            "Can I use access point aliases in IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM Policies",
          "Outposts",
          "AWS CLI",
          "AccessPointArn",
          "Amazon S3",
          "IAM",
          "Metadata",
          "Control Plane Operations",
          "VpcConfiguration",
          "Bucket",
          "ContentType",
          "get-object",
          "Access Point Alias",
          "AWS Outposts",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_59",
      "text": "Amazon S3 on Outposts User Guide\nViewing information about an access point configuration\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following topics show you how to return configuration information for an S3 on Outposts\naccess point by using the AWS Management Console, AWS Command Line Interface (AWS CLI), and\nAWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Choose the Outposts access point that you want to view configuration details for.\n4. Under Outposts access point overview, review the access point configuration details.\nUsing the AWS CLI\nThe following AWS CLI example gets an access point for an Outposts bucket. Replace the user\ninput placeholders with your own information.\naws s3control get-access-point --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following SDK for Java example gets an access point for an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void getAccessPoint(String accessPointArn) {\nGetAccessPointRequest reqGetAP = new GetAccessPointRequest()\n.withAccountId(AccountId)\n.withName(accessPointArn);\nViewing access point configuration API Version 2006-03-01 53",
      "start_idx": 111216,
      "end_idx": 112946,
      "metadata": {
        "num_sentences": 18,
        "num_words": 235,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command-Line Example",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "AWS CLI",
            "AWS SDK for Java",
            "virtual-host-style addressing",
            "GetObject",
            "PutObject",
            "configuration details",
            "S3 console"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts bucket",
            "access points"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Point Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to view configuration details for Amazon S3 on Outposts access points using the AWS Management Console, AWS CLI, or AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view the configuration details of an S3 on Outposts access point?",
            "What is the AWS CLI command to get an Outposts access point?",
            "How do I use the AWS SDK for Java to retrieve access point details?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "AWS Management Console",
          "access points",
          "S3 console",
          "virtual-host-style addressing",
          "Outposts bucket",
          "AWS SDK for Java",
          "configuration details",
          "AWS Outposts",
          "GetObject"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_60",
      "text": "Amazon S3 on Outposts User Guide\nGetAccessPointResult respGetAP = s3ControlClient.getAccessPoint(reqGetAP);\nSystem.out.printf(\"GetAccessPoint Response: %s%n\", respGetAP.toString());\n}\nView a list of your Amazon S3 on Outposts access points\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following topics show you how to return a list of your S3 on Outposts access points by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Under Outposts access points, review your list of S3 on Outposts access points.\nUsing the AWS CLI\nThe following AWS CLI example lists the access points for an Outposts bucket. To run this\ncommand, replace the user input placeholders with your own information.\naws s3control list-access-points --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\nUsing the AWS SDK for Java\nThe following SDK for Java example lists the access points for an Outposts bucket.\nimport com.amazonaws.services.s3control.model.*;\npublic void listAccessPoints(String bucketArn) {\nListing access points API Version 2006-03-01 54",
      "start_idx": 112948,
      "end_idx": 114612,
      "metadata": {
        "num_sentences": 16,
        "num_words": 232,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "AWS CLI",
            "AWS SDK for Java",
            "buckets",
            "GetObject",
            "PutObject",
            "virtual-host-style addressing",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "access points"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Development",
            "Data Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon S3 Console"
          ]
        },
        "semantic": {
          "summary": "This document explains how to list Amazon S3 on Outposts access points using the AWS Management Console, AWS CLI, and AWS SDK for Java, including code examples and procedural steps.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list Amazon S3 on Outposts access points?",
            "What tools can I use to manage S3 on Outposts access points?",
            "What is the role of access points in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "AWS Management Console",
          "access points",
          "API Version 2006-03-01",
          "virtual-host-style addressing",
          "AWS SDK for Java",
          "buckets",
          "AWS Outposts",
          "GetObject"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_61",
      "text": "Amazon S3 on Outposts User Guide\nListAccessPointsRequest reqListAPs = new ListAccessPointsRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nListAccessPointsResult respListAPs = s3ControlClient.listAccessPoints(reqListAPs);\nSystem.out.printf(\"ListAccessPoints Response: %s%n\", respListAPs.toString());\n}\nDeleting an access point\nAccess points simplify managing data access at scale for shared datasets in Amazon S3. Access\npoints are named network endpoints that are attached to buckets that you can use to perform\nAmazon S3 object operations, such as GetObject and PutObject. With S3 on Outposts, you\nmust use access points to access any object in an Outposts bucket. Access points support only\nvirtual-host-style addressing.\nThe following examples show you how to delete an access point by using the AWS Management\nConsole and the AWS Command Line Interface (AWS CLI).\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. In the Outposts access points section, choose the Outposts access point that you want to\ndelete.\n4. Choose Delete.\n5. Confirm the deletion.\nUsing the AWS CLI\nThe following AWS CLI example deletes an Outposts access point. To run this command, replace\nthe user input placeholders with your own information.\naws s3control delete-access-point --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nDeleting an access point API Version 2006-03-01 55",
      "start_idx": 114614,
      "end_idx": 116186,
      "metadata": {
        "num_sentences": 18,
        "num_words": 204,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Access Points",
            "ListAccessPointsRequest",
            "ListAccessPointsResult",
            "S3 Control Client",
            "Delete Access Point",
            "AWS CLI",
            "Virtual-host-style addressing",
            "GetObject"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "Outposts",
            "Access Points",
            "S3 Control Client"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Control API"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list and delete access points for Amazon S3 on Outposts using code examples, the AWS Management Console, and the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list access points for Amazon S3 on Outposts?",
            "What are the steps to delete an access point using the AWS CLI?",
            "What is the purpose of access points in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Delete Access Point",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "Access Points",
          "Virtual-host-style addressing",
          "ListAccessPointsResult",
          "AWS Outposts",
          "S3 Control API",
          "S3 Control Client",
          "GetObject",
          "ListAccessPointsRequest"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_62",
      "text": "Amazon S3 on Outposts User Guide\nAdding or editing an access point policy\nAccess points have distinct permissions and network controls that Amazon S3 on Outposts\napplies for any request that is made through that access point. Each access point enforces a\ncustomized access point policy that works in conjunction with the bucket policy that is attached to\nthe underlying bucket. For more information, see Access points.\nThe following topics show you how to add or edit the access point policy for your S3 on Outposts\naccess point by using the AWS Management Console, AWS Command Line Interface (AWS CLI), and\nAWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to edit the access point policy for.\n4. Choose the Outposts access points tab.\n5. In the Outposts access points section, choose the access point whose policy you want to edit,\nand choose Edit policy.\n6. Add or edit the policy in the Outposts access point policy section. For more information, see\nSetting up IAM with S3 on Outposts.\nUsing the AWS CLI\nThe following AWS CLI example puts a policy on an Outposts access point.\n1. Save the following access point policy to a JSON file. In this example, the file is named\nappolicy1.json. Replace the user input placeholders with your own information.\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"exampleAccessPointPolicy\",\n\"Statement\":[\n{\n\"Sid\":\"st1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\nAdding an access point policy API Version 2006-03-01 56",
      "start_idx": 116188,
      "end_idx": 117800,
      "metadata": {
        "num_sentences": 23,
        "num_words": 257,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point policy",
            "bucket policy",
            "AWS Management Console",
            "AWS CLI",
            "IAM",
            "JSON file",
            "policy enforcement",
            "network controls"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "AWS CLI",
            "AWS SDK for Java",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add or edit access point policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, or AWS SDK for Java, including step-by-step instructions and a code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I edit an access point policy for Amazon S3 on Outposts?",
            "What tools can be used to manage access point policies for S3 on Outposts?",
            "What is the structure of an access point policy JSON file?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "IAM",
          "network controls",
          "AWS Management Console",
          "policy enforcement",
          "bucket policy",
          "AWS SDK for Java",
          "access point policy",
          "JSON file"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_63",
      "text": "Amazon S3 on Outposts User Guide\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point\n}\n]\n}\n2. Submit the JSON file as part of the put-access-point-policy CLI command. Replace the\nuser input placeholders with your own information.\naws s3control put-access-point-policy --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --policy file://appolicy1.json\nUsing the AWS SDK for Java\nThe following SDK for Java example puts a policy on an Outposts access point.\nimport com.amazonaws.services.s3control.model.*;\npublic void putAccessPointPolicy(String accessPointArn) {\nString policy = \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"testAccessPointPolicy\\\",\n\\\"Statement\\\":[{\\\"Sid\\\":\\\"st1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"\" +\nAccountId + \"\\\"},\\\"Action\\\":\\\"s3-outposts:*\\\",\\\"Resource\\\":\\\"\" + accessPointArn +\n\"\\\"}]}\";\nPutAccessPointPolicyRequest reqPutAccessPointPolicy = new\nPutAccessPointPolicyRequest()\n.withAccountId(AccountId)\n.withName(accessPointArn)\n.withPolicy(policy);\nPutAccessPointPolicyResult respPutAccessPointPolicy =\ns3ControlClient.putAccessPointPolicy(reqPutAccessPointPolicy);\nSystem.out.printf(\"PutAccessPointPolicy Response: %s%n\",\nrespPutAccessPointPolicy.toString());\nprintWriter.printf(\"PutAccessPointPolicy Response: %s%n\",\nrespPutAccessPointPolicy.toString());\n}\nAdding an access point policy API Version 2006-03-01 57",
      "start_idx": 117802,
      "end_idx": 119336,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Command Line Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Access Point Policy",
            "AWS CLI",
            "AWS SDK for Java",
            "Policy JSON",
            "ARN",
            "Account ID",
            "PutAccessPointPolicyRequest",
            "s3ControlClient"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "Access Point ARN",
            "PutAccessPointPolicyRequest",
            "s3ControlClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Development",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to add a policy to an Amazon S3 Outposts access point using AWS CLI and AWS SDK for Java, including code examples and JSON structure for policy configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an access point policy for Amazon S3 Outposts?",
            "What is the JSON structure required for an Outposts access point policy?",
            "How can I use AWS SDK for Java to manage access point policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Access Point ARN",
          "Amazon S3",
          "ARN",
          "Policy JSON",
          "Access Point Policy",
          "Account ID",
          "PutAccessPointPolicyRequest",
          "AWS SDK for Java",
          "s3ControlClient",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_64",
      "text": "Amazon S3 on Outposts User Guide\nViewing an access point policy for an S3 on Outposts access point\nAccess points have distinct permissions and network controls that Amazon S3 on Outposts\napplies for any request that is made through that access point. Each access point enforces a\ncustomized access point policy that works in conjunction with the bucket policy that is attached to\nthe underlying bucket. For more information, see Access points.\nFor more information about working with access points in S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe following topics show you how to view your S3 on Outposts access point policy by using the\nAWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Choose the Outposts access point that you want to view the policy for.\n4. On the Permissions tab, review the S3 on Outposts access point policy.\n5. To edit the access point policy, see Adding or editing an access point policy.\nUsing the AWS CLI\nThe following AWS CLI example gets a policy for an Outposts access point. To run this command,\nreplace the user input placeholders with your own information.\naws s3control get-access-point-policy --account-id 123456789012 --name arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following SDK for Java example gets a policy for an Outposts access point.\nimport com.amazonaws.services.s3control.model.*;\npublic void getAccessPointPolicy(String accessPointArn) {\nGetAccessPointPolicyRequest reqGetAccessPointPolicy = new\nGetAccessPointPolicyRequest()\nViewing an access point policy API Version 2006-03-01 58",
      "start_idx": 119338,
      "end_idx": 121175,
      "metadata": {
        "num_sentences": 20,
        "num_words": 267,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access point policy",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts access points",
            "bucket policy",
            "permissions",
            "network controls",
            "access point"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts access points",
            "Access point policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to view and manage access point policies for Amazon S3 on Outposts using the AWS Management Console, AWS CLI, and AWS SDK for Java. It includes step-by-step instructions and code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I view an access point policy for S3 on Outposts?",
            "What tools can I use to manage S3 on Outposts access point policies?",
            "How do I retrieve an access point policy using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Amazon S3",
          "network controls",
          "permissions",
          "AWS Management Console",
          "Outposts access points",
          "bucket policy",
          "Access point policy",
          "AWS SDK for Java",
          "access point policy",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_65",
      "text": "Amazon S3 on Outposts User Guide\n.withAccountId(AccountId)\n.withName(accessPointArn);\nGetAccessPointPolicyResult respGetAccessPointPolicy =\ns3ControlClient.getAccessPointPolicy(reqGetAccessPointPolicy);\nSystem.out.printf(\"GetAccessPointPolicy Response: %s%n\",\nrespGetAccessPointPolicy.toString());\nprintWriter.printf(\"GetAccessPointPolicy Response: %s%n\",\nrespGetAccessPointPolicy.toString());\n}\nWorking with Amazon S3 on Outposts endpoints\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nAfter you create an endpoint, you can use the \u2018Status\u2019 field, to understand the state of the\nendpoint. If your Outposts is offline, it will return a CREATE_FAILED. You can check your service link\nconnection, delete the endpoint, and retry the create operation after your connection has resumed.\nFor a list of additional error codes, see below. For more information, see Endpoints.\nAPI Status Failed Reason Error Message - Failed Reason\nCode\nCreateEnd Create_Fa OutpostNotReachable Endpoint could not be created as\npoint iled the service link connection to your\nOutposts home Region is down. Check\nyour connection, delete the endpoint,\nand try again.\nCreateEnd Create_Fa InternalError Endpoint could not be created due\npoint iled to Internal Error. Please delete the\nendpoint and create again.\nWorking with endpoints API Version 2006-03-01 59",
      "start_idx": 121177,
      "end_idx": 123004,
      "metadata": {
        "num_sentences": 16,
        "num_words": 248,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "endpoint",
            "service link",
            "VPC",
            "CREATE_FAILED",
            "error codes",
            "API",
            "InternalError"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "access point ARN",
            "service link connection",
            "Outposts home region",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and manage Amazon S3 on Outposts endpoints, including error handling and troubleshooting for endpoint creation issues.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for Amazon S3 on Outposts?",
            "What are the error codes for endpoint creation failures?",
            "How can I troubleshoot a CREATE_FAILED error for an Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CREATE_FAILED",
          "Outposts",
          "Amazon S3",
          "API",
          "Outposts home region",
          "Amazon S3 on Outposts",
          "VPC",
          "access point ARN",
          "service link",
          "error codes",
          "access point",
          "endpoint",
          "service link connection",
          "InternalError"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_66",
      "text": "Amazon S3 on Outposts User Guide\nAPI Status Failed Reason Error Message - Failed Reason\nCode\nDeleteEnd Delete_Fa OutpostNotReachable Endpoint could not be deleted as\npoint iled the service link connection to your\nOutposts home Region is down. Check\nyour connection and please try again.\nDeleteEnd Delete_Fa InternalError Endpoint could not be deleted due to\npoint iled Internal Error. Please try again.\nFor more information about working with buckets on S3 on Outposts, see Working with S3 on\nOutposts buckets.\nThe following sections describe how to create and manage endpoints for S3 on Outposts.\nTopics\n\u2022 Creating an endpoint on an Outpost\n\u2022 Viewing a list of your Amazon S3 on Outposts endpoints\n\u2022 Deleting an Amazon S3 on Outposts endpoint\nCreating an endpoint on an Outpost\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nPermissions\nFor more information about the permissions that are required to create an endpoint, see\nPermissions for S3 on Outposts endpoints.\nWhen you create an endpoint, S3 on Outposts also creates a service-linked role in your AWS\naccount. For more information, see Using service-linked roles for Amazon S3 on Outposts.\nCreating an endpoint API Version 2006-03-01 60",
      "start_idx": 123006,
      "end_idx": 124698,
      "metadata": {
        "num_sentences": 16,
        "num_words": 273,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "endpoint",
            "service link",
            "VPC",
            "permissions",
            "service-linked role",
            "buckets",
            "network requirements",
            "InternalError"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "OutpostNotReachable",
            "InternalError",
            "AWS",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to create, manage, and troubleshoot endpoints for Amazon S3 on Outposts, including prerequisites, permissions, and error handling for failed operations.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for Amazon S3 on Outposts?",
            "What permissions are required to create an S3 on Outposts endpoint?",
            "How can I troubleshoot endpoint deletion errors in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "OutpostNotReachable",
          "AWS",
          "Outposts",
          "Amazon S3",
          "permissions",
          "Amazon S3 on Outposts",
          "VPC",
          "service-linked role",
          "network requirements",
          "service link",
          "buckets",
          "AWS Outposts",
          "endpoint",
          "InternalError"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_67",
      "text": "Amazon S3 on Outposts User Guide\nThe following examples show you how to create an S3 on Outposts endpoint by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. Choose the Outposts endpoints tab.\n4. Choose Create Outposts endpoint.\n5. Under Outpost, choose the Outpost to create this endpoint on.\n6. Under VPC, choose a VPC that does not yet have an endpoint and that also complies with the\nrules for Outposts endpoints.\nA virtual private cloud (VPC) enables you to launch AWS resources into a virtual network\nthat you define. This virtual network closely resembles a traditional network that you would\noperate in your own data center, with the benefits of using the scalable infrastructure of AWS.\nIf you don\u2019t have a VPC, choose Create VPC. For more information, see Creating access points\nrestricted to a virtual private cloud (VPC) in the Amazon S3 User Guide.\n7. Choose Create Outposts endpoint.\nUsing the AWS CLI\nExample\nThe following AWS CLI example creates an endpoint for an Outpost by using the VPC resource\naccess type. The VPC is derived from the subnet. To run this command, replace the user input\nplaceholders with your own information.\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1\nThe following AWS CLI example creates an endpoint for an Outpost by using the customer-\nowned IP address pool (CoIP pool) access type. To run this command, replace the user input\nplaceholders with your own information.\nCreating an endpoint API Version 2006-03-01 61",
      "start_idx": 124700,
      "end_idx": 126482,
      "metadata": {
        "num_sentences": 25,
        "num_words": 286,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "CLI Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "endpoint",
            "VPC",
            "AWS CLI",
            "AWS SDK for Java",
            "virtual private cloud",
            "CoIP pool",
            "access points",
            "subnet"
          ],
          "entities": [
            "Amazon S3",
            "AWS Management Console",
            "AWS CLI",
            "Outposts endpoints",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "AWS Services",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for creating an Amazon S3 on Outposts endpoint using the AWS Management Console, AWS CLI, and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an S3 on Outposts endpoint?",
            "What are the requirements for an Outposts endpoint?",
            "How can I use the AWS CLI to configure an Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "virtual private cloud",
          "Amazon S3",
          "AWS Management Console",
          "access points",
          "VPC",
          "AWS SDK for Java",
          "Outposts endpoints",
          "CoIP pool",
          "subnet",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_68",
      "text": "Amazon S3 on Outposts User Guide\naws s3outposts create-endpoint --outpost-id op-01ac5d28a6a232904 --subnet-id\nsubnet-8c7a57c5 --security-group-id sg-ab19e0d1 --access-type CustomerOwnedIp --\ncustomer-owned-ipv4-pool ipv4pool-coip-12345678901234567\nUsing the AWS SDK for Java\nExample\nThe following SDK for Java example creates an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information.\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointRequest;\nimport com.amazonaws.services.s3outposts.model.CreateEndpointResult;\npublic void createEndpoint() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nCreateEndpointRequest createEndpointRequest = new CreateEndpointRequest()\n.withOutpostId(\"op-0d79779cef3c30a40\")\n.withSubnetId(\"subnet-8c7a57c5\")\n.withSecurityGroupId(\"sg-ab19e0d1\")\n.withAccessType(\"CustomerOwnedIp\")\n.withCustomerOwnedIpv4Pool(\"ipv4pool-coip-12345678901234567\");\n// Use .withAccessType and .withCustomerOwnedIpv4Pool only when the access type is\n// customer-owned IP address pool (CoIP pool)\nCreateEndpointResult createEndpointResult =\ns3OutpostsClient.createEndpoint(createEndpointRequest);\nSystem.out.println(\"Endpoint is created and its ARN is \" +\ncreateEndpointResult.getEndpointArn());\n}\nViewing a list of your Amazon S3 on Outposts endpoints\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nListing endpoints API Version 2006-03-01 62",
      "start_idx": 126484,
      "end_idx": 128402,
      "metadata": {
        "num_sentences": 6,
        "num_words": 193,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "endpoint creation",
            "Outpost ID",
            "subnet ID",
            "security group ID",
            "CustomerOwnedIp",
            "CoIP pool",
            "AWS SDK for Java",
            "CreateEndpointRequest",
            "CreateEndpointResult"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java",
            "CreateEndpointRequest",
            "CreateEndpointResult",
            "Outpost ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an endpoint for Amazon S3 on Outposts using the AWS CLI and AWS SDK for Java. It includes code examples and instructions for configuring required parameters such as Outpost ID, subnet ID, and security group ID.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create an Amazon S3 on Outposts endpoint using AWS SDK for Java?",
            "What parameters are required to configure an S3 on Outposts endpoint?",
            "How do I view a list of Amazon S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "CreateEndpointRequest",
          "CustomerOwnedIp",
          "Outpost ID",
          "endpoint creation",
          "security group ID",
          "AWS SDK for Java",
          "subnet ID",
          "CoIP pool",
          "Amazon S3 on Outposts",
          "CreateEndpointResult"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_69",
      "text": "Amazon S3 on Outposts User Guide\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nThe following examples show you how to return a list of your S3 on Outposts endpoints by using\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. On the Outposts access points page, choose the Outposts endpoints tab.\n4. Under Outposts endpoints, you can view a list of your S3 on Outposts endpoints.\nUsing the AWS CLI\nThe following AWS CLI example lists the endpoints for the AWS Outposts resources that are\nassociated with your account. For more information about this command, see list-endpoints in the\nAWS CLI Reference.\naws s3outposts list-endpoints\nUsing the AWS SDK for Java\nThe following SDK for Java example lists the endpoints for an Outpost. For more information, see\nListEndpoints in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.ListEndpointsRequest;\nimport com.amazonaws.services.s3outposts.model.ListEndpointsResult;\npublic void listEndpoints() {\nAmazonS3Outposts s3OutpostsClient = AmazonS3OutpostsClientBuilder\n.standard().build();\nListEndpointsRequest listEndpointsRequest = new ListEndpointsRequest();\nListEndpointsResult listEndpointsResult =\ns3OutpostsClient.listEndpoints(listEndpointsRequest);\nSystem.out.println(\"List endpoints result is \" + listEndpointsResult);\n}\nListing endpoints API Version 2006-03-01 63",
      "start_idx": 128404,
      "end_idx": 130204,
      "metadata": {
        "num_sentences": 17,
        "num_words": 222,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "endpoints",
            "AWS CLI",
            "AWS SDK for Java",
            "ListEndpoints",
            "AWS Management Console",
            "S3 console",
            "Outposts buckets",
            "object operations"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts access points",
            "ListEndpointsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Programming APIs"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Command Line Interface"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list Amazon S3 on Outposts endpoints using the AWS Management Console, AWS CLI, and AWS SDK for Java, including example commands and code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list my S3 on Outposts endpoints?",
            "What tools can I use to manage S3 on Outposts endpoints?",
            "Can you provide an example of using AWS SDK for Java to list endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "object operations",
          "AWS Command Line Interface",
          "Outposts buckets",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "AWS Management Console",
          "Outposts access points",
          "S3 console",
          "endpoints",
          "ListEndpoints",
          "AWS SDK for Java",
          "ListEndpointsRequest",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_70",
      "text": "Amazon S3 on Outposts User Guide\nDeleting an Amazon S3 on Outposts endpoint\nTo route requests to an Amazon S3 on Outposts access point, you must create and configure an S3\non Outposts endpoint. In order to create an endpoint, you will need an active connection with your\nservice link to your Outposts home region. Each virtual private cloud (VPC) on your Outpost can\nhave one associated endpoint. For more information about endpoint quotas, see S3 on Outposts\nnetwork requirements. You must create an endpoint to be able to access your Outposts buckets\nand perform object operations. For more information, see Endpoints.\nThe following examples show you how to delete your S3 on Outposts endpoints by using the AWS\nManagement Console, AWS Command Line Interface (AWS CLI), and AWS SDK for Java.\nUsing the S3 console\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts access points.\n3. On the Outposts access points page, choose the Outposts endpoints tab.\n4. Under Outposts endpoints, choose the endpoint that you want to delete, and choose Delete.\nUsing the AWS CLI\nThe following AWS CLI example deletes an endpoint for an Outpost. To run this command, replace\nthe user input placeholders with your own information.\naws s3outposts delete-endpoint --endpoint-id example-endpoint-id --outpost-\nid op-01ac5d28a6a232904\nUsing the AWS SDK for Java\nThe following SDK for Java example deletes an endpoint for an Outpost. To use this example,\nreplace the user input placeholders with your own information.\nimport com.amazonaws.arn.Arn;\nimport com.amazonaws.services.s3outposts.AmazonS3Outposts;\nimport com.amazonaws.services.s3outposts.AmazonS3OutpostsClientBuilder;\nimport com.amazonaws.services.s3outposts.model.DeleteEndpointRequest;\npublic void deleteEndpoint(String endpointArnInput) {\nString outpostId = \"op-01ac5d28a6a232904\";\nDeleting an endpoint API Version 2006-03-01 64",
      "start_idx": 130206,
      "end_idx": 132144,
      "metadata": {
        "num_sentences": 20,
        "num_words": 272,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "endpoint",
            "Outposts access points",
            "AWS CLI",
            "AWS SDK for Java",
            "delete endpoint",
            "virtual private cloud",
            "Outposts buckets",
            "network requirements",
            "service link"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java",
            "Outposts home region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Network Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to delete an Amazon S3 on Outposts endpoint using the AWS Management Console, AWS CLI, and AWS SDK for Java. It provides step-by-step instructions and code examples for each method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an Amazon S3 on Outposts endpoint?",
            "What are the steps to delete an endpoint using the AWS CLI?",
            "How do I use the AWS SDK for Java to remove an S3 on Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "AWS CLI",
          "virtual private cloud",
          "Outposts access points",
          "Amazon S3 on Outposts",
          "delete endpoint",
          "AWS Management Console",
          "AWS SDK for Java",
          "network requirements",
          "service link",
          "Outposts home region",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_72",
      "text": "Amazon S3 on Outposts User Guide\nWorking with S3 on Outposts objects\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nObject ARNs use the following format, which includes the AWS Region that the Outpost is homed\nto, AWS account ID, Outpost ID, bucket name, and object key:\narn:aws:s3-outposts:us-west-2:123456789012:outpost/ op-01ac5d28a6a232904/bucket/amzn-\ns3-demo-bucket1/object/myobject\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nAPI Version 2006-03-01 66",
      "start_idx": 132762,
      "end_idx": 135302,
      "metadata": {
        "num_sentences": 17,
        "num_words": 401,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Reference",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 buckets",
            "access point",
            "endpoint connection",
            "virtual private cloud (VPC)",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs",
            "REST API",
            "access point alias"
          ],
          "entities": [
            "S3 Outposts (OUTPOSTS)",
            "Amazon Resource Name (ARN)",
            "AWS Region code",
            "Outpost ID",
            "bucket name"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts allows users to create S3 buckets on AWS Outposts for local data storage and processing, utilizing access points and endpoints over a VPC. It supports the same APIs and features as Amazon S3, with data residency requirements ensuring data remains local to the Outpost.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I access objects in an S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "Can I manage S3 on Outposts objects using the AWS Management Console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "virtual private cloud (VPC)",
          "AWS CLI",
          "Outpost ID",
          "bucket name",
          "endpoint connection",
          "Amazon S3",
          "AWS Management Console",
          "REST API",
          "S3 Outposts (OUTPOSTS)",
          "access point alias",
          "AWS Region code",
          "AWS Outposts",
          "S3 buckets",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_73",
      "text": "Amazon S3 on Outposts User Guide\nTopics\n\u2022 Upload an object to an S3 on Outposts bucket\n\u2022 Copying an object in an Amazon S3 on Outposts bucket using the AWS SDK for Java\n\u2022 Getting an object from an Amazon S3 on Outposts bucket\n\u2022 Listing the objects in an Amazon S3 on Outposts bucket\n\u2022 Deleting objects in Amazon S3 on Outposts buckets\n\u2022 Using HeadBucket to determine if an S3 on Outposts bucket exists and you have access\npermissions\n\u2022 Performing and managing a multipart upload with the SDK for Java\n\u2022 Using presigned URLs for S3 on Outposts\n\u2022 Amazon S3 on Outposts with local Amazon EMR on Outposts\n\u2022 Authorization and authentication caching\nUpload an object to an S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nUpload an object API Version 2006-03-01 67",
      "start_idx": 135304,
      "end_idx": 137387,
      "metadata": {
        "num_sentences": 12,
        "num_words": 353,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "bucket",
            "access point",
            "ARN",
            "Outpost",
            "AWS Region",
            "AWS CLI",
            "REST API",
            "AWS SDK",
            "data residency"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "AWS SDK for Java",
            "Amazon EMR"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Residency",
            "AWS SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload and manage objects in Amazon S3 on Outposts buckets using access points, detailing ARN formats, tools like AWS CLI and SDKs, and data residency requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object to an Amazon S3 on Outposts bucket?",
            "What is the ARN format for accessing S3 on Outposts?",
            "Can I use the AWS Management Console to manage S3 on Outposts objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "data residency",
          "AWS Management Console",
          "REST API",
          "AWS Region",
          "AWS SDK for Java",
          "Outpost",
          "Amazon EMR",
          "bucket",
          "AWS SDK",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_74",
      "text": "Amazon S3 on Outposts User Guide\nThe following AWS CLI and AWS SDK for Java examples show you how to upload an object to an S3\non Outposts bucket by using an access point.\nAWS CLI\nExample\nThe following example puts an object named sample-object.xml into an S3 on Outposts\nbucket (s3-outposts:PutObject) by using the AWS CLI. To use this command, replace each\nuser input placeholder with your own information. For more information about this\ncommand, see put-object in the AWS CLI Reference.\naws s3api put-object --bucket arn:aws:s3-\noutposts:Region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --key sample-object.xml --body sample-object.xml\nSDK for Java\nExample\nThe following example puts an object into an S3 on Outposts bucket by using the SDK for Java.\nTo use this example, replace each user input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ObjectMetadata;\nimport com.amazonaws.services.s3.model.PutObjectRequest;\nimport java.io.File;\npublic class PutObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString stringObjKeyName = \"*** String object key name ***\";\nString fileObjKeyName = \"*** File object key name ***\";\nString fileName = \"*** Path to file to upload ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nUpload an object API Version 2006-03-01 68",
      "start_idx": 137389,
      "end_idx": 139073,
      "metadata": {
        "num_sentences": 7,
        "num_words": 213,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "PutObject",
            "access point",
            "bucket",
            "object key",
            "file upload",
            "ObjectMetadata"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "SDK for Java",
            "PutObjectRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Object Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of how to upload objects to an Amazon S3 on Outposts bucket using AWS CLI and the SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an object to an S3 on Outposts bucket using AWS CLI?",
            "What is the Java SDK code to upload a file to an S3 on Outposts bucket?",
            "What placeholders need to be replaced in the example commands?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "SDK for Java",
          "AmazonS3ClientBuilder",
          "PutObjectRequest",
          "object key",
          "bucket",
          "AWS Outposts",
          "access point",
          "file upload",
          "ObjectMetadata"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_75",
      "text": "Amazon S3 on Outposts User Guide\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Upload a text string as a new object.\ns3Client.putObject(accessPointArn, stringObjKeyName, \"Uploaded String\nObject\");\n// Upload a file as a new object with ContentType and title specified.\nPutObjectRequest request = new PutObjectRequest(accessPointArn,\nfileObjKeyName, new File(fileName));\nObjectMetadata metadata = new ObjectMetadata();\nmetadata.setContentType(\"plain/text\");\nmetadata.addUserMetadata(\"title\", \"someTitle\");\nrequest.setMetadata(metadata);\ns3Client.putObject(request);\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nCopying an object in an Amazon S3 on Outposts bucket using\nthe AWS SDK for Java\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\nCopying an object API Version 2006-03-01 69",
      "start_idx": 139075,
      "end_idx": 140802,
      "metadata": {
        "num_sentences": 10,
        "num_words": 247,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "ARN",
            "bucket",
            "object",
            "AWS SDK for Java",
            "PutObjectRequest",
            "ObjectMetadata",
            "ContentType"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "Outposts",
            "Amazon Resource Name (ARN)",
            "ObjectMetadata"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for uploading and copying objects in an Amazon S3 on Outposts bucket using the AWS SDK for Java, along with handling errors and metadata configuration.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload objects to an Amazon S3 on Outposts bucket?",
            "What is the ARN format for S3 on Outposts access points?",
            "How can I handle errors when interacting with Amazon S3 using the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "ARN",
          "object",
          "PutObjectRequest",
          "ContentType",
          "AWS SDK for Java",
          "bucket",
          "access point",
          "ObjectMetadata",
          "Amazon Resource Name (ARN)"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_76",
      "text": "Amazon S3 on Outposts User Guide\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nThe following example shows you how to copy an object in an S3 on Outposts bucket by using the\nAWS SDK for Java.\nUsing the AWS SDK for Java\nThe following S3 on Outposts example copies an object into a new object in the same bucket by\nusing the SDK for Java. To use this example, replace the user input placeholders with your\nown information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.CopyObjectRequest;\npublic class CopyObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString sourceKey = \"*** Source object key ***\";\nString destinationKey = \"*** Destination object key ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Copy the object into a new object in the same bucket.\nUsing the AWS SDK for Java API Version 2006-03-01 70",
      "start_idx": 140804,
      "end_idx": 142695,
      "metadata": {
        "num_sentences": 11,
        "num_words": 266,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Outpost",
            "data-residency",
            "access points",
            "AWS Management Console",
            "REST API",
            "AWS CLI",
            "AWS SDKs",
            "Java",
            "CopyObjectRequest"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "AWS CLI",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to manage object data in Amazon S3 on Outposts, including a Java SDK example for copying objects within a bucket. It emphasizes data-residency compliance and outlines tools for object management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I copy objects within an S3 on Outposts bucket using Java?",
            "What tools can I use to manage objects in Amazon S3 on Outposts?",
            "What are the data-residency considerations for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CopyObjectRequest",
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "AWS Management Console",
          "access points",
          "REST API",
          "data-residency",
          "AWS SDK for Java",
          "Outpost",
          "Java",
          "AWS Outposts",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_77",
      "text": "Amazon S3 on Outposts User Guide\nCopyObjectRequest copyObjectRequest = new CopyObjectRequest(accessPointArn,\nsourceKey, accessPointArn, destinationKey);\ns3Client.copyObject(copyObjectRequest);\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nGetting an object from an Amazon S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nThe following examples show you how to download (get) an object by using the AWS Command\nLine Interface (AWS CLI) and AWS SDK for Java.\nGetting an object API Version 2006-03-01 71",
      "start_idx": 142697,
      "end_idx": 144820,
      "metadata": {
        "num_sentences": 15,
        "num_words": 330,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access point ARN",
            "Outpost bucket",
            "AWS CLI",
            "AWS SDK",
            "REST API",
            "data residency",
            "object operations",
            "Outpost ID",
            "bucket-style alias"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "Amazon Resource Name (ARN)",
            "Outpost bucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts to copy and retrieve objects with access points, including code examples and error handling guidance.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I copy an object in Amazon S3 on Outposts using access points?",
            "What is the ARN format for S3 on Outposts access points?",
            "How can I retrieve an object from an Outpost bucket using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "object operations",
          "AWS CLI",
          "Outpost ID",
          "Amazon S3",
          "data residency",
          "Outpost bucket",
          "REST API",
          "access point ARN",
          "AWS SDK for Java",
          "Amazon Resource Name (ARN)",
          "AWS SDK",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "bucket-style alias"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_78",
      "text": "Amazon S3 on Outposts User Guide\nUsing the AWS CLI\nThe following example gets an object named sample-object.xml from an S3 on Outposts\nbucket (s3-outposts:GetObject) by using the AWS CLI. To use this command, replace each\nuser input placeholder with your own information. For more information about this\ncommand, see get-object in the AWS CLI Reference.\naws s3api get-object --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point --key testkey sample-object.xml\nUsing the AWS SDK for Java\nThe following S3 on Outposts example gets an object by using the SDK for Java. To use this\nexample, replace each user input placeholder with your own information. For more\ninformation, see GetObject in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\npublic class GetObject {\npublic static void main(String[] args) throws IOException {\nString accessPointArn = \"*** access point ARN ***\";\nString key = \"*** Object key ***\";\nS3Object fullObject = null, objectPortion = null, headerOverrideObject = null;\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\nGetting an object API Version 2006-03-01 72",
      "start_idx": 144822,
      "end_idx": 146630,
      "metadata": {
        "num_sentences": 7,
        "num_words": 201,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "GetObject",
            "Outposts",
            "Access Point ARN",
            "Object key",
            "S3 bucket",
            "API Reference",
            "AmazonS3ClientBuilder"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "GetObjectRequest",
            "S3Object"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI Usage",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for retrieving objects from an Amazon S3 bucket on AWS Outposts using the AWS CLI and AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an object from an Amazon S3 bucket on AWS Outposts using the AWS CLI?",
            "What Java code can I use to get an object from an Amazon S3 bucket on AWS Outposts?",
            "What are the required placeholders for accessing an S3 object using AWS tools?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Access Point ARN",
          "Amazon S3",
          "GetObjectRequest",
          "Object key",
          "API Reference",
          "AWS SDK for Java",
          "S3 bucket",
          "AWS Outposts",
          "S3Object",
          "GetObject",
          "AmazonS3ClientBuilder"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_80",
      "text": "Amazon S3 on Outposts User Guide\n}\nif (headerOverrideObject != null) {\nheaderOverrideObject.close();\n}\n}\n}\nprivate static void displayTextInputStream(InputStream input) throws IOException {\n// Read the text input stream one line at a time and display each line.\nBufferedReader reader = new BufferedReader(new InputStreamReader(input));\nString line = null;\nwhile ((line = reader.readLine()) != null) {\nSystem.out.println(line);\n}\nSystem.out.println();\n}\n}\nListing the objects in an Amazon S3 on Outposts bucket\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nNote\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS\ninstalls an Outpost rack, your data stays local to your Outpost to meet data-residency\nrequirements. Your objects never leave your Outpost and are not in an AWS Region.\nBecause the AWS Management Console is hosted in-Region, you can't use the console\nListing objects API Version 2006-03-01 74",
      "start_idx": 148455,
      "end_idx": 150170,
      "metadata": {
        "num_sentences": 11,
        "num_words": 263,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "access points",
            "ARN",
            "AWS Region",
            "Outpost ID",
            "Resource ARNs",
            "data-residency",
            "object operations"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Region",
            "Outpost ID",
            "ARN",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how objects are stored and accessed in Amazon S3 on Outposts, including the use of access points and ARNs for object operations. It highlights data residency requirements and provides an example ARN format.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the ARN format for accessing objects in Amazon S3 on Outposts?",
            "How does Amazon S3 on Outposts ensure data residency compliance?",
            "What are the requirements for accessing objects in an Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "object operations",
          "Outposts",
          "Outpost ID",
          "Amazon S3",
          "ARN",
          "Resource ARNs",
          "AWS Management Console",
          "access points",
          "data-residency",
          "AWS Region",
          "bucket",
          "AWS Outposts",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_81",
      "text": "Amazon S3 on Outposts User Guide\nto upload or manage objects in your Outpost. However, you can use the REST API, AWS\nCommand Line Interface (AWS CLI), and AWS SDKs to upload and manage your objects\nthrough your access points.\nThe following examples show you how to list the objects in an S3 on Outposts bucket using the\nAWS CLI and AWS SDK for Java.\nUsing the AWS CLI\nThe following example lists the objects in an S3 on Outposts bucket (s3-\noutposts:ListObjectsV2) by using the AWS CLI. To use this command, replace each user\ninput placeholder with your own information. For more information about this command, see\nlist-objects-v2 in the AWS CLI Reference.\naws s3api list-objects-v2 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nNote\nWhen using this action with Amazon S3 on Outposts through the AWS SDKs, you provide\nthe Outposts access point ARN in place of the bucket name, in the following form:\narn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\naccesspoint/example-Outposts-Access-Point. For more information about S3 on\nOutposts ARNs, see Resource ARNs for S3 on Outposts.\nUsing the AWS SDK for Java\nThe following S3 on Outposts example lists objects in a bucket by using the SDK for Java. To use\nthis example, replace each user input placeholder with your own information.\nImportant\nThis example uses ListObjectsV2, which is the latest revision of the ListObjects\nAPI operation. We recommend that you use this revised API operation for application\nListing objects API Version 2006-03-01 75",
      "start_idx": 150172,
      "end_idx": 151765,
      "metadata": {
        "num_sentences": 12,
        "num_words": 237,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK",
            "ListObjectsV2",
            "ARN",
            "access point",
            "bucket",
            "REST API",
            "Java"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "ARN",
            "ListObjectsV2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list objects in an Amazon S3 on Outposts bucket using AWS CLI and AWS SDK for Java, including examples and guidelines for input placeholders and ARNs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list objects in an Amazon S3 on Outposts bucket using AWS CLI?",
            "What is the correct ARN format for accessing S3 on Outposts?",
            "How can I use the AWS SDK for Java to list objects in an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "REST API",
          "ListObjectsV2",
          "Java",
          "AWS SDK for Java",
          "bucket",
          "AWS SDK",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_82",
      "text": "Amazon S3 on Outposts User Guide\ndevelopment. For backward compatibility, Amazon S3 continues to support the prior\nversion of this API operation.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ListObjectsV2Request;\nimport com.amazonaws.services.s3.model.ListObjectsV2Result;\nimport com.amazonaws.services.s3.model.S3ObjectSummary;\npublic class ListObjectsV2 {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\nSystem.out.println(\"Listing objects\");\n// maxKeys is set to 2 to demonstrate the use of\n// ListObjectsV2Result.getNextContinuationToken()\nListObjectsV2Request req = new\nListObjectsV2Request().withBucketName(accessPointArn).withMaxKeys(2);\nListObjectsV2Result result;\ndo {\nresult = s3Client.listObjectsV2(req);\nfor (S3ObjectSummary objectSummary : result.getObjectSummaries()) {\nSystem.out.printf(\" - %s (size: %d)\\n\", objectSummary.getKey(),\nobjectSummary.getSize());\n}\n// If there are more than maxKeys keys in the bucket, get a\ncontinuation token\n// and list the next objects.\nListing objects API Version 2006-03-01 76",
      "start_idx": 151767,
      "end_idx": 153258,
      "metadata": {
        "num_sentences": 4,
        "num_words": 145,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "ListObjectsV2",
            "AWS SDK for Java",
            "access point ARN",
            "ListObjectsV2Request",
            "ListObjectsV2Result",
            "S3ObjectSummary",
            "continuation token",
            "bucket"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "ListObjectsV2",
            "AmazonS3ClientBuilder",
            "access point ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for using the AWS SDK for Java to list objects in an Amazon S3 bucket via the ListObjectsV2 API, including handling continuation tokens for paginated results.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the ListObjectsV2 API in Amazon S3?",
            "What is the purpose of continuation tokens in ListObjectsV2?",
            "How do I configure AWS SDK for Java to interact with Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "ListObjectsV2Result",
          "access point ARN",
          "ListObjectsV2Request",
          "AWS SDK for Java",
          "ListObjectsV2",
          "continuation token",
          "bucket",
          "S3ObjectSummary",
          "AmazonS3ClientBuilder"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_83",
      "text": "Amazon S3 on Outposts User Guide\nString token = result.getNextContinuationToken();\nSystem.out.println(\"Next Continuation Token: \" + token);\nreq.setContinuationToken(token);\n} while (result.isTruncated());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nDeleting objects in Amazon S3 on Outposts buckets\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS installs an\nOutpost rack, your data stays local to your Outpost to meet data-residency requirements. Your\nobjects never leave your Outpost and are not in an AWS Region. Because the AWS Management\nConsole is hosted in-Region, you can't use the console to upload or manage objects in your\nOutpost. However, you can use the REST API, AWS Command Line Interface (AWS CLI), and AWS\nSDKs to upload and manage your objects through your access points.\nDeleting objects API Version 2006-03-01 77",
      "start_idx": 153260,
      "end_idx": 155253,
      "metadata": {
        "num_sentences": 14,
        "num_words": 307,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Conceptual Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "access points",
            "ARN",
            "Outpost bucket",
            "data residency",
            "AWS Region",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "object operations"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "AWS CLI",
            "AWS SDKs"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete objects in Amazon S3 on Outposts buckets using access points and provides an example ARN format for access points. It highlights data residency requirements and tools for managing objects without the AWS Management Console.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete objects in Amazon S3 on Outposts buckets?",
            "What is the ARN format for S3 on Outposts access points?",
            "What tools can I use to manage objects in Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "object operations",
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "data residency",
          "access points",
          "Outpost bucket",
          "REST API",
          "AWS Region",
          "AWS Outposts",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_84",
      "text": "Amazon S3 on Outposts User Guide\nThe following examples show you how to delete a single object or multiple objects in an S3 on\nOutposts bucket by using the AWS Command Line Interface (AWS CLI) and AWS SDK for Java.\nUsing the AWS CLI\nThe following examples show you how to delete a single object or multiple objects from an S3 on\nOutposts bucket.\ndelete-object\nThe following example deletes an object named sample-object.xml from an S3 on Outposts\nbucket (s3-outposts:DeleteObject) by using the AWS CLI. To use this command, replace\neach user input placeholder with your own information. For more information about this\ncommand, see delete-object in the AWS CLI Reference.\naws s3api delete-object --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --key sample-object.xml\ndelete-objects\nThe following example deletes two objects named sample-object.xml and test1.text\nfrom an S3 on Outposts bucket (s3-outposts:DeleteObject) by using the AWS CLI. To use\nthis command, replace each user input placeholder with your own information. For more\ninformation about this command, see delete-objects in the AWS CLI Reference.\naws s3api delete-objects --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point --delete file://delete.json\ndelete.json\n{\n\"Objects\": [\n{\n\"Key\": \"test1.txt\"\n},\n{\n\"Key\": \"sample-object.xml\"\n}\n],\nDeleting objects API Version 2006-03-01 78",
      "start_idx": 155255,
      "end_idx": 156744,
      "metadata": {
        "num_sentences": 9,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Command-Line Usage"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "delete-object",
            "delete-objects",
            "AWS CLI",
            "AWS SDK for Java",
            "delete.json",
            "S3 bucket",
            "access point",
            "API Version 2006-03-01",
            "sample-object.xml"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK for Java",
            "delete-object",
            "delete-objects"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Command Line Interface",
            "Object Deletion"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of how to delete single or multiple objects from an S3 on Outposts bucket using the AWS CLI and the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an object from an S3 on Outposts bucket using AWS CLI?",
            "What is the format of the delete.json file for deleting multiple objects?",
            "What AWS services and tools are required to manage S3 on Outposts objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CLI",
          "sample-object.xml",
          "Amazon S3",
          "delete-object",
          "API Version 2006-03-01",
          "delete.json",
          "AWS SDK for Java",
          "S3 bucket",
          "delete-objects",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_85",
      "text": "Amazon S3 on Outposts User Guide\n\"Quiet\": false\n}\nUsing the AWS SDK for Java\nThe following examples show you how to delete a single object or multiple objects from an S3 on\nOutposts bucket.\nDeleteObject\nThe following S3 on Outposts example deletes an object in a bucket by using the SDK for Java.\nTo use this example, specify the access point ARN for the Outpost and the key name for the\nobject that you want to delete. For more information, see DeleteObject in the Amazon Simple\nStorage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.DeleteObjectRequest;\npublic class DeleteObject {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\nString keyName = \"*** key name ****\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\ns3Client.deleteObject(new DeleteObjectRequest(accessPointArn, keyName));\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\nDeleting objects API Version 2006-03-01 79",
      "start_idx": 156746,
      "end_idx": 158334,
      "metadata": {
        "num_sentences": 7,
        "num_words": 208,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "DeleteObject",
            "SDK for Java",
            "access point ARN",
            "key name",
            "AmazonServiceException",
            "SdkClientException",
            "deleteObject",
            "AWS credentials"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SDK for Java",
            "DeleteObjectRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This guide demonstrates how to delete objects from an S3 on Outposts bucket using the AWS SDK for Java, including handling potential exceptions.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an object from an S3 on Outposts bucket using the SDK for Java?",
            "What exceptions should I handle when deleting objects in S3 on Outposts?",
            "What is the correct way to configure AWS credentials for the SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "deleteObject",
          "Amazon S3",
          "SDK for Java",
          "DeleteObject",
          "key name",
          "AWS credentials",
          "DeleteObjectRequest",
          "access point ARN",
          "AmazonServiceException",
          "SdkClientException",
          "AmazonS3ClientBuilder"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_86",
      "text": "Amazon S3 on Outposts User Guide\ne.printStackTrace();\n}\n}\n}\nDeleteObjects\nThe following S3 on Outposts example uploads and then deletes objects in a bucket by using\nthe SDK for Java. To use this example, specify the access point ARN for the Outpost. For more\ninformation, see DeleteObjects in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.DeleteObjectsRequest;\nimport com.amazonaws.services.s3.model.DeleteObjectsRequest.KeyVersion;\nimport com.amazonaws.services.s3.model.DeleteObjectsResult;\nimport java.util.ArrayList;\npublic class DeleteObjects {\npublic static void main(String[] args) {\nString accessPointArn = \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-\noutposts-access-point\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Upload three sample objects.\nArrayList<KeyVersion> keys = new ArrayList<KeyVersion>();\nfor (int i = 0; i < 3; i++) {\nString keyName = \"delete object example \" + i;\ns3Client.putObject(accessPointArn, keyName, \"Object number \" + i + \"\nto be deleted.\");\nDeleting objects API Version 2006-03-01 80",
      "start_idx": 158336,
      "end_idx": 159831,
      "metadata": {
        "num_sentences": 6,
        "num_words": 158,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "DeleteObjects",
            "access point ARN",
            "SDK for Java",
            "AmazonS3ClientBuilder",
            "DeleteObjectsRequest",
            "KeyVersion",
            "AWS credentials",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Java SDK",
            "access point ARN",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This guide demonstrates how to upload and delete objects in an Amazon S3 bucket on Outposts using the AWS SDK for Java, requiring an access point ARN and proper AWS credentials.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete multiple objects in an Amazon S3 bucket on Outposts?",
            "What is the role of access point ARN in Amazon S3 on Outposts?",
            "How do I use the AWS SDK for Java to interact with Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "Outposts",
          "Amazon S3",
          "SDK for Java",
          "API Version 2006-03-01",
          "AWS credentials",
          "Java SDK",
          "access point ARN",
          "DeleteObjectsRequest",
          "KeyVersion",
          "DeleteObjects",
          "AmazonS3ClientBuilder"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_87",
      "text": "Amazon S3 on Outposts User Guide\nkeys.add(new KeyVersion(keyName));\n}\nSystem.out.println(keys.size() + \" objects successfully created.\");\n// Delete the sample objects.\nDeleteObjectsRequest multiObjectDeleteRequest = new\nDeleteObjectsRequest(accessPointArn)\n.withKeys(keys)\n.withQuiet(false);\n// Verify that the objects were deleted successfully.\nDeleteObjectsResult delObjRes =\ns3Client.deleteObjects(multiObjectDeleteRequest);\nint successfulDeletes = delObjRes.getDeletedObjects().size();\nSystem.out.println(successfulDeletes + \" objects successfully\ndeleted.\");\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nUsing HeadBucket to determine if an S3 on Outposts bucket\nexists and you have access permissions\nObjects are the fundamental entities stored in Amazon S3 on Outposts. Every object is contained in\na bucket. You must use access points to access any object in an Outpost bucket. When you specify\nthe bucket for object operations, you use the access point Amazon Resource Name (ARN) or the\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nThe following example shows the ARN format for S3 on Outposts access points, which includes the\nAWS Region code for the Region that the Outpost is homed to, the AWS account ID, the Outpost ID,\nand the access point name:\nUsing HeadBucket API Version 2006-03-01 81",
      "start_idx": 159833,
      "end_idx": 161534,
      "metadata": {
        "num_sentences": 12,
        "num_words": 238,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access points",
            "bucket",
            "ARN",
            "AWS Region",
            "HeadBucket",
            "DeleteObjects",
            "SdkClientException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "access point ARN",
            "AWS Region",
            "HeadBucket API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and delete objects in an Amazon S3 on Outposts bucket using access points, and includes error handling examples for API calls.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and delete objects in an Amazon S3 on Outposts bucket?",
            "What is the format of an access point ARN in Amazon S3 on Outposts?",
            "How can I handle errors when working with Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "ARN",
          "access points",
          "access point ARN",
          "AWS Region",
          "AmazonServiceException",
          "HeadBucket",
          "Outposts bucket",
          "SdkClientException",
          "HeadBucket API",
          "bucket",
          "AWS Outposts",
          "DeleteObjects"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_88",
      "text": "Amazon S3 on Outposts User Guide\narn:aws:s3-outposts:region:account-id:outpost/outpost-id/accesspoint/accesspoint-name\nFor more information about S3 on Outposts ARNs, see Resource ARNs for S3 on Outposts.\nNote\nWith Amazon S3 on Outposts, object data is always stored on the Outpost. When AWS\ninstalls an Outpost rack, your data stays local to your Outpost to meet data-residency\nrequirements. Your objects never leave your Outpost and are not in an AWS Region.\nBecause the AWS Management Console is hosted in-Region, you can't use the console\nto upload or manage objects in your Outpost. However, you can use the REST API, AWS\nCommand Line Interface (AWS CLI), and AWS SDKs to upload and manage your objects\nthrough your access points.\nThe following AWS Command Line Interface (AWS CLI) and AWS SDK for Java examples show\nyou how to use the HeadBucket API operation to determine if an Amazon S3 on Outposts bucket\nexists and whether you have permission to access it. For more information, see HeadBucket in the\nAmazon Simple Storage Service API Reference.\nUsing the AWS CLI\nThe following S3 on Outposts AWS CLI example uses the head-bucket command to determine\nif a bucket exists and you have permissions to access it. To use this command, replace each user\ninput placeholder with your own information. For more information about this command, see\nhead-bucket in the AWS CLI Reference.\naws s3api head-bucket --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/accesspoint/example-outposts-\naccess-point\nUsing the AWS SDK for Java\nThe following S3 on Outposts example shows how to determine if a bucket exists and if you have\npermission to access it. To use this example, specify the access point ARN for the Outpost. For more\ninformation, see HeadBucket in the Amazon Simple Storage Service API Reference.\nimport com.amazonaws.AmazonServiceException;\nUsing HeadBucket API Version 2006-03-01 82",
      "start_idx": 161536,
      "end_idx": 163456,
      "metadata": {
        "num_sentences": 15,
        "num_words": 290,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "ARN",
            "Outpost",
            "AWS CLI",
            "AWS SDK",
            "HeadBucket",
            "access point",
            "bucket",
            "data residency",
            "REST API"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "HeadBucket API",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the HeadBucket API to check the existence and access permissions of an Amazon S3 on Outposts bucket, with examples using AWS CLI and AWS SDK for Java. It also highlights the data residency requirements and limitations of using the AWS Management Console with S3 on Outposts.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I check if an S3 on Outposts bucket exists?",
            "What are the limitations of using the AWS Management Console with S3 on Outposts?",
            "How do I use the AWS CLI to interact with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Amazon S3",
          "ARN",
          "data residency",
          "REST API",
          "HeadBucket",
          "AWS SDK for Java",
          "Outpost",
          "HeadBucket API",
          "bucket",
          "AWS Outposts",
          "AWS SDK",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_89",
      "text": "Amazon S3 on Outposts User Guide\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.HeadBucketRequest;\npublic class HeadBucket {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\ns3Client.headBucket(new HeadBucketRequest(accessPointArn));\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nPerforming and managing a multipart upload with the SDK for\nJava\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts resources and\nstore and retrieve objects on-premises for applications that require local data access, local data\nprocessing, and data residency. You can use S3 on Outposts through the AWS Management\nConsole, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. For more information,\nsee What is Amazon S3 on Outposts?\nThe following examples show how you can use S3 on Outposts with the AWS SDK for Java to\nperform and manage a multipart upload.\nPerforming a multipart upload API Version 2006-03-01 83",
      "start_idx": 163458,
      "end_idx": 165101,
      "metadata": {
        "num_sentences": 7,
        "num_words": 220,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3",
            "AWS Outposts",
            "multipart upload",
            "AWS SDK for Java",
            "HeadBucketRequest",
            "access point ARN",
            "local data processing",
            "data residency",
            "AWS CLI",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS SDK for Java",
            "AWS CLI",
            "HeadBucketRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Data Processing"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts with the AWS SDK for Java, including performing a multipart upload and utilizing the HeadBucketRequest API call.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I use Amazon S3 on Outposts for local data processing?",
            "What is the process for performing a multipart upload using AWS SDK for Java?",
            "How do I handle errors with the HeadBucketRequest API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Amazon S3",
          "multipart upload",
          "data residency",
          "REST API",
          "local data processing",
          "access point ARN",
          "HeadBucketRequest",
          "AWS SDK for Java",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_90",
      "text": "Amazon S3 on Outposts User Guide\nTopics\n\u2022 Perform a multipart upload of an object in an S3 on Outposts bucket\n\u2022 Copy a large object in an S3 on Outposts bucket by using multipart upload\n\u2022 List parts of an object in an S3 on Outposts bucket\n\u2022 Retrieve a list of in-progress multipart uploads in an S3 on Outposts bucket\nPerform a multipart upload of an object in an S3 on Outposts bucket\nThe following S3 on Outposts example initiates, uploads, and finishes a multipart upload of an\nobject to a bucket by using the SDK for Java. To use this example, replace each user input\nplaceholder with your own information. For more information, see Uploading an object using\nmultipart upload in the Amazon Simple Storage Service User Guide.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.*;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class MultipartUploadCopy {\npublic static void main(String[] args) {\nString accessPointArn = \"*** Source access point ARN ***\";\nString sourceObjectKey = \"*** Source object key ***\";\nString destObjectKey = \"*** Target object key ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Initiate the multipart upload.\nInitiateMultipartUploadRequest initRequest = new\nInitiateMultipartUploadRequest(accessPointArn, destObjectKey);\nPerform a multipart upload of an object in an S3 on Outposts bucket API Version 2006-03-01 84",
      "start_idx": 165103,
      "end_idx": 166832,
      "metadata": {
        "num_sentences": 6,
        "num_words": 231,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts bucket",
            "multipart upload",
            "SDK for Java",
            "access point ARN",
            "object key",
            "AWS credentials",
            "InitiateMultipartUploadRequest",
            "AmazonS3ClientBuilder",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "SDK for Java",
            "access point ARN",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK Usage",
            "Object Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform a multipart upload of an object in an S3 on Outposts bucket using the AWS SDK for Java, including initiating, uploading, and completing the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload in an S3 on Outposts bucket?",
            "What code example demonstrates using the SDK for Java for S3 on Outposts?",
            "What are the prerequisites for initiating a multipart upload in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon S3",
          "multipart upload",
          "SDK for Java",
          "API Version 2006-03-01",
          "AWS credentials",
          "access point ARN",
          "Outposts bucket",
          "object key",
          "S3 on Outposts",
          "AmazonS3ClientBuilder",
          "InitiateMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_92",
      "text": "Amazon S3 on Outposts User Guide\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n// This is a helper function to construct a list of ETags.\nprivate static List<PartETag> getETags(List<CopyPartResult> responses) {\nList<PartETag> etags = new ArrayList<PartETag>();\nfor (CopyPartResult response : responses) {\netags.add(new PartETag(response.getPartNumber(), response.getETag()));\n}\nreturn etags;\n}\nCopy a large object in an S3 on Outposts bucket by using multipart\nupload\nThe following S3 on Outposts example uses the SDK for Java to copy an object in a bucket. To use\nthis example, replace each user input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.*;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class MultipartUploadCopy {\npublic static void main(String[] args) {\nString accessPointArn = \"*** Source access point ARN ***\";\nString sourceObjectKey = \"*** Source object key ***\";\nString destObjectKey = \"*** Target object key ***\";\ntry {\nCopy a large object in an S3 on Outposts bucket by using multipart upload API Version 2006-03-01 86",
      "start_idx": 168551,
      "end_idx": 170113,
      "metadata": {
        "num_sentences": 7,
        "num_words": 209,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Helper Function"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "multipart upload",
            "ETags",
            "CopyPartResult",
            "SDK for Java",
            "AmazonServiceException",
            "SdkClientException",
            "access point ARN",
            "bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AmazonServiceException",
            "SdkClientException",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java-based example for copying a large object in an Amazon S3 on Outposts bucket using multipart upload, with error handling and helper functions for managing ETags.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I copy large objects in an S3 on Outposts bucket?",
            "What is the Java SDK approach for multipart uploads in Amazon S3?",
            "How do I handle errors when using Amazon S3's multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "multipart upload",
          "SDK for Java",
          "ETags",
          "access point ARN",
          "AmazonServiceException",
          "SdkClientException",
          "bucket",
          "CopyPartResult",
          "AmazonS3ClientBuilder"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_94",
      "text": "Amazon S3 on Outposts User Guide\n// Complete the upload request to concatenate all uploaded parts and make\nthe copied object available.\nCompleteMultipartUploadRequest completeRequest = new\nCompleteMultipartUploadRequest(\naccessPointArn,\ndestObjectKey,\ninitResult.getUploadId(),\ngetETags(copyResponses));\ns3Client.completeMultipartUpload(completeRequest);\nSystem.out.println(\"Multipart copy complete.\");\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n// This is a helper function to construct a list of ETags.\nprivate static List<PartETag> getETags(List<CopyPartResult> responses) {\nList<PartETag> etags = new ArrayList<PartETag>();\nfor (CopyPartResult response : responses) {\netags.add(new PartETag(response.getPartNumber(), response.getETag()));\n}\nreturn etags;\n}\n}\nList parts of an object in an S3 on Outposts bucket\nThe following S3 on Outposts example lists the parts of an object in a bucket by using the SDK for\nJava. To use this example, replace each user input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.*;\nimport java.util.List;\nList parts of an object in an S3 on Outposts bucket API Version 2006-03-01 88",
      "start_idx": 171849,
      "end_idx": 173479,
      "metadata": {
        "num_sentences": 9,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Multipart Upload",
            "CompleteMultipartUploadRequest",
            "ETags",
            "CopyPartResult",
            "SDK for Java",
            "AmazonServiceException",
            "SdkClientException",
            "List Parts"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SDK for Java",
            "CompleteMultipartUploadRequest",
            "PartETag"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "Amazon S3 Client"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example of listing and completing multipart uploads for objects in an Amazon S3 on Outposts bucket using the SDK for Java, along with error handling techniques.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete a multipart upload in Amazon S3 on Outposts using Java?",
            "What is the process for listing parts of an object in an S3 bucket?",
            "How can I handle errors when working with Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "SDK for Java",
          "ETags",
          "Multipart Upload",
          "AmazonServiceException",
          "List Parts",
          "PartETag",
          "SdkClientException",
          "CopyPartResult",
          "CompleteMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_96",
      "text": "Amazon S3 on Outposts User Guide\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts\nbucket\nThe following S3 on Outposts example shows how to retrieve a list of the in-progress multipart\nuploads from an Outposts bucket by using the SDK for Java. To use this example, replace each\nuser input placeholder with your own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.ListMultipartUploadsRequest;\nimport com.amazonaws.services.s3.model.MultipartUpload;\nimport com.amazonaws.services.s3.model.MultipartUploadListing;\nimport java.util.List;\npublic class ListMultipartUploads {\npublic static void main(String[] args) {\nString accessPointArn = \"*** access point ARN ***\";\ntry {\n// This code expects that you have AWS credentials set up per:\n// https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-\ncredentials.html\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.enableUseArnRegion()\n.build();\n// Retrieve a list of all in-progress multipart uploads.\nListMultipartUploadsRequest allMultipartUploadsRequest = new\nListMultipartUploadsRequest(accessPointArn);\nMultipartUploadListing multipartUploadListing =\ns3Client.listMultipartUploads(allMultipartUploadsRequest);\nList<MultipartUpload> uploads =\nmultipartUploadListing.getMultipartUploads();\n// Display information about all in-progress multipart uploads.\nSystem.out.println(uploads.size() + \" multipart upload(s) in progress.\");\nfor (MultipartUpload u : uploads) {\nSystem.out.println(\"Upload in progress: Key = \\\"\" + u.getKey() + \"\\\",\nid = \" + u.getUploadId());\nRetrieve a list of in-progress multipart uploads in an S3 on Outposts bucket API Version 2006-03-01 90",
      "start_idx": 174800,
      "end_idx": 176634,
      "metadata": {
        "num_sentences": 6,
        "num_words": 191,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "multipart upload",
            "SDK for Java",
            "access point ARN",
            "ListMultipartUploadsRequest",
            "MultipartUploadListing",
            "AWS credentials",
            "in-progress uploads",
            "AmazonS3ClientBuilder"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS SDK for Java",
            "MultipartUpload",
            "AmazonS3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This guide demonstrates how to retrieve a list of in-progress multipart uploads in an Amazon S3 on Outposts bucket using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list in-progress multipart uploads in an S3 on Outposts bucket?",
            "What Java code is needed to retrieve multipart uploads in progress?",
            "What are the prerequisites for listing multipart uploads in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "MultipartUploadListing",
          "multipart upload",
          "SDK for Java",
          "in-progress uploads",
          "AWS credentials",
          "access point ARN",
          "Outposts bucket",
          "MultipartUpload",
          "AWS SDK for Java",
          "AmazonS3",
          "AmazonS3ClientBuilder",
          "ListMultipartUploadsRequest"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_97",
      "text": "Amazon S3 on Outposts User Guide\n}\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't process\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\nUsing presigned URLs for S3 on Outposts\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects.\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works.\nLimiting presigned URL capabilities\nThe capabilities of a presigned URL are limited by the permissions of the user who created it. In\nessence, presigned URLs are bearer tokens that grant access to those who possess them. As such,\nwe recommend that you protect them appropriately.\nAWS Signature Version 4 (SigV4)\nTo enforce specific behavior when presigned URL requests are authenticated by using AWS\nSignature Version 4 (SigV4), you can use condition keys in bucket policies and access point policies.\nFor example, you can create a bucket policy that uses the s3-outposts:signatureAge condition\nto deny any Amazon S3 on Outposts presigned URL request on objects in the example-outpost-\nUsing presigned URLs API Version 2006-03-01 91",
      "start_idx": 176636,
      "end_idx": 178619,
      "metadata": {
        "num_sentences": 13,
        "num_words": 332,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URLs",
            "bucket policy",
            "AWS SDKs",
            "AWS CLI",
            "expiration time",
            "SigV4",
            "access control",
            "condition keys"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDKs",
            "AWS CLI",
            "Signature Version 4"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use presigned URLs to grant time-limited access to objects stored on Amazon S3 Outposts, including configuration details, limitations, and security considerations with SigV4 authentication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use presigned URLs with Amazon S3 on Outposts?",
            "What are the limitations of presigned URLs?",
            "How does AWS Signature Version 4 impact presigned URL behavior?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "presigned URLs",
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "Signature Version 4",
          "expiration time",
          "SigV4",
          "bucket policy",
          "access control",
          "condition keys"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_98",
      "text": "Amazon S3 on Outposts User Guide\nbucket bucket if the signature is more than 10 minutes old. To use this example, replace the user\ninput placeholders with your own information.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny a presigned URL request if the signature is more than 10\nminutes old\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"444455556666\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"NumericGreaterThan\": {\"s3-outposts:signatureAge\": 600000},\n\"StringEquals\": {\"s3-outposts:authType\": \"REST-QUERY-STRING\"}\n}\n}\n]\n}\nFor a list of condition keys and additional example policies that you can use to enforce specific\nbehavior when presigned URL requests are authenticated by using Signature Version 4, see AWS\nSignature Version 4 (SigV4) authentication-specific policy keys.\nNetwork path restriction\nIf you want to restrict the use of presigned URLs and all S3 on Outposts access to particular\nnetwork paths, you can write policies that require a particular network path. To set the restriction\non the IAM principal that makes the call, you can use identity-based AWS Identity and Access\nManagement (IAM) policies (for example, user, group, or role policies). To set the restriction on the\nS3 on Outposts resource, you can use resource-based policies (for example, bucket and access point\npolicies).\nA network-path restriction on the IAM principal requires the user of those credentials to make\nrequests from the specified network. A restriction on the bucket or access point requires that\nall requests to that resource originate from the specified network. These restrictions also apply\noutside of the presigned URL scenario.\nLimiting presigned URL capabilities API Version 2006-03-01 92",
      "start_idx": 178621,
      "end_idx": 180450,
      "metadata": {
        "num_sentences": 10,
        "num_words": 254,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Example",
              "Configuration",
              "Security Restriction"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "presigned URL",
            "Signature Version 4",
            "IAM policies",
            "resource-based policies",
            "network path restriction",
            "authType",
            "signatureAge",
            "REST-QUERY-STRING",
            "access point"
          ],
          "entities": [
            "Amazon S3",
            "AWS Identity and Access Management (IAM)",
            "Signature Version 4 (SigV4)",
            "ARN",
            "S3 on Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "IAM Policies",
            "Presigned URL Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure policies for Amazon S3 on Outposts to restrict presigned URL usage based on signature age, network path, and other conditions. It provides an example policy and discusses network path restrictions for both IAM principals and resources.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I restrict presigned URL usage in Amazon S3 on Outposts?",
            "What conditions can be applied to control access using Signature Version 4?",
            "How do network path restrictions work for IAM principals and resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "REST-QUERY-STRING",
          "Amazon S3",
          "Signature Version 4",
          "Signature Version 4 (SigV4)",
          "signatureAge",
          "ARN",
          "IAM",
          "network path restriction",
          "authType",
          "presigned URL",
          "resource-based policies",
          "AWS Identity and Access Management (IAM)",
          "access point",
          "Amazon S3 on Outposts",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_99",
      "text": "Amazon S3 on Outposts User Guide\nThe IAM global condition that you use depends on the type of endpoint. If you are using the public\nendpoint for S3 on Outposts, use aws:SourceIp. If you are using a VPC endpoint for S3 on\nOutposts, use aws:SourceVpc or aws:SourceVpce.\nThe following IAM policy statement requires the principal to access AWS only from the specified\nnetwork range. With this policy statement, all access must originate from that range. This includes\nthe case of someone who's using a presigned URL for S3 on Outposts. To use this example, replace\nthe user input placeholders with your own information.\n{\n\"Sid\": \"NetworkRestrictionForIAMPrincipal\",\n\"Effect\": \"Deny\",\n\"Action\": \"*\",\n\"Resource\": \"*\",\n\"Condition\": {\n\"NotIpAddressIfExists\": {\"aws:SourceIp\": \"IP-address-range\"},\n\"BoolIfExists\": {\"aws:ViaAWSService\": \"false\"}\n}\n}\nFor an example bucket policy that uses the aws:SourceIP AWS global condition key to restrict\naccess to an S3 on Outposts bucket to a specific network range, see Setting up IAM with S3 on\nOutposts.\nWho can create a presigned URL\nAnyone with valid security credentials can create a presigned URL. But for a user in the VPC to\nsuccessfully access an object, the presigned URL must be created by someone who has permission\nto perform the operation that the presigned URL is based upon.\nYou can use the following credentials to create a presigned URL:\n\u2022 IAM instance profile \u2013 Valid up to 6 hours.\n\u2022 AWS Security Token Service \u2013 Valid up to 36 hours when signed with permanent credentials,\nsuch as the credentials of the AWS account root user or an IAM user.\n\u2022 IAM user \u2013 Valid up to 7 days when you're using AWS Signature Version 4.\nTo create a presigned URL that's valid for up to 7 days, first delegate IAM user credentials (the\naccess key and secret key) to the SDK that you're using. Then, generate a presigned URL by using\nAWS Signature Version 4.\nWho can create a presigned URL API Version 2006-03-01 93",
      "start_idx": 180452,
      "end_idx": 182397,
      "metadata": {
        "num_sentences": 15,
        "num_words": 324,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "IAM Policy",
              "Presigned URL",
              "Access Restrictions"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM policy",
            "aws:SourceIp",
            "aws:SourceVpc",
            "presigned URL",
            "AWS Signature Version 4",
            "IAM instance profile",
            "AWS Security Token Service",
            "network restriction",
            "access control"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "AWS Security Token Service",
            "VPC",
            "AWS Signature Version 4"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "IAM Policies",
            "AWS Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS STS"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use IAM policies and presigned URLs to manage access to Amazon S3 on Outposts, including network restrictions and credential requirements for generating presigned URLs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I restrict access to S3 on Outposts using IAM policies?",
            "What credentials are required to create a presigned URL for S3 on Outposts?",
            "What is the validity duration of presigned URLs based on different credentials?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "IAM policy",
          "Amazon S3",
          "IAM",
          "aws:SourceIp",
          "aws:SourceVpc",
          "network restriction",
          "IAM instance profile",
          "VPC",
          "AWS STS",
          "presigned URL",
          "AWS Security Token Service",
          "access control",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_100",
      "text": "Amazon S3 on Outposts User Guide\nNote\n\u2022 If you created a presigned URL by using a temporary token, the URL expires when the\ntoken expires, even if you created the URL with a later expiration time.\n\u2022 Because presigned URLs grant access to your S3 on Outposts buckets to whoever has the\nURL, we recommend that you protect them appropriately. For more information about\nprotecting presigned URLs, see Limiting presigned URL capabilities.\nWhen does S3 on Outposts check the expiration date and time of a\npresigned URL?\nAt the time of the HTTP request, S3 on Outposts checks the expiration date and time of a signed\nURL. For example, if a client begins to download a large file immediately before the expiration\ntime, the download continues even if the expiration time passes during the download. However, if\nthe connection drops and the client tries to restart the download after the expiration time passes,\nthe download fails.\nFor more information about using a presigned URL to share or upload objects, see the following\ntopics.\nTopics\n\u2022 Sharing objects by using presigned URLs\n\u2022 Generating a presigned URL to upload an object to an S3 on Outposts bucket\nSharing objects by using presigned URLs\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects.\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nWhen does S3 on Outposts check the expiration date and time of a presigned URL? API Version 2006-03-01 94",
      "start_idx": 182399,
      "end_idx": 184387,
      "metadata": {
        "num_sentences": 14,
        "num_words": 346,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "presigned URL",
            "expiration time",
            "HTTP request",
            "bucket policy",
            "AWS SDKs",
            "AWS CLI",
            "virtual private cloud",
            "access control",
            "Outpost"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDKs",
            "AWS CLI",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use presigned URLs to manage time-limited access to objects in Amazon S3 on Outposts, including expiration behavior and best practices for securing URLs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does S3 on Outposts handle presigned URL expiration during a download?",
            "What are the security recommendations for presigned URLs?",
            "How can I generate a presigned URL to upload an object to S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "Outposts",
          "AWS CLI",
          "virtual private cloud",
          "Amazon S3",
          "expiration time",
          "VPC",
          "bucket policy",
          "presigned URL",
          "Outpost",
          "HTTP request",
          "access control",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_101",
      "text": "Amazon S3 on Outposts User Guide\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works.\nWhen you create a presigned URL, you must provide your security credentials, and then specify the\nfollowing:\n\u2022 An access point Amazon Resource Name (ARN) for the Amazon S3 on Outposts bucket\n\u2022 An object key\n\u2022 An HTTP method (GET for downloading objects)\n\u2022 An expiration date and time\nA presigned URL is valid only for the specified duration. That is, you must start the action that's\nallowed by the URL before the expiration date and time. You can use a presigned URL multiple\ntimes, up to the expiration date and time. If you created a presigned URL by using a temporary\ntoken, then the URL expires when the token expires, even if you created the URL with a later\nexpiration time.\nUsers in the virtual private cloud (VPC) who have access to the presigned URL can access the object.\nFor example, if you have a video in your bucket and both the bucket and the object are private,\nyou can share the video with others by generating a presigned URL. Because presigned URLs\ngrant access to your S3 on Outposts buckets to whoever has the URL, we recommend that you\nprotect these URLs appropriately. For more details about protecting presigned URLs, see Limiting\npresigned URL capabilities.\nAnyone with valid security credentials can create a presigned URL. However, the presigned URL\nmust be created by someone who has permission to perform the operation that the presigned URL\nis based upon. For more information, see Who can create a presigned URL.\nYou can generate a presigned URL to share an object in an S3 on Outposts bucket by using the\nAWS SDKs and the AWS CLI. For more information, see the following examples.\nUsing the AWS SDKs\nYou can use the AWS SDKs to generate a presigned URL that you can give to others so that they\ncan retrieve an object.\nSharing objects API Version 2006-03-01 95",
      "start_idx": 184389,
      "end_idx": 186356,
      "metadata": {
        "num_sentences": 17,
        "num_words": 349,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guidance",
              "Security"
            ]
          },
          "keywords": [
            "presigned URL",
            "Amazon S3 on Outposts",
            "access point ARN",
            "object key",
            "expiration time",
            "HTTP method",
            "temporary token",
            "virtual private cloud (VPC)",
            "AWS SDKs",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDKs",
            "AWS CLI",
            "access point ARN",
            "virtual private cloud (VPC)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and use presigned URLs to securely share objects stored in Amazon S3 on Outposts buckets, including required parameters and security considerations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a presigned URL for an S3 on Outposts bucket?",
            "What security measures should I consider when using presigned URLs?",
            "Can I use AWS SDKs to generate presigned URLs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "virtual private cloud (VPC)",
          "AWS CLI",
          "expiration time",
          "access point ARN",
          "object key",
          "presigned URL",
          "HTTP method",
          "temporary token",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_102",
      "text": "Amazon S3 on Outposts User Guide\nNote\nWhen you use the AWS SDKs to generate a presigned URL, the maximum expiration time\nfor a presigned URL is 7 days from the time of creation.\nJava\nExample\nThe following example generates a presigned URL that you can give to others so that they can\nretrieve an object from an S3 on Outposts bucket. For more information, see Using presigned\nURLs for S3 on Outposts. To use this example, replace the user input placeholders with\nyour own information.\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.time.Instant;\npublic class GeneratePresignedURL {\npublic static void main(String[] args) throws IOException {\nRegions clientRegion = Regions.DEFAULT_REGION;\nString accessPointArn = \"*** access point ARN ***\";\nString objectKey = \"*** object key ***\";\ntry {\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n.withRegion(clientRegion)\n.withCredentials(new ProfileCredentialsProvider())\n.build();\n// Set the presigned URL to expire after one hour.\nSharing objects API Version 2006-03-01 96",
      "start_idx": 186358,
      "end_idx": 187778,
      "metadata": {
        "num_sentences": 6,
        "num_words": 165,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "Instruction"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "AWS SDKs",
            "Java",
            "access point ARN",
            "object key",
            "expiration time",
            "GeneratePresignedUrlRequest",
            "Regions"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDKs",
            "Regions",
            "GeneratePresignedUrlRequest",
            "AmazonS3ClientBuilder"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK",
            "AmazonS3ClientBuilder"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of generating a presigned URL using the AWS SDK for Java to retrieve objects from an Amazon S3 on Outposts bucket, with a maximum expiration time of 7 days.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for S3 on Outposts using Java?",
            "What is the maximum expiration time for a presigned URL in AWS?",
            "What are the required inputs for generating a presigned URL in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "Outposts",
          "GeneratePresignedUrlRequest",
          "Amazon S3",
          "expiration time",
          "Regions",
          "access point ARN",
          "presigned URL",
          "Java",
          "object key",
          "AWS Outposts",
          "AmazonS3ClientBuilder"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_103",
      "text": "Amazon S3 on Outposts User Guide\njava.util.Date expiration = new java.util.Date();\nlong expTimeMillis = Instant.now().toEpochMilli();\nexpTimeMillis += 1000 * 60 * 60;\nexpiration.setTime(expTimeMillis);\n// Generate the presigned URL.\nSystem.out.println(\"Generating pre-signed URL.\");\nGeneratePresignedUrlRequest generatePresignedUrlRequest =\nnew GeneratePresignedUrlRequest(accessPointArn, objectKey)\n.withMethod(HttpMethod.GET)\n.withExpiration(expiration);\nURL url = s3Client.generatePresignedUrl(generatePresignedUrlRequest);\nSystem.out.println(\"Pre-Signed URL: \" + url.toString());\n} catch (AmazonServiceException e) {\n// The call was transmitted successfully, but Amazon S3 couldn't\nprocess\n// it, so it returned an error response.\ne.printStackTrace();\n} catch (SdkClientException e) {\n// Amazon S3 couldn't be contacted for a response, or the client\n// couldn't parse the response from Amazon S3.\ne.printStackTrace();\n}\n}\n}\n.NET\nExample\nThe following example generates a presigned URL that you can give to others so that they can\nretrieve an object from an S3 on Outposts bucket. For more information, see Using presigned\nURLs for S3 on Outposts. To use this example, replace the user input placeholders with\nyour own information.\nusing Amazon;\nusing Amazon.S3;\nusing Amazon.S3.Model;\nusing System;\nnamespace Amazon.DocSamples.S3\n{\nSharing objects API Version 2006-03-01 97",
      "start_idx": 187780,
      "end_idx": 189157,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "GeneratePresignedUrlRequest",
            "HttpMethod",
            "expiration",
            "accessPointArn",
            "objectKey",
            "AmazonServiceException",
            "SdkClientException"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "GeneratePresignedUrlRequest",
            "HttpMethod.GET",
            "AmazonServiceException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "Java",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples for generating presigned URLs to retrieve objects from Amazon S3 on Outposts buckets using Java and .NET code snippets.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for S3 on Outposts?",
            "What are the required inputs for GeneratePresignedUrlRequest?",
            "How can I handle errors when generating a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "GeneratePresignedUrlRequest",
          "Amazon S3",
          "accessPointArn",
          "objectKey",
          "HttpMethod",
          "HttpMethod.GET",
          "AmazonServiceException",
          "presigned URL",
          "SdkClientException",
          "expiration",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_104",
      "text": "Amazon S3 on Outposts User Guide\nclass GenPresignedURLTest\n{\nprivate const string accessPointArn = \"*** access point ARN ***\";\nprivate const string objectKey = \"*** object key ***\";\n// Specify how long the presigned URL lasts, in hours.\nprivate const double timeoutDuration = 12;\n// Specify your bucket Region (an example Region is shown).\nprivate static readonly RegionEndpoint bucketRegion =\nRegionEndpoint.USWest2;\nprivate static IAmazonS3 s3Client;\npublic static void Main()\n{\ns3Client = new AmazonS3Client(bucketRegion);\nstring urlString = GeneratePreSignedURL(timeoutDuration);\n}\nstatic string GeneratePreSignedURL(double duration)\n{\nstring urlString = \"\";\ntry\n{\nGetPreSignedUrlRequest request1 = new GetPreSignedUrlRequest\n{\nBucketName = accessPointArn,\nKey = objectKey,\nExpires = DateTime.UtcNow.AddHours(duration)\n};\nurlString = s3Client.GetPreSignedURL(request1);\n}\ncatch (AmazonS3Exception e)\n{\nConsole.WriteLine(\"Error encountered on server. Message:'{0}' when\nwriting an object\", e.Message);\n}\ncatch (Exception e)\n{\nConsole.WriteLine(\"Unknown encountered on server. Message:'{0}' when\nwriting an object\", e.Message);\n}\nreturn urlString;\n}\n}\n}\nSharing objects API Version 2006-03-01 98",
      "start_idx": 189159,
      "end_idx": 190356,
      "metadata": {
        "num_sentences": 5,
        "num_words": 151,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Presigned URL",
            "access point ARN",
            "object key",
            "bucket Region",
            "timeout duration",
            "AmazonS3Client",
            "GetPreSignedUrlRequest",
            "RegionEndpoint"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "RegionEndpoint.USWest2",
            "AmazonS3Client",
            "GetPreSignedUrlRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AmazonS3Client"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide to generate a presigned URL for accessing objects in an Amazon S3 bucket on Outposts using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I generate a presigned URL for Amazon S3 on Outposts?",
            "What is the timeout duration for a presigned URL in this example?",
            "How do I handle exceptions when generating a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "timeout duration",
          "GetPreSignedUrlRequest",
          "RegionEndpoint",
          "access point ARN",
          "bucket Region",
          "object key",
          "AmazonS3Client",
          "RegionEndpoint.USWest2",
          "Presigned URL"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_105",
      "text": "Amazon S3 on Outposts User Guide\nPython\nThe following example generates a presigned URL to share an object by using the SDK for\nPython (Boto3). For example, use a Boto3 client and the generate_presigned_url function\nto generate a presigned URL that allows you to GET an object.\nimport boto3\nurl = boto3.client('s3').generate_presigned_url(\nClientMethod='get_object',\nParams={'Bucket': 'ACCESS_POINT_ARN', 'Key': 'OBJECT_KEY'},\nExpiresIn=3600)\nFor more information about using the SDK for Python (Boto3) to generate a presigned URL, see\nPython in the AWS SDK for Python (Boto) API Reference.\nUsing the AWS CLI\nThe following example AWS CLI command generates a presigned URL for an S3 on Outposts\nbucket. To use this example, replace the user input placeholders with your own information.\nNote\nWhen you use the AWS CLI to generate a presigned URL, the maximum expiration time for\na presigned URL is 7 days from the time of creation.\naws s3 presign s3://arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/example-outpost-access-\npoint/mydoc.txt --expires-in 604800\nFor more information, see presign in the AWS CLI Command Reference.\nGenerating a presigned URL to upload an object to an S3 on Outposts\nbucket\nTo grant time-limited access to objects that are stored locally on an Outpost without updating your\nbucket policy, you can use a presigned URL. With presigned URLs, you as the bucket owner can\nshare objects with individuals in your virtual private cloud (VPC) or grant them the ability to upload\nor delete objects.\nUploading an object API Version 2006-03-01 99",
      "start_idx": 190358,
      "end_idx": 191957,
      "metadata": {
        "num_sentences": 10,
        "num_words": 238,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "Boto3",
            "AWS CLI",
            "access point",
            "bucket policy",
            "virtual private cloud",
            "upload",
            "expiration time"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Boto3",
            "AWS CLI",
            "VPC"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate presigned URLs for Amazon S3 on Outposts using Boto3 and AWS CLI, enabling time-limited access for GET and upload operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL using Boto3?",
            "What is the maximum expiration time for a presigned URL in AWS CLI?",
            "How can I use a presigned URL to upload an object to an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "virtual private cloud",
          "Amazon S3",
          "Boto3",
          "expiration time",
          "VPC",
          "bucket policy",
          "presigned URL",
          "upload",
          "access point"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_106",
      "text": "Amazon S3 on Outposts User Guide\nWhen you create a presigned URL by using the AWS SDKs or the AWS Command Line Interface\n(AWS CLI), you associate the URL with a specific action. You also grant time-limited access to the\npresigned URL by choosing a custom expiration time that can be as low as 1 second and as high\nas 7 days. When you share the presigned URL, the individual in the VPC can perform the action\nembedded in the URL as if they were the original signing user. When the URL reaches its expiration\ntime, the URL expires and no longer works.\nWhen you create a presigned URL, you must provide your security credentials, and then specify the\nfollowing:\n\u2022 An access point Amazon Resource Name (ARN) for the Amazon S3 on Outposts bucket\n\u2022 An object key\n\u2022 An HTTP method (PUT for uploading objects)\n\u2022 An expiration date and time\nA presigned URL is valid only for the specified duration. That is, you must start the action that's\nallowed by the URL before the expiration date and time. You can use a presigned URL multiple\ntimes, up to the expiration date and time. If you created a presigned URL by using a temporary\ntoken, then the URL expires when the token expires, even if you created the URL with a later\nexpiration time.\nIf the action allowed by a presigned URL consists of multiple steps, such as a multipart upload,\nyou must start all steps before the expiration time. If S3 on Outposts tries to start a step with an\nexpired URL, you receive an error.\nUsers in the virtual private cloud (VPC) who have access to the presigned URL can upload objects.\nFor example, a user in the VPC who has access to the presigned URL can upload an object to your\nbucket. Because presigned URLs grant access to your S3 on Outposts bucket to any user in the VPC\nwho has access to the presigned URL, we recommend that you protect these URLs appropriately.\nFor more details about protecting presigned URLs, see Limiting presigned URL capabilities.\nAnyone with valid security credentials can create a presigned URL. However, the presigned URL\nmust be created by someone who has permission to perform the operation that the presigned URL\nis based upon. For more information, see Who can create a presigned URL.\nUploading an object API Version 2006-03-01 100",
      "start_idx": 191959,
      "end_idx": 194204,
      "metadata": {
        "num_sentences": 18,
        "num_words": 401,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage"
            ]
          },
          "keywords": [
            "presigned URL",
            "expiration time",
            "Amazon S3 on Outposts",
            "access point ARN",
            "object key",
            "HTTP method",
            "multipart upload",
            "virtual private cloud",
            "security credentials",
            "temporary token"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "VPC",
            "AWS SDKs",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The document explains how to create and use presigned URLs for Amazon S3 on Outposts, including their configuration, expiration behavior, and best practices for secure usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a presigned URL for Amazon S3 on Outposts?",
            "What is the expiration behavior of presigned URLs?",
            "How can I secure presigned URLs in a VPC?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "Outposts",
          "virtual private cloud",
          "AWS CLI",
          "Amazon S3",
          "security credentials",
          "multipart upload",
          "expiration time",
          "VPC",
          "access point ARN",
          "object key",
          "presigned URL",
          "HTTP method",
          "temporary token",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_107",
      "text": "Amazon S3 on Outposts User Guide\nUsing the AWS SDKs to generate a presigned URL for an S3 on Outposts object\noperation\nJava\nSDK for Java 2.x\nThis example shows how to generate a presigned URL that you can use to upload an object\nto an S3 on Outposts bucket for a limited time. For more information, see Using presigned\nURLs for S3 on Outposts.\npublic static void signBucket(S3Presigner presigner, String\noutpostAccessPointArn, String keyName) {\ntry {\nPutObjectRequest objectRequest = PutObjectRequest.builder()\n.bucket(accessPointArn)\n.key(keyName)\n.contentType(\"text/plain\")\n.build();\nPutObjectPresignRequest presignRequest =\nPutObjectPresignRequest.builder()\n.signatureDuration(Duration.ofMinutes(10))\n.putObjectRequest(objectRequest)\n.build();\nPresignedPutObjectRequest presignedRequest =\npresigner.presignPutObject(presignRequest);\nString myURL = presignedRequest.url().toString();\nSystem.out.println(\"Presigned URL to upload a file to: \" +myURL);\nSystem.out.println(\"Which HTTP method must be used when uploading a\nfile: \" +\npresignedRequest.httpRequest().method());\n// Upload content to the S3 on Outposts bucket by using this URL.\nURL url = presignedRequest.url();\n// Create the connection and use it to upload the new object by using\nthe presigned URL.\nUploading an object API Version 2006-03-01 101",
      "start_idx": 194206,
      "end_idx": 195513,
      "metadata": {
        "num_sentences": 5,
        "num_words": 163,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "PutObjectRequest",
            "PutObjectPresignRequest",
            "PresignedPutObjectRequest",
            "AWS SDK",
            "Java SDK",
            "upload object",
            "signature duration"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS SDK for Java 2.x",
            "PutObjectRequest",
            "PresignedPutObjectRequest",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Presigned URL Usage"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java 2.x"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate a presigned URL using the AWS SDK for Java 2.x to upload an object to an Amazon S3 on Outposts bucket for a limited time.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for Amazon S3 on Outposts?",
            "What is the process to upload an object using a presigned URL?",
            "What code example demonstrates using AWS SDK for Java to work with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "signature duration",
          "Amazon S3",
          "upload object",
          "API Version 2006-03-01",
          "Java SDK",
          "PutObjectRequest",
          "AWS SDK for Java 2.x",
          "presigned URL",
          "PresignedPutObjectRequest",
          "AWS SDK",
          "PutObjectPresignRequest",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_108",
      "text": "Amazon S3 on Outposts User Guide\nHttpURLConnection connection = (HttpURLConnection)\nurl.openConnection();\nconnection.setDoOutput(true);\nconnection.setRequestProperty(\"Content-Type\",\"text/plain\");\nconnection.setRequestMethod(\"PUT\");\nOutputStreamWriter out = new\nOutputStreamWriter(connection.getOutputStream());\nout.write(\"This text was uploaded as an object by using a presigned\nURL.\");\nout.close();\nconnection.getResponseCode();\nSystem.out.println(\"HTTP response code is \" +\nconnection.getResponseCode());\n} catch (S3Exception e) {\ne.getStackTrace();\n} catch (IOException e) {\ne.getStackTrace();\n}\n}\nPython\nSDK for Python (Boto3)\nThis example shows how to generate a presigned URL that can perform an S3 on Outposts\naction for a limited time. For more information, see Using presigned URLs for S3 on\nOutposts. To make a request with the URL, use the Requests package.\nimport argparse\nimport logging\nimport boto3\nfrom botocore.exceptions import ClientError\nimport requests\nlogger = logging.getLogger(__name__)\ndef generate_presigned_url(s3_client, client_method, method_parameters,\nexpires_in):\n\"\"\"\nUploading an object API Version 2006-03-01 102",
      "start_idx": 195515,
      "end_idx": 196660,
      "metadata": {
        "num_sentences": 5,
        "num_words": 130,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "HttpURLConnection",
            "Boto3",
            "Requests package",
            "API",
            "object upload",
            "S3Exception",
            "ClientError"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Boto3",
            "Requests",
            "HttpURLConnection"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "Requests",
            "HttpURLConnection"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of using presigned URLs to upload objects to Amazon S3 on Outposts, including Java and Python code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I generate a presigned URL for Amazon S3 on Outposts?",
            "What is an example of uploading an object using a presigned URL in Java?",
            "How do I use Python's Boto3 SDK for S3 on Outposts operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "HttpURLConnection",
          "Requests",
          "Outposts",
          "Requests package",
          "S3Exception",
          "Amazon S3",
          "API",
          "Boto3",
          "object upload",
          "ClientError",
          "presigned URL"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_109",
      "text": "Amazon S3 on Outposts User Guide\nGenerate a presigned S3 on Outposts URL that can be used to perform an\naction.\n:param s3_client: A Boto3 Amazon S3 client.\n:param client_method: The name of the client method that the URL performs.\n:param method_parameters: The parameters of the specified client method.\n:param expires_in: The number of seconds that the presigned URL is valid for.\n:return: The presigned URL.\n\"\"\"\ntry:\nurl = s3_client.generate_presigned_url(\nClientMethod=client_method,\nParams=method_parameters,\nExpiresIn=expires_in\n)\nlogger.info(\"Got presigned URL: %s\", url)\nexcept ClientError:\nlogger.exception(\n\"Couldn't get a presigned URL for client method '%s'.\",\nclient_method)\nraise\nreturn url\ndef usage_demo():\nlogging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')\nprint('-'*88)\nprint(\"Welcome to the Amazon S3 on Outposts presigned URL demo.\")\nprint('-'*88)\nparser = argparse.ArgumentParser()\nparser.add_argument('accessPointArn', help=\"The name of the S3 on Outposts\naccess point ARN.\")\nparser.add_argument(\n'key', help=\"For a GET operation, the key of the object in S3 on\nOutposts. For a \"\n\"PUT operation, the name of a file to upload.\")\nparser.add_argument(\n'action', choices=('get', 'put'), help=\"The action to perform.\")\nargs = parser.parse_args()\ns3_client = boto3.client('s3')\nclient_action = 'get_object' if args.action == 'get' else 'put_object'\nUploading an object API Version 2006-03-01 103",
      "start_idx": 196662,
      "end_idx": 198098,
      "metadata": {
        "num_sentences": 13,
        "num_words": 184,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Usage Instructions"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URL",
            "Boto3",
            "client method",
            "expires_in",
            "access point ARN",
            "GET operation",
            "PUT operation",
            "ClientError"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Boto3",
            "ClientError",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Boto3",
            "argparse",
            "logging"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to generate a presigned URL for Amazon S3 on Outposts using Boto3, including code examples and usage instructions.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I generate a presigned URL for Amazon S3 on Outposts?",
            "What are the parameters required for the generate_presigned_url method?",
            "How can I handle errors when generating a presigned URL?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "PUT operation",
          "Amazon S3",
          "Boto3",
          "client method",
          "API Version 2006-03-01",
          "ClientError",
          "access point ARN",
          "GET operation",
          "presigned URL",
          "expires_in"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_110",
      "text": "Amazon S3 on Outposts User Guide\nurl = generate_presigned_url(\ns3_client, client_action, {'Bucket': args.accessPointArn, 'Key':\nargs.key}, 1000)\nprint(\"Using the Requests package to send a request to the URL.\")\nresponse = None\nif args.action == 'get':\nresponse = requests.get(url)\nelif args.action == 'put':\nprint(\"Putting data to the URL.\")\ntry:\nwith open(args.key, 'r') as object_file:\nobject_text = object_file.read()\nresponse = requests.put(url, data=object_text)\nexcept FileNotFoundError:\nprint(f\"Couldn't find {args.key}. For a PUT operation, the key must\nbe the \"\nf\"name of a file that exists on your computer.\")\nif response is not None:\nprint(\"Got response:\")\nprint(f\"Status: {response.status_code}\")\nprint(response.text)\nprint('-'*88)\nif __name__ == '__main__':\nusage_demo()\nAmazon S3 on Outposts with local Amazon EMR on Outposts\nAmazon EMR is a managed cluster platform that simplifies running big data frameworks, such\nas Apache Hadoop and Apache Spark, on AWS to process and analyze vast amounts of data. By\nusing these frameworks and related open-source projects, you can process data for analytics\npurposes and business intelligence workloads. Amazon EMR also helps you transform and move\nlarge amounts of data into and out of other AWS data stores and databases, and supports Amazon\nS3 on Outposts. For more information about Amazon EMR, see Amazon EMR on Outposts in the\nAmazon EMR Management Guide.\nAmazon S3 on Outposts with local Amazon EMR API Version 2006-03-01 104",
      "start_idx": 198100,
      "end_idx": 199587,
      "metadata": {
        "num_sentences": 9,
        "num_words": 215,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Interaction"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Amazon EMR",
            "presigned URL",
            "requests package",
            "API Version 2006-03-01",
            "data processing",
            "big data frameworks",
            "Apache Spark",
            "FileNotFoundError"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Apache Hadoop",
            "Apache Spark",
            "AWS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Data Processing",
          "secondary_categories": [
            "Big Data Frameworks",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "requests package",
            "Python",
            "API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines how to use Amazon S3 on Outposts with local Amazon EMR for big data processing, including code examples for interacting with presigned URLs and handling data operations such as GET and PUT requests.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I use presigned URLs to interact with Amazon S3 on Outposts?",
            "What are the steps for performing GET and PUT operations using the requests package?",
            "How does Amazon EMR integrate with Amazon S3 on Outposts for big data processing?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Data Processing]",
        "tf_idf_keywords": [
          "data processing",
          "Apache Hadoop",
          "AWS",
          "Outposts",
          "Amazon S3",
          "API Version 2006-03-01",
          "big data frameworks",
          "Apache Spark",
          "FileNotFoundError",
          "presigned URL",
          "AWS Outposts",
          "Amazon EMR",
          "Amazon S3 on Outposts",
          "requests package"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_111",
      "text": "Amazon S3 on Outposts User Guide\nFor Amazon S3 on Outposts, Amazon EMR started to support the Apache Hadoop S3A connector in\nversion 7.0.0. Earlier versions of Amazon EMR don't support local S3 on Outposts, and the EMR File\nSystem (EMRFS) is not supported.\nSupported applications\nAmazon EMR with Amazon S3 on Outposts supports the following applications:\n\u2022 Hadoop\n\u2022 Spark\n\u2022 Hue\n\u2022 Hive\n\u2022 Sqoop\n\u2022 Pig\n\u2022 Hudi\n\u2022 Flink\nFor more information, see the Amazon EMR Release Guide.\nCreate and configure an Amazon S3 on Outposts bucket\nAmazon EMR uses the AWS SDK for Java with Amazon S3 on Outposts to store input data and\noutput data. Your Amazon EMR log files are stored in a Regional Amazon S3 location that you\nselect and aren't stored locally on the Outpost. For more information, see Amazon EMR logs in the\nAmazon EMR Management Guide.\nTo conform with Amazon S3 and DNS requirements, S3 on Outposts buckets have naming\nrestrictions and limitations. For more information, see Creating an S3 on Outposts bucket.\nWith Amazon EMR version 7.0.0 and later, you can use Amazon EMR with S3 on Outposts and the\nS3A file system.\nPrerequisites\nS3 on Outposts permissions \u2013 When you create your Amazon EMR instance profile, your role must\ncontain the AWS Identity and Access Management (IAM) namespace for S3 on Outposts. S3 on\nOutposts has its own namespace, s3-outposts*. For an example policy that uses this namespace,\nsee Setting up IAM with S3 on Outposts.\nCreating an Amazon S3 on Outposts bucket API Version 2006-03-01 105",
      "start_idx": 199589,
      "end_idx": 201100,
      "metadata": {
        "num_sentences": 13,
        "num_words": 260,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Compatibility",
              "Prerequisites"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "S3A connector",
            "Hadoop",
            "IAM",
            "EMRFS",
            "bucket naming restrictions",
            "AWS SDK for Java",
            "log files",
            "permissions"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EMR",
            "Apache Hadoop",
            "AWS SDK for Java",
            "IAM"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Big Data Processing",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "IAM"
          ],
          "mentioned_tools": [
            "Hadoop",
            "Spark",
            "Hue"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the compatibility of Amazon EMR version 7.0.0 and later with Amazon S3 on Outposts, detailing supported applications, prerequisites, and bucket configuration guidelines.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What applications are supported by Amazon EMR with S3 on Outposts?",
            "What are the prerequisites for using S3 on Outposts with Amazon EMR?",
            "How do I create and configure an S3 on Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Apache Hadoop",
          "Amazon S3",
          "IAM",
          "Hadoop",
          "EMRFS",
          "permissions",
          "bucket naming restrictions",
          "log files",
          "AWS SDK for Java",
          "S3A connector",
          "Amazon EMR",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_112",
      "text": "Amazon S3 on Outposts User Guide\nS3A connector \u2013 To configure your EMR cluster to access data from an Amazon S3 on Outposts\nbucket, you must use the Apache Hadoop S3A connector. To use the connector, ensure that all of\nyour S3 URIs use the s3a scheme. If they don't, you can configure the file system implementation\nthat you use for your EMR cluster so that your S3 URIs work with the S3A connector.\nTo configure the file system implementation to work with the S3A connector, you use the\nfs.file_scheme.impl and fs.AbstractFileSystem.file_scheme.impl configuration\nproperties for your EMR cluster, where file_scheme corresponds to the type of S3 URIs that\nyou have. To use the following example, replace the user input placeholders with your own\ninformation. For example, to change the file system implementation for S3 URIs that use the s3\nscheme, specify the following cluster configuration properties:\n[\n{\n\"Classification\": \"core-site\",\n\"Properties\": {\n\"fs.s3.impl\": \"org.apache.hadoop.fs.s3a.S3AFileSystem\",\n\"fs.AbstractFileSystem.s3.impl\": \"org.apache.hadoop.fs.s3a.S3A\"\n}\n}\n]\nTo use S3A, set the fs.file_scheme.impl configuration property\nto org.apache.hadoop.fs.s3a.S3AFileSystem, and set the\nfs.AbstractFileSystem.file_scheme.impl property to\norg.apache.hadoop.fs.s3a.S3A.\nFor example, if you are accessing the path s3a://bucket/..., set the fs.s3a.impl\nproperty to org.apache.hadoop.fs.s3a.S3AFileSystem, and set the\nfs.AbstractFileSystem.s3a.impl property to org.apache.hadoop.fs.s3a.S3A.\nGetting started using Amazon EMR with Amazon S3 on Outposts\nThe following topics explain how to get started using Amazon EMR with Amazon S3 on Outposts.\nTopics\n\u2022 Create a permissions policy\n\u2022 Create and configure your cluster\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 106",
      "start_idx": 201102,
      "end_idx": 202913,
      "metadata": {
        "num_sentences": 9,
        "num_words": 250,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "EMR cluster",
            "S3A connector",
            "Apache Hadoop",
            "fs.file_scheme.impl",
            "fs.AbstractFileSystem.file_scheme.impl",
            "permissions policy",
            "cluster configuration",
            "s3a scheme",
            "S3 URIs"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EMR",
            "Apache Hadoop",
            "Outposts",
            "S3AFileSystem"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Big Data Processing",
            "Hadoop Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "Outposts"
          ],
          "mentioned_tools": [
            "Apache Hadoop",
            "S3A connector"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to configure an EMR cluster to access data from an Amazon S3 on Outposts bucket using the Apache Hadoop S3A connector, including necessary configuration properties and examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an EMR cluster to use the S3A connector?",
            "What are the required configuration properties for accessing Amazon S3 on Outposts?",
            "How can I set up permissions for Amazon EMR with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Apache Hadoop",
          "EMR cluster",
          "Outposts",
          "Amazon S3",
          "S3AFileSystem",
          "permissions policy",
          "cluster configuration",
          "S3 URIs",
          "S3A connector",
          "s3a scheme",
          "Amazon EMR",
          "fs.AbstractFileSystem.file_scheme.impl",
          "Amazon S3 on Outposts",
          "fs.file_scheme.impl"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_113",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Configurations overview\n\u2022 Considerations\nCreate a permissions policy\nBefore you can create an EMR cluster that uses Amazon S3 on Outposts, you must create an\nIAM policy to attach to the Amazon EC2 instance profile for the cluster. The policy must have\npermissions to access the S3 on Outposts access point Amazon Resource Name (ARN). For more\ninformation about creating IAM policies for S3 on Outposts, see Setting up IAM with S3 on\nOutposts.\nThe following example policy shows how to grant the required permissions. After you create the\npolicy, attach the policy to the instance profile role that you use to create your EMR cluster, as\ndescribed in the the section called \u201cCreate and configure your cluster\u201d section. To use this example,\nreplace the user input placeholders with your own information.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3-outposts:us-\nwest-2:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/access-point-name,\n\"Action\": [\n\"s3-outposts:*\"\n]\n}\n]\n}\nCreate and configure your cluster\nTo create a cluster that runs Spark with S3 on Outposts, complete the following steps in the\nconsole.\nTo create a cluster that runs Spark with S3 on Outposts\n1. Open the Amazon EMR console at https://console.aws.amazon.com/elasticmapreduce/.\n2. In the left navigation pane, choose Clusters.\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 107",
      "start_idx": 202915,
      "end_idx": 204378,
      "metadata": {
        "num_sentences": 12,
        "num_words": 220,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions Setup",
              "Cluster Creation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM policy",
            "EMR cluster",
            "access point ARN",
            "Spark",
            "permissions",
            "instance profile",
            "Amazon EC2",
            "Amazon EMR console",
            "S3 Outposts API"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "Amazon EC2",
            "Amazon EMR",
            "Spark"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data Processing",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "IAM"
          ],
          "mentioned_tools": [
            "Spark"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an IAM policy and configure an EMR cluster to use Amazon S3 on Outposts, including an example policy and step-by-step instructions for cluster creation in the Amazon EMR console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure an EMR cluster to use Amazon S3 on Outposts?",
            "What permissions are required to access S3 on Outposts?",
            "How do I create an IAM policy for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "EMR cluster",
          "Spark",
          "IAM policy",
          "Amazon EC2",
          "IAM",
          "permissions",
          "Amazon EMR console",
          "access point ARN",
          "S3 Outposts API",
          "instance profile",
          "Amazon EMR",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_114",
      "text": "Amazon S3 on Outposts User Guide\n3. Choose Create cluster.\n4. For Amazon EMR release, choose emr-7.0.0 or later.\n5. For Application bundle, choose Spark interactive. Then select any other supported\napplications that you want to be included in your cluster.\n6. To enable Amazon S3 on Outposts, enter your configuration settings.\nSample configuration settings\nTo use the following sample configuration settings, replace the user input placeholders\nwith your own information.\n[\n{\n\"Classification\": \"core-site\",\n\"Properties\": {\n\"fs.s3a.bucket.DOC-EXAMPLE-BUCKET.accesspoint.arn\": \"arn:aws:s3-outposts:us-\nwest-2:111122223333:outpost/op-01ac5d28a6a232904/accesspoint/access-point-name\"\n\"fs.s3a.committer.name\": \"magic\",\n\"fs.s3a.select.enabled\": \"false\"\n}\n},\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-corretto.x86_64\"\n}\n}\n],\n\"Properties\": {}\n},\n{\n\"Classification\": \"spark-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-corretto.x86_64\"\n}\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 108",
      "start_idx": 204380,
      "end_idx": 205565,
      "metadata": {
        "num_sentences": 11,
        "num_words": 131,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "Spark interactive",
            "configuration settings",
            "core-site",
            "hadoop-env",
            "spark-env",
            "access point",
            "JAVA_HOME",
            "fs.s3a"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EMR",
            "Spark",
            "Outposts",
            "JAVA_HOME"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Big Data",
            "Distributed Systems"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "Outposts"
          ],
          "mentioned_tools": [
            "Spark",
            "Hadoop",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This document provides procedural steps to configure Amazon EMR clusters with Amazon S3 on Outposts, including sample settings for integration and environment variables.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon EMR with Amazon S3 on Outposts?",
            "What are the sample configuration settings for Spark with Amazon S3 on Outposts?",
            "How can I set JAVA_HOME for Hadoop and Spark environments?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "Spark",
          "Outposts",
          "Amazon S3",
          "configuration settings",
          "hadoop-env",
          "JAVA_HOME",
          "Spark interactive",
          "fs.s3a",
          "Amazon EMR",
          "access point",
          "Amazon S3 on Outposts",
          "core-site",
          "spark-env"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_115",
      "text": "Amazon S3 on Outposts User Guide\n}\n],\n\"Properties\": {}\n},\n{\n\"Classification\": \"spark-defaults\",\n\"Properties\": {\n\"spark.executorEnv.JAVA_HOME\": \"/usr/lib/jvm/java-11-amazon-\ncorretto.x86_64\",\n\"spark.sql.sources.fastS3PartitionDiscovery.enabled\": \"false\"\n}\n}\n]\n7. In the Networking section, choose a virtual private cloud (VPC) and subnet that are on your\nAWS Outposts rack. For more information about Amazon EMR on Outposts, see EMR clusters\non AWS Outposts in the Amazon EMR Management Guide.\n8. In the EC2 instance profile for Amazon EMR section, choose the IAM role that has the\npermissions policy that you created earlier attached.\n9. Configure your remaining cluster settings, and then choose Create cluster.\nConfigurations overview\nThe following table describes S3A configurations and the values to specify for their parameters\nwhen you set up a cluster that uses S3 on Outposts with Amazon EMR.\nParameter Default value Required value for Explanation\nS3 on Outposts\nfs.s3a.aw If not specified, S3A The access point Amazon S3 on\ns.credent will look for S3 in ARN of the S3 on Outposts supports\nials.provider Region bucket with Outposts bucket virtual private cloud\nthe Outposts bucket (VPC)-only access\nname. points as the only\nmeans to access your\nOutposts buckets.\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 109",
      "start_idx": 205567,
      "end_idx": 206924,
      "metadata": {
        "num_sentences": 11,
        "num_words": 202,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Amazon EMR",
            "VPC",
            "IAM role",
            "S3A configurations",
            "access point",
            "EC2 instance profile",
            "permissions policy",
            "AWS Outposts rack"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon EMR",
            "S3A",
            "IAM role"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Data Storage",
            "Cluster Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EMR",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "S3A"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for configuring Amazon EMR clusters to use Amazon S3 on Outposts, including VPC, subnet, and IAM role setup, as well as S3A-specific parameter configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon EMR to use S3 on Outposts?",
            "What are the required S3A configurations for using Amazon S3 on Outposts?",
            "Which IAM roles and permissions are needed for Amazon EMR with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "Outposts",
          "S3A configurations",
          "Amazon S3",
          "S3A",
          "AWS Outposts rack",
          "VPC",
          "permissions policy",
          "IAM role",
          "AWS Outposts",
          "Amazon EMR",
          "access point",
          "EC2 instance profile"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_116",
      "text": "Amazon S3 on Outposts User Guide\nParameter Default value Required value for Explanation\nS3 on Outposts\nfs.s3a.co file magic Magic committer is\nmmitter.name the only supported\ncommitter for S3 on\nOutposts.\nfs.s3a.se TRUE FALSE S3 Select is not\nlect.enabled supported on\nOutposts.\nJAVA_HOME /usr/lib/jvm/ /usr/lib/jvm/ S3 on Outposts on\njava-8 java-11-amazon S3A requires Java\n-corretto version 11.\n.x86_64\nThe following table describes Spark configurations and the values to specify for their parameters\nwhen you set up a cluster that uses S3 on Outposts with Amazon EMR.\nParameter Default value Required value for Explanation\nS3 on Outposts\nspark.sql TRUE FALSE S3 on Outposts\n.sources. doesn't support fast\nfastS3Par partition.\ntitionDis\ncovery.enabled\nspark.exe /usr/lib/jvm/ /usr/lib/jvm/ S3 on Outposts on\ncutorEnv. java-8 java-11-amazon S3A requires Java\nJAVA_HOME -corretto version 11.\n.x86_64\nGetting started using Amazon EMR with Amazon S3 on Outposts API Version 2006-03-01 110",
      "start_idx": 206926,
      "end_idx": 207912,
      "metadata": {
        "num_sentences": 9,
        "num_words": 142,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Parameter Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "fs.s3a.committer.name",
            "fs.s3a.select.enabled",
            "JAVA_HOME",
            "Spark configurations",
            "Amazon EMR",
            "S3 Select",
            "fast partition discovery",
            "Magic committer",
            "Java version 11"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "S3A",
            "JAVA_HOME",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Big Data Processing",
            "Java Runtime Environment"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR"
          ],
          "mentioned_tools": [
            "Spark",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides configuration details for using Amazon S3 on Outposts with Amazon EMR, including required parameters and Java version dependencies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What Java version is required for S3 on Outposts?",
            "Which committer is supported for S3 on Outposts?",
            "Does Amazon S3 on Outposts support fast partition discovery?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Magic committer",
          "fs.s3a.committer.name",
          "S3A",
          "API Version 2006-03-01",
          "JAVA_HOME",
          "Spark configurations",
          "fast partition discovery",
          "fs.s3a.select.enabled",
          "S3 Select",
          "Amazon EMR",
          "Amazon S3 on Outposts",
          "Java version 11"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_117",
      "text": "Amazon S3 on Outposts User Guide\nConsiderations\nConsider the following when you integrate Amazon EMR with S3 on Outposts buckets:\n\u2022 Amazon S3 on Outposts is supported with Amazon EMR version 7.0.0 and later.\n\u2022 The S3A connector is required to use S3 on Outposts with Amazon EMR. Only S3A has the\nfeatures required to interact with S3 on Outposts buckets. For S3A connector setup information,\nsee Prerequisites.\n\u2022 Amazon S3 on Outposts supports only server-side encryption with Amazon S3 managed keys\n(SSE-S3) with Amazon EMR. For more information, see the section called \u201cData encryption\u201d.\n\u2022 Amazon S3 on Outposts doesn't support writes with the S3A FileOutputCommitter. Writes\nwith the S3A FileOutputCommitter on S3 on Outposts buckets result in the following error:\nInvalidStorageClass: The storage class you specified is not valid.\n\u2022 Amazon S3 on Outposts isn't supported with Amazon EMR Serverless or Amazon EMR on EKS.\n\u2022 Amazon EMR logs are stored in a Regional Amazon S3 location that you select, and are not\nstored locally in the S3 on Outposts bucket.\nAuthorization and authentication caching\nS3 on Outposts securely caches authentication and authorization data locally on Outposts racks.\nThe cache removes round trips to the parent AWS Region for every request. This eliminates the\nvariability that is introduced by network round trips. With the authentication and authorization\ncache in S3 on Outposts, you get consistent latencies that are independent from the latency of the\nconnection between the Outposts and the AWS Region.\nWhen you make an S3 on Outposts API request, the authentication and authorization data is\nsecurely cached. The cached data is then used to authenticate subsequent S3 object API requests.\nS3 on Outposts only caches authentication and authorization data when the request is signed\nusing Signature Version 4A (SigV4A). The cache is stored locally on the Outposts within the S3\non Outposts service. It asynchronously refreshes when you make an S3 API request. The cache is\nencrypted, and no plaintext cryptographic keys are stored on Outposts.\nThe cache is valid for up to 10 minutes when the Outpost is connected to the AWS Region. It is\nrefreshed asynchronously when you make an S3 on Outposts API request, to ensure that the latest\npolicies are used. If the Outpost is disconnected from the AWS Region, the cache will be valid for\nup to 12 hours.\nAuthorization and authentication caching API Version 2006-03-01 111",
      "start_idx": 207914,
      "end_idx": 210366,
      "metadata": {
        "num_sentences": 24,
        "num_words": 396,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Integration",
              "Configuration",
              "Limitations"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Amazon EMR",
            "S3A connector",
            "SSE-S3",
            "FileOutputCommitter",
            "authentication caching",
            "authorization caching",
            "SigV4A",
            "Outposts racks",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EMR",
            "S3A connector",
            "SSE-S3",
            "AWS Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Integration",
          "secondary_categories": [
            "Data Encryption",
            "Authentication Mechanisms"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EMR"
          ],
          "mentioned_tools": [
            "S3A connector"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines considerations for integrating Amazon EMR with Amazon S3 on Outposts, including supported configurations, encryption methods, and caching mechanisms for authentication and authorization data.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What Amazon EMR versions support S3 on Outposts?",
            "How does authentication caching work in S3 on Outposts?",
            "What are the limitations of using S3A FileOutputCommitter with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Integration]",
        "tf_idf_keywords": [
          "Amazon S3",
          "SigV4A",
          "authorization caching",
          "Outposts racks",
          "AWS Region",
          "SSE-S3",
          "S3A connector",
          "authentication caching",
          "AWS Outposts",
          "Amazon EMR",
          "Amazon S3 on Outposts",
          "FileOutputCommitter"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_118",
      "text": "Amazon S3 on Outposts User Guide\nConfiguring the authorization and authentication cache\nS3 on Outposts automatically caches authentication and authorization data for requests signed\nwith the SigV4A algorithm. For more information, see Signing AWS API requests in the AWS\nIdentity and Access Management User Guide. The SigV4A algorithm is available in the latest versions\nof the AWS SDKs. You can obtain it through a dependency on the AWS Common Runtime (CRT)\nlibraries.\nYou need to use the latest version of the AWS SDK and install the latest version of the CRT. For\nexample, you can run pip install awscrt to obtain the latest version of the CRT with Boto3.\nS3 on Outposts does not cache authentication and authorization data for requests signed with the\nSigV4 algorithm.\nValidating SigV4A signing\nYou can use AWS CloudTrail to validate that requests were signed with SigV4A. For more\ninformation on setting up CloudTrail for S3 on Outposts, see Monitoring S3 on Outposts with AWS\nCloudTrail logs.\nAfter you have configured CloudTrail, you can verify how a request was signed in the\nSignatureVersion field of the CloudTrail logs. Requests that were signed with SigV4A will have\na SignatureVersion set to AWS4-ECDSA-P256-SHA256. Requests that were signed with SigV4\nwill have SignatureVersion set to AWS4-HMAC-SHA256.\nConfiguring the authorization and authentication cache API Version 2006-03-01 112",
      "start_idx": 210368,
      "end_idx": 211767,
      "metadata": {
        "num_sentences": 13,
        "num_words": 218,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Validation"
            ]
          },
          "keywords": [
            "SigV4A",
            "SigV4",
            "AWS SDK",
            "AWS CRT",
            "CloudTrail",
            "authentication cache",
            "authorization cache",
            "SignatureVersion",
            "AWS API requests",
            "Boto3"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "AWS SDKs",
            "AWS CRT libraries",
            "Boto3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Authentication and Authorization",
          "secondary_categories": [
            "AWS SDK Configuration",
            "Monitoring and Logging"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "AWS Identity and Access Management"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CRT",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to configure the authentication and authorization cache for Amazon S3 on Outposts using SigV4A and validates the signing method via AWS CloudTrail logs.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the authentication cache for S3 on Outposts?",
            "What is the difference between SigV4 and SigV4A signing?",
            "How can I validate SigV4A signed requests using CloudTrail?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Authentication and Authorization]",
        "tf_idf_keywords": [
          "SignatureVersion",
          "AWS SDKs",
          "AWS CRT libraries",
          "SigV4A",
          "AWS API requests",
          "Boto3",
          "AWS CRT",
          "SigV4",
          "authorization cache",
          "Amazon S3 on Outposts",
          "AWS CloudTrail",
          "CloudTrail",
          "AWS SDK",
          "authentication cache",
          "AWS Identity and Access Management"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_119",
      "text": "Amazon S3 on Outposts User Guide\nSecurity in S3 on Outposts\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from data centers\nand network architectures that are built to meet the requirements of the most security-sensitive\norganizations.\nSecurity is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely. Third-\nparty auditors regularly test and verify the effectiveness of our security as part of the AWS\nCompliance Programs. To learn about the compliance programs that apply to Amazon S3 on\nOutposts, see AWS Services in Scope by Compliance Program.\n\u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your company's\nrequirements, and applicable laws and regulations.\nThis documentation helps you understand how to apply the shared responsibility model when\nusing S3 on Outposts. The following topics show you how to configure S3 on Outposts to meet\nyour security and compliance objectives. You also learn how to use other AWS services that help\nyou to monitor and secure your S3 on Outposts resources.\nTopics\n\u2022 Setting up IAM with S3 on Outposts\n\u2022 Data encryption in S3 on Outposts\n\u2022 AWS PrivateLink for S3 on Outposts\n\u2022 AWS Signature Version 4 (SigV4) authentication-specific policy keys\n\u2022 AWS managed policies for Amazon S3 on Outposts\n\u2022 Using service-linked roles for Amazon S3 on Outposts\nSetting up IAM with S3 on Outposts\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nSetting up IAM API Version 2006-03-01 113",
      "start_idx": 211769,
      "end_idx": 213761,
      "metadata": {
        "num_sentences": 14,
        "num_words": 327,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "shared responsibility model",
            "IAM",
            "data encryption",
            "AWS PrivateLink",
            "SigV4 authentication",
            "AWS managed policies",
            "service-linked roles",
            "compliance",
            "security"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "AWS PrivateLink",
            "AWS Signature Version 4 (SigV4)",
            "AWS Compliance Programs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Identity and Access Management",
            "Data Encryption"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation details the security aspects of Amazon S3 on Outposts, focusing on the shared responsibility model and how to configure security and compliance features using AWS services like IAM, encryption, and PrivateLink.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How does the shared responsibility model apply to S3 on Outposts?",
            "What are the security configuration options for Amazon S3 on Outposts?",
            "How can IAM be set up to secure S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Security]",
        "tf_idf_keywords": [
          "IAM",
          "data encryption",
          "shared responsibility model",
          "service-linked roles",
          "SigV4 authentication",
          "security",
          "AWS Signature Version 4 (SigV4)",
          "AWS PrivateLink",
          "AWS Compliance Programs",
          "AWS Identity and Access Management (IAM)",
          "compliance",
          "AWS managed policies",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_120",
      "text": "Amazon S3 on Outposts User Guide\nand authorized (have permissions) to use Amazon S3 on Outposts resources. IAM is an AWS service\nthat you can use with no additional charge. By default, users don't have permissions for S3 on\nOutposts resources and operations. To grant access permissions for S3 on Outposts resources and\nAPI operations, you can use IAM to create users, groups, or roles and attach permissions.\nTo provide access, add permissions to your users, groups, or roles:\n\u2022 Users and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM\nIdentity Center User Guide.\n\u2022 Users managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Creating a role for a third-party\nidentity provider (federation) in the IAM User Guide.\n\u2022 IAM users:\n\u2022 Create a role that your user can assume. Follow the instructions in Creating a role for an IAM\nuser in the IAM User Guide.\n\u2022 (Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the\ninstructions in Adding permissions to a user (console) in the IAM User Guide.\nIn addition to IAM identity-based policies, S3 on Outposts supports both bucket and access point\npolicies. Bucket policies and access point policies are resource-based policies that are attached to\nthe S3 on Outposts resource.\n\u2022 A bucket policy is attached to the bucket and allows or denies requests to the bucket and the\nobjects in it based on the elements in the policy.\n\u2022 In contrast, an access point policy is attached to the access point and allows or denies requests to\nthe access point.\nThe access point policy works with the bucket policy that is attached to the underlying S3 on\nOutposts bucket. For an application or user to access objects in an S3 on Outposts bucket through\nan S3 on Outposts access point, both the access point policy and the bucket policy must permit the\nrequest.\nRestrictions that you include in an access point policy apply only to requests made through that\naccess point. For example, if an access point is attached to a bucket, you can't use the access point\nSetting up IAM API Version 2006-03-01 114",
      "start_idx": 213763,
      "end_idx": 215962,
      "metadata": {
        "num_sentences": 20,
        "num_words": 382,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Management"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM",
            "permissions",
            "bucket policy",
            "access point policy",
            "identity federation",
            "permission set",
            "identity provider",
            "resource-based policies",
            "access point"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS IAM Identity Center",
            "IAM User Guide",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS IAM Identity Center"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 on Outposts User Guide explains how to configure IAM permissions for accessing S3 on Outposts resources, including identity-based and resource-based policies like bucket and access point policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure IAM permissions for S3 on Outposts?",
            "What is the difference between bucket policies and access point policies?",
            "How can I create a permission set in AWS IAM Identity Center?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Access Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "AWS IAM Identity Center",
          "IAM",
          "permissions",
          "API Version 2006-03-01",
          "bucket policy",
          "permission set",
          "resource-based policies",
          "access point policy",
          "identity federation",
          "access point",
          "Amazon S3 on Outposts",
          "identity provider"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_121",
      "text": "Amazon S3 on Outposts User Guide\npolicy to allow or deny requests that are made directly to the bucket. However, restrictions that\nyou apply to a bucket policy can allow or deny requests made directly to the bucket or through the\naccess point.\nIn an IAM policy or a resource-based policy, you define which S3 on Outposts actions are allowed\nor denied. S3 on Outposts actions correspond to specific S3 on Outposts API operations. S3 on\nOutposts actions use the s3-outposts: namespace prefix. Requests made to the S3 on Outposts\ncontrol API in an AWS Region and requests made to the object API endpoints on the Outpost are\nauthenticated by using IAM and authorized against the s3-outposts: namespace prefix. To work\nwith S3 on Outposts, configure your IAM users and authorize them against the s3-outposts: IAM\nnamespace.\nFor more information, see Actions, resources, and condition keys for Amazon S3 on Outposts in the\nService Authorization Reference.\nNote\n\u2022 Access control lists (ACLs) are not supported by S3 on Outposts.\n\u2022 S3 on Outposts defaults to the bucket owner as object owner to help ensure that the\nowner of a bucket can't be prevented from accessing or deleting objects.\n\u2022 S3 on Outposts always has S3 Block Public Access enabled to help ensure that objects\ncan never have public access.\nFor more information about setting up IAM for S3 on Outposts, see the following topics.\nTopics\n\u2022 Principals for S3 on Outposts policies\n\u2022 Resource ARNs for S3 on Outposts\n\u2022 Example policies for S3 on Outposts\n\u2022 Permissions for S3 on Outposts endpoints\n\u2022 Service-linked roles for S3 on Outposts\nSetting up IAM API Version 2006-03-01 115",
      "start_idx": 215964,
      "end_idx": 217597,
      "metadata": {
        "num_sentences": 13,
        "num_words": 277,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "bucket policy",
            "IAM policy",
            "resource-based policy",
            "namespace prefix",
            "access control lists",
            "object owner",
            "Block Public Access",
            "Service Authorization Reference",
            "API operations"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "ACLs",
            "S3 Block Public Access",
            "Resource ARNs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "AWS IAM"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains access control for Amazon S3 on Outposts, detailing IAM policies, bucket policies, and default settings like Block Public Access and object ownership rules.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do IAM policies work with S3 on Outposts?",
            "What are the default access controls for S3 on Outposts?",
            "What namespace prefix is used for S3 on Outposts actions?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Service Authorization Reference",
          "IAM policy",
          "ACLs",
          "namespace prefix",
          "API operations",
          "IAM",
          "access control lists",
          "Block Public Access",
          "S3 Block Public Access",
          "Resource ARNs",
          "bucket policy",
          "resource-based policy",
          "object owner",
          "Amazon S3 on Outposts",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_122",
      "text": "Amazon S3 on Outposts User Guide\nPrincipals for S3 on Outposts policies\nWhen you create a resource-based policy to grant access to your S3 on Outposts bucket, you must\nuse the Principal element to specify the person or application that can make a request for an\naction or operation on that resource. For S3 on Outposts policies, you can use one of the following\nprincipals:\n\u2022 An AWS account\n\u2022 An IAM user\n\u2022 An IAM role\n\u2022 All principals, by specifying a wildcard character (*) in a policy that uses a Condition element to\nlimit access to a specific IP range\nImportant\nYou can't write a policy for an S3 on Outposts bucket that uses a wildcard character (*) in\nthe Principal element unless the policy also includes a Condition that limits access to a\nspecific IP address range. This restriction helps ensure that there is no public access to your\nS3 on Outposts bucket. For an example, see Example policies for S3 on Outposts.\nFor more information about the Principal element, see AWS JSON policy elements: Principal in\nthe IAM User Guide.\nResource ARNs for S3 on Outposts\nAmazon Resource Names (ARNs) for S3 on Outposts contain the Outpost ID in addition to the\nAWS Region that the Outpost is homed to, the AWS account ID, and the resource name. To access\nand perform actions on your Outposts buckets and objects, you must use one of the ARN formats\nshown in the following table.\nThe partition value in the ARN refers to a group of AWS Regions. Each AWS account is scoped to\none partition. The following are the supported partitions:\n\u2022 aws \u2013 AWS Regions\n\u2022 aws-us-gov \u2013 AWS GovCloud (US) Regions\nPrincipals for S3 on Outposts policies API Version 2006-03-01 116",
      "start_idx": 217599,
      "end_idx": 219258,
      "metadata": {
        "num_sentences": 10,
        "num_words": 295,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "ARN",
              "IAM"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "Principal element",
            "resource-based policy",
            "Condition element",
            "AWS account",
            "IAM user",
            "IAM role",
            "ARN",
            "AWS Region",
            "Outpost ID"
          ],
          "entities": [
            "S3 on Outposts",
            "AWS account",
            "IAM user",
            "Outpost ID",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "IAM Policies",
            "AWS Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to specify principals in resource-based policies for Amazon S3 on Outposts, including restrictions on using wildcard characters and details about ARN formats for Outposts resources.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the valid principals for S3 on Outposts policies?",
            "What restrictions apply to using wildcard characters in S3 on Outposts policies?",
            "How are ARNs structured for S3 on Outposts resources?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "IAM user",
          "Outpost ID",
          "ARN",
          "AWS Region",
          "resource-based policy",
          "Principal element",
          "AWS IAM",
          "IAM role",
          "AWS account",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "Condition element"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_124",
      "text": "Amazon S3 on Outposts User Guide\nAmazon S3 on Outposts ARN ARN format Example\nS3 on Outposts ARN arn:partition :s3- arn:aws:s3-outpo\noutposts: region: sts: us-west-2\naccount_id :outpost :123456789012 :\n/ outpost_id outpost/ op-01ac5d\n28a6a232904\nExample policies for S3 on Outposts\nExample : S3 on Outposts bucket policy with an AWS account principal\nThe following bucket policy uses an AWS account principal to grant access to an S3 on Outposts\nbucket. To use this bucket policy, replace the user input placeholders with your own\ninformation.\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"ExampleBucketPolicy1\",\n\"Statement\":[\n{\n\"Sid\":\"statement1\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"123456789012\"\n},\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\"\n}\n]\n}\nExample : S3 on Outposts bucket policy with a wildcard principal (*) and condition key to limit\naccess to a specific IP address range\nThe following bucket policy uses a wildcard principal (*) with the aws:SourceIp condition to\nlimit access to a specific IP address range. To use this bucket policy, replace the user input\nplaceholders with your own information.\nExample policies for S3 on Outposts API Version 2006-03-01 118",
      "start_idx": 220448,
      "end_idx": 221710,
      "metadata": {
        "num_sentences": 5,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Bucket Policy",
              "Access Control"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "bucket policy",
            "AWS account principal",
            "wildcard principal",
            "condition key",
            "SourceIp",
            "IP address range",
            "permissions"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "ARN",
            "AWS account principal",
            "SourceIp condition"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of bucket policies for Amazon S3 on Outposts, demonstrating access control configurations using AWS account principals and wildcard principals with condition keys.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a bucket policy for Amazon S3 on Outposts?",
            "What is an example of using a wildcard principal with an IP restriction in S3 bucket policies?",
            "What is the ARN format for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "SourceIp",
          "Outposts",
          "SourceIp condition",
          "Amazon S3",
          "ARN",
          "condition key",
          "permissions",
          "bucket policy",
          "AWS Outposts",
          "AWS account principal",
          "wildcard principal",
          "IP address range"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_125",
      "text": "Amazon S3 on Outposts User Guide\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"ExampleBucketPolicy2\",\n\"Statement\": [\n{\n\"Sid\": \"statement1\",\n\"Effect\": \"Allow\",\n\"Principal\": { \"AWS\" : \"*\" },\n\"Action\":\"s3-outposts:*\",\n\"Resource\":\"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket\",\n\"Condition\" : {\n\"IpAddress\" : {\n\"aws:SourceIp\": \"192.0.2.0/24\"\n},\n\"NotIpAddress\" : {\n\"aws:SourceIp\": \"198.51.100.0/24\"\n}\n}\n}\n]\n}\nPermissions for S3 on Outposts endpoints\nS3 on Outposts requires its own permissions in IAM to manage S3 on Outposts endpoint actions.\nNote\n\u2022 For endpoints that use the customer-owned IP address pool (CoIP pool) access type, you\nalso must have permissions to work with IP addresses from your CoIP pool, as described\nin the following table.\n\u2022 For shared accounts that access S3 on Outposts by using AWS Resource Access Manager,\nusers in these shared accounts can't create their own endpoints on a shared subnet. If\na user in a shared account wants to manage their own endpoints, the shared account\nmust create its own subnet on the Outpost. For more information, see the section called\n\u201cSharing S3 on Outposts\u201d.\nPermissions for endpoints API Version 2006-03-01 119",
      "start_idx": 221712,
      "end_idx": 222923,
      "metadata": {
        "num_sentences": 6,
        "num_words": 175,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Example",
              "Permissions Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM permissions",
            "bucket policy",
            "CoIP pool",
            "shared accounts",
            "subnet",
            "SourceIp",
            "Condition",
            "AWS Resource Access Manager",
            "endpoints"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "CoIP pool",
            "AWS Resource Access Manager",
            "Outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Resource Access Manager",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a sample bucket policy for Amazon S3 on Outposts with details about permissions and conditions, as well as guidance on managing endpoints and shared accounts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What is an example of a bucket policy for S3 on Outposts?",
            "What permissions are required for managing S3 on Outposts endpoints?",
            "How do shared accounts manage their own endpoints on an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SourceIp",
          "shared accounts",
          "CoIP pool",
          "AWS Resource Access Manager",
          "Amazon S3",
          "IAM",
          "Outposts",
          "bucket policy",
          "Condition",
          "endpoints",
          "IAM permissions",
          "subnet",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_127",
      "text": "Amazon S3 on Outposts User Guide\nAction IAM permissions\nec2:DeleteNetworkInterface\nec2:DescribeNetworkInterfaces\nFor endpoints that are using the on-premises\ncustomer-owned IP address pool (CoIP pool)\naccess type, the following additional permissio\nns are required:\ns3-outposts:DeleteEndpoint\nec2:DisassociateAddress\nec2:DescribeAddresses\nec2:ReleaseAddress\nListEndpoints s3-outposts:ListEndpoints\nNote\nYou can use resource tags in an IAM policy to manage permissions.\nService-linked roles for S3 on Outposts\nS3 on Outposts uses IAM service-linked roles to create some network resources on your behalf. For\nmore information, see Using service-linked roles for Amazon S3 on Outposts.\nData encryption in S3 on Outposts\nBy default, all data stored in Amazon S3 on Outposts is encrypted by using server-side encryption\nwith Amazon S3 managed encryption keys (SSE-S3). For more information, see Using server-side\nencryption with Amazon S3 managed keys (SSE-S3) in the Amazon S3 User Guide.\nYou can optionally use server-side encryption with customer-provided encryption keys (SSE-C). To\nuse SSE-C, specify an encryption key as part of your object API requests. Server-side encryption\nService-linked roles for S3 on Outposts API Version 2006-03-01 121",
      "start_idx": 223695,
      "end_idx": 224940,
      "metadata": {
        "num_sentences": 8,
        "num_words": 170,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Encryption",
              "Service-linked Roles"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM permissions",
            "server-side encryption",
            "SSE-S3",
            "SSE-C",
            "service-linked roles",
            "CoIP pool",
            "network resources",
            "encryption keys",
            "API requests"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "S3 on Outposts",
            "CoIP pool",
            "SSE-S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM",
            "EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines IAM permissions, encryption methods, and service-linked roles required for using Amazon S3 on Outposts, including details on CoIP pool access and server-side encryption options.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What IAM permissions are needed for S3 on Outposts?",
            "How is data encrypted in S3 on Outposts?",
            "What are service-linked roles in Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CoIP pool",
          "Amazon S3",
          "IAM",
          "SSE-C",
          "service-linked roles",
          "EC2",
          "SSE-S3",
          "server-side encryption",
          "encryption keys",
          "IAM permissions",
          "API requests",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "network resources"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_128",
      "text": "Amazon S3 on Outposts User Guide\nencrypts only the object data, not the object metadata. For more information, see Using server-\nside encryption with customer-provided keys in the Amazon S3 User Guide.\nNote\nS3 on Outposts doesn't support server-side encryption with AWS Key Management Service\n(AWS KMS) keys (SSE-KMS).\nAWS PrivateLink for S3 on Outposts\nS3 on Outposts supports AWS PrivateLink, which provides direct management access to your S3\non Outposts storage through a private endpoint within your virtual private network. This allows\nyou to simplify your internal network architecture and perform management operations on your\nOutposts object storage by using private IP addresses in your Virtual Private Cloud (VPC). Using\nAWS PrivateLink eliminates the need to use public IP addresses or proxy servers.\nWith AWS PrivateLink for Amazon S3 on Outposts, you can provision interface VPC endpoints in\nyour virtual private cloud (VPC) to access your S3 on Outposts bucket management and endpoint\nmanagement APIs. Interface VPC endpoints are directly accessible from applications deployed\nin your VPC or on premises over your virtual private network (VPN) or AWS Direct Connect.\nYou can access the bucket and endpoint management APIs through AWS PrivateLink. AWS\nPrivateLink doesn't support data transfer API operations, such as GET, PUT, and similar APIs. These\noperations are already transferred privately through the S3 on Outposts endpoint and access point\nconfiguration. For more information, see Networking for S3 on Outposts.\nInterface endpoints are represented by one or more elastic network interfaces (ENIs) that are\nassigned private IP addresses from subnets in your VPC. Requests made to interface endpoints for\nS3 on Outposts are automatically routed to S3 on Outposts bucket and endpoint management\nAPIs on the AWS network. You can also access interface endpoints in your VPC from on-premises\napplications through AWS Direct Connect or AWS Virtual Private Network (AWS VPN). For more\ninformation about how to connect your VPC with your on-premises network, see the AWS Direct\nConnect User Guide and the AWS Site-to-Site VPN User Guide.\nInterface endpoints route requests for S3 on Outposts bucket and endpoint management APIs over\nthe AWS network and through AWS PrivateLink, as illustrated in the following diagram.\nAWS PrivateLink for S3 on Outposts API Version 2006-03-01 122",
      "start_idx": 224942,
      "end_idx": 227337,
      "metadata": {
        "num_sentences": 18,
        "num_words": 368,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "interface VPC endpoints",
            "virtual private cloud (VPC)",
            "elastic network interfaces (ENIs)",
            "bucket management APIs",
            "endpoint management APIs",
            "AWS Direct Connect",
            "AWS VPN",
            "server-side encryption"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "AWS Direct Connect",
            "AWS VPN",
            "AWS Key Management Service (KMS)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "AWS Key Management Service (KMS)"
          ],
          "mentioned_tools": [
            "AWS Direct Connect",
            "AWS Site-to-Site VPN"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 on Outposts integrates with AWS PrivateLink to provide private network access to bucket and endpoint management APIs, while noting limitations such as unsupported data transfer operations and encryption with AWS KMS keys.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does AWS PrivateLink work with Amazon S3 on Outposts?",
            "What are the limitations of using AWS PrivateLink for S3 on Outposts?",
            "How can I connect my on-premises network to S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket management APIs",
          "virtual private cloud (VPC)",
          "AWS Key Management Service (KMS)",
          "endpoint management APIs",
          "AWS PrivateLink",
          "interface VPC endpoints",
          "server-side encryption",
          "AWS Direct Connect",
          "elastic network interfaces (ENIs)",
          "Amazon S3 on Outposts",
          "AWS VPN"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_129",
      "text": "Amazon S3 on Outposts User Guide\nFor general information about interface endpoints, see Interface VPC endpoints (AWS PrivateLink)\nin the AWS PrivateLink Guide.\nTopics\n\u2022 Restrictions and limitations\n\u2022 Accessing S3 on Outposts interface endpoints\n\u2022 Updating an on-premises DNS configuration\n\u2022 Creating a VPC endpoint for S3 on Outposts\n\u2022 Creating bucket policies and VPC endpoint policies for S3 on Outposts\nRestrictions and limitations\nWhen you access S3 on Outposts bucket and endpoint management APIs through AWS PrivateLink,\nVPC limitations apply. For more information, see Interface endpoint properties and limitations and\nAWS PrivateLink quotas in the AWS PrivateLink Guide.\nIn addition, AWS PrivateLink doesn't support the following:\n\u2022 Federal Information Processing Standard (FIPS) endpoints\n\u2022 S3 on Outposts data transfer APIs, for example, GET, PUT, and similar object API operations.\n\u2022 Private DNS\nRestrictions and limitations API Version 2006-03-01 123",
      "start_idx": 227339,
      "end_idx": 228301,
      "metadata": {
        "num_sentences": 5,
        "num_words": 141,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Restrictions",
              "Procedural Steps",
              "Conceptual Information"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC endpoint",
            "AWS PrivateLink",
            "bucket policies",
            "DNS configuration",
            "interface endpoints",
            "FIPS endpoints",
            "data transfer APIs",
            "Private DNS"
          ],
          "entities": [
            "Amazon S3",
            "AWS PrivateLink",
            "VPC",
            "FIPS",
            "S3 on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides guidance on using Amazon S3 on Outposts with AWS PrivateLink, including restrictions, limitations, and steps for configuring VPC endpoints and policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the restrictions when using S3 on Outposts with AWS PrivateLink?",
            "How do I create a VPC endpoint for S3 on Outposts?",
            "What are the limitations of AWS PrivateLink for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket policies",
          "Outposts",
          "VPC endpoint",
          "Amazon S3",
          "DNS configuration",
          "Private DNS",
          "FIPS",
          "VPC",
          "AWS PrivateLink",
          "data transfer APIs",
          "interface endpoints",
          "FIPS endpoints",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_130",
      "text": "Amazon S3 on Outposts User Guide\nAccessing S3 on Outposts interface endpoints\nTo access S3 on Outposts bucket and endpoint management APIs using AWS PrivateLink, you\nmust update your applications to use endpoint-specific DNS names. When you create an interface\nendpoint, AWS PrivateLink generates two types of endpoint-specific S3 on Outposts names:\nRegional and zonal.\n\u2022 Regional DNS names \u2013 include a unique VPC endpoint ID, a service identifier, the AWS Region,\nand vpce.amazonaws.com, for example, vpce-1a2b3c4d-5e6f.s3-outposts.us-\neast-1.vpce.amazonaws.com.\n\u2022 Zonal DNS names \u2013 include a unique VPC endpoint ID, the Availability Zone, a service identifier,\nthe AWS Region, and vpce.amazonaws.com, for example, vpce-1a2b3c4d-5e6f-us-\neast-1a.s3-outposts.us-east-1.vpce.amazonaws.com. You might use this option if\nyour architecture isolates Availability Zones. For example, you could use zonal DNS names for\nfault containment or to reduce Regional data transfer costs.\nImportant\nS3 on Outposts interface endpoints are resolved from the public DNS domain. S3 on\nOutposts does not support private DNS. Use the --endpoint-url parameter for all\nbucket and endpoint management APIs.\nAWS CLI examples\nUse the --region and --endpoint-url parameters to access bucket management and endpoint\nmanagement APIs through S3 on Outposts interface endpoints.\nExample : Use the endpoint URL to list buckets with the S3 control API\nIn the following example, replace the Region us-east-1, VPC endpoint URL\nvpce-1a2b3c4d-5e6f.s3.us-east-1.vpce.amazonaws.com, and account ID 111122223333\nwith appropriate information.\naws s3control list-regional-buckets --region us-east-1 --endpoint-url\nhttps://vpce-1a2b3c4d-5e6f.s3-outposts.us-east-1.vpce.amazonaws.com --account-\nid 111122223333\nAccessing S3 on Outposts interface endpoints API Version 2006-03-01 124",
      "start_idx": 228303,
      "end_idx": 230140,
      "metadata": {
        "num_sentences": 12,
        "num_words": 241,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "AWS PrivateLink",
            "interface endpoint",
            "DNS names",
            "Regional DNS",
            "Zonal DNS",
            "VPC endpoint",
            "bucket management",
            "endpoint management",
            "API version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "VPC endpoint",
            "Availability Zone",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Object Storage",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to access Amazon S3 on Outposts bucket and endpoint management APIs using AWS PrivateLink by configuring endpoint-specific DNS names, with examples provided for AWS CLI usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure interface endpoints for S3 on Outposts?",
            "What are the differences between Regional and Zonal DNS names?",
            "How can I use AWS CLI to list buckets with S3 control API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "API version 2006-03-01",
          "Zonal DNS",
          "VPC endpoint",
          "AWS CLI",
          "Regional DNS",
          "bucket management",
          "Availability Zone",
          "AWS PrivateLink",
          "interface endpoint",
          "DNS names",
          "endpoint management",
          "Amazon S3 on Outposts",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_132",
      "text": "Amazon S3 on Outposts User Guide\nUpdating an on-premises DNS configuration\nWhen using endpoint-specific DNS names to access the interface endpoints for S3 on Outposts\nbucket management and endpoint management APIs, you don\u2019t have to update your on-premises\nDNS resolver. You can resolve the endpoint-specific DNS name with the private IP address of the\ninterface endpoint from the public S3 on Outposts DNS domain.\nCreating a VPC endpoint for S3 on Outposts\nTo create a VPC interface endpoint for S3 on Outposts, see Create a VPC endpoint in the AWS\nPrivateLink Guide.\nCreating bucket policies and VPC endpoint policies for S3 on Outposts\nYou can attach an endpoint policy to your VPC endpoint that controls access to S3 on Outposts.\nYou can also use the aws:sourceVpce condition in S3 on Outposts bucket policies to restrict\naccess to specific buckets from a specific VPC endpoint. With VPC endpoint policies, you can\ncontrol access to S3 on Outposts bucket management APIs and endpoint management APIs. With\nbucket policies, you can control access to the S3 on Outposts bucket management APIs. However,\nyou can't manage access to object actions for S3 on Outposts using aws:sourceVpce.\nAccess policies for S3 on Outposts specify the following information:\n\u2022 The AWS Identity and Access Management (IAM) principal for which actions are allowed or\ndenied.\n\u2022 The S3 control actions that are allowed or denied.\n\u2022 The S3 on Outposts resources on which actions are allowed or denied.\nThe following examples show policies that restrict access to a bucket or to an endpoint. For\nmore information about VPC connectivity, see Network-to-VPC connectivity options in the AWS\nwhitepaper Amazon Virtual Private Cloud Connectivity Options.\nImportant\n\u2022 When you apply the example policies for VPC endpoints described in this section, you\nmight block your access to the bucket without intending to do so. Bucket permissions\nthat limit bucket access to connections originating from your VPC endpoint can block\nUpdating an on-premises DNS configuration API Version 2006-03-01 126",
      "start_idx": 231488,
      "end_idx": 233550,
      "metadata": {
        "num_sentences": 15,
        "num_words": 328,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "bucket policies",
            "endpoint policies",
            "aws:sourceVpce",
            "IAM principal",
            "DNS configuration",
            "PrivateLink",
            "API access",
            "network connectivity"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "VPC",
            "AWS PrivateLink",
            "IAM",
            "Amazon Virtual Private Cloud"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "Amazon VPC"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure DNS, create VPC endpoints, and apply bucket and endpoint policies for Amazon S3 on Outposts. It also highlights potential access issues when using restrictive policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a VPC endpoint for S3 on Outposts?",
            "What are the implications of using aws:sourceVpce in bucket policies?",
            "How do I configure on-premises DNS for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "bucket policies",
          "Amazon VPC",
          "VPC endpoint",
          "DNS configuration",
          "IAM",
          "Amazon Virtual Private Cloud",
          "aws:sourceVpce",
          "IAM principal",
          "VPC",
          "network connectivity",
          "AWS PrivateLink",
          "endpoint policies",
          "API access",
          "PrivateLink",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_133",
      "text": "Amazon S3 on Outposts User Guide\nall connections to the bucket. For information about how to fix this issue, see My bucket\npolicy has the wrong VPC or VPC endpoint ID. How can I fix the policy so that I can access\nthe bucket? in the AWS Support Knowledge Center.\n\u2022 Before using the following example bucket policies, replace the VPC endpoint ID with an\nappropriate value for your use case. Otherwise, you won't be able to access your bucket.\n\u2022 If your policy only allows access to an S3 on Outposts bucket from a specific VPC\nendpoint, it disables console access for that bucket because console requests don't\noriginate from the specified VPC endpoint.\nTopics\n\u2022 Example: Restricting access to a specific bucket from a VPC endpoint\n\u2022 Example: Denying access from a specific VPC endpoint in an S3 on Outposts bucket policy\nExample: Restricting access to a specific bucket from a VPC endpoint\nYou can create an endpoint policy that restricts access to specific S3 on Outposts buckets only. The\nfollowing policy restricts access for the GetBucketPolicy action only to the example-outpost-\nbucket. To use this policy, replace the example values with your own.\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"Policy1415115909151\",\n\"Statement\": [\n{ \"Sid\": \"Access-to-specific-bucket-only\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:GetBucketPolicy\",\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outpost-\nbucket\"\n}\n]\n}\nCreating VPC endpoint policies and bucket policies API Version 2006-03-01 127",
      "start_idx": 233552,
      "end_idx": 235116,
      "metadata": {
        "num_sentences": 11,
        "num_words": 230,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC endpoint",
            "bucket policy",
            "GetBucketPolicy",
            "endpoint policy",
            "access restriction",
            "console access",
            "AWS Support Knowledge Center",
            "arn"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "VPC endpoint ID",
            "AWS Support Knowledge Center",
            "GetBucketPolicy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure bucket policies for Amazon S3 on Outposts to restrict or deny access based on VPC endpoints, including example policies and potential issues with console access.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I restrict access to an S3 bucket using a VPC endpoint?",
            "What should I do if my bucket policy has the wrong VPC endpoint ID?",
            "Why does console access fail when restricting access to a specific VPC endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "VPC endpoint",
          "Amazon S3",
          "console access",
          "AWS Support Knowledge Center",
          "arn",
          "bucket policy",
          "GetBucketPolicy",
          "endpoint policy",
          "access restriction",
          "AWS Outposts",
          "VPC endpoint ID"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_134",
      "text": "Amazon S3 on Outposts User Guide\nExample: Denying access from a specific VPC endpoint in an S3 on Outposts\nbucket policy\nThe following S3 on Outposts bucket policy denies access to GetBucketPolicy on the example-\noutpost-bucket bucket through the vpce-1a2b3c4d VPC endpoint.\nThe aws:sourceVpce condition specifies the endpoint and does not require an Amazon Resource\nName (ARN) for the VPC endpoint resource, only the endpoint ID. To use this policy, replace the\nexample values with your own.\n{\n\"Version\": \"2012-10-17\",\n\"Id\": \"Policy1415115909152\",\n\"Statement\": [\n{\n\"Sid\": \"Deny-access-to-specific-VPCE\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:GetBucketPolicy\",\n\"Effect\": \"Deny\",\n\"Resource\": \"arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outpost-\nbucket\",\n\"Condition\": {\n\"StringEquals\": {\"aws:sourceVpce\": \"vpce-1a2b3c4d\"}\n}\n}\n]\n}\nAWS Signature Version 4 (SigV4) authentication-specific policy\nkeys\nThe following table shows the condition keys related to AWS Signature Version 4 (SigV4)\nauthentication that you can use with Amazon S3 on Outposts. In a bucket policy, you can add\nthese conditions to enforce specific behavior when requests are authenticated by using Signature\nVersion 4. For example policies, see Bucket policy examples that use Signature Version 4-related\ncondition keys. For more information about authenticating requests using Signature Version 4,\nsee Authenticating requests (AWS Signature Version 4) in the Amazon Simple Storage Service API\nReference\nSignature Version 4 (SigV4) policy keys API Version 2006-03-01 128",
      "start_idx": 235118,
      "end_idx": 236717,
      "metadata": {
        "num_sentences": 7,
        "num_words": 209,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Bucket Policy",
              "Access Control",
              "VPC Endpoint"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "VPC endpoint",
            "bucket policy",
            "aws:sourceVpce",
            "Signature Version 4",
            "authentication",
            "condition keys",
            "GetBucketPolicy",
            "ARN",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Signature Version 4",
            "VPC endpoint ID",
            "example-outpost-bucket",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS Signature Version 4"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an example of an S3 on Outposts bucket policy that denies access to a specific VPC endpoint and explains the use of Signature Version 4-related condition keys for authentication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I deny access to a specific VPC endpoint in an S3 on Outposts bucket policy?",
            "What is the purpose of the aws:sourceVpce condition in a bucket policy?",
            "How do Signature Version 4-related condition keys work with Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "VPC endpoint",
          "Amazon S3",
          "Signature Version 4",
          "ARN",
          "aws:sourceVpce",
          "authentication",
          "bucket policy",
          "GetBucketPolicy",
          "example-outpost-bucket",
          "VPC endpoint ID",
          "Amazon S3 on Outposts",
          "S3 on Outposts",
          "condition keys"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_135",
      "text": "Amazon S3 on Outposts User Guide\nApplicable keys Description\ns3-outpos S3 on Outposts supports various methods of authentication. To restrict\nts:authType incoming requests to use a specific authentication method, you can use\nthis optional condition key. For example, you can use this condition key\nto allow only the HTTP Authorization header to be used in request\nauthentication.\nValid values:\nREST-HEADER\nREST-QUERY-STRING\ns3-outpos The length of time, in milliseconds, that a signature is valid in an\nts:signatur authenticated request.\neAge\nThis condition works only for presigned URLs.\nIn Signature Version 4, the signing key is valid for up to seven days.\nTherefore, the signatures are also valid for up to seven days. For more\ninformation, see Introduction to signing requests in the Amazon Simple\nStorage Service API Reference. You can use this condition to further limit\nthe signature age.\nExample value: 600000\ns3-outposts:x- You can use this condition key to disallow unsigned content in your\namz-content- bucket.\nsha256\nWhen you use Signature Version 4, for requests that use the\nAuthorization header, you add the x-amz-content-sha256\nheader in the signature calculation and then set its value to the hash\npayload.\nYou can use this condition key in your bucket policy to deny any uploads\nwhere the payloads are not signed. For example:\n\u2022 Deny uploads that use the Authorization header to authentic\nate requests but don't sign the payload. For more information, see\nSignature Version 4 (SigV4) policy keys API Version 2006-03-01 129",
      "start_idx": 236719,
      "end_idx": 238260,
      "metadata": {
        "num_sentences": 14,
        "num_words": 241,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Authentication Methods",
              "Condition Keys",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "authentication",
            "condition key",
            "Signature Version 4",
            "presigned URLs",
            "HTTP Authorization header",
            "x-amz-content-sha256",
            "bucket policy",
            "signature age",
            "REST-HEADER"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "Signature Version 4",
            "x-amz-content-sha256",
            "presigned URLs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Authentication",
          "secondary_categories": [
            "Policy Configuration",
            "Request Signing"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use condition keys for authentication and policy configuration in Amazon S3 on Outposts, including signature validation and content signing using Signature Version 4.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I restrict authentication methods for S3 on Outposts?",
            "What is the maximum age for a signature in presigned URLs?",
            "How can I disallow unsigned content in S3 buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Authentication]",
        "tf_idf_keywords": [
          "presigned URLs",
          "condition key",
          "Signature Version 4",
          "Amazon S3",
          "HTTP Authorization header",
          "REST-HEADER",
          "authentication",
          "bucket policy",
          "signature age",
          "x-amz-content-sha256",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_136",
      "text": "Amazon S3 on Outposts User Guide\nApplicable keys Description\nTransferring payload in a single chunk in the Amazon Simple Storage\nService API Reference.\n\u2022 Deny uploads that use presigned URLs. Presigned URLs always have\nan UNSIGNED_PAYLOAD . For more information, see Authenticating\nrequests and Authentication methods in the Amazon Simple Storage\nService API Reference.\nValid value: UNSIGNED-PAYLOAD\nBucket policy examples that use Signature Version 4-related condition\nkeys\nTo use the following examples, replace the user input placeholders with your own\ninformation.\nExample : s3-outposts:signatureAge\nThe following bucket policy denies any S3 on Outposts presigned URL request on objects in\nexample-outpost-bucket if the signature is more than 10 minutes old.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny a presigned URL request if the signature is more than 10\nminutes old\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"444455556666\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"NumericGreaterThan\": {\"s3-outposts:signatureAge\": 600000},\n\"StringEquals\": {\"s3-outposts:authType\": \"REST-QUERY-STRING\"}\n}\n}\nBucket policy examples that use Signature Version 4-related condition keys API Version 2006-03-01 130",
      "start_idx": 238262,
      "end_idx": 239605,
      "metadata": {
        "num_sentences": 7,
        "num_words": 164,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "presigned URLs",
            "UNSIGNED_PAYLOAD",
            "bucket policy",
            "Signature Version 4",
            "s3-outposts:signatureAge",
            "REST-QUERY-STRING",
            "Condition keys",
            "API Reference"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "Signature Version 4",
            "UNSIGNED_PAYLOAD",
            "s3-outposts:signatureAge"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "API Authentication",
            "Security Policies"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a reference for configuring bucket policies in Amazon S3 on Outposts, including examples for denying presigned URL requests using Signature Version 4 condition keys.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I deny presigned URL requests in Amazon S3 on Outposts?",
            "What condition keys can I use with Signature Version 4?",
            "How do I configure a bucket policy for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "presigned URLs",
          "Outposts",
          "UNSIGNED_PAYLOAD",
          "REST-QUERY-STRING",
          "Amazon S3",
          "Signature Version 4",
          "s3-outposts:signatureAge",
          "bucket policy",
          "Condition keys",
          "API Reference"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_137",
      "text": "Amazon S3 on Outposts User Guide\n]\n}\nExample : s3-outposts:authType\nThe following bucket policy allows only requests that use the Authorization header for\nrequest authentication. Any presigned URL requests will be denied since presigned URLs use\nquery parameters to provide request and authentication information. For more information, see\nAuthentication methods in the Amazon Simple Storage Service API Reference.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Allow only requests that use the Authorization header for\nrequest authentication. Deny presigned URL requests.\",\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"StringNotEquals\": {\n\"s3-outposts:authType\": \"REST-HEADER\"\n}\n}\n}\n]\n}\nExample : s3-outposts:x-amz-content-sha256\nThe following bucket policy denies any uploads with unsigned payloads, such as uploads that are\nusing presigned URLs. For more information, see Authenticating requests and Authentication\nmethods in the Amazon Simple Storage Service API Reference.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Deny uploads with unsigned payloads.\",\nBucket policy examples that use Signature Version 4-related condition keys API Version 2006-03-01 131",
      "start_idx": 239607,
      "end_idx": 240963,
      "metadata": {
        "num_sentences": 9,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Bucket Policy",
              "Authorization",
              "Condition Keys"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Authorization header",
            "presigned URLs",
            "bucket policy",
            "REST-HEADER",
            "x-amz-content-sha256",
            "Signature Version 4",
            "Authentication methods",
            "unsigned payloads"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS",
            "Authorization header",
            "Signature Version 4"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "API Authentication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "API Reference"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of bucket policies for Amazon S3 on Outposts, focusing on authorization methods and conditions to restrict presigned URL usage and unsigned payloads.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I restrict presigned URL requests in Amazon S3 bucket policies?",
            "What condition keys are used for Signature Version 4 authentication in S3 Outposts?",
            "How do I deny uploads with unsigned payloads in an S3 Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "presigned URLs",
          "Authentication methods",
          "unsigned payloads",
          "Outposts",
          "AWS",
          "Amazon S3",
          "Signature Version 4",
          "REST-HEADER",
          "Authorization header",
          "bucket policy",
          "x-amz-content-sha256"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_138",
      "text": "Amazon S3 on Outposts User Guide\n\"Effect\": \"Deny\",\n\"Principal\": {\"AWS\":\"111122223333\"},\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:us-\neast-1:111122223333:outpost/op-01ac5d28a6a232904/bucket/example-outpost-bucket/object/\n*\",\n\"Condition\": {\n\"StringEquals\": {\n\"s3-outposts:x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n}\n}\n}\n]\n}\nAWS managed policies for Amazon S3 on Outposts\nAn AWS managed policy is a standalone policy that is created and administered by AWS. AWS\nmanaged policies are designed to provide permissions for many common use cases so that you can\nstart assigning permissions to users, groups, and roles.\nKeep in mind that AWS managed policies might not grant least-privilege permissions for your\nspecific use cases because they're available for all AWS customers to use. We recommend that you\nreduce permissions further by defining customer managed policies that are specific to your use\ncases.\nYou cannot change the permissions defined in AWS managed policies. If AWS updates the\npermissions defined in an AWS managed policy, the update affects all principal identities (users,\ngroups, and roles) that the policy is attached to. AWS is most likely to update an AWS managed\npolicy when a new AWS service is launched or new API operations become available for existing\nservices.\nFor more information, see AWS managed policies in the IAM User Guide.\nAWS managed policy: AWSS3OnOutpostsServiceRolePolicy\nHelps manage network resources for you as part of the service-linked role\nAWSServiceRoleForS3OnOutposts.\nTo view the permissions for this policy, see AWSS3OnOutpostsServiceRolePolicy.\nAWS managed policies API Version 2006-03-01 132",
      "start_idx": 240965,
      "end_idx": 242623,
      "metadata": {
        "num_sentences": 11,
        "num_words": 228,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Explanation",
              "Permission Details"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS managed policies",
            "permissions",
            "IAM User Guide",
            "AWSServiceRoleForS3OnOutposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "customer managed policies",
            "StringEquals condition",
            "service-linked role",
            "UNSIGNED-PAYLOAD"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS managed policies",
            "AWSS3OnOutpostsServiceRolePolicy",
            "AWSServiceRoleForS3OnOutposts",
            "IAM User Guide"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWSServiceRoleForS3OnOutposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains Amazon S3 on Outposts policies, including AWS managed policies, their permissions, usage, and updates. It also provides details on service-linked roles and specific policy configurations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are defined in AWS managed policies for Amazon S3 on Outposts?",
            "How can I use customer managed policies to define specific permissions?",
            "What is the AWSS3OnOutpostsServiceRolePolicy used for?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "StringEquals condition",
          "AWSServiceRoleForS3OnOutposts",
          "AWSS3OnOutpostsServiceRolePolicy",
          "IAM",
          "permissions",
          "customer managed policies",
          "service-linked role",
          "UNSIGNED-PAYLOAD",
          "AWS managed policies",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_139",
      "text": "Amazon S3 on Outposts User Guide\nS3 on Outposts updates to AWS managed policies\nView details about updates to AWS managed policies for S3 on Outposts since this service began\ntracking these changes.\nChange Description Date\nS3 on Outposts added S3 on Outposts added October 3, 2023\nAWSS3OnOutpostsSer AWSS3OnOutpostsSer\nviceRolePolicy viceRolePolicy as part\nof the service-linked role\nAWSServiceRoleForS\n3OnOutposts , which helps\nmanage network resources\nfor you.\nS3 on Outposts started S3 on Outposts started October 3, 2023\ntracking changes tracking changes for its AWS\nmanaged policies.\nUsing service-linked roles for Amazon S3 on Outposts\nAmazon S3 on Outposts uses AWS Identity and Access Management (IAM) service-linked roles. A\nservice-linked role is a unique type of IAM role that is linked directly to S3 on Outposts. Service-\nlinked roles are predefined by S3 on Outposts and include all the permissions that the service\nrequires to call other AWS services on your behalf.\nA service-linked role makes setting up S3 on Outposts easier because you don\u2019t have to manually\nadd the necessary permissions. S3 on Outposts defines the permissions of its service-linked roles,\nand unless defined otherwise, only S3 on Outposts can assume its roles. The defined permissions\ninclude the trust policy and the permissions policy, and that permissions policy cannot be attached\nto any other IAM entity.\nYou can delete a service-linked role only after first deleting their related resources. This protects\nyour S3 on Outposts resources because you can't inadvertently remove permission to access the\nresources.\nPolicy updates API Version 2006-03-01 133",
      "start_idx": 242625,
      "end_idx": 244271,
      "metadata": {
        "num_sentences": 12,
        "num_words": 253,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Updates",
              "Service-Linked Roles"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS managed policies",
            "service-linked roles",
            "IAM roles",
            "permissions policy",
            "trust policy",
            "AWSServiceRoleForS3OnOutposts",
            "network resources",
            "API Version 2006-03-01",
            "Outposts resources"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "AWSServiceRoleForS3OnOutposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Identity and Access Management",
            "Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS IAM",
            "AWS managed policies"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines updates to AWS managed policies for Amazon S3 on Outposts and explains the use of IAM service-linked roles for managing permissions and resources. It highlights the predefined roles and their associated trust and permissions policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the updates to AWS managed policies for S3 on Outposts?",
            "How are service-linked roles used in Amazon S3 on Outposts?",
            "What permissions are included in the service-linked roles for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Computing]",
        "tf_idf_keywords": [
          "AWSServiceRoleForS3OnOutposts",
          "network resources",
          "AWSS3OnOutpostsServiceRolePolicy",
          "service-linked roles",
          "API Version 2006-03-01",
          "IAM roles",
          "permissions policy",
          "AWS Identity and Access Management (IAM)",
          "AWS IAM",
          "Outposts resources",
          "AWS managed policies",
          "Amazon S3 on Outposts",
          "trust policy"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_140",
      "text": "Amazon S3 on Outposts User Guide\nFor information about other services that support service-linked roles, see AWS Services That Work\nwith IAM and look for the services that have Yes in the Service-linked roles column. Choose a Yes\nwith a link to view the service-linked role documentation for that service.\nService-linked role permissions for S3 on Outposts\nS3 on Outposts uses the service-linked role named AWSServiceRoleForS3OnOutposts to help\nmanage network resources for you.\nThe AWSServiceRoleForS3OnOutposts service-linked role trusts the following services to\nassume the role:\n\u2022 s3-outposts.amazonaws.com\nThe role permissions policy named AWSS3OnOutpostsServiceRolePolicy allows S3 on\nOutposts to complete the following actions on the specified resources:\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:DescribeSubnets\",\n\"ec2:DescribeSecurityGroups\",\n\"ec2:DescribeNetworkInterfaces\",\n\"ec2:DescribeVpcs\",\n\"ec2:DescribeCoipPools\",\n\"ec2:GetCoipPoolUsage\",\n\"ec2:DescribeAddresses\",\n\"ec2:DescribeLocalGatewayRouteTableVpcAssociations\"\n],\n\"Resource\": \"*\",\n\"Sid\": \"DescribeVpcResources\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateNetworkInterface\"\n],\n\"Resource\": [\n\"arn:aws:ec2:*:*:subnet/*\",\n\"arn:aws:ec2:*:*:security-group/*\"\nService-linked role permissions for S3 on Outposts API Version 2006-03-01 134",
      "start_idx": 244273,
      "end_idx": 245613,
      "metadata": {
        "num_sentences": 4,
        "num_words": 151,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Service-linked Roles",
              "Permissions Policy",
              "IAM Integration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "service-linked roles",
            "AWSServiceRoleForS3OnOutposts",
            "permissions policy",
            "IAM",
            "ec2 actions",
            "network resources",
            "DescribeVpcResources",
            "CreateNetworkInterface",
            "Outposts"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWSServiceRoleForS3OnOutposts",
            "AWSS3OnOutpostsServiceRolePolicy",
            "ec2",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Identity and Access Management",
            "Networking"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM",
            "EC2"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation details the service-linked role AWSServiceRoleForS3OnOutposts used by Amazon S3 on Outposts to manage network resources, including its permissions policy and trusted services.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the AWSServiceRoleForS3OnOutposts role?",
            "What permissions are granted to S3 on Outposts through its service-linked role?",
            "Which EC2 actions are supported by S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "CreateNetworkInterface",
          "AWSServiceRoleForS3OnOutposts",
          "Outposts",
          "AWSS3OnOutpostsServiceRolePolicy",
          "IAM",
          "service-linked roles",
          "ec2",
          "DescribeVpcResources",
          "permissions policy",
          "EC2",
          "ec2 actions",
          "Amazon S3 on Outposts",
          "network resources"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_142",
      "text": "Amazon S3 on Outposts User Guide\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:ModifyNetworkInterfaceAttribute\",\n\"ec2:CreateNetworkInterfacePermission\",\n\"ec2:DeleteNetworkInterface\",\n\"ec2:DeleteNetworkInterfacePermission\",\n\"ec2:DisassociateAddress\",\n\"ec2:ReleaseAddress\",\n\"ec2:AssociateAddress\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"aws:ResourceTag/CreatedBy\": \"S3 On Outposts\"\n}\n},\n\"Sid\": \"ReleaseVpcResources\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ec2:CreateTags\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"ec2:CreateAction\": [\n\"CreateNetworkInterface\",\n\"AllocateAddress\"\n],\n\"aws:RequestTag/CreatedBy\": [\n\"S3 On Outposts\"\n]\n}\n},\n\"Sid\": \"CreateTags\"\n}\n]\n}\nYou must configure permissions to allow an IAM entity (such as a role) to create, edit, or delete a\nservice-linked role. For more information, see Service-linked role permissions in the IAM User Guide.\nService-linked role permissions for S3 on Outposts API Version 2006-03-01 136",
      "start_idx": 246388,
      "end_idx": 247340,
      "metadata": {
        "num_sentences": 3,
        "num_words": 108,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "IAM Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM permissions",
            "ec2 actions",
            "service-linked role",
            "StringEquals condition",
            "ResourceTag",
            "RequestTag",
            "CreateTags",
            "ReleaseVpcResources",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "ec2",
            "Service-linked role",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "IAM Permissions",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "EC2",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for configuring IAM permissions to manage Amazon S3 on Outposts resources, including actions related to EC2 and service-linked roles.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What IAM permissions are required for Amazon S3 on Outposts?",
            "How do I configure a service-linked role for S3 on Outposts?",
            "What EC2 actions are associated with S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Computing]",
        "tf_idf_keywords": [
          "StringEquals condition",
          "Amazon S3",
          "IAM",
          "API Version 2006-03-01",
          "RequestTag",
          "ResourceTag",
          "ReleaseVpcResources",
          "CreateTags",
          "service-linked role",
          "ec2",
          "EC2",
          "Service-linked role",
          "ec2 actions",
          "IAM permissions",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_143",
      "text": "Amazon S3 on Outposts User Guide\nCreating a service-linked role for S3 on Outposts\nYou don't need to manually create a service-linked role. When you create an S3 on Outposts\nendpoint in the AWS Management Console, the AWS CLI, or the AWS API, S3 on Outposts creates\nthe service-linked role for you.\nIf you delete this service-linked role, and then need to create it again, you can use the same process\nto recreate the role in your account. When you create an S3 on Outposts endpoint, S3 on Outposts\ncreates the service-linked role for you again.\nYou can also use the IAM console to create a service-linked role with the S3 on Outposts\nuse case. In the AWS CLI or the AWS API, create a service-linked role with the s3-\noutposts.amazonaws.com service name. For more information, see Creating a service-linked\nrole in the IAM User Guide. If you delete this service-linked role, you can use this same process to\ncreate the role again.\nEditing a service-linked role for S3 on Outposts\nS3 on Outposts does not allow you to edit the AWSServiceRoleForS3OnOutposts service-\nlinked role. This includes the name of the role because various entities might reference it. However,\nyou can edit the description of the role using IAM. For more information, see Editing a service-\nlinked role in the IAM User Guide.\nDeleting a service-linked role for S3 on Outposts\nIf you no longer need to use a feature or service that requires a service-linked role, we recommend\nthat you delete that role. That way you don\u2019t have an unused entity that is not actively monitored\nor maintained. However, you must clean up the resources for your service-linked role before you\ncan manually delete it.\nNote\nIf the S3 on Outposts service is using the role when you try to delete the resources, then\nthe deletion might fail. If that happens, wait for a few minutes and try the operation again.\nTo delete S3 on Outposts resources used by the AWSServiceRoleForS3OnOutposts role\n1. Delete the S3 on Outposts endpoints in your AWS account across all AWS Regions.\nCreating a service-linked role for S3 on Outposts API Version 2006-03-01 137",
      "start_idx": 247342,
      "end_idx": 249441,
      "metadata": {
        "num_sentences": 20,
        "num_words": 360,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Creation",
              "Editing",
              "Deletion"
            ]
          },
          "keywords": [
            "service-linked role",
            "S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "IAM console",
            "AWS API",
            "endpoint",
            "resources",
            "description",
            "deletion"
          ],
          "entities": [
            "S3 on Outposts",
            "AWSServiceRoleForS3OnOutposts",
            "IAM User Guide",
            "s3-outposts.amazonaws.com",
            "AWS Regions"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "AWS API"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "IAM console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the creation, editing, and deletion of service-linked roles for S3 on Outposts, including automated processes and manual steps using IAM and AWS tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a service-linked role for S3 on Outposts?",
            "Can I edit the AWSServiceRoleForS3OnOutposts role?",
            "What steps are required to delete a service-linked role for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "AWSServiceRoleForS3OnOutposts",
          "AWS CLI",
          "resources",
          "AWS Regions",
          "IAM",
          "AWS Management Console",
          "service-linked role",
          "description",
          "deletion",
          "IAM console",
          "s3-outposts.amazonaws.com",
          "AWS API",
          "endpoint",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_144",
      "text": "Amazon S3 on Outposts User Guide\n2. Delete the service-linked role using IAM.\nUse the IAM console, the AWS CLI, or the AWS API to delete the\nAWSServiceRoleForS3OnOutposts service-linked role. For more information, see Deleting\na service-linked role in the IAM User Guide.\nSupported Regions for S3 on Outposts service-linked roles\nS3 on Outposts supports using service-linked roles in all of the AWS Regions where the service is\navailable. For more information, see S3 on Outposts Regions and endpoints.\nSupported Regions for S3 on Outposts service-linked roles API Version 2006-03-01 138",
      "start_idx": 249443,
      "end_idx": 250030,
      "metadata": {
        "num_sentences": 7,
        "num_words": 91,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Deletion",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "service-linked role",
            "IAM console",
            "AWS CLI",
            "AWS API",
            "Regions",
            "endpoints",
            "API version",
            "2006-03-01"
          ],
          "entities": [
            "AWSServiceRoleForS3OnOutposts",
            "IAM User Guide",
            "S3 on Outposts Regions",
            "AWS Regions",
            "S3 on Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Roles",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM console",
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete the AWSServiceRoleForS3OnOutposts service-linked role using IAM and provides information about supported regions for S3 on Outposts service-linked roles.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete the AWSServiceRoleForS3OnOutposts service-linked role?",
            "Which regions support S3 on Outposts service-linked roles?",
            "What tools can I use to manage service-linked roles for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Outposts",
          "AWS CLI",
          "AWSServiceRoleForS3OnOutposts",
          "Amazon S3",
          "AWS Regions",
          "S3 on Outposts",
          "IAM",
          "Regions",
          "service-linked role",
          "endpoints",
          "API version",
          "IAM console",
          "AWS API",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_145",
      "text": "Amazon S3 on Outposts User Guide\nManaging S3 on Outposts storage\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about managing and sharing your Amazon S3 on Outposts storage capacity,\nsee the following topics.\nTopics\n\u2022 Managing S3 Versioning for your S3 on Outposts bucket\n\u2022 Creating and managing a lifecycle configuration for your Amazon S3 on Outposts bucket\n\u2022 Replicating objects for S3 on Outposts\n\u2022 Sharing S3 on Outposts by using AWS RAM\n\u2022 Other AWS services that use S3 on Outposts\nManaging S3 Versioning for your S3 on Outposts bucket\nWhen enabled, S3 Versioning saves multiple distinct copies of an object in the same bucket. You\ncan use S3 Versioning to preserve, retrieve, and restore every version of every object stored in your\nOutposts buckets. S3 Versioning helps you recover from unintended user actions and application\nfailures.\nAmazon S3 on Outposts buckets have three versioning states:\n\u2022 Unversioned \u2013 If you\u2019ve never enabled or suspended S3 Versioning on your bucket, it is\nunversioned and returns no S3 Versioning status. For more information about S3 Versioning, see\nManaging S3 Versioning for your S3 on Outposts bucket.\nManaging S3 Versioning API Version 2006-03-01 139",
      "start_idx": 250032,
      "end_idx": 252078,
      "metadata": {
        "num_sentences": 13,
        "num_words": 336,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts buckets",
            "S3 Versioning",
            "AWS RAM",
            "lifecycle configuration",
            "data residency",
            "encryption",
            "access policies",
            "replication",
            "virtual private cloud"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "AWS RAM",
            "S3 Versioning",
            "VPC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS RAM"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to manage Amazon S3 on Outposts storage, including creating buckets, enabling S3 Versioning, and using related AWS services and tools for local data access and processing.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning for Outposts buckets?",
            "What tools can I use to manage S3 on Outposts?",
            "What is the S3 Outposts storage class?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS RAM",
          "Outposts buckets",
          "virtual private cloud",
          "Amazon S3",
          "data residency",
          "access policies",
          "VPC",
          "lifecycle configuration",
          "replication",
          "encryption",
          "S3 Versioning",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_146",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Enabled \u2013 Enables S3 Versioning for the objects in the bucket. All objects added to the bucket\nreceive a unique version ID. Objects that already existed in the bucket at the time that you\nenable versioning have a version ID of null. If you modify these (or any other) objects with other\noperations, such as PutObject, the new objects get a unique version ID.\n\u2022 Suspended \u2013 Suspends S3 Versioning for the objects in the bucket. All objects added to the\nbucket after versioning is suspended receive the version ID null. For more information, see\nAdding objects to versioning-suspended buckets in the Amazon S3 User Guide.\nAfter you enable S3 Versioning for an S3 on Outposts bucket, it can never return to an unversioned\nstate. However, you can suspend versioning. For more information about S3 Versioning, see\nManaging S3 Versioning for your S3 on Outposts bucket.\nFor each object in your bucket, you have a current version and zero or more noncurrent versions.\nTo reduce storage costs, you can configure your bucket S3 Lifecycle rules to expire noncurrent\nversions after a specified time period. For more information, see Creating and managing a lifecycle\nconfiguration for your Amazon S3 on Outposts bucket.\nThe following examples show you how to enable or suspend versioning for an existing S3 on\nOutposts bucket by using the AWS Management Console and the AWS Command Line Interface\n(AWS CLI). To create a bucket with S3 Versioning enabled, see Creating an S3 on Outposts bucket.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can commit\nactions to it. Buckets have configuration properties, such as Outpost, tag, default\nencryption, and access point settings. The access point settings include the virtual private\ncloud (VPC), the access point policy for accessing the objects in the bucket, and other\nmetadata. For more information, see S3 on Outposts specifications.\nUsing the S3 console\nTo edit the S3 Versioning settings for your bucket\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to enable S3 Versioning for.\nManaging S3 Versioning API Version 2006-03-01 140",
      "start_idx": 252080,
      "end_idx": 254382,
      "metadata": {
        "num_sentences": 26,
        "num_words": 381,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Management"
            ]
          },
          "keywords": [
            "S3 Versioning",
            "Outposts bucket",
            "AWS Management Console",
            "AWS CLI",
            "Lifecycle rules",
            "noncurrent versions",
            "default encryption",
            "access point policy",
            "VPC",
            "S3 Lifecycle configuration"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console",
            "AWS Command Line Interface",
            "Outposts buckets"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Bucket Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This document explains how to enable or suspend S3 Versioning for Amazon S3 on Outposts buckets using the AWS Management Console or AWS CLI, along with related lifecycle management options.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable S3 Versioning for an Outposts bucket?",
            "What happens to objects when S3 Versioning is suspended?",
            "How can I reduce storage costs for noncurrent versions in S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Lifecycle rules",
          "Outposts buckets",
          "AWS CLI",
          "S3 on Outposts",
          "Amazon S3",
          "AWS Management Console",
          "VPC",
          "access point policy",
          "Outposts bucket",
          "S3 Versioning",
          "default encryption",
          "noncurrent versions",
          "S3 Lifecycle configuration"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_147",
      "text": "Amazon S3 on Outposts User Guide\n4. Choose the Properties tab.\n5. Under Bucket Versioning, choose Edit.\n6. Edit the S3 Versioning settings for the bucket by choosing one of the following options:\n\u2022 To suspend S3 Versioning and stop the creation of new object versions, choose Suspend.\n\u2022 To enable S3 Versioning and save multiple distinct copies of each object, choose Enable.\n7. Choose Save changes.\nUsing the AWS CLI\nTo enable or suspend S3 Versioning for your bucket by using the AWS CLI, use the put-bucket-\nversioning command, as shown in the following examples. To use these examples, replace each\nuser input placeholder with your own information.\nFor more information, see put-bucket-versioning in the AWS CLI Reference.\nExample : To enable S3 Versioning\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --versioning-configuration Status=Enabled\nExample : To suspend S3 Versioning\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/op-01ac5d28a6a232904/bucket/example-outposts-\nbucket --versioning-configuration Status=Suspended\nCreating and managing a lifecycle configuration for your\nAmazon S3 on Outposts bucket\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule.\nFor more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket.\nCreating and managing a lifecycle configuration API Version 2006-03-01 141",
      "start_idx": 254384,
      "end_idx": 256142,
      "metadata": {
        "num_sentences": 17,
        "num_words": 237,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Command-line Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Versioning",
            "Lifecycle",
            "Bucket",
            "AWS CLI",
            "put-bucket-versioning",
            "Status=Enabled",
            "Status=Suspended",
            "Lifecycle rules"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "S3 Versioning",
            "Lifecycle configuration",
            "arn:aws:s3-outposts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Lifecycle Optimization"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "put-bucket-versioning"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to enable or suspend S3 Versioning for Amazon S3 on Outposts buckets using the AWS CLI and manage lifecycle configurations to optimize storage capacity. It includes step-by-step instructions and code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enable S3 Versioning for my Amazon S3 on Outposts bucket?",
            "What AWS CLI command is used to suspend S3 Versioning?",
            "How do lifecycle rules optimize storage for Amazon S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Lifecycle rules",
          "Outposts",
          "AWS CLI",
          "Status=Enabled",
          "Versioning",
          "Amazon S3",
          "Lifecycle",
          "Lifecycle configuration",
          "Amazon S3 on Outposts",
          "arn:aws:s3-outposts",
          "put-bucket-versioning",
          "Bucket",
          "S3 Versioning",
          "Status=Suspended"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_148",
      "text": "Amazon S3 on Outposts User Guide\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule.\nTo create and manage the lifecycle configuration for your S3 on Outposts bucket, see the following\ntopics.\nTopics\n\u2022 Creating and managing a lifecycle rule by using the AWS Management Console\n\u2022 Creating and managing a lifecycle configuration by using the AWS CLI and SDK for Java\nCreating and managing a lifecycle rule by using the AWS Management\nConsole\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule.\nFor more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule.\nTo create and manage a lifecycle rule for an S3 on Outposts by using the AWS Management\nConsole, see the following topics.\nTopics\n\u2022 Creating a lifecycle rule\n\u2022 Enabling a lifecycle rule\n\u2022 Editing a lifecycle rule\nUsing the console API Version 2006-03-01 142",
      "start_idx": 256144,
      "end_idx": 257428,
      "metadata": {
        "num_sentences": 9,
        "num_words": 221,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle rule",
            "AWS Management Console",
            "S3 Lifecycle",
            "Lifecycle configuration",
            "AWS CLI",
            "SDK for Java",
            "Storage optimization",
            "Bucket ownership"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java",
            "Lifecycle rule"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Lifecycle Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions for creating and managing lifecycle rules for Amazon S3 on Outposts buckets using the AWS Management Console, AWS CLI, or SDK for Java. It emphasizes bucket ownership and lifecycle configuration capabilities.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a lifecycle rule for an S3 on Outposts bucket?",
            "What tools can be used to manage lifecycle configurations for Amazon S3 on Outposts?",
            "Who can enable or disable lifecycle rules for an S3 bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Storage optimization",
          "Lifecycle configuration",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "Bucket ownership",
          "AWS Management Console",
          "SDK for Java",
          "Lifecycle rule",
          "AWS Outposts",
          "S3 Lifecycle",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_149",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Deleting a lifecycle rule\nCreating a lifecycle rule\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to create a lifecycle rule for.\n4. Choose the Management tab, and then choose Create Lifecycle rule.\n5. Enter a value for Lifecycle rule name.\n6. Under Rule scope, choose one of the following options:\n\u2022 To limit the scope to specific filters, choose Limit the scope of this rule using one or more\nfilters. Then, add a prefix filter, tags, or object size.\n\u2022 To apply the rule to all objects in the bucket, choose Apply to all objects in the bucket.\n7. Under Lifecycle rule actions, choose one of the following options:\n\u2022 Expire current versions of objects \u2013 For versioning-enabled buckets, S3 on Outposts adds a\ndelete marker and retains the objects as noncurrent versions. For buckets that don't use S3\nVersioning, S3 on Outposts permanently deletes the objects.\n\u2022 Permanently delete noncurrent versions of objects \u2013 S3 on Outposts permanently deletes\nnoncurrent versions of objects.\n\u2022 Delete expired object delete markers or incomplete multipart uploads \u2013 S3 on Outposts\npermanently deletes expired object delete markers or incomplete multipart uploads.\nIf you limit the scope of your Lifecycle rule by using object tags, you can't choose Delete\nexpired object delete markers. You also can't choose Delete expired object delete markers\nif you choose Expire current object versions.\nNote\nSize-based filters can't be used with delete markers and incomplete multipart uploads.\n8. If you chose Expire current versions of objects or Permanently delete noncurrent versions of\nobjects, configure the rule trigger based on a specific date or the object's age.\nUsing the console API Version 2006-03-01 143",
      "start_idx": 257430,
      "end_idx": 259327,
      "metadata": {
        "num_sentences": 25,
        "num_words": 308,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle rule",
            "Management Console",
            "Versioning",
            "Prefix filter",
            "Tags",
            "Object size",
            "Delete marker",
            "Multipart uploads"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Management Console",
            "Lifecycle rule",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Lifecycle Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for creating a lifecycle rule in an Amazon S3 Outposts bucket using the AWS Management Console. It explains rule scope options, lifecycle actions, and configuration details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a lifecycle rule in an Amazon S3 Outposts bucket?",
            "What are the scope options for an S3 lifecycle rule?",
            "What actions can be configured in an S3 lifecycle rule?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Multipart uploads",
          "Outposts",
          "S3 on Outposts",
          "Prefix filter",
          "Versioning",
          "Amazon S3",
          "AWS Management Console",
          "API Version 2006-03-01",
          "Delete marker",
          "Lifecycle rule",
          "Object size",
          "Tags",
          "Management Console"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_150",
      "text": "Amazon S3 on Outposts User Guide\n9. If you chose Delete expired object delete markers, to confirm that you want to delete expired\nobject delete markers, select Delete expired object delete markers.\n10. Under Timeline Summary, review your Lifecycle rule, and choose Create rule.\nEnabling a lifecycle rule\nTo enable or disable a bucket lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to enable or disable a lifecycle rule for.\n4. Choose the Management tab, and then under Lifecycle rule, choose the rule that you want to\nenable or disable.\n5. For Action, choose Enable or disable rule.\nEditing a lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to edit a lifecycle rule for.\n4. Choose the Management tab, and then choose the Lifecycle rule that you want to edit.\n5. (Optional) Update the value for Lifecycle rule name.\n6. Under Rule scope, edit the scope as needed:\n\u2022 To limit the scope to specific filters, choose Limit the scope of this rule using one or more\nfilters. Then, add a prefix filter, tags, or object size.\n\u2022 To apply the rule to all objects in the bucket, choose Apply to all objects in the bucket.\n7. Under Lifecycle rule actions, choose one of the following options:\n\u2022 Expire current versions of objects \u2013 For versioning-enabled buckets, S3 on Outposts adds a\ndelete marker and retains the objects as noncurrent versions. For buckets that don't use S3\nVersioning, S3 on Outposts permanently deletes the objects.\n\u2022 Permanently delete noncurrent versions of objects \u2013 S3 on Outposts permanently deletes\nnoncurrent versions of objects.\nUsing the console API Version 2006-03-01 144",
      "start_idx": 259329,
      "end_idx": 261193,
      "metadata": {
        "num_sentences": 33,
        "num_words": 307,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step instructions",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle rule",
            "Delete markers",
            "Versioning",
            "Bucket management",
            "Filters",
            "Object expiration",
            "Noncurrent versions",
            "Management tab"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "Lifecycle rule",
            "Outposts buckets",
            "Versioning"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Bucket Configuration",
            "Data Lifecycle Policies"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "Amazon S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions on managing lifecycle rules for S3 on Outposts buckets, including enabling, disabling, and editing rules to manage object expiration and deletion policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable or disable a lifecycle rule for an S3 Outposts bucket?",
            "What actions can be configured in an S3 lifecycle rule?",
            "How can I edit the scope of a lifecycle rule in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "Outposts",
          "Versioning",
          "Amazon S3",
          "Bucket management",
          "Object expiration",
          "Filters",
          "Delete markers",
          "Management tab",
          "Lifecycle rule",
          "Noncurrent versions",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_151",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Delete expired object delete markers or incomplete multipart uploads \u2013 S3 on Outposts\npermanently deletes expired object delete markers or incomplete multipart uploads.\nIf you limit the scope of your Lifecycle rule by using object tags, you can't choose Delete\nexpired object delete markers. You also can't choose Delete expired object delete markers\nif you choose Expire current object versions.\nNote\nSize-based filters can't be used with delete markers and incomplete multipart uploads.\n8. If you chose Expire current versions of objects or Permanently delete noncurrent versions of\nobjects, configure the rule trigger based on a specific date or the object age.\n9. If you chose Delete expired object delete markers, to confirm that you want to delete expired\nobject delete markers, select Delete expired object delete markers.\n10. Choose Save.\nDeleting a lifecycle rule\n1. Open the Amazon S3 console at https://console.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the Outposts bucket that you want to delete a lifecycle rule for.\n4. Choose the Management tab, and then under Lifecycle rule, choose the rule that you want to\ndelete.\n5. Choose Delete.\nCreating and managing a lifecycle configuration by using the AWS CLI\nand SDK for Java\nYou can use S3 Lifecycle to optimize storage capacity for Amazon S3 on Outposts. You can create\nlifecycle rules to expire objects as they age or are replaced by newer versions. You can create,\nenable, disable, or delete a lifecycle rule.\nFor more information about S3 Lifecycle, see Creating and managing a lifecycle configuration for\nyour Amazon S3 on Outposts bucket.\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 145",
      "start_idx": 261195,
      "end_idx": 262942,
      "metadata": {
        "num_sentences": 25,
        "num_words": 282,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Guide",
              "Instruction"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle rule",
            "expired object delete markers",
            "incomplete multipart uploads",
            "AWS CLI",
            "SDK for Java",
            "object age",
            "storage optimization",
            "Management tab"
          ],
          "entities": [
            "Amazon S3",
            "Outposts buckets",
            "AWS CLI",
            "SDK for Java",
            "Lifecycle configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Lifecycle Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to manage lifecycle rules for Amazon S3 on Outposts, including creating, modifying, and deleting rules using the AWS Management Console, CLI, and SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a lifecycle rule in Amazon S3 on Outposts?",
            "What are the limitations for using delete markers in lifecycle rules?",
            "How can I optimize storage using lifecycle rules in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Outposts buckets",
          "Outposts",
          "AWS CLI",
          "Lifecycle configuration",
          "Amazon S3",
          "SDK for Java",
          "object age",
          "Management tab",
          "Lifecycle rule",
          "storage optimization",
          "expired object delete markers",
          "incomplete multipart uploads"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_152",
      "text": "Amazon S3 on Outposts User Guide\nNote\nThe AWS account that creates the bucket owns it and is the only one that can create,\nenable, disable, or delete a lifecycle rule.\nTo create and manage a lifecycle configuration for an S3 on Outposts bucket by using the AWS\nCommand Line Interface (AWS CLI) and the AWS SDK for Java, see the following examples.\nTopics\n\u2022 PUT a lifecycle configuration\n\u2022 GET the lifecycle configuration on an S3 on Outposts bucket\nPUT a lifecycle configuration\nAWS CLI\nThe following AWS CLI example puts a lifecycle configuration policy on an Outposts bucket.\nThis policy specifies that all objects that have the flagged prefix (myprefix) and tags expire\nafter 10 days. To use this example, replace each user input placeholder with your own\ninformation.\n1. Save the lifecycle configuration policy to a JSON file. In this example, the file is named\nlifecycle1.json.\n{\n\"Rules\": [\n{\n\"ID\": \"id-1\",\n\"Filter\": {\n\"And\": {\n\"Prefix\": \"myprefix\",\n\"Tags\": [\n{\n\"Value\": \"mytagvalue1\",\n\"Key\": \"mytagkey1\"\n},\n{\n\"Value\": \"mytagvalue2\",\n\"Key\": \"mytagkey2\"\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 146",
      "start_idx": 262944,
      "end_idx": 264063,
      "metadata": {
        "num_sentences": 9,
        "num_words": 186,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "lifecycle configuration",
            "AWS CLI",
            "JSON file",
            "bucket",
            "policy",
            "prefix",
            "tags",
            "expire"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS CLI",
            "AWS SDK for Java",
            "JSON file"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Lifecycle Management",
            "AWS Tools"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and manage a lifecycle configuration for an S3 on Outposts bucket using AWS CLI and AWS SDK for Java, with an example of a JSON-based lifecycle policy.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a lifecycle configuration for an S3 on Outposts bucket?",
            "What is the JSON format for an S3 lifecycle policy?",
            "Which AWS tools can manage S3 lifecycle configurations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "policy",
          "expire",
          "lifecycle configuration",
          "Outposts bucket",
          "prefix",
          "AWS SDK for Java",
          "bucket",
          "tags",
          "AWS Outposts",
          "JSON file"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_153",
      "text": "Amazon S3 on Outposts User Guide\n}\n],\n\"ObjectSizeGreaterThan\": 1000,\n\"ObjectSizeLessThan\": 5000\n}\n},\n\"Status\": \"Enabled\",\n\"Expiration\": {\n\"Days\": 10\n}\n}\n]\n}\n2. Submit the JSON file as part of the put-bucket-lifecycle-configuration CLI\ncommand. To use this command, replace each user input placeholder with your\nown information. For more information about this command, see put-bucket-lifecycle-\nconfiguration in the AWS CLI Reference.\naws s3control put-bucket-lifecycle-configuration --account-id 123456789012 --\nbucket arn:aws:s3-outposts:region:123456789012:outpost/op-01ac5d28a6a232904/\nbucket/example-outposts-bucket --lifecycle-configuration file://lifecycle1.json\nSDK for Java\nThe following SDK for Java example puts a lifecycle configuration on an Outposts bucket.\nThis lifecycle configuration specifies that all objects that have the flagged prefix (myprefix)\nand tags expire after 10 days. To use this example, replace each user input placeholder\nwith your own information. For more information, see PutBucketLifecycleConfiguration in the\nAmazon Simple Storage Service API Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void putBucketLifecycleConfiguration(String bucketArn) {\nS3Tag tag1 = new S3Tag().withKey(\"mytagkey1\").withValue(\"mytagkey1\");\nS3Tag tag2 = new S3Tag().withKey(\"mytagkey2\").withValue(\"mytagkey2\");\nLifecycleRuleFilter lifecycleRuleFilter = new LifecycleRuleFilter()\n.withAnd(new LifecycleRuleAndOperator()\n.withPrefix(\"myprefix\")\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 147",
      "start_idx": 264065,
      "end_idx": 265604,
      "metadata": {
        "num_sentences": 10,
        "num_words": 173,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Example",
              "Command"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle configuration",
            "AWS CLI",
            "SDK for Java",
            "put-bucket-lifecycle-configuration",
            "LifecycleRuleFilter",
            "prefix",
            "tags",
            "expiration"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "LifecycleRuleFilter"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure lifecycle rules for Amazon S3 on Outposts using the AWS CLI and SDK for Java, including code examples and JSON structure for configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure lifecycle rules for Amazon S3 on Outposts?",
            "What is the JSON structure for lifecycle configuration in S3?",
            "How can I use the AWS CLI to apply lifecycle configurations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Lifecycle configuration",
          "Outposts",
          "AWS CLI",
          "put-bucket-lifecycle-configuration",
          "Amazon S3",
          "SDK for Java",
          "LifecycleRuleFilter",
          "prefix",
          "tags",
          "expiration"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_154",
      "text": "Amazon S3 on Outposts User Guide\n.withTags(tag1, tag2))\n.withObjectSizeGreaterThan(1000)\n.withObjectSizeLessThan(5000);\nLifecycleExpiration lifecycleExpiration = new LifecycleExpiration()\n.withExpiredObjectDeleteMarker(false)\n.withDays(10);\nLifecycleRule lifecycleRule = new LifecycleRule()\n.withStatus(\"Enabled\")\n.withFilter(lifecycleRuleFilter)\n.withExpiration(lifecycleExpiration)\n.withID(\"id-1\");\nLifecycleConfiguration lifecycleConfiguration = new LifecycleConfiguration()\n.withRules(lifecycleRule);\nPutBucketLifecycleConfigurationRequest reqPutBucketLifecycle = new\nPutBucketLifecycleConfigurationRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn)\n.withLifecycleConfiguration(lifecycleConfiguration);\nPutBucketLifecycleConfigurationResult respPutBucketLifecycle =\ns3ControlClient.putBucketLifecycleConfiguration(reqPutBucketLifecycle);\nSystem.out.printf(\"PutBucketLifecycleConfiguration Response: %s%n\",\nrespPutBucketLifecycle.toString());\n}\nGET the lifecycle configuration on an S3 on Outposts bucket\nAWS CLI\nThe following AWS CLI example gets a lifecycle configuration on an Outposts bucket. To use\nthis command, replace each user input placeholder with your own information. For\nmore information about this command, see get-bucket-lifecycle-configuration in the AWS CLI\nReference.\nUsing the AWS CLI and SDK for Java API Version 2006-03-01 148",
      "start_idx": 265606,
      "end_idx": 266965,
      "metadata": {
        "num_sentences": 4,
        "num_words": 112,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Lifecycle Configuration",
            "Lifecycle Rule",
            "Expiration",
            "AWS CLI",
            "SDK for Java",
            "Bucket",
            "PutBucketLifecycleConfiguration",
            "get-bucket-lifecycle-configuration"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "SDK for Java",
            "LifecycleExpiration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS Services",
            "Lifecycle Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure lifecycle rules for Amazon S3 buckets on Outposts using AWS CLI and SDK for Java, including code and command examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure lifecycle rules for an S3 bucket on Outposts?",
            "What is the AWS CLI command to get bucket lifecycle configuration?",
            "How do I use the SDK for Java to set lifecycle rules in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "get-bucket-lifecycle-configuration",
          "SDK for Java",
          "PutBucketLifecycleConfiguration",
          "Lifecycle Configuration",
          "Lifecycle Rule",
          "Bucket",
          "Expiration",
          "LifecycleExpiration"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_155",
      "text": "Amazon S3 on Outposts User Guide\naws s3control get-bucket-lifecycle-configuration --account-id 123456789012 --bucket\narn:aws:s3-outposts:<your-region>:123456789012:outpost/op-01ac5d28a6a232904/\nbucket/example-outposts-bucket\nSDK for Java\nThe following SDK for Java example gets a lifecycle configuration for an Outposts bucket. For\nmore information, see GetBucketLifecycleConfiguration in the Amazon Simple Storage Service\nAPI Reference.\nimport com.amazonaws.services.s3control.model.*;\npublic void getBucketLifecycleConfiguration(String bucketArn) {\nGetBucketLifecycleConfigurationRequest reqGetBucketLifecycle = new\nGetBucketLifecycleConfigurationRequest()\n.withAccountId(AccountId)\n.withBucket(bucketArn);\nGetBucketLifecycleConfigurationResult respGetBucketLifecycle =\ns3ControlClient.getBucketLifecycleConfiguration(reqGetBucketLifecycle);\nSystem.out.printf(\"GetBucketLifecycleConfiguration Response: %s%n\",\nrespGetBucketLifecycle.toString());\n}\nReplicating objects for S3 on Outposts\nWith S3 Replication on AWS Outposts, you can configure Amazon S3 on Outposts to automatically\nreplicate S3 objects across different Outposts, or between buckets on the same Outpost. You\ncan use S3 Replication on Outposts to maintain multiple replicas of your data in the same or\ndifferent Outposts, or across different accounts, to help meet data-residency needs. S3 Replication\non Outposts helps power your compliant storage needs and data sharing across accounts. If you\nneed to ensure that your replicas are identical to the source data, you can use S3 Replication on\nOutposts to make replicas of your objects that retain all metadata, such as the original object\ncreation time, tags, and version IDs.\nS3 Replication on Outposts also provides detailed metrics and notifications to monitor the\nstatus of object replication between buckets. You can use Amazon CloudWatch to monitor\nReplicating objects for S3 on Outposts API Version 2006-03-01 149",
      "start_idx": 266967,
      "end_idx": 268904,
      "metadata": {
        "num_sentences": 9,
        "num_words": 223,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "S3 Replication",
            "lifecycle configuration",
            "replication metrics",
            "data residency",
            "CloudWatch",
            "metadata retention",
            "SDK for Java",
            "object replication"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon CloudWatch",
            "S3ControlClient",
            "GetBucketLifecycleConfigurationRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": [
            "SDK for Java",
            "S3ControlClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve lifecycle configurations for Amazon S3 on Outposts buckets using the AWS SDK for Java and configure S3 Replication to replicate objects across Outposts or buckets, while retaining metadata and monitoring replication metrics via CloudWatch.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve lifecycle configurations for an S3 Outposts bucket?",
            "What is S3 Replication on Outposts used for?",
            "How can I monitor replication metrics for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetBucketLifecycleConfigurationRequest",
          "Outposts",
          "Amazon S3",
          "data residency",
          "SDK for Java",
          "replication metrics",
          "Amazon CloudWatch",
          "S3 Replication",
          "lifecycle configuration",
          "AWS Outposts",
          "S3ControlClient",
          "CloudWatch",
          "metadata retention",
          "object replication"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_156",
      "text": "Amazon S3 on Outposts User Guide\nreplication progress by tracking bytes pending replication, operations pending replication, and\nreplication latency between your source and destination buckets. To quickly diagnose and correct\nconfiguration issues, you can also set up Amazon EventBridge to receive notifications about\nreplication object failures. To learn more, see Managing your replication.\nTopics\n\u2022 Replication configuration\n\u2022 Requirements for S3 Replication on Outposts\n\u2022 What is replicated?\n\u2022 What isn't replicated?\n\u2022 What isn't supported by S3 Replication on Outposts?\n\u2022 Setting up replication\n\u2022 Managing your replication\nReplication configuration\nS3 on Outposts stores a replication configuration as XML. In the replication configuration XML file,\nyou specify an AWS Identity and Access Management (IAM) role and one or more rules.\n<ReplicationConfiguration>\n<Role>IAM-role-ARN</Role>\n<Rule>\n...\n</Rule>\n<Rule>\n...\n</Rule>\n...\n</ReplicationConfiguration>\nS3 on Outposts can't replicate objects without your permission. You grant S3 on Outposts\npermissions with the IAM role that you specify in the replication configuration. S3 on Outposts\nassumes that IAM role to replicate objects on your behalf. You must grant the required permissions\nto the IAM role before starting replication. For more information about these permissions for S3 on\nOutposts, see Creating an IAM role.\nYou add one rule in a replication configuration in the following scenarios:\nReplication configuration API Version 2006-03-01 150",
      "start_idx": 268906,
      "end_idx": 270416,
      "metadata": {
        "num_sentences": 14,
        "num_words": 216,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication",
            "IAM role",
            "permissions",
            "EventBridge",
            "latency",
            "buckets",
            "replication configuration",
            "XML"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Identity and Access Management (IAM)",
            "Amazon EventBridge",
            "ReplicationConfiguration",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "Event Notifications"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EventBridge",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "XML"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the replication configuration process for Amazon S3 on Outposts, including setting up IAM roles, tracking replication progress, and diagnosing issues using Amazon EventBridge notifications.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for Amazon S3 on Outposts?",
            "What permissions are required for S3 replication on Outposts?",
            "What issues can Amazon EventBridge notify me about during replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon EventBridge",
          "Outposts",
          "XML",
          "Amazon S3",
          "permissions",
          "API Version 2006-03-01",
          "replication configuration",
          "EventBridge",
          "replication",
          "AWS Identity and Access Management (IAM)",
          "buckets",
          "IAM role",
          "latency",
          "AWS IAM",
          "ReplicationConfiguration"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_157",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 You want to replicate all objects.\n\u2022 You want to replicate one subset of objects. You identify the object subset by adding a filter in\nthe rule. In the filter, you specify an object key prefix, tags, or a combination of both, to identify\nthe subset of objects that the rule applies to.\nYou add multiple rules in a replication configuration if you want to replicate different subsets of\nobjects. In each rule, you specify a filter that selects a different subset of objects. For example,\nyou might choose to replicate objects that have either tax/ or document/ key prefixes. To do\nthis, you add two rules, one that specifies the tax/ key prefix filter and another that specifies the\ndocument/ key prefix.\nFor more information about S3 on Outposts replication configuration and replication rules, see\nReplicationConfiguration in the Amazon Simple Storage Service API Reference.\nRequirements for S3 Replication on Outposts\nReplication requires the following:\n\u2022 The destination Outpost CIDR range must be associated in your source Outpost subnet table. For\nmore information, see Prerequisites for creating replication rules.\n\u2022 Both the source and destination buckets must have S3 Versioning enabled. For more information\nabout versioning, see Managing S3 Versioning for your S3 on Outposts bucket.\n\u2022 Amazon S3 on Outposts must have permission to replicate objects from the source bucket to the\ndestination bucket on your behalf. That means you must create a service role to delegate GET\nand PUT permissions to S3 on Outposts.\n1. Before creating the service role, you must have GET permission on the source bucket and PUT\npermission on the destination bucket.\n2. To create the service role to delegate permissions to S3 on Outposts, you must first configure\npermissions to allow an IAM entity (a user or role) to perform the iam:CreateRole and\niam:PassRole actions. Then, you allow the IAM entity to create a service role. To make S3\non Outposts assume the service role on your behalf and delegate GET and PUT permissions to\nS3 on Outposts, you must assign the necessary trust and permissions policies to the role. For\nmore information about these permissions for S3 on Outposts, see Creating an IAM role. For\nmore information about creating a service role, see Creating a service role.\nRequirements for S3 Replication on Outposts API Version 2006-03-01 151",
      "start_idx": 270418,
      "end_idx": 272805,
      "metadata": {
        "num_sentences": 24,
        "num_words": 392,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "replication rules",
            "object filters",
            "service role",
            "IAM permissions",
            "Versioning",
            "CIDR range",
            "source bucket",
            "destination bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IAM",
            "ReplicationConfiguration",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM Role Management"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for Amazon S3 on Outposts, including setting up rules for object subsets, enabling versioning, and creating necessary IAM roles and permissions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication rules for S3 on Outposts?",
            "What are the prerequisites for S3 replication on Outposts?",
            "How do I create a service role for S3 on Outposts replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Versioning",
          "Amazon S3",
          "object filters",
          "service role",
          "IAM",
          "API Version 2006-03-01",
          "replication rules",
          "S3 Replication",
          "source bucket",
          "destination bucket",
          "IAM permissions",
          "ReplicationConfiguration",
          "CIDR range"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_158",
      "text": "Amazon S3 on Outposts User Guide\nWhat is replicated?\nBy default, S3 on Outposts replicates the following:\n\u2022 Objects created after you add a replication configuration.\n\u2022 Object metadata from the source objects to the replicas. For information about how to replicate\nmetadata from the replicas to the source objects, see Replication status if Amazon S3 replica\nmodification sync on Outposts is enabled.\n\u2022 Object tags, if there are any.\nHow delete operations affect replication\nIf you delete an object from the source bucket, the following actions occur by default:\n\u2022 If you make a DELETE request without specifying an object version ID, S3 on Outposts adds a\ndelete marker. S3 on Outposts deals with the delete marker as follows:\n\u2022 S3 on Outposts does not replicate the delete marker by default.\n\u2022 However, you can add delete marker replication to non-tag-based rules. For more information\nabout how to enable delete marker replication in your replication configuration, see Using the\nS3 console.\n\u2022 If you specify an object version ID to delete in a DELETE request, S3 on Outposts permanently\ndeletes that object version in the source bucket. However, it doesn't replicate the deletion in\nthe destination buckets. In other words, it doesn't delete the same object version from the\ndestination buckets. This behavior protects data from malicious deletions.\nWhat isn't replicated?\nBy default, S3 on Outposts doesn't replicate the following:\n\u2022 Objects in the source bucket that are replicas that were created by another replication rule. For\nexample, suppose you configure replication where bucket A is the source and bucket B is the\ndestination. Now suppose that you add another replication configuration where bucket B is the\nsource and bucket C is the destination. In this case, objects in bucket B that are replicas of objects\nin bucket A are not replicated to bucket C.\nWhat is replicated? API Version 2006-03-01 152",
      "start_idx": 272807,
      "end_idx": 274723,
      "metadata": {
        "num_sentences": 19,
        "num_words": 313,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Explanation",
              "Configuration Details"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication configuration",
            "delete marker",
            "object metadata",
            "replica modification sync",
            "object version ID",
            "source bucket",
            "destination bucket",
            "replication rule",
            "delete operations"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "replication configuration",
            "delete marker replication",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the default replication behavior of Amazon S3 on Outposts, including what is and isn't replicated, and how delete operations affect replication. It also provides guidance on enabling delete marker replication.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What does S3 on Outposts replicate by default?",
            "How do delete operations impact replication in S3 on Outposts?",
            "What objects are excluded from replication in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replica modification sync",
          "object metadata",
          "replication rule",
          "Amazon S3",
          "API Version 2006-03-01",
          "replication configuration",
          "delete marker",
          "source bucket",
          "object version ID",
          "delete operations",
          "destination bucket",
          "S3 on Outposts",
          "delete marker replication"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_159",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Objects in the source bucket that have already been replicated to a different destination. For\nexample, if you change the destination bucket in an existing replication configuration, S3 on\nOutposts won't replicate the objects again.\n\u2022 Objects that are created with server-side encryption with customer-provided encryption keys\n(SSE-C).\n\u2022 Updates to bucket-level subresources.\nFor example, if you change the lifecycle configuration or add a notification configuration to your\nsource bucket, these changes are not applied to the destination bucket. This feature makes it\npossible to have different configurations on the source and destination buckets.\n\u2022 Actions performed by lifecycle configuration.\nFor example, if you enable a lifecycle configuration only on your source bucket and configure\nexpiration actions, S3 on Outposts creates delete markers for expired objects in the source\nbucket but doesn't replicate those markers to the destination buckets. If you want the same\nlifecycle configuration applied to both the source and destination buckets, enable the same\nlifecycle configuration on both. For more information about lifecycle configuration, see Creating\nand managing a lifecycle configuration for your Amazon S3 on Outposts bucket.\nWhat isn't supported by S3 Replication on Outposts?\nThe following S3 Replication features are currently not supported by S3 on Outposts:\n\u2022 S3 Replication Time Control (S3 RTC). S3 RTC is not supported because the object traffic in S3\nReplication on Outposts travels over your on-premises network (the local gateway). For more\ninformation about local gateways, see Working with the local gateway in the AWS Outposts User\nGuide.\n\u2022 S3 Replication for Batch Operations.\nSetting up replication\nNote\nObjects that existed in your bucket before you set up a replication rule aren't replicated\nautomatically. In other words, Amazon S3 on Outposts doesn't replicate objects\nretroactively. To replicate objects that were created before your replication configuration,\nWhat isn't supported by S3 Replication on Outposts? API Version 2006-03-01 153",
      "start_idx": 274725,
      "end_idx": 276839,
      "metadata": {
        "num_sentences": 19,
        "num_words": 315,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Limitations",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts",
            "server-side encryption",
            "SSE-C",
            "lifecycle configuration",
            "delete markers",
            "S3 RTC",
            "local gateway",
            "replication rule",
            "Batch Operations"
          ],
          "entities": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Outposts User Guide",
            "S3 Replication Time Control",
            "local gateway"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Encryption"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the limitations and unsupported features of S3 Replication on Outposts, including details on lifecycle configurations, server-side encryption, and replication rules. It also highlights differences between source and destination bucket configurations and explains why certain features like S3 RTC and Batch Operations are not supported.",
          "intents": [
            "Reference",
            "Compare",
            "How-To"
          ],
          "potential_questions": [
            "What features are not supported by S3 Replication on Outposts?",
            "How does lifecycle configuration affect replication in S3 on Outposts?",
            "Why is S3 Replication Time Control not supported on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "replication rule",
          "Amazon S3",
          "SSE-C",
          "local gateway",
          "AWS Outposts User Guide",
          "S3 Replication",
          "lifecycle configuration",
          "delete markers",
          "AWS Outposts",
          "server-side encryption",
          "S3 Replication Time Control",
          "Batch Operations",
          "S3 on Outposts",
          "S3 RTC"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_160",
      "text": "Amazon S3 on Outposts User Guide\nyou can use the CopyObject API operation to copy them to the same bucket. After\nthe objects are copied, they appear as \"new\" objects in the bucket and the replication\nconfiguration will apply to them. For more information about copying an object, see\nCopying an object in an Amazon S3 on Outposts bucket using the AWS SDK for Java and\nCopyObject in the Amazon Simple Storage Service API Reference.\nTo enable S3 Replication on Outposts, add a replication rule to your source Outposts bucket. The\nreplication rule tells S3 on Outposts to replicate objects as specified. In the replication rule, you\nmust provide the following:\n\u2022 The source Outposts bucket access point \u2013 The access point Amazon Resource Name (ARN) or\naccess point alias of the bucket from which you want S3 on Outposts to replicate the objects. For\nmore information about using access point aliases, see Using a bucket-style alias for your S3 on\nOutposts bucket access point.\n\u2022 The objects that you want to replicate \u2013 You can replicate all of the objects in the source\nOutposts bucket or a subset. You identify a subset by providing a key name prefix, one or more\nobject tags, or both in the configuration.\nFor example, if you configure a replication rule to replicate only objects with the key name prefix\nTax/, S3 on Outposts replicates objects with keys such as Tax/doc1 or Tax/doc2. But it doesn't\nreplicate objects with the key Legal/doc3. If you specify both a prefix and one or more tags, S3\non Outposts replicates only objects that have the specific key prefix and tags.\n\u2022 The destination Outposts bucket \u2013 The ARN or access point alias of the bucket to which you\nwant S3 on Outposts to replicate the objects.\nYou can configure the replication rule by using the REST API, AWS SDKs, AWS Command Line\nInterface (AWS CLI), or Amazon S3 console.\nS3 on Outposts also provides API operations to support setting up replication rules. For more\ninformation, see the following topics in the Amazon Simple Storage Service API Reference:\n\u2022 PutBucketReplication\n\u2022 GetBucketReplication\n\u2022 DeleteBucketReplication\nTopics\nSetting up replication API Version 2006-03-01 154",
      "start_idx": 276841,
      "end_idx": 279002,
      "metadata": {
        "num_sentences": 16,
        "num_words": 364,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "API Usage"
            ]
          },
          "keywords": [
            "S3 Replication",
            "Outposts bucket",
            "replication rule",
            "access point alias",
            "key name prefix",
            "object tags",
            "CopyObject API",
            "PutBucketReplication",
            "GetBucketReplication",
            "DeleteBucketReplication"
          ],
          "entities": [
            "Amazon S3",
            "AWS SDK for Java",
            "AWS CLI",
            "Amazon Simple Storage Service API",
            "Outposts bucket access point"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for Amazon S3 on Outposts buckets, including setting replication rules and using relevant API operations to manage replication settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication rules for S3 on Outposts?",
            "What is the process for copying objects in an Outposts bucket?",
            "Which API operations support replication setup for Amazon S3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "object tags",
          "Outposts bucket access point",
          "AWS CLI",
          "S3 on Outposts",
          "replication rule",
          "Amazon S3",
          "DeleteBucketReplication",
          "PutBucketReplication",
          "CopyObject API",
          "S3 Replication",
          "Outposts bucket",
          "AWS SDK for Java",
          "access point alias",
          "GetBucketReplication",
          "Amazon Simple Storage Service API"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_161",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Prerequisites for creating replication rules\n\u2022 Creating replication rules on Outposts\nPrerequisites for creating replication rules\nTopics\n\u2022 Connecting your source and destination Outpost subnets\n\u2022 Creating an IAM role\nConnecting your source and destination Outpost subnets\nTo have your replication traffic go from your source Outpost to your destination Outpost over your\nlocal gateway, you must add a new route to set up networking. You must connect the Classless\nInter-Domain Routing (CIDR) networking ranges of your access points together. For each pair of\naccess points, you need to set up this connection only once.\nSome steps to set up the connection are different, depending on the access type of your Outposts\nendpoints that are associated with your access points. The access type for endpoints is either\nPrivate (direct virtual private cloud [VPC] routing for AWS Outposts) or Customer owned IP (a\ncustomer-owned IP address pool [CoIP pool] within your on-premises network).\nStep 1: Find the CIDR range of your source Outposts endpoint\nTo find the CIDR range of your source endpoint that's associated with your source access point\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. In the Outposts buckets list, choose the source bucket that you want for replication.\n4. Choose the Outposts access points tab, and choose the Outposts access point for the source\nbucket for your replication rule.\n5. Choose the Outposts endpoint.\n6. Copy the subnet ID for use in Step 5.\n7. The method that you use to find the CIDR range of the source Outposts endpoint depends on\nthe access type of your endpoint.\nSetting up replication API Version 2006-03-01 155",
      "start_idx": 279004,
      "end_idx": 280815,
      "metadata": {
        "num_sentences": 20,
        "num_words": 294,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Networking Setup",
              "Replication Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication rules",
            "CIDR range",
            "IAM role",
            "local gateway",
            "access points",
            "endpoints",
            "VPC routing",
            "CoIP pool"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "IAM role",
            "VPC routing"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "IAM Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Management Console"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the prerequisites and steps for creating replication rules for Amazon S3 on Outposts, including setting up networking between source and destination Outpost subnets and configuring IAM roles.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up networking for replication between Outposts subnets?",
            "What are the prerequisites for creating replication rules on Amazon S3 Outposts?",
            "How do I find the CIDR range of an Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "local gateway",
          "VPC routing",
          "access points",
          "AWS Management Console",
          "replication rules",
          "endpoints",
          "AWS Outposts",
          "IAM role",
          "CoIP pool",
          "CIDR range"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_162",
      "text": "Amazon S3 on Outposts User Guide\nIn the Outposts endpoint overview section, see the Access Type.\n\u2022 If the access type is Private, copy the Classless inter-domain routing (CIDR) value to use in\nStep 6.\n\u2022 If the access type is Customer Owned IP, do the following:\n1. Copy the Customer owned IPv4 pool value to use as the ID of the address pool later on.\n2. Open the AWS Outposts console at https://console.aws.amazon.com/outposts/.\n3. In the navigation pane, choose Local gateway route tables.\n4. Choose the Local gateway route table ID value of your source Outpost.\n5. In the details pane, choose the CoIP pools tab. Paste the value of your CoIP pool ID that\nyou copied previously in the search box.\n6. For the matched CoIP pool, copy the corresponding CIDRs value of your source Outposts\nendpoint for use in Step 6.\nStep 2: Find the subnet ID and the CIDR range of your destination Outposts endpoint\nTo find the subnet ID and the CIDR range of your destination endpoint that's associated with your\ndestination access point, follow the same substeps in Step 1 and change your source Outposts\nendpoint to your destination Outposts endpoint when you apply those substeps. Copy the subnet\nID value of your destination Outposts endpoint for use in Step 6. Copy the CIDR value of your\ndestination Outposts endpoint for use in Step 5.\nStep 3: Find the local gateway ID of your source Outpost\nTo find the local gateway ID of your source Outpost\n1. Open the AWS Outposts console at https://console.aws.amazon.com/outposts/.\n2. In the left navigation pane, choose Local gateways.\n3. On the Local gateways page, find the Outpost ID of your source Outpost that you want to use\nfor replication.\n4. Copy the local gateway ID value of your source Outpost for use in Step 5.\nFor more information about local gateway, see Local gateway in the AWS Outposts User Guide.\nSetting up replication API Version 2006-03-01 156",
      "start_idx": 280817,
      "end_idx": 282717,
      "metadata": {
        "num_sentences": 28,
        "num_words": 328,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "CIDR",
            "Customer Owned IP",
            "Local gateway",
            "CoIP pool",
            "subnet ID",
            "replication",
            "endpoint",
            "AWS console"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "Local gateway",
            "Customer Owned IP",
            "CIDR"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "Data Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for configuring Amazon S3 on Outposts, focusing on setting up replication and managing endpoints and local gateways.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure Amazon S3 on Outposts for replication?",
            "What is the process to find the CIDR range of an Outposts endpoint?",
            "How can I locate the local gateway ID for my source Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "Local gateway",
          "Outposts",
          "Amazon S3",
          "CIDR",
          "AWS console",
          "replication",
          "AWS Outposts",
          "Customer Owned IP",
          "subnet ID",
          "CoIP pool",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_163",
      "text": "Amazon S3 on Outposts User Guide\nStep 4: Find the local gateway ID of your destination Outpost\nTo find the local gateway ID of your destination Outpost, follow the same substeps in Step 3,\nexcept look for the Outpost ID for your destination Outpost. Copy the local gateway ID value of\nyour destination Outpost for use in Step 6.\nStep 5: Set up the connection from your source Outpost subnet to your destination Outpost\nsubnet\nTo connect from your source Outpost subnet to your destination Outpost subnet\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/.\n2. In the left navigation pane, choose Subnets.\n3. In the search box, enter the subnet ID for your source Outposts endpoint that you found in\nStep 1. Choose the subnet with the matched subnet ID.\n4. For the matched subnet item, choose the Route table value of this subnet.\n5. On the page with a selected route table, choose Actions, and then choose Edit routes.\n6. On the Edit routes page, choose Add route.\n7. Under Destination, enter the CIDR range of your destination Outposts endpoint that you\nfound in Step 2.\n8. Under Target, choose Outpost Local Gateway, and enter the local gateway ID of your source\nOutpost that you found in Step 3.\n9. Choose Save changes.\n10. Make sure the Status for the route is Active.\nStep 6: Set up the connection from your destination Outpost subnet to your source Outpost\nsubnet\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/.\n2. In the left navigation pane, choose Subnets.\n3. In the search box, enter the subnet ID for your destination Outposts endpoint that you found\nin Step 2. Choose the subnet with the matched subnet ID.\n4. For the matched subnet item, choose the Route table value of this subnet.\nSetting up replication API Version 2006-03-01 157",
      "start_idx": 282719,
      "end_idx": 284577,
      "metadata": {
        "num_sentences": 33,
        "num_words": 322,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "local gateway ID",
            "subnet",
            "route table",
            "VPC console",
            "CIDR range",
            "AWS Management Console",
            "Active status",
            "replication"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "VPC console",
            "Outpost Local Gateway",
            "CIDR range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "Cloud Storage",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions to set up connections between subnets on source and destination Outposts using the AWS Management Console and VPC configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up a connection between Outpost subnets?",
            "What is the process for configuring route tables in AWS Outposts?",
            "How can I find the local gateway ID for an Outpost?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "route table",
          "Outposts",
          "Active status",
          "Amazon S3",
          "AWS Management Console",
          "Amazon S3 on Outposts",
          "VPC",
          "local gateway ID",
          "VPC console",
          "replication",
          "AWS Outposts",
          "Outpost Local Gateway",
          "subnet",
          "CIDR range"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_164",
      "text": "Amazon S3 on Outposts User Guide\n5. On the page with a selected route table, choose Actions, and then choose Edit routes.\n6. On the Edit routes page, choose Add route.\n7. Under Destination, enter the CIDR range of your source Outposts endpoint that you found in\nStep 1.\n8. Under Target, choose Outpost Local Gateway, and enter the local gateway ID of your\ndestination Outpost that you found in Step 4.\n9. Choose Save changes.\n10. Make sure the Status for the route is Active.\nAfter you connect the CIDR networking ranges of your source and destination access points, you\nmust create an AWS Identity and Access Management (IAM) role.\nCreating an IAM role\nBy default, all S3 on Outposts resources\u2014buckets, objects, and related subresources\u2014are private,\nand only the resource owner can access the resource. S3 on Outposts needs permissions to read\nand replicate objects from the source Outposts bucket. You grant these permissions by creating an\nIAM service role and specifying that role in your replication configuration.\nThis section explains the trust policy and minimum required permissions policy. The example\nwalkthroughs provide step-by-step instructions to create an IAM role. For more information, see\nCreating replication rules on Outposts. For more information about IAM roles, see IAM roles in the\nIAM User Guide.\n\u2022 The following example shows a trust policy, where you identify S3 on Outposts as the service\nprincipal that can assume the role.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"s3-outposts.amazonaws.com\"\n},\n\"Action\":\"sts:AssumeRole\"\n}\n]\nSetting up replication API Version 2006-03-01 158",
      "start_idx": 284579,
      "end_idx": 286227,
      "metadata": {
        "num_sentences": 22,
        "num_words": 255,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Access Management"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "IAM role",
            "CIDR range",
            "replication",
            "local gateway",
            "trust policy",
            "permissions",
            "service principal",
            "STS"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "AWS Identity and Access Management",
            "Outpost Local Gateway",
            "STS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Computing",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM",
            "Outposts"
          ],
          "mentioned_tools": [
            "IAM User Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure routes and create an IAM role for Amazon S3 on Outposts, including setting up trust policies and permissions for replication tasks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure routes for Amazon S3 on Outposts?",
            "What permissions are required for S3 replication on Outposts?",
            "How do I create an IAM role for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Computing]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "IAM",
          "local gateway",
          "permissions",
          "STS",
          "replication",
          "IAM role",
          "service principal",
          "Outpost Local Gateway",
          "Amazon S3 on Outposts",
          "AWS Identity and Access Management",
          "CIDR range",
          "trust policy"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_165",
      "text": "Amazon S3 on Outposts User Guide\n}\n\u2022 The following example shows an access policy, where you grant the role permissions to perform\nreplication tasks on your behalf. When S3 on Outposts assumes the role, it has the permissions\nthat you specify in this policy. To use this policy, replace the user input placeholders\nwith your own information. Make sure to replace them with the Outpost IDs of your source\nand destination Outposts and the bucket names and access point names of your source and\ndestination Outposts buckets.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\nbucket/SOURCE-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\naccesspoint/SOURCE-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n},\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/\nbucket/DESTINATION-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/\naccesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n}\n]\n}\nThe access policy grants permissions for the following actions:\nSetting up replication API Version 2006-03-01 159",
      "start_idx": 286229,
      "end_idx": 287646,
      "metadata": {
        "num_sentences": 5,
        "num_words": 135,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Access Policy",
              "Replication Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access policy",
            "replication",
            "permissions",
            "bucket",
            "access point",
            "role",
            "object replication",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "SOURCE-OUTPOST-ID",
            "DESTINATION-OUTPOST-ID",
            "arn:aws"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This example demonstrates how to configure an access policy for Amazon S3 on Outposts to enable replication tasks between source and destination Outposts buckets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts?",
            "What permissions are required for replication tasks in S3 on Outposts?",
            "What is the format of an access policy for S3 on Outposts replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "SOURCE-OUTPOST-ID",
          "Outposts",
          "Amazon S3",
          "permissions",
          "API Version 2006-03-01",
          "access policy",
          "arn:aws",
          "replication",
          "role",
          "bucket",
          "object replication",
          "access point",
          "DESTINATION-OUTPOST-ID",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_166",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 s3-outposts:GetObjectVersionForReplication \u2013 Permission for this action is granted\non all objects to allow S3 on Outposts to get a specific object version that's associated with\neach object.\n\u2022 s3-outposts:GetObjectVersionTagging \u2013 Permission for this action on objects in the\nSOURCE-OUTPOSTS-BUCKET bucket (the source bucket) allows S3 on Outposts to read object\ntags for replication. For more information, see Adding tags for S3 on Outposts buckets. If S3\non Outposts doesn't have this permission, it replicates the objects, but not the object tags.\n\u2022 s3-outposts:ReplicateObject and s3-outposts:ReplicateDelete \u2013 Permissions for\nthese actions on all objects in the DESTINATION-OUTPOSTS-BUCKET bucket (the destination\nbucket) allow S3 on Outposts to replicate objects or delete markers to the destination\nOutposts bucket. For information about delete markers, see How delete operations affect\nreplication.\nNote\n\u2022 Permission for the s3-outposts:ReplicateObject action on the DESTINATION-\nOUTPOSTS-BUCKET bucket (the destination bucket) also allows replication of\nobject tags. Therefore, you don't need to explicitly grant permission for the s3-\noutposts:ReplicateTags action.\n\u2022 For cross-account replication, the owner of the destination Outposts\nbucket must update its bucket policy to grant permission for the s3-\noutposts:ReplicateObject action on theDESTINATION-OUTPOSTS-BUCKET.\nThe s3-outposts:ReplicateObject action allows S3 on Outposts to replicate\nobjects and object tags to the destination Outposts bucket.\nFor a list of S3 on Outposts actions, see Actions defined by S3 on Outposts.\nImportant\nThe AWS account that owns the IAM role must have permissions for the actions that it\ngrants to the IAM role.\nFor example, suppose that the source Outposts bucket contains objects owned by\nanother AWS account. The owner of the objects must explicitly grant the AWS account\nthat owns the IAM role the required permissions through the bucket policy and the access\nSetting up replication API Version 2006-03-01 160",
      "start_idx": 287648,
      "end_idx": 289697,
      "metadata": {
        "num_sentences": 14,
        "num_words": 296,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Replication"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "GetObjectVersionForReplication",
            "GetObjectVersionTagging",
            "ReplicateObject",
            "ReplicateDelete",
            "bucket policy",
            "object tags",
            "IAM role",
            "replication",
            "delete markers"
          ],
          "entities": [
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "AWS account",
            "IAM role",
            "S3 on Outposts actions"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Permissions",
          "secondary_categories": [
            "Replication",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the permissions required for setting up replication in Amazon S3 on Outposts, including specific actions and policies for source and destination buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are needed for S3 on Outposts replication?",
            "How does S3 on Outposts handle object tags during replication?",
            "What role does the bucket policy play in cross-account replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Permissions]",
        "tf_idf_keywords": [
          "object tags",
          "GetObjectVersionTagging",
          "Amazon S3",
          "DESTINATION-OUTPOSTS-BUCKET",
          "S3 on Outposts actions",
          "GetObjectVersionForReplication",
          "bucket policy",
          "replication",
          "delete markers",
          "ReplicateObject",
          "SOURCE-OUTPOSTS-BUCKET",
          "ReplicateDelete",
          "AWS account",
          "S3 on Outposts",
          "IAM role"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_167",
      "text": "Amazon S3 on Outposts User Guide\npoint policy. Otherwise, S3 on Outposts can't access the objects, and replication of the\nobjects fails.\nThe permissions described here are related to the minimum replication configuration.\nIf you choose to add optional replication configurations, you must grant additional\npermissions to S3 on Outposts.\nGranting permissions when the source and destination Outposts buckets are owned by different\nAWS accounts\nWhen the source and destination Outposts buckets aren't owned by the same accounts, the\nowner of the destination Outposts bucket must update the bucket and access point policies for\nthe destination bucket. These policies must grant the owner of the source Outposts bucket and\nthe IAM service role permissions to perform replication actions, as shown in the following policy\nexamples, or replication will fail. In these policy examples, DESTINATION-OUTPOSTS-BUCKET is\nthe destination bucket. To use these policy examples, replace the user input placeholders\nwith your own information.\nIf you're creating the IAM service role manually, set the role path as role/service-role/, as\nshown in the following policy examples. For more information, see IAM ARNs in the IAM User Guide.\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"PolicyForDestinationBucket\",\n\"Statement\":[\n{\n\"Sid\":\"Permissions on objects\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"arn:aws:iam::SourceBucket-account-ID:role/service-role/source-\naccount-IAM-role\"\n},\n\"Action\":[\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateObject\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:DestinationBucket-account-\nID:outpost/DESTINATION-OUTPOST-ID/bucket/DESTINATION-OUTPOSTS-BUCKET/object/*\"\n]\n}\nSetting up replication API Version 2006-03-01 161",
      "start_idx": 289699,
      "end_idx": 291425,
      "metadata": {
        "num_sentences": 11,
        "num_words": 213,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Permissions Setup",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "permissions",
            "IAM role",
            "bucket policy",
            "access point policy",
            "destination bucket",
            "source bucket",
            "policy examples",
            "ARN"
          ],
          "entities": [
            "AWS",
            "IAM",
            "S3 Outposts Bucket",
            "Replication Actions",
            "PolicyForDestinationBucket"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM User Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure permissions for Amazon S3 on Outposts replication, especially when the source and destination buckets are owned by different AWS accounts. It includes policy examples and guidelines for setting up IAM roles and bucket policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication permissions for S3 on Outposts?",
            "What policies are required for cross-account bucket replication?",
            "How do I set up an IAM service role for S3 replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "policy examples",
          "ARN",
          "permissions",
          "IAM",
          "Amazon S3",
          "bucket policy",
          "access point policy",
          "replication",
          "source bucket",
          "S3 Outposts Bucket",
          "IAM role",
          "PolicyForDestinationBucket",
          "destination bucket",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_168",
      "text": "Amazon S3 on Outposts User Guide\n]\n}\n{\n\"Version\":\"2012-10-17\",\n\"Id\":\"PolicyForDestinationAccessPoint\",\n\"Statement\":[\n{\n\"Sid\":\"Permissions on objects\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"AWS\":\"arn:aws:iam::SourceBucket-account-ID:role/service-role/source-\naccount-IAM-role\"\n},\n\"Action\":[\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateObject\"\n],\n\"Resource\" :[\n\"arn:aws:s3-outposts:region:DestinationBucket-account-\nID:outpost/DESTINATION-OUTPOST-ID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/\nobject/*\"\n]\n}\n]\n}\nNote\nIf objects in the source Outposts bucket are tagged, note the following:\nIf the source Outposts bucket owner grants S3 on Outposts permission for the s3-\noutposts:GetObjectVersionTagging and s3-outposts:ReplicateTags actions to\nreplicate object tags (through the IAM role), Amazon S3 replicates the tags along with the\nobjects. For information about the IAM role, see Creating an IAM role.\nCreating replication rules on Outposts\nS3 Replication on Outposts is the automatic, asynchronous replication of objects across buckets in\nthe same or different AWS Outposts. Replication copies newly created objects and object updates\nSetting up replication API Version 2006-03-01 162",
      "start_idx": 291427,
      "end_idx": 292629,
      "metadata": {
        "num_sentences": 4,
        "num_words": 133,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Example",
              "Configuration Details",
              "Feature Explanation"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Replication",
            "IAM role",
            "Permissions",
            "Replication rules",
            "Access Point",
            "Object tags",
            "Policy",
            "Region"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "IAM role",
            "Replication rules",
            "Access Point"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up S3 replication on AWS Outposts, including configuring IAM roles, permissions, and replication rules. It also provides an example policy for granting replication access.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts?",
            "What permissions are required for S3 replication on Outposts?",
            "How does S3 handle object tags during replication?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Object tags",
          "Region",
          "Amazon S3",
          "Permissions",
          "Access Point",
          "Replication rules",
          "Replication",
          "AWS Outposts",
          "Policy",
          "IAM role"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_169",
      "text": "Amazon S3 on Outposts User Guide\nfrom a source Outposts bucket to a destination Outposts bucket or buckets. For more information,\nsee Replicating objects for S3 on Outposts.\nNote\nObjects that existed in the source Outposts bucket before you set up replication rules\naren't replicated. In other words, S3 on Outposts doesn't replicate objects retroactively. To\nreplicate objects that were created before your replication configuration, you can use the\nCopyObject API operation to copy them to the same bucket. After the objects are copied,\nthey appear as \"new\" objects in the bucket and the replication configuration will apply to\nthem. For more information about copying an object, see Copying an object in an Amazon\nS3 on Outposts bucket using the AWS SDK for Java and CopyObject in the Amazon Simple\nStorage Service API Reference.\nWhen you configure replication, you add replication rules to the source Outposts bucket.\nReplication rules define which source Outposts bucket objects to replicate and the destination\nOutposts bucket or buckets where the replicated objects will be stored. You can create a rule to\nreplicate all the objects in a bucket or a subset of objects with a specific key name prefix, one or\nmore object tags, or both. A destination Outposts bucket can be in the same Outpost as the source\nOutposts bucket, or it can be in a different Outpost.\nFor S3 on Outposts replication rules, you must provide both the source Outposts bucket's access\npoint Amazon Resource Name (ARN) and the destination Outposts bucket's access point ARN\ninstead of the source and destination Outposts bucket names.\nIf you specify an object version ID to delete, S3 on Outposts deletes that object version in the\nsource Outposts bucket. But it doesn't replicate the deletion to the destination Outposts bucket. In\nother words, it doesn't delete the same object version from the destination Outposts bucket. This\nbehavior protects data from malicious deletions.\nWhen you add a replication rule to an Outposts bucket, the rule is enabled by default, so the rule\nstarts working as soon as you save it.\nIn this example, you set up replication for source and destination Outposts buckets that are on\ndifferent Outposts and are owned by the same AWS account. Examples are provided for using the\nAmazon S3 console, the AWS Command Line Interface (AWS CLI), and the AWS SDK for Java and\nAWS SDK for .NET. For information about cross-account S3 Replication on Outposts permissions,\nSetting up replication API Version 2006-03-01 163",
      "start_idx": 292631,
      "end_idx": 295149,
      "metadata": {
        "num_sentences": 20,
        "num_words": 412,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Replication",
              "Behavior Explanation"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication rules",
            "Outposts bucket",
            "CopyObject API",
            "access point ARN",
            "object version ID",
            "key name prefix",
            "object tags",
            "source bucket",
            "destination bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS CLI",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication between Amazon S3 on Outposts buckets, including rules, behaviors, and constraints. It also provides examples for using various AWS tools to set up replication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for S3 on Outposts buckets?",
            "What are the limitations of replication in S3 on Outposts?",
            "How can I use the CopyObject API to retroactively replicate objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "object tags",
          "AWS SDK for .NET",
          "S3 on Outposts",
          "key name prefix",
          "Amazon S3",
          "AWS CLI",
          "access point ARN",
          "replication rules",
          "Outposts bucket",
          "AWS SDK for Java",
          "source bucket",
          "object version ID",
          "AWS Outposts",
          "destination bucket",
          "CopyObject API"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_170",
      "text": "Amazon S3 on Outposts User Guide\nsee Granting permissions when the source and destination Outposts buckets are owned by\ndifferent AWS accounts.\nFor prerequisites to set up S3 on Outposts replication rules, see Prerequisites for creating\nreplication rules.\nUsing the S3 console\nFollow these steps to configure a replication rule when the destination Amazon S3 on Outposts\nbucket is in a different Outpost from the source Outposts bucket.\nIf the destination Outposts bucket is in a different account from the source Outposts bucket, you\nmust add a bucket policy to the destination Outposts bucket to grant the owner of the source\nOutposts bucket account permission to replicate objects in the destination Outposts bucket.\nTo create a replication rule\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the Outposts Buckets list, choose the name of the bucket that you want to use as the source\nbucket.\n3. Choose the Management tab, scroll down to the Replication rules section, and then choose\nCreate replication rule.\n4. For Replication rule name, enter a name for your rule to help identify the rule later. The name\nis required and must be unique within the bucket.\n5. Under Status, Enabled is chosen by default. An enabled rule starts to work as soon as you save\nit. If you want to enable the rule later, choose Disabled.\n6. Under Priority, the rule's priority value determines which rule to apply if there are overlapping\nrules. When objects are included in the scope of more than one replication rule, S3 on\nOutposts uses these priority values to avoid conflicts. By default, new rules are added to the\nreplication configuration at the highest priority. The higher the number, the higher the priority.\nTo change the priority for the rule, after you save the rule, choose the rule name from the\nreplication rule list, choose Actions, and then choose Edit priority.\n7. Under Source bucket, you have the following options for setting the replication source:\n\u2022 To replicate the whole bucket, choose Apply to all objects in the bucket.\nSetting up replication API Version 2006-03-01 164",
      "start_idx": 295151,
      "end_idx": 297301,
      "metadata": {
        "num_sentences": 26,
        "num_words": 357,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication rule",
            "bucket policy",
            "AWS Management Console",
            "source bucket",
            "destination bucket",
            "replication configuration",
            "priority value",
            "S3 console"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS Management Console",
            "Replication rules",
            "Bucket policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS Services",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides a step-by-step process for configuring replication rules for Amazon S3 on Outposts when the source and destination buckets are on different Outposts or AWS accounts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a replication rule for Amazon S3 on Outposts?",
            "What is the process for setting up replication when buckets are in different AWS accounts?",
            "How do priority values affect replication rules in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "Bucket policy",
          "Outposts",
          "replication rule",
          "Amazon S3",
          "AWS Management Console",
          "replication configuration",
          "S3 console",
          "bucket policy",
          "priority value",
          "source bucket",
          "Replication rules",
          "destination bucket"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_171",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 To apply prefix or tag filtering to the replication source, choose Limit the scope of this rule\nby using one or more filters. You can combine a prefix and tags.\n\u2022 To replicate all objects that have the same prefix, under Prefix, enter a prefix in the box.\nUsing the Prefix filter limits replication to all objects that have names that begin with the\nsame string (for example, pictures).\nIf you enter a prefix that is the name of a folder, you must use a / (forward slash) as the\nlast character (for example, pictures/).\n\u2022 To replicate all objects that have one or more of the same object tags, choose Add tag,\nand then enter the key-value pair in the boxes. To add another tag, repeat the procedure.\nFor more information about object tags, see Adding tags for S3 on Outposts buckets.\n8. To access your S3 on Outposts source bucket for replication, under Source access point name,\nchoose an access point that is attached to the source bucket.\n9. Under Destination, choose the access point ARN of the destination Outposts bucket where you\nwant S3 on Outposts to replicate objects. The destination Outposts bucket can be in the same\nor a different AWS account as the source Outposts bucket.\nIf the destination bucket is in a different account from the source Outposts bucket, you must\nadd a bucket policy to the destination Outposts bucket to grant the owner of the source\nOutposts bucket account permission to replicate objects to the destination Outposts bucket.\nFor more information, see Granting permissions when the source and destination Outposts\nbuckets are owned by different AWS accounts.\nNote\nIf versioning is not enabled on the destination Outposts bucket, you get a warning that\ncontains an Enable versioning button. Choose this button to enable versioning on the\nbucket.\n10. Set up an AWS Identity and Access Management (IAM) service role that S3 on Outposts can\nassume to replicate objects on your behalf.\nTo set up an IAM role, under IAM role, do one of the following:\n\u2022 To have S3 on Outposts create a new IAM role for your replication configuration, choose\nChoose from existing IAM roles, and then choose Create new role. When you save the rule,\nSetting up replication API Version 2006-03-01 165",
      "start_idx": 297303,
      "end_idx": 299547,
      "metadata": {
        "num_sentences": 21,
        "num_words": 388,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Filtering",
              "Permissions"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication",
            "prefix filtering",
            "object tags",
            "IAM role",
            "bucket policy",
            "access point",
            "versioning",
            "destination bucket",
            "source bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts bucket",
            "IAM role",
            "AWS account",
            "ARN"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Access Control",
            "Replication Setup"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Identity and Access Management (IAM)",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "IAM role creation"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure replication for Amazon S3 on Outposts buckets, including filtering options, access point setup, and IAM role requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I apply prefix or tag filtering to S3 on Outposts replication?",
            "What permissions are required for cross-account replication in S3 on Outposts?",
            "How do I enable versioning for the destination Outposts bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "object tags",
          "versioning",
          "AWS account",
          "Amazon S3",
          "ARN",
          "prefix filtering",
          "bucket policy",
          "replication",
          "Outposts bucket",
          "source bucket",
          "AWS Identity and Access Management (IAM)",
          "IAM role",
          "AWS Outposts",
          "access point",
          "destination bucket"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_172",
      "text": "Amazon S3 on Outposts User Guide\na new policy is generated for the IAM role that matches the source and destination Outposts\nbuckets that you choose. We recommend that you choose Create new role.\n\u2022 You can also choose to use an existing IAM role. If you do, you must choose a role that\ngrants S3 on Outposts the necessary permissions for replication. If this role doesn't grant S3\non Outposts sufficient permissions to follow your replication rule, replication fails.\nTo choose an existing role, choose Choose from existing IAM roles, and then choose the role\nfrom the dropdown menu. You can also choose Enter an IAM role ARN and then enter the\nIAM role's Amazon Resource Name (ARN).\nImportant\nWhen you add a replication rule to an S3 on Outposts bucket, you must have the\niam:CreateRole and iam:PassRole permissions to be able to create and pass the\nIAM role that grants S3 on Outposts replication permissions. For more information, see\nGranting a user permissions to pass a role to an AWS service in the IAM User Guide.\n11. All objects in Outposts buckets are encrypted by default. For more information about S3 on\nOutposts encryption, see Data encryption in S3 on Outposts. Only objects that are encrypted\nby using server-side encryption with Amazon S3 managed keys (SSE-S3) can be replicated.\nThe replication of objects that are encrypted by using server-side encryption with AWS Key\nManagement Service (AWS KMS) keys (SSE-KMS) or server-side encryption with customer-\nprovided encryption keys (SSE-C) is not supported.\n12. As needed, enable the following additional options while setting the replication rule\nconfiguration:\n\u2022 If you want to enable S3 on Outposts replication metrics in your replication configuration,\nselect Replication metrics. For more information, see Monitoring progress with replication\nmetrics.\n\u2022 If you want to enable delete marker replication in your replication configuration, select\nDelete marker replication. For more information, see How delete operations affect\nreplication.\n\u2022 If you want to replicate metadata changes made to the replicas back to the source objects,\nselect Replica modification sync. For more information, see Replication status if Amazon S3\nreplica modification sync on Outposts is enabled.\n13. To finish, choose Create rule.\nSetting up replication API Version 2006-03-01 166",
      "start_idx": 299549,
      "end_idx": 301878,
      "metadata": {
        "num_sentences": 24,
        "num_words": 370,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Permissions",
              "Encryption"
            ]
          },
          "keywords": [
            "IAM role",
            "S3 on Outposts",
            "replication",
            "encryption",
            "SSE-S3",
            "SSE-KMS",
            "SSE-C",
            "replication metrics",
            "delete marker replication",
            "replica modification sync"
          ],
          "entities": [
            "Amazon S3",
            "IAM role",
            "AWS Key Management Service (KMS)",
            "Outposts buckets",
            "Amazon Resource Name (ARN)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Permissions",
            "Data Encryption"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Key Management Service",
            "IAM"
          ],
          "mentioned_tools": [
            "IAM role",
            "Replication metrics"
          ]
        },
        "semantic": {
          "summary": "The document provides instructions for setting up replication for Amazon S3 on Outposts, including IAM role permissions, encryption requirements, and optional configuration settings like metrics and delete marker replication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What permissions are required to set up replication for S3 on Outposts?",
            "Which encryption methods are supported for replication in S3 on Outposts?",
            "How can I enable replication metrics for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "replica modification sync",
          "Outposts buckets",
          "AWS Key Management Service (KMS)",
          "SSE-KMS",
          "Amazon S3",
          "IAM",
          "SSE-C",
          "replication metrics",
          "AWS Key Management Service",
          "replication",
          "SSE-S3",
          "encryption",
          "Amazon Resource Name (ARN)",
          "IAM role",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_173",
      "text": "Amazon S3 on Outposts User Guide\nAfter you save your rule, you can edit, enable, disable, or delete your rule. To do so, go to the\nManagement tab for the source Outposts bucket, scroll down to the Replication rules section,\nchoose your rule, and then choose Edit rule.\nUsing the AWS CLI\nTo use the AWS CLI to set up replication when the source and destination Outposts buckets are\nowned by the same AWS account, you do the following:\n\u2022 Create source and destination Outposts buckets.\n\u2022 Enable versioning on both of the buckets.\n\u2022 Create an IAM role that gives S3 on Outposts permission to replicate objects.\n\u2022 Add the replication configuration to the source Outposts bucket.\nTo verify your setup, you test it.\nTo set up replication when the source and destination Outposts buckets are owned by the same\nAWS account\n1. Set a credentials profile for the AWS CLI. In this example, we use the profile name acctA. For\ninformation about setting credential profiles, see Named profiles in the AWS Command Line\nInterface User Guide.\nImportant\nThe profile that you use for this exercise must have the necessary permissions. For\nexample, in the replication configuration, you specify the IAM service role that S3\non Outposts can assume. You can do this only if the profile that you use has the\niam:CreateRole and iam:PassRole permissions. For more information, see\nGranting a user permissions to pass a role to an AWS service in the IAM User Guide.\nIf you use administrator credentials to create a named profile, the named profile will\nhave the necessary permission to perform all the tasks.\n2. Create a source bucket and enable versioning on it. The following create-bucket command\ncreates a SOURCE-OUTPOSTS-BUCKET bucket in the US East (N. Virginia) (us-east-1) Region.\nTo use this command, replace the user input placeholders with your own information.\nSetting up replication API Version 2006-03-01 167",
      "start_idx": 301880,
      "end_idx": 303775,
      "metadata": {
        "num_sentences": 21,
        "num_words": 317,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Replication",
            "AWS CLI",
            "IAM role",
            "Versioning",
            "Credentials profile",
            "Named profiles",
            "Permissions",
            "Replication configuration"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "IAM role",
            "SOURCE-OUTPOSTS-BUCKET",
            "US East (N. Virginia)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Permissions",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up replication between Amazon S3 Outposts buckets using the AWS CLI, including creating buckets, enabling versioning, and configuring IAM roles and replication settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication for S3 Outposts buckets?",
            "What permissions are required for replication configuration in S3 on Outposts?",
            "How do I create and configure a source bucket using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Named profiles",
          "Outposts",
          "AWS CLI",
          "Credentials profile",
          "Amazon S3",
          "Versioning",
          "Replication configuration",
          "IAM",
          "Permissions",
          "US East (N. Virginia)",
          "SOURCE-OUTPOSTS-BUCKET",
          "Replication",
          "S3 on Outposts",
          "IAM role"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_174",
      "text": "Amazon S3 on Outposts User Guide\naws s3control create-bucket --bucket SOURCE-OUTPOSTS-BUCKET --outpost-id SOURCE-\nOUTPOST-ID --profile acctA --region us-east-1\nThe following put-bucket-versioning command enables versioning on the SOURCE-\nOUTPOSTS-BUCKET bucket. To use this command, replace the user input placeholders\nwith your own information.\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/bucket/SOURCE-OUTPOSTS-\nBUCKET --versioning-configuration Status=Enabled --profile acctA\n3. Create a destination bucket and enable versioning on it. The following create-bucket\ncommand creates a DESTINATION-OUTPOSTS-BUCKET bucket in the US West (Oregon) (us-\nwest-2) Region. To use this command, replace the user input placeholders with your\nown information.\nNote\nTo set up a replication configuration when both the source and destination Outposts\nbuckets are in the same AWS account, you use the same named profile. This example\nuses acctA. To test the replication configuration when the buckets are owned by\ndifferent AWS accounts, you specify different profiles for each bucket.\naws s3control create-bucket --bucket DESTINATION-OUTPOSTS-BUCKET --create-bucket-\nconfiguration LocationConstraint=us-west-2 --outpost-id DESTINATION-OUTPOST-ID --\nprofile acctA --region us-west-2\nThe following put-bucket-versioning command enables versioning on the\nDESTINATION-OUTPOSTS-BUCKET bucket. To use this command, replace the user input\nplaceholders with your own information.\naws s3control put-bucket-versioning --account-id 123456789012 --bucket arn:aws:s3-\noutposts:region:123456789012:outpost/DESTINATION-OUTPOST-ID/bucket/DESTINATION-\nOUTPOSTS-BUCKET --versioning-configuration Status=Enabled --profile acctA\nSetting up replication API Version 2006-03-01 168",
      "start_idx": 303777,
      "end_idx": 305616,
      "metadata": {
        "num_sentences": 12,
        "num_words": 204,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "bucket",
            "versioning",
            "replication",
            "create-bucket",
            "put-bucket-versioning",
            "profile",
            "account",
            "region"
          ],
          "entities": [
            "SOURCE-OUTPOSTS-BUCKET",
            "DESTINATION-OUTPOSTS-BUCKET",
            "aws s3control",
            "us-east-1",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS S3",
            "Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and configure Amazon S3 Outposts buckets, enable versioning, and set up replication between source and destination buckets using AWS CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on Amazon S3 Outposts?",
            "What commands enable versioning on an S3 Outposts bucket?",
            "How can I set up replication between two Outposts buckets?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "profile",
          "us-east-1",
          "versioning",
          "Outposts",
          "Amazon S3",
          "aws s3control",
          "account",
          "DESTINATION-OUTPOSTS-BUCKET",
          "put-bucket-versioning",
          "region",
          "us-west-2",
          "replication",
          "AWS Outposts",
          "bucket",
          "SOURCE-OUTPOSTS-BUCKET"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_175",
      "text": "Amazon S3 on Outposts User Guide\n4. Create an IAM service role. Later in the replication configuration, you add this service role to\nthe SOURCE-OUTPOSTS-BUCKET bucket. S3 on Outposts assumes this role to replicate objects\non your behalf. You create an IAM role in two steps:\na. Create an IAM role.\ni. Copy the following trust policy and save it to a file named s3-on-outposts-role-\ntrust-policy.json in the current directory on your local computer. This policy\ngrants S3 on Outposts service principal permissions to assume the service role.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"s3-outposts.amazonaws.com\"\n},\n\"Action\":\"sts:AssumeRole\"\n}\n]\n}\nii. Run the following command to create the role. Replace the user input\nplaceholders with your own information.\naws iam create-role --role-name replicationRole --assume-role-policy-\ndocument file://s3-on-outposts-role-trust-policy.json --profile acctA\nb. Attach a permissions policy to the service role.\ni. Copy the following permissions policy and save it to a file named s3-on-outposts-\nrole-permissions-policy.json in the current directory on your local computer.\nThis policy grants permissions for various S3 on Outposts bucket and object\nactions. To use this policy, replace the user input placeholders with your own\ninformation.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\nSetting up replication API Version 2006-03-01 169",
      "start_idx": 305618,
      "end_idx": 307033,
      "metadata": {
        "num_sentences": 19,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "IAM role",
            "trust policy",
            "permissions policy",
            "S3 on Outposts",
            "replication",
            "service role",
            "assume role",
            "AWS CLI",
            "Outposts bucket",
            "sts:AssumeRole"
          ],
          "entities": [
            "Amazon S3",
            "IAM",
            "S3 on Outposts",
            "AWS CLI",
            "sts:AssumeRole"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "IAM Roles",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "IAM",
            "STS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create and configure an IAM service role for Amazon S3 on Outposts to enable object replication, including creating trust and permissions policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an IAM service role for S3 on Outposts?",
            "What trust policy is required for S3 on Outposts replication?",
            "How do I attach a permissions policy to an IAM role?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Amazon S3",
          "IAM",
          "service role",
          "STS",
          "replication",
          "permissions policy",
          "Outposts bucket",
          "sts:AssumeRole",
          "IAM role",
          "S3 on Outposts",
          "assume role",
          "trust policy"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_176",
      "text": "Amazon S3 on Outposts User Guide\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-\nOUTPOST-ID/bucket/SOURCE-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-\nOUTPOST-ID/accesspoint/SOURCE-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n},\n{\n\"Effect\":\"Allow\",\n\"Action\":[\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\"\n],\n\"Resource\":[\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-\nOUTPOST-ID/bucket/DESTINATION-OUTPOSTS-BUCKET/object/*\",\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-\nOUTPOST-ID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT/object/*\"\n]\n}\n]\n}\nii. Run the following command to create a policy and attach it to the role. Replace the\nuser input placeholders with your own information.\naws iam put-role-policy --role-name replicationRole --policy-\ndocument file://s3-on-outposts-role-permissions-policy.json --policy-\nname replicationRolePolicy --profile acctA\n5. Add a replication configuration to the SOURCE-OUTPOSTS-BUCKET bucket.\na. Although the S3 on Outposts API requires a replication configuration in XML format, the\nAWS CLI requires that you specify the replication configuration in JSON format. Save\nthe following JSON in a file called replication.json to the local directory on your\ncomputer. To use this configuration, replace the user input placeholders with your\nown information.\nSetting up replication API Version 2006-03-01 170",
      "start_idx": 307035,
      "end_idx": 308604,
      "metadata": {
        "num_sentences": 10,
        "num_words": 142,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Setup"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IAM Policy",
            "Replication",
            "Action",
            "Resource",
            "JSON",
            "AWS CLI",
            "Role",
            "Permissions",
            "API"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "IAM Policy",
            "Replication Configuration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Replication"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "AWS Identity and Access Management (IAM)"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up replication for Amazon S3 on Outposts, including creating IAM policies, configuring roles, and specifying replication configurations in JSON format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up replication for Amazon S3 on Outposts?",
            "What IAM policies are required for S3 on Outposts replication?",
            "How do I configure replication using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM Policy",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "API",
          "Action",
          "Resource",
          "Role",
          "Permissions",
          "Replication Configuration",
          "AWS Identity and Access Management (IAM)",
          "Replication",
          "AWS Outposts",
          "Amazon S3 on Outposts",
          "JSON"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_177",
      "text": "Amazon S3 on Outposts User Guide\n{\n\"Role\": \"IAM-role-ARN\",\n\"Rules\": [\n{\n\"Status\": \"Enabled\",\n\"Priority\": 1,\n\"DeleteMarkerReplication\": { \"Status\": \"Disabled\" },\n\"Filter\" : { \"Prefix\": \"Tax\"},\n\"Destination\": {\n\"Bucket\":\n\"arn:aws:s3-outposts:region:123456789012:outpost/DESTINATION-OUTPOST-\nID/accesspoint/DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT\"\n}\n}\n]\n}\nb. Run the following put-bucket-replication command to add the replication\nconfiguration to your source Outposts bucket. To use this command, replace the user\ninput placeholders with your own information.\naws s3control put-bucket-replication --account-id 123456789012 --\nbucket arn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-\nID/bucket/SOURCE-OUTPOSTS-BUCKET --replication-configuration file://\nreplication.json --profile acctA\nc. To retrieve the replication configuration, use the get-bucket-replication command.\nTo use this command, replace the user input placeholders with your own\ninformation.\naws s3control get-bucket-replication --account-id 123456789012 --bucket\narn:aws:s3-outposts:region:123456789012:outpost/SOURCE-OUTPOST-ID/\nbucket/SOURCE-OUTPOSTS-BUCKET --profile acctA\n6. Test the setup in the Amazon S3 console:\na. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\nb. In the SOURCE-OUTPOSTS-BUCKET bucket, create a folder named Tax.\nc. Add sample objects to the Tax folder in the SOURCE-OUTPOSTS-BUCKET bucket.\nSetting up replication API Version 2006-03-01 171",
      "start_idx": 308606,
      "end_idx": 310110,
      "metadata": {
        "num_sentences": 12,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Command Execution"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "Replication",
            "IAM-role-ARN",
            "Bucket",
            "DeleteMarkerReplication",
            "Filter",
            "Destination",
            "AWS CLI",
            "Tax Folder"
          ],
          "entities": [
            "IAM-role-ARN",
            "DESTINATION-OUTPOST-ID",
            "SOURCE-OUTPOST-ID",
            "DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT",
            "SOURCE-OUTPOSTS-BUCKET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions to configure bucket replication between Amazon S3 Outposts buckets using the AWS CLI. It includes commands for adding and retrieving replication configurations and testing the setup.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure replication for an Amazon S3 Outposts bucket?",
            "What AWS CLI commands are used to manage replication configurations?",
            "How do I test replication setup in the Amazon S3 console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SOURCE-OUTPOST-ID",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "DESTINATION-OUTPOSTS-BUCKET-ACCESS-POINT",
          "IAM-role-ARN",
          "Tax Folder",
          "Bucket",
          "Destination",
          "SOURCE-OUTPOSTS-BUCKET",
          "Replication",
          "AWS Outposts",
          "DESTINATION-OUTPOST-ID",
          "DeleteMarkerReplication",
          "Filter"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_178",
      "text": "Amazon S3 on Outposts User Guide\nd. In the DESTINATION-OUTPOSTS-BUCKET bucket, verify the following:\n\u2022 S3 on Outposts replicated the objects.\nNote\nThe amount of time that it takes for S3 on Outposts to replicate an object\ndepends on the size of the object. For information about how to see the status\nof replication, see Getting replication status information.\n\u2022 On the object's Properties tab, the Replication status is set to Replica (identifying this\nas a replica object).\nManaging your replication\nThis section describes additional replication configuration options that are available in S3 on\nOutposts, how to determine the replication status, and how to troubleshot replication. For\ninformation about core replication configuration, see Setting up replication.\nTopics\n\u2022 Monitoring progress with replication metrics\n\u2022 Getting replication status information\n\u2022 Troubleshooting replication\n\u2022 Using EventBridge for S3 Replication on Outposts\nMonitoring progress with replication metrics\nS3 Replication on Outposts provides detailed metrics for the replication rules in your replication\nconfiguration. With replication metrics, you can monitor in 5-minute intervals the progress of\nreplication by tracking bytes pending replication, replication latency replication, and operations\npending. To assist in troubleshooting any configuration issues, you can also set up Amazon\nEventBridge to receive notifications about replication failures.\nWhen replication metrics are enabled, S3 Replication on Outposts publishes the following metrics\nto Amazon CloudWatch:\nManaging your replication API Version 2006-03-01 172",
      "start_idx": 310112,
      "end_idx": 311720,
      "metadata": {
        "num_sentences": 10,
        "num_words": 226,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Verification",
              "Monitoring",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "replication status",
            "replication metrics",
            "Amazon EventBridge",
            "Amazon CloudWatch",
            "replica object",
            "replication latency",
            "replication configuration",
            "replication failures",
            "replication rules"
          ],
          "entities": [
            "S3 on Outposts",
            "Amazon EventBridge",
            "Amazon CloudWatch",
            "DESTINATION-OUTPOSTS-BUCKET",
            "Replication status"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Replication",
          "secondary_categories": [
            "Cloud Monitoring",
            "Troubleshooting"
          ],
          "mentioned_services": [
            "S3 on Outposts",
            "Amazon EventBridge",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to verify and monitor replication in Amazon S3 on Outposts, including using replication metrics, troubleshooting failures, and leveraging Amazon EventBridge for notifications.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify replication in S3 on Outposts?",
            "What metrics are available for monitoring S3 replication?",
            "How can I troubleshoot replication failures in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Replication]",
        "tf_idf_keywords": [
          "Amazon EventBridge",
          "replication status",
          "replication configuration",
          "DESTINATION-OUTPOSTS-BUCKET",
          "Amazon CloudWatch",
          "replication metrics",
          "replica object",
          "replication failures",
          "replication rules",
          "replication latency",
          "Replication status",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_179",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 Bytes Pending Replication \u2013 The total number of bytes of objects that are pending replication\nfor a given replication rule.\n\u2022 Replication Latency \u2013 The maximum number of seconds by which the replication destination\nbucket is behind the source bucket for a given replication rule.\n\u2022 Operations Pending Replication \u2013 The number of operations that are pending replication for a\ngiven replication rule. Operations include objects, delete markers, and tags.\nNote\nS3 Replication on Outposts metrics are billed at the same rate as CloudWatch custom\nmetrics. For more information, see CloudWatch pricing.\nGetting replication status information\nThe replication status can help you determine the current state of an object that's being replicated\nby Amazon S3 on Outposts. The replication status of a source object will return either PENDING,\nCOMPLETED, or FAILED. The replication status of a replica will return REPLICA.\nReplication status overview\nIn a replication scenario, you have a source bucket on which you configure replication and a\ndestination bucket to which S3 on Outposts replicates objects. When you request an object (using\nGetObject) or object metadata (using HeadObject) from these buckets, S3 on Outposts returns\nthe x-amz-replication-status header in the response as follows:\n\u2022 When you request an object from the source bucket, S3 on Outposts returns the x-amz-\nreplication-status header if the object in your request is eligible for replication.\nFor example, suppose that you specify the object prefix TaxDocs in your replication\nconfiguration to tell S3 on Outposts to replicate only objects with the key name prefix\nTaxDocs. Any objects that you upload that have this key name prefix\u2014for example, TaxDocs/\ndocument1.pdf\u2014will be replicated. For object requests with this key name prefix, S3 on\nOutposts returns the x-amz-replication-status header with one of the following values for\nthe object's replication status: PENDING, COMPLETED, or FAILED.\nManaging your replication API Version 2006-03-01 173",
      "start_idx": 311722,
      "end_idx": 313770,
      "metadata": {
        "num_sentences": 15,
        "num_words": 312,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics Description",
              "Replication Status",
              "Header Explanation"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication",
            "replication rule",
            "replication status",
            "x-amz-replication-status",
            "source bucket",
            "destination bucket",
            "CloudWatch",
            "GetObject"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "CloudWatch",
            "TaxDocs",
            "x-amz-replication-status"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch",
            "S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section provides a reference for Amazon S3 on Outposts replication metrics, replication statuses, and the x-amz-replication-status header behavior for requests to source and destination buckets.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What do the Amazon S3 replication statuses PENDING, COMPLETED, and FAILED mean?",
            "How is the x-amz-replication-status header used in replication scenarios?",
            "What metrics are available for monitoring S3 replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replication status",
          "Outposts",
          "TaxDocs",
          "S3 on Outposts",
          "replication rule",
          "Amazon S3",
          "replication",
          "x-amz-replication-status",
          "source bucket",
          "CloudWatch",
          "destination bucket",
          "GetObject"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_180",
      "text": "Amazon S3 on Outposts User Guide\nNote\nIf object replication fails after you upload an object, you can't retry replication. You must\nupload the object again. Objects transition to a FAILED state for issues such as missing\nreplication role permissions or missing bucket permissions. For temporary failures, such\nas if a bucket or your Outpost is unavailable, the replication status doesn't transition\nto FAILED, but remains PENDING. After the resource is back online, S3 on Outposts\nresumes replicating those objects.\n\u2022 When you request an object from a destination bucket, if the object in your request is a replica\nthat S3 on Outposts created, S3 on Outposts returns the x-amz-replication-status header\nwith the value REPLICA.\nNote\nBefore deleting an object from a source bucket that has replication enabled, check the\nobject's replication status to ensure that the object has been replicated.\nReplication status if Amazon S3 replica modification sync on Outposts is enabled\nWhen your replication rules enable S3 on Outposts replica modification sync, replicas can report\nstatuses other than REPLICA. If metadata changes are in the process of replicating, the x-amz-\nreplication-status header for the replica returns PENDING. If replica modification sync fails to\nreplicate metadata, the header for the replica returns FAILED. If metadata is replicated correctly,\nthe header for the replica returns the value REPLICA.\nTroubleshooting replication\nIf object replicas don't appear in the destination Amazon S3 on Outposts bucket after you\nconfigure replication, use these troubleshooting tips to identify and fix issues.\n\u2022 The time it takes S3 on Outposts to replicate an object depends on several factors, including the\ndistance between the source and destination Outposts, and the size of the object.\nYou can check the source object's replication status. If the object's replication status is PENDING,\nS3 on Outposts hasn't completed the replication. If the object's replication status is FAILED,\ncheck the replication configuration that you set on the source bucket.\nManaging your replication API Version 2006-03-01 174",
      "start_idx": 313772,
      "end_idx": 315891,
      "metadata": {
        "num_sentences": 17,
        "num_words": 324,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Troubleshooting",
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication",
            "replication status",
            "x-amz-replication-status",
            "FAILED",
            "PENDING",
            "replica modification sync",
            "source bucket",
            "destination bucket"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "x-amz-replication-status",
            "replica modification sync",
            "replication rules"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains replication behavior and troubleshooting for Amazon S3 on Outposts, detailing replication statuses like FAILED, PENDING, and REPLICA, along with tips for resolving replication issues.",
          "intents": [
            "Reference",
            "Debug",
            "How-To"
          ],
          "potential_questions": [
            "What does the FAILED replication status mean in Amazon S3 on Outposts?",
            "How can I troubleshoot replication issues in S3 on Outposts?",
            "What are the possible replication statuses for S3 on Outposts objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "replica modification sync",
          "replication status",
          "Outposts",
          "Amazon S3",
          "FAILED",
          "replication rules",
          "PENDING",
          "replication",
          "x-amz-replication-status",
          "source bucket",
          "destination bucket"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_181",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 In the replication configuration on the source bucket, verify the following:\n\u2022 The access point Amazon Resource Name (ARN) of the destination bucket is correct.\n\u2022 The key name prefix is correct. For example, if you set the configuration to replicate objects\nwith the prefix Tax, then only objects with key names such as Tax/document1 or Tax/\ndocument2 are replicated. An object with the key name document3 is not replicated.\n\u2022 The status is Enabled.\n\u2022 Verify that versioning hasn't been suspended on either bucket. Both the source and destination\nbuckets must have versioning enabled.\n\u2022 If the destination bucket is owned by another AWS account, verify that the bucket owner has a\nbucket policy on the destination bucket that allows the source bucket owner to replicate objects.\nFor an example, see Granting permissions when the source and destination Outposts buckets are\nowned by different AWS accounts.\n\u2022 If an object replica doesn't appear in the destination bucket, the following issues might prevent\nreplication:\n\u2022 S3 on Outposts doesn't replicate an object in a source bucket that is a replica created by\nanother replication configuration. For example, if you set a replication configuration from\nbucket A to bucket B to bucket C, S3 on Outposts doesn't replicate object replicas in bucket B\nto bucket C.\nIf you want to replicate objects in bucket A to bucket B and bucket C, set multiple bucket\ndestinations in different replication rules for your source bucket replication configuration.\nFor example, create two replication rules on source bucket A, with one rule to replicate to\ndestination bucket B and the other rule to replicate to destination bucket C.\n\u2022 A source bucket owner can grant other AWS accounts permission to upload objects. By default,\nthe source bucket owner doesn't have permissions for the objects created by other accounts.\nThe replication configuration replicates only the objects for which the source bucket owner has\naccess permissions. To avoid replication issues, the source bucket owner can grant other AWS\naccounts permissions to create objects conditionally, requiring explicit access permissions on\nthose objects.\n\u2022 Suppose that in the replication configuration, you add a rule to replicate a subset of objects that\nhave a specific tag. In this case, you must assign the specific tag key and value at the time that\nthe object is created in order for S3 on Outposts to replicate the object. If you first create an\nobject and then add the tag to that existing object, S3 on Outposts doesn't replicate the object.\n\u2022 Replication fails if the bucket policy denies access to the replication role for any of the following\nactions:\nManaging your replication API Version 2006-03-01 175",
      "start_idx": 315893,
      "end_idx": 318643,
      "metadata": {
        "num_sentences": 19,
        "num_words": 451,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "replication configuration",
            "source bucket",
            "destination bucket",
            "versioning",
            "bucket policy",
            "access point ARN",
            "replication rules",
            "object tags",
            "replication role"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS account",
            "bucket A",
            "bucket B"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Replication",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides detailed steps for configuring and troubleshooting replication in Amazon S3 on Outposts, including verifying bucket settings, permissions, and replication rules.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure replication for Amazon S3 on Outposts?",
            "What are the common issues that prevent replication in S3 on Outposts?",
            "How can I replicate objects across buckets owned by different AWS accounts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "replication role",
          "versioning",
          "object tags",
          "Outposts",
          "Amazon S3",
          "replication configuration",
          "access point ARN",
          "bucket policy",
          "replication rules",
          "bucket A",
          "bucket B",
          "source bucket",
          "destination bucket",
          "AWS account",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_182",
      "text": "Amazon S3 on Outposts User Guide\nSource bucket:\n\"s3-outposts:GetObjectVersionForReplication\",\n\"s3-outposts:GetObjectVersionTagging\"\nDestination buckets:\n\"s3-outposts:ReplicateObject\",\n\"s3-outposts:ReplicateDelete\",\n\"s3-outposts:ReplicateTags\"\n\u2022 Amazon EventBridge can notify you when objects don't replicate to their destination Outposts.\nFor more information, see Using EventBridge for S3 Replication on Outposts.\nUsing EventBridge for S3 Replication on Outposts\nAmazon S3 on Outposts is integrated with Amazon EventBridge and uses the s3-outposts\nnamespace. EventBridge is a serverless event bus service that you can use to connect your\napplications with data from a variety of sources. For more information, see What is Amazon\nEventBridge? in the Amazon EventBridge User Guide.\nTo assist in troubleshooting any replication configuration issues, you can set up Amazon\nEventBridge to receive notifications about replication failure events. EventBridge can notify you in\ninstances when objects don't replicate to their destination Outposts. For more information about\nthe current state of an object that's being replicated, see Replication status overview.\nWhenever certain events happen in your Outposts bucket, S3 on Outposts can send events to\nEventBridge. Unlike other destinations, you don't need to select which event types that you\nwant to deliver. You can also use EventBridge rules to route events to additional targets. After\nEventBridge is enabled, S3 on Outposts sends all of the following events to EventBridge.\nEvent type Description Namespace\nOperation The replication of an object within a s3-outposts\nFailedRep replication rule failed. For more informati\nlication on about S3 Replication on Outposts\nfailure reasons, see Using EventBridge to\nManaging your replication API Version 2006-03-01 176",
      "start_idx": 318645,
      "end_idx": 320456,
      "metadata": {
        "num_sentences": 15,
        "num_words": 248,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "replication",
            "Outposts bucket",
            "replication failure",
            "EventBridge rules",
            "s3-outposts namespace",
            "replication status",
            "replication events",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EventBridge",
            "Outposts bucket",
            "s3-outposts namespace",
            "Replication API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Services",
          "secondary_categories": [
            "Event Management",
            "Data Replication"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 on Outposts integrates with EventBridge to manage replication failure notifications and event routing. It also describes the types of events sent to EventBridge and how replication issues can be debugged using these notifications.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How does Amazon S3 on Outposts use EventBridge for replication failure notifications?",
            "What are the event types sent to EventBridge by S3 on Outposts?",
            "How can EventBridge rules be used to route replication events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Services]",
        "tf_idf_keywords": [
          "Amazon EventBridge",
          "replication status",
          "replication events",
          "replication failure",
          "Amazon S3",
          "API Version 2006-03-01",
          "EventBridge",
          "Outposts bucket",
          "replication",
          "EventBridge rules",
          "s3-outposts namespace",
          "Replication API",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_183",
      "text": "Amazon S3 on Outposts User Guide\nEvent type Description Namespace\nview S3 Replication on Outposts failure\nreasons.\nUsing EventBridge to view S3 Replication on Outposts failure reasons\nThe following table lists S3 Replication on Outposts failure reasons. You can configure an\nEventBridge rule to publish and view the failure reason through Amazon Simple Queue Service\n(Amazon SQS), Amazon Simple Notification Service (Amazon SNS), AWS Lambda, or Amazon\nCloudWatch Logs. For more information about the permissions that are required to use these\nresources for EventBridge, see Using resource-based policies for EventBridge.\nReplication failure reason Description\nAssumeRoleNotPermitted S3 on Outposts can't assume the AWS\nIdentity and Access Management (IAM) role\nthat's specified in the replication configura\ntion.\nDstBucketNotFound S3 on Outposts can't find the destination\nbucket that's specified in the replication\nconfiguration.\nDstBucketUnversioned Versioning isn't enabled on the Outposts\ndestination bucket. To replicate objects with\nS3 Replication on Outposts, you must enable\nversioning on the destination bucket.\nDstDelObjNotPermitted S3 on Outposts can't replicate deletes to\nthe destination bucket. The s3-outpos\nts:ReplicateDelete permission\nmight be missing for the destination bucket.\nDstMultipartCompleteNotPermitted S3 on Outposts can't complete a multipart\nupload of objects in the destination bucket.\nThe s3-outposts:ReplicateObject\nManaging your replication API Version 2006-03-01 177",
      "start_idx": 320458,
      "end_idx": 321960,
      "metadata": {
        "num_sentences": 12,
        "num_words": 201,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "EventBridge",
            "IAM role",
            "Replication",
            "Versioning",
            "Amazon SNS",
            "Amazon SQS",
            "AWS Lambda",
            "CloudWatch Logs"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "IAM role",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3",
            "EventBridge",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Lambda",
            "Amazon SQS",
            "CloudWatch Logs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains failure reasons for S3 Replication on Outposts and how to use EventBridge to monitor these failures via AWS services like SNS, SQS, and Lambda.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the common failure reasons for S3 Replication on Outposts?",
            "How can I use EventBridge to monitor replication failures?",
            "What permissions are required for replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "Outposts",
          "Amazon SNS",
          "AWS Lambda",
          "Amazon S3",
          "Versioning",
          "CloudWatch Logs",
          "EventBridge",
          "Replication",
          "Amazon S3 on Outposts",
          "IAM role"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_184",
      "text": "Amazon S3 on Outposts User Guide\nReplication failure reason Description\npermission might be missing for the\ndestination bucket.\nDstMultipartInitNotPermitted S3 on Outposts can't initiate a multipart\nupload of objects to the destination bucket.\nThe s3-outposts:ReplicateObject\npermission might be missing for the\ndestination bucket.\nDstMultipartPartUploadNotPe S3 on Outposts can't upload multipart\nrmitted upload objects in the destination bucket.\nThe s3-outposts:ReplicateObject\npermission might be missing for the\ndestination bucket.\nDstOutOfCapacity S3 on Outposts can't replicate to the\ndestination Outpost because the Outpost is\nout of S3 storage capacity.\nDstPutObjNotPermitted S3 on Outposts can't replicate objects to\nthe destination bucket. The s3-outpos\nts:ReplicateObject permission\nmight be missing for the destination bucket.\nDstPutTaggingNotPermitted S3 on Outposts can't replicate object tags\nto the destination bucket. The s3-outpos\nts:ReplicateObject permission\nmight be missing for the destination bucket.\nDstVersionNotFound S3 on Outposts can't find the required object\nversion in the destination bucket in order to\nreplicate that object version's metadata.\nSrcBucketReplicationConfigMissing S3 on Outposts can't find a replication\nconfiguration for the access point that's\nassociated with the source Outposts bucket.\nManaging your replication API Version 2006-03-01 178",
      "start_idx": 321962,
      "end_idx": 323351,
      "metadata": {
        "num_sentences": 13,
        "num_words": 180,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "Replication",
            "Multipart upload",
            "Permission",
            "Error codes",
            "Outpost capacity",
            "Object tags",
            "Metadata",
            "Replication configuration",
            "API Version 2006-03-01"
          ],
          "entities": [
            "S3 on Outposts",
            "DstMultipartInitNotPermitted",
            "DstOutOfCapacity",
            "s3-outposts:ReplicateObject",
            "SrcBucketReplicationConfigMissing"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines common replication failure reasons and their descriptions for Amazon S3 on Outposts, including missing permissions, storage capacity issues, and replication configuration errors.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What are the common replication failure reasons in Amazon S3 on Outposts?",
            "Which permissions are required for replication in S3 on Outposts?",
            "How can I troubleshoot replication errors related to Outpost capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Error codes",
          "Object tags",
          "S3 on Outposts",
          "s3-outposts:ReplicateObject",
          "Replication configuration",
          "DstOutOfCapacity",
          "Metadata",
          "API Version 2006-03-01",
          "Outpost capacity",
          "DstMultipartInitNotPermitted",
          "SrcBucketReplicationConfigMissing",
          "Permission",
          "Replication",
          "Amazon S3 on Outposts",
          "Multipart upload"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_185",
      "text": "Amazon S3 on Outposts User Guide\nReplication failure reason Description\nSrcGetObjNotPermitted S3 on Outposts can't access the object\nin the source bucket for replication. The\ns3-outposts:GetObjectVersio\nnForReplication permission might be\nmissing for the source bucket.\nSrcGetTaggingNotPermitted S3 on Outposts can't access the object tag\ninformation from the source bucket. The\ns3-outposts:GetObjectVersio\nnTagging permission might be missing for\nthe source bucket.\nSrcHeadObjectNotPermitted S3 on Outposts can't retrieve object\nmetadata from the source bucket. The\ns3-outposts:GetObjectVersio\nnForReplication permission might be\nmissing for the source bucket.\nSrcObjectNotEligible The object isn't eligible for replication. The\nobject or its object tags don't match the\nreplication configuration.\nFor more information about troubleshooting replication, see the following topics:\n\u2022 Creating an IAM role\n\u2022 Troubleshooting replication\nMonitoring EventBridge with CloudWatch\nFor monitoring, Amazon EventBridge integrates with Amazon CloudWatch. EventBridge\nautomatically sends metrics to CloudWatch every minute. These metrics include the number of\nevents that have been matched by a rule and the number of times a target is invoked by a rule.\nWhen a rule runs in EventBridge, all of the targets associated with the rule are invoked. You can\nmonitor your EventBridge behavior through CloudWatch in the following ways.\nManaging your replication API Version 2006-03-01 179",
      "start_idx": 323353,
      "end_idx": 324821,
      "metadata": {
        "num_sentences": 14,
        "num_words": 200,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "Permissions",
              "Monitoring"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "replication",
            "permissions",
            "IAM role",
            "EventBridge",
            "CloudWatch",
            "metrics",
            "s3-outposts:GetObjectVersionForReplication",
            "s3-outposts:GetObjectVersionTagging",
            "troubleshooting"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM role",
            "Amazon EventBridge",
            "Amazon CloudWatch",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon EventBridge",
            "Amazon CloudWatch"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This document provides error descriptions and troubleshooting steps for replication issues in Amazon S3 on Outposts, alongside monitoring guidance using EventBridge and CloudWatch metrics.",
          "intents": [
            "Debug",
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the common replication failure reasons in Amazon S3 on Outposts?",
            "How can I monitor EventBridge metrics using CloudWatch?",
            "What permissions are required for S3 replication on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon EventBridge",
          "troubleshooting",
          "s3-outposts:GetObjectVersionTagging",
          "permissions",
          "API Version 2006-03-01",
          "Amazon CloudWatch",
          "EventBridge",
          "replication",
          "CloudWatch",
          "IAM role",
          "metrics",
          "Amazon S3 on Outposts",
          "s3-outposts:GetObjectVersionForReplication"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_186",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 You can monitor the available EventBridge metrics for your EventBridge rules from the\nCloudWatch dashboard. Then, you can use CloudWatch features, such as CloudWatch alarms,\nto set alarms on certain metrics. If those metrics reach the custom threshold values that you've\nspecified in the alarms, you receive notifications and can take action accordingly.\n\u2022 You can set Amazon CloudWatch Logs as a target of your EventBridge rule. Then, EventBridge\ncreates log streams and CloudWatch Logs stores the text from the events as log entries. For more\ninformation, see EventBridge and CloudWatch Logs.\nFor more information about debugging EventBridge event delivery and archiving events, see the\nfollowing topics:\n\u2022 Event retry policy and using dead-letter queues\n\u2022 Archiving EventBridge events\nSharing S3 on Outposts by using AWS RAM\nAmazon S3 on Outposts supports sharing S3 capacity across multiple accounts within an\norganization by using AWS Resource Access Manager (AWS RAM). With S3 on Outposts sharing, you\ncan allow others to create and manage buckets, endpoints, and access points on your Outpost.\nThis topic demonstrates how to use AWS RAM to share S3 on Outposts and related resources with\nanother AWS account in your AWS organization.\nPrerequisites\n\u2022 The Outpost owner account has an organization configured in AWS Organizations. For more\ninformation, see Creating an organization in the AWS Organizations User Guide.\n\u2022 The organization includes the AWS account that you want to share your S3 on Outposts capacity\nwith. For more information, see Sending invitations to AWS accounts in the AWS Organizations\nUser Guide.\n\u2022 Select one of the following options that you want to share. The second resource (either Subnets\nor Outposts) must be selected so that endpoints are also accessible. Endpoints are a networking\nrequirement in order to access data stored in S3 on Outposts.\nSharing S3 on Outposts API Version 2006-03-01 180",
      "start_idx": 324823,
      "end_idx": 326788,
      "metadata": {
        "num_sentences": 17,
        "num_words": 311,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Monitoring",
              "Configuration",
              "Integration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "CloudWatch",
            "AWS RAM",
            "dead-letter queues",
            "archiving events",
            "AWS Organizations",
            "log streams",
            "endpoints",
            "networking"
          ],
          "entities": [
            "Amazon S3",
            "EventBridge",
            "CloudWatch",
            "AWS RAM",
            "AWS Organizations"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Services",
          "secondary_categories": [
            "Event Management",
            "Resource Sharing"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "EventBridge",
            "CloudWatch"
          ],
          "mentioned_tools": [
            "AWS RAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to monitor EventBridge metrics using CloudWatch and set up alarms, as well as how to share Amazon S3 on Outposts resources across AWS accounts using AWS RAM. It includes prerequisites and configuration steps for sharing resources within an AWS organization.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor EventBridge metrics using CloudWatch?",
            "What are the prerequisites for sharing Amazon S3 on Outposts resources?",
            "How do I configure AWS RAM to share S3 on Outposts across accounts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Services]",
        "tf_idf_keywords": [
          "AWS RAM",
          "dead-letter queues",
          "AWS Organizations",
          "Amazon S3",
          "log streams",
          "EventBridge",
          "endpoints",
          "CloudWatch",
          "networking",
          "archiving events",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_187",
      "text": "Amazon S3 on Outposts User Guide\nOption 1 Option 2\nS3 on Outposts S3 on Outposts\nAllows the user to create buckets on your Allows the user to create buckets on your\nOutposts and access points and to add Outposts and access points and to add\nobjects to those buckets. objects to those buckets.\nSubnets Outposts\nAllows the user to use your virtual private Allows the user to see S3 capacity charts\ncloud (VPC) and the endpoints that are and the AWS Outposts console home page.\nassociated with your subnet. Also allows users to create subnets on shared\nOutposts and create endpoints.\nProcedure\n1. Sign in to the AWS Management Console by using the AWS account that owns the Outpost,\nand then open the AWS RAM console at https://console.aws.amazon.com/ram.\n2. Make sure that you have enabled sharing with AWS Organizations in AWS RAM. For\ninformation, see Enable resource sharing within AWS Organizations in the AWS RAM User\nGuide.\n3. Use either Option 1 or Option 2 in the prerequisites to create a resource share. If you have\nmultiple S3 on Outposts resources, select the Amazon Resource Names (ARNs) of the resources\nthat you want to share. To enable endpoints, share either your subnet or Outpost.\nFor more information about how to create a resource share, see Create a resource share in the\nAWS RAM User Guide.\n4. The AWS account that you shared your resources with should now be able to use S3 on\nOutposts. Depending on the option that you selected in the prerequisites, provide the\nfollowing information to the account user:\nOption 1 Option 2\nThe Outpost ID The Outpost ID\nProcedure API Version 2006-03-01 181",
      "start_idx": 326790,
      "end_idx": 328402,
      "metadata": {
        "num_sentences": 18,
        "num_words": 278,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "buckets",
            "AWS RAM",
            "subnets",
            "endpoints",
            "resource share",
            "VPC",
            "AWS Organizations",
            "ARNs"
          ],
          "entities": [
            "Amazon S3",
            "AWS RAM",
            "Outposts",
            "AWS Organizations",
            "ARNs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Resource Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS RAM",
            "AWS Outposts"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This guide explains how to use Amazon S3 on Outposts, including creating buckets, configuring subnets, and sharing resources using AWS RAM. It also provides step-by-step instructions for enabling resource sharing with AWS Organizations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use Amazon S3 on Outposts?",
            "What are the steps to enable resource sharing in AWS RAM?",
            "What information do I need to share resources across accounts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ARNs",
          "AWS RAM",
          "Outposts",
          "AWS Organizations",
          "Amazon S3",
          "resource share",
          "subnets",
          "VPC",
          "endpoints",
          "buckets",
          "AWS Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_188",
      "text": "Amazon S3 on Outposts User Guide\nOption 1 Option 2\nThe VPC ID\nThe subnet ID\nThe security group ID\nNote\nThe user can confirm that the resources have been shared with them by using the AWS\nRAM console, the AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API. The\nuser can view their existing resource shares by using the get-resource-shares CLI command.\nUsage examples\nAfter you have shared your S3 on Outposts resources with another account, that account can\nmanage buckets and objects on your Outpost. If you shared the Subnets resource, then that\naccount can use the endpoint that you created. The following examples demonstrate how a user\ncan use the AWS CLI to interact with your Outpost after you share these resources.\nExample : Create a bucket\nThe following example creates a bucket named amzn-s3-demo-bucket1 on the Outpost\nop-01ac5d28a6a232904. Before using this command, replace each user input placeholder\nwith the appropriate values for your use case.\naws s3control create-bucket --bucket amzn-s3-demo-bucket1 --outpost-\nid op-01ac5d28a6a232904\nFor more information about this command, see create-bucket in the AWS CLI Reference.\nExample : Create an access point\nThe following example creates an access point on an Outpost by using the example parameters in\nthe following table. Before using this command, replace these user input placeholder values\nand the AWS Region code with the appropriate values for your use case.\nUsage examples API Version 2006-03-01 182",
      "start_idx": 328404,
      "end_idx": 329885,
      "metadata": {
        "num_sentences": 11,
        "num_words": 236,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC ID",
            "subnet ID",
            "security group ID",
            "AWS CLI",
            "create-bucket",
            "access point",
            "resource shares",
            "AWS RAM"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS RAM",
            "API Version 2006-03-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS RAM",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to share and manage Amazon S3 on Outposts resources, including creating buckets and access points using the AWS CLI. It provides procedural examples and references for users working with shared resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a bucket on an Outpost using AWS CLI?",
            "What steps are required to share S3 on Outposts resources with another account?",
            "How can I confirm that resources have been shared using the AWS RAM console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS RAM",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "API Version 2006-03-01",
          "resource shares",
          "security group ID",
          "subnet ID",
          "VPC ID",
          "access point",
          "create-bucket"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_190",
      "text": "Amazon S3 on Outposts User Guide\nFor more information about this command, see put-object in the AWS CLI Reference.\nNote\nIf this operation results in a Resource not found error or is unresponsive, your VPC might\nnot have a shared endpoint.\nTo check whether there is a shared endpoint, use the list-shared-endpoints AWS CLI\ncommand. If there is no shared endpoint, work with the Outpost owner to create one.\nFor more information, see ListSharedEndpoints in the Amazon Simple Storage Service API\nReference.\nExample : Create an endpoint\nThe following example creates an endpoint on a shared Outpost. Before using this command,\nreplace the user input placeholder values for the Outpost ID, subnet ID, and security group\nID with the appropriate values for your use case.\nNote\nThe user can perform this operation only if the resource share includes the Outposts\nresource.\naws s3outposts create-endpoint --outposts-id op-01ac5d28a6a232904 --subnet-id XXXXXX --\nsecurity-group-id XXXXXXX\nFor more information about this command, see create-endpoint in the AWS CLI Reference.\nOther AWS services that use S3 on Outposts\nOther AWS services that run local to your AWS Outposts can also use your Amazon S3 on Outposts\ncapacity. In Amazon CloudWatch the S3Outposts namespace shows detailed metrics for buckets\nwithin S3 on Outposts, but these metrics don't include usage for other AWS services. To manage\nyour S3 on Outposts capacity that is consumed by other AWS services, see the information in the\nfollowing table.\nOther services API Version 2006-03-01 184",
      "start_idx": 331224,
      "end_idx": 332768,
      "metadata": {
        "num_sentences": 13,
        "num_words": 243,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Troubleshooting",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "create-endpoint",
            "shared endpoint",
            "Outpost ID",
            "subnet ID",
            "security group ID",
            "Resource not found",
            "list-shared-endpoints",
            "S3Outposts namespace"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "Outposts resource",
            "Amazon CloudWatch",
            "S3Outposts namespace"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "Amazon CloudWatch",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create an endpoint for Amazon S3 on Outposts using the AWS CLI, troubleshoot shared endpoint issues, and manage S3 capacity consumed by other AWS services.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create an endpoint for Amazon S3 on Outposts?",
            "What should I do if I encounter a 'Resource not found' error in S3 on Outposts?",
            "How can I monitor S3 on Outposts capacity usage by other AWS services?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Outpost ID",
          "Outposts resource",
          "Resource not found",
          "list-shared-endpoints",
          "Amazon CloudWatch",
          "security group ID",
          "AWS Outposts",
          "shared endpoint",
          "create-endpoint",
          "subnet ID",
          "S3Outposts namespace",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_192",
      "text": "Amazon S3 on Outposts User Guide\nMonitoring S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nFor more information about monitoring your Amazon S3 on Outposts storage capacity, see the\nfollowing topics.\nTopics\n\u2022 Managing S3 on Outposts capacity with Amazon CloudWatch metrics\n\u2022 Receiving S3 on Outposts event notifications by using Amazon CloudWatch Events\n\u2022 Monitoring S3 on Outposts with AWS CloudTrail logs\nManaging S3 on Outposts capacity with Amazon CloudWatch\nmetrics\nTo help manage the fixed S3 capacity on your Outpost, we recommend that you create CloudWatch\nalerts that tell you when your storage utilization exceeds a certain threshold. For more information\nabout the CloudWatch metrics for S3 on Outposts, see CloudWatch metrics. If there is not enough\nspace to store an object on your Outpost, the API returns an insufficient capacity exemption\n(ICE). To free up space, you can create CloudWatch alarms that trigger explicit data deletion, or\nuse a lifecycle expiration policy to expire objects. To save data before deletion, you can use AWS\nDataSync to copy data from your Amazon S3 on Outposts bucket to an S3 bucket in an AWS\nRegion. For more information about using DataSync, see Getting Started with AWS DataSync in the\nAWS DataSync User Guide.\nCloudWatch metrics API Version 2006-03-01 186",
      "start_idx": 333315,
      "end_idx": 335466,
      "metadata": {
        "num_sentences": 14,
        "num_words": 351,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Monitoring",
              "Capacity Management"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "CloudWatch metrics",
            "DataSync",
            "S3 buckets",
            "API",
            "access point",
            "encryption",
            "lifecycle expiration policy",
            "event notifications"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Outposts",
            "Amazon CloudWatch",
            "AWS DataSync",
            "AWS CloudTrail"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Monitoring",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon CloudWatch",
            "AWS DataSync"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to monitor and manage Amazon S3 on Outposts storage capacity using CloudWatch metrics, event notifications, and lifecycle policies. It also describes tools like AWS DataSync for data transfer and highlights API behaviors when storage is full.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor storage capacity for Amazon S3 on Outposts?",
            "What happens if there is insufficient storage on my Outpost?",
            "How can I transfer data from S3 on Outposts to an AWS Region bucket?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Monitoring]",
        "tf_idf_keywords": [
          "event notifications",
          "Amazon S3",
          "API",
          "CloudWatch metrics",
          "lifecycle expiration policy",
          "Amazon CloudWatch",
          "AWS DataSync",
          "AWS CloudTrail",
          "encryption",
          "AWS Outposts",
          "S3 buckets",
          "access point",
          "Amazon S3 on Outposts",
          "DataSync"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_193",
      "text": "Amazon S3 on Outposts User Guide\nCloudWatch metrics\nThe S3Outposts namespace includes the following metrics for Amazon S3 on Outposts buckets.\nYou can monitor the total number of S3 on Outposts bytes provisioned, the total free bytes\navailable for objects, and the total size of all objects for a given bucket. Bucket or account-related\nmetrics exist for all direct S3 usage. Indirect S3 usage, such as storing Amazon Elastic Block Store\nlocal snapshots or Amazon Relational Database Service backups on an Outpost, consumes S3\ncapacity, but is not included in bucket or account-related metrics. For more information about\nAmazon EBS local snapshots, see Amazon EBS local snapshots on Outposts. To see your Amazon\nEBS cost report, visit https://console.aws.amazon.com/billing/.\nNote\nS3 on Outposts supports only the following metrics, and no other Amazon S3 metrics.\nBecause S3 on Outposts has a fixed capacity limit, we recommend creating CloudWatch\nalarms to notify you when your storage utilization exceeds a certain threshold.\nMetric Description Time Units Type\nPeriod\nOutpostToT he total provisioned capacity 5 Bytes S3 on Outposts\ntalBytesin bytes for an Outpost. minutes\nOutpostFrT he count of free bytes 5 Bytes S3 on Outposts\neeBytes available on an Outpost to minutes\nstore customer data.\nBucketUseT he total size of all objects 5 Bytes S3 on Outposts. Direct S3\ndBytes for the given bucket. minutes usage only.\nAccountUsT he total size of all objects 5 Bytes S3 on Outposts. Direct S3\nedBytes for the specified Outposts minutes usage only.\naccount.\nBytesPendT he total number of bytes 5 Bytes Optional. For S3 Replication\ningReplico f objects that are pending minutes on Outposts.\nation replication for a given\nCloudWatch metrics API Version 2006-03-01 187",
      "start_idx": 335468,
      "end_idx": 337234,
      "metadata": {
        "num_sentences": 19,
        "num_words": 278,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics Documentation",
              "Best Practices",
              "Usage Guidelines"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "CloudWatch metrics",
            "OutpostTotalBytes",
            "OutpostFreeBytes",
            "BucketUsedBytes",
            "AccountUsedBytes",
            "BytesPendingReplication",
            "storage utilization",
            "fixed capacity limit",
            "direct S3 usage"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "CloudWatch",
            "Amazon EBS",
            "Amazon RDS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Monitoring",
          "secondary_categories": [
            "Cloud Metrics",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EBS",
            "Amazon RDS"
          ],
          "mentioned_tools": [
            "CloudWatch"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the CloudWatch metrics available for monitoring Amazon S3 on Outposts, including storage utilization and object size metrics, and provides best practices for managing fixed capacity limits.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What metrics are supported by Amazon S3 on Outposts?",
            "How can I monitor storage utilization for S3 on Outposts?",
            "What is the difference between direct and indirect S3 usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Monitoring]",
        "tf_idf_keywords": [
          "fixed capacity limit",
          "Outposts",
          "OutpostTotalBytes",
          "Amazon S3",
          "CloudWatch metrics",
          "AccountUsedBytes",
          "BytesPendingReplication",
          "BucketUsedBytes",
          "CloudWatch",
          "Amazon EBS",
          "direct S3 usage",
          "Amazon RDS",
          "OutpostFreeBytes",
          "storage utilization",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_194",
      "text": "Amazon S3 on Outposts User Guide\nMetric Description Time Units Type\nPeriod\nreplication rule. For more\ninformation about how to\nenable replication metrics,\nsee Creating replication rules\nbetween Outposts.\nOperationT he total number of 5 Counts Optional. For S3 Replication\nsPendingRo perations that are pending minutes on Outposts.\neplicatiore plication for a given\nn replication rule. For more\ninformation about how to\nenable replication metrics,\nsee Creating replication rules\nbetween Outposts.\nReplicatiT he current number of 5 Seconds Optional. For S3 Replication\nonLatencyseconds delay by which the minutes on Outposts.\nreplication destination bucket\nis behind the source bucket\nfor a given replication rule.\nFor more information about\nhow to enable replication\nmetrics, see Creating replicati\non rules between Outposts.\nReceiving S3 on Outposts event notifications by using Amazon\nCloudWatch Events\nYou can use CloudWatch Events to create a rule for any Amazon S3 on Outposts API event. When\nyou create a rule, you can choose to get notified through all supported CloudWatch targets,\nincluding Amazon Simple Queue Service (Amazon SQS), Amazon Simple Notification Service\n(Amazon SNS), and AWS Lambda. For more information, see the list of AWS services that can be\ntargets for CloudWatch Events in the Amazon CloudWatch Events User Guide. To choose a target\nAmazon CloudWatch Events API Version 2006-03-01 188",
      "start_idx": 337236,
      "end_idx": 338649,
      "metadata": {
        "num_sentences": 14,
        "num_words": 213,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Metrics Explanation",
              "Event Notification"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "replication metrics",
            "CloudWatch Events",
            "replication rule",
            "replication operations",
            "replication latency",
            "Amazon SQS",
            "Amazon SNS",
            "AWS Lambda"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "CloudWatch Events",
            "Amazon SQS",
            "AWS Lambda"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Storage and Replication",
          "secondary_categories": [
            "Monitoring and Notifications",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "CloudWatch Events",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Lambda",
            "Amazon SQS"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to monitor replication metrics for Amazon S3 on Outposts and configure event notifications using CloudWatch Events. It also outlines related services and tools for notification and monitoring purposes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I enable replication metrics for Amazon S3 on Outposts?",
            "What is the purpose of replication latency in S3 replication?",
            "How can I use CloudWatch Events to receive S3 on Outposts notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Storage and Replication]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "Outposts",
          "Amazon SNS",
          "CloudWatch Events",
          "replication rule",
          "Amazon S3",
          "replication operations",
          "replication metrics",
          "replication latency",
          "AWS Lambda"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_195",
      "text": "Amazon S3 on Outposts User Guide\nservice to work with your S3 on Outposts, see Creating a CloudWatch Events rule that triggers on\nan AWS API call using AWS CloudTrail in the Amazon CloudWatch Events User Guide.\nNote\nFor S3 on Outposts object operations, AWS API call events sent by CloudTrail will match\nyour rules only if you have trails (optionally with event selectors) configured to receive\nthose events. For more information, see Working with CloudTrail log files in the AWS\nCloudTrail User Guide.\nExample\nThe following is a sample rule for the DeleteObject operation. To use this sample rule, replace\namzn-s3-demo-bucket1 with the name of your S3 on Outposts bucket.\n{\n\"source\": [\n\"aws.s3-outposts\"\n],\n\"detail-type\": [\n\"AWS API call through CloudTrail\"\n],\n\"detail\": {\n\"eventSource\": [\n\"s3-outposts.amazonaws.com\"\n],\n\"eventName\": [\n\"DeleteObject\"\n],\n\"requestParameters\": {\n\"bucketName\": [\n\"amzn-s3-demo-bucket1\"\n]\n}\n}\n}\nAmazon CloudWatch Events API Version 2006-03-01 189",
      "start_idx": 338651,
      "end_idx": 339627,
      "metadata": {
        "num_sentences": 6,
        "num_words": 150,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "CloudWatch Events",
            "AWS API call",
            "AWS CloudTrail",
            "DeleteObject",
            "event selectors",
            "trail configuration",
            "bucketName",
            "eventSource",
            "eventName"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "CloudWatch Events",
            "DeleteObject operation",
            "amzn-s3-demo-bucket1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Monitoring",
            "Event Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "Amazon CloudWatch Events"
          ],
          "mentioned_tools": [
            "CloudWatch Events",
            "CloudTrail"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of creating a CloudWatch Event rule to monitor DeleteObject operations in Amazon S3 on Outposts using CloudTrail logs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a CloudWatch Event rule for S3 on Outposts?",
            "What is an example of a DeleteObject operation rule?",
            "What configurations are required for CloudTrail to track S3 on Outposts events?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "amzn-s3-demo-bucket1",
          "AWS API call",
          "CloudWatch Events",
          "bucketName",
          "eventSource",
          "DeleteObject",
          "trail configuration",
          "Amazon CloudWatch Events",
          "event selectors",
          "DeleteObject operation",
          "AWS CloudTrail",
          "Amazon S3 on Outposts",
          "eventName"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_196",
      "text": "Amazon S3 on Outposts User Guide\nMonitoring S3 on Outposts with AWS CloudTrail logs\nAmazon S3 on Outposts is integrated with AWS CloudTrail, a service that provides a record of\nactions taken by a user, role, or an AWS service in S3 on Outposts. You can use AWS CloudTrail to\nget information about S3 on Outposts bucket-level and object-level requests to audit and log your\nS3 on Outposts event activity.\nTo enable CloudTrail data events for all your Outposts buckets or for a list of specific Outposts\nbuckets, you must create a trail manually in CloudTrail. For more information about CloudTrail log\nfile entries, see S3 on Outposts log file entries.\nFor a complete list of CloudTrail data events for S3 on Outposts, see Amazon S3 data events in\nCloudTrail in the Amazon S3 User Guide.\nNote\n\u2022 It's a best practice to create a lifecycle policy for your AWS CloudTrail data event\nOutposts bucket. Configure the lifecycle policy to periodically remove log files after\nthe period of time that you need to audit them. Doing so reduces the amount of data\nthat Amazon Athena analyzes for each query. For more information, see Creating and\nmanaging a lifecycle configuration for your Amazon S3 on Outposts bucket.\n\u2022 For examples of how to query CloudTrail logs, see the AWS Big Data Blog post Analyze\nSecurity, Compliance, and Operational Activity Using AWS CloudTrail and Amazon\nAthena.\nEnable CloudTrail logging for objects in an S3 on Outposts bucket\nYou can use the Amazon S3 console to configure an AWS CloudTrail trail to log data events for\nobjects in an Amazon S3 on Outposts bucket. CloudTrail supports logging S3 on Outposts object-\nlevel API operations such as GetObject, DeleteObject, and PutObject. These events are called\ndata events.\nBy default, CloudTrail trails don't log data events. However, you can configure trails to log data\nevents for S3 on Outposts buckets that you specify or to log data events for all the S3 on Outposts\nbuckets in your AWS account.\nCloudTrail logs API Version 2006-03-01 190",
      "start_idx": 339629,
      "end_idx": 341641,
      "metadata": {
        "num_sentences": 16,
        "num_words": 340,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Best Practice"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "data events",
            "lifecycle policy",
            "log files",
            "audit",
            "bucket-level requests",
            "object-level requests",
            "API operations",
            "Amazon Athena"
          ],
          "entities": [
            "Amazon S3",
            "AWS CloudTrail",
            "Amazon Athena",
            "Outposts bucket",
            "AWS Big Data Blog"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Monitoring and Logging",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS CloudTrail",
            "Amazon Athena"
          ],
          "mentioned_tools": [
            "Lifecycle Policy",
            "CloudTrail Trails"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to monitor Amazon S3 on Outposts using AWS CloudTrail logs, configure data events for Outposts buckets, and implement lifecycle policies to manage log files effectively.",
          "intents": [
            "How-To",
            "Reference",
            "Best Practice"
          ],
          "potential_questions": [
            "How can I enable CloudTrail logging for S3 on Outposts buckets?",
            "What are best practices for managing CloudTrail log files in S3 on Outposts?",
            "Which API operations are supported for logging data events in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "data events",
          "Amazon Athena",
          "object-level requests",
          "Amazon S3",
          "API operations",
          "AWS Big Data Blog",
          "log files",
          "lifecycle policy",
          "Outposts bucket",
          "bucket-level requests",
          "AWS CloudTrail",
          "Amazon S3 on Outposts",
          "audit"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_197",
      "text": "Amazon S3 on Outposts User Guide\nCloudTrail does not populate data events in the CloudTrail event history. Additionally, not all\nS3 on Outposts bucket\u2013level API operations are populated in the CloudTrail event history. For\nmore information about how to query CloudTrail logs, see Using Amazon CloudWatch Logs filter\npatterns and Amazon Athena to query CloudTrail logs on the AWS Knowledge Center.\nTo configure a trail to log data events for an S3 on Outposts bucket, you can use either the AWS\nCloudTrail console or the Amazon S3 console. If you are configuring a trail to log data events for\nall the S3 on Outposts buckets in your AWS account, it's easier to use the CloudTrail console. For\ninformation about using the CloudTrail console to configure a trail to log S3 on Outposts data\nevents, see Data events in the AWS CloudTrail User Guide.\nImportant\nAdditional charges apply for data events. For more information, see AWS CloudTrail pricing.\nThe following procedure shows how to use the Amazon S3 console to configure a CloudTrail trail to\nlog data events for an S3 on Outposts bucket.\nNote\nThe AWS account that creates the bucket owns it and is the only one that can configure S3\non Outposts data events to be sent to AWS CloudTrail.\nTo enable CloudTrail data events logging for objects in an S3 on Outposts bucket\n1. Sign in to the AWS Management Console and open the Amazon S3 console at https://\nconsole.aws.amazon.com/s3/.\n2. In the left navigation pane, choose Outposts buckets.\n3. Choose the name of the Outposts bucket whose data events you want to log by using\nCloudTrail.\n4. Choose Properties.\n5. In the AWS CloudTrail data events section, choose Configure in CloudTrail.\nThe AWS CloudTrail console opens.\nEnabling CloudTrail logging for S3 on Outposts objects API Version 2006-03-01 191",
      "start_idx": 341643,
      "end_idx": 343445,
      "metadata": {
        "num_sentences": 22,
        "num_words": 302,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 on Outposts",
            "data events",
            "AWS account",
            "Amazon S3 console",
            "AWS CloudTrail pricing",
            "bucket-level API operations",
            "CloudWatch Logs filter patterns",
            "Amazon Athena",
            "Outposts buckets"
          ],
          "entities": [
            "Amazon S3",
            "AWS CloudTrail",
            "AWS Management Console",
            "Amazon Athena",
            "CloudWatch Logs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure Monitoring",
          "secondary_categories": [
            "Cloud Storage",
            "Logging and Auditing"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS CloudTrail",
            "Amazon Athena"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "CloudWatch Logs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure AWS CloudTrail to log data events for S3 on Outposts buckets using either the CloudTrail console or the Amazon S3 console. It includes step-by-step instructions for enabling logging and highlights additional charges for data events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure CloudTrail to log data events for S3 on Outposts buckets?",
            "What are the steps to enable CloudTrail logging using the Amazon S3 console?",
            "Are there additional charges for logging data events in CloudTrail?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure Monitoring]",
        "tf_idf_keywords": [
          "data events",
          "Amazon Athena",
          "Outposts buckets",
          "CloudWatch Logs filter patterns",
          "Amazon S3",
          "AWS Management Console",
          "Amazon S3 console",
          "CloudWatch Logs",
          "CloudTrail",
          "AWS CloudTrail",
          "AWS account",
          "bucket-level API operations",
          "S3 on Outposts",
          "AWS CloudTrail pricing"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_198",
      "text": "Amazon S3 on Outposts User Guide\nYou can create a new CloudTrail trail or reuse an existing trail and configure S3 on Outposts\ndata events to be logged in your trail.\n6. On the CloudTrail console Dashboard page, choose Create trail.\n7. On the Step 1 Choose trail attributes page, provide a name for the trail, choose an S3 bucket\nto store trail logs, specify any other settings that you want, and then choose Next.\n8. On the Step 2 Choose log events page, under Event type, choose Data events.\nFor Data event type, choose S3 Outposts. Choose Next.\nNote\n\u2022 When you create a trail and configure data event logging for S3 on Outposts, you\nmust specify the data event type correctly.\n\u2022 If you use the CloudTrail console, choose S3 Outposts for Data event type. For\ninformation about how to create trails in the CloudTrail console, see Creating and\nupdating a trail with the console in the AWS CloudTrail User Guide. For information\nabout how to configure S3 on Outposts data event logging in the CloudTrail\nconsole, see Logging data events for Amazon S3 Objects in the AWS CloudTrail\nUser Guide.\n\u2022 If you use the AWS Command Line Interface (AWS CLI) or the AWS SDKs, set the\nresources.type field to AWS::S3Outposts::Object. For more information\nabout how to log S3 on Outposts data events with the AWS CLI, see Log S3 on\nOutposts events in the AWS CloudTrail User Guide.\n\u2022 If you use the CloudTrail console or the Amazon S3 console to configure a trail to\nlog data events for an S3 on Outposts bucket, the Amazon S3 console shows that\nobject-level logging is enabled for the bucket.\n9. On the Step 3 Review and create page, review the trail attributes and the log events that you\nconfigured. Then, choose Create trail.\nTo disable CloudTrail data events logging for objects in an S3 on Outposts bucket\n1. Sign in to the AWS Management Console and open the CloudTrail console at https://\nconsole.aws.amazon.com/cloudtrail/.\n2. In the left navigation pane, choose Trails.\nEnabling CloudTrail logging for S3 on Outposts objects API Version 2006-03-01 192",
      "start_idx": 343447,
      "end_idx": 345493,
      "metadata": {
        "num_sentences": 24,
        "num_words": 355,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step Guide",
              "Configuration Instructions"
            ]
          },
          "keywords": [
            "CloudTrail",
            "S3 on Outposts",
            "data events",
            "trail",
            "AWS CLI",
            "AWS SDKs",
            "logging",
            "S3 bucket",
            "object-level logging",
            "resources.type"
          ],
          "entities": [
            "Amazon S3",
            "CloudTrail",
            "AWS CLI",
            "AWS SDKs",
            "S3 Outposts"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS CloudTrail Configuration",
          "secondary_categories": [
            "Amazon S3",
            "AWS Outposts"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS CloudTrail",
            "AWS Outposts"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for enabling and configuring CloudTrail logging for Amazon S3 on Outposts data events, including creating trails, specifying event types, and reviewing settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable CloudTrail logging for S3 on Outposts?",
            "What settings are required for logging S3 on Outposts data events?",
            "How can I disable CloudTrail data event logging for S3 on Outposts objects?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS CloudTrail Configuration]",
        "tf_idf_keywords": [
          "data events",
          "AWS SDKs",
          "logging",
          "AWS CLI",
          "object-level logging",
          "resources.type",
          "Amazon S3",
          "S3 Outposts",
          "trail",
          "S3 bucket",
          "CloudTrail",
          "AWS Outposts",
          "AWS CloudTrail",
          "S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_199",
      "text": "Amazon S3 on Outposts User Guide\n3. Choose the name of the trail that you created to log events for your S3 on Outposts bucket.\n4. On the details page for your trail, choose Stop logging in the upper-right corner.\n5. In the dialog box that appears, choose Stop logging.\nAmazon S3 on Outposts AWS CloudTrail log file entries\nAmazon S3 on Outposts management events are available via AWS CloudTrail. In addition, you can\noptionally enable logging for data events in AWS CloudTrail.\nA trail is a configuration that enables delivery of events as log files to an S3 bucket in a Region that\nyou specify. CloudTrail logs for your Outposts buckets include a new field, edgeDeviceDetails,\nwhich identifies the Outpost where the specified bucket is located.\nAdditional log fields include the requested action, the date and time of the action, and the request\nparameters. CloudTrail log files are not an ordered stack trace of the public API calls, so they don't\nappear in any specific order.\nThe following example shows a CloudTrail log entry that demonstrates a PutObject action on s3-\noutposts.\n{\n\"eventVersion\": \"1.08\",\n\"userIdentity\": {\n\"type\": \"IAMUser\",\n\"principalId\": \"111122223333\",\n\"arn\": \"arn:aws:iam::111122223333:user/yourUserName\",\n\"accountId\": \"222222222222\",\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n\"userName\": \"yourUserName\"\n},\n\"eventTime\": \"2020-11-30T15:44:33Z\",\n\"eventSource\": \"s3-outposts.amazonaws.com\",\n\"eventName\": \"PutObject\",\n\"awsRegion\": \"us-east-1\",\n\"sourceIPAddress\": \"26.29.66.20\",\n\"userAgent\": \"aws-cli/1.18.39 Python/3.4.10 Darwin/18.7.0 botocore/1.15.39\",\n\"requestParameters\": {\n\"expires\": \"Wed, 21 Oct 2020 07:28:00 GMT\",\n\"Content-Language\": \"english\",\n\"x-amz-server-side-encryption-customer-key-MD5\": \"wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY\",\nAmazon S3 on Outposts AWS CloudTrail log file entries API Version 2006-03-01 193",
      "start_idx": 345495,
      "end_idx": 347344,
      "metadata": {
        "num_sentences": 14,
        "num_words": 243,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "log events",
            "trail configuration",
            "edgeDeviceDetails",
            "PutObject",
            "log file entries",
            "request parameters",
            "management events",
            "data events"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail",
            "edgeDeviceDetails",
            "PutObject",
            "IAMUser"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Logging",
          "secondary_categories": [
            "AWS Services",
            "Event Monitoring"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines how to configure and manage AWS CloudTrail logging for Amazon S3 on Outposts buckets, including details about log fields and an example of a CloudTrail log entry for a PutObject action.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop logging for a trail in AWS CloudTrail?",
            "What fields are included in CloudTrail logs for S3 on Outposts?",
            "What does a CloudTrail log entry for a PutObject action look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Logging]",
        "tf_idf_keywords": [
          "data events",
          "PutObject",
          "request parameters",
          "edgeDeviceDetails",
          "trail configuration",
          "log events",
          "IAMUser",
          "AWS CloudTrail",
          "Amazon S3 on Outposts",
          "management events",
          "log file entries"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_202",
      "text": "Amazon S3 on Outposts User Guide\nDeveloping with Amazon S3 on Outposts\nWith Amazon S3 on Outposts, you can create S3 buckets on your AWS Outposts and easily\nstore and retrieve objects on premises for applications that require local data access, local\ndata processing, and data residency. S3 on Outposts provides a new storage class, S3 Outposts\n(OUTPOSTS), which uses the Amazon S3 APIs, and is designed to store data durably and\nredundantly across multiple devices and servers on your AWS Outposts. You communicate with\nyour Outpost bucket by using an access point and endpoint connection over a virtual private\ncloud (VPC). You can use the same APIs and features on Outpost buckets as you do on Amazon S3\nbuckets, including access policies, encryption, and tagging. You can use S3 on Outposts through\nthe AWS Management Console, AWS Command Line Interface (AWS CLI), AWS SDKs, or REST API.\nFor more information, see What is Amazon S3 on Outposts?\nThe following topics provide information about developing with S3 on Outposts.\nTopics\n\u2022 Amazon S3 on Outposts API operations\n\u2022 Configure the S3 control client for S3 on Outposts by using the SDK for Java\n\u2022 Making requests to S3 on Outposts over IPv6\nAmazon S3 on Outposts API operations\nThis topic lists the Amazon S3, Amazon S3 Control, and Amazon S3 on Outposts API operations\nthat you can use with Amazon S3 on Outposts.\nTopics\n\u2022 Amazon S3 API operations for managing objects\n\u2022 Amazon S3 Control API operations for managing buckets\n\u2022 S3 on Outposts API operations for managing Outposts\nAmazon S3 API operations for managing objects\nS3 on Outposts is designed to use the same object API operations as Amazon S3. You must use\naccess points to access any object in an Outpost bucket. When you use an object API operation with\nS3 on Outposts, you provide either the Outposts access point Amazon Resource Name (ARN) or the\nS3 on Outposts APIs API Version 2006-03-01 196",
      "start_idx": 349295,
      "end_idx": 351211,
      "metadata": {
        "num_sentences": 11,
        "num_words": 327,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "S3 buckets",
            "local data access",
            "storage class",
            "access point",
            "endpoint connection",
            "AWS Management Console",
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ],
          "entities": [
            "Amazon S3",
            "AWS Outposts",
            "S3 Outposts (OUTPOSTS)",
            "Amazon Resource Name (ARN)",
            "SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Residency"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS Outposts",
            "Amazon VPC"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "Amazon S3 on Outposts allows users to create S3 buckets on AWS Outposts for local data storage and processing, leveraging the same APIs and features as Amazon S3 while ensuring data residency and durability.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure S3 on Outposts using the SDK for Java?",
            "What API operations are available for S3 on Outposts?",
            "Can I use S3 on Outposts with IPv6?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "AWS CLI",
          "Amazon VPC",
          "storage class",
          "endpoint connection",
          "Amazon S3",
          "AWS Management Console",
          "SDK for Java",
          "REST API",
          "S3 Outposts (OUTPOSTS)",
          "local data access",
          "AWS Outposts",
          "S3 buckets",
          "access point",
          "Amazon S3 on Outposts"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_203",
      "text": "Amazon S3 on Outposts User Guide\naccess point alias. For more information about access point aliases, see Using a bucket-style alias\nfor your S3 on Outposts bucket access point.\nAmazon S3 on Outposts supports the following Amazon S3 API operations:\n\u2022 AbortMultipartUpload\n\u2022 CompleteMultipartUpload\n\u2022 CopyObject\n\u2022 CreateMultipartUpload\n\u2022 DeleteObject\n\u2022 DeleteObjects\n\u2022 DeleteObjectTagging\n\u2022 GetObject\n\u2022 GetObjectTagging\n\u2022 HeadBucket\n\u2022 HeadObject\n\u2022 ListMultipartUploads\n\u2022 ListObjects\n\u2022 ListObjectsV2\n\u2022 ListObjectVersions\n\u2022 ListParts\n\u2022 PutObject\n\u2022 PutObjectTagging\n\u2022 UploadPart\n\u2022 UploadPartCopy\nAmazon S3 Control API operations for managing buckets\nS3 on Outposts supports the following Amazon S3 Control API operations for working with\nbuckets.\n\u2022 CreateAccessPoint\n\u2022 CreateBucket\nAmazon S3 Control API operations for managing buckets API Version 2006-03-01 197",
      "start_idx": 351213,
      "end_idx": 352071,
      "metadata": {
        "num_sentences": 4,
        "num_words": 119,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Operations",
              "Service Capabilities"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "access point",
            "API operations",
            "buckets",
            "multipart upload",
            "object tagging",
            "S3 Control",
            "bucket-style alias",
            "UploadPart"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "S3 Control API",
            "access point alias",
            "API Version 2006-03-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Reference",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 on Outposts",
            "S3 Control API"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document lists the supported Amazon S3 and S3 Control API operations for Amazon S3 on Outposts, including managing buckets and performing object-related tasks.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What API operations are supported by Amazon S3 on Outposts?",
            "How can I manage buckets with the S3 Control API?",
            "What is an access point alias in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Amazon S3",
          "API operations",
          "multipart upload",
          "API Version 2006-03-01",
          "UploadPart",
          "S3 Control API",
          "object tagging",
          "access point alias",
          "buckets",
          "access point",
          "Amazon S3 on Outposts",
          "S3 Control",
          "bucket-style alias"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_205",
      "text": "Amazon S3 on Outposts User Guide\n\u2022 ListOutpostsWithS3\n\u2022 ListSharedEndpoints\nConfigure the S3 control client for S3 on Outposts by using the\nSDK for Java\nThe following example configures the Amazon S3 control client for Amazon S3 on Outposts by\nusing the AWS SDK for Java. To use this example, replace each user input placeholder with\nyour own information.\nimport com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport com.amazonaws.services.s3control.AWSS3Control;\nimport com.amazonaws.services.s3control.AWSS3ControlClient;\npublic AWSS3Control createS3ControlClient() {\nString accessKey = AWSAccessKey;\nString secretKey = SecretAccessKey;\nBasicAWSCredentials awsCreds = new BasicAWSCredentials(accessKey, secretKey);\nreturn AWSS3ControlClient.builder().enableUseArnRegion()\n.withCredentials(new AWSStaticCredentialsProvider(awsCreds))\n.build();\n}\nMaking requests to S3 on Outposts over IPv6\nAmazon S3 on Outposts and S3 on Outposts dual-stack endpoints support requests to S3 on\nOutposts buckets using either the IPv6 or IPv4 protocol. With IPv6 support for S3 on Outposts, you\ncan access and operate your buckets and control plane resources through S3 on Outposts APIs over\nIPv6 networks.\nNote\nS3 on Outposts object actions (such as PutObject or GetObject) aren\u2019t supported over\nIPv6 networks.\nConfiguring S3 control client API Version 2006-03-01 199",
      "start_idx": 352902,
      "end_idx": 354302,
      "metadata": {
        "num_sentences": 6,
        "num_words": 173,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "IPv6",
            "S3 control client",
            "AWS credentials",
            "dual-stack endpoints",
            "API version 2006-03-01",
            "PutObject",
            "GetObject"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java",
            "IPv6",
            "S3 control client"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3",
            "S3 on Outposts"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure the Amazon S3 control client for use with S3 on Outposts using the AWS SDK for Java. It also discusses IPv6 support for S3 on Outposts and highlights limitations for object actions over IPv6 networks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the S3 control client for S3 on Outposts using Java?",
            "Does S3 on Outposts support IPv6 for bucket operations?",
            "What are the limitations of IPv6 support for S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "API version 2006-03-01",
          "PutObject",
          "Amazon S3",
          "dual-stack endpoints",
          "S3 on Outposts",
          "AWS credentials",
          "S3 control client",
          "AWS SDK for Java",
          "GetObject",
          "IPv6"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_206",
      "text": "Amazon S3 on Outposts User Guide\nThere are no additional charges for accessing S3 on Outposts over IPv6 networks. For more\ninformation about S3 on Outposts, see S3 on Outposts pricing.\nTopics\n\u2022 Getting started with IPv6\n\u2022 Using dual-stack endpoints to make requests over an IPv6 network\n\u2022 Using IPv6 addresses in IAM policies\n\u2022 Testing IP address compatibility\n\u2022 Using IPv6 with AWS PrivateLink\n\u2022 Using S3 on Outposts dual-stack endpoints\nGetting started with IPv6\nTo make a request to an S3 on Outposts bucket over IPv6, you must use a dual-stack endpoint. The\nnext section describes how to make requests over IPv6 by using dual-stack endpoints.\nThe following are important considerations before trying to access an S3 on Outposts bucket over\nIPv6:\n\u2022 The client and the network accessing the bucket must be enabled to use IPv6.\n\u2022 Both virtual hosted-style and path style requests are supported for IPv6 access. For more\ninformation, see Using S3 on Outposts dual-stack endpoints.\n\u2022 If you use source IP address filtering in your AWS Identity and Access Management (IAM) user or\nS3 on Outposts bucket policies, you must update the policies to include IPv6 address ranges.\nNote\nThis requirement only applies to S3 on Outposts bucket operations and control plane\nresources across IPv6 networks. Amazon S3 on Outposts object actions aren\u2019t supported\nacross IPv6 networks.\n\u2022 When using IPv6, server access log files output IP addresses in an IPv6 format. You must update\nexisting tools, scripts, and software that you use to parse S3 on Outposts log files, so that they\ncan parse the IPv6 formatted remote IP addresses. The updated tools, scripts, and software will\nthen correctly parse the IPv6 formatted remote IP addresses.\nGetting started with IPv6 API Version 2006-03-01 200",
      "start_idx": 354304,
      "end_idx": 356079,
      "metadata": {
        "num_sentences": 14,
        "num_words": 293,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Setup",
              "Guidelines"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IPv6",
            "dual-stack endpoints",
            "IAM policies",
            "source IP address filtering",
            "server access log files",
            "remote IP addresses",
            "virtual hosted-style requests",
            "path style requests",
            "AWS PrivateLink"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "IAM",
            "AWS PrivateLink",
            "IPv6 networks"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to access Amazon S3 on Outposts buckets over IPv6 networks using dual-stack endpoints, with guidelines on updating IAM policies, server logs, and tools for IPv6 compatibility.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure IPv6 access for S3 on Outposts?",
            "What are the requirements for using dual-stack endpoints with S3 on Outposts?",
            "How should IAM policies be updated for IPv6 compatibility?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "server access log files",
          "Outposts",
          "Amazon S3",
          "dual-stack endpoints",
          "remote IP addresses",
          "IAM",
          "path style requests",
          "AWS PrivateLink",
          "IPv6",
          "source IP address filtering",
          "virtual hosted-style requests",
          "IPv6 networks",
          "Amazon S3 on Outposts",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_207",
      "text": "Amazon S3 on Outposts User Guide\nUsing dual-stack endpoints to make requests over an IPv6 network\nTo make requests with S3 on Outposts API calls over IPv6, you can use dual-stack endpoints\nvia AWS CLI or AWS SDK. The Amazon S3 control API operations and S3 on Outposts API\noperations work the same way whether you\u2019re accessing S3 on Outposts over an IPv6 protocol\nor IPv4 protocol. However, be aware that S3 on Outposts object actions (such as PutObject or\nGetObject) aren\u2019t supported over IPv6 networks.\nWhen using the AWS Command Line Interface (AWS CLI) and AWS SDKs, you can use a parameter\nor flag to change to a dual-stack endpoint. You can also specify the dual-stack endpoint directly as\nan override of the S3 on Outposts endpoint in the configuration file.\nYou can use a dual-stack endpoint to access an S3 on Outposts bucket over IPv6 from any of the\nfollowing:\n\u2022 The AWS CLI, see Using dual-stack endpoints from the AWS CLI.\n\u2022 The AWS SDKs, see Using S3 on Outposts dual-stack endpoints from the AWS SDKs.\nUsing IPv6 addresses in IAM policies\nBefore trying to access an S3 on Outposts bucket using an IPv6 protocol, make sure that IAM users\nor S3 on Outposts bucket policies used for IP address filtering are updated to include IPv6 address\nranges. If IP address filtering policies aren\u2019t updated to handle IPv6 addresses, you can lose access\nto an S3 on Outposts bucket while trying to use the IPv6 protocol.\nIAM policies that filter IP addresses use IP address condition operators. The following S3 on\nOutposts bucket policy identifies the 54.240.143.* IP range of allowed IPv4 addresses by using IP\naddress condition operators. Any IP addresses outside of this range will be denied access to the S3\non Outposts bucket (DOC-EXAMPLE-BUCKET). Since all IPv6 addresses are outside of the allowed\nrange, this policy prevents IPv6 addresses from being able to access DOC-EXAMPLE-BUCKET.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"IPAllow\",\n\"Effect\": \"Allow\",\n\"Principal\": \"*\",\nMaking requests using dual-stack endpoints API Version 2006-03-01 201",
      "start_idx": 356081,
      "end_idx": 358144,
      "metadata": {
        "num_sentences": 15,
        "num_words": 342,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference",
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "dual-stack endpoints",
            "IPv6 network",
            "AWS CLI",
            "AWS SDK",
            "IAM policies",
            "IP address filtering",
            "PutObject",
            "GetObject",
            "bucket policies"
          ],
          "entities": [
            "Amazon S3",
            "AWS CLI",
            "AWS SDK",
            "IAM policies",
            "DOC-EXAMPLE-BUCKET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use dual-stack endpoints to access Amazon S3 on Outposts over IPv6 and outlines necessary IAM policy updates for IP address filtering. It also highlights limitations for object actions over IPv6 networks.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I use dual-stack endpoints to access S3 on Outposts over IPv6?",
            "What IAM policy updates are needed for IPv6 access?",
            "Are object actions supported over IPv6 networks in S3 on Outposts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "bucket policies",
          "IPv6 network",
          "AWS CLI",
          "PutObject",
          "Amazon S3",
          "dual-stack endpoints",
          "IAM",
          "DOC-EXAMPLE-BUCKET",
          "IP address filtering",
          "AWS SDK",
          "Amazon S3 on Outposts",
          "GetObject",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_208",
      "text": "Amazon S3 on Outposts User Guide\n\"Action\": \"s3outposts:*\",\n\"Resource\": \"arn:aws:s3-outposts:region:111122223333:outpost/OUTPOSTS-ID/\nbucket/DOC-EXAMPLE-BUCKET/*\",\n\"Condition\": {\n\"IpAddress\": {\"aws:SourceIp\": \"54.240.143.0/24\"}\n}\n}\n]\n}\nYou can modify the S3 on Outposts bucket policy's Condition element to allow both IPv4\n(54.240.143.0/24) and IPv6 (2001:DB8:1234:5678::/64) address ranges as shown in the\nfollowing example. You can use the same type of Condition block shown in the example to\nupdate both your IAM user and bucket policies.\n\"Condition\": {\n\"IpAddress\": {\n\"aws:SourceIp\": [\n\"54.240.143.0/24\",\n\"2001:DB8:1234:5678::/64\"\n]\n}\n}\nBefore using IPv6 you must update all relevant IAM user and bucket policies that use IP address\nfiltering to allow IPv6 address ranges. We recommend that you update your IAM policies with your\norganization's IPv6 address ranges in addition to your existing IPv4 address ranges. For an example\nof a bucket policy that allows access over both IPv6 and IPv4, see Restrict access to specific IP\naddresses.\nYou can review your IAM user policies using the IAM console at https://console.aws.amazon.com/\niam/. For more information about IAM, see the IAM User Guide. For information about editing S3\non Outposts bucket policies, see Adding or editing a bucket policy for an Amazon S3 on Outposts\nbucket.\nTesting IP address compatibility\nIf you're using a Linux or Unix instance, or macOS X platform, you can test your access to a dual-\nstack endpoint over IPv6. For example, to test the connection to Amazon S3 on Outposts endpoints\nover IPv6, use the dig command:\nTesting IP address compatibility API Version 2006-03-01 202",
      "start_idx": 358146,
      "end_idx": 359802,
      "metadata": {
        "num_sentences": 10,
        "num_words": 248,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "bucket policy",
            "IPv4",
            "IPv6",
            "Condition element",
            "IAM policies",
            "SourceIp",
            "access control",
            "dual-stack endpoint",
            "dig command"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "IAM",
            "IPv6",
            "IPv4",
            "Linux/Unix"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Access Control",
          "secondary_categories": [
            "Networking",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "IAM"
          ],
          "mentioned_tools": [
            "dig"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure bucket policies for Amazon S3 on Outposts to support both IPv4 and IPv6 address ranges, and provides examples and recommendations for updating IAM policies and testing IP compatibility using tools like the dig command.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I configure S3 on Outposts bucket policies for both IPv4 and IPv6?",
            "What is an example of a bucket policy allowing specific IP ranges?",
            "How can I test IP address compatibility for S3 on Outposts endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Access Control]",
        "tf_idf_keywords": [
          "IAM policies",
          "SourceIp",
          "IAM",
          "dig command",
          "bucket policy",
          "dual-stack endpoint",
          "IPv4",
          "Linux/Unix",
          "access control",
          "Amazon S3 on Outposts",
          "IPv6",
          "Condition element"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_209",
      "text": "Amazon S3 on Outposts User Guide\ndig s3-outposts.us-west-2.api.aws AAAA +short\nIf your dual-stack endpoint over an IPv6 network is properly set up, the dig command returns the\nconnected IPv6 addresses. For example:\ndig s3-outposts.us-west-2.api.aws AAAA +short\n2600:1f14:2588:4800:b3a9:1460:159f:ebce\n2600:1f14:2588:4802:6df6:c1fd:ef8a:fc76\n2600:1f14:2588:4801:d802:8ccf:4e04:817\nUsing IPv6 with AWS PrivateLink\nS3 on Outposts supports the IPv6 protocol for AWS PrivateLink services and endpoints. With AWS\nPrivateLink support for the IPv6 protocol, you can connect to service endpoints within your VPC\nover IPv6 networks, from either on-premises or other private connections. The IPv6 support for\nAWS PrivateLink for S3 on Outposts also allows you to integrate AWS PrivateLink with dual-stack\nendpoints. For steps on how to enable IPv6 for AWS PrivateLink, see Expedite your IPv6 adoption\nwith AWS PrivateLink services and endpoints.\nNote\nTo update the supported IP address type from IPv4 to IPv6, see Modify the supported IP\naddress type in the AWS PrivateLink User Guide.\nUsing IPv6 with AWS PrivateLink\nIf you\u2019re using AWS PrivateLink with IPv6, you must create an IPv6 or dual-stack VPC interface\nendpoint. For general steps on how to create a VPC endpoint using the AWS Management Console,\nsee Access an AWS service using an interface VPC endpoint in the AWS PrivateLink User Guide.\nAWS Management Console\nUse the following procedure to create an interface VPC endpoint that connects to S3 on\nOutposts.\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 203",
      "start_idx": 359804,
      "end_idx": 361371,
      "metadata": {
        "num_sentences": 10,
        "num_words": 231,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "IPv6",
            "AWS PrivateLink",
            "dual-stack endpoint",
            "VPC interface endpoint",
            "IPv4",
            "AWS Management Console",
            "Expedite IPv6 adoption",
            "service endpoints",
            "network connectivity"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "VPC",
            "IPv6 networks",
            "AWS Management Console"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Services",
            "Network Protocols"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon S3 on Outposts with IPv6 networks and AWS PrivateLink, including steps to create an interface VPC endpoint and enable IPv6 connectivity for dual-stack endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enable IPv6 for AWS PrivateLink services?",
            "What are the steps to create a VPC interface endpoint for S3 on Outposts?",
            "How does dual-stack endpoint support work with IPv6?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "VPC interface endpoint",
          "AWS Management Console",
          "VPC",
          "AWS PrivateLink",
          "network connectivity",
          "dual-stack endpoint",
          "IPv4",
          "service endpoints",
          "IPv6 networks",
          "Amazon S3 on Outposts",
          "IPv6",
          "Expedite IPv6 adoption"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_210",
      "text": "Amazon S3 on Outposts User Guide\n1. Sign in to the AWS Management Console and open the VPC console at https://\nconsole.aws.amazon.com/vpc/.\n2. In the navigation pane, choose Endpoints.\n3. Choose Create endpoint.\n4. For Service category, choose AWS services.\n5. For Service name, choose the S3 on Outposts service (com.amazonaws.us-east-1.s3-\noutposts).\n6. For VPC, choose the VPC from which you'll access S3 on Outposts.\n7. For Subnets, choose one subnet per Availability Zone from which you'll access S3 on\nOutposts. You can't select multiple subnets from the same Availability Zone. For each\nsubnet that you select, a new endpoint network interface is created. By default, IP\naddresses from the subnet IP address ranges are assigned to the endpoint network\ninterfaces. To designate an IP address for an endpoint network interface, choose Designate\nIP addresses and enter an IPv6 address from the subnet address range.\n8. For IP address type, choose Dualstack. Assign both IPv4 and IPv6 addresses to your\nendpoint network interfaces. This option is supported only if all selected subnets have both\nIPv4 and IPv6 address ranges.\n9. For Security groups, choose the security groups to associate with the endpoint network\ninterfaces for the VPC endpoint. By default, the default security group is associated with\nthe VPC.\n10. For Policy, choose Full access to allow all operations by all principals on all resources\nover the VPC endpoint. Otherwise, choose Custom to attach a VPC endpoint policy that\ncontrols the permissions that principals have toperform actions on resources over the VPC\nendpoint. This option is available only if the service supports VPC endpoint policies. For\nmore information, see Endpoint policies.\n11. (Optional) To add a tag, choose Add new tag and enter the tag key and the tag value.\n12. Choose Create endpoint.\nExample \u2013 S3 on Outposts bucket policy\nTo allow S3 on Outposts to interact with your VPC endpoints, you can then update your S3 on\nOutposts policy like this:\n{\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 204",
      "start_idx": 361373,
      "end_idx": 363428,
      "metadata": {
        "num_sentences": 35,
        "num_words": 333,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "VPC endpoint",
            "subnet",
            "IPv6",
            "security groups",
            "endpoint policy",
            "AWS Management Console",
            "tagging",
            "PrivateLink"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS Management Console",
            "VPC",
            "PrivateLink",
            "IPv6"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Networking",
            "Storage"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink",
            "VPC"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides a step-by-step process for creating a VPC endpoint to access Amazon S3 on Outposts, including configuration options like subnets, security groups, and endpoint policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a VPC endpoint for S3 on Outposts?",
            "What configuration options are available for S3 on Outposts endpoints?",
            "How do I assign IPv6 addresses to an S3 on Outposts endpoint?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "Outposts",
          "VPC endpoint",
          "Amazon S3",
          "tagging",
          "AWS Management Console",
          "security groups",
          "Amazon S3 on Outposts",
          "VPC",
          "AWS PrivateLink",
          "endpoint policy",
          "PrivateLink",
          "subnet",
          "IPv6"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_211",
      "text": "Amazon S3 on Outposts User Guide\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": \"s3-outposts:*\",\n\"Resource\": \"*\",\n\"Principal\": \"*\"\n}\n]\n}\nAWS CLI\nNote\nTo enable the IPv6 network on your VPC endpoint, you must have IPv6 set for the\nSupportedIpAddressType filter for S3 on Outposts.\nThe following example uses the create-vpc-endpoint command to create a new dual-stack\ninterface endpoint.\naws ec2 create-vpc-endpoint \\\n--vpc-id vpc-12345678 \\\n--vpc-endpoint-type Interface \\\n--service-name com.amazonaws.us-east-1.s3-outposts \\\n--subnet-id subnet-12345678 \\\n--security-group-id sg-12345678 \\\n--ip-address-type dualstack \\\n--dns-options \"DnsRecordIpType=dualstack\"\nDepending on the AWS PrivateLink service configuration, newly created endpoint connections\nmight need to be accepted by the VPC endpoint service provider before they can be used. For\nmore information, see Accept and reject endpoint connection requests in the AWS PrivateLink\nUser Guide.\nThe following example uses the modify-vpc-endpoint command to update the IPv-only VPC\nendpoint to a dual-stack endpoint. The dual-stack endpoint allows access to both the IPv4 and\nIPv6 networks.\naws ec2 modify-vpc-endpoint \\\nUsing IPv6 with AWS PrivateLink API Version 2006-03-01 205",
      "start_idx": 363430,
      "end_idx": 364660,
      "metadata": {
        "num_sentences": 7,
        "num_words": 168,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Example",
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "Amazon S3 on Outposts",
            "VPC endpoint",
            "IPv6",
            "dual-stack",
            "AWS CLI",
            "PrivateLink",
            "security group",
            "subnet",
            "DNS options",
            "interface endpoint"
          ],
          "entities": [
            "Amazon S3 on Outposts",
            "AWS CLI",
            "VPC endpoint",
            "AWS PrivateLink",
            "IPv6 network"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Networking",
          "secondary_categories": [
            "AWS Services",
            "Command-Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 on Outposts",
            "AWS PrivateLink",
            "Amazon EC2"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure a dual-stack VPC endpoint for Amazon S3 on Outposts using the AWS CLI, enabling both IPv4 and IPv6 support. It also highlights the need to accept endpoint connections in some AWS PrivateLink configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a dual-stack VPC endpoint for S3 on Outposts?",
            "What AWS CLI commands are used to enable IPv6 on a VPC endpoint?",
            "What is required to accept endpoint connections in AWS PrivateLink?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Networking]",
        "tf_idf_keywords": [
          "Amazon EC2",
          "IPv6 network",
          "AWS CLI",
          "VPC endpoint",
          "DNS options",
          "dual-stack",
          "interface endpoint",
          "AWS PrivateLink",
          "security group",
          "PrivateLink",
          "subnet",
          "Amazon S3 on Outposts",
          "IPv6"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_212",
      "text": "Amazon S3 on Outposts User Guide\n--vpc-endpoint-id vpce-12345678 \\\n--add-subnet-ids subnet-12345678 \\\n--remove-subnet-ids subnet-12345678 \\\n--ip-address-type dualstack \\\n--dns-options \"DnsRecordIpType=dualstack\"\nFor more information about how to enable the IPv6 network for AWS PrivateLink, see Expedite\nyour IPv6 adoption with AWS PrivateLink services and endpoints.\nUsing S3 on Outposts dual-stack endpoints\nS3 on Outposts dual-stack endpoints support requests to S3 on Outposts buckets over IPv6 and\nIPv4. This section describes how to use S3 on Outposts dual-stack endpoints.\nTopics\n\u2022 S3 on Outposts dual-stack endpoints\n\u2022 Using dual-stack endpoints from the AWS CLI\n\u2022 Using S3 on Outposts dual-stack endpoints from the AWS SDKs\nS3 on Outposts dual-stack endpoints\nWhen you make a request to a dual-stack endpoint, the S3 on Outposts bucket URL resolves to an\nIPv6 or an IPv4 address. For more information about accessing an S3 on Outposts bucket over IPv6,\nsee Making requests to S3 on Outposts over IPv6.\nTo access an S3 on Outposts bucket through a dual-stack endpoint, use a path-style endpoint\nname. S3 on Outposts supports only Regional dual-stack endpoint names, which means that you\nmust specify the Region as part of the name.\nFor a dual-stack path-style FIPs endpoint, use the following naming convention:\ns3-outposts-fips.region.api.aws\nFor dual-stack non-FIPS endpoint, use the following naming convention:\ns3-outposts.region.api.aws\nUsing dual-stack endpoints API Version 2006-03-01 206",
      "start_idx": 364662,
      "end_idx": 366165,
      "metadata": {
        "num_sentences": 8,
        "num_words": 219,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "S3 on Outposts",
            "dual-stack endpoints",
            "IPv6",
            "IPv4",
            "AWS PrivateLink",
            "FIPS endpoint",
            "path-style endpoint",
            "Region",
            "DNS options",
            "API Version 2006-03-01"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS PrivateLink",
            "IPv6 network",
            "dual-stack endpoint"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Networking",
            "Cloud Infrastructure"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS PrivateLink"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on using dual-stack endpoints for S3 on Outposts, supporting both IPv6 and IPv4, and describes configuration steps and endpoint naming conventions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure dual-stack endpoints for S3 on Outposts?",
            "What is the naming convention for S3 on Outposts dual-stack endpoints?",
            "How can I access an S3 on Outposts bucket over IPv6?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Outposts",
          "Region",
          "IPv6 network",
          "path-style endpoint",
          "dual-stack endpoints",
          "Amazon S3",
          "API Version 2006-03-01",
          "DNS options",
          "AWS PrivateLink",
          "dual-stack endpoint",
          "IPv4",
          "FIPS endpoint",
          "S3 on Outposts",
          "IPv6"
        ]
      }
    },
    {
      "chunk_id": "3a4a6551-098e-4b24-a6b6-0fff35772eec_chunk_213",
      "text": "Amazon S3 on Outposts User Guide\nNote\nVirtual hosted-style endpoint names aren't supported in S3 on Outposts.\nUsing dual-stack endpoints from the AWS CLI\nThis section provides examples of AWS CLI commands used to make requests to a dual-stack\nendpoint. For instructions on setting up the AWS CLI, see Getting started by using the AWS CLI and\nSDK for Java.\nYou set the configuration value use_dualstack_endpoint to true in a profile in your AWS\nConfig file to direct all Amazon S3 requests made by the s3 and s3api AWS CLI commands to the\ndual-stack endpoint for the specified Region. You specify the Region in the configuration file or in a\ncommand using the --region option.\nWhen using dual-stack endpoints with the AWS CLI, only path addressing style is supported.\nThe addressing style, set in the configuration file, determines whether the bucket name is in the\nhostname or in the URL. For more information, see s3outposts in the AWS CLI User Guide.\nTo use a dual-stack endpoint via the AWS CLI, use the --endpoint-url parameter with\nthe http://s3.dualstack.region.amazonaws.com or https://s3-outposts-\nfips.region.api.aws endpoint for any s3control or s3outposts commands.\nFor example:\n$ aws s3control list-regional-buckets --endpoint-url https://s3-\noutposts.region.api.aws\nUsing S3 on Outposts dual-stack endpoints from the AWS SDKs\nThis section provides examples of how to access a dual-stack endpoint by using the AWS SDKs.\nAWS SDK for Java 2.x dual-stack endpoint example\nThe following examples show how to use the S3ControlClient and S3OutpostsClient classes\nto enable dual-stack endpoints when creating an S3 on Outposts client using the AWS SDK for Java\n2.x. For instructions on creating and testing a working Java example for Amazon S3 on Outposts,\nsee Getting started by using the AWS CLI and SDK for Java.\nUsing dual-stack endpoints API Version 2006-03-01 207",
      "start_idx": 366167,
      "end_idx": 368041,
      "metadata": {
        "num_sentences": 13,
        "num_words": 294,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Usage",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3",
            "Outposts",
            "dual-stack endpoints",
            "AWS CLI",
            "SDK for Java",
            "s3control",
            "s3outposts",
            "endpoint-url",
            "Region",
            "addressing style"
          ],
          "entities": [
            "Amazon S3",
            "Outposts",
            "AWS CLI",
            "AWS SDK for Java",
            "S3ControlClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "AWS CLI Usage",
            "AWS SDK Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Outposts",
            "AWS SDK for Java"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java",
            "S3ControlClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and use dual-stack endpoints for Amazon S3 on Outposts using the AWS CLI and SDK for Java. It includes examples for both tools and details on addressing styles and endpoint URLs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure dual-stack endpoints for Amazon S3 on Outposts?",
            "What addressing styles are supported in S3 on Outposts?",
            "How can I use the AWS SDK for Java to access dual-stack endpoints?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "s3control",
          "Outposts",
          "AWS CLI",
          "Amazon S3",
          "dual-stack endpoints",
          "s3outposts",
          "SDK for Java",
          "endpoint-url",
          "addressing style",
          "AWS SDK for Java",
          "S3ControlClient",
          "Region"
        ]
      }
    }
  ],
  "metadata": {
    "total_chunks": 197,
    "avg_chunk_size": 252.32994923857868,
    "chunking_method": "NaiveChunker",
    "processed_at": "2025-05-04T18:45:20.907872",
    "total_paragraphs": 218,
    "total_sentences": 2510,
    "total_words": 52012,
    "chunking_strategy": "naive_paragraph",
    "enrichment": {
      "method": "llm",
      "model": "VARELab-GPT4o",
      "enriched_at": "2025-05-05 07:18:41"
    }
  }
}