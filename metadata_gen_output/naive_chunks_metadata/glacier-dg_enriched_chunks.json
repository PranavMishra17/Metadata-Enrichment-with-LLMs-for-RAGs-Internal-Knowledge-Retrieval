{
  "document_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82",
  "document_name": "glacier-dg.txt",
  "chunks": [
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_0",
      "text": "Developer Guide\nAmazon S3 Glacier\nAPI Version 2012-06-01\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.",
      "start_idx": 0,
      "end_idx": 143,
      "metadata": {
        "num_sentences": 2,
        "num_words": 21,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Versioning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "Developer Guide",
            "AWS",
            "Cloud Storage"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Developer Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "API"
          ]
        },
        "semantic": {
          "summary": "This document serves as the developer guide for Amazon S3 Glacier, covering API version 2012-06-01.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the API version for Amazon S3 Glacier?",
            "Where can I find the developer guide for Amazon S3 Glacier?",
            "What is the copyright information for this document?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "Developer Guide",
          "Amazon S3 Glacier",
          "Cloud Storage",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_1",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon S3 Glacier: Developer Guide\nCopyright \u00a9 2024 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.\nAmazon's trademarks and trade dress may not be used in connection with any product or service\nthat is not Amazon's, in any manner that is likely to cause confusion among customers, or in any\nmanner that disparages or discredits Amazon. All other trademarks not owned by Amazon are\nthe property of their respective owners, who may or may not be affiliated with, connected to, or\nsponsored by Amazon.",
      "start_idx": 145,
      "end_idx": 699,
      "metadata": {
        "num_sentences": 4,
        "num_words": 91,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Legal Disclaimer",
              "Trademark Information"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "trademarks",
            "trade dress",
            "affiliates",
            "copyright",
            "Amazon Web Services",
            "disparages",
            "confusion",
            "property"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Web Services",
            "Amazon",
            "affiliates",
            "trademarks"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Legal Information",
            "Documentation Standards"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides legal and trademark information related to Amazon S3 Glacier and its developer guide, outlining usage restrictions for Amazon's intellectual property.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the trademark usage restrictions for Amazon S3 Glacier?",
            "Who owns the trademarks mentioned in the Amazon S3 Glacier Developer Guide?",
            "What legal disclaimers are included in the Amazon S3 Glacier documentation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "trade dress",
          "property",
          "Developer Guide",
          "affiliates",
          "Amazon S3 Glacier",
          "copyright",
          "confusion",
          "trademarks",
          "disparages",
          "Amazon Web Services",
          "Amazon"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_2",
      "text": "Amazon S3 Glacier Developer Guide\nTable of Contents\n.......................................................................................................................................................... x\nWhat Is Amazon S3 Glacier? ........................................................................................................... 1\nDo You Currently Use S3 Glacier? ............................................................................................................. 1\nData Model ..................................................................................................................................................... 3\nVault........................................................................................................................................................... 3\nArchive....................................................................................................................................................... 4\nJob.............................................................................................................................................................. 4\nNotification Configuration ..................................................................................................................... 5\nSupported Operations................................................................................................................................. 6\nVault Operations..................................................................................................................................... 6\nArchive Operations .................................................................................................................................. 7\nJobs ............................................................................................................................................................ 7\nAccessing S3 Glacier .................................................................................................................................... 7\nRegions and Endpoints .......................................................................................................................... 8\nGetting Started................................................................................................................................ 9\nStep 1: Before You Begin ......................................................................................................................... 10\nSet Up an AWS account ...................................................................................................................... 10\nDownload the Appropriate AWS SDK ............................................................................................... 12\nStep 2: Create a Vault ............................................................................................................................... 13\nStep 3: Upload an Archive to a Vault .................................................................................................... 14\nUpload an Archive by Using Java ...................................................................................................... 15\nUpload an Archive by Using .NET ...................................................................................................... 20\nStep 4: Download an Archive from a Vault .......................................................................................... 22\nDownload an Archive by Using Java................................................................................................. 23\nDownload an Archive by Using .NET ................................................................................................ 25\nStep 5: Delete an Archive from a Vault ................................................................................................ 27\nRelated Sections .................................................................................................................................... 27\nDelete an Archive by Using Java....................................................................................................... 28\nDelete an Archive by Using .NET ....................................................................................................... 29\nDeleting an Archive by Using the AWS CLI ..................................................................................... 30\nStep 6: Delete a Vault ............................................................................................................................... 33\nWhere Do I Go From Here? ...................................................................................................................... 34\nWorking with Vaults ...................................................................................................................... 35\nVault Operations in S3 Glacier ................................................................................................................ 36\nAPI Version 2012-06-01 iii",
      "start_idx": 701,
      "end_idx": 5774,
      "metadata": {
        "num_sentences": 4,
        "num_words": 214,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Reference",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Archive",
            "Job",
            "Notification Configuration",
            "Regions",
            "Endpoints",
            "AWS SDK",
            "AWS CLI",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Operations",
            "Archive Operations",
            "AWS SDK",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "Java",
            ".NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for using Amazon S3 Glacier, including setting up accounts, managing vaults, uploading and downloading archives, and interacting via SDKs and CLI tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What are the steps to upload an archive using Java?",
            "How can I delete an archive using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Endpoints",
          "Notification Configuration",
          "AWS CLI",
          "Vault",
          "API Version 2012-06-01",
          "Regions",
          "Vault Operations",
          "Archive",
          "Amazon S3 Glacier",
          "Job",
          "AWS SDK",
          "Archive Operations"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_3",
      "text": "Amazon S3 Glacier Developer Guide\nCreating and Deleting Vaults ............................................................................................................. 36\nRetrieving Vault Metadata .................................................................................................................. 36\nDownloading a Vault Inventory ......................................................................................................... 36\nConfiguring Vault Notifications ......................................................................................................... 37\nCreating a Vault .......................................................................................................................................... 37\nCreating a Vault Using Java ............................................................................................................... 38\nCreating a Vault Using .NET ............................................................................................................... 41\nCreating a Vault Using REST .............................................................................................................. 46\nCreating a Vault Using the Console .................................................................................................. 46\nCreating a Vault Using the AWS CLI ................................................................................................. 46\nRetrieving Vault Metadata ....................................................................................................................... 48\nRetrieving Vault Metadata Using Java ............................................................................................. 48\nRetrieving Vault Metadata Using .NET ............................................................................................. 51\nRetrieving Vault Metadata Using REST ............................................................................................ 54\nRetrieving Vault Metadata Using the AWS CLI ............................................................................... 54\nDownloading a Vault Inventory .............................................................................................................. 55\nAbout the Inventory ............................................................................................................................. 57\nDownloading a Vault Inventory Using Java .................................................................................... 57\nDownloading a Vault Inventory Using .NET .................................................................................... 65\nDownloading a Vault Inventory Using REST ................................................................................... 72\nDownloading a Vault Inventory Using the AWS CLI ...................................................................... 73\nConfiguring Vault Notifications ............................................................................................................... 75\nGeneral Concepts .................................................................................................................................. 76\nConfiguring Vault Notifications Using Java ..................................................................................... 78\nConfiguring Vault Notifications Using .NET ..................................................................................... 81\nConfiguring Vault Notifications Using the REST API ..................................................................... 84\nConfiguring Vault Notifications by Using the Console .................................................................. 84\nConfiguring Vault Notifications Using the CLI ................................................................................ 86\nDeleting a Vault .......................................................................................................................................... 87\nDeleting a Vault Using Java ............................................................................................................... 88\nDeleting a Vault Using .NET ............................................................................................................... 89\nDeleting a Vault Using REST .............................................................................................................. 91\nDeleting an Empty Vault by Using the Console ............................................................................. 91\nDeleting a Vault Using the AWS CLI ................................................................................................. 92\nTagging Vaults............................................................................................................................................ 95\nTagging Vaults by Using the Amazon S3 Glacier Console ............................................................ 96\nAPI Version 2012-06-01 iv",
      "start_idx": 5776,
      "end_idx": 10803,
      "metadata": {
        "num_sentences": 1,
        "num_words": 262,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "Vault",
            "Metadata",
            "Notifications",
            "Inventory",
            "Java",
            ".NET",
            "REST API",
            "AWS CLI",
            "Tagging",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Metadata",
            "Vault Inventory",
            "Vault Notifications",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            ".NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on creating, retrieving metadata, downloading inventory, configuring notifications, and deleting vaults in Amazon S3 Glacier, along with examples using different tools and APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier?",
            "What are the steps to configure vault notifications?",
            "How can I download a vault inventory using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Vault Metadata",
          "Vault",
          "Metadata",
          "Notifications",
          "REST API",
          "Amazon S3 Glacier",
          "Vault Inventory",
          "Java",
          "Tagging",
          "Vault Notifications",
          ".NET",
          "Inventory"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_4",
      "text": "Amazon S3 Glacier Developer Guide\nTagging Vaults by Using the AWS CLI .............................................................................................. 97\nTagging Vaults by Using the Amazon S3 Glacier API .................................................................... 98\nRelated Sections .................................................................................................................................... 98\nVault Lock.................................................................................................................................................... 99\nVault Locking Overview ....................................................................................................................... 99\nVault Locking by Using the API ....................................................................................................... 100\nVault Locking Using the CLI ............................................................................................................. 101\nVault Locking by Using the Console .............................................................................................. 103\nWorking with Archives ................................................................................................................ 106\nArchive Operations.................................................................................................................................. 107\nUploading an Archive ........................................................................................................................ 107\nFinding an Archive .............................................................................................................................. 107\nDownloading an Archive ................................................................................................................... 107\nDeleting an Archive ............................................................................................................................ 108\nUpdating an Archive .......................................................................................................................... 108\nMaintaining Client-Side Archive Metadata ......................................................................................... 108\nUploading an Archive .............................................................................................................................. 108\nOptions for Uploading an Archive .................................................................................................. 109\nUploading an Archive in a Single Operation ................................................................................ 110\nUploading Large Archives in Parts .................................................................................................. 120\nDownloading an Archive ........................................................................................................................ 137\nRetrieving Archives in Console ........................................................................................................ 138\nDownloading an Archive Using Java .............................................................................................. 142\nDownloading an Archive Using .NET .............................................................................................. 159\nDownloading an Archive by Using REST ....................................................................................... 175\nDownloading an Archive Using the AWS CLI ................................................................................ 176\nDeleting an Archive ................................................................................................................................. 179\nDeleting an Archive Using Java ....................................................................................................... 180\nDeleting an Archive Using .NET ....................................................................................................... 182\nDeleting an Archive Using REST ...................................................................................................... 185\nDeleting an Archive Using the AWS CLI ........................................................................................ 185\nUsing the AWS SDKs ................................................................................................................... 189\nAWS SDK Libraries for Java and .NET .................................................................................................. 189\nWhat Is the Low-Level API? ............................................................................................................. 189\nWhat Is the High-Level API? ............................................................................................................ 190\nWhen to Use the High-Level and Low-Level API ......................................................................... 190\nAPI Version 2012-06-01 v",
      "start_idx": 10805,
      "end_idx": 15903,
      "metadata": {
        "num_sentences": 3,
        "num_words": 247,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "CLI Commands",
              "SDK Integration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "Archive Operations",
            "AWS CLI",
            "API",
            "Java",
            ".NET",
            "REST",
            "SDKs",
            "Metadata"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Vault Lock",
            "Java SDK",
            ".NET SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK",
            ".NET SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides detailed procedural guidance on using Amazon S3 Glacier for vault tagging, vault locking, and archive operations through various interfaces including CLI, API, and SDKs.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload large archives in Amazon S3 Glacier?",
            "What are the steps to delete an archive using the AWS CLI?",
            "What is the difference between the high-level and low-level APIs in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "REST",
          "API",
          "Metadata",
          "Java SDK",
          "Vault Lock",
          "SDKs",
          "Amazon S3 Glacier",
          "Java",
          ".NET SDK",
          ".NET",
          "Archive Operations"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_5",
      "text": "Amazon S3 Glacier Developer Guide\nWorking with AWS SDKs ........................................................................................................................ 190\nUsing the AWS SDK for Java ................................................................................................................. 192\nUsing the Low-Level API ................................................................................................................... 192\nUsing the High-Level API .................................................................................................................. 193\nRunning Java Examples Using Eclipse ........................................................................................... 194\nSetting the Endpoint ......................................................................................................................... 194\nUsing the AWS SDK for .NET ................................................................................................................. 195\nUsing the Low-Level API ................................................................................................................... 196\nUsing the High-Level API .................................................................................................................. 197\nRunning .NET Examples ..................................................................................................................... 197\nSetting the Endpoint ......................................................................................................................... 198\nCode examples............................................................................................................................. 199\nBasics.......................................................................................................................................................... 201\nHello Amazon S3 Glacier .................................................................................................................. 202\nActions .................................................................................................................................................. 203\nScenarios.................................................................................................................................................... 266\nArchive a file, get notifications, and initiate a job ....................................................................... 266\nGet archive content and delete the archive .................................................................................. 272\nSecurity ........................................................................................................................................ 278\nData Protection ........................................................................................................................................ 278\nData Encryption.................................................................................................................................. 279\nKey Management................................................................................................................................ 280\nInternetwork Traffic Privacy ............................................................................................................. 280\nIdentity and Access Management ........................................................................................................ 280\nAudience............................................................................................................................................... 281\nAuthenticating with identities ......................................................................................................... 282\nManaging access using policies ....................................................................................................... 285\nHow Amazon S3 Glacier works with IAM ...................................................................................... 287\nIdentity-based policy examples ....................................................................................................... 295\nResource-based policy examples ..................................................................................................... 302\nTroubleshooting .................................................................................................................................. 308\nAmazon S3 Glacier API Permissions Reference ............................................................................ 310\nLogging and Monitoring ......................................................................................................................... 318\nCompliance Validation ............................................................................................................................ 319\nResilience ................................................................................................................................................... 321\nInfrastructure Security............................................................................................................................ 322\nAPI Version 2012-06-01 vi",
      "start_idx": 15905,
      "end_idx": 21197,
      "metadata": {
        "num_sentences": 1,
        "num_words": 195,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Amazon S3 Glacier",
            "IAM",
            "Data Encryption",
            "Endpoint",
            "Archive",
            "Key Management",
            "Policy Examples",
            "API Permissions",
            "Logging"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon S3 Glacier API",
            "IAM",
            "Eclipse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Security",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "Eclipse",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a comprehensive guide to working with Amazon S3 Glacier, covering SDK usage, code examples, security, IAM policies, and troubleshooting steps.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS SDK for Java to interact with Amazon S3 Glacier?",
            "What are the security features available in Amazon S3 Glacier?",
            "How can I manage access to Amazon S3 Glacier using IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "IAM",
          "Data Encryption",
          "API Permissions",
          "Policy Examples",
          "Amazon S3 Glacier API",
          "Logging",
          "Archive",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Key Management",
          "AWS SDK",
          "Endpoint",
          "Eclipse"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_6",
      "text": "Amazon S3 Glacier Developer Guide\nVPC Endpoints..................................................................................................................................... 322\nData Retrieval Policies ................................................................................................................ 323\nChoosing an S3 Glacier Data Retrieval Policy .................................................................................... 323\nFree Tier Only Policy ......................................................................................................................... 324\nMax Retrieval Rate Policy ................................................................................................................. 324\nNo Retrieval Limit Policy .................................................................................................................. 325\nUsing the S3 Glacier Console to Set Up a Data Retrieval Policy .................................................... 325\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval Policy ............................................ 326\nUsing the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy ............................. 326\nUsing the AWS SDKs to Set Up a Data Retrieval Policy ............................................................. 326\nTagging Resources ....................................................................................................................... 327\nTagging Basics .......................................................................................................................................... 327\nTag Restrictions ........................................................................................................................................ 328\nTracking Costs Using Tagging ............................................................................................................... 328\nManaging Access Control with Tagging .............................................................................................. 328\nRelated Sections ....................................................................................................................................... 329\nAudit Logging with AWS CloudTrail ........................................................................................... 330\nAmazon S3 Glacier Information in CloudTrail ................................................................................... 330\nUnderstanding Amazon S3 Glacier Log File Entries ......................................................................... 331\nAPI Reference............................................................................................................................... 335\nCommon Request Headers .................................................................................................................... 336\nCommon Response Headers .................................................................................................................. 339\nSigning Requests...................................................................................................................................... 339\nExample Signature Calculation ........................................................................................................ 341\nCalculating Signatures for the Streaming Operations ................................................................ 342\nComputing Checksums ........................................................................................................................... 345\nTree Hash Example 1: Uploading an archive in a single request .............................................. 346\nTree Hash Example 2: Uploading an archive using a multipart upload ................................... 347\nComputing the Tree Hash of a File ................................................................................................ 348\nReceiving Checksums When Downloading Data .......................................................................... 358\nError Responses ........................................................................................................................................ 360\nExample 1: Describe Job request with a job ID that does not exist ......................................... 363\nExample 2: List Jobs request with an invalid value for the request parameter ...................... 364\nVault Operations...................................................................................................................................... 365\nAbort Vault Lock ................................................................................................................................. 366\nAdd Tags To Vault .............................................................................................................................. 369\nAPI Version 2012-06-01 vii",
      "start_idx": 21199,
      "end_idx": 26165,
      "metadata": {
        "num_sentences": 1,
        "num_words": 278,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Data Retrieval Policy",
            "Tagging",
            "AWS CloudTrail",
            "API Reference",
            "Tree Hash",
            "Checksum",
            "Vault Operations",
            "Error Responses",
            "Streaming Operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "VPC Endpoints",
            "AWS SDKs",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "VPC Endpoints"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides detailed guidance on Amazon S3 Glacier's features, including data retrieval policies, tagging, audit logging, API references, and error handling. It also includes examples and procedural steps for using various tools and APIs to interact with S3 Glacier.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up a data retrieval policy for Amazon S3 Glacier?",
            "What are the tagging restrictions in Amazon S3 Glacier?",
            "How do I calculate checksums for streaming operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "Tree Hash",
          "VPC Endpoints",
          "AWS SDKs",
          "Error Responses",
          "REST API",
          "Vault Operations",
          "Data Retrieval Policy",
          "Amazon S3 Glacier",
          "API Reference",
          "Tagging",
          "Streaming Operations",
          "AWS CloudTrail"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_7",
      "text": "Amazon S3 Glacier Developer Guide\nCreate Vault ......................................................................................................................................... 372\nComplete Vault Lock ......................................................................................................................... 375\nDelete Vault ......................................................................................................................................... 378\nDelete Vault Access Policy ................................................................................................................ 381\nDelete Vault Notifications ................................................................................................................. 384\nDescribe Vault..................................................................................................................................... 386\nGet Vault Access Policy ..................................................................................................................... 390\nGet Vault Lock ..................................................................................................................................... 394\nGet Vault Notifications ...................................................................................................................... 398\nInitiate Vault Lock .............................................................................................................................. 402\nList Tags For Vault ............................................................................................................................. 406\nList Vaults............................................................................................................................................. 409\nRemove Tags From Vault .................................................................................................................. 416\nSet Vault Access Policy ...................................................................................................................... 419\nSet Vault Notification Configuration .............................................................................................. 422\nArchive Operations.................................................................................................................................. 426\nDelete Archive ..................................................................................................................................... 426\nUpload Archive.................................................................................................................................... 429\nMultipart Upload Operations ................................................................................................................ 434\nAbort Multipart Upload .................................................................................................................... 435\nComplete Multipart Upload ............................................................................................................. 437\nInitiate Multipart Upload .................................................................................................................. 442\nList Parts ............................................................................................................................................... 447\nList Multipart Uploads ....................................................................................................................... 454\nUpload Part .......................................................................................................................................... 461\nJob Operations......................................................................................................................................... 467\nDescribe Job ........................................................................................................................................ 467\nGet Job Output ................................................................................................................................... 478\nInitiate Job ........................................................................................................................................... 489\nList Jobs ................................................................................................................................................ 500\nData Types Used in Job Operations .................................................................................................... 510\nCSVInput ............................................................................................................................................... 510\nCSVOutput............................................................................................................................................ 512\nEncryption............................................................................................................................................ 513\nGlacierJobDescription........................................................................................................................ 514\nGrant...................................................................................................................................................... 518\nAPI Version 2012-06-01 viii",
      "start_idx": 26167,
      "end_idx": 31634,
      "metadata": {
        "num_sentences": 1,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Procedural",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Archive",
            "Multipart Upload",
            "Job Operations",
            "Vault Lock",
            "Access Policy",
            "Notifications",
            "Tags",
            "Encryption"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault",
            "Archive",
            "Multipart Upload",
            "Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "API Version 2012-06-01"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a detailed reference for managing vaults, archives, multipart uploads, and job operations in Amazon S3 Glacier using the API Version 2012-06-01.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or delete a vault in Amazon S3 Glacier?",
            "What are the steps for initiating and completing a multipart upload?",
            "What data types are used in job operations for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Encryption",
          "Vault",
          "Notifications",
          "Multipart Upload",
          "Vault Lock",
          "Archive",
          "Amazon S3 Glacier",
          "Job Operations",
          "Job",
          "Tags",
          "Access Policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_8",
      "text": "Amazon S3 Glacier Developer Guide\nGrantee ................................................................................................................................................. 518\nInputSerialization................................................................................................................................ 519\nInventoryRetrievalJobInput .............................................................................................................. 520\njobParameters ..................................................................................................................................... 521\nOutputLocation................................................................................................................................... 524\nOutputSerialization ............................................................................................................................ 525\nS3Location ............................................................................................................................................ 525\nSelectParameters ................................................................................................................................ 527\nData Retrieval Operations ...................................................................................................................... 528\nGet Data Retrieval Policy .................................................................................................................. 528\nList Provision Capacity ...................................................................................................................... 532\nPurchase Provisioned Capacity ........................................................................................................ 536\nSet Data Retrieval Policy .................................................................................................................. 539\nDocument History........................................................................................................................ 545\nEarlier Updates......................................................................................................................................... 546\nAWS Glossary ............................................................................................................................... 548\nAPI Version 2012-06-01 ix",
      "start_idx": 31636,
      "end_idx": 34071,
      "metadata": {
        "num_sentences": 1,
        "num_words": 68,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Index",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InputSerialization",
            "OutputSerialization",
            "jobParameters",
            "S3Location",
            "SelectParameters",
            "Data Retrieval",
            "Provisioned Capacity",
            "Data Retrieval Policy",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InputSerialization",
            "OutputSerialization",
            "Provisioned Capacity",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides a reference index for key terms, API operations, and features related to data retrieval and provisioning capacity in Amazon S3 Glacier.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the key API operations for Amazon S3 Glacier?",
            "How is data retrieval policy configured in Amazon S3 Glacier?",
            "What is the role of provisioned capacity in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Provisioned Capacity",
          "InputSerialization",
          "jobParameters",
          "Data Retrieval",
          "S3Location",
          "Data Retrieval Policy",
          "Amazon S3 Glacier",
          "OutputSerialization",
          "API Version 2012-06-01",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_9",
      "text": "Amazon S3 Glacier Developer Guide\nThis page is only for existing customers of the S3 Glacier service using Vaults and the original\nREST API from 2012.\nIf you're looking for archival storage solutions we suggest using the S3 Glacier storage classes\nin Amazon S3, S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive. To learn more about these storage options, see S3 Glacier storage classes and Long-term\ndata storage using S3 Glacier storage classes in the Amazon S3 User Guide. These storage classes\nuse the Amazon S3 API, are available in all regions, and can be managed within the Amazon S3\nconsole. They offer features like Storage Cost Analysis, Storage Lens, advanced optional encryption\nfeatures, and more.\nAPI Version 2012-06-01 x",
      "start_idx": 34073,
      "end_idx": 34847,
      "metadata": {
        "num_sentences": 6,
        "num_words": 125,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vaults",
            "REST API",
            "archival storage",
            "S3 Glacier storage classes",
            "Instant Retrieval",
            "Flexible Retrieval",
            "Deep Archive",
            "encryption",
            "Storage Cost Analysis"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Glacier Instant Retrieval",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "Amazon S3 User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archival",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "Amazon S3 Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides information for existing Amazon S3 Glacier customers using Vaults and the 2012 REST API, while recommending modern S3 Glacier storage classes for archival needs.",
          "intents": [
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the differences between S3 Glacier storage classes?",
            "How can I manage S3 Glacier storage classes in the Amazon S3 console?",
            "What features do S3 Glacier storage classes offer?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Storage Cost Analysis",
          "Amazon S3",
          "archival storage",
          "S3 Glacier Instant Retrieval",
          "REST API",
          "Instant Retrieval",
          "S3 Glacier Flexible Retrieval",
          "Deep Archive",
          "Amazon S3 Glacier",
          "encryption",
          "Vaults",
          "S3 Glacier Deep Archive",
          "Amazon S3 User Guide",
          "S3 Glacier storage classes",
          "Flexible Retrieval"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_10",
      "text": "Amazon S3 Glacier Developer Guide\nWhat Is Amazon S3 Glacier?\nIf you're currently using the Amazon S3 Glacier (S3 Glacier) service and want to learn more, you'll\nfind the information that you need in this guide. S3 Glacier is a secure and durable service for low-\ncost data archiving and long-term backup using vaults. For more information about S3 Glacier\nservice pricing, see S3 Glacier pricing.\nTopics\n\u2022 Do You Currently Use S3 Glacier?\n\u2022 Amazon S3 Glacier Data Model\n\u2022 Supported Operations in S3 Glacier\n\u2022 Accessing Amazon S3 Glacier\nDo You Currently Use S3 Glacier?\nNote\nThis section is about the S3 Glacier service. If you currently use the S3 Glacier storage\nclasses (S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep\nArchive), see Storage classes for archiving objects in the Amazon S3 User Guide.\nIf you currently use the S3 Glacier service and want to learn more, we recommend that you begin\nby reading the following sections:\n\u2022 What is Amazon S3 Glacier \u2013 The rest of this section describes the underlying data model, the\noperations it supports, and the AWS SDKs that you can use to interact with the service.\n\u2022 Getting Started \u2013 The Getting Started with Amazon S3 Glacier section walks you through the\nprocess of creating a vault, uploading archives, creating jobs to download archives, retrieving the\njob output, and deleting archives.\nImportant\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI)\nDo You Currently Use S3 Glacier? API Version 2012-06-01 1",
      "start_idx": 34849,
      "end_idx": 36462,
      "metadata": {
        "num_sentences": 13,
        "num_words": 270,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data archiving",
            "long-term backup",
            "vaults",
            "S3 Glacier pricing",
            "storage classes",
            "AWS CLI",
            "archives",
            "SDKs",
            "retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Glacier Instant Retrieval",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "AWS Command Line Interface (AWS CLI)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Archiving",
          "secondary_categories": [
            "AWS Services",
            "Data Backup"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The document provides an overview of Amazon S3 Glacier, a low-cost data archiving service, and details its data model, operations, and access methods. It also discusses storage classes and the use of AWS CLI for archive operations.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is Amazon S3 Glacier and its purpose?",
            "How can I perform archive operations in S3 Glacier?",
            "What are the supported storage classes in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage and Archiving]",
        "tf_idf_keywords": [
          "AWS CLI",
          "data archiving",
          "archives",
          "retrieval",
          "S3 Glacier Instant Retrieval",
          "vaults",
          "long-term backup",
          "S3 Glacier Flexible Retrieval",
          "S3 Glacier pricing",
          "AWS Command Line Interface (AWS CLI)",
          "SDKs",
          "Amazon S3 Glacier",
          "storage classes",
          "S3 Glacier Deep Archive"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_11",
      "text": "Amazon S3 Glacier Developer Guide\nor write code. There is no console support for archive operations. For example, to upload\ndata, such as photos, videos, and other documents, you must either use the AWS CLI or\nwrite code to make requests, by using either the REST API directly or by using the AWS\nSDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For\nexamples of using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with\nthe AWS Command Line Interface.\nBeyond the getting started section, you'll probably want to learn more about S3 Glacier\noperations. The following sections provide detailed information about working with S3 Glacier by\nusing the REST API and the AWS SDKs for Java and Microsoft .NET:\n\u2022 Using the AWS SDKs with Amazon S3 Glacier\nThis section provides an overview of the AWS SDKs used in various code examples in this guide.\nA review of this section will help when reading the following sections. It includes an overview\nof the high-level and the low-level APIs that these SDKs offer, when to use them, and common\nsteps for running the code examples provided in this guide.\n\u2022 Working with Vaults in Amazon S3 Glacier\nThis section provides details of various vault operations, such as creating a vault, retrieving vault\nmetadata, using jobs to retrieve vault inventory, and configuring vault notifications. In addition\nto using the S3 Glacier console, you can use the AWS SDKs for various vault operations. This\nsection describes the API and provides working samples by using the AWS SDK for Java and the\nAWS SDK for .NET.\n\u2022 Working with Archives in Amazon S3 Glacier\nThis section provides details of archive operations, such as uploading an archive in a single\nrequest or using a multipart upload operation to upload large archives in parts. The section also\nexplains how to create jobs to download archives asynchronously. The section provides examples\nby using the AWS SDK for Java and the AWS SDK for .NET.\n\u2022 API Reference for Amazon S3 Glacier\nDo You Currently Use S3 Glacier? API Version 2012-06-01 2",
      "start_idx": 36464,
      "end_idx": 38622,
      "metadata": {
        "num_sentences": 18,
        "num_words": 371,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "vault operations",
            "archive operations",
            "multipart upload",
            "asynchronous download",
            "vault inventory",
            "vault notifications",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDKs"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use Amazon S3 Glacier for archive and vault operations through AWS CLI, REST API, and AWS SDKs for Java and .NET, with examples provided for each method.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I upload archives to Amazon S3 Glacier?",
            "What are the vault operations supported by Amazon S3 Glacier?",
            "Which APIs and SDKs are available for working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault operations",
          "AWS SDKs",
          "asynchronous download",
          "AWS CLI",
          "AWS SDK for .NET",
          "multipart upload",
          "REST API",
          "vault inventory",
          "archive operations",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "API Version 2012-06-01",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_12",
      "text": "Amazon S3 Glacier Developer Guide\nS3 Glacier is a RESTful service. This section describes the REST operations, including the syntax,\nand example requests and responses for all the operations. The AWS SDK libraries wrap this API,\nsimplifying your programming tasks.\nAmazon S3 Glacier Data Model\nThe Amazon S3 Glacier data model core components include vaults and archives. S3 Glacier is\na REST-based web service. In terms of REST, vaults and archives are the resources. In addition,\nthe S3 Glacier data model includes job and notification-configuration resources. These resources\ncomplement the core resources.\nTopics\n\u2022 Vault\n\u2022 Archive\n\u2022 Job\n\u2022 Notification Configuration\nVault\nIn S3 Glacier, a vault is a container for storing archives. A vault is similar to an Amazon S3 bucket.\nWhen you create a vault, you specify a name and choose an AWS Region where you want to create\nthe vault.\nEach vault resource has a unique address. The general form is:\nhttps://region-specific-endpoint/account-id/vaults/vault-name\nFor example, suppose that you create a vault (examplevault) in the US West (Oregon) Region in\nyour account with the ID 111122223333. You can address this vault by using the following URI:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault\nHere is what the various components of the URI mean:\n\u2022 glacier.us-west-2.amazonaws.com identifies the US West (Oregon) Region.\n\u2022 111122223333 is the AWS account ID that owns the vault.\nData Model API Version 2012-06-01 3",
      "start_idx": 38624,
      "end_idx": 40114,
      "metadata": {
        "num_sentences": 16,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "RESTful service",
            "vault",
            "archive",
            "job",
            "notification configuration",
            "AWS Region",
            "URI",
            "endpoint",
            "AWS account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "job",
            "notification configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "REST API",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The document provides an overview of Amazon S3 Glacier, focusing on its REST API operations, data model components (vaults, archives, jobs, and notification configurations), and example URI structures for accessing vaults.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the data model used in Amazon S3 Glacier?",
            "How do I construct a URI to access an S3 Glacier vault?",
            "What are the core resources in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive",
          "vault",
          "URI",
          "notification configuration",
          "AWS Region",
          "job",
          "Amazon S3 Glacier",
          "RESTful service",
          "endpoint",
          "S3 Glacier",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_13",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 vaults refers to the collection of vaults that are owned by the AWS account.\n\u2022 examplevault identifies a specific vault in the vaults collection.\nAn AWS account can create vaults in any supported AWS Region. For list of supported AWS\nRegions, see Accessing Amazon S3 Glacier. Within a Region, an account must use unique vault\nnames. An AWS account can create same-named vaults in different Regions.\nYou can store an unlimited number of archives in a vault. Depending on your business or\napplication needs, you can store these archives in one vault or multiple vaults.\nS3 Glacier supports various vault operations. Vault operations are Region-specific. For example,\nwhen you create a vault, you create it in a specific Region. When you request a vault list, you\nrequest it from a specific AWS Region, and the resulting list includes only vaults created in that\nspecific Region.\nArchive\nAn archive can be any data, such as a photo, video, or document. An archive is similar to an Amazon\nS3 object, and is the base unit of storage in S3 Glacier. Each archive has a unique ID and an\noptional description. You can specify this optional description only during the upload of an archive.\nS3 Glacier assigns the archive an ID, which is unique in the AWS Region in which the archive is\nstored.\nEach archive has a unique address. The general form is as follows:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/archives/archive-id\nThe following is an example URI of an archive stored in the examplevault vault in the US West\n(Oregon) Region in account 111122223333:\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/\nexamplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can store an unlimited number of archives in a vault.\nJob\nAn S3 Glacier job can retrieve an archive, or get an inventory of a vault.\nArchive API Version 2012-06-01 4",
      "start_idx": 40116,
      "end_idx": 42113,
      "metadata": {
        "num_sentences": 21,
        "num_words": 298,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "vaults",
            "archives",
            "AWS Region",
            "S3 Glacier",
            "unique ID",
            "endpoint",
            "URI",
            "archive operations",
            "inventory",
            "job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account",
            "examplevault",
            "US West (Oregon) Region",
            "Archive API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains Amazon S3 Glacier's vaults, archives, and jobs, detailing how they are organized, stored, and accessed within specific AWS Regions. It includes examples of archive URIs and describes key operations like retrieving archives and vault inventories.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How are vaults organized in Amazon S3 Glacier?",
            "What is the structure of an archive URI in S3 Glacier?",
            "What operations can be performed on vaults in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "examplevault",
          "archives",
          "US West (Oregon) Region",
          "vaults",
          "URI",
          "archive operations",
          "inventory",
          "AWS Region",
          "job",
          "Amazon S3 Glacier",
          "AWS account",
          "endpoint",
          "S3 Glacier",
          "Archive API Version 2012-06-01",
          "unique ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_14",
      "text": "Amazon S3 Glacier Developer Guide\nRetrieving archives and vault inventories (lists of archives) are asynchronous operations in S3\nGlacier, in which you first initiate a job, and then download the job output after S3 Glacier\ncompletes the job.\nNote\nS3 Glacier offers a cold-storage data-archival solution. If your application needs a storage\nsolution that requires real-time data retrieval, you might consider using Amazon S3. For\nmore information, see Amazon Simple Storage Service (Amazon S3).\nTo initiate a vault inventory job, you provide a vault name. Archive retrieval jobs require both the\nvault name and the archive ID. You can also provide an optional job description to help identify the\njobs.\nArchive retrieval and vault inventory jobs are associated with a vault. A vault can have multiple jobs\nin progress at any point in time. When you send a job request (initiate a job), S3 Glacier returns to\nyou a job ID to track the job. Each job is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/jobs/job-id\nThe following is an example of a job associated with an examplevault vault in the US West\n(Oregon) Region in account 111122223333.\nhttps://glacier.us-west-2.amazonaws.com/111122223333/vaults/examplevault/jobs/\nHkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nFor each job, S3 Glacier maintains information, such as the job type, description, creation date,\ncompletion date, and job status. You can obtain information about a specific job or obtain a list\nof all your jobs associated with a vault. The list of jobs that S3 Glacier returns includes all the in-\nprogress and recently finished jobs.\nNotification Configuration\nBecause jobs take time to run, S3 Glacier supports a notification mechanism to notify you when a\njob is completed. You can configure a vault to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when a job is completed. You can specify one Amazon SNS topic per\nvault in the notification configuration.\nNotification Configuration API Version 2012-06-01 5",
      "start_idx": 42115,
      "end_idx": 44232,
      "metadata": {
        "num_sentences": 17,
        "num_words": 313,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "archive retrieval",
            "job ID",
            "Amazon SNS",
            "notification configuration",
            "cold-storage",
            "asynchronous operations",
            "URI",
            "Amazon S3"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Simple Storage Service",
            "Amazon SNS",
            "US West (Oregon) Region",
            "account-id"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archival",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon S3"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to retrieve archives and vault inventories in Amazon S3 Glacier using asynchronous jobs, and configure notifications via Amazon SNS upon job completion.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault inventory job in S3 Glacier?",
            "What is the URI format for tracking S3 Glacier jobs?",
            "How can I configure notifications for completed S3 Glacier jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "cold-storage",
          "archive retrieval",
          "Amazon SNS",
          "Amazon Simple Storage Service",
          "Amazon S3",
          "US West (Oregon) Region",
          "URI",
          "vault inventory",
          "account-id",
          "notification configuration",
          "Amazon S3 Glacier",
          "job ID",
          "asynchronous operations",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_15",
      "text": "Amazon S3 Glacier Developer Guide\nS3 Glacier stores the notification configuration as a JSON document. The following is an example\nvault notification configuration:\n{\n\"Topic\": \"arn:aws:sns:us-west-2:111122223333:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nNotification configurations are associated with vaults; you can have one for each vault. Each\nnotification configuration resource is uniquely identified by a URI of the form:\nhttps://region-specific-endpoint/account-id/vaults/vault-name/notification-\nconfiguration\nS3 Glacier supports operations to set, get, and delete a notification configuration. When you delete\na notification configuration, no notifications are sent when any data retrieval operation on the\nvault is completed.\nSupported Operations in S3 Glacier\nTo work with vaults and archives (see Amazon S3 Glacier Data Model), Amazon S3 Glacier supports\na set of operations. Among all the supported operations, only the following operations are\nasynchronous:\n\u2022 Retrieving an archive\n\u2022 Retrieving a vault inventory (list of archives)\nThese operations require you to first initiate a job and then download the job output. The following\nsections summarize the S3 Glacier operations.\nVault Operations\nS3 Glacier provides operations to create and delete vaults. You can obtain a vault description for a\nspecific vault or for all vaults in an AWS Region. The vault description provides information, such\nas the creation date, the number of archives in the vault, the total size in bytes used by all the\narchives in the vault, and the date that S3 Glacier generated the vault inventory. S3 Glacier also\nprovides operations to set, retrieve, and delete a notification configuration on the vault. For more\ninformation, see Working with Vaults in Amazon S3 Glacier.\nSupported Operations API Version 2012-06-01 6",
      "start_idx": 44234,
      "end_idx": 46090,
      "metadata": {
        "num_sentences": 13,
        "num_words": 263,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "notification configuration",
            "JSON document",
            "SNS topic",
            "asynchronous operations",
            "vault inventory",
            "archive retrieval",
            "AWS Region",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault notification configuration",
            "SNS topic",
            "AWS Region",
            "API version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document explains how S3 Glacier handles vault notification configurations, supported operations, and asynchronous processes like archive and inventory retrievals. It also provides details about vault operations and API support.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I configure notifications for an S3 Glacier vault?",
            "What are the asynchronous operations supported by S3 Glacier?",
            "What information is included in a vault description?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "Amazon SNS",
          "vault",
          "JSON document",
          "vault inventory",
          "notification configuration",
          "AWS Region",
          "Amazon S3 Glacier",
          "vault notification configuration",
          "API version 2012-06-01",
          "asynchronous operations",
          "SNS topic",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_16",
      "text": "Amazon S3 Glacier Developer Guide\nArchive Operations\nS3 Glacier provides operations for you to upload and delete archives. You cannot update an\nexisting archive; you must delete the existing archive and upload a new archive. Each time that you\nupload an archive, S3 Glacier generates a new archive ID. For more information, see Working with\nArchives in Amazon S3 Glacier.\nJobs\nYou can initiate an S3 Glacier job to perform a retrieval on an archive or get an inventory of a vault.\nThe following are the types of S3 Glacier jobs:\n\u2022 archive-retrieval \u2013 Retrieve an archive.\nFor more information, see Downloading an Archive in S3 Glacier.\n\u2022 inventory-retrieval \u2013 Inventory a vault.\nFor more information, see Downloading a Vault Inventory in Amazon S3 Glacier.\nAccessing Amazon S3 Glacier\nAmazon S3 Glacier is a RESTful web service that uses HTTP and HTTPS as a transport protocol and\nJavaScript Object Notation (JSON) as a message-serialization format. Your application code can\nmake requests directly to the S3 Glacier web service API. When using the REST API directly, you\nmust write the necessary code to sign and authenticate your requests. For more information about\nthe API, see API Reference for Amazon S3 Glacier.\nAlternatively, you can simplify application development by using the AWS SDKs that wrap the S3\nGlacier REST API calls. You provide your credentials, and these libraries take care of authentication\nand request signing. For more information about using the AWS SDKs, see Using the AWS SDKs\nwith Amazon S3 Glacier.\nS3 Glacier also provides a console. However, all archive and job operations require you to write\ncode and make requests by using either the REST API directly or the AWS SDK wrapper libraries. To\naccess the S3 Glacier console, go to S3 Glacier Console.\nArchive Operations API Version 2012-06-01 7",
      "start_idx": 46092,
      "end_idx": 47918,
      "metadata": {
        "num_sentences": 20,
        "num_words": 300,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive operations",
            "retrieval",
            "vault inventory",
            "REST API",
            "AWS SDKs",
            "authentication",
            "JSON",
            "transport protocol",
            "console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Glacier REST API",
            "AWS SDKs",
            "S3 Glacier Console",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Web Services",
            "APIs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains archive operations, job types, and access methods for Amazon S3 Glacier, including using the REST API and AWS SDKs for interactions. It also highlights the need for code-based operations for archives and jobs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I upload and delete archives in Amazon S3 Glacier?",
            "What types of jobs can be initiated in S3 Glacier?",
            "How do I access Amazon S3 Glacier using the REST API or AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "S3 Glacier Console",
          "transport protocol",
          "retrieval",
          "REST API",
          "vault inventory",
          "archive operations",
          "authentication",
          "console",
          "Amazon S3 Glacier",
          "S3 Glacier REST API",
          "JSON",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_17",
      "text": "Amazon S3 Glacier Developer Guide\nRegions and Endpoints\nYou create a vault in a specific AWS Region. You always send your S3 Glacier requests to an\nendpoint specific to an AWS Region. For a list of the AWS Regions supported by S3 Glacier, see\nAmazon S3 Glacier endpoints and quotas in the AWS General Reference.\nRegions and Endpoints API Version 2012-06-01 8",
      "start_idx": 47920,
      "end_idx": 48278,
      "metadata": {
        "num_sentences": 4,
        "num_words": 62,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Regions",
              "Endpoints",
              "API Version"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS Region",
            "endpoint",
            "vault",
            "API Version",
            "AWS General Reference",
            "quotas",
            "requests"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "vault",
            "API Version 2012-06-01",
            "AWS General Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Regions"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to create a vault in a specific AWS Region and send requests to region-specific endpoints. It references supported AWS Regions and provides a link to the AWS General Reference for endpoints and quotas.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What are the endpoints for Amazon S3 Glacier in various AWS Regions?",
            "Where can I find quotas for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version",
          "AWS Regions",
          "vault",
          "quotas",
          "requests",
          "AWS Region",
          "AWS General Reference",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_18",
      "text": "Amazon S3 Glacier Developer Guide\nGetting Started with Amazon S3 Glacier\nYou can get started with Amazon S3 Glacier (S3 Glacier) by working with vaults and archives. A\nvault is a container for storing archives, and an archive is any object, such as a photo, video, or\ndocument, that you store in a vault. An archive is the base unit of storage in S3 Glacier. This getting\nstarted exercise provides instructions for you to explore basic S3 Glacier operations on vaults and\narchives. For more information about these resources, see the Amazon S3 Glacier Data Model\nsection.\nIn the getting started exercise, you will create a vault, upload and download an archive, and then\ndelete the archive and the vault. You can do all these operations programmatically. However, the\ngetting started exercise uses the S3 Glacier management console to create and delete a vault.\nFor uploading and downloading an archive, this getting started section uses the high-level API\nfor the AWS SDK for Java and the AWS SDK for .NET. The high-level API provides a simplified\nprogramming experience when working with S3 Glacier. For more information about using the\nhigh-level API with the AWS SDKs, see Using the AWS SDKs with Amazon S3 Glacier.\nImportant\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nThis getting started exercise provides code examples in Java and C# for you to upload and\ndownload an archive. The last section of the getting started exercise provides steps where you can\nlearn more about the developer experience with S3 Glacier.\nTopics\n\u2022 Step 1: Before You Begin with S3 Glacier\nAPI Version 2012-06-01 9",
      "start_idx": 48280,
      "end_idx": 50550,
      "metadata": {
        "num_sentences": 21,
        "num_words": 387,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Getting Started",
              "Step-by-Step Instructions",
              "API Usage"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "archive",
            "AWS SDK",
            "AWS CLI",
            "high-level API",
            "REST API",
            "management console",
            "Java",
            "C#"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "AWS SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a getting started guide for Amazon S3 Glacier, focusing on vault and archive operations using the AWS CLI and high-level APIs in Java and C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and delete a vault in Amazon S3 Glacier?",
            "What tools can I use to upload and download archives to S3 Glacier?",
            "Does S3 Glacier support archive operations through the console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS CLI",
          "archive",
          "vault",
          "REST API",
          "C#",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Java",
          "management console",
          "high-level API",
          "AWS SDK",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_19",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Step 2: Create a Vault in S3 Glacier\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Step 4: Download an Archive from a Vault in S3 Glacier\n\u2022 Step 5: Delete an Archive from a Vault in S3 Glacier\n\u2022 Step 6: Delete a Vault in S3 Glacier\n\u2022 Where Do I Go From Here?\nStep 1: Before You Begin with S3 Glacier\nBefore you can start with this exercise, you must sign up for an AWS account (if you don't already\nhave one), and then download one of the AWS SDKs. See the following sections for instructions.\nTopics\n\u2022 Set Up an AWS account and an Administrator User\n\u2022 Download the Appropriate AWS SDK\nSet Up an AWS account and an Administrator User\nIf you have not already done so, you must sign up for an AWS account and create an administrator\nuser in the account.\nTo complete the setup, follow the instructions in the following topics.\nSet Up an AWS account and Create an Administrator User\nSign up for AWS\nWhen you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up\nfor all services in AWS, including S3 Glacier. You are charged only for the services that you use. For\nmore information about S3 Glacier usage rates, see the Amazon S3 Glacier pricing page.\nIf you already have an AWS account, skip to Download the Appropriate AWS SDK. If you don't have\nan AWS account, use the following procedure to create one.\nIf you do not have an AWS account, complete the following steps to create one.\nStep 1: Before You Begin API Version 2012-06-01 10",
      "start_idx": 50552,
      "end_idx": 52058,
      "metadata": {
        "num_sentences": 12,
        "num_words": 284,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS account",
            "Vault",
            "Archive",
            "Administrator User",
            "AWS SDK",
            "Setup",
            "Sign up",
            "Pricing",
            "Delete"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account",
            "AWS SDK",
            "Administrator User",
            "Amazon Web Services"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Setup",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for setting up and managing Amazon S3 Glacier, including creating a vault, uploading and downloading archives, and account setup requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What steps are needed to set up an AWS account for S3 Glacier?",
            "How can I upload an archive to a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Sign up",
          "Vault",
          "Delete",
          "Amazon Web Services",
          "Setup",
          "Archive",
          "Amazon S3 Glacier",
          "Administrator User",
          "Pricing",
          "AWS SDK",
          "AWS account",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_20",
      "text": "Amazon S3 Glacier Developer Guide\nTo sign up for an AWS account\n1. Open https://portal.aws.amazon.com/billing/signup.\n2. Follow the online instructions.\nPart of the sign-up procedure involves receiving a phone call and entering a verification code\non the phone keypad.\nWhen you sign up for an AWS account, an AWS account root user is created. The root user\nhas access to all AWS services and resources in the account. As a security best practice, assign\nadministrative access to a user, and use only the root user to perform tasks that require root\nuser access.\nTo create an administrator user, choose one of the following options.\nChoose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\nIn IAM Use short-term Following the instructions Configure programmatic\nIdentity credentials to access in Getting started in the access by Configuring the\nCenter AWS. AWS IAM Identity Center AWS CLI to use AWS IAM\nUser Guide. Identity Center in the AWS\n(RecommenT his aligns with the\nCommand Line Interface User\nded) security best practices\nGuide.\n. For information\nabout best practices\n, see Security best\npractices in IAM in the\nIAM User Guide.\nIn IAM Use long-term Following the instructions Configure programmatic\ncredentials to access in Creating your first IAM access by Managing access\nAWS.\nSet Up an AWS account API Version 2012-06-01 11",
      "start_idx": 52060,
      "end_idx": 53401,
      "metadata": {
        "num_sentences": 16,
        "num_words": 221,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Security"
            ]
          },
          "keywords": [
            "AWS account",
            "root user",
            "administrative access",
            "IAM Identity Center",
            "security best practices",
            "programmatic access",
            "IAM User Guide",
            "AWS CLI",
            "IAM credentials",
            "verification code"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account root user",
            "IAM Identity Center",
            "AWS CLI",
            "IAM User Guide"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Account Management",
          "secondary_categories": [
            "Identity and Access Management",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM Identity Center",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "IAM User Guide"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for signing up for an AWS account, setting up an administrator user, and following security best practices for managing access using IAM Identity Center or long-term credentials.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I sign up for an AWS account?",
            "What are the security best practices for managing AWS root user access?",
            "How can I configure programmatic access using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Account Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "administrative access",
          "AWS CLI",
          "IAM credentials",
          "AWS IAM Identity Center",
          "IAM Identity Center",
          "security best practices",
          "AWS account root user",
          "Amazon S3 Glacier",
          "root user",
          "programmatic access",
          "verification code",
          "AWS account"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_21",
      "text": "Amazon S3 Glacier Developer Guide\nChoose To By You can also\none\nway to\nmanage\nyour\nadministr\nator\n(Not admin user and user group keys for IAM users in the IAM\nrecommend in the IAM User Guide. User Guide.\ned)\nDownload the Appropriate AWS SDK\nTo try the getting started exercise, you must decide which programming language you want to use,\nand then download the appropriate AWS SDK for your development platform.\nThe getting started exercise provides examples in Java and C#.\nDownloading the AWS SDK for Java\nTo test the Java examples in this developer guide, you need the AWS SDK for Java. You have the\nfollowing download options:\n\u2022 If you are using Eclipse, you can download and install the AWS Toolkit for Eclipse by using the\nupdate site http://aws.amazon.com/eclipse/. For more information, see AWS Toolkit for Eclipse.\n\u2022 If you are using any other IDE to create your application, download the AWS SDK for Java.\nDownloading the AWS SDK for .NET\nTo test the C# examples in this developer guide, you need the AWS SDK for .NET. You have the\nfollowing download options:\n\u2022 If you are using Visual Studio, you can install both the AWS SDK for .NET and the AWS Toolkit for\nVisual Studio. The toolkit provides AWS Explorer for Visual Studio and project templates that you\ncan use for development. To download the AWS SDK for .NET, go to http://aws.amazon.com/\nsdkfornet. By default, the installation script installs both the AWS SDK and the AWS Toolkit for\nVisual Studio. To learn more about the toolkit, see the AWS Toolkit for Visual Studio User Guide.\nDownload the Appropriate AWS SDK API Version 2012-06-01 12",
      "start_idx": 53403,
      "end_idx": 55011,
      "metadata": {
        "num_sentences": 15,
        "num_words": 278,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Download Instructions",
              "Setup Guidance"
            ]
          },
          "keywords": [
            "AWS SDK",
            "Java",
            "C#",
            "Eclipse",
            "Visual Studio",
            "AWS Toolkit",
            "AWS Explorer",
            "project templates",
            "installation script",
            "development platform"
          ],
          "entities": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS Toolkit for Eclipse",
            "AWS Toolkit for Visual Studio",
            "AWS Explorer"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS SDK Setup",
          "secondary_categories": [
            "Programming Languages",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Toolkit for Eclipse",
            "AWS Toolkit for Visual Studio",
            "AWS Explorer"
          ]
        },
        "semantic": {
          "summary": "This guide provides instructions for downloading and setting up the AWS SDK for Java and .NET, including integration with IDEs like Eclipse and Visual Studio.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download the AWS SDK for Java?",
            "What tools are available for integrating AWS SDK with Visual Studio?",
            "Where can I find the AWS Toolkit for Eclipse?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [AWS SDK Setup]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS Toolkit for Visual Studio",
          "project templates",
          "C#",
          "installation script",
          "AWS Explorer",
          "AWS Toolkit for Eclipse",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Java",
          "Visual Studio",
          "AWS SDK",
          "AWS Toolkit",
          "development platform",
          "Eclipse"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_22",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 If you are using any other IDE to create your application, you can use the same link provided in\nthe preceding step and install only the AWS SDK for .NET.\nStep 2: Create a Vault in S3 Glacier\nA vault is a container for storing archives. Your first step is to create a vault in one of the supported\nAWS Regions. For a list of the AWS Regions that are supported by Amazon S3 Glacier, see Amazon\nS3 Glacier endpoints and quotas in the AWS General Reference.\nYou can create vaults programmatically or by using the S3 Glacier console. This section uses the\nconsole to create a vault.\nTo create a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. In the left navigation pane, choose Vaults.\n3. Choose Create vault.\nThe Create vault page opens.\n4. Under Select a Region, select an AWS Region from the Region selector. Your vault will be\nlocated in the Region that you select.\n5. For Vault name, enter a name for your vault.\nThe following are the vault-naming requirements:\n\u2022 A vault name must be unique within an AWS account and the AWS Region in which the vault\nis created.\n\u2022 A vault name must be between 1 and 255 characters long.\n\u2022 A vault name can contain only the following characters: a\u2013z, A\u2013Z, 0\u20139, _ (underscore), -\n(hyphen), and . (period).\n6. Under Event notifications, to turn on or off notifications on a vault for when a job is\ncompleted, choose one of the following settings:\n\u2022 Turn off notifications \u2013 Notifications are turned off, and notifications are not sent to an\nAmazon Simple Notification Service (Amazon SNS) topic when a specified job is completed.\nStep 2: Create a Vault API Version 2012-06-01 13",
      "start_idx": 55013,
      "end_idx": 56744,
      "metadata": {
        "num_sentences": 25,
        "num_words": 308,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Configuration"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS Region",
            "notifications",
            "Amazon SNS"
          ],
          "entities": [
            "AWS Management Console",
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Event notifications",
            "Vault name"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Application Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using the AWS Management Console, including steps for naming and configuring notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What are the naming requirements for an S3 Glacier vault?",
            "How can I configure notifications for an S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Amazon SNS",
          "notifications",
          "Vault name",
          "Event notifications",
          "vault",
          "AWS Management Console",
          "AWS Region",
          "Amazon S3 Glacier",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_23",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Turn on notifications \u2013 Notifications are turned on, and notifications are sent to the\nprovided Amazon SNS topic when a specified job is completed.\nIf you chose Turn on notifications, see Configuring Vault Notifications by Using the Amazon\nS3 Glacier Console.\n7. If the AWS Region and vault name are correct, then choose Create vault.\nYour new vault is now listed on the Vaults page in the S3 Glacier console.\nStep 3: Upload an Archive to a Vault in S3 Glacier\nIn this step, you'll upload a sample archive to the vault that you created in the preceding step (see\nStep 2: Create a Vault in S3 Glacier). Depending on the development platform that you're using,\nchoose one of the links at the end of this section.\nImportant\nAny archive operation, such as upload, download, or deletion, requires you to use the\nAWS Command Line Interface (CLI) or write code. There is no console support for archive\noperations. For example, to upload data, such as photos, videos, and other documents, you\nmust either use the AWS CLI or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nAn archive is any object, such as a photo, video, or document, that you store in a vault. An archive\nis the base unit of storage in S3 Glacier. You can upload an archive in a single request. For large\narchives, S3 Glacier provides a multipart upload API operation that enables you to upload an\narchive in parts.\nIn this getting started section, you upload a sample archive in a single request. For this exercise,\nyou specify a file that is smaller in size. For larger files, multipart upload is suitable. For more\ninformation, see Uploading Large Archives in Parts (Multipart Upload).\nStep 3: Upload an Archive to a Vault API Version 2012-06-01 14",
      "start_idx": 56746,
      "end_idx": 58820,
      "metadata": {
        "num_sentences": 22,
        "num_words": 367,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Instructional",
              "Important Note"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "AWS CLI",
            "multipart upload",
            "REST API",
            "AWS SDKs",
            "notifications",
            "SNS topic",
            "upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AWS SDKs",
            "Amazon SNS",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides a step-by-step process for creating a vault, enabling notifications, and uploading an archive using the AWS CLI or custom code.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What tools can I use to upload an archive to S3 Glacier?",
            "How is multipart upload used for large archives in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS SDKs",
          "AWS CLI",
          "archive",
          "notifications",
          "Amazon SNS",
          "vault",
          "multipart upload",
          "REST API",
          "Amazon S3 Glacier",
          "upload",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_24",
      "text": "Amazon S3 Glacier Developer Guide\nTopics\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Upload an Archive to a Vault in S3 Glacier by Using the AWS SDK for .NET\nUpload an Archive to a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following Java code example uses the high-level API of the AWS SDK for Java to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class.\n\u2022 The example uses the upload API operation of the ArchiveTransferManager class from the\nhigh-level API of the AWS SDK for Java.\n\u2022 The example uses the US West (Oregon) Region (us-west-2).\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the name of the archive file that\nyou want to upload.\nNote\nAmazon S3 Glacier keeps an inventory of all the archives in your vaults. When you upload\nthe archive in the following example, it will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday.\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run in\nthe AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nUpload an Archive by Using Java API Version 2012-06-01 15",
      "start_idx": 58822,
      "end_idx": 60235,
      "metadata": {
        "num_sentences": 12,
        "num_words": 253,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "upload API operation",
            "US West (Oregon) Region",
            "vault inventory",
            "high-level API",
            "Eclipse",
            "Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for uploading an archive to an Amazon S3 Glacier vault using the high-level API of AWS SDK for Java, with details on setup and region configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to an S3 Glacier vault using AWS SDK for Java?",
            "What is the role of ArchiveTransferManager in the AWS SDK for Java?",
            "Why doesn't my uploaded archive appear immediately in the S3 Glacier console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ArchiveTransferManager",
          "US West (Oregon) Region",
          "vault inventory",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "upload API operation",
          "Code Examples Repository",
          "high-level API",
          "AmazonGlacierClient",
          "Eclipse"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_27",
      "text": "Amazon S3 Glacier Developer Guide\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB.\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\n}\nUpload an Archive by Using Java API Version 2012-06-01 18",
      "start_idx": 62919,
      "end_idx": 64056,
      "metadata": {
        "num_sentences": 3,
        "num_words": 151,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Checksum Calculation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA-256",
            "Tree Hash",
            "Java API",
            "checksum",
            "chunk",
            "file stream",
            "MessageDigest",
            "1 MB",
            "hash computation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA-256",
            "Java API",
            "FileInputStream",
            "MessageDigest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "MessageDigest"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute an SHA-256 tree hash for files using Java, specifically for use with Amazon S3 Glacier. It includes code snippets and a breakdown of the chunk-based hashing process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute an SHA-256 tree hash for a file in Java?",
            "What is the process for calculating chunk-based checksums?",
            "How does Amazon S3 Glacier handle file integrity verification?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Tree Hash",
          "hash computation",
          "file stream",
          "MessageDigest",
          "chunk",
          "FileInputStream",
          "checksum",
          "Amazon S3 Glacier",
          "Java API",
          "SHA-256",
          "1 MB"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_29",
      "text": "Amazon S3 Glacier Developer Guide\ncurrLvlHashes[j] = prevLvlHashes[i];\n}\n}\nprevLvlHashes = currLvlHashes;\n}\nreturn prevLvlHashes[0];\n}\n/**\n* Returns the hexadecimal representation of the input byte array\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (byte datum : data) {\nString hex = Integer.toHexString(datum & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero.\nsb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for Java 2.x API Reference.\nUpload an Archive to a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to upload a\nsample archive to the vault. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint.\n\u2022 The code example uses the US West (Oregon) Region (us-west-2).\nUpload an Archive by Using .NET API Version 2012-06-01 20",
      "start_idx": 65179,
      "end_idx": 66236,
      "metadata": {
        "num_sentences": 6,
        "num_words": 170,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon)",
            "Vault",
            "UploadArchive",
            "toHex",
            "byte array",
            "Region endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "US West (Oregon)",
            "ArchiveTransferManager"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming APIs",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on uploading archives to Amazon S3 Glacier using AWS SDKs for Java and .NET, including code examples and API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the role of ArchiveTransferManager in AWS SDK?",
            "Which AWS region is used in the provided code example?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS SDK for .NET",
          "toHex",
          "ArchiveTransferManager",
          "Vault",
          "byte array",
          "US West (Oregon)",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Region endpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_30",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 The example uses the Upload API operation of the ArchiveTransferManager class to upload\nyour archive. For small archives, this operation uploads the archive directly to S3 Glacier. For\nlarger archives, this operation uses the multipart upload API operation in S3 Glacier to split\nthe upload into multiple parts for better error recovery, if any errors are encountered while\nstreaming the data to S3 Glacier.\nFor step-by-step instructions on how to run the following example, see Running Code Examples.\nYou must update the code as shown with the name of your vault and the name of the archive file\nto upload.\nNote\nS3 Glacier keeps an inventory of all the archives in your vaults. When you upload the\narchive in the following example, the archive will not appear in a vault in the management\nconsole until the vault inventory has been updated. This update usually happens once a\nday.\nExample \u2014 Uploading an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to\nupload ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new\nArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive.\nUpload an Archive by Using .NET API Version 2012-06-01 21",
      "start_idx": 66238,
      "end_idx": 67745,
      "metadata": {
        "num_sentences": 10,
        "num_words": 230,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Code"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "ArchiveTransferManager",
            "multipart upload",
            "vault inventory",
            "AWS SDK for .NET",
            "Upload API",
            "archive",
            "vault",
            "Amazon RegionEndpoint",
            "management console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AWS SDK for .NET",
            "Amazon.RegionEndpoint.USWest2",
            "vault inventory"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to upload archives to Amazon S3 Glacier, including both small and large file handling with the ArchiveTransferManager class.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the role of the ArchiveTransferManager in uploading archives?",
            "How does S3 Glacier handle large archives during upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "Upload API",
          "archive",
          "multipart upload",
          "vault",
          "Amazon RegionEndpoint",
          "vault inventory",
          "Amazon S3 Glacier",
          "Amazon.RegionEndpoint.USWest2",
          "management console",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_31",
      "text": "Amazon S3 Glacier Developer Guide\nstring archiveId = manager.Upload(vaultName, \"getting started archive\ntest\", archiveToUpload).ArchiveId;\nConsole.WriteLine(\"Copy and save the following Archive ID for the next\nstep.\");\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nStep 4: Download an Archive from a Vault in S3 Glacier\nIn this step, you'll download the sample archive that you uploaded previously in Step 3: Upload an\nArchive to a Vault in S3 Glacier.\nImportant\nAmazon S3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (CLI) or write\ncode. There is no console support for archive operations. For example, to upload data, such\nas photos, videos, and other documents, you must either use the AWS CLI or write code to\nmake requests, by using either the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nIn general, retrieving your data from S3 Glacier is a two-step process:\n1. Initiate a retrieval job.\n2. After the job is completed, download the bytes of data.\nStep 4: Download an Archive from a Vault API Version 2012-06-01 22",
      "start_idx": 67747,
      "end_idx": 69488,
      "metadata": {
        "num_sentences": 14,
        "num_words": 264,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "AWS CLI",
            "retrieval job",
            "REST API",
            "AWS SDKs",
            "data upload",
            "data download",
            "archive operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "Archive ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload and download archives in Amazon S3 Glacier using AWS CLI or code, as the console does not support archive operations. It includes a code example and emphasizes the two-step process for data retrieval.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What tools can I use to interact with Amazon S3 Glacier?",
            "What is the process for retrieving data from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "data upload",
          "AWS CLI",
          "archive",
          "data download",
          "retrieval job",
          "vault",
          "REST API",
          "archive operations",
          "Amazon S3 Glacier",
          "Archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_32",
      "text": "Amazon S3 Glacier Developer Guide\nTo retrieve an archive from S3 Glacier, you first initiate a job. After the job is completed, you\ndownload the data. For more information about archive retrievals, see Retrieving S3 Glacier\nArchives Using AWS Console.\nThe access time of your request depends on the retrieval option that you choose: Expedited,\nStandard, or Bulk retrievals. For all but the largest archives (250 MB+), archives accessed by using\nExpedited retrievals are typically made available within 1\u20135 minutes. Archives retrieved by using\nStandard retrievals typically are available between 3\u20135 hours. Bulk retrievals typically are available\nwithin 5\u201312 hours. For more information about the various retrieval options, see the S3 Glacier\nFAQ. For information about data retrieval charges, see the S3 Glacier pricing page.\nThe code examples shown in the following topics initiate the job, wait for it to be completed, and\nthen download the archive's data.\nTopics\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Download an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor Java\nThe following Java code example uses the high-level API of the AWS SDK for Java to download the\narchive that you uploaded in the previous step. In the code example, note the following:\n\u2022 The example creates an instance of the AmazonGlacierClient class.\n\u2022 The code uses the US West (Oregon) Region (us-west-2) to match the location where you\ncreated the vault in Step 2: Create a Vault in S3 Glacier.\n\u2022 The example uses the download API operation of the ArchiveTransferManager class from\nthe high-level API of the AWS SDK for Java. The example creates an Amazon Simple Notification\nService (Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. If you created an AWS Identity and Access Management (IAM) admin\nuser as instructed in Step 1: Before You Begin with S3 Glacier, your user has the necessary IAM\npermissions for the creation and use of the Amazon SNS topic and Amazon SQS queue.\nDownload an Archive by Using Java API Version 2012-06-01 23",
      "start_idx": 69490,
      "end_idx": 71691,
      "metadata": {
        "num_sentences": 17,
        "num_words": 372,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "Expedited retrieval",
            "Standard retrieval",
            "Bulk retrieval",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "entities": [
            "S3 Glacier",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve an archive from Amazon S3 Glacier using different retrieval options and provides a Java code example utilizing the AWS SDK for Java to download the archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from S3 Glacier?",
            "What are the retrieval options available in S3 Glacier?",
            "How can I use the AWS SDK for Java to download an archive from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "Amazon SQS",
          "Amazon SNS",
          "ArchiveTransferManager",
          "Standard retrieval",
          "IAM",
          "Expedited retrieval",
          "AWS SDK for Java",
          "Bulk retrieval",
          "AmazonGlacierClient",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_33",
      "text": "Amazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier.\nExample \u2014 Downloading an Archive by Using the AWS SDK for Java\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class AmazonGlacierDownloadArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nDownload an Archive by Using Java API Version 2012-06-01 24",
      "start_idx": 71693,
      "end_idx": 73457,
      "metadata": {
        "num_sentences": 3,
        "num_words": 174,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "ProfileCredentialsProvider",
            "vaultName",
            "archiveId",
            "downloadFilePath",
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to download an archive from Amazon S3 Glacier using the AWS SDK for Java, including setting up credentials and endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using Java?",
            "What is the process for setting up AWS SDK for Java to interact with S3 Glacier?",
            "What are the required endpoints for using Amazon S3 Glacier in the us-west-2 region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "Amazon SNS",
          "ArchiveTransferManager",
          "AmazonSNSClient",
          "archiveId",
          "vaultName",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "downloadFilePath",
          "AmazonSQSClient",
          "ProfileCredentialsProvider",
          "AmazonGlacierClient"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_34",
      "text": "Amazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownload an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to download the\narchive that you uploaded previously in Upload an Archive to a Vault in S3 Glacier by Using the\nAWS SDK for .NET. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint.\n\u2022 The code example uses the US West (Oregon) Region (us-west-2) to match the location where\nyou created the vault previously in Step 2: Create a Vault in S3 Glacier.\n\u2022 The example uses the Download API operation of the ArchiveTransferManager class to\ndownload your archive. The example creates an Amazon Simple Notification Service (Amazon\nSNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is subscribed to that\ntopic. If you created an AWS Identity and Access Management (IAM) admin user as instructed in\nStep 1: Before You Begin with S3 Glacier, your user has the necessary IAM permissions for the\ncreation and use of the Amazon SNS topic and Amazon SQS queue.\n\u2022 The example then initiates the archive retrieval job and polls the queue for the archive to be\navailable. When the archive is available, the download begins. For information about retrieval\ntimes, see Archive Retrieval Options.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier.\nExample \u2014 Download an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nDownload an Archive by Using .NET API Version 2012-06-01 25",
      "start_idx": 73459,
      "end_idx": 75310,
      "metadata": {
        "num_sentences": 12,
        "num_words": 319,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "Download API",
            "Amazon SNS",
            "Amazon SQS",
            "IAM permissions",
            "archive retrieval",
            "vault",
            "Region endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Amazon SNS",
            "Amazon SQS",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a C# code example for downloading an archive from a vault in Amazon S3 Glacier using the AWS SDK for .NET, including setup of necessary AWS resources like Amazon SNS and Amazon SQS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from S3 Glacier using AWS SDK for .NET?",
            "What permissions are required to use Amazon SNS and SQS with S3 Glacier?",
            "How does the ArchiveTransferManager class work in AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Amazon SQS",
          "Amazon SNS",
          "ArchiveTransferManager",
          "archive retrieval",
          "Download API",
          "IAM",
          "vault",
          "Amazon S3 Glacier",
          "IAM permissions",
          "Region endpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_36",
      "text": "Amazon S3 Glacier Developer Guide\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nStep 5: Delete an Archive from a Vault in S3 Glacier\nIn this step, you'll delete the sample archive that you uploaded in Step 3: Upload an Archive to a\nVault in S3 Glacier.\nImportant\nYou cannot delete an archive by using the Amazon S3 Glacier console. Any archive\noperation, such as upload, download, or deletion, requires you to use the AWS Command\nLine Interface (CLI) or write code. To upload data, such as photos, videos, and other\ndocuments, you must either use the AWS CLI or write code to make requests, by using\neither the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nDelete the sample archive by following one of these SDKs or the AWS CLI:\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for Java\n\u2022 Delete an Archive from a Vault in S3 Glacier by Using the AWS SDK for .NET\n\u2022 Delete an Archive in S3 Glacier by Using the AWS CLI\nRelated Sections\n\u2022 Step 3: Upload an Archive to a Vault in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nStep 5: Delete an Archive from a Vault API Version 2012-06-01 27",
      "start_idx": 76794,
      "end_idx": 78208,
      "metadata": {
        "num_sentences": 8,
        "num_words": 262,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "vault",
            "AWS CLI",
            "SDKs",
            "REST API",
            "deletion",
            "upload",
            "download",
            "Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This section explains how to delete an archive from a vault in Amazon S3 Glacier using the AWS CLI or SDKs, as the console does not support this operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive from a vault in S3 Glacier?",
            "What tools are required to perform archive operations in S3 Glacier?",
            "Can archives be deleted using the S3 Glacier console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS CLI",
          "archive",
          "vault",
          "REST API",
          "download",
          "SDKs",
          "deletion",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "upload",
          "Command Line Interface",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_37",
      "text": "Amazon S3 Glacier Developer Guide\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK for\nJava\nThe following code example uses the AWS SDK for Java to delete the archive. In the code, note the\nfollowing:\n\u2022 The DeleteArchiveRequest object describes the delete request, including the vault name\nwhere the archive is located and the archive ID.\n\u2022 The deleteArchive API operation sends the request to Amazon S3 Glacier to delete the\narchive.\n\u2022 The example uses the US West (Oregon) Region (us-west-2).\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You must update the code as shown with the archive ID of the file that\nyou uploaded in Step 3: Upload an Archive to a Vault in S3 Glacier.\nExample \u2014 Deleting an Archive by Using the AWS SDK for Java\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class AmazonGlacierDeleteArchive_GettingStarted {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nDelete an Archive by Using Java API Version 2012-06-01 28",
      "start_idx": 78210,
      "end_idx": 79776,
      "metadata": {
        "num_sentences": 7,
        "num_words": 209,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteArchiveRequest",
            "vault",
            "archive ID",
            "deleteArchive API",
            "US West (Oregon)",
            "Eclipse",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "US West (Oregon)",
            "DeleteArchiveRequest",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide and code example for deleting an archive from an Amazon S3 Glacier vault using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in S3 Glacier using AWS SDK for Java?",
            "What is the role of DeleteArchiveRequest in the deletion process?",
            "How do I configure the AWS SDK for Java to connect to a specific region?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault",
          "US West (Oregon)",
          "deleteArchive API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "ProfileCredentialsProvider",
          "AmazonGlacierClient",
          "archive ID",
          "DeleteArchiveRequest",
          "Eclipse"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_38",
      "text": "Amazon S3 Glacier Developer Guide\n// Delete the archive.\nclient.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully.\");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted.\");\nSystem.err.println(e);\n}\n}\n}\nDelete an Archive from a Vault in S3 Glacier by Using the AWS SDK\nfor .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete the\narchive that you uploaded in the previous step. In the code example, note the following:\n\u2022 The example creates an instance of the ArchiveTransferManager class for the specified\nAmazon S3 Glacier Region endpoint.\n\u2022 The code example uses the US West (Oregon) Region (us-west-2).\n\u2022 The example uses the Delete API operation of the ArchiveTransferManager class that's\nprovided as part of the high-level API of the AWS SDK for .NET.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You must\nupdate the code as shown with the archive ID of the file that you uploaded in Step 3: Upload an\nArchive to a Vault in S3 Glacier.\nExample \u2014 Deleting an Archive by Using the High-Level API of the AWS SDK for .NET\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nDelete an Archive by Using .NET API Version 2012-06-01 29",
      "start_idx": 79778,
      "end_idx": 81176,
      "metadata": {
        "num_sentences": 10,
        "num_words": 211,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "Delete API",
            "vaultName",
            "archiveId",
            "Region endpoint",
            "US West",
            "high-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon)",
            "Delete API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive from an Amazon S3 Glacier vault using the AWS SDK for .NET with a high-level API example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from Amazon S3 Glacier using .NET?",
            "What is the Delete API operation in the AWS SDK for .NET?",
            "Which region does this example use for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Region endpoint",
          "ArchiveTransferManager",
          "US West",
          "Delete API",
          "archiveId",
          "vaultName",
          "US West (Oregon)",
          "Amazon S3 Glacier",
          "high-level API",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_39",
      "text": "Amazon S3 Glacier Developer Guide\nclass ArchiveDeleteHighLevel_GettingStarted\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDelete an Archive in S3 Glacier by Using the AWS CLI\nYou can delete archives in Amazon S3 Glacier by using the AWS Command Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 30",
      "start_idx": 81178,
      "end_idx": 82540,
      "metadata": {
        "num_sentences": 7,
        "num_words": 191,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "CLI Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Archive",
            "Delete",
            "ArchiveTransferManager",
            "vaultName",
            "archiveId",
            "Amazon.RegionEndpoint",
            "credentials",
            "Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "ArchiveTransferManager",
            "Amazon.RegionEndpoint.USWest2",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Development",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete archives in Amazon S3 Glacier using a code snippet in C# and the AWS Command Line Interface (CLI). It includes setup instructions for the CLI and error handling examples.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using C#?",
            "What are the prerequisites for using the AWS CLI to delete an archive?",
            "How do I handle errors when deleting an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CLI",
          "ArchiveTransferManager",
          "credentials",
          "Delete",
          "archiveId",
          "vaultName",
          "Archive",
          "Amazon S3 Glacier",
          "Amazon.RegionEndpoint.USWest2",
          "Command Line Interface",
          "examplevault",
          "Amazon.RegionEndpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_40",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Deleting an Archive by Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job. For more information on\nthe initiate-job command, see Initiate Job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters \"{\\\"Type\\\": \\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check the status of the previous retrieval job. For more\ninformation on the describe-job command, see Describe Job.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 31",
      "start_idx": 82542,
      "end_idx": 83697,
      "metadata": {
        "num_sentences": 11,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "list-vaults",
            "initiate-job",
            "describe-job",
            "inventory-retrieval",
            "jobId",
            "account-id",
            "archive deletion"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault-name",
            "job-parameters",
            "jobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Command Line Interface",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions on using AWS CLI commands to manage Amazon S3 Glacier vaults and delete archives, including initiating and describing retrieval jobs.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I list S3 Glacier vaults using AWS CLI?",
            "What is the process for deleting an archive in S3 Glacier?",
            "How do I check the status of a retrieval job in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "describe-job",
          "AWS CLI",
          "archive deletion",
          "vaults",
          "list-vaults",
          "jobId",
          "initiate-job",
          "account-id",
          "vault-name",
          "job-parameters",
          "inventory-retrieval",
          "Amazon S3 Glacier",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_41",
      "text": "Amazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to be completed.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified Amazon SNS topic anytime the specific event occurs.\n4. When the job is complete, use the get-job-output command to download the retrieval job\nto the file output.json. For more information on the get-job-output command, see Get\nJob Output.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"\"*** job completion date ***\"\",\n\"ArchiveList\":[{\n{\"ArchiveId\":\"\"*** archiveid ***\"\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"\"*** archive creation date ***\"\",\n\"Size\":\"\"*** archive size (in bytes) ***\"\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}],\n\"ArchiveId\": 123456789\nDeleting an Archive by Using the AWS CLI API Version 2012-06-01 32",
      "start_idx": 83699,
      "end_idx": 85367,
      "metadata": {
        "num_sentences": 12,
        "num_words": 226,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration",
              "File Output"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InventoryRetrieval",
            "VaultARN",
            "JobId",
            "SNS topic",
            "get-job-output",
            "ArchiveList",
            "AWS CLI",
            "Vault Notifications",
            "SHA256TreeHash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "VaultARN",
            "JobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS CLI Commands"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve inventory from an Amazon S3 Glacier vault using the AWS CLI, including setting up notifications and downloading job outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve inventory from an Amazon S3 Glacier vault?",
            "What commands are used to download job outputs in AWS Glacier?",
            "How can I configure notifications for a Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "JobId",
          "SHA256TreeHash",
          "Amazon SNS",
          "get-job-output",
          "VaultARN",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "InventoryRetrieval",
          "ArchiveList",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_42",
      "text": "Amazon S3 Glacier Developer Guide\n}\n5. Use the delete-archive command to delete each archive from a vault until none remain.\naws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nFor more information on the delete-archive command, see Delete Archive.\nStep 6: Delete a Vault in S3 Glacier\nA vault is a container for storing archives. To delete an Amazon S3 Glacier vault, you must first\ndelete all existing archives in the vault as of the last inventory that S3 Glacier computed.\nYou can delete a vault programmatically or by using the S3 Glacier console. For information about\ndeleting a vault programmatically, see Deleting a Vault in Amazon S3 Glacier.\nImportant\nIf you upload an archive to a vault or delete an archive from a vault within the recent\n24 hours, you must wait until the last vault inventory is updated to reflect the latest\ninformation. S3 Glacier prepares an inventory for each vault periodically, every 24 hours.\nTo delete an empty vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. From the Select a Region menu, choose the AWS Region for the vault that you want to delete.\nIn this getting started exercise, your example vault is in the US West (Oregon) Region.\n3. Select the option button next to the empty vault that you want to delete. If the vault is not\nempty, you must delete all archives before deleting the vault. For more information, see\nDeleting an Archive in Amazon S3 Glacier.\nStep 6: Delete a Vault API Version 2012-06-01 33",
      "start_idx": 85369,
      "end_idx": 86968,
      "metadata": {
        "num_sentences": 19,
        "num_words": 265,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command-Line Example",
              "Important Notes"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "archive",
            "delete-archive",
            "delete vault",
            "AWS Region",
            "inventory",
            "AWS Management Console",
            "API Version 2012-06-01",
            "empty vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "US West (Oregon) Region",
            "vault inventory",
            "delete-archive command"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Deletion"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Glacier Console"
          ]
        },
        "semantic": {
          "summary": "This guide provides step-by-step instructions for deleting archives and vaults in Amazon S3 Glacier, including using the AWS CLI and the S3 Glacier console. It highlights prerequisites like ensuring the vault is empty and waiting for inventory updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier?",
            "What are the steps to remove archives from a vault?",
            "Why do I need to wait for inventory updates before deleting a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "archive",
          "US West (Oregon) Region",
          "delete-archive command",
          "vault",
          "AWS Management Console",
          "delete vault",
          "delete-archive",
          "vault inventory",
          "inventory",
          "AWS Region",
          "Amazon S3 Glacier",
          "empty vault",
          "API Version 2012-06-01",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_43",
      "text": "Amazon S3 Glacier Developer Guide\nImportant\nDeleting a vault can't be undone.\n4. Choose Delete.\n5. The Delete vault dialog box appears. Choose Delete.\nTo delete a nonempty vault\n1. If you're deleting a nonempty vault, you must first delete all existing archives before deleting\nthe vault. You can do this by writing code to make a delete archive request by using either the\nREST API, the AWS SDK for Java, the AWS SDK for .NET or the AWS CLI. For information about\ndeleting archives, see Step 5: Delete an Archive from a Vault in S3 Glacier.\n2. After the vault is empty, follow the steps to delete an empty vault in the preceding procedure.\nWhere Do I Go From Here?\nNow that you have tried the getting started exercise, you can explore the following sections to\nlearn more about Amazon S3 Glacier.\n\u2022 Working with Vaults in Amazon S3 Glacier\n\u2022 Working with Archives in Amazon S3 Glacier\nWhere Do I Go From Here? API Version 2012-06-01 34",
      "start_idx": 86970,
      "end_idx": 87906,
      "metadata": {
        "num_sentences": 16,
        "num_words": 169,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Unknown",
            "subtypes": []
          },
          "keywords": [],
          "entities": [],
          "has_code": false
        },
        "technical": {
          "primary_category": "Unknown",
          "secondary_categories": [],
          "mentioned_services": [],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "Technical documentation content",
          "intents": [],
          "potential_questions": []
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Unknown] [Unknown]",
        "tf_idf_keywords": []
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_44",
      "text": "Amazon S3 Glacier Developer Guide\nWorking with Vaults in Amazon S3 Glacier\nA vault is a container for storing archives. When you create a vault, you specify a vault name and\nthe AWS Region in which you want to create the vault. For a list of the AWS Regions supported by\nS3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General Reference.\nYou can store an unlimited number of archives in a vault.\nImportant\nS3 Glacier does provide a console. However, any archive operation, such as upload,\ndownload, or deletion, requires you to use the AWS Command Line Interface (AWS CLI) or\nwrite code. There is no console support for archive operations. For example, to upload data,\nsuch as photos, videos, and other documents, you must either use the AWS CLI or write\ncode to make requests, by using either the REST API directly or by using the AWS SDKs.\nTo install the AWS CLI, see AWS Command Line Interface. For more information about\nusing S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier. For examples\nof using the AWS CLI to upload archives to S3 Glacier, see Using S3 Glacier with the AWS\nCommand Line Interface.\nTopics\n\u2022 Vault Operations in S3 Glacier\n\u2022 Creating a Vault in Amazon S3 Glacier\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier\n\u2022 Deleting a Vault in Amazon S3 Glacier\n\u2022 Tagging Your S3 Glacier Vaults\n\u2022 S3 Glacier Vault Lock\nAPI Version 2012-06-01 35",
      "start_idx": 87908,
      "end_idx": 89413,
      "metadata": {
        "num_sentences": 12,
        "num_words": 268,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "vault",
            "archives",
            "AWS CLI",
            "S3 Glacier",
            "REST API",
            "SDKs",
            "vault notifications",
            "vault metadata",
            "vault lock",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on working with Amazon S3 Glacier vaults, including creating, managing, and configuring vaults using AWS CLI or custom code via REST API or SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What tools can I use to upload archives to S3 Glacier?",
            "How can I configure notifications for a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "vault lock",
          "AWS CLI",
          "archives",
          "vault",
          "REST API",
          "AWS Region",
          "SDKs",
          "Amazon S3 Glacier",
          "vault metadata",
          "S3 Glacier",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_45",
      "text": "Amazon S3 Glacier Developer Guide\nVault Operations in S3 Glacier\nS3 Glacier supports various vault operations. Vault operations are specific to particular AWS\nRegions. In other words, when you create a vault, you create it in a specific AWS Region. When you\nlist vaults, S3 Glacier returns the vault list from the AWS Region that you specified in the request.\nCreating and Deleting Vaults\nAn AWS account can create up to 1,000 vaults per AWS Region. For a list of the AWS Regions\nsupported by S3 Glacier, see Amazon S3 Glacier endpoints and quotas in the AWS General\nReference.\nYou can delete a vault only if there are no archives in the vault as of the last inventory that S3\nGlacier computed and if there have been no writes to the vault since the last inventory.\nNote\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. Because the\ninventory might not reflect the latest information, S3 Glacier ensures that the vault is\nindeed empty by checking if there were any write operations since the last vault inventory.\nFor more information, see Creating a Vault in Amazon S3 Glacier and Deleting a Vault in Amazon\nS3 Glacier.\nRetrieving Vault Metadata\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. S3 Glacier provides API calls for you to retrieve\nthis information for a specific vault or all the vaults in a specific AWS Region in your account. For\nmore information, see Retrieving Vault Metadata in Amazon S3 Glacier.\nDownloading a Vault Inventory\nA vault inventory refers to the list of archives in a vault. For each archive in the list, the inventory\nprovides archive information, such as the archive ID, creation date, and size. S3 Glacier updates\nthe vault inventory once a day, starting on the day that the first archive is uploaded to the vault. A\nvault inventory must exist for you to be able to download it.\nVault Operations in S3 Glacier API Version 2012-06-01 36",
      "start_idx": 89415,
      "end_idx": 91420,
      "metadata": {
        "num_sentences": 18,
        "num_words": 348,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "vault operations",
            "AWS Regions",
            "vault inventory",
            "archives",
            "S3 Glacier",
            "vault metadata",
            "API calls",
            "vault creation",
            "vault deletion",
            "endpoints and quotas"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Regions",
            "vault inventory",
            "AWS account",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains vault operations in Amazon S3 Glacier, including creating, deleting, and retrieving metadata for vaults, as well as downloading vault inventories. It highlights the regional nature of vaults and provides details on API functionalities.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create or delete a vault in Amazon S3 Glacier?",
            "What metadata can I retrieve for a vault in S3 Glacier?",
            "How often is the vault inventory updated in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault operations",
          "AWS Regions",
          "archives",
          "API calls",
          "endpoints and quotas",
          "vault inventory",
          "vault deletion",
          "Amazon S3 Glacier",
          "vault creation",
          "API Version 2012-06-01",
          "AWS account",
          "vault metadata",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_46",
      "text": "Amazon S3 Glacier Developer Guide\nDownloading a vault inventory is an asynchronous operation. You must first initiate a job to\ndownload the inventory. After receiving the job request, S3 Glacier prepares your inventory for\ndownload. After the job is completed, you can download the inventory data.\nGiven the asynchronous nature of the job, you can use Amazon Simple Notification Service\n(Amazon SNS) notifications to notify you when the job is completed. You can specify an Amazon\nSNS topic for each individual job request or configure your vault to send a notification when\nspecific vault events occur.\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. If there have been\nno archive additions or deletions to the vault since the last inventory, the inventory date is not\nupdated.\nWhen you initiate a job for a vault inventory, S3 Glacier returns the last inventory that it generated,\nwhich is a point-in-time snapshot and not real-time data. You might not find it useful to retrieve\nvault inventory for each archive upload. However, suppose that you maintain a database on the\nclient-side that contains metadata associated with the archives that you upload to S3 Glacier. In\nthat case, you might find the vault inventory useful to reconcile information in your database with\nthe actual vault inventory.\nFor more information about retrieving a vault inventory, see Downloading a Vault Inventory in\nAmazon S3 Glacier.\nConfiguring Vault Notifications\nRetrieving anything from S3 Glacier, such as an archive from a vault or a vault inventory, is a two-\nstep process. First, you initiate a job. After the job is completed, you download the output. To\nlearn when your job is complete, you can use S3 Glacier notifications. S3 Glacier sends notification\nmessages to an Amazon Simple Notification Service (Amazon SNS) topic that you provide.\nYou can configure notifications on a vault and identify vault events and the Amazon SNS topic to\nbe notified when the event occurs. Anytime the vault event occurs, S3 Glacier sends a notification\nto the specified Amazon SNS topic. For more information, see Configuring Vault Notifications in\nAmazon S3 Glacier.\nCreating a Vault in Amazon S3 Glacier\nCreating a vault adds a vault to the set of vaults in your account. An AWS account can create up to\n1,000 vaults per AWS Region. For a list of the AWS Regions supported by Amazon S3 Glacier (S3\nGlacier), see Regions and Endpoints in the AWS General Reference.\nConfiguring Vault Notifications API Version 2012-06-01 37",
      "start_idx": 91422,
      "end_idx": 93951,
      "metadata": {
        "num_sentences": 25,
        "num_words": 413,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Notification",
              "Inventory Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "asynchronous operation",
            "Amazon SNS",
            "vault events",
            "job initiation",
            "point-in-time snapshot",
            "metadata reconciliation",
            "vault creation",
            "AWS Regions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service (Amazon SNS)",
            "AWS Regions",
            "vault inventory",
            "vault events"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service (SNS)"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault inventories and configure notifications in Amazon S3 Glacier. It outlines the asynchronous process of job initiation and completion, along with details on vault creation and event notifications via Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory in Amazon S3 Glacier?",
            "What is the process for configuring vault notifications in S3 Glacier?",
            "How are vault inventories updated and utilized?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon Simple Notification Service (Amazon SNS)",
          "Amazon SNS",
          "AWS Regions",
          "job initiation",
          "metadata reconciliation",
          "vault inventory",
          "vault events",
          "Amazon S3 Glacier",
          "vault creation",
          "Amazon Simple Notification Service (SNS)",
          "point-in-time snapshot",
          "asynchronous operation"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_47",
      "text": "Amazon S3 Glacier Developer Guide\nWhen you create a vault, you must provide a vault name. The following are the vault naming\nrequirements:\n\u2022 Names can be between 1 and 255 characters long.\n\u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.' (period).\nVault names must be unique within an account and the AWS Region in which the vault is being\ncreated. That is, an account can create vaults with the same name in different AWS Regions but not\nin the same AWS Region.\nTopics\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Creating a Vault in Amazon S3 Glacier Using the REST API\n\u2022 Creating a Vault Using the Amazon S3 Glacier Console\n\u2022 Creating a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nCreating a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe low-level API provides methods for all the vault operations, including creating and deleting\nvaults, getting a vault description, and getting a list of vaults created in a specific AWS Region. The\nfollowing are the steps to create a vault using the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the CreateVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide to\nsign the request is used. For more information, see Using the AWS SDK for Java with Amazon S3\nGlacier.\n3. Run the createVault method by providing the request object as a parameter.\nCreating a Vault Using Java API Version 2012-06-01 38",
      "start_idx": 93953,
      "end_idx": 95840,
      "metadata": {
        "num_sentences": 20,
        "num_words": 336,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Requirements"
            ]
          },
          "keywords": [
            "vault",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "AWS Region",
            "account ID",
            "createVault method",
            "REST API",
            "CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "AWS Command Line Interface"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS Command Line Interface",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "The document explains how to create a vault in Amazon S3 Glacier, detailing vault naming requirements and step-by-step instructions for using the AWS SDK for Java, along with other methods like REST API and CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the vault naming requirements in Amazon S3 Glacier?",
            "How can I create a vault using the AWS SDK for Java?",
            "What tools can be used to create a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "vault",
          "REST API",
          "AWS Region",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "account ID",
          "createVault method",
          "CLI",
          "AmazonGlacierClient",
          "CreateVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_48",
      "text": "Amazon S3 Glacier Developer Guide\nThe response S3 Glacier returns is available in the CreateVaultResult object.\nThe following Java code snippet illustrates the preceding steps. The snippet creates a vault in\nthe us-west-2 Region. The Location it prints is the relative URI of the vault that includes your\naccount ID, the AWS Region, and the vault name.\nAmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nCreateVaultResult result = client.createVault(request);\nSystem.out.println(\"Created vault successfully: \" + result.getLocation());\nNote\nFor information about the underlying REST API, see Create Vault (PUT vault).\nExample: Creating a Vault Using the AWS SDK for Java\nThe following Java code example creates a vault in the us-west-2 Region (for more information\non AWS Regions, see Accessing Amazon S3 Glacier). In addition, the code example retrieves the\nvault information, lists all vaults in the same AWS Region, and then deletes the vault created.\nFor step-by-step instructions on how to run the following example, see Running Java Examples for\nAmazon S3 Glacier Using Eclipse.\nExample\nimport java.io.IOException;\nimport java.util.List;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.CreateVaultRequest;\nimport com.amazonaws.services.glacier.model.CreateVaultResult;\nimport com.amazonaws.services.glacier.model.DeleteVaultRequest;\nimport com.amazonaws.services.glacier.model.DescribeVaultOutput;\nCreating a Vault Using Java API Version 2012-06-01 39",
      "start_idx": 95842,
      "end_idx": 97594,
      "metadata": {
        "num_sentences": 9,
        "num_words": 198,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVaultRequest",
            "CreateVaultResult",
            "vault",
            "AWS SDK for Java",
            "us-west-2 Region",
            "AmazonGlacierClient",
            "REST API",
            "DeleteVaultRequest",
            "DescribeVaultOutput"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "us-west-2 Region",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of creating, managing, and deleting a vault in Amazon S3 Glacier using the AWS SDK for Java in the us-west-2 Region, including a code snippet and related instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create a vault in Amazon S3 Glacier using Java?",
            "What is the process to delete a vault in Amazon S3 Glacier?",
            "What is the purpose of the CreateVaultRequest and CreateVaultResult classes?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "us-west-2 Region",
          "CreateVaultResult",
          "vault",
          "REST API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AmazonGlacierClient",
          "DescribeVaultOutput",
          "CreateVaultRequest",
          "DeleteVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_51",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Creating a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Creating a Vault Using the Low-Level API of the AWS SDK for .NET\nCreating a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the CreateVault method\nyou can use to create a vault in an AWS Region.\nExample: Vault Operations Using the High-Level API of the AWS SDK for .NET\nThe following C# code example creates and delete a vault in the US West (Oregon) Region. For a\nlist of AWS Regions in which you can create vaults, see Accessing Amazon S3 Glacier.\nFor step-by-step instructions on how to run the following example, see Running Code Examples.\nYou need to update the code as shown with a vault name.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDeleteHighLevel\n{\nstatic string vaultName = \"*** Provide vault name ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.CreateVault(vaultName);\nConsole.WriteLine(\"Vault created. To delete the vault, press Enter\");\nConsole.ReadKey();\nmanager.DeleteVault(vaultName);\nConsole.WriteLine(\"\\nVault deleted. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nCreating a Vault Using .NET API Version 2012-06-01 42",
      "start_idx": 100782,
      "end_idx": 102283,
      "metadata": {
        "num_sentences": 8,
        "num_words": 211,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "High-Level API",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "CreateVault",
            "DeleteVault",
            "Amazon.RegionEndpoint",
            "C#",
            "AmazonGlacierException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon) Region",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and delete an Amazon S3 Glacier vault using the high-level API of the AWS SDK for .NET, with a step-by-step C# code example provided.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is an example of using the high-level API to manage vaults in Amazon S3 Glacier?",
            "How can I delete an Amazon S3 Glacier vault programmatically?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "DeleteVault",
          "Vault",
          "US West (Oregon) Region",
          "High-Level API",
          "C#",
          "AmazonGlacierException",
          "Amazon S3 Glacier",
          "Amazon.RegionEndpoint.USWest2",
          "CreateVault",
          "Amazon.RegionEndpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_52",
      "text": "Amazon S3 Glacier Developer Guide\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nCreating a Vault Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the vault operations, including create and delete vaults,\nget a vault description, and get a list of vaults created in a specific AWS Region. The following are\nthe steps to create a vault using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region in which you want to create a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the CreateVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then account ID associated with the credentials you provide to sign\nthe request is assumed. For more information, see Using the AWS SDK for .NET with Amazon S3\nGlacier.\n3. Run the CreateVault method by providing the request object as a parameter.\nThe response S3 Glacier returns is available in the CreateVaultResponse object.\nExample: Vault Operations Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example creates a vault in the US\nWest (Oregon) Region. In addition, the code example retrieves the vault information, lists all vaults\nin the same AWS Region, and then deletes the vault created. The Location printed is the relative\nURI of the vault that includes your account ID, the AWS Region, and the vault name.\nNote\nFor information about the underlying REST API, see Create Vault (PUT vault).\nCreating a Vault Using .NET API Version 2012-06-01 43",
      "start_idx": 102285,
      "end_idx": 104175,
      "metadata": {
        "num_sentences": 20,
        "num_words": 308,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault operations",
            "AWS SDK for .NET",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "CreateVaultResponse",
            "REST API",
            "US West (Oregon)",
            "AWS Region",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create, retrieve, list, and delete vaults in Amazon S3 Glacier using the low-level API of the AWS SDK for .NET, with an example code snippet provided.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using AWS SDK for .NET?",
            "What are the steps for vault operations in Amazon S3 Glacier?",
            "What is the response format for the CreateVault method?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault operations",
          "AWS SDK for .NET",
          "CreateVaultResponse",
          "REST API",
          "US West (Oregon)",
          "AWS Region",
          "Amazon S3 Glacier",
          "account ID",
          "AmazonGlacierClient",
          "CreateVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_53",
      "text": "Amazon S3 Glacier Developer Guide\nFor step-by-step instructions on how to run the following example, see Running Code Examples.\nYou need to update the code as shown with a vault name.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultCreateDescribeListVaultsDelete\n{\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic AmazonGlacierClient client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Creating a vault.\");\nCreateAVault();\nDescribeVault();\nGetVaultsList();\nConsole.WriteLine(\"\\nVault created. Now press Enter to delete the vault...\");\nConsole.ReadKey();\nDeleteVault();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void CreateAVault()\n{\nCreateVaultRequest request = new CreateVaultRequest()\n{\nVaultName = vaultName\nCreating a Vault Using .NET API Version 2012-06-01 44",
      "start_idx": 104177,
      "end_idx": 105375,
      "metadata": {
        "num_sentences": 5,
        "num_words": 137,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Implementation",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "CreateVaultRequest",
            "AmazonGlacierClient",
            "DescribeVault",
            "DeleteVault",
            "GetVaultsList",
            "Amazon.RegionEndpoint",
            "AmazonGlacierException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "VaultCreateDescribeListVaultsDelete",
            "CreateVaultRequest",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Amazon SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example in C# for creating, describing, listing, and deleting a vault in Amazon S3 Glacier using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What are the steps to describe and list vaults in Amazon S3 Glacier?",
            "How can I handle exceptions when working with Amazon S3 Glacier in C#?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteVault",
          "GetVaultsList",
          "Vault",
          "VaultCreateDescribeListVaultsDelete",
          "AmazonGlacierException",
          "Amazon S3 Glacier",
          "AmazonServiceException",
          "DescribeVault",
          "Amazon.RegionEndpoint.USWest2",
          "AmazonGlacierClient",
          "CreateVaultRequest",
          "Amazon.RegionEndpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_55",
      "text": "Amazon S3 Glacier Developer Guide\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\n}\nstatic void DeleteVault()\n{\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = vaultName\n};\nDeleteVaultResponse response = client.DeleteVault(request);\n}\n}\n}\nCreating a Vault in Amazon S3 Glacier Using the REST API\nTo create a vault using the REST API, see Create Vault (PUT vault).\nCreating a Vault Using the Amazon S3 Glacier Console\nTo create a vault using the Amazon S3 Glacier (S3 Glacier) console, see Step 2: Create a Vault in S3\nGlacier in the Getting Started tutorial.\nCreating a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nFollow these steps to create a vault in Amazon S3 Glacier (S3 Glacier) using the AWS Command\nLine Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Creating a Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nCreating a Vault Using REST API Version 2012-06-01 46",
      "start_idx": 106717,
      "end_idx": 107816,
      "metadata": {
        "num_sentences": 6,
        "num_words": 182,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "API Usage",
              "CLI Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "AWS CLI",
            "REST API",
            "DeleteVaultRequest",
            "DeleteVaultResponse",
            "console",
            "Create Vault",
            "Marker",
            "DeleteVault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "DeleteVaultRequest",
            "DeleteVaultResponse",
            "Create Vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on creating and deleting vaults in Amazon S3 Glacier using the REST API, AWS CLI, and console interface, along with setup instructions for the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS CLI?",
            "What are the steps to delete a vault in Amazon S3 Glacier?",
            "How do I set up the AWS CLI for use with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "DeleteVault",
          "vault",
          "Create Vault",
          "REST API",
          "console",
          "Amazon S3 Glacier",
          "DeleteVaultResponse",
          "Marker",
          "DeleteVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_56",
      "text": "Amazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Creating a Vault Using the AWS CLI\n1. Use the create-vault command to create a vault named awsexamplevault under account\n111122223333.\naws glacier create-vault --vault-name awsexamplevault --account-id 111122223333\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault\"\n}\n2. Verify creation using the describe-vault command.\nCreating a Vault Using the AWS CLI API Version 2012-06-01 47",
      "start_idx": 107818,
      "end_idx": 108879,
      "metadata": {
        "num_sentences": 11,
        "num_words": 157,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Command Usage",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "create-vault",
            "list-vaults",
            "describe-vault",
            "configuration",
            "account ID",
            "credentials",
            "help command"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "account ID",
            "AWS Command Line Interface"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Configuration"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure and use the AWS CLI to interact with Amazon S3 Glacier, including steps to create and verify a vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in S3 Glacier using the AWS CLI?",
            "What commands can I use to verify my AWS CLI setup?",
            "How can I list all S3 Glacier vaults in my account?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS CLI",
          "help command",
          "credentials",
          "create-vault",
          "vaults",
          "list-vaults",
          "configuration",
          "vault",
          "account ID",
          "describe-vault",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_57",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nRetrieving Vault Metadata in Amazon S3 Glacier\nYou can retrieve vault information such as the vault creation date, number of archives in the vault,\nand the total size of all the archives in the vault. Amazon S3 Glacier (S3 Glacier) provides API calls\nfor you to retrieve this information for a specific vault or all the vaults in a specific AWS Region in\nyour account.\nIf you retrieve a vault list, S3 Glacier returns the list sorted by the ASCII values of the vault names.\nThe list contains up to 1,000 vaults. You should always check the response for a marker at which\nto continue the list; if there are no more items the marker field is null. You can optionally limit\nthe number of vaults returned in the response. If there are more vaults than are returned in the\nresponse, the result is paginated. You need to send additional requests to fetch the next set of\nvaults.\nTopics\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Retrieving Vault Metadata Using the REST API\n\u2022 Retrieving Vault Metadata in Amazon S3 Glacier Using the AWS Command Line Interface\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK for\nJava\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Amazon SDK for Java\nRetrieving Vault Metadata API Version 2012-06-01 48",
      "start_idx": 108881,
      "end_idx": 110452,
      "metadata": {
        "num_sentences": 9,
        "num_words": 270,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "vault creation date",
            "number of archives",
            "total size",
            "vault list",
            "ASCII values",
            "marker",
            "paginated response",
            "AWS Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for vaults in Amazon S3 Glacier using various tools and APIs, including details on vault creation date, archive count, and total size. It also covers pagination and sorting of vault lists.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific vault in Amazon S3 Glacier?",
            "What information is included in the vault metadata?",
            "How is the vault list sorted and paginated in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "number of archives",
          "AWS SDK for .NET",
          "marker",
          "paginated response",
          "vault",
          "REST API",
          "vault list",
          "AWS Region",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "total size",
          "vault creation date",
          "ASCII values",
          "vault metadata"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_58",
      "text": "Amazon S3 Glacier Developer Guide\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAmazon SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide request information by creating an instance of the DescribeVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for Java with\nAmazon S3 Glacier.\n3. Run the describeVault method by providing the request object as a parameter.\nThe vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object.\nThe following Java code snippet illustrates the preceding steps.\nDescribeVaultRequest request = new DescribeVaultRequest()\n.withVaultName(\"*** provide vault name***\");\nDescribeVaultResult result = client.describeVault(request);\nSystem.out.print(\n\"\\nCreationDate: \" + result.getCreationDate() +\n\"\\nLastInventoryDate: \" + result.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + result.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + result.getSizeInBytes() +\n\"\\nVaultARN: \" + result.getVaultARN() +\n\"\\nVaultName: \" + result.getVaultName());\nRetrieving Vault Metadata Using Java API Version 2012-06-01 49",
      "start_idx": 110454,
      "end_idx": 112111,
      "metadata": {
        "num_sentences": 16,
        "num_words": 237,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "DescribeVaultRequest",
            "DescribeVaultResult",
            "AmazonGlacierClient",
            "AWS Region",
            "account ID",
            "Java SDK",
            "describeVault method",
            "vault name"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "DescribeVaultRequest",
            "DescribeVaultResult",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for a specific Amazon S3 Glacier vault using the AWS SDK for Java, including steps and a code example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve metadata for an Amazon S3 Glacier vault?",
            "What Java classes are used to interact with Amazon S3 Glacier vaults?",
            "What information is included in the DescribeVaultResult object?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault name",
          "Java SDK",
          "AWS Region",
          "Amazon S3 Glacier",
          "describeVault method",
          "account ID",
          "DescribeVaultRequest",
          "AmazonGlacierClient",
          "vault metadata",
          "DescribeVaultResult"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_59",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault).\nRetrieve Vault Metadata for All Vaults in a Region\nYou can also use the listVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion.\nThe following Java code snippet retrieves list of vaults in the us-west-2 Region. The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nlistVaults calls to retrieve the entire vault list from the AWS Region.\nAmazonGlacierClient client;\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nString marker = null;\ndo {\nListVaultsRequest request = new ListVaultsRequest()\n.withLimit(\"5\")\n.withMarker(marker);\nListVaultsResult listVaultsResult = client.listVaults(request);\nList<DescribeVaultOutput> vaultList = listVaultsResult.getVaultList();\nmarker = listVaultsResult.getMarker();\nfor (DescribeVaultOutput vault : vaultList) {\nSystem.out.println(\n\"\\nCreationDate: \" + vault.getCreationDate() +\n\"\\nLastInventoryDate: \" + vault.getLastInventoryDate() +\n\"\\nNumberOfArchives: \" + vault.getNumberOfArchives() +\n\"\\nSizeInBytes: \" + vault.getSizeInBytes() +\n\"\\nVaultARN: \" + vault.getVaultARN() +\n\"\\nVaultName: \" + vault.getVaultName());\n}\n} while (marker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API. If there are more vaults to list, the response\nmarker field contains the vault Amazon Resource Name (ARN) at which to continue the list with a\nnew request; otherwise, the marker field is null.\nRetrieving Vault Metadata Using Java API Version 2012-06-01 50",
      "start_idx": 112113,
      "end_idx": 113817,
      "metadata": {
        "num_sentences": 8,
        "num_words": 233,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "ListVaultsRequest",
            "ListVaultsResult",
            "DescribeVaultOutput",
            "Java API",
            "Region",
            "marker field",
            "VaultARN",
            "Limit value"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ListVaultsRequest",
            "ListVaultsResult",
            "DescribeVaultOutput",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java API",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve metadata for all vaults in a specific AWS region using the Amazon S3 Glacier Java API, including an example code snippet for iterative vault listing with pagination support.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list all vaults in a specific AWS region using the S3 Glacier Java API?",
            "What is the purpose of the marker field in the ListVaultsResult response?",
            "What metadata details can be retrieved for each vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Region",
          "ListVaultsResult",
          "VaultARN",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "Java API",
          "marker field",
          "Limit value",
          "vault metadata",
          "DescribeVaultOutput"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_60",
      "text": "Amazon S3 Glacier Developer Guide\nNote that the information returned for each vault in the list is the same as the information you get\nby calling the describeVault method for a specific vault.\nNote\nThe listVaults method calls the underlying REST API (see List Vaults (GET vaults)).\nExample: Retrieving Vault Metadata Using the Amazon SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java. The Java\ncode example creates a vault and retrieves the vault metadata.\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nTopics\n\u2022 Retrieve Vault Metadata for a Vault\n\u2022 Retrieve Vault Metadata for All Vaults in a Region\n\u2022 Example: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK for .NET\nRetrieve Vault Metadata for a Vault\nYou can retrieve metadata for a specific vault or all the vaults in a specific AWS Region. The\nfollowing are the steps to retrieve vault metadata for a specific vault using the low-level API of the\nAWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide request information by creating an instance of the DescribeVaultRequest class.\nAmazon S3 Glacier (S3 Glacier) requires you to provide a vault name and your account ID. If you\ndon't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier.\nRetrieving Vault Metadata Using .NET API Version 2012-06-01 51",
      "start_idx": 113819,
      "end_idx": 115482,
      "metadata": {
        "num_sentences": 16,
        "num_words": 284,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault metadata",
            "AWS SDK for .NET",
            "DescribeVaultRequest",
            "AmazonGlacierClient",
            "REST API",
            "vault name",
            "account ID",
            "AWS Region",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "DescribeVaultRequest",
            "List Vaults API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Usage",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault metadata in Amazon S3 Glacier using the AWS SDK for Java and .NET, including procedural steps and reference to APIs and tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific vault in Amazon S3 Glacier?",
            "What are the steps to use the AWS SDK for .NET to access vault metadata?",
            "Which API methods are used to list vaults in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "vault name",
          "List Vaults API",
          "REST API",
          "AWS Region",
          "Amazon S3 Glacier",
          "account ID",
          "DescribeVaultRequest",
          "AmazonGlacierClient",
          "low-level API",
          "vault metadata"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_61",
      "text": "Amazon S3 Glacier Developer Guide\n3. Run the DescribeVault method by providing the request object as a parameter.\nThe vault metadata information that S3 Glacier returns is available in the\nDescribeVaultResult object.\nThe following C# code snippet illustrates the preceding steps. The snippet retrieves metadata\ninformation of an existing vault in the US West (Oregon) Region.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nDescribeVaultRequest describeVaultRequest = new DescribeVaultRequest()\n{\nVaultName = \"*** Provide vault name ***\"\n};\nDescribeVaultResponse describeVaultResponse =\nclient.DescribeVault(describeVaultRequest);\nConsole.WriteLine(\"\\nVault description...\");\nConsole.WriteLine(\n\"\\nVaultName: \" + describeVaultResponse.VaultName +\n\"\\nVaultARN: \" + describeVaultResponse.VaultARN +\n\"\\nVaultCreationDate: \" + describeVaultResponse.CreationDate +\n\"\\nNumberOfArchives: \" + describeVaultResponse.NumberOfArchives +\n\"\\nSizeInBytes: \" + describeVaultResponse.SizeInBytes +\n\"\\nLastInventoryDate: \" + describeVaultResponse.LastInventoryDate\n);\nNote\nFor information about the underlying REST API, see Describe Vault (GET vault).\nRetrieve Vault Metadata for All Vaults in a Region\nYou can also use the ListVaults method to retrieve metadata for all the vaults in a specific AWS\nRegion.\nThe following C# code snippet retrieves list of vaults in the US West (Oregon) Region. The request\nlimits the number of vaults returned in the response to 5. The code snippet then makes a series of\nListVaults calls to retrieve the entire vault list from the AWS Region.\nRetrieving Vault Metadata Using .NET API Version 2012-06-01 52",
      "start_idx": 115484,
      "end_idx": 117152,
      "metadata": {
        "num_sentences": 11,
        "num_words": 211,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeVault",
            "DescribeVaultResult",
            "Vault metadata",
            "ListVaults",
            "VaultName",
            "VaultARN",
            "AWS Region",
            "US West (Oregon)",
            ".NET API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "DescribeVault",
            "AmazonGlacierClient",
            "ListVaults",
            "US West (Oregon)"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            "DescribeVaultRequest",
            "ListVaults"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the DescribeVault and ListVaults methods in the Amazon S3 Glacier .NET API to retrieve metadata for specific or all vaults in a region, including a code example for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve metadata for a specific vault in Amazon S3 Glacier?",
            "What is the purpose of the DescribeVault method?",
            "How do I list all vaults in a specific AWS region using .NET API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListVaults",
          "VaultName",
          "Vault metadata",
          "VaultARN",
          "US West (Oregon)",
          "AWS Region",
          "Amazon S3 Glacier",
          "DescribeVault",
          "AmazonGlacierClient",
          ".NET API",
          "DescribeVaultResult"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_62",
      "text": "Amazon S3 Glacier Developer Guide\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nstring lastMarker = null;\nConsole.WriteLine(\"\\n List of vaults in your account in the specific AWS Region ...\");\ndo\n{\nListVaultsRequest request = new ListVaultsRequest()\n{\nLimit = 5,\nMarker = lastMarker\n};\nListVaultsResponse response = client.ListVaults(request);\nforeach (DescribeVaultOutput output in response.VaultList)\n{\nConsole.WriteLine(\"Vault Name: {0} \\tCreation Date: {1} \\t #of archives: {2}\",\noutput.VaultName, output.CreationDate, output.NumberOfArchives);\n}\nlastMarker = response.Marker;\n} while (lastMarker != null);\nIn the preceding code segment, if you don't specify the Limit value in the request, S3 Glacier\nreturns up to 10 vaults, as set by the S3 Glacier API.\nNote that the information returned for each vault in the list is the same as the information you get\nby calling the DescribeVault method for a specific vault.\nNote\nThe ListVaults method calls the underlying REST API (see List Vaults (GET vaults)).\nExample: Retrieving Vault Metadata Using the Low-Level API of the AWS SDK\nfor .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example creates a vault and retrieves the vault metadata.\nRetrieving Vault Metadata Using .NET API Version 2012-06-01 53",
      "start_idx": 117154,
      "end_idx": 118532,
      "metadata": {
        "num_sentences": 6,
        "num_words": 200,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaults",
            "DescribeVault",
            "AWS SDK for .NET",
            "vault metadata",
            "REST API",
            "ListVaultsRequest",
            "ListVaultsResponse",
            "C#",
            "vault operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListVaults",
            "DescribeVault",
            "RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of listing and retrieving metadata for Amazon S3 Glacier vaults using the AWS SDK for .NET, including code snippets and API details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What metadata is retrieved for a vault in Amazon S3 Glacier?",
            "What is the default limit for the ListVaults API in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault operations",
          "AWS SDK for .NET",
          "ListVaults",
          "REST API",
          "ListVaultsResponse",
          "C#",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "DescribeVault",
          "RegionEndpoint.USWest2",
          "vault metadata"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_63",
      "text": "Amazon S3 Glacier Developer Guide\nRetrieving Vault Metadata Using the REST API\nTo list vaults using the REST API, see List Vaults (GET vaults). To describe one vault, see Describe\nVault (GET vault).\nRetrieving Vault Metadata in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nThis example shows how to retrieve vault information and metadata in Amazon S3 Glacier (S3\nGlacier) using the AWS Command Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Retrieving Vault Metadata Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\nRetrieving Vault Metadata Using REST API Version 2012-06-01 54",
      "start_idx": 118534,
      "end_idx": 119894,
      "metadata": {
        "num_sentences": 13,
        "num_words": 219,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Retrieval",
              "Command Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Metadata",
            "AWS CLI",
            "REST API",
            "list-vaults",
            "Describe Vault",
            "Account ID",
            "Configuration",
            "Command Line Interface",
            "Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Vault Metadata",
            "REST API",
            "Account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault metadata in Amazon S3 Glacier using the AWS CLI or REST API, including setup instructions and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI for Amazon S3 Glacier?",
            "What commands are used to retrieve vault metadata in AWS CLI?",
            "What is the REST API endpoint for listing vaults in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Vault Metadata",
          "Version 2012-06-01",
          "Account ID",
          "REST API",
          "list-vaults",
          "Amazon S3 Glacier",
          "Describe Vault",
          "Configuration",
          "Command Line Interface"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_64",
      "text": "Amazon S3 Glacier Developer Guide\naws configure list\nExample: Retrieving Vault Metadata Using the AWS CLI\n\u2022 Use the describe-vault command to describe a vault named awsexamplevault under\naccount 111122223333.\naws glacier describe-vault --vault-name awsexamplevault --account-id 111122223333\nDownloading a Vault Inventory in Amazon S3 Glacier\nAfter you upload your first archive to your vault, Amazon S3 Glacier (S3 Glacier) automatically\ncreates a vault inventory and then updates it approximately once a day. After S3 Glacier creates\nthe first inventory, it typically takes half a day and up to a day before that inventory is available for\nretrieval. You can retrieve a vault inventory from S3 Glacier with the following two-step process:\n1. Initiate an inventory retrieval job by using the Initiate Job (POST jobs) operation.\nImportant\nA data retrieval policy can cause your initiate retrieval job request to fail with a\nPolicyEnforcedException exception. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.\n2. After the job completes, download the bytes using the Get Job Output (GET output) operation.\nFor example, retrieving an archive or a vault inventory requires you to first initiate a retrieval job.\nThe job request is run asynchronously. When you initiate a retrieval job, S3 Glacier creates a job and\nreturns a job ID in the response. When S3 Glacier completes the job, you can get the job output,\nthe archive bytes, or the vault inventory data.\nThe job must complete before you can get its output. To determine the status of the job, you have\nthe following options:\nDownloading a Vault Inventory API Version 2012-06-01 55",
      "start_idx": 119896,
      "end_idx": 121657,
      "metadata": {
        "num_sentences": 15,
        "num_words": 274,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "vault inventory",
            "AWS CLI",
            "describe-vault",
            "S3 Glacier",
            "Initiate Job",
            "retrieval job",
            "PolicyEnforcedException",
            "data retrieval policy",
            "GET output",
            "archive bytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Initiate Job",
            "PolicyEnforcedException",
            "Get Job Output"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and download a vault inventory in Amazon S3 Glacier using the AWS CLI, including initiating and completing a retrieval job. It also highlights potential issues like the PolicyEnforcedException caused by data retrieval policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory in Amazon S3 Glacier?",
            "What is the process for initiating and completing a retrieval job in S3 Glacier?",
            "What causes a PolicyEnforcedException during a retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "PolicyEnforcedException",
          "data retrieval policy",
          "Initiate Job",
          "retrieval job",
          "archive bytes",
          "Get Job Output",
          "vault inventory",
          "Amazon S3 Glacier",
          "describe-vault",
          "GET output",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_65",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Wait for job completion notification\u2014You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. You\ncan specify Amazon SNS topic using the following methods:\n\u2022 Specify an Amazon SNS topic per job basis.\nWhen you initiate a job, you can optionally specify an Amazon SNS topic.\n\u2022 Set notification configuration on the vault.\nYou can set notification configuration for specific events on the vault (see Configuring Vault\nNotifications in Amazon S3 Glacier). S3 Glacier sends a message to the specified SNS topic any\ntime the specific event occur.\nIf you have notification configuration set on the vault and you also specify an Amazon SNS topic\nwhen you initiate a job, S3 Glacier sends job completion message to both the topics.\nYou can configure the SNS topic to notify you via email or store the message in an Amazon\nSimple Queue Service (Amazon SQS) that your application can poll. When a message appears in\nthe queue, you can check if the job is completed successfully and then download the job output.\n\u2022 Request job information explicitly\u2014S3 Glacier also provides a describe job operation\n(Describe Job (GET JobID)) that enables you to poll for job information. You can periodically\nsend this request to obtain job information. However, using Amazon SNS notifications is the\nrecommended option.\nNote\nThe information you get via SNS notification is the same as what you get by calling\nDescribe Job.\nTopics\n\u2022 About the Inventory\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading a Vault Inventory Using the REST API\n\u2022 Downloading a Vault Inventory in Amazon S3 Glacier Using the AWS Command Line Interface\nDownloading a Vault Inventory API Version 2012-06-01 56",
      "start_idx": 121659,
      "end_idx": 123566,
      "metadata": {
        "num_sentences": 14,
        "num_words": 319,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Notification Configuration",
              "Job Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notifications",
            "Describe Job",
            "Job Completion",
            "Amazon SQS",
            "Notification Configuration",
            "AWS SDK",
            "REST API",
            "Vault Inventory"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Notification Systems",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon SNS notifications for job completion in Amazon S3 Glacier, along with alternative methods like polling job information using the Describe Job operation. It also covers vault inventory downloading options across different tools and APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure Amazon SNS notifications for S3 Glacier job completion?",
            "What are the methods to retrieve job information in Amazon S3 Glacier?",
            "How can I download a vault inventory using various AWS tools?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "AWS SDK for .NET",
          "Amazon SNS",
          "Notification Configuration",
          "Describe Job",
          "REST API",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "Vault Inventory",
          "AWS SDK for Java",
          "AWS SDK",
          "Job Completion"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_66",
      "text": "Amazon S3 Glacier Developer Guide\nAbout the Inventory\nS3 Glacier updates a vault inventory at least once per day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata. Note that after S3 Glacier creates the first inventory for the vault, it typically takes half a day\nand up to a day before that inventory is available for retrieval.\nYou might not find it useful to retrieve a vault inventory for each archive upload. However, suppose\nyou maintain a database on the client-side associating metadata about the archives you upload\nto S3 Glacier. Then, you might find the vault inventory useful to reconcile information, as needed,\nin your database with the actual vault inventory. You can limit the number of inventory items\nretrieved by filtering on the archive creation date or by setting a quota. For more information\nabout limiting inventory retrieval, see Range Inventory Retrieval.\nThe inventory can be returned in two formats, comma-separated values (CSV) or JSON. You can\noptionally specify the format when you initiate the inventory job. The default format is JSON. For\nmore information about the data fields returned in an inventory job output, see Response Body of\nthe Get Job Output API.\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK for\nJava. The high-level API does not support retrieving a vault inventory.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Initiate an inventory retrieval job by executing the initiateJob method.\nRun initiateJob by providing job information in an InitiateJobRequest object.\nAbout the Inventory API Version 2012-06-01 57",
      "start_idx": 123568,
      "end_idx": 125707,
      "metadata": {
        "num_sentences": 23,
        "num_words": 353,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Inventory Retrieval"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "archive",
            "InitiateJobRequest",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "inventory retrieval",
            "JSON format",
            "CSV format",
            "API version 2012-06-01"
          ],
          "entities": [
            "S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault inventory from Amazon S3 Glacier using the AWS SDK for Java, including details on inventory formats and filtering options.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory from Amazon S3 Glacier?",
            "What formats are available for the vault inventory?",
            "What is the process for using AWS SDK for Java to initiate an inventory retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "archive",
          "CSV format",
          "InitiateJobRequest",
          "vault inventory",
          "AWS Region",
          "JSON format",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "API version 2012-06-01",
          "AmazonGlacierClient",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_67",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nNote that if an inventory has not been completed for the vault an error is returned.\nAmazon S3 Glacier (S3 Glacier) prepares an inventory for each vault periodically, every\n24 hours.\nS3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class.\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobParameters(\nnew JobParameters()\n.withType(\"inventory-retrieval\")\n.withSNSTopic(\"*** provide SNS topic ARN ****\")\n);\nInitiateJobResult initJobResult = client.initiateJob(initJobRequest);\nString jobId = initJobResult.getJobId();\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault, or specified an Amazon Simple Notification Service\n(Amazon SNS) topic when you initiated the job, S3 Glacier sends a message to the topic after it\ncompletes the job.\nYou can also poll S3 Glacier by calling the describeJob method to determine job completion\nstatus. However, using an Amazon SNS topic for notification is the recommended approach.\nThe code example given in the following section uses Amazon SNS for S3 Glacier to publish a\nmessage.\n4. Download the job output (vault inventory data) by executing the getJobOutput method.\nYou provide your account ID, job ID, and vault name by creating an instance of the\nGetJobOutputRequest class. If you don't provide an account ID, then the account ID\nDownloading a Vault Inventory Using Java API Version 2012-06-01 58",
      "start_idx": 125709,
      "end_idx": 127317,
      "metadata": {
        "num_sentences": 15,
        "num_words": 242,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Notification Setup"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "SNS topic",
            "describeJob",
            "getJobOutput",
            "Java API",
            "inventory-retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InitiateJobRequest",
            "InitiateJobResult",
            "Amazon SNS",
            "GetJobOutputRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault inventory from Amazon S3 Glacier using the Java API, including initiating a job, waiting for completion, and downloading the output.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory from Amazon S3 Glacier?",
            "What is the process for using the Java API to interact with S3 Glacier?",
            "How can I set up notifications for job completion in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetJobOutputRequest",
          "Amazon SNS",
          "getJobOutput",
          "InitiateJobRequest",
          "JobParameters",
          "vault inventory",
          "Amazon S3 Glacier",
          "inventory-retrieval",
          "Java API",
          "SNS topic",
          "describeJob",
          "InitiateJobResult"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_68",
      "text": "Amazon S3 Glacier Developer Guide\nassociated with the credentials you provide to sign the request is used. For more information,\nsee Using the AWS SDK for Java with Amazon S3 Glacier.\nThe output that S3 Glacier returns is available in the GetJobOutputResult object.\nGetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withJobId(\"*** provide job ID ***\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody(); provides the output stream.\nNote\nFor information about the job related underlying REST API, see Job Operations.\nExample: Retrieving a Vault Inventory Using the Amazon SDK for Java\nThe following Java code example retrieves the vault inventory for the specified vault.\nThe example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic.\nS3 Glacier sends notification to this topic after it completes the job.\n\u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue.\n\u2022 Initiates a job to download the specified archive.\nIn the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job.\n\u2022 Checks the Amazon SQS queue for a message that contains the job ID.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.\nDownloading a Vault Inventory Using Java API Version 2012-06-01 59",
      "start_idx": 127319,
      "end_idx": 128917,
      "metadata": {
        "num_sentences": 16,
        "num_words": 246,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "GetJobOutputRequest",
            "vault inventory",
            "Amazon SNS",
            "Amazon SQS",
            "job ID",
            "archive download",
            "REST API",
            "notification"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "GetJobOutputResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve vault inventory and download archives using the AWS SDK for Java with Amazon S3 Glacier, including code examples and integration with Amazon SNS and SQS for notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory using the AWS SDK for Java?",
            "What is the process for downloading archives from Amazon S3 Glacier?",
            "How do Amazon SNS and SQS integrate with S3 Glacier job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "Amazon SNS",
          "REST API",
          "vault inventory",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "job ID",
          "archive download",
          "GetJobOutputResult",
          "GetJobOutputRequest",
          "notification"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_74",
      "text": "Amazon S3 Glacier Developer Guide\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to retrieve a vault inventory using the low-level API of the AWS SDK\nfor .NET. The high-level API does not support retrieving a vault inventory.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Initiate an inventory retrieval job by executing the InitiateJob method.\nYou provide job information in an InitiateJobRequest object. Amazon S3 Glacier\n(S3 Glacier) returns a job ID in response. The response is available in an instance of the\nInitiateJobResponse class.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"inventory-retrieval\",\nSNSTopic = \"*** Provide Amazon SNS topic arn ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 65",
      "start_idx": 136955,
      "end_idx": 138470,
      "metadata": {
        "num_sentences": 15,
        "num_words": 216,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "InitiateJob",
            "InitiateJobRequest",
            "InitiateJobResponse",
            "inventory-retrieval",
            "SNSTopic",
            "RegionEndpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "Amazon SNS",
            "InitiateJobResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            ".NET Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to retrieving a vault inventory from Amazon S3 Glacier using the low-level API of the AWS SDK for .NET, including code examples and job initiation details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the process for initiating an inventory-retrieval job in S3 Glacier?",
            "How can I configure an Amazon SNS topic for job notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InitiateJobResponse",
          "AWS SDK for .NET",
          "Amazon SNS",
          "SNSTopic",
          "InitiateJobRequest",
          "RegionEndpoint",
          "InitiateJob",
          "vault inventory",
          "Amazon S3 Glacier",
          "inventory-retrieval",
          "AmazonGlacierClient"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_75",
      "text": "Amazon S3 Glacier Developer Guide\n(Amazon SNS) topic, or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message.\nYou can also poll S3 Glacier by calling the DescribeJob method to determine job completion\nstatus. Although using Amazon SNS topic for notification is the recommended approach.\n4. Download the job output (vault inventory data) by executing the GetJobOutput method.\nYou provide your account ID, vault name, and the job ID information by creating an instance\nof the GetJobOutputRequest class. If you don't provide an account ID, then the account\nID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier.\nThe output that S3 Glacier returns is available in the GetJobOutputResponse object.\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nNote\nFor information about the job related underlying REST API, see Job Operations.\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 66",
      "start_idx": 138472,
      "end_idx": 139934,
      "metadata": {
        "num_sentences": 12,
        "num_words": 215,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "DescribeJob",
            "GetJobOutput",
            "Vault Inventory",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "Stream",
            "AWS SDK for .NET",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve job output, such as vault inventory data, from Amazon S3 Glacier using the AWS SDK for .NET, with an emphasis on using Amazon SNS for notifications and the GetJobOutput API method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use Amazon SNS to receive job completion notifications for S3 Glacier?",
            "What are the steps to download vault inventory data using AWS SDK for .NET?",
            "What is the purpose of the GetJobOutput API method in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetJobOutputResponse",
          "AWS SDK for .NET",
          "DescribeJob",
          "Amazon SNS",
          "Stream",
          "REST API",
          "Amazon S3 Glacier",
          "Vault Inventory",
          "GetJobOutput",
          "GetJobOutputRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_76",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Retrieving a Vault Inventory Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example retrieves the vault inventory for the specified vault.\nThe example performs the following tasks:\n\u2022 Set up an Amazon SNS topic.\nS3 Glacier sends notification to this topic after it completes the job.\n\u2022 Set up an Amazon SQS queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages.\n\u2022 Initiate a job to download the specified archive.\nIn the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job.\n\u2022 Periodically check the Amazon SQS queue for a message.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON.\n\u2022 Clean up by deleting the Amazon SNS topic and the Amazon SQS queue it created.\nExample\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 67",
      "start_idx": 139936,
      "end_idx": 141336,
      "metadata": {
        "num_sentences": 13,
        "num_words": 212,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "job request",
            "archive download",
            "C#",
            "AWS SDK",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Services",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "JSON.NET"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to retrieve a vault inventory from Amazon S3 Glacier using the low-level AWS SDK for .NET API, including setting up Amazon SNS and SQS for notifications and handling responses programmatically.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory from Amazon S3 Glacier using C#?",
            "What steps are required to set up SNS and SQS for S3 Glacier notifications?",
            "How do I parse JSON responses from S3 Glacier using JSON.NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "AWS SDK for .NET",
          "Amazon SNS",
          "vault inventory",
          "C#",
          "Amazon S3 Glacier",
          "job request",
          "JSON.NET",
          "archive download",
          "AWS SDK",
          "low-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_80",
      "text": "Amazon S3 Glacier Developer Guide\nProcessQueue(jobId, client);\n}\nprivate static void ProcessQueue(string jobId, AmazonGlacierClient client)\n{\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest()\n{ QueueUrl = queueUrl, MaxNumberOfMessages = 1 };\nbool jobDone = false;\nwhile (!jobDone)\n{\nConsole.WriteLine(\"Poll SQS queue\");\nReceiveMessageResponse receiveMessageResponse =\nsqsClient.ReceiveMessage(receiveMessageRequest);\nif (receiveMessageResponse.Messages.Count == 0)\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n}\nelse if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the inventory.\");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\nDownloading a Vault Inventory Using .NET API Version 2012-06-01 71",
      "start_idx": 145432,
      "end_idx": 147033,
      "metadata": {
        "num_sentences": 3,
        "num_words": 140,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Polling Logic",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SQS queue",
            "jobId",
            "ReceiveMessageRequest",
            "DownloadOutput",
            "StatusCode",
            "Vault Inventory",
            "AmazonGlacierClient",
            "JsonConvert",
            "DeleteMessageRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "GlacierUtils",
            "SQS",
            "Vault Inventory"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Queue",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            "JsonConvert",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to process a job queue in Amazon S3 Glacier using .NET, including polling an SQS queue and handling job statuses to download a vault inventory or handle errors.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I poll an SQS queue for job status updates in Amazon S3 Glacier?",
            "What is the process for downloading a vault inventory using .NET?",
            "How do I handle failed job statuses in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "DownloadOutput",
          "jobId",
          "JsonConvert",
          "DeleteMessageRequest",
          "ReceiveMessageRequest",
          "Amazon S3 Glacier",
          "Vault Inventory",
          "GlacierUtils",
          "AmazonGlacierClient",
          "StatusCode",
          "SQS",
          "SQS queue"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_81",
      "text": "Amazon S3 Glacier Developer Guide\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading a Vault Inventory Using the REST API\nTo download a vault inventory using the REST API\nDownloading a vault inventory is a two-step process.\n1. Initiate a job of the inventory-retrieval type. For more information, see Initiate Job\n(POST jobs).\n2. After the job completes, download the inventory data. For more information, see Get Job\nOutput (GET output).\nDownloading a Vault Inventory Using REST API Version 2012-06-01 72",
      "start_idx": 147035,
      "end_idx": 148059,
      "metadata": {
        "num_sentences": 8,
        "num_words": 140,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Inventory",
            "REST API",
            "GetJobOutput",
            "jobId",
            "VaultName",
            "Stream",
            "CopyStream",
            "inventory-retrieval",
            "2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Inventory",
            "REST API",
            "GetJobOutputRequest",
            "GetJobOutputResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to downloading a vault inventory from Amazon S3 Glacier using the REST API, including example code in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a vault inventory from Amazon S3 Glacier?",
            "What is the process for using the REST API to download inventory data?",
            "Can you provide a C# code example for downloading a vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetJobOutputResponse",
          "CopyStream",
          "Stream",
          "REST API",
          "jobId",
          "Vault Inventory",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "inventory-retrieval",
          "2012-06-01",
          "GetJobOutputRequest",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_82",
      "text": "Amazon S3 Glacier Developer Guide\nDownloading a Vault Inventory in Amazon S3 Glacier Using the AWS\nCommand Line Interface\nFollow these steps to download a vault inventory in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Downloading a Vault Inventory Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 73",
      "start_idx": 148061,
      "end_idx": 149277,
      "metadata": {
        "num_sentences": 11,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault inventory",
            "list-vaults",
            "aws configure list",
            "default profile",
            "command prompt",
            "API Version 2012-06-01",
            "credentials",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault inventory",
            "list-vaults",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download a vault inventory from Amazon S3 Glacier using the AWS Command Line Interface (CLI), including setup and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI for Amazon S3 Glacier?",
            "What commands are used to download a vault inventory in S3 Glacier?",
            "How can I verify my AWS CLI configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "default profile",
          "AWS CLI",
          "credentials",
          "list-vaults",
          "aws configure list",
          "vault inventory",
          "command prompt",
          "Amazon S3 Glacier",
          "account ID",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_83",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Downloading a Vault Inventory Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. The job ID does not expire\nfor at least 24 hours after S3 Glacier completes the job. If you have either set a notification\nDownloading a Vault Inventory Using the AWS CLI API Version 2012-06-01 74",
      "start_idx": 149279,
      "end_idx": 150423,
      "metadata": {
        "num_sentences": 9,
        "num_words": 158,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault inventory",
            "initiate-job",
            "describe-job",
            "job parameters",
            "inventory retrieval",
            "vault ARN",
            "job ID",
            "job status"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vault inventory",
            "job ID",
            "vault ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a vault inventory from Amazon S3 Glacier using the AWS CLI, including initiating and describing the retrieval job.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory from S3 Glacier using AWS CLI?",
            "What commands are needed to check the status of an inventory retrieval job?",
            "What is the expected output format for a vault inventory retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "describe-job",
          "AWS CLI",
          "initiate-job",
          "vault inventory",
          "Amazon S3 Glacier",
          "job ID",
          "vault ARN",
          "job status",
          "S3 Glacier",
          "job parameters"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_84",
      "text": "Amazon S3 Glacier Developer Guide\nconfiguration on the vault, or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set the notification configuration for specific events on the vault. For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a\nmessage to the specified SNS topic anytime the specific events occur.\n4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":\"*** archive description (if set) ***\",\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nConfiguring Vault Notifications in Amazon S3 Glacier\nRetrieving anything from Amazon S3 Glacier, such as an archive from a vault or a vault inventory, is\na two-step process.\n1. Initiate a retrieval job.\n2. After the job is completed, download the job output.\nConfiguring Vault Notifications API Version 2012-06-01 75",
      "start_idx": 150425,
      "end_idx": 151883,
      "metadata": {
        "num_sentences": 13,
        "num_words": 199,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Retrieval",
              "Notification"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "SNS topic",
            "retrieval job",
            "get-job-output",
            "VaultARN",
            "ArchiveList",
            "SHA256TreeHash",
            "InventoryDate",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications and retrieve data from Amazon S3 Glacier using a two-step process involving job initiation and output retrieval.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What is the process to retrieve a vault inventory in Amazon S3 Glacier?",
            "How can I use AWS CLI to download retrieval job output?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryDate",
          "SHA256TreeHash",
          "Amazon SNS",
          "vault",
          "retrieval job",
          "get-job-output",
          "VaultARN",
          "Amazon S3 Glacier",
          "ArchiveList",
          "SNS topic",
          "API Version 2012-06-01",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_85",
      "text": "Amazon S3 Glacier Developer Guide\nYou can set a notification configuration on a vault so that when a job is completed, a message is\nsent to an Amazon Simple Notification Service (Amazon SNS) topic.\nTopics\n\u2022 Configuring Vault Notifications in S3 Glacier: General Concepts\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Configuring Vault Notifications in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Configuring Vault Notifications in S3 Glacier Using the REST API\n\u2022 Configuring Vault Notifications by Using the S3 Glacier Console\n\u2022 Configuring Vault Notifications Using the AWS Command Line Interface\nConfiguring Vault Notifications in S3 Glacier: General Concepts\nA S3 Glacier retrieval job request is run asynchronously. You must wait until S3 Glacier completes\nthe job before you can get its output. You can periodically poll S3 Glacier to determine the job\nstatus, but that is not an optimal approach. S3 Glacier also supports notifications. When a job\nis completed, the job can post a message to an Amazon Simple Notification Service (Amazon\nSNS) topic. Using this feature requires you to set a notification configuration on the vault. In the\nconfiguration, you identify one or more events and an Amazon SNS topic to which you want S3\nGlacier to send a message when the event occurs.\nS3 Glacier defines events specifically related to job completion (ArchiveRetrievalCompleted,\nInventoryRetrievalCompleted) that you can add to the vault's notification configuration.\nWhen a specific job is completed, S3 Glacier publishes a notification message to the SNS topic.\nThe notification configuration is a JSON document as shown in the following example.\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nYou can configure only one Amazon SNS topic for a vault.\nGeneral Concepts API Version 2012-06-01 76",
      "start_idx": 151885,
      "end_idx": 153807,
      "metadata": {
        "num_sentences": 13,
        "num_words": 292,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Explanation",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Amazon SNS",
            "vault notifications",
            "job completion",
            "notification configuration",
            "retrieval job",
            "events",
            "JSON document",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to configure vault notifications in Amazon S3 Glacier to send messages to an Amazon SNS topic upon job completion, using various tools and APIs.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What events can trigger notifications in S3 Glacier?",
            "How do I use JSON for notification configuration in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "AWS SDK for .NET",
          "Amazon SNS",
          "retrieval job",
          "ArchiveRetrievalCompleted",
          "JSON document",
          "REST API",
          "notification configuration",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "job completion",
          "S3 Glacier",
          "vault notifications",
          "events"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_86",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nAdding a notification configuration to a vault causes S3 Glacier to send a notification each\ntime the event specified in the notification configuration occurs. You can also optionally\nspecify an Amazon SNS topic in each job initiation request. If you add both the notification\nconfiguration on the vault and also specify an Amazon SNS topic in your initiate job\nrequest, S3 Glacier sends both notifications.\nThe job completion message S3 Glacier sends include information such as the type of job\n(InventoryRetrieval, ArchiveRetrieval), job completion status, SNS topic name, job status\ncode, and the vault ARN. The following is an example notification S3 Glacier sent to an SNS topic\nafter an InventoryRetrieval job is completed.\n{\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"Completed\": true,\n\"CompletionDate\": \"2012-06-12T22:20:40.790Z\",\n\"CreationDate\": \"2012-06-12T22:20:36.814Z\",\n\"InventorySizeInBytes\":11693,\n\"JobDescription\": \"my retrieval job\",\n\"JobId\":\"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"SHA256TreeHash\":null,\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\":\"Succeeded\",\n\"StatusMessage\": \"Succeeded\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nIf the Completed field is true, you must also check the StatusCode to check if the job completed\nsuccessfully or failed.\nNote\nThe Amazon SNS topic must allow the vault to publish a notification. By default, only the\nAmazon SNS topic owner can publish a message to the topic. However, if the Amazon SNS\ntopic and the vault are owned by different AWS accounts, then you must configure the\nGeneral Concepts API Version 2012-06-01 77",
      "start_idx": 153809,
      "end_idx": 155582,
      "metadata": {
        "num_sentences": 9,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Warning",
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "notification configuration",
            "Amazon SNS topic",
            "job initiation request",
            "InventoryRetrieval",
            "ArchiveRetrieval",
            "vault ARN",
            "job completion status",
            "StatusCode",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "VaultARN",
            "InventoryRetrieval",
            "ArchiveRetrieval"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "Job Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how S3 Glacier sends notifications for vault events and job completions, including configuration details for Amazon SNS topics and examples of notification messages.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I configure notifications for an S3 Glacier vault?",
            "What information is included in S3 Glacier job completion notifications?",
            "How do I ensure an Amazon SNS topic allows a vault to publish notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Cloud Storage]",
        "tf_idf_keywords": [
          "job initiation request",
          "Amazon SNS",
          "VaultARN",
          "notification configuration",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "vault ARN",
          "InventoryRetrieval",
          "Amazon SNS topic",
          "job completion status",
          "StatusCode"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_87",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon SNS topic to accept publications from the vault. You can configure the Amazon\nSNS topic policy in the Amazon SNS console.\nFor more information about Amazon SNS, see Getting Started with Amazon SNS.\nConfiguring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for Java\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class.\nYou need to provide the vault name, notification configuration information, and account ID. In\nspecifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)).\n3. Run the setVaultNotifications method by providing the request object as a parameter.\nThe following Java code snippet illustrates the preceding steps. The snippet sets a notification\nconfiguration on a vault. The configuration requests Amazon S3 Glacier (S3 Glacier) to send a\nnotification to the specified Amazon SNS topic when either the ArchiveRetrievalCompleted\nevent or the InventoryRetrievalCompleted event occurs.\nSetVaultNotificationsRequest request = new SetVaultNotificationsRequest()\n.withAccountId(\"-\")\n.withVaultName(\"*** provide vault name ***\")\n.withVaultNotificationConfig(\nnew VaultNotificationConfig()\n.withSNSTopic(\"*** provide SNS topic ARN ***\")\n.withEvents(\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\")\nConfiguring Vault Notifications Using Java API Version 2012-06-01 78",
      "start_idx": 155584,
      "end_idx": 157520,
      "metadata": {
        "num_sentences": 19,
        "num_words": 265,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notifications",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "SetVaultNotificationsRequest",
            "VaultNotificationConfig",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS SDK for Java",
            "SetVaultNotificationsRequest",
            "VaultNotificationConfig"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Services",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This section provides a step-by-step guide to configuring vault notifications in Amazon S3 Glacier using the AWS SDK for Java, including code examples and necessary configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using Java?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "How do I use the AWS SDK for Java to set vault notification configurations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SetVaultNotificationsRequest",
          "InventoryRetrievalCompleted",
          "Amazon SNS",
          "ArchiveRetrievalCompleted",
          "VaultNotificationConfig",
          "notification configuration",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Vault Notifications",
          "AmazonGlacierClient"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_88",
      "text": "Amazon S3 Glacier Developer Guide\n);\nclient.setVaultNotifications(request);\nNote\nFor information about the underlying REST API, see Vault Operations.\nExample: Setting the Notification Configuration on a Vault Using the AWS SDK for\nJava\nThe following Java code example sets a vault's notifications configuration, deletes the\nconfiguration, and then restores the configuration. For step-by-step instructions on how to run the\nfollowing example, see Using the AWS SDK for Java with Amazon S3 Glacier.\nExample\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.GetVaultNotificationsResult;\nimport com.amazonaws.services.glacier.model.SetVaultNotificationsRequest;\nimport com.amazonaws.services.glacier.model.VaultNotificationConfig;\npublic class AmazonGlacierVaultNotifications {\npublic static AmazonGlacierClient client;\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String snsTopicARN = \"*** provide sns topic ARN ***\";\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\nConfiguring Vault Notifications Using Java API Version 2012-06-01 79",
      "start_idx": 157522,
      "end_idx": 159079,
      "metadata": {
        "num_sentences": 4,
        "num_words": 144,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "AWS SDK for Java",
            "SetVaultNotificationsRequest",
            "DeleteVaultNotificationsRequest",
            "GetVaultNotificationsRequest",
            "VaultNotificationConfig",
            "ProfileCredentialsProvider",
            "SNS Topic ARN",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Vault Notification Configuration",
            "SNS Topic",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of configuring vault notifications in Amazon S3 Glacier using the AWS SDK for Java, including setting, deleting, and restoring the configuration.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier using Java?",
            "What are the steps to set and delete vault notification configurations?",
            "What is an example of using AWS SDK for Java with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "SetVaultNotificationsRequest",
          "SNS",
          "DeleteVaultNotificationsRequest",
          "REST API",
          "VaultNotificationConfig",
          "Vault Notification Configuration",
          "SNS Topic",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Vault Notifications",
          "GetVaultNotificationsRequest",
          "ProfileCredentialsProvider",
          "SNS Topic ARN"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_90",
      "text": "Amazon S3 Glacier Developer Guide\nSystem.out.println(\"Notifications configuration deleted for vault: \" +\nvaultName);\n}\n}\nConfiguring Vault Notifications in Amazon S3 Glacier Using the AWS\nSDK for .NET\nThe following are the steps to configure notifications on a vault using the low-level API of the AWS\nSDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the vault resides. All operations you perform using\nthis client apply to that AWS Region.\n2. Provide notification configuration information by creating an instance of the\nSetVaultNotificationsRequest class.\nYou need to provide the vault name, notification configuration information, and account ID. If\nyou don't provide an account ID, then the account ID associated with the credentials you provide\nto sign the request is assumed. For more information, see Using the AWS SDK for .NET with\nAmazon S3 Glacier.\nIn specifying a notification configuration, you provide the Amazon Resource Name (ARN) of an\nexisting Amazon SNS topic and one or more events for which you want to be notified. For a list\nof supported events, see Set Vault Notification Configuration (PUT notification-configuration)).\n3. Run the SetVaultNotifications method by providing the request object as a parameter.\n4. After setting notification configuration on a vault, you can retrieve configuration\ninformation by calling the GetVaultNotifications method, and remove it by calling the\nDeleteVaultNotifications method provided by the client.\nExample: Setting the Notification Configuration on a Vault Using the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example sets the\nnotification configuration on the vault (\"examplevault\") in the US West (Oregon) Region,\nretrieves the configuration, and then deletes it. The configuration requests Amazon S3\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 81",
      "start_idx": 160630,
      "end_idx": 162579,
      "metadata": {
        "num_sentences": 19,
        "num_words": 291,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "SetVaultNotificationsRequest",
            "Amazon SNS",
            "ARN",
            "notification configuration",
            "GetVaultNotifications",
            "DeleteVaultNotifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Amazon SNS",
            "AmazonGlacierClient",
            "SetVaultNotificationsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the AWS SDK for .NET, including steps for setting, retrieving, and deleting notification configurations with code examples.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using AWS SDK for .NET?",
            "What are the steps to set up notification configurations for a vault?",
            "How can I retrieve or delete vault notification configurations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SetVaultNotificationsRequest",
          "AWS SDK for .NET",
          "Amazon SNS",
          "ARN",
          "DeleteVaultNotifications",
          "notification configuration",
          "GetVaultNotifications",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "AmazonGlacierClient"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_91",
      "text": "Amazon S3 Glacier Developer Guide\nGlacier (S3 Glacier) to send a notification to the specified Amazon SNS topic when either the\nArchiveRetrievalCompleted event or the InventoryRetrievalCompleted event occurs.\nNote\nFor information about the underlying REST API, see Vault Operations.\nFor step-by-step instructions to run the following example, see Running Code Examples. You need\nto update the code as shown and provide an existing vault name and an Amazon SNS topic.\nExample\nusing System;\nusing System.Collections.Generic;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass VaultNotificationSetGetDelete\n{\nstatic string vaultName = \"examplevault\";\nstatic string snsTopicARN = \"*** Provide Amazon SNS topic ARN ***\";\nstatic IAmazonGlacier client;\npublic static void Main(string[] args)\n{\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Adding notification configuration to the vault.\");\nSetVaultNotificationConfig();\nGetVaultNotificationConfig();\nConsole.WriteLine(\"To delete vault notification configuration, press Enter\");\nConsole.ReadKey();\nDeleteVaultNotificationConfig();\n}\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\nConfiguring Vault Notifications Using .NET API Version 2012-06-01 82",
      "start_idx": 162581,
      "end_idx": 163916,
      "metadata": {
        "num_sentences": 6,
        "num_words": 154,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "Notification",
            "Amazon SNS",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "VaultNotificationConfig",
            "AmazonGlacierClient",
            "AWS SDK",
            "REST API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "VaultNotificationConfig",
            "AmazonGlacierClient",
            "USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of configuring vault notifications in Amazon S3 Glacier using the AWS SDK for .NET, including adding, retrieving, and deleting notification configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What is the process to add, retrieve, and delete notification configurations using AWS SDK for .NET?",
            "What are the required parameters for setting up notifications in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "Amazon SNS",
          "Vault",
          "ArchiveRetrievalCompleted",
          "REST API",
          "VaultNotificationConfig",
          "AWS SDK",
          "Notification",
          "Amazon S3 Glacier",
          "AmazonGlacierClient",
          "USWest2"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_93",
      "text": "Amazon S3 Glacier Developer Guide\n}\n}\n}\nConfiguring Vault Notifications in S3 Glacier Using the REST API\nTo configure vault notifications using the REST API, see Set Vault Notification Configuration\n(PUT notification-configuration). Additionally, you can also get vault notifications (Get Vault\nNotifications (GET notification-configuration)) and delete vault notifications (Delete Vault\nNotifications (DELETE notification-configuration)).\nConfiguring Vault Notifications by Using the S3 Glacier Console\nThis section describes how to configure vault notifications by using the Amazon S3 Glacier console.\nWhen you configure notifications, you specify job-completion events that send a notification to an\nAmazon Simple Notification Service (Amazon SNS) topic. In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notifications to when you initiate a job. If your\nvault is configured to send a notification for a specific event and you also configure notifications in\nthe job-initiation request, then two notifications are sent.\nTo configure a vault notification\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. In the left navigation pane, choose Vaults.\n3. In the Vaults list, choose a vault.\n4. In the Notifications section, choose Edit.\n5. On the Event notifications page, choose Turn on notifications.\n6. In the Notifications section, choose one of the following Amazon Simple Notification Service\n(Amazon SNS) options, and then follow the corresponding steps:\nAmazon SNS options Action\nCreate new SNS topic\n1.\nChoose Create new SNS topic.\n2.\nFor Topic name, enter the name of the new topic.\nConfiguring Vault Notifications Using the REST API API Version 2012-06-01 84",
      "start_idx": 165278,
      "end_idx": 167067,
      "metadata": {
        "num_sentences": 22,
        "num_words": 263,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "API Usage"
            ]
          },
          "keywords": [
            "vault notifications",
            "Amazon SNS",
            "S3 Glacier",
            "REST API",
            "job-completion events",
            "AWS Management Console",
            "notification-configuration",
            "event notifications",
            "SNS topic",
            "job-initiation request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon Simple Notification Service (SNS)",
            "Vaults",
            "Event notifications page",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using both the REST API and the AWS Management Console, including steps to create and manage Amazon SNS topics for notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using the REST API?",
            "What are the steps to set up notifications in the S3 Glacier console?",
            "How can I create a new Amazon SNS topic for vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SNS",
          "event notifications",
          "notification-configuration",
          "AWS Management Console",
          "REST API",
          "Vaults",
          "Event notifications page",
          "job-initiation request",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service (SNS)",
          "job-completion events",
          "SNS topic",
          "S3 Glacier",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_94",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon SNS options Action\nTopic names can be up to 256 characters.\nAlphanumeric characters, hyphens (-), and und\nerscores (_) are allowed. Topic names must be\nunique within the account and AWS Region.\n3.\n(Optional) If you want to subscribe to the topic by\nusing SMS messages, enter a name for Display\nname.\nA display name can have up to 100 characters.\nChoose an existing SNS topic\n1.\nChoose Choose an existing SNS topic.\n2.\nUnder Specify SNS topic, choose one of the fol\nlowing options:\n\u2022\nChoose from your SNS topics\nAn SNS topic dropdown list appears.\nChoose an existing topic from the dropdown\nlist.\n\u2022\nEnter SNS topic ARN\nAn Amazon SNS topic ARN text box appears.\nEnter the Amazon Resource Name (ARN) for\nyour SNS topic. An SNS topic ARN has the\nfollowing format:\narn:aws:sns: region:account-i\nd :topic-name\nYou can find the SNS topic ARN in the Amazon\nSNS console.\nConfiguring Vault Notifications by Using the Console API Version 2012-06-01 85",
      "start_idx": 167069,
      "end_idx": 168050,
      "metadata": {
        "num_sentences": 15,
        "num_words": 169,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "Display name",
            "Amazon SNS console",
            "ARN",
            "AWS Region",
            "Vault Notifications",
            "Console API",
            "SMS messages",
            "Topic names"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "SNS topic ARN",
            "AWS Region",
            "Console API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Infrastructure",
          "secondary_categories": [
            "Messaging Services",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Amazon SNS console"
          ]
        },
        "semantic": {
          "summary": "This section provides step-by-step instructions for configuring Amazon SNS topics and subscribing to them for notifications in Amazon S3 Glacier. It includes details about topic naming conventions and specifying SNS topic ARNs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What are the naming rules for Amazon SNS topics?",
            "How can I specify an SNS topic ARN in the console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Infrastructure]",
        "tf_idf_keywords": [
          "Amazon SNS console",
          "Amazon SNS",
          "SNS topic ARN",
          "Console API Version 2012-06-01",
          "ARN",
          "Display name",
          "AWS Region",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "Topic names",
          "SNS topic",
          "SMS messages",
          "Console API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_95",
      "text": "Amazon S3 Glacier Developer Guide\n7. Under Events, select one or both events that you want to send notifications:\n\u2022 To send a notification only when archive retrieval jobs are complete, select Archive Retrieval\nJob Complete.\n\u2022 To send a notification only when vault inventory jobs are complete, select Vault Inventory\nRetrieval Job Complete.\nConfiguring Vault Notifications Using the AWS Command Line Interface\nThis section describes how to configure vault notifications using the AWS Command Line Interface.\nWhen you configure notifications, you specify job completion events that trigger notification to an\nAmazon Simple Notification Service (Amazon SNS) topic. In addition to configuring notifications\nfor the vault, you can also specify a topic to publish notification to when you initiate a job. If your\nvault is configured to notify for a specific event and you specify notification in the job initiation\nrequest, then two notifications are sent.\nFollow these steps to configure vault notification using the AWS CLI.\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Configure Vault Notifications Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\nConfiguring Vault Notifications Using the CLI API Version 2012-06-01 86",
      "start_idx": 168052,
      "end_idx": 169734,
      "metadata": {
        "num_sentences": 15,
        "num_words": 261,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "AWS CLI",
            "Amazon SNS",
            "job completion events",
            "archive retrieval",
            "vault inventory",
            "notification configuration",
            "job initiation",
            "AWS Command Line Interface"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "Archive Retrieval Job Complete",
            "Vault Inventory Retrieval Job Complete"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Notification Systems",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using the AWS CLI, including specifying job completion events that trigger Amazon SNS notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier using the AWS CLI?",
            "What job completion events can trigger notifications in Amazon S3 Glacier?",
            "How can I verify my AWS CLI setup before configuring vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "archive retrieval",
          "Archive Retrieval Job Complete",
          "Amazon SNS",
          "AWS CLI",
          "job initiation",
          "Vault Inventory Retrieval Job Complete",
          "vault inventory",
          "notification configuration",
          "job completion events",
          "Amazon S3 Glacier",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_96",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Configure Vault Notifications Using the AWS CLI\n1. Use the set-vault-notifications command to configure notifications that will be sent\nwhen specific events happen to a vault. By default, you don't get any notifications.\naws glacier set-vault-notifications --vault-name examplevault --account-\nid 111122223333 --vault-notification-config file://notificationconfig.json\n2. The notification configuration is a JSON document as shown in the following example.\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nFor more information about using Amazon SNS topics for S3 Glacier see, Configuring Vault\nNotifications in S3 Glacier: General Concepts\nFor more information about Amazon SNS, see Getting Started with Amazon SNS.\nDeleting a Vault in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) deletes a vault only if there are no archives in the vault as of the\nlast inventory it computed and there have been no writes to the vault since the last inventory. For\ninformation about deleting archives, see Deleting an Archive in Amazon S3 Glacier. For information\nabout downloading a vault inventory, Downloading a Vault Inventory in Amazon S3 Glacier.\nDeleting a Vault API Version 2012-06-01 87",
      "start_idx": 169736,
      "end_idx": 171350,
      "metadata": {
        "num_sentences": 13,
        "num_words": 230,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS CLI",
            "notifications",
            "SNS topics",
            "vault inventory",
            "archives",
            "JSON document",
            "list-vaults",
            "set-vault-notifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "vault inventory",
            "notification configuration"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Command Line Tools",
            "Event Notifications"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage S3 Glacier vaults using the AWS CLI, including listing vaults, configuring notifications, and deleting vaults with specific conditions. It also provides example commands and JSON configuration templates.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How can I list all S3 Glacier vaults using the AWS CLI?",
            "What is the process to configure vault notifications in S3 Glacier?",
            "What are the conditions for deleting a vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CLI",
          "notifications",
          "set-vault-notifications",
          "archives",
          "Amazon SNS",
          "vault",
          "JSON document",
          "list-vaults",
          "vault inventory",
          "notification configuration",
          "Amazon S3 Glacier",
          "SNS topics",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_97",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nS3 Glacier prepares an inventory for each vault periodically, every 24 hours. Because the\ninventory might not reflect the latest information, S3 Glacier ensures the vault is indeed\nempty by checking if there were any write operations since the last vault inventory.\nTopics\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting a Vault in S3 Glacier Using the REST API\n\u2022 Deleting an Empty Vault by Using the S3 Glacier Console\n\u2022 Deleting a Vault in Amazon S3 Glacier Using the AWS Command Line Interface\nDeleting a Vault in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete a vault using the low-level API of the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteVaultRequest class.\nYou need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for Java with Amazon S3 Glacier.\n3. Run the deleteVault method by providing the request object as a parameter.\nAmazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault).\nThe following Java code snippet illustrates the preceding steps.\ntry {\nDeleting a Vault Using Java API Version 2012-06-01 88",
      "start_idx": 171352,
      "end_idx": 173029,
      "metadata": {
        "num_sentences": 18,
        "num_words": 294,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "AWS SDK for Java",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "AWS Region",
            "deleteVault method",
            "account ID",
            "REST API",
            "S3 Glacier Console"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "AWS Command Line Interface"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud SDKs",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS Command Line Interface",
            "S3 Glacier Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using the AWS SDK for Java, including prerequisites and step-by-step instructions with a code snippet.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What are the steps to delete an empty vault in S3 Glacier?",
            "What is the role of the DeleteVaultRequest class in deleting a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "deleteVault method",
          "S3 Glacier Console",
          "vault",
          "REST API",
          "AWS Region",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "account ID",
          "AmazonGlacierClient",
          "DeleteVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_98",
      "text": "Amazon S3 Glacier Developer Guide\nDeleteVaultRequest request = new DeleteVaultRequest()\n.withVaultName(\"*** provide vault name ***\");\nclient.deleteVault(request);\nSystem.out.println(\"Deleted vault: \" + vaultName);\n} catch (Exception e) {\nSystem.err.println(e.getMessage());\n}\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault).\nExample: Deleting a Vault Using the AWS SDK for Java\nFor a working code example, see Example: Creating a Vault Using the AWS SDK for Java. The Java\ncode example shows basic vault operations including create and delete vault.\nDeleting a Vault in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete a vault.\nTopics\n\u2022 Deleting a Vault Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nDeleting a Vault Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteVault method\nyou can use to delete a vault.\nExample: Deleting a Vault Using the High-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the High-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault.\nDeleting a Vault Using .NET API Version 2012-06-01 89",
      "start_idx": 173031,
      "end_idx": 174439,
      "metadata": {
        "num_sentences": 8,
        "num_words": 228,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "DeleteVaultRequest",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "vault operations",
            "REST API",
            "Delete Vault",
            "high-level API",
            "low-level API"
          ],
          "entities": [
            "DeleteVaultRequest",
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming APIs",
            "SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using both the AWS SDK for Java and .NET, with code examples and references to related API methods.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the DeleteVault method in the high-level API of the AWS SDK for .NET?",
            "Where can I find examples of vault operations using AWS SDKs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault operations",
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "REST API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "high-level API",
          "low-level API",
          "Delete Vault",
          "DeleteVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_99",
      "text": "Amazon S3 Glacier Developer Guide\nDeleting a Vault Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps to delete a vault using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to delete a vault. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteVaultRequest class.\nYou need to provide the vault name and account ID. If you don't provide an account ID, then\naccount ID associated with the credentials you provide to sign the request is assumed. For more\ninformation, see Using the AWS SDK for .NET with Amazon S3 Glacier.\n3. Run the DeleteVault method by providing the request object as a parameter.\nAmazon S3 Glacier (S3 Glacier) deletes the vault only if it is empty. For more information, see\nDelete Vault (DELETE vault).\nThe following C# code snippet illustrates the preceding steps. The snippet retrieves metadata\ninformation of a vault that exists in the default AWS Region.\nAmazonGlacier client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nDeleteVaultRequest request = new DeleteVaultRequest()\n{\nVaultName = \"*** provide vault name ***\"\n};\nDeleteVaultResponse response = client.DeleteVault(request);\nNote\nFor information about the underlying REST API, see Delete Vault (DELETE vault).\nDeleting a Vault Using .NET API Version 2012-06-01 90",
      "start_idx": 174441,
      "end_idx": 175915,
      "metadata": {
        "num_sentences": 18,
        "num_words": 232,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Code Example"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "Amazon S3 Glacier",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "vault",
            "account ID",
            "AWS Region",
            "DeleteVault method",
            "REST API",
            "C# code snippet"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "DeleteVaultRequest",
            "AmazonGlacierClient",
            "DeleteVaultResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            ".NET Framework"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions on how to delete a vault in Amazon S3 Glacier using the AWS SDK for .NET, including a code snippet in C# for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault using the AWS SDK for .NET?",
            "What are the prerequisites for deleting a vault in Amazon S3 Glacier?",
            "Can I delete a non-empty vault in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "vault",
          "REST API",
          "DeleteVault method",
          "C# code snippet",
          "AWS Region",
          "Amazon S3 Glacier",
          "account ID",
          "DeleteVaultResponse",
          "AmazonGlacierClient",
          "DeleteVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_100",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Deleting a Vault Using the Low-Level API of the AWS SDK for .NET\nFor a working code example, see Example: Vault Operations Using the Low-Level API of the AWS\nSDK for .NET. The C# code example shows basic vault operations including create and delete vault.\nDeleting a Vault in S3 Glacier Using the REST API\nTo delete a vault using the REST API, see Delete Vault (DELETE vault).\nDeleting an Empty Vault by Using the S3 Glacier Console\nNote\nBefore deleting a vault, you must delete all existing archives within the vault. You can do\nthis by writing code to make a delete archive request by using either the REST API, the AWS\nSDK for Java, the AWS SDK for .NET, or by using the AWS Command Line Interface (AWS\nCLI). For information about deleting archives, see Step 5: Delete an Archive from a Vault in\nS3 Glacier.\nAfter your vault is empty, you can delete it by using the following steps.\nTo delete an empty vault by using the Amazon S3 Glacier console\n1. Sign into the AWS Management Console and open the S3 Glacier console at S3 Glacier\nConsole.\n2. Under Select a Region, choose the AWS Region where the vault exists.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, select the option button next to the name of the vault that you want to\ndelete, and then choose Delete at the top of the page.\n5. In the Delete vault dialog box, confirm that you want to delete the vault by choosing Delete.\nImportant\nDeleting a vault can't be undone.\n6. To verify that you've deleted the vault, open the Vaults list and enter the name of the vault\nthat you deleted. If the vault can't be found, your deletion was successful.\nDeleting a Vault Using REST API Version 2012-06-01 91",
      "start_idx": 175917,
      "end_idx": 177642,
      "metadata": {
        "num_sentences": 22,
        "num_words": 315,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "delete",
            "REST API",
            "AWS SDK for .NET",
            "AWS CLI",
            "archives",
            "Amazon S3 Glacier console",
            "region",
            "delete archive request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS SDK Usage",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using various methods including the REST API, AWS SDKs, and the S3 Glacier console, with necessary prerequisites such as clearing existing archives from the vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using the console?",
            "What are the prerequisites for deleting a vault in S3 Glacier?",
            "How do I delete archives before removing a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS CLI",
          "archives",
          "vault",
          "delete",
          "REST API",
          "AWS Management Console",
          "delete archive request",
          "region",
          "Amazon S3 Glacier",
          "Amazon S3 Glacier console",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_101",
      "text": "Amazon S3 Glacier Developer Guide\nDeleting a Vault in Amazon S3 Glacier Using the AWS Command Line\nInterface\nYou can delete empty and nonempty vaults in Amazon S3 Glacier (S3 Glacier) using the AWS\nCommand Line Interface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Empty Vault Using the AWS CLI\n\u2022 Example: Deleting a Nonempty Vault Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 92",
      "start_idx": 177644,
      "end_idx": 178875,
      "metadata": {
        "num_sentences": 11,
        "num_words": 204,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Example",
              "Command Execution"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "vault",
            "delete",
            "list-vaults",
            "configure",
            "account ID",
            "help command",
            "credentials",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "vaults",
            "account ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete empty and nonempty vaults in Amazon S3 Glacier using the AWS CLI, including setup instructions and example commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault in Amazon S3 Glacier using the AWS CLI?",
            "What commands are required to verify AWS CLI setup for S3 Glacier?",
            "What prerequisites are needed to use AWS CLI with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CLI",
          "credentials",
          "vault",
          "delete",
          "list-vaults",
          "vaults",
          "Amazon S3 Glacier",
          "account ID",
          "configure",
          "help command",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_102",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Deleting an Empty Vault Using the AWS CLI\n\u2022 Use the delete-vault command to delete a vault that contains no archives.\n\u2022\naws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nExample: Deleting a Nonempty Vault Using the AWS CLI\nS3 Glacier deletes a vault only if there are no archives in the vault as of the last inventory\nit computed, and there have been no writes to the vault since the last inventory. Deleting a\nnonempty vault is a three-step process: retrieving archive IDs from a vault's inventory report,\ndeleting each archive, and then deleting the vault.\n1. Use the initiate-job command to start an inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 93",
      "start_idx": 178877,
      "end_idx": 180143,
      "metadata": {
        "num_sentences": 8,
        "num_words": 179,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "AWS CLI",
            "delete-vault",
            "S3 Glacier",
            "inventory retrieval",
            "vault",
            "archive IDs",
            "initiate-job",
            "describe-job",
            "JSON",
            "nonempty vault"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "inventory job",
            "archive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for deleting both empty and nonempty vaults in Amazon S3 Glacier using the AWS CLI, including initiating and describing inventory retrieval jobs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an empty vault using the AWS CLI?",
            "What are the steps to delete a nonempty vault in S3 Glacier?",
            "How do I retrieve an inventory report for an S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "describe-job",
          "AWS CLI",
          "archive",
          "inventory job",
          "vault",
          "initiate-job",
          "delete-vault",
          "Amazon S3 Glacier",
          "JSON",
          "archive IDs",
          "S3 Glacier",
          "nonempty vault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_103",
      "text": "Amazon S3 Glacier Developer Guide\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.\n4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\nDeleting a Vault Using the AWS CLI API Version 2012-06-01 94",
      "start_idx": 180145,
      "end_idx": 181649,
      "metadata": {
        "num_sentences": 11,
        "num_words": 206,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "JobId",
            "InventoryRetrieval",
            "SNS topic",
            "get-job-output",
            "AWS CLI",
            "ArchiveList",
            "SHA256TreeHash",
            "Vault Notifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "JobId",
            "SNS topic",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS CLI Commands"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve inventory data from Amazon S3 Glacier using the AWS CLI, including setting up notifications and downloading job outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve inventory data from Amazon S3 Glacier?",
            "What is the process for configuring vault notifications in S3 Glacier?",
            "How can I use the get-job-output command to download job results?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "JobId",
          "SHA256TreeHash",
          "Amazon SNS",
          "get-job-output",
          "VaultARN",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "InventoryRetrieval",
          "ArchiveList",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_104",
      "text": "Amazon S3 Glacier Developer Guide\n5. Use the delete-archive command to delete each archive from a vault until none remain.\naws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id=\"*** archiveid ***\"\nNote\nIf your Archive ID starts with a hyphen or another special character you will need to put\nit in quotes in order to run this command.\n6. Use the initiate-job command to start a new inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters='{\"Type\": \"inventory-retrieval\"}'\n7. When it's complete, use the delete-vault command to delete a vault with no archives.\naws glacier delete-vault --vault-name awsexamplevault --account-id 111122223333\nTagging Your S3 Glacier Vaults\nYou can assign your own metadata to Amazon S3 Glacier vaults in the form of tags. A tag is a key-\nvalue pair that you define for a vault. For basic information about tagging, including restrictions on\ntags, see Tagging Amazon S3 Glacier Resources.\nThe following topics describe how you can add, list, and remove tags for vaults.\nTopics\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier Console\n\u2022 Tagging Vaults by Using the AWS CLI\n\u2022 Tagging Vaults by Using the Amazon S3 Glacier API\n\u2022 Related Sections\nTagging Vaults API Version 2012-06-01 95",
      "start_idx": 181651,
      "end_idx": 182971,
      "metadata": {
        "num_sentences": 12,
        "num_words": 202,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Instructions",
              "Tagging"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "delete-archive",
            "initiate-job",
            "delete-vault",
            "inventory retrieval",
            "tagging",
            "vault",
            "AWS CLI",
            "archive ID",
            "metadata"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault",
            "archive ID",
            "inventory retrieval job"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Resource Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage Amazon S3 Glacier vaults, including deleting archives, initiating inventory retrieval jobs, and tagging vaults using the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete archives from an Amazon S3 Glacier vault?",
            "What is the process for tagging Amazon S3 Glacier vaults?",
            "How can I start an inventory retrieval job using AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "AWS CLI",
          "tagging",
          "inventory retrieval job",
          "vault",
          "initiate-job",
          "delete-archive",
          "delete-vault",
          "Amazon S3 Glacier",
          "metadata",
          "archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_105",
      "text": "Amazon S3 Glacier Developer Guide\nTagging Vaults by Using the Amazon S3 Glacier Console\nYou can add, list, and remove tags using the S3 Glacier console, as described in the following\nprocedures.\nTo view the tags for a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose a vault.\n5. Choose the Vaults properties tab. Scroll to the Tags section to view the tags associated with\nthe vault.\nTo add a tag to a vault\nYou can associate up to 50 tags to a vault. Tags that are associated with a vault must have unique\ntag keys.\nFor more information about tag restrictions, see Tagging Amazon S3 Glacier Resources.\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose the name of the vault that you want to add tags to.\n5. Choose the Vault properties tab.\n6. In the Tags section, choose Add. The Add tags page appears.\n7. On the Add tags page, specify the tag key in the Key field, and optionally specify a tag value\nin the Value field.\n8. Choose Save changes.\nTagging Vaults by Using the Amazon S3 Glacier Console API Version 2012-06-01 96",
      "start_idx": 182973,
      "end_idx": 184449,
      "metadata": {
        "num_sentences": 33,
        "num_words": 260,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vaults",
            "Tags",
            "AWS Management Console",
            "Region selector",
            "Tag key",
            "Tag value",
            "Vault properties",
            "Add tags",
            "Tag restrictions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "Vaults",
            "Tags",
            "Region selector"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Resource Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to add, view, and remove tags for vaults using the S3 Glacier console. It provides step-by-step instructions for managing tags and highlights related restrictions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add a tag to a vault in Amazon S3 Glacier?",
            "What are the steps to view tags associated with a vault?",
            "Are there any restrictions on tagging resources in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Tag value",
          "Region selector",
          "AWS Management Console",
          "Tag restrictions",
          "Vault properties",
          "Amazon S3 Glacier",
          "Tag key",
          "Vaults",
          "Add tags",
          "Tags"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_106",
      "text": "Amazon S3 Glacier Developer Guide\nTo edit a tag\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose a vault name.\n5. Choose the Vault properties tab, and then scroll down to the Tags section.\n6. Under Tags, select the check box next to the tags that you want to change, then choose Edit.\nThe Edit tags page appears.\n7. Update the tag key in the Key field, and optionally update the tag value in the Value field.\n8. Choose Save changes.\nTo remove a tag from a vault\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. In the Vaults list, choose the name of the vault that you want to remove tags from.\n5. Choose the Vault properties tab. Scroll down to the Tags section.\n6. Under Tags, select the check box next to the tags that you want to remove, then choose\nDelete.\n7. The Delete tags dialog box opens. To confirm that you want to delete the selected tags,\nchoose Delete.\nTagging Vaults by Using the AWS CLI\nFollow these steps to add, list, or remove tags by using the AWS Command Line Interface (AWS\nCLI).\nEach tag is composed of a key and a value. Each vault can have up to 50 tags.\n1. To add tags to a vault, use the add-tags-to-vault command.\nTagging Vaults by Using the AWS CLI API Version 2012-06-01 97",
      "start_idx": 184451,
      "end_idx": 186074,
      "metadata": {
        "num_sentences": 39,
        "num_words": 295,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Tag Management"
            ]
          },
          "keywords": [
            "AWS Management Console",
            "S3 Glacier",
            "vault",
            "tags",
            "AWS CLI",
            "Region selector",
            "Vault properties",
            "Edit tags",
            "Delete tags",
            "add-tags-to-vault"
          ],
          "entities": [
            "AWS Management Console",
            "S3 Glacier",
            "AWS CLI",
            "Vault properties",
            "add-tags-to-vault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Tag Management",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for managing tags on Amazon S3 Glacier vaults using the AWS Management Console and AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I edit tags on an Amazon S3 Glacier vault?",
            "How can I remove tags from an Amazon S3 Glacier vault?",
            "What is the process for adding tags to a vault using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Region selector",
          "add-tags-to-vault",
          "AWS Management Console",
          "vault",
          "Delete tags",
          "Vault properties",
          "Amazon S3 Glacier",
          "Edit tags",
          "tags",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_107",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier add-tags-to-vault --vault-name examplevault --account-id 111122223333\n--tags id=1234,date=2020\nFor more information on this vault operation, see Add Tags To Vault .\n2. To list all the tags attached to a vault, use the list-tags-for-vault command.\naws glacier list-tags-for-vault --vault-name examplevault --account-id 111122223333\nFor more information on this vault operation, see List Tags For Vault.\n3. To remove one or more tags from the set of tags attached to a vault, use the remove-tags-\nfrom-vault command.\naws glacier remove-tags-from-vault --vault-name examplevault --account-\nid 111122223333 --tag-keys date\nFor more information on this vault operation, see Remove Tags From Vault.\nTagging Vaults by Using the Amazon S3 Glacier API\nYou can add, list, and remove tags by using the S3 Glacier API. For examples, see the following\ndocumentation:\nAdd Tags To Vault (POST tags add)\nAdds or updates tags for the specified vault.\nList Tags For Vault (GET tags)\nLists the tags for the specified vault.\nRemove Tags From Vault (POST tags remove)\nRemoves tags from the specified vault.\nRelated Sections\n\u2022 Tagging Amazon S3 Glacier Resources\nTagging Vaults by Using the Amazon S3 Glacier API API Version 2012-06-01 98",
      "start_idx": 186076,
      "end_idx": 187338,
      "metadata": {
        "num_sentences": 12,
        "num_words": 193,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "API Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "tags",
            "vault",
            "add-tags-to-vault",
            "list-tags-for-vault",
            "remove-tags-from-vault",
            "API",
            "tagging",
            "AWS CLI",
            "resources"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "add-tags-to-vault",
            "list-tags-for-vault",
            "remove-tags-from-vault",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Tagging Operations",
            "AWS Command-Line Interface"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on adding, listing, and removing tags for Amazon S3 Glacier vaults using both the AWS CLI and API. It includes command examples and references to related sections for further details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 Glacier vault?",
            "What command lists all the tags attached to a vault?",
            "How can I remove specific tags from a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "list-tags-for-vault",
          "remove-tags-from-vault",
          "AWS CLI",
          "tagging",
          "resources",
          "add-tags-to-vault",
          "API",
          "vault",
          "Amazon S3 Glacier",
          "tags"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_108",
      "text": "Amazon S3 Glacier Developer Guide\nS3 Glacier Vault Lock\nThe following topics describe how to lock a vault in Amazon S3 Glacier and how to use Vault Lock\npolicies.\nTopics\n\u2022 Vault Locking Overview\n\u2022 Locking a Vault by Using the S3 Glacier API\n\u2022 Locking a Vault using the AWS Command Line Interface\n\u2022 Locking a Vault by Using the S3 Glacier Console\nVault Locking Overview\nS3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a Vault Lock policy. You can specify controls such as \"write once read\nmany\" (WORM) in a Vault Lock policy and lock the policy from future edits.\nImportant\nAfter a Vault Lock policy is locked, the policy can no longer be changed or deleted.\nS3 Glacier enforces the controls set in the Vault Lock policy to help achieve your compliance\nobjectives. For example, you can use Vault Lock policies to enforce data retention. You can deploy\na variety of compliance controls in a Vault Lock policy by using the AWS Identity and Access\nManagement (IAM) policy language. For more information about Vault Lock policies, see Vault Lock\nPolicies.\nA Vault Lock policy is different from a vault access policy. Both policies govern access controls to\nyour vault. However, a Vault Lock policy can be locked to prevent future changes, which provides\nstrong enforcement for your compliance controls. You can use the Vault Lock policy to deploy\nregulatory and compliance controls, which typically require tight controls on data access.\nImportant\nWe recommend that you first create a vault, complete a Vault Lock policy, and then upload\nyour archives to the vault so that the policy will be applied to them.\nVault Lock API Version 2012-06-01 99",
      "start_idx": 187340,
      "end_idx": 189051,
      "metadata": {
        "num_sentences": 14,
        "num_words": 291,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Warning",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Vault Lock",
            "WORM",
            "compliance controls",
            "IAM policy",
            "Vault Lock policy",
            "data retention",
            "vault access policy",
            "AWS CLI",
            "S3 Glacier API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS Identity and Access Management (IAM)",
            "Vault Lock API",
            "Vault Lock policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Compliance",
          "secondary_categories": [
            "Data Security",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Glacier API",
            "S3 Glacier Console"
          ]
        },
        "semantic": {
          "summary": "The document explains how to use Amazon S3 Glacier Vault Lock to enforce compliance controls through Vault Lock policies, which can be locked to prevent future changes and ensure regulatory adherence. It also outlines different methods to lock a vault using the API, CLI, or console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I lock a vault in Amazon S3 Glacier?",
            "What is the difference between a Vault Lock policy and a vault access policy?",
            "How does S3 Glacier enforce compliance controls using Vault Lock?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Compliance]",
        "tf_idf_keywords": [
          "data retention",
          "IAM policy",
          "AWS CLI",
          "Vault Lock policy",
          "S3 Glacier API",
          "Vault Lock API",
          "Vault Lock",
          "WORM",
          "Amazon S3 Glacier",
          "vault access policy",
          "AWS Identity and Access Management (IAM)",
          "compliance controls",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_109",
      "text": "Amazon S3 Glacier Developer Guide\nIn contrast, you use a vault access policy to implement access controls that are not compliance\nrelated, temporary, and subject to frequent modification. You can use Vault lock and vault access\npolicies together. For example, you can implement time-based data-retention rules in the Vault\nLock policy (deny deletes), and grant read access to designated third parties or your business\npartners (allow reads) in your vault access policy.\nLocking a vault takes two steps:\n1. Initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24\nhours to validate your Vault Lock policy before the lock ID expires. To prevent your vault from\nexiting the in-progress state, you must complete the Vault Lock process within these 24 hours.\nOtherwise, your Vault Lock policy will be deleted.\n2. Use the lock ID to complete the lock process. If the Vault Lock policy doesn't work as expected,\nyou can stop the Vault Lock process and restart from the beginning. For information about how\nto use the S3 Glacier API to lock a vault, see Locking a Vault by Using the S3 Glacier API.\nLocking a Vault by Using the S3 Glacier API\nTo lock your vault with the Amazon S3 Glacier API, you first call Initiate Vault Lock (POST lock-\npolicy) with a Vault Lock policy that specifies the controls that you want to deploy. The Initiate\nVault Lock operation attaches the policy to your vault, transitions the Vault Lock to the in-\nprogress state, and returns a unique lock ID. After the Vault Lock enters the in-progress state, you\nhave 24 hours to complete the lock by calling Complete Vault Lock (POST lockId) with the lock ID\nthat was returned from the Initiate Vault Lock call.\nImportant\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.\n\u2022 After the Vault Lock policy is locked, it cannot be changed or deleted.\nIf you don't complete the Vault Lock process within 24 hours after entering the in-progress state,\nyour vault automatically exits the in-progress state, and the Vault Lock policy is removed. You can\ncall Initiate Vault Lock again to install a new Vault Lock policy and transition into the in-\nprogress state.\nVault Locking by Using the API API Version 2012-06-01 100",
      "start_idx": 189053,
      "end_idx": 191478,
      "metadata": {
        "num_sentences": 20,
        "num_words": 422,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "Vault Lock",
            "Vault Access Policy",
            "Amazon S3 Glacier",
            "Initiate Vault Lock",
            "Complete Vault Lock",
            "lock ID",
            "data retention",
            "API Version 2012-06-01",
            "read access",
            "delete restrictions"
          ],
          "entities": [
            "Vault Lock policy",
            "S3 Glacier API",
            "lock ID",
            "Vault Access Policy",
            "Amazon S3 Glacier"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Security",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Vault Lock policies in Amazon S3 Glacier to enforce data retention rules and access controls, including step-by-step instructions for locking a vault using the S3 Glacier API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I lock a vault using the S3 Glacier API?",
            "What happens if I don't complete the Vault Lock process within 24 hours?",
            "Can I modify a Vault Lock policy after it is locked?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "data retention",
          "Vault Access Policy",
          "Vault Lock policy",
          "S3 Glacier API",
          "Complete Vault Lock",
          "lock ID",
          "read access",
          "Initiate Vault Lock",
          "Vault Lock",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "delete restrictions"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_110",
      "text": "Amazon S3 Glacier Developer Guide\nThe in-progress state provides the opportunity to test your Vault Lock policy before you lock it.\nYour Vault Lock policy takes full effect during the in-progress state just as if the vault has been\nlocked, except that you can remove the policy by calling Abort Vault Lock (DELETE lock-policy).\nTo fine-tune your policy, you can repeat the Abort Vault Lock/Initiate Vault Lock\ncombination as many times as necessary to validate your Vault Lock policy changes.\nAfter you validate the Vault Lock policy, you can call Complete Vault Lock (POST lockId) with the\nmost recent lock ID to complete the vault locking process. Your vault transitions to a locked state,\nwhere the Vault Lock policy is unchangeable and can no longer be removed by calling Abort\nVault Lock.\nRelated Sections\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault using the AWS Command Line Interface\nYou can lock your vault using the AWS Command Line Interface. This will install a vault lock policy\non the specified vault and return the lock ID. You must complete the vault locking process within\n24 hours else the vault lock policy is removed from the vault.\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\nVault Locking Using the CLI API Version 2012-06-01 101",
      "start_idx": 191480,
      "end_idx": 193276,
      "metadata": {
        "num_sentences": 14,
        "num_words": 296,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Guide",
              "Command Usage"
            ]
          },
          "keywords": [
            "Vault Lock",
            "AWS CLI",
            "Vault Lock policy",
            "Abort Vault Lock",
            "Complete Vault Lock",
            "Initiate Vault Lock",
            "lock ID",
            "in-progress state",
            "locked state",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Vault Lock",
            "lock ID",
            "Vault Lock policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Services",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to lock a vault in Amazon S3 Glacier using Vault Lock policies and the AWS CLI, covering policy validation, locking processes, and related commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I lock a vault in Amazon S3 Glacier using AWS CLI?",
            "What are the steps to validate a Vault Lock policy before locking?",
            "What happens if I don't complete the vault locking process within 24 hours?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS CLI",
          "Vault Lock policy",
          "Complete Vault Lock",
          "lock ID",
          "in-progress state",
          "locked state",
          "vault",
          "Initiate Vault Lock",
          "Vault Lock",
          "Amazon S3 Glacier",
          "Abort Vault Lock"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_111",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\n1. Use the initiate-vault-lock to install a vault lock policy and sets the lock state of the\nvault lock to InProgress.\naws glacier initiate-vault-lock --vault-name examplevault --account-id 111122223333\n--policy file://lockconfig.json\n2. The lock configuration is a JSON document as shown in the following example. Before using\nthis command, replace the VAULT_ARN and Principal with the appropriate values for your\nuse case.\nTo find the ARN of the vault you wish to lock, you can use the list-vaults command.\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-lock\n\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::111122223333:root\\\"},\n\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"VAULT_ARN\\\",\\\"Condition\\\":\n{\\\"NumericLessThanEquals\\\":{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\n3. After initiating the vault lock you should see the lockId returned.\n{\n\"lockId\": \"LOCK_ID\"\n}\nVault Locking Using the CLI API Version 2012-06-01 102",
      "start_idx": 193278,
      "end_idx": 194628,
      "metadata": {
        "num_sentences": 13,
        "num_words": 169,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault lock",
            "list-vaults",
            "initiate-vault-lock",
            "lock configuration",
            "JSON policy",
            "ARN",
            "Principal",
            "lockId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault lock",
            "ARN",
            "Principal"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI Usage",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides step-by-step instructions for managing vaults and configuring vault locks using the AWS CLI, including JSON policy examples and command syntax.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list S3 Glacier vaults using the AWS CLI?",
            "What is the process to initiate a vault lock in Amazon S3 Glacier?",
            "How can I configure a JSON policy for a vault lock?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON policy",
          "vault lock",
          "AWS CLI",
          "ARN",
          "list-vaults",
          "lock configuration",
          "Amazon S3 Glacier",
          "Principal",
          "initiate-vault-lock",
          "lockId",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_112",
      "text": "Amazon S3 Glacier Developer Guide\nTo complete the vault lock You must run complete-vault-lock within 24 hours else the vault\nlock policy is removed from the vault.\naws glacier complete-vault-lock --vault-name examplevault --account-id 111122223333 --\nlock-id LOCK_ID\nRelated Sections\n\u2022 initiate-vault-lock in the AWS CLI Command Reference\n\u2022 list-vaults in the AWS CLI Command Reference\n\u2022 complete-vault-lock in the AWS CLI Command Reference\n\u2022 Vault Lock Policies\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nLocking a Vault by Using the S3 Glacier Console\nAmazon S3 Glacier Vault Lock helps you to easily deploy and enforce compliance controls for\nindividual S3 Glacier vaults with a Vault Lock policy. For more information about S3 Glacier Vault\nLock, see Amazon S3 Glacier Access Control with Vault Lock Policies.\nImportant\n\u2022 We recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.\n\u2022 After the Vault Lock policy is locked, it cannot be changed or deleted.\nTo initiate a Vault Lock policy on your vault by using the S3 Glacier console\nYou initiate the lock by attaching a Vault Lock policy to your vault, which sets the lock to an in-\nprogress state and returns a lock ID. While the policy is in the in-progress state, you have 24 hours\nto validate your Vault Lock policy before the lock ID expires.\nVault Locking by Using the Console API Version 2012-06-01 103",
      "start_idx": 194630,
      "end_idx": 196204,
      "metadata": {
        "num_sentences": 8,
        "num_words": 263,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Vault Lock",
            "S3 Glacier",
            "Vault Lock policy",
            "lock ID",
            "complete-vault-lock",
            "AWS CLI",
            "vault",
            "compliance controls",
            "access control",
            "archives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS CLI Command Reference",
            "lock-policy",
            "lockId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Compliance Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use Amazon S3 Glacier Vault Lock to enforce compliance controls by locking vaults with a Vault Lock policy, including procedural steps and API commands for initiating, completing, and managing vault locks.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I complete a Vault Lock policy using AWS CLI?",
            "What happens if I don't complete a Vault Lock policy within 24 hours?",
            "What are the steps to initiate a Vault Lock policy using the S3 Glacier console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Vault Lock policy",
          "archives",
          "lock ID",
          "vault",
          "lock-policy",
          "Vault Lock",
          "Amazon S3 Glacier",
          "lockId",
          "access control",
          "complete-vault-lock",
          "compliance controls",
          "S3 Glacier",
          "AWS CLI Command Reference"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_113",
      "text": "Amazon S3 Glacier Developer Guide\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, select an AWS Region from the Region selector.\n3. In the left navigation pane, choose Vaults.\n4. On the Vaults page, choose Create vault.\n5. Create a new vault.\nImportant\nWe recommend that you first create a vault, complete a Vault Lock policy, and then\nupload your archives to the vault so that the policy will be applied to them.\n6. Choose your new vault from the Vaults list.\n7. Choose the Vault policies tab.\n8. In the Vault Lock policy section, choose Initiate Vault Lock policy.\n9. On the Initiate Vault Lock policy page, specify the record retention controls in your Vault Lock\npolicy in text format in the standard text box.\nNote\nYou can specify the record retention controls in a Vault Lock policy in text format\nand initiate the Vault Lock by calling the Initiate Vault Lock API operation or\nthrough the interactive UI in the S3 Glacier console. For information about formatting\nyour Vault Lock policy, see Amazon S3 Glacier Vault Lock Policy Examples.\n10. Choose Save changes.\n11. In the Record Vault Lock ID dialog box, copy your Lock ID and save it in a safe place.\nImportant\nAfter the Vault Lock policy has been initiated, you have 24 hours to validate the policy\nand complete the lock process. To complete the lock process, you must provide the\nlock ID. If it's not provided within 24 hours, the lock ID expires and your in-progress\npolicy is deleted.\n12. After saving your lock ID in a safe place, choose Close.\nVault Locking by Using the Console API Version 2012-06-01 104",
      "start_idx": 196206,
      "end_idx": 197877,
      "metadata": {
        "num_sentences": 31,
        "num_words": 291,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Instructional",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "AWS Management Console",
            "S3 Glacier",
            "Vault Lock policy",
            "Region selector",
            "Vaults",
            "Lock ID",
            "record retention controls",
            "Initiate Vault Lock",
            "Vault policies",
            "API operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS Management Console",
            "Vaults",
            "Region selector"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Governance",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide on creating and configuring a Vault Lock policy in Amazon S3 Glacier using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What is the process to initiate a Vault Lock policy?",
            "How can I validate and complete a Vault Lock process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Lock ID",
          "Region selector",
          "Vault Lock policy",
          "AWS Management Console",
          "record retention controls",
          "Initiate Vault Lock",
          "Vault Lock",
          "Amazon S3 Glacier",
          "Vaults",
          "Vault policies",
          "API operation",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_114",
      "text": "Amazon S3 Glacier Developer Guide\n13. Test your Vault Lock policy within the next 24 hours. If the policy is working as intended,\nchoose Complete Vault Lock policy.\n14. In the Complete Vault Lock dialog box, select the check box to acknowledge that completing\nthe Vault Lock policy process is irreversible.\n15. Enter your provided Lock ID in the text box.\n16. Choose Complete Vault Lock.\nVault Locking by Using the Console API Version 2012-06-01 105",
      "start_idx": 197879,
      "end_idx": 198328,
      "metadata": {
        "num_sentences": 10,
        "num_words": 76,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Vault Lock",
            "policy",
            "Complete Vault Lock",
            "Lock ID",
            "irreversible",
            "Amazon S3 Glacier",
            "Console API",
            "dialog box",
            "2012-06-01"
          ],
          "entities": [
            "Vault Lock policy",
            "Amazon S3 Glacier",
            "Lock ID",
            "Console API",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Console API"
          ]
        },
        "semantic": {
          "summary": "This section provides step-by-step instructions for testing and completing a Vault Lock policy in Amazon S3 Glacier using the Console API (version 2012-06-01). It emphasizes the irreversible nature of completing the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I test my Vault Lock policy in Amazon S3 Glacier?",
            "What steps are involved in completing a Vault Lock policy?",
            "What is the significance of the Lock ID in the Vault Lock process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Lock ID",
          "Vault Lock policy",
          "policy",
          "Complete Vault Lock",
          "dialog box",
          "Vault Lock",
          "Amazon S3 Glacier",
          "irreversible",
          "API Version 2012-06-01",
          "2012-06-01",
          "Console API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_115",
      "text": "Amazon S3 Glacier Developer Guide\nWorking with Archives in Amazon S3 Glacier\nAn archive is any object, such as a photo, video, or document, that you store in a vault. It is a base\nunit of storage in Amazon S3 Glacier (S3 Glacier). Each archive has a unique ID and an optional\ndescription. When you upload an archive, S3 Glacier returns a response that includes an archive\nID. This archive ID is unique in the AWS Region in which the archive is stored. The following is an\nexample archive ID.\nTJgHcrOSfAkV6hdPqOATYfp_0ZaxL1pIBOc02iZ0gDPMr2ig-\nnhwd_PafstsdIf6HSrjHnP-3p6LCJClYytFT_CBhT9CwNxbRaM5MetS3I-\nGqwxI3Y8QtgbJbhEQPs0mJ3KExample\nArchive IDs are 138 bytes long. When you upload an archive, you can provide an optional\ndescription. You can retrieve an archive using its ID but not its description.\nImportant\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface.\nTopics\n\u2022 Archive Operations in Amazon S3 Glacier\n\u2022 Maintaining Client-Side Archive Metadata\n\u2022 Uploading an Archive in Amazon S3 Glacier\n\u2022 Downloading an Archive in S3 Glacier\n\u2022 Deleting an Archive in Amazon S3 Glacier\nAPI Version 2012-06-01 106",
      "start_idx": 198330,
      "end_idx": 199962,
      "metadata": {
        "num_sentences": 16,
        "num_words": 266,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "archive ID",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "management console",
            "upload",
            "download"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "Amazon SDKs",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API",
            "Amazon SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to work with archives in Amazon S3 Glacier, including storing, retrieving, and managing archives using tools like AWS CLI and Amazon SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What tools can I use to interact with Amazon S3 Glacier?",
            "What is an archive ID and how is it used?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "vault",
          "REST API",
          "download",
          "AWS Region",
          "Amazon S3 Glacier",
          "upload",
          "management console",
          "Amazon SDKs",
          "archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_116",
      "text": "Amazon S3 Glacier Developer Guide\nArchive Operations in Amazon S3 Glacier\nS3 Glacier supports the following basic archive operations: upload, download, and delete.\nDownloading an archive is an asynchronous operation.\nUploading an Archive in Amazon S3 Glacier\nYou can upload an archive in a single operation or upload it in parts. The API call you use to upload\nan archive in parts is referred as Multipart Upload. For more information, see Uploading an Archive\nin Amazon S3 Glacier.\nImportant\nS3 Glacier provides a management console. You can use the console to create and delete\nvaults. However, all other interactions with S3 Glacier require that you use the AWS\nCommand Line Interface (CLI) or write code. For example, to upload data, such as photos,\nvideos, and other documents, you must either use the AWS CLI or write code to make\nrequests, using either the REST API directly or by using the Amazon SDKs. For more\ninformation about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3\nGlacier. To install the AWS CLI, go to AWS Command Line Interface.\nFinding an Archive ID in Amazon S3 Glacier\nYou can get the archive ID by downloading the vault inventory for the vault that contains the\narchive. For more information about downloading the vault inventory, see Downloading a Vault\nInventory in Amazon S3 Glacier.\nDownloading an Archive in Amazon S3 Glacier\nDownloading an archive is an asynchronous operation. You must first initiate a job to download\na specific archive. After receiving the job request, S3 Glacier prepares your archive for download.\nAfter the job completes, you can download your archive data. Because of the asynchronous nature\nof the job, you can request S3 Glacier to send a notification to an Amazon Simple Notification\nService (Amazon SNS) topic when the job completes. You can specify an SNS topic for each\nindividual job request or configure your vault to send a notification when specific events occur. For\nmore information about downloading an archive, see Downloading an Archive in S3 Glacier.\nArchive Operations API Version 2012-06-01 107",
      "start_idx": 199964,
      "end_idx": 202052,
      "metadata": {
        "num_sentences": 21,
        "num_words": 345,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Conceptual",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive operations",
            "upload",
            "download",
            "delete",
            "Multipart Upload",
            "AWS CLI",
            "vault inventory",
            "SNS topic",
            "asynchronous operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Amazon SDKs",
            "Amazon Simple Notification Service",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs"
          ]
        },
        "semantic": {
          "summary": "This documentation explains archive operations in Amazon S3 Glacier, including uploading, downloading, and deleting archives, as well as using tools like AWS CLI and Amazon SDKs for interaction. It also details asynchronous download operations and configuring notifications via Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What is the process for downloading an archive in S3 Glacier?",
            "How can I find an archive ID in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "asynchronous operation",
          "AWS CLI",
          "Amazon SNS",
          "delete",
          "download",
          "Multipart Upload",
          "REST API",
          "vault inventory",
          "archive operations",
          "Amazon S3 Glacier",
          "Amazon Simple Notification Service",
          "upload",
          "SNS topic",
          "Amazon SDKs"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_117",
      "text": "Amazon S3 Glacier Developer Guide\nDeleting an Archive in Amazon S3 Glacier\nS3 Glacier provides an API call that you can use to delete one archive at a time. For more\ninformation, see Deleting an Archive in Amazon S3 Glacier.\nUpdating an Archive in S3 Glacier\nAfter you upload an archive, you cannot update its content or its description. The only way you\ncan update the archive content or its description is by deleting the archive and uploading another\narchive. Note that each time you upload an archive, S3 Glacier returns to you a unique archive ID.\nMaintaining Client-Side Archive Metadata\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. When you upload an archive S3 Glacier assigns an ID, an opaque sequence of\ncharacters, from which you cannot infer any meaning about the archive. You might maintain\nmetadata about the archives on the client-side. The metadata can include archive name and some\nother meaningful information about the archive.\nNote\nIf you are an Amazon Simple Storage Service (Amazon S3) customer, you know that\nwhen you upload an object to a bucket, you can assign the object an object key such as\nMyDocument.txt or SomePhoto.jpg. In S3 Glacier, you cannot assign a object key to the\narchives you upload.\nIf you maintain client-side archive metadata, note that S3 Glacier maintains a vault inventory\nthat includes archive IDs and any descriptions you provided during the archive upload. You might\noccasionally download the vault inventory to reconcile any issues in your client-side database you\nmaintain for the archive metadata. However, S3 Glacier takes vault inventory approximately daily.\nWhen you request a vault inventory, S3 Glacier returns the last inventory it prepared, a point in\ntime snapshot.\nUploading an Archive in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides a management console, which you can use to create\nand delete vaults. However, you cannot upload archives to S3 Glacier by using the management\nDeleting an Archive API Version 2012-06-01 108",
      "start_idx": 202054,
      "end_idx": 204123,
      "metadata": {
        "num_sentences": 17,
        "num_words": 336,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "vault inventory",
            "metadata",
            "archive ID",
            "management console",
            "upload",
            "delete",
            "client-side",
            "description"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault inventory",
            "archive ID",
            "Amazon Simple Storage Service",
            "management console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Backup and Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon Simple Storage Service"
          ],
          "mentioned_tools": [
            "management console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to manage archives in Amazon S3 Glacier, including uploading, deleting, and maintaining client-side metadata. It highlights the limitations of updating archives and the use of vault inventory for reconciliation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier?",
            "What are the limitations of updating an archive in S3 Glacier?",
            "How can I manage archive metadata in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive",
          "Amazon Simple Storage Service",
          "delete",
          "vault inventory",
          "description",
          "Amazon S3 Glacier",
          "upload",
          "management console",
          "client-side",
          "metadata",
          "archive ID",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_118",
      "text": "Amazon S3 Glacier Developer Guide\nconsole. To upload data, such as photos, videos, and other documents, you must either use the\nAWS CLI or write code to make requests, by using either the REST API directly or by using the\nAmazon SDKs.\nFor information about using S3 Glacier with the AWS CLI, go to AWS CLI Reference for S3 Glacier.\nTo install the AWS CLI, go to AWS Command Line Interface. The following Uploading topics\ndescribe how to upload archives to S3 Glacier by using the Amazon SDK for Java, the Amazon SDK\nfor .NET, and the REST API.\nTopics\n\u2022 Options for Uploading an Archive to Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\nOptions for Uploading an Archive to Amazon S3 Glacier\nDepending on the size of the data you are uploading, S3 Glacier offers the following options:\n\u2022 Upload archives in a single operation \u2013 In a single operation, you can upload archives from 1\nbyte to up to 4 GB in size. However, we encourage S3 Glacier customers to use multipart upload\nto upload archives greater than 100 MB. For more information, see Uploading an Archive in a\nSingle Operation.\n\u2022 Upload archives in parts \u2013 Using the multipart upload API, you can upload large archives, up to\nabout 40,000 GB (10,000 * 4 GB).\nThe multipart upload API call is designed to improve the upload experience for larger archives.\nYou can upload archives in parts. These parts can be uploaded independently, in any order, and\nin parallel. If a part upload fails, you only need to upload that part again and not the entire\narchive. You can use multipart upload for archives from 1 byte to about 40,000 GB in size. For\nmore information, see Uploading Large Archives in Parts (Multipart Upload).\nImportant\nThe S3 Glacier vault inventory is only updated once a day. When you upload an archive,\nyou will not immediately see the new archive added to your vault (in the console or in your\ndownloaded vault inventory list) until the vault inventory has been updated.\nOptions for Uploading an Archive API Version 2012-06-01 109",
      "start_idx": 204125,
      "end_idx": 206195,
      "metadata": {
        "num_sentences": 18,
        "num_words": 363,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS CLI",
            "multipart upload",
            "REST API",
            "Amazon SDK",
            "vault inventory",
            "archive",
            "upload",
            "Java SDK",
            ".NET SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SDK for Java",
            "Amazon SDK for .NET",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS Services"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "AWS CLI",
            "Amazon SDK"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDK for Java",
            "Amazon SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload data to Amazon S3 Glacier using the AWS CLI, REST API, or Amazon SDKs, with options for single or multipart uploads based on archive size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload data to Amazon S3 Glacier?",
            "What is the multipart upload API for S3 Glacier?",
            "What are the size limitations for uploading archives to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "Amazon SDK for .NET",
          "multipart upload",
          "REST API",
          "vault inventory",
          "Java SDK",
          "Amazon SDK",
          "Amazon S3 Glacier",
          "upload",
          ".NET SDK",
          "S3 Glacier",
          "Amazon SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_119",
      "text": "Amazon S3 Glacier Developer Guide\nUsing the AWS Snowball Service\nAWS Snowball accelerates moving large amounts of data into and out of AWS using Amazon-\nowned devices, bypassing the internet. For more information, see AWS Snowball detail page.\nTo upload existing data to Amazon S3 Glacier (S3 Glacier), you might consider using one of the\nAWS Snowball device types to import data into Amazon S3, and then move it to the S3 Glacier\nstorage class for archival using lifecycle rules. When you transition Amazon S3 objects to the\nS3 Glacier storage class, Amazon S3 internally uses S3 Glacier for durable storage at lower cost.\nAlthough the objects are stored in S3 Glacier, they remain Amazon S3 objects that you manage in\nAmazon S3, and you cannot access them directly through S3 Glacier.\nFor more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide.\nUploading an Archive in a Single Operation\nAs described in Uploading an Archive in Amazon S3 Glacier, you can upload smaller archives\nin a single operation. However, we encourage Amazon S3 Glacier (S3 Glacier) customers to use\nMultipart Upload to upload archives greater than 100 MB.\nTopics\n\u2022 Uploading an Archive in a Single Operation Using the AWS Command Line Interface\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the AWS SDK for .NET in Amazon S3 Glacier\n\u2022 Uploading an Archive in a Single Operation Using the REST API\nUploading an Archive in a Single Operation Using the AWS Command Line\nInterface\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Upload an Archive Using the AWS CLI\nUploading an Archive in a Single Operation API Version 2012-06-01 110",
      "start_idx": 206197,
      "end_idx": 208164,
      "metadata": {
        "num_sentences": 10,
        "num_words": 329,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "Lifecycle rules",
            "Multipart Upload",
            "AWS CLI",
            "Archive",
            "Storage class",
            "REST API",
            "AWS SDK",
            "Transitioning objects"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "AWS CLI",
            "AWS SDK",
            "S3 Glacier storage class"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Migration",
            "Archival Solutions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Snowball",
            "Amazon S3"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS Snowball to transfer data to Amazon S3 Glacier for archival purposes, and provides guidance on uploading archives using various tools such as AWS CLI, SDKs, and REST API. It also highlights lifecycle rules for transitioning objects to S3 Glacier storage class.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use AWS Snowball to transfer data into Amazon S3 Glacier?",
            "What are the best practices for uploading archives to S3 Glacier?",
            "How do lifecycle rules transition objects to the S3 Glacier storage class?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Lifecycle rules",
          "AWS CLI",
          "Amazon S3",
          "Storage class",
          "Multipart Upload",
          "AWS Snowball",
          "REST API",
          "S3 Glacier storage class",
          "Archive",
          "Amazon S3 Glacier",
          "AWS SDK",
          "Transitioning objects"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_120",
      "text": "Amazon S3 Glacier Developer Guide\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Upload an Archive Using the AWS CLI\nIn order to upload an archive you must have a vault created. For more information about creating\nvaults, see Creating a Vault in Amazon S3 Glacier.\n1. Use the upload-archive command to add an archive to an existing vault. In the below\nexample replace the vault name and account ID. For the body parameter specify a path to\nthe file you wish to upload.\naws glacier upload-archive --vault-name awsexamplevault --account-id 123456789012\n--body archive.zip\n2. Expected output:\nUploading an Archive in a Single Operation API Version 2012-06-01 111",
      "start_idx": 208166,
      "end_idx": 209571,
      "metadata": {
        "num_sentences": 17,
        "num_words": 226,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Command Usage",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "upload-archive",
            "list-vaults",
            "configure",
            "account ID",
            "credentials",
            "archive",
            "command prompt"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vault",
            "account ID",
            "archive.zip"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for setting up the AWS CLI and using it to interact with Amazon S3 Glacier, including uploading archives and listing vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI for use with Amazon S3 Glacier?",
            "What commands are used to upload an archive to an S3 Glacier vault?",
            "How can I verify my AWS CLI configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "credentials",
          "upload-archive",
          "vault",
          "list-vaults",
          "command prompt",
          "archive.zip",
          "Amazon S3 Glacier",
          "account ID",
          "configure",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_121",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\": \"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/123456789012/vaults/awsexamplevault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nWhen finished the command will output the archive ID, checksum, and location in S3 Glacier.\nFor more information about the upload-archive command, see upload-archive in the AWS CLI\nCommand Reference.\nUploading an Archive in a Single Operation Using the AWS SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload an archive.\nTopics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nUploading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the upload method, which\nyou can use to upload an archive to a vault.\nNote\nYou can use the upload method to upload small or large archives. Depending on the\narchive size you are uploading, this method determines whether to upload it in a single\noperation or use the multipart upload API to upload the archive in parts.\nUploading an Archive in a Single Operation API Version 2012-06-01 112",
      "start_idx": 209573,
      "end_idx": 211127,
      "metadata": {
        "num_sentences": 7,
        "num_words": 203,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "upload-archive command",
            "AWS CLI",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "multipart upload",
            "checksum",
            "vault",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "awsexamplevault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using AWS CLI and AWS SDK for Java, covering both high-level and low-level APIs. It includes details on archive management, checksum validation, and multipart upload functionality.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using AWS CLI?",
            "What is the ArchiveTransferManager class in AWS SDK for Java?",
            "How does multipart upload work for large archives in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "ArchiveTransferManager",
          "upload-archive command",
          "multipart upload",
          "vault",
          "checksum",
          "awsexamplevault",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_122",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region (us-west-2). For a list of supported AWS Regions and endpoints, see Accessing\nAmazon S3 Glacier.\nFor step-by-step instructions on how to run this example, see Running Java Examples for Amazon\nS3 Glacier Using Eclipse. You need to update the code as shown with the name of the vault you\nwant to upload to and the name of the file you want to upload.\nExample\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.glacier.transfer.UploadResult;\npublic class ArchiveUploadHighLevel {\npublic static String vaultName = \"*** provide vault name ***\";\npublic static String archiveToUpload = \"*** provide name of file to upload ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(client,\ncredentials);\nUploadResult result = atm.upload(vaultName, \"my archive \" + (new Date()),\nnew File(archiveToUpload));\nSystem.out.println(\"Archive ID: \" + result.getArchiveId());\nUploading an Archive in a Single Operation API Version 2012-06-01 113",
      "start_idx": 211129,
      "end_idx": 212817,
      "metadata": {
        "num_sentences": 5,
        "num_words": 200,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "vault",
            "archive",
            "upload",
            "Region",
            "endpoint",
            "ProfileCredentialsProvider",
            "ArchiveTransferManager",
            "UploadResult"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "examplevault",
            "us-west-2",
            "ArchiveTransferManager"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Java Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for uploading an archive to an Amazon S3 Glacier vault using the high-level API of the AWS SDK for Java in the US West (Oregon) Region.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using Java?",
            "What is the high-level API for Amazon S3 Glacier in the AWS SDK for Java?",
            "Which AWS Region and endpoint should I use for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive",
          "ArchiveTransferManager",
          "examplevault",
          "vault",
          "us-west-2",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "upload",
          "ProfileCredentialsProvider",
          "UploadResult",
          "endpoint",
          "Region"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_123",
      "text": "Amazon S3 Glacier Developer Guide\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for Java\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the UploadArchiveRequest class.\nIn addition to the data you want to upload, you need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, the content length of the data, and your account ID.\nIf you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for Java\nwith Amazon S3 Glacier.\n3. Run the uploadArchive method by providing the request object as a parameter.\nIn response, Amazon S3 Glacier (S3 Glacier) returns an archive ID of the newly uploaded archive.\nThe following Java code snippet illustrates the preceding steps.\nAmazonGlacierClient client;\nUploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(\"*** provide vault name ***\")\n.withChecksum(checksum)\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nUploading an Archive in a Single Operation API Version 2012-06-01 114",
      "start_idx": 212819,
      "end_idx": 214452,
      "metadata": {
        "num_sentences": 16,
        "num_words": 244,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "UploadArchiveRequest",
            "AmazonGlacierClient",
            "archive operations",
            "checksum",
            "vault name",
            "SHA-256 tree hash",
            "uploadArchive method",
            "archive ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "UploadArchiveRequest",
            "UploadArchiveResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the low-level API of the AWS SDK for Java, including setting up the client, creating a request, and executing the upload operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using Java?",
            "What is the process for creating an UploadArchiveRequest in AWS SDK for Java?",
            "What parameters are required to upload an archive using the low-level API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchiveRequest",
          "vault name",
          "SHA-256 tree hash",
          "uploadArchive method",
          "checksum",
          "UploadArchiveResult",
          "archive operations",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AmazonGlacierClient",
          "archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_124",
      "text": "Amazon S3 Glacier Developer Guide\nSystem.out.println(\"Location (includes ArchiveID): \" +\nuploadArchiveResult.getLocation());\nExample: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the vault you want to upload to and the name of the file you want to upload.\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.UploadArchiveRequest;\nimport com.amazonaws.services.glacier.model.UploadArchiveResult;\npublic class ArchiveUploadLowLevel {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveFilePath = \"*** provide to file upload ****\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\n// First open file and read.\nFile file = new File(archiveFilePath);\nInputStream is = new FileInputStream(file);\nbyte[] body = new byte[(int) file.length()];\nis.read(body);\nUploading an Archive in a Single Operation API Version 2012-06-01 115",
      "start_idx": 214454,
      "end_idx": 216202,
      "metadata": {
        "num_sentences": 5,
        "num_words": 199,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "UploadArchiveRequest",
            "UploadArchiveResult",
            "vault",
            "archive",
            "TreeHashGenerator",
            "ProfileCredentialsProvider",
            "API Version 2012-06-01",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "UploadArchiveRequest",
            "UploadArchiveResult",
            "AmazonGlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for uploading an archive to an Amazon S3 Glacier vault using the AWS SDK for Java's low-level API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using Java?",
            "What is an example of using AWS SDK for Java with Amazon S3 Glacier?",
            "What are the required steps to configure a vault name and file path for archive uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "UploadArchiveRequest",
          "archive",
          "vault",
          "UploadArchiveResult",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "ProfileCredentialsProvider",
          "API Version 2012-06-01",
          "endpoint",
          "TreeHashGenerator"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_125",
      "text": "Amazon S3 Glacier Developer Guide\n// Send request.\nUploadArchiveRequest request = new UploadArchiveRequest()\n.withVaultName(vaultName)\n.withChecksum(TreeHashGenerator.calculateTreeHash(new\nFile(archiveFilePath)))\n.withBody(new ByteArrayInputStream(body))\n.withContentLength((long)body.length);\nUploadArchiveResult uploadArchiveResult = client.uploadArchive(request);\nSystem.out.println(\"ArchiveID: \" + uploadArchiveResult.getArchiveId());\n} catch (Exception e)\n{\nSystem.err.println(\"Archive not uploaded.\");\nSystem.err.println(e);\n}\n}\n}\nUploading an Archive in a Single Operation Using the AWS SDK for .NET in\nAmazon S3 Glacier\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload an archive in a single operation.\nTopics\n\u2022 Uploading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nUploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Upload method that you\ncan use to upload an archive to a vault.\nNote\nYou can use the Upload method to upload small or large files. Depending on the file size\nyou are uploading, this method determines whether to upload it in a single operation or\nuse the multipart upload API to upload the file in parts.\nUploading an Archive in a Single Operation API Version 2012-06-01 116",
      "start_idx": 216204,
      "end_idx": 217651,
      "metadata": {
        "num_sentences": 7,
        "num_words": 203,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Technical Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadArchiveRequest",
            "UploadArchiveResult",
            "ArchiveTransferManager",
            "AWS SDK for .NET",
            "TreeHashGenerator",
            "vault",
            "multipart upload",
            "API",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "UploadArchiveRequest",
            "ArchiveTransferManager",
            "TreeHashGenerator"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the AWS SDK for .NET, providing both high-level and low-level API approaches, along with a code example for single-operation uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs for uploading archives?",
            "What is the role of the TreeHashGenerator in uploading archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "UploadArchiveRequest",
          "archive",
          "API",
          "vault",
          "multipart upload",
          "UploadArchiveResult",
          "Amazon S3 Glacier",
          "TreeHashGenerator"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_126",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Uploading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uploads an archive to a vault (examplevault) in the US West\n(Oregon) Region.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\n// Upload an archive.\nstring archiveId = manager.Upload(vaultName, \"upload archive test\",\narchiveToUpload).ArchiveId;\nConsole.WriteLine(\"Archive ID: (Copy and save this ID for use in other\nexamples.) : {0}\", archiveId);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\nUploading an Archive in a Single Operation API Version 2012-06-01 117",
      "start_idx": 217653,
      "end_idx": 219076,
      "metadata": {
        "num_sentences": 6,
        "num_words": 184,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Sample",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "vault",
            "archive upload",
            "Amazon.RegionEndpoint.USWest2",
            "AmazonGlacierException",
            "AmazonServiceException",
            "API Version 2012-06-01",
            "C#"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "US West (Oregon) Region",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to upload an archive to an Amazon S3 Glacier vault using the high-level API of the AWS SDK for .NET in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using C#?",
            "What is the high-level API in the AWS SDK for .NET for Amazon S3 Glacier?",
            "What exceptions should I handle when uploading an archive to Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "US West (Oregon) Region",
          "vault",
          "C#",
          "AmazonGlacierException",
          "Amazon S3 Glacier",
          "AmazonServiceException",
          "archive upload",
          "Amazon.RegionEndpoint.USWest2",
          "API Version 2012-06-01",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_127",
      "text": "Amazon S3 Glacier Developer Guide\n}\nUploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK for .NET\nThe low-level API provides methods for all the archive operations. The following are the steps to\nupload an archive using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to upload the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the UploadArchiveRequest class.\nIn addition to the data you want to upload, You need to provide a checksum (SHA-256 tree hash)\nof the payload, the vault name, and your account ID.\nIf you don't provide an account ID, then the account ID associated with the credentials you\nprovide to sign the request is assumed. For more information, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier.\n3. Run the UploadArchive method by providing the request object as a parameter.\nIn response, S3 Glacier returns an archive ID of the newly uploaded archive.\nExample: Uploading an Archive in a Single Operation Using the Low-Level API of the AWS SDK\nfor .NET\nThe following C# code example illustrates the preceding steps. The example uses the AWS SDK\nfor .NET to upload an archive to a vault (examplevault).\nNote\nFor information about the underlying REST API to upload an archive in a single request, see\nUpload Archive (POST archive).\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the name of the file you want to upload.\nUploading an Archive in a Single Operation API Version 2012-06-01 118",
      "start_idx": 219078,
      "end_idx": 220779,
      "metadata": {
        "num_sentences": 20,
        "num_words": 293,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "UploadArchiveRequest",
            "AmazonGlacierClient",
            "archive operations",
            "checksum",
            "SHA-256 tree hash",
            "vault",
            "account ID",
            "UploadArchive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "UploadArchiveRequest",
            "AmazonGlacierClient",
            "examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the low-level API of the AWS SDK for .NET, including the necessary steps and an example code snippet.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the role of UploadArchiveRequest in the AWS SDK for .NET?",
            "What are the prerequisites for uploading an archive to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS SDK for .NET",
          "UploadArchiveRequest",
          "SHA-256 tree hash",
          "vault",
          "checksum",
          "archive operations",
          "Amazon S3 Glacier",
          "account ID",
          "AmazonGlacierClient",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_129",
      "text": "Amazon S3 Glacier Developer Guide\nBody = fileStream,\nChecksum = treeHash\n};\nUploadArchiveResponse response = client.UploadArchive(request);\nstring archiveID = response.ArchiveId;\nreturn archiveID;\n}\n}\n}\n}\nUploading an Archive in a Single Operation Using the REST API\nYou can use the Upload Archive API call to upload an archive in a single operation. For more\ninformation, see Upload Archive (POST archive).\nUploading Large Archives in Parts (Multipart Upload)\nTopics\n\u2022 Multipart Upload Process\n\u2022 Quick Facts\n\u2022 Uploading Large Archives by Using the AWS CLI\n\u2022 Uploading Large Archives in Parts Using the Amazon SDK for Java\n\u2022 Uploading Large Archives Using the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the REST API\nMultipart Upload Process\nAs described in Uploading an Archive in Amazon S3 Glacier, we encourage Amazon S3 Glacier (S3\nGlacier) customers to use Multipart Upload to upload archives greater than 100 mebibytes (MiB).\n1. Initiate Multipart Upload\nWhen you send a request to initiate a multipart upload, S3 Glacier returns a multipart\nupload ID, which is a unique identifier for your multipart upload. Any subsequent multipart\nupload operations require this ID. This ID doesn't expire for at least 24 hours after S3 Glacier\ncompletes the job.\nUploading Large Archives in Parts API Version 2012-06-01 120",
      "start_idx": 222061,
      "end_idx": 223392,
      "metadata": {
        "num_sentences": 8,
        "num_words": 212,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Multipart Upload",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Archive",
            "Upload Archive",
            "REST API",
            "AWS CLI",
            "SDK for Java",
            "SDK for .NET",
            "treeHash",
            "archiveID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS SDK for .NET",
            "AWS SDK for Java",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation describes how to upload archives to Amazon S3 Glacier, including single-operation uploads and multipart uploads for large archives, using various tools and SDKs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier?",
            "What is the Multipart Upload process for large archives?",
            "Which tools can be used to upload archives to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Upload Archive",
          "AWS SDK for .NET",
          "AWS CLI",
          "SDK for Java",
          "REST API",
          "Multipart Upload",
          "treeHash",
          "Archive",
          "Amazon S3 Glacier",
          "SDK for .NET",
          "archiveID",
          "AWS SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_130",
      "text": "Amazon S3 Glacier Developer Guide\nIn your request to start a multipart upload, specify the part size in number of bytes. Each part\nyou upload, except the last part, must be this size.\nNote\nYou don't need to know the overall archive size when using multipart uploads. This\nmeans that you can use multipart uploads in cases where you don't know the archive\nsize when you start uploading the archive. You only need to decide the part size at the\ntime you start the multipart upload.\nIn the initiate multipart upload request, you can also provide an optional archive description.\n2. Upload Parts\nFor each part upload request, you must include the multipart upload ID you obtained in step\n1. In the request, you must also specify the content range, in bytes, identifying the position of\nthe part in the final archive. S3 Glacier later uses the content range information to assemble\nthe archive in proper sequence. Because you provide the content range for each part that you\nupload, it determines the part's position in the final assembly of the archive, and therefore you\ncan upload parts in any order. You can also upload parts in parallel. If you upload a new part\nusing the same content range as a previously uploaded part, the previously uploaded part is\noverwritten.\n3. Complete (or stop) Multipart Upload\nAfter uploading all the archive parts, you use the complete operation. Again, you must\nspecify the upload ID in your request. S3 Glacier creates an archive by concatenating parts in\nascending order based on the content range you provided. S3 Glacier response to a Complete\nMultipart Upload request includes an archive ID for the newly created archive. If you provided\nan optional archive description in the Initiate Multipart Upload request, S3 Glacier associates\nit with the assembled archive. After you successfully complete a multipart upload, you cannot\nrefer to the multipart upload ID. That means you cannot access parts associated with the\nmultipart upload ID.\nIf you stop a multipart upload, you cannot upload any more parts using that multipart upload\nID. All storage consumed by any parts associated with the stopped multipart upload is freed. If\nany part uploads were in-progress, they can still succeed or fail even after stopped.\nUploading Large Archives in Parts API Version 2012-06-01 121",
      "start_idx": 223394,
      "end_idx": 225704,
      "metadata": {
        "num_sentences": 25,
        "num_words": 385,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-step",
              "Explanation",
              "Note"
            ]
          },
          "keywords": [
            "multipart upload",
            "archive size",
            "content range",
            "upload ID",
            "archive description",
            "parallel upload",
            "S3 Glacier",
            "complete operation",
            "multipart upload ID",
            "stop upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "archive ID",
            "multipart upload ID",
            "content range",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains how to perform multipart uploads in Amazon S3 Glacier, including specifying part size, uploading parts, and completing or stopping the upload process. It highlights flexibility in upload order and parallel uploads while detailing the usage of upload IDs and content ranges.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What happens if I stop a multipart upload in S3 Glacier?",
            "Can I upload parts in parallel using S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload ID",
          "archive description",
          "complete operation",
          "multipart upload",
          "archive size",
          "content range",
          "Amazon S3 Glacier",
          "parallel upload",
          "multipart upload ID",
          "stop upload",
          "API Version 2012-06-01",
          "archive ID",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_131",
      "text": "Amazon S3 Glacier Developer Guide\nAdditional Multipart Upload Operations\nAmazon S3 Glacier (S3 Glacier) provides the following additional multipart upload API calls.\n\u2022 List Parts\u2014Using this operation, you can list the parts of a specific multipart upload. It returns\ninformation about the parts that you have uploaded for a multipart upload. For each list parts\nrequest, S3 Glacier returns information for up to 1,000 parts. If there are more parts to list for\nthe multipart upload, the result is paginated and a marker is returned in the response at which\nto continue the list. You need to send additional requests to retrieve subsequent parts. Note that\nthe returned list of parts doesn't include parts that haven't completed uploading.\n\u2022 List Multipart Uploads\u2014Using this operation, you can obtain a list of multipart uploads in\nprogress. An in-progress multipart upload is an upload that you have initiated, but have not yet\ncompleted or stopped. For each list multipart uploads request, S3 Glacier returns up to 1,000\nmultipart uploads. If there are more multipart uploads to list, then the result is paginated and\na marker is returned in the response at which to continue the list. You need to send additional\nrequests to retrieve the remaining multipart uploads.\nQuick Facts\nThe following table provides multipart upload core specifications.\nItem Specification\nMaximum archive size 10,000 x 4 gibibytes (GiB)\nMaximum number of parts per 10,000\nupload\nPart size 1 MiB to 4 GiB, last part can be < 1 MiB. You specify the\nsize value in bytes.\nThe part size must be a mebibyte (1024 kibibytes [KiB])\nmultiplied by a power of 2. For example, 1 048576 (1\nMiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8\nMiB).\nMaximum number of parts returned 1,000\nfor a list parts request\nUploading Large Archives in Parts API Version 2012-06-01 122",
      "start_idx": 225706,
      "end_idx": 227543,
      "metadata": {
        "num_sentences": 18,
        "num_words": 304,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Specifications"
            ]
          },
          "keywords": [
            "multipart upload",
            "List Parts",
            "List Multipart Uploads",
            "S3 Glacier",
            "archive size",
            "part size",
            "pagination",
            "marker",
            "API calls",
            "upload progress"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload",
            "List Parts",
            "List Multipart Uploads",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "File Uploading",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines additional multipart upload operations in Amazon S3 Glacier, including 'List Parts' and 'List Multipart Uploads', and provides core specifications for multipart uploads.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list parts of a multipart upload in S3 Glacier?",
            "What are the core specifications for multipart uploads in S3 Glacier?",
            "How does pagination work for listing multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "marker",
          "multipart upload",
          "API calls",
          "archive size",
          "upload progress",
          "part size",
          "List Parts",
          "List Multipart Uploads",
          "pagination",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_132",
      "text": "Amazon S3 Glacier Developer Guide\nItem Specification\nMaximum number of multipart 1,000\nuploads returned in a list multipart\nuploads request\nUploading Large Archives by Using the AWS CLI\nYou can upload an archive in Amazon S3 Glacier (S3 Glacier) by using the AWS Command Line\nInterface (AWS CLI). To improve the upload experience for larger archives, S3 Glacier provides\nseveral API operations to support multipart uploads. By using these API operations, you can upload\narchives in parts. These parts can be uploaded independently, in any order, and in parallel. If a part\nupload fails, you need to upload only that part again, not the entire archive. You can use multipart\nuploads for archives from 1 byte to about 40,000 gibibytes (GiB) in size.\nFor more information about S3 Glacier multipart uploads, see Uploading Large Archives in Parts\n(Multipart Upload).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 (Prerequisite) Install Python\n\u2022 (Prerequisite) Create an S3 Glacier Vault\n\u2022 Example: Uploading Large Archives in Parts by Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\nUploading Large Archives in Parts API Version 2012-06-01 123",
      "start_idx": 227545,
      "end_idx": 229130,
      "metadata": {
        "num_sentences": 14,
        "num_words": 254,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup Instructions",
              "Multipart Upload",
              "CLI Usage"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "multipart uploads",
            "archives",
            "vault",
            "Python",
            "API operations",
            "upload",
            "credentials",
            "gibibytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Python",
            "S3 Glacier Vault",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI to upload large archives to Amazon S3 Glacier using multipart uploads, which support parallel and independent part uploads for files up to 40,000 GiB in size.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload large archives to Amazon S3 Glacier using the AWS CLI?",
            "What are the prerequisites for using the AWS CLI with S3 Glacier?",
            "How does multipart upload work in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart uploads",
          "AWS CLI",
          "archives",
          "API operations",
          "vault",
          "credentials",
          "gibibytes",
          "S3 Glacier Vault",
          "Amazon S3 Glacier",
          "upload",
          "API Version 2012-06-01",
          "Python",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_133",
      "text": "Amazon S3 Glacier Developer Guide\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\n(Prerequisite) Install Python\nTo complete a multipart upload, you must calculate the SHA256 tree hash of the archive that\nyou're uploading. Doing so is different than calculating the SHA256 tree hash of the file that you\nwant to upload. To calculate the SHA256 tree hash of the archive that you're uploading, you can\nuse Java, C# (with .NET), or Python. In this example, you will use Python. For instructions on using\nJava or C#, see Computing Checksums.\nFor more information about installing Python, see Install or update Python in the Boto3 Developer\nGuide.\n(Prerequisite) Create an S3 Glacier Vault\nTo use the following example, you must have at least one S3 Glacier vault created. For more\ninformation about creating vaults, see Creating a Vault in Amazon S3 Glacier.\nExample: Uploading Large Archives in Parts by Using the AWS CLI\nIn this example, you will create a file and use multipart upload API operations to upload this file, in\nparts, to Amazon S3 Glacier.\nImportant\nBefore starting this procedure, make sure that you've performed all of the prerequisite\nsteps. To upload an archive, you must have a vault created, the AWS CLI configured, and be\nprepared to use Java, C#, or Python to calculate a SHA256 tree hash.\nUploading Large Archives in Parts API Version 2012-06-01 124",
      "start_idx": 229132,
      "end_idx": 230764,
      "metadata": {
        "num_sentences": 15,
        "num_words": 272,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instruction",
              "Prerequisite",
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "AWS CLI",
            "SHA256 tree hash",
            "multipart upload",
            "Python",
            "Java",
            "C#",
            "archive",
            "Boto3"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SHA256 tree hash",
            "Python",
            "Boto3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI Usage",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides step-by-step instructions for using the AWS CLI to list S3 Glacier vaults, configure settings, and perform multipart uploads with SHA256 tree hash calculations using Python.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list S3 Glacier vaults using the AWS CLI?",
            "What are the prerequisites for uploading large archives to S3 Glacier?",
            "How can I calculate a SHA256 tree hash in Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "vault",
          "multipart upload",
          "Boto3",
          "C#",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "Java",
          "Python",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_134",
      "text": "Amazon S3 Glacier Developer Guide\nThe following procedure uses the initiate-multipart-upload, upload-multipart-part,\nand complete-multipart-upload AWS CLI commands.\nFor more detailed information about each of these commands, see initiate-multipart-upload,\nupload-multipart-part, and complete-multipart-upload in the AWS CLI Command Reference.\n1. Use the initiate-multipart-upload command to create a multipart upload resource. In your\nrequest, specify the part size in number of bytes. Each part that you upload, except the last\npart, will be this size. You don't need to know the overall archive size when initiating an\nupload. However, you will need the total size, in bytes, of each part when completing the\nupload on the final step.\nIn the following command, replace the values for the --vault-name and --account-ID\nparameters with your own information. This command specifies that you will upload an archive\nwith a part size of 1 mebibyte (MiB) (1024 x 1024 bytes) per file. Replace this --part-size\nparameter value if needed.\naws glacier initiate-multipart-upload --vault-name awsexamplevault --part-\nsize 1048576 --account-id 123456789012\nExpected output:\n{\n\"location\": \"/123456789012/vaults/awsexamplevault/multipart-uploads/uploadId\",\n\"uploadId\": \"uploadId\"\n}\nWhen finished, the command will output the multipart upload resource's upload ID and\nlocation in S3 Glacier. You will use this upload ID in subsequent steps.\n2. For this example, you can use the following commands to create a 4.4 MiB file, split it into\n1 MiB chunks, and upload each chunk. To upload your own files, you can follow a similar\nprocedure of splitting your data into chunks and uploading each part.\nLinux or macOS\nThe following command creates a 4.4 MiB file, named file_to_upload, on Linux or macOS.\nmkfile -n 9000b file_to_upload\nUploading Large Archives in Parts API Version 2012-06-01 125",
      "start_idx": 230766,
      "end_idx": 232640,
      "metadata": {
        "num_sentences": 18,
        "num_words": 273,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command Usage",
              "Example"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "multipart upload",
            "initiate-multipart-upload",
            "upload-multipart-part",
            "complete-multipart-upload",
            "part size",
            "upload ID",
            "archive",
            "chunk upload"
          ],
          "entities": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "multipart upload",
            "Linux",
            "macOS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "File Uploads",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "mkfile"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI to perform multipart uploads to Amazon S3 Glacier, including creating an upload resource, splitting files into chunks, and uploading them in parts.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What commands are used to upload large files in parts using AWS CLI?",
            "How is the part size specified for a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "complete-multipart-upload",
          "upload ID",
          "Linux",
          "AWS CLI",
          "archive",
          "multipart upload",
          "upload-multipart-part",
          "chunk upload",
          "part size",
          "Amazon S3 Glacier",
          "macOS",
          "initiate-multipart-upload",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_135",
      "text": "Amazon S3 Glacier Developer Guide\nWindows\nThe following command creates a 4.4 MiB file, named file_to_upload, on Windows.\nfsutil file createnew file_to_upload 4608000\n3. Next, you will split this file into 1 MiB chunks.\nsplit -b 1048576 file_to_upload chunk\nYou now have the following five chunks. The first four are 1 MiB, and the last is approximately\n400 kibibytes (KiB).\nchunkaa\nchunkab\nchunkac\nchunkad\nchunkae\n4. Use the upload-multipart-part command to upload a part of an archive. You can upload\narchive parts in any order. You can also upload them in parallel. You can upload up to 10,000\nparts for a multipart upload.\nIn the following command, replace the values for the --vault-name, --account-ID, and --\nupload-id parameters. The upload ID must match the ID given as output of the initiate-\nmultipart-upload command. The --range parameter specifies that you will upload a\npart with a size of 1 MiB (1024 x 1024 bytes). This size must match what you specified in the\ninitiate-multipart-upload command. Adjust this size value if needed. The --body\nparameter specifies the name of the part that you're uploading.\naws glacier upload-multipart-part --body chunkaa --range='bytes 0-1048575/*' --\nvault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nIf successful, the command will produce output that contains the checksum for the uploaded\npart.\n5. Run the upload-multipart-part command again to upload the remaining parts of your\nmultipart upload. Update the --range and \u2013-body parameter values for each command to\nmatch the part that you're uploading.\nUploading Large Archives in Parts API Version 2012-06-01 126",
      "start_idx": 232642,
      "end_idx": 234283,
      "metadata": {
        "num_sentences": 21,
        "num_words": 252,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "archive parts",
            "checksum",
            "upload-multipart-part",
            "fsutil",
            "split command",
            "vault-name",
            "upload-id",
            "range parameter"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "aws glacier",
            "multipart upload",
            "API Version 2012-06-01",
            "Windows"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "File Management",
            "Data Uploading"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "fsutil",
            "split",
            "aws CLI"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to create, split, and upload a file in parts to Amazon S3 Glacier using multipart upload commands with the AWS CLI. It includes step-by-step instructions and example code snippets.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload to Amazon S3 Glacier?",
            "What are the steps to split a file into chunks for upload?",
            "What parameters are required for the upload-multipart-part command?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive parts",
          "fsutil",
          "API Version 2012-06-01",
          "multipart upload",
          "checksum",
          "upload-multipart-part",
          "vault-name",
          "range parameter",
          "Amazon S3 Glacier",
          "aws glacier",
          "upload-id",
          "split command",
          "Windows"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_136",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier upload-multipart-part --body chunkab --range='bytes 1048576-2097151/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkac --range='bytes 2097152-3145727/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkad --range='bytes 3145728-4194303/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\naws glacier upload-multipart-part --body chunkae --range='bytes 4194304-4607999/*'\n--vault-name awsexamplevault --account-id 123456789012 --upload-id upload_ID\nNote\nThe final command's --range parameter value is smaller because the final part of\nour upload is less than 1 MiB. If successful, each command will produce output that\ncontains the checksum for each uploaded part.\n6. Next, you will assemble the archive and finish the upload. You must include the total size and\nSHA256 tree hash of the archive.\nTo calculate the SHA256 tree hash of the archive, you can use Java, C#, or Python. In this\nexample, you will use Python. For instructions on using Java or C#, see Computing Checksums.\nCreate the Python file checksum.py and insert the following code. If needed, replace the\nname of the original file.\nfrom botocore.utils import calculate_tree_hash\nchecksum = calculate_tree_hash(open('file_to_upload', 'rb'))\nprint(checksum)\n7. Run checksum.py to calculate the SHA256 tree hash. The following hash may not match your\noutput.\n$ python3 checksum.py\n$ 3d760edb291bfc9d90d35809243de092aea4c47b308290ad12d084f69988ae0c\nUploading Large Archives in Parts API Version 2012-06-01 127",
      "start_idx": 234285,
      "end_idx": 235979,
      "metadata": {
        "num_sentences": 14,
        "num_words": 209,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "SHA256 tree hash",
            "checksum",
            "Python",
            "botocore",
            "archive assembly",
            "upload-multipart-part",
            "vault",
            "range parameter"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Python",
            "botocore",
            "SHA256",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python",
            "botocore"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier in parts, calculate the SHA256 tree hash using Python, and finalize the upload process. It includes step-by-step commands and a Python code snippet for checksum calculation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload to Amazon S3 Glacier?",
            "What is the process for calculating a SHA256 tree hash in Python?",
            "Why is the range parameter smaller for the final upload part?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "botocore",
          "API Version 2012-06-01",
          "multipart upload",
          "vault",
          "checksum",
          "archive assembly",
          "upload-multipart-part",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "SHA256",
          "range parameter",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_137",
      "text": "Amazon S3 Glacier Developer Guide\n8. Use the complete-multipart-upload command to finish the archive upload. Replace the values\nfor the --vault-name, --account-ID, --upload-ID, and --checksum parameters. The --\narchive parameter value specifies the total size, in bytes, of the archive. This value must be\nthe sum of all the sizes of the individual parts that you uploaded. Replace this value if needed.\naws glacier complete-multipart-upload --archive-size 4608000 --vault-\nname awsexamplevault --account-id 123456789012 --upload-id upload_ID --\nchecksum checksum\nWhen finished, the command will output the archive's ID, checksum, and location in S3 Glacier.\nUploading Large Archives in Parts Using the Amazon SDK for Java\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\nupload a large archive (see Uploading an Archive in Amazon S3 Glacier).\n\u2022 The high-level API provides a method that you can use to upload archives of any size. Depending\non the file you are uploading, the method either uploads an archive in a single operation or uses\nthe multipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts.\n\u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API.\nFor more information about the high-level and low-level APIs, see Using the AWS SDK for Java with\nAmazon S3 Glacier.\nTopics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\n\u2022 Upload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for Java\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nUploading Large Archives in Parts API Version 2012-06-01 128",
      "start_idx": 235981,
      "end_idx": 238093,
      "metadata": {
        "num_sentences": 16,
        "num_words": 342,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Usage",
              "API Methods"
            ]
          },
          "keywords": [
            "multipart upload",
            "archive",
            "checksum",
            "Amazon SDK for Java",
            "vault-name",
            "account-ID",
            "upload-ID",
            "high-level API",
            "low-level API",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "--vault-name",
            "--checksum",
            "--upload-ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the process for uploading large archives to Amazon S3 Glacier using multipart upload via AWS CLI and the Amazon SDK for Java. It covers both high-level and low-level API methods for handling archives of varying sizes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete a multipart upload in Amazon S3 Glacier?",
            "What is the difference between high-level and low-level APIs in the Amazon SDK for Java?",
            "What parameters are required for the complete-multipart-upload command?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "--vault-name",
          "archive",
          "multipart upload",
          "account-ID",
          "vault-name",
          "checksum",
          "--checksum",
          "--upload-ID",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "upload-ID",
          "high-level API",
          "low-level API",
          "S3 Glacier",
          "Amazon SDK for Java"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_138",
      "text": "Amazon S3 Glacier Developer Guide\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for Java.\nUpload Large Archives in Parts Using the Low-Level API of the AWS SDK for Java\nFor granular control of the upload you can use the low-level API where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for Java.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Initiate multipart upload by calling the initiateMultipartUpload method.\nYou need to provide vault name in which you want to upload the archive, part size you want\nto use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID.\n3. Upload parts by calling the uploadMultipartPart method.\nFor each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID.\n4. Complete multipart upload by calling the completeMultipartUpload method.\nYou need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID.\nExample: Uploading a Large Archive in a Parts Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Java\nExamples for Amazon S3 Glacier Using Eclipse. You need to update the code as shown with the\nname of the file you want to upload.\nUploading Large Archives in Parts API Version 2012-06-01 129",
      "start_idx": 238095,
      "end_idx": 240168,
      "metadata": {
        "num_sentences": 24,
        "num_words": 353,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "upload ID",
            "vault name",
            "checksum",
            "archive size",
            "archive ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "uploadMultipartPart"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to upload large archives to Amazon S3 Glacier using the AWS SDK for Java, detailing both high-level and low-level API approaches with step-by-step instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS SDK for Java to upload large archives to Amazon S3 Glacier?",
            "What are the steps for multipart upload in Amazon S3 Glacier?",
            "What parameters are required for initiating a multipart upload in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload ID",
          "vault name",
          "multipart upload",
          "archive size",
          "checksum",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AmazonGlacierClient",
          "archive ID",
          "uploadMultipartPart",
          "InitiateMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_139",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nThis example is valid for part sizes from 1 MB to 1 GB. However, S3 Glacier supports part\nsizes up to 4 GB.\nExample\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.LinkedList;\nimport java.util.List;\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.CompleteMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadRequest;\nimport com.amazonaws.services.glacier.model.InitiateMultipartUploadResult;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartRequest;\nimport com.amazonaws.services.glacier.model.UploadMultipartPartResult;\nimport com.amazonaws.util.BinaryUtils;\npublic class ArchiveMPU {\npublic static String vaultName = \"examplevault\";\n// This example works for part sizes up to 1 GB.\npublic static String partSize = \"1048576\"; // 1 MB.\npublic static String archiveFilePath = \"*** provide archive file path ***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nUploading Large Archives in Parts API Version 2012-06-01 130",
      "start_idx": 240170,
      "end_idx": 241830,
      "metadata": {
        "num_sentences": 5,
        "num_words": 139,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "part size",
            "vaultName",
            "TreeHashGenerator",
            "CompleteMultipartUploadRequest",
            "ProfileCredentialsProvider",
            "API Version 2012-06-01",
            "ByteArrayInputStream",
            "archiveFilePath"
          ],
          "entities": [
            "AmazonGlacierClient",
            "CompleteMultipartUploadResult",
            "InitiateMultipartUploadResult",
            "UploadMultipartPartResult",
            "ProfileCredentialsProvider"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to upload large archives in parts to Amazon S3 Glacier using Java, with part sizes ranging from 1 MB to 1 GB, and includes necessary code snippets and configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload in Amazon S3 Glacier?",
            "What is the maximum part size supported by S3 Glacier?",
            "Which Java classes are required for multipart uploads in AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "UploadMultipartPartResult",
          "Multipart Upload",
          "ByteArrayInputStream",
          "part size",
          "vaultName",
          "Amazon S3 Glacier",
          "ProfileCredentialsProvider",
          "API Version 2012-06-01",
          "CompleteMultipartUploadRequest",
          "archiveFilePath",
          "TreeHashGenerator",
          "InitiateMultipartUploadResult",
          "CompleteMultipartUploadResult"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_140",
      "text": "Amazon S3 Glacier Developer Guide\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\ntry {\nSystem.out.println(\"Uploading an archive.\");\nString uploadId = initiateMultipartUpload();\nString checksum = uploadParts(uploadId);\nString archiveId = CompleteMultiPartUpload(uploadId, checksum);\nSystem.out.println(\"Completed an archive. ArchiveId: \" + archiveId);\n} catch (Exception e) {\nSystem.err.println(e);\n}\n}\nprivate static String initiateMultipartUpload() {\n// Initiate\nInitiateMultipartUploadRequest request = new InitiateMultipartUploadRequest()\n.withVaultName(vaultName)\n.withArchiveDescription(\"my archive \" + (new Date()))\n.withPartSize(partSize);\nInitiateMultipartUploadResult result = client.initiateMultipartUpload(request);\nSystem.out.println(\"ArchiveID: \" + result.getUploadId());\nreturn result.getUploadId();\n}\nprivate static String uploadParts(String uploadId) throws AmazonServiceException,\nNoSuchAlgorithmException, AmazonClientException, IOException {\nint filePosition = 0;\nlong currentPosition = 0;\nbyte[] buffer = new byte[Integer.valueOf(partSize)];\nList<byte[]> binaryChecksums = new LinkedList<byte[]>();\nFile file = new File(archiveFilePath);\nFileInputStream fileToUpload = new FileInputStream(file);\nString contentRange;\nint read = 0;\nwhile (currentPosition < file.length())\n{\nread = fileToUpload.read(buffer, filePosition, buffer.length);\nUploading Large Archives in Parts API Version 2012-06-01 131",
      "start_idx": 241832,
      "end_idx": 243312,
      "metadata": {
        "num_sentences": 3,
        "num_words": 138,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Archive",
            "Checksum",
            "InitiateMultipartUploadRequest",
            "AmazonGlacierClient",
            "API Version 2012-06-01",
            "Vault",
            "File Upload",
            "PartSize"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "InitiateMultipartUploadResult",
            "ArchiveID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "File Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to use the Amazon S3 Glacier API to upload large archives in parts, including initiating uploads, calculating checksums, and completing multipart uploads.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload large archives to Amazon S3 Glacier using multipart uploads?",
            "What steps are involved in completing a multipart upload in Amazon S3 Glacier?",
            "How can I calculate checksums while uploading files to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "PartSize",
          "Vault",
          "API Version 2012-06-01",
          "ArchiveID",
          "File Upload",
          "Multipart Upload",
          "Archive",
          "Amazon S3 Glacier",
          "AmazonGlacierClient",
          "InitiateMultipartUploadResult",
          "InitiateMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_142",
      "text": "Amazon S3 Glacier Developer Guide\nreturn compResult.getLocation();\n}\n}\nUploading Large Archives Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\nupload large archives in parts (see Uploading an Archive in Amazon S3 Glacier).\n\u2022 The high-level API provides a method that you can use to upload archives of any size. Depending\non the file you are uploading, the method either uploads archive in a single operation or uses the\nmultipart upload support in Amazon S3 Glacier (S3 Glacier) to upload the archive in parts.\n\u2022 The low-level API maps close to the underlying REST implementation. Accordingly, it provides\na method to upload smaller archives in one operation and a group of methods that support\nmultipart upload for larger archives. This section explains uploading large archives in parts using\nthe low-level API.\nFor more information about the high-level and low-level APIs, see Using the AWS SDK for .NET\nwith Amazon S3 Glacier.\nTopics\n\u2022 Uploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\n\u2022 Uploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nUploading Large Archives in Parts Using the High-Level API of the AWS SDK for .NET\nYou use the same methods of the high-level API to upload small or large archives. Based on the\narchive size, the high-level API methods decide whether to upload the archive in a single operation\nor use the multipart upload API provided by S3 Glacier. For more information, see Uploading an\nArchive Using the High-Level API of the AWS SDK for .NET.\nUploading Large Archives in Parts Using the Low-Level API of the AWS SDK for .NET\nFor granular control of the upload, you can use the low-level API, where you can configure the\nrequest and process the response. The following are the steps to upload large archives in parts\nusing the AWS SDK for .NET.\nUploading Large Archives in Parts API Version 2012-06-01 133",
      "start_idx": 244803,
      "end_idx": 246777,
      "metadata": {
        "num_sentences": 13,
        "num_words": 338,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "high-level API",
            "low-level API",
            "multipart upload",
            "archive upload",
            "REST implementation",
            "large archives",
            "upload methods",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "high-level API",
            "low-level API",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Development",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using the high-level and low-level APIs of the AWS SDK for .NET, including multipart upload methods for efficient data transfer.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs in AWS SDK for .NET?",
            "How does multipart upload work in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "multipart upload",
          "REST implementation",
          "large archives",
          "Amazon S3 Glacier",
          "archive upload",
          "high-level API",
          "API Version 2012-06-01",
          "low-level API",
          "upload methods"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_143",
      "text": "Amazon S3 Glacier Developer Guide\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where you want to save the archive. All operations you\nperform using this client apply to that AWS Region.\n2. Initiate multipart upload by calling the InitiateMultipartUpload method.\nYou need to provide the vault name to which you want to upload the archive, the part size you\nwant to use to upload archive parts, and an optional description. You provide this information by\ncreating an instance of the InitiateMultipartUploadRequest class. In response, S3 Glacier\nreturns an upload ID.\n3. Upload parts by calling the UploadMultipartPart method.\nFor each part you upload, You need to provide the vault name, the byte range in the final\nassembled archive that will be uploaded in this part, the checksum of the part data, and the\nupload ID.\n4. Complete the multipart upload by calling the CompleteMultipartUpload method.\nYou need to provide the upload ID, the checksum of the entire archive, the archive size\n(combined size of all parts you uploaded), and the vault name. S3 Glacier constructs the archive\nfrom the uploaded parts and returns an archive ID.\nExample: Uploading a Large Archive in Parts Using the Amazon SDK for .NET\nThe following C# code example uses the AWS SDK for .NET to upload an archive to a vault\n(examplevault). For step-by-step instructions on how to run this example, see Running Code\nExamples. You need to update the code as shown with the name of a file you want to upload.\nExample\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveUploadMPU\n{\nUploading Large Archives in Parts API Version 2012-06-01 134",
      "start_idx": 246779,
      "end_idx": 248588,
      "metadata": {
        "num_sentences": 20,
        "num_words": 287,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "AWS Region",
            "vault name",
            "InitiateMultipartUpload",
            "UploadMultipartPart",
            "CompleteMultipartUpload",
            "checksum",
            "archive ID",
            "byte range"
          ],
          "entities": [
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "AWS SDK for .NET",
            "S3 Glacier",
            "ArchiveUploadMPU"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide to uploading large archives to Amazon S3 Glacier using multipart upload and the AWS SDK for .NET, including code examples and required parameters.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I perform a multipart upload to Amazon S3 Glacier?",
            "What parameters are required for the CompleteMultipartUpload method?",
            "How can I use the AWS SDK for .NET to upload large archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "byte range",
          "AWS SDK for .NET",
          "vault name",
          "CompleteMultipartUpload",
          "multipart upload",
          "checksum",
          "ArchiveUploadMPU",
          "AWS Region",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "InitiateMultipartUpload",
          "AmazonGlacierClient",
          "archive ID",
          "UploadMultipartPart",
          "InitiateMultipartUploadRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_144",
      "text": "Amazon S3 Glacier Developer Guide\nstatic string vaultName = \"examplevault\";\nstatic string archiveToUpload = \"*** Provide file name (with full path) to upload\n***\";\nstatic long partSize = 4194304; // 4 MB.\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\nList<string> partChecksumList = new List<string>();\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Uploading an archive.\");\nstring uploadId = InitiateMultipartUpload(client);\npartChecksumList = UploadParts(uploadId, client);\nstring archiveId = CompleteMPU(uploadId, client, partChecksumList);\nConsole.WriteLine(\"Archive ID: {0}\", archiveId);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic string InitiateMultipartUpload(AmazonGlacierClient client)\n{\nInitiateMultipartUploadRequest initiateMPUrequest = new\nInitiateMultipartUploadRequest()\n{\nVaultName = vaultName,\nPartSize = partSize,\nArchiveDescription = \"Test doc uploaded using MPU.\"\n};\nInitiateMultipartUploadResponse initiateMPUresponse =\nclient.InitiateMultipartUpload(initiateMPUrequest);\nreturn initiateMPUresponse.UploadId;\nUploading Large Archives in Parts API Version 2012-06-01 135",
      "start_idx": 248590,
      "end_idx": 250068,
      "metadata": {
        "num_sentences": 5,
        "num_words": 147,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Archive ID",
            "AmazonGlacierClient",
            "VaultName",
            "PartSize",
            "UploadId",
            "InitiateMultipartUpload",
            "AmazonGlacierException",
            "AmazonServiceException"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "InitiateMultipartUploadRequest",
            "InitiateMultipartUploadResponse",
            "USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for uploading large archives to Amazon S3 Glacier using multipart upload with the AmazonGlacierClient in C#.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier using multipart upload?",
            "What is the process for handling exceptions during an Amazon S3 Glacier upload?",
            "What is the purpose of the InitiateMultipartUpload method in AmazonGlacierClient?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "PartSize",
          "InitiateMultipartUploadResponse",
          "Multipart Upload",
          "AmazonGlacierException",
          "Amazon S3 Glacier",
          "AmazonServiceException",
          "USWest2",
          "InitiateMultipartUploadRequest",
          "InitiateMultipartUpload",
          "AmazonGlacierClient",
          "UploadId",
          "VaultName",
          "Archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_146",
      "text": "Amazon S3 Glacier Developer Guide\n{\nUploadId = uploadID,\nArchiveSize = fileLength.ToString(),\nChecksum = TreeHashGenerator.CalculateTreeHash(partChecksumList),\nVaultName = vaultName\n};\nCompleteMultipartUploadResponse completeMPUresponse =\nclient.CompleteMultipartUpload(completeMPUrequest);\nreturn completeMPUresponse.ArchiveId;\n}\n}\n}\nUploading Large Archives in Parts Using the REST API\nAs described in Uploading Large Archives in Parts (Multipart Upload), multipart upload refers to a\nset of operations that enable you to upload an archive in parts and perform related operations. For\nmore information about these operations, see the following API reference topics:\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\nDownloading an Archive in S3 Glacier\nAmazon S3 Glacier provides a management console, which you can use to create and delete vaults.\nHowever, you cannot download archives from S3 Glacier by using the management console.\nTo download data, such as photos, videos, and other documents, you must either use the AWS\nCommand Line Interface (AWS CLI) or write code to make requests, by using either the REST API\ndirectly or by using the AWS SDKs.\nFor information about using S3 Glacier with the AWS CLI, see the AWS CLI Reference for S3 Glacier.\nTo install the AWS CLI, see AWS Command Line Interface. The following topics describe how to\nDownloading an Archive API Version 2012-06-01 137",
      "start_idx": 251429,
      "end_idx": 253024,
      "metadata": {
        "num_sentences": 7,
        "num_words": 230,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "REST API",
            "AWS CLI",
            "TreeHashGenerator",
            "CompleteMultipartUpload",
            "vaults",
            "archives",
            "uploadID",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "TreeHashGenerator",
            "CompleteMultipartUploadResponse",
            "REST API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload large archives to Amazon S3 Glacier using multipart upload operations via the REST API and AWS CLI, as well as how to download archives programmatically.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I upload large archives to Amazon S3 Glacier using multipart upload?",
            "What are the API operations involved in multipart upload for S3 Glacier?",
            "Can I download archives from Amazon S3 Glacier using the management console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "AWS CLI",
          "CompleteMultipartUpload",
          "archives",
          "uploadID",
          "vaults",
          "REST API",
          "Multipart Upload",
          "CompleteMultipartUploadResponse",
          "Amazon S3 Glacier",
          "TreeHashGenerator"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_147",
      "text": "Amazon S3 Glacier Developer Guide\ndownload archives to S3 Glacier by using the AWS SDK for Java, the AWS SDK for .NET, and the\nAmazon S3 Glacier REST API.\nTopics\n\u2022 Retrieving S3 Glacier Archives Using AWS Console\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Downloading an Archive by Using the REST API\n\u2022 Downloading an Archive in Amazon S3 Glacier Using the AWS CLI\nRetrieving S3 Glacier Archives Using AWS Console\nRetrieving an archive from Amazon S3 Glacier is an asynchronous operation in which you first\ninitiate a job, and then download the output after the job is completed. To initiate an archive\nretrieval job, you use the Initiate Job (POST jobs) REST API operation or the equivalent in the AWS\nCLI, or the AWS SDKs.\nTopics\n\u2022 Archive Retrieval Options\n\u2022 Ranged Archive Retrievals\nRetrieving an archive from S3 Glacier is a two-step process.\nTo retrieve an archive\n1. Initiate an archive retrieval job.\na. Get the ID of the archive that you want to retrieve. You can get the archive ID from an\ninventory of the vault. You can get the archive ID with the REST API, AWS CLI, or AWS\nSDKs. For more information, see Downloading a Vault Inventory in Amazon S3 Glacier.\nb. Initiate a job that requests S3 Glacier to prepare an entire archive or a portion of the\narchive for subsequent download by using the Initiate Job (POST jobs) operation.\nWhen you initiate a job, S3 Glacier returns a job ID in the response and runs the job\nasynchronously. (You cannot download the job output until after the job is completed, as\ndescribed in Step 2.)\nRetrieving Archives in Console API Version 2012-06-01 138",
      "start_idx": 253026,
      "end_idx": 254729,
      "metadata": {
        "num_sentences": 15,
        "num_words": 303,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "API Usage",
              "SDK Integration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "REST API",
            "AWS CLI",
            "Initiate Job",
            "vault inventory",
            "ranged retrieval",
            "asynchronous operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "Initiate Job (POST jobs)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archives from Amazon S3 Glacier using various tools, including AWS SDKs, REST API, and AWS CLI. It covers the steps for initiating and completing archive retrieval jobs, including ranged retrievals and inventory access.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What tools can I use to initiate an archive retrieval job in S3 Glacier?",
            "What is the process for ranged archive retrieval in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "AWS SDK for .NET",
          "AWS CLI",
          "ranged retrieval",
          "Initiate Job",
          "REST API",
          "Initiate Job (POST jobs)",
          "vault inventory",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "asynchronous operation"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_148",
      "text": "Amazon S3 Glacier Developer Guide\nImportant\nFor Standard retrievals only, a data retrieval policy can cause your Initiate Job\nrequest to fail with a PolicyEnforcedException exception. For more information\nabout data retrieval policies, see S3 Glacier Data Retrieval Policies. For more\ninformation about the PolicyEnforcedException exception, see Error Responses.\nWhen required, you can restore large segments of the data stored in S3 Glacier. For more\ninformation about restoring data from the S3 Glacier storage classes, see Storage Classes for\nArchiving Objects in the Amazon Simple Storage Service User Guide.\n2. After the job is completed, download the bytes by using the Get Job Output (GET output)\noperation.\nYou can download all bytes or specify a byte range to download only a portion of the job\noutput. For larger output, downloading the output in chunks helps in the event of a download\nfailure, such as a network failure. If you get job output in a single request and there is a\nnetwork failure, you have to restart downloading the output from the beginning. However,\nif you download the output in chunks, in the event of any failure, you need only restart the\ndownload of the smaller portion and not the entire output.\nS3 Glacier must complete a job before you can get its output. After completion, a job does not\nexpire for at least 24 hours, which means that you can download the output within the 24-hour\nperiod after the job is completed. To determine if your job is complete, check its status by using\none of the following options:\n\u2022 Wait for a job-completion notification \u2013 You can specify an Amazon Simple Notification Service\n(Amazon SNS) topic to which S3 Glacier can post a notification after the job is completed. S3\nGlacier sends a notification only after it completes the job.\nYou can specify an Amazon SNS topic for a job when you initiate the job. In addition to\nspecifying an Amazon SNS topic in your job request, if your vault has notifications set for\narchive retrieval events, then S3 Glacier also publishes a notification to that SNS topic. For more\ninformation, see Configuring Vault Notifications in Amazon S3 Glacier.\nRetrieving Archives in Console API Version 2012-06-01 139",
      "start_idx": 254731,
      "end_idx": 256941,
      "metadata": {
        "num_sentences": 19,
        "num_words": 368,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Warning",
              "Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "data retrieval policy",
            "PolicyEnforcedException",
            "job output",
            "byte range",
            "Amazon SNS",
            "vault notifications",
            "archive retrieval",
            "network failure",
            "storage classes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "PolicyEnforcedException",
            "Amazon SNS",
            "Amazon Simple Storage Service",
            "GET output"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon Simple Storage Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to handle data retrievals, including managing retrieval policies, downloading job outputs in chunks, and using Amazon SNS for job completion notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What happens if a data retrieval policy causes a job request to fail in S3 Glacier?",
            "How can I download job output in chunks from S3 Glacier?",
            "How do I configure Amazon SNS notifications for S3 Glacier jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "byte range",
          "archive retrieval",
          "Amazon SNS",
          "PolicyEnforcedException",
          "data retrieval policy",
          "network failure",
          "Amazon Simple Storage Service",
          "job output",
          "Amazon S3 Glacier",
          "GET output",
          "storage classes",
          "S3 Glacier",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_149",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Request job information explicitly \u2013 You can also use the S3 Glacier Describe Job API\noperation (Describe Job (GET JobID)) to periodically poll for job information. However, we\nrecommend using Amazon SNS notifications.\nNote\nThe information that you get by using an Amazon SNS notification is the same as what you\nget by calling the Describe Job API operation.\nArchive Retrieval Options\nWhen initiating a job to retrieve an archive, you can specify one of the following retrieval options,\nbased on your access time and cost requirements. For information about retrieval pricing, see\nAmazon S3 Glacier Pricing.\n\u2022 Expedited \u2013 Expedited retrievals allow you to quickly access your data that's stored in the S3\nGlacier Flexible Retrieval storage class or the S3 Intelligent-Tiering Archive Access tier when\noccasional urgent requests for restoring archives are required. For all but the largest archives\n(more than 250 MB), data accessed by using Expedited retrievals is typically made available\nwithin 1\u20135 minutes. Provisioned capacity ensures that retrieval capacity for Expedited retrievals\nis available when you need it. For more information, see Provisioned Capacity.\n\u2022 Standard \u2013 Standard retrievals allow you to access any of your archives within several hours.\nStandard retrievals are typically completed within 3\u20135 hours. Standard is the default option for\nretrieval requests that do not specify the retrieval option.\n\u2022 Bulk \u2013 Bulk retrievals are the lowest-cost S3 Glacier retrieval option, which you can use to\nretrieve large amounts, even petabytes, of data inexpensively in a day. Bulk retrievals are\ntypically completed within 5\u201312 hours.\nThe following table summarizes the archive retrieval options. For information about pricing, see\nAmazon S3 Glacier pricing.\nTo make an Expedited, Standard, or Bulk retrieval, set the Tier request element in the\nRestoreObject REST API operation request to the option that you want, or the equivalent in the\nAWS Command Line Interface (AWS CLI) or AWS SDKs. If you purchased provisioned capacity, all\nExpedited retrievals are automatically served through your provisioned capacity.\nRetrieving Archives in Console API Version 2012-06-01 140",
      "start_idx": 256943,
      "end_idx": 259164,
      "metadata": {
        "num_sentences": 19,
        "num_words": 340,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Describe Job API",
            "Amazon SNS notifications",
            "Archive Retrieval Options",
            "Expedited retrievals",
            "Standard retrievals",
            "Bulk retrievals",
            "Provisioned capacity",
            "RestoreObject REST API",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Job API",
            "Amazon SNS",
            "RestoreObject REST API",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "RestoreObject REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the archive retrieval options available in Amazon S3 Glacier, including Expedited, Standard, and Bulk retrievals, along with their respective access times and costs. It also provides details on using the Describe Job API and Amazon SNS notifications for job information retrieval.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "What are the different archive retrieval options in Amazon S3 Glacier?",
            "How can I use the Describe Job API to get job information?",
            "What is the difference between Expedited, Standard, and Bulk retrievals?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Bulk retrievals",
          "AWS CLI",
          "Amazon SNS",
          "Provisioned capacity",
          "Standard retrievals",
          "Describe Job API",
          "RestoreObject REST API",
          "Amazon S3 Glacier",
          "Archive Retrieval Options",
          "Amazon SNS notifications",
          "Expedited retrievals"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_150",
      "text": "Amazon S3 Glacier Developer Guide\nProvisioned Capacity\nProvisioned capacity helps ensure that your retrieval capacity for Expedited retrievals is available\nwhen you need it. Each unit of capacity provides that at least three Expedited retrievals can be\nperformed every 5 minutes and provides up to 150 megabytes per second (MBps) of retrieval\nthroughput.\nIf your workload requires highly reliable and predictable access to a subset of your data in minutes,\nwe recommend that you purchase provisioned retrieval capacity. Without provisioned capacity,\nExpedited retrievals are typically accepted, except for rare situations of unusually high demand.\nHowever, if you require access to Expedited retrievals under all circumstances, you must purchase\nprovisioned retrieval capacity.\nPurchasing Provisioned Capacity\nYou can purchase provisioned capacity units by using the S3 Glacier console, the Purchase\nProvisioned Capacity (POST provisioned-capacity) REST API operation, the AWS SDKs, or the AWS\nCLI. For provisioned capacity pricing information, see Amazon S3 Glacier Pricing.\nA provisioned capacity unit lasts for one month, starting at the date and time of purchase.\nIf the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28.\nTo purchase provisioned capacity by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. In the left navigation pane, choose Data retrieval settings.\n3. Under Provisioned capacity units (PCUs), choose Purchase PCU. The Purchase PCU dialog\nbox appears.\n4. If you want to purchase provisioned capacity, enter confirm in the To confirm purchase box.\n5. Choose Purchase PCU.\nRetrieving Archives in Console API Version 2012-06-01 141",
      "start_idx": 259166,
      "end_idx": 261125,
      "metadata": {
        "num_sentences": 23,
        "num_words": 300,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Concept Explanation"
            ]
          },
          "keywords": [
            "provisioned capacity",
            "Expedited retrievals",
            "retrieval throughput",
            "S3 Glacier console",
            "Purchase PCU",
            "AWS CLI",
            "REST API",
            "AWS SDKs",
            "data retrieval settings",
            "pricing"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Provisioned Capacity",
            "AWS Management Console",
            "PCU",
            "REST API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Cloud Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDKs",
            "S3 Glacier console"
          ]
        },
        "semantic": {
          "summary": "The document explains how to purchase and manage provisioned capacity for Amazon S3 Glacier to ensure reliable and predictable retrieval of data, especially for Expedited retrievals.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I purchase provisioned capacity in Amazon S3 Glacier?",
            "What is the purpose of provisioned capacity in S3 Glacier?",
            "What are the steps to confirm a PCU purchase in the S3 Glacier console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "data retrieval settings",
          "AWS CLI",
          "Provisioned Capacity",
          "Purchase PCU",
          "S3 Glacier console",
          "provisioned capacity",
          "pricing",
          "REST API",
          "AWS Management Console",
          "PCU",
          "retrieval throughput",
          "Amazon S3 Glacier",
          "Expedited retrievals"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_151",
      "text": "Amazon S3 Glacier Developer Guide\nRanged Archive Retrievals\nWhen you retrieve an archive from S3 Glacier, you can optionally specify a range, or portion, of the\narchive to retrieve. The default is to retrieve the whole archive. Specifying a range of bytes can be\nhelpful when you want to do the following:\n\u2022 Manage your data downloads \u2013 S3 Glacier allows retrieved data to be downloaded for 24 hours\nafter the retrieval request is completed. Therefore, you might want to retrieve only portions\nof the archive so that you can manage the schedule of downloads within the given download\nwindow.\n\u2022 Retrieve a targeted part of a large archive \u2013 For example, suppose you have previously\naggregated many files and uploaded them as a single archive, and now you want to retrieve a\nfew of the files. In this case, you can specify a range of the archive that contains the files that you\nare interested in by using one retrieval request. Or, you can initiate multiple retrieval requests,\neach with a range for one or more files.\nWhen initiating a retrieval job using range retrievals, you must provide a range that is megabyte\naligned. In other words, the byte range can start at zero (the beginning of your archive), or at any\n1-MB interval thereafter (1 MB, 2 MB, 3 MB, and so on).\nThe end of the range can either be the end of your archive or any 1 MB interval greater than the\nbeginning of your range. Furthermore, if you want to get checksum values when you download\nthe data (after the retrieval job is completed), the range that you request in the job initiation must\nalso be tree-hash aligned. You can use checksums to help ensure that your data was not corrupted\nduring transmission. For more information about megabyte alignment and tree-hash alignment,\nsee Receiving Checksums When Downloading Data.\nDownloading an Archive in Amazon S3 Glacier Using the AWS SDK for\nJava\nBoth the high-level and low-level APIs provided by the Amazon SDK for Java provide a method to\ndownload an archive.\nTopics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for Java\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for Java\nDownloading an Archive Using Java API Version 2012-06-01 142",
      "start_idx": 261127,
      "end_idx": 263328,
      "metadata": {
        "num_sentences": 15,
        "num_words": 384,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "byte range",
            "megabyte alignment",
            "tree-hash alignment",
            "checksum",
            "retrieval job",
            "AWS SDK for Java",
            "high-level API",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Java API",
            "tree-hash",
            "archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This document explains how to retrieve archives from Amazon S3 Glacier, including specifying byte ranges for partial retrievals, and provides guidance on using the AWS SDK for Java to download archives.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a specific range of bytes from an archive in Amazon S3 Glacier?",
            "What is megabyte alignment and why is it important for archive retrieval?",
            "How can I use the AWS SDK for Java to download an archive from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "byte range",
          "megabyte alignment",
          "archive",
          "retrieval job",
          "checksum",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "tree-hash alignment",
          "Java API",
          "tree-hash",
          "high-level API",
          "low-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_152",
      "text": "Amazon S3 Glacier Developer Guide\nDownloading an Archive Using the High-Level API of the AWS SDK for Java\nThe ArchiveTransferManager class of the high-level API provides the download method you\ncan use to download an archive.\nImportant\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options.\nExample: Downloading an Archive Using the High-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region (us-west-2).\nFor step-by-step instructions to run this sample, see Running Java Examples for Amazon S3 Glacier\nUsing Eclipse. You need to update the code as shown with an existing archive ID and the local file\npath where you want to save the downloaded archive.\nExample\nimport java.io.File;\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.transfer.ArchiveTransferManager;\nimport com.amazonaws.services.sns.AmazonSNSClient;\nimport com.amazonaws.services.sqs.AmazonSQSClient;\npublic class ArchiveDownloadHighLevel {\npublic static String vaultName = \"examplevault\";\npublic static String archiveId = \"*** provide archive ID ***\";\npublic static String downloadFilePath = \"*** provide location to download archive\n***\";\nDownloading an Archive Using Java API Version 2012-06-01 143",
      "start_idx": 263330,
      "end_idx": 265074,
      "metadata": {
        "num_sentences": 9,
        "num_words": 229,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "High-Level API",
            "Java SDK",
            "archive retrieval",
            "vault",
            "archive ID",
            "download method"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using the High-Level API of the AWS SDK for Java, including example code and setup instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using Java?",
            "What is the role of ArchiveTransferManager in archive retrieval?",
            "What setup is required to run the provided Java example code?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "archive retrieval",
          "Amazon SNS",
          "ArchiveTransferManager",
          "vault",
          "High-Level API",
          "Java SDK",
          "download method",
          "us-west-2",
          "Amazon S3 Glacier",
          "archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_153",
      "text": "Amazon S3 Glacier Developer Guide\npublic static AmazonGlacierClient glacierClient;\npublic static AmazonSQSClient sqsClient;\npublic static AmazonSNSClient snsClient;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\ntry {\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient,\nsqsClient, snsClient);\natm.download(vaultName, archiveId, new File(downloadFilePath));\nSystem.out.println(\"Downloaded file to \" + downloadFilePath);\n} catch (Exception e)\n{\nSystem.err.println(e);\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for Java\nThe following are the steps to retrieve a vault inventory using the AWS SDK for Java low-level API.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region.\n2. Initiate an archive-retrieval job by executing the initiateJob method.\nYou provide job information, such as the archive ID of the archive you want to download\nand the optional Amazon SNS topic to which you want Amazon S3 Glacier (S3 Glacier) to\nDownloading an Archive Using Java API Version 2012-06-01 144",
      "start_idx": 265076,
      "end_idx": 266669,
      "metadata": {
        "num_sentences": 8,
        "num_words": 192,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient",
            "AWS SDK",
            "archive-retrieval job",
            "vault inventory",
            "ArchiveTransferManager",
            "low-level API",
            "AWS Region",
            "downloadFilePath"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for Java",
            "ArchiveTransferManager"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to download an archive from Amazon S3 Glacier using the low-level API, including setting up clients and initiating a retrieval job.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier using Java?",
            "What is the process for setting up AWS SDK clients for S3 Glacier?",
            "What steps are involved in initiating an archive-retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "Amazon SNS",
          "ArchiveTransferManager",
          "AmazonSNSClient",
          "vault inventory",
          "AWS SDK",
          "AWS Region",
          "downloadFilePath",
          "AmazonSQSClient",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AmazonGlacierClient",
          "low-level API",
          "archive-retrieval job"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_154",
      "text": "Amazon S3 Glacier Developer Guide\npost a job completion message, by creating an instance of the InitiateJobRequest\nclass. S3 Glacier returns a job ID in response. The response is available in an instance of the\nInitiateJobResult class.\nJobParameters jobParameters = new JobParameters()\n.withArchiveId(\"*** provide an archive id ***\")\n.withDescription(\"archive retrieval\")\n.withRetrievalByteRange(\"*** provide a retrieval range***\") // optional\n.withType(\"archive-retrieval\");\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive. For example, you can update the preceding request by adding the following statement\nto request S3 Glacier to prepare only the 1 MB to 2 MB portion of the archive.\nint ONE_MEG = 1048576;\nString retrievalByteRange = String.format(\"%s-%s\", ONE_MEG, 2*ONE_MEG -1);\nJobParameters jobParameters = new JobParameters()\n.withType(\"archive-retrieval\")\n.withArchiveId(archiveId)\n.withRetrievalByteRange(retrievalByteRange)\n.withSNSTopic(snsTopicARN);\nInitiateJobResult initiateJobResult = client.initiateJob(new InitiateJobRequest()\n.withJobParameters(jobParameters)\n.withVaultName(vaultName));\nString jobId = initiateJobResult.getJobId();\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\nDownloading an Archive Using Java API Version 2012-06-01 145",
      "start_idx": 266671,
      "end_idx": 268342,
      "metadata": {
        "num_sentences": 9,
        "num_words": 195,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "archive retrieval",
            "retrieval byte range",
            "SNS topic",
            "vault name",
            "job ID",
            "Java API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InitiateJobRequest",
            "InitiateJobResult",
            "JobParameters",
            "SNS topic ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Java",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to initiate and manage an archive retrieval job in Amazon S3 Glacier using the Java API, including specifying byte ranges and handling job completion notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in Amazon S3 Glacier?",
            "What parameters can I specify when creating an archive retrieval job?",
            "How do I request a specific byte range of an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "retrieval byte range",
          "SNS topic ARN",
          "Amazon SNS",
          "vault name",
          "InitiateJobRequest",
          "JobParameters",
          "Amazon S3 Glacier",
          "job ID",
          "Java API",
          "SNS topic",
          "InitiateJobResult"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_155",
      "text": "Amazon S3 Glacier Developer Guide\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\na message to that topic after it completes the job.\nYou can also poll S3 Glacier by calling the describeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach.\n4. Download the job output (archive data) by executing the getJobOutput method.\nYou provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResult object.\nGetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withVaultName(\"*** provide a vault name ****\");\nGetJobOutputResult jobOutputResult = client.getJobOutput(jobOutputRequest);\n// jobOutputResult.getBody() // Provides the input stream.\nThe preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest.\nGetJobOutputRequest jobOutputRequest = new GetJobOutputRequest()\n.withJobId(\"*** provide a job ID ***\")\n.withRange(\"bytes=0-1048575\") // Download only the first 1 MB of the\noutput.\n.withVaultName(\"*** provide a vault name ****\");\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data.\nTo verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response.\nFor an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash). You can use this value\nDownloading an Archive Using Java API Version 2012-06-01 146",
      "start_idx": 268344,
      "end_idx": 270379,
      "metadata": {
        "num_sentences": 16,
        "num_words": 302,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "checksum",
            "SHA256TreeHash",
            "job ID",
            "vault name",
            "byte range",
            "archive retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "GetJobOutputRequest",
            "GetJobOutputResult",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage and Data Retrieval",
          "secondary_categories": [
            "AWS SDK",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to retrieve archive data from Amazon S3 Glacier using the Java API, including job completion notifications, downloading data, and verifying checksums.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the GetJobOutput method to retrieve data from S3 Glacier?",
            "What is the purpose of specifying a byte range in a GetJobOutputRequest?",
            "How can I verify the integrity of downloaded data from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage and Data Retrieval]",
        "tf_idf_keywords": [
          "byte range",
          "archive retrieval",
          "Amazon SNS",
          "SHA256TreeHash",
          "vault name",
          "checksum",
          "Amazon S3 Glacier",
          "job ID",
          "GetJobOutputRequest",
          "GetJobOutputResult"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_156",
      "text": "Amazon S3 Glacier Developer Guide\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier.\nFor a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for Java\u2014Download Output in Chunks .\nExample 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\nThe following Java code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single getJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for Java\u2014Download Output in Chunks .\nThe example performs the following tasks:\n\u2022 Creates an Amazon Simple Notification Service (Amazon SNS) topic.\nS3 Glacier sends a notification to this topic after it completes the job.\n\u2022 Creates an Amazon Simple Queue Service (Amazon SQS) queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages to\nthe queue.\n\u2022 Initiates a job to download the specified archive.\nIn the job request, the Amazon SNS topic that was created is specified so that S3 Glacier can\npublish a notification to the topic after it completes the job.\n\u2022 Periodically checks the Amazon SQS queue for a message that contains the job ID.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive.\n\u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue that it created.\nDownloading an Archive Using Java API Version 2012-06-01 147",
      "start_idx": 270381,
      "end_idx": 272461,
      "metadata": {
        "num_sentences": 18,
        "num_words": 362,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "tree-hash",
            "checksum",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "archive retrieval",
            "GetJobOutput",
            "byte range",
            "job request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Amazon SNS",
            "Amazon SQS",
            "GetJobOutput"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve archives from Amazon S3 Glacier using the AWS SDK for Java, including verifying data integrity and managing notifications and queues.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using Java?",
            "How do I verify the integrity of downloaded data from Amazon S3 Glacier?",
            "What is the process for setting up Amazon SNS and SQS for archive retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "archive retrieval",
          "Amazon SNS",
          "byte range",
          "checksum",
          "tree-hash",
          "AWS SDK for Java",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "job request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_162",
      "text": "Amazon S3 Glacier Developer Guide\ntry {input.close();} catch (Exception e) {}\ntry {output.close();} catch (Exception e) {}\n}\nSystem.out.println(\"Retrieved archive to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for Java\u2014Download\nOutput in Chunks\nThe following Java code example retrieves an archive from S3 Glacier. The code example\ndownloads the job output in chunks by specifying byte range in a GetJobOutputRequest object.\nimport java.io.BufferedInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.amazonaws.auth.policy.Policy;\nimport com.amazonaws.auth.policy.Principal;\nimport com.amazonaws.auth.policy.Resource;\nimport com.amazonaws.auth.policy.Statement;\nimport com.amazonaws.auth.policy.Statement.Effect;\nimport com.amazonaws.auth.policy.actions.SQSActions;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.TreeHashGenerator;\nDownloading an Archive Using Java API Version 2012-06-01 153",
      "start_idx": 280383,
      "end_idx": 282042,
      "metadata": {
        "num_sentences": 3,
        "num_words": 135,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "GetJobOutputRequest",
            "archive retrieval",
            "byte range",
            "SNS",
            "SQS",
            "TreeHashGenerator",
            "ProfileCredentialsProvider",
            "low-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS",
            "AWS SDK for Java",
            "TreeHashGenerator"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "TreeHashGenerator",
            "ProfileCredentialsProvider"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of retrieving an archive from Amazon S3 Glacier using the low-level API of the AWS SDK for Java, including downloading job output in chunks via a GetJobOutputRequest object.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using Java?",
            "What is the process for downloading job output in chunks with AWS SDK for Java?",
            "What are the key components of the low-level API for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "byte range",
          "SNS",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "SQS",
          "ProfileCredentialsProvider",
          "GetJobOutputRequest",
          "TreeHashGenerator",
          "low-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_168",
      "text": "Amazon S3 Glacier Developer Guide\nstartRange = startRange + (long)totalRead;\nendRange = ((endRange + downloadChunkSize) > archiveSizeInBytes) ?\narchiveSizeInBytes : (endRange + downloadChunkSize);\nis.close();\n} while (endRange <= archiveSizeInBytes && startRange < archiveSizeInBytes);\nfstream.close();\nSystem.out.println(\"Retrieved file to \" + fileName);\n}\nprivate static void cleanUp() {\nsnsClient.unsubscribe(new UnsubscribeRequest(snsSubscriptionARN));\nsnsClient.deleteTopic(new DeleteTopicRequest(snsTopicARN));\nsqsClient.deleteQueue(new DeleteQueueRequest(sqsQueueURL));\n}\n}\nDownloading an Archive in Amazon S3 Glacier Using the AWS SDK\nfor .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndownload an archive.\nTopics\n\u2022 Downloading an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Downloading an Archive Using the Low-Level API of the AWS SDK for .NET\nDownloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the Download method you\ncan use to download an archive.\nImportant\nThe ArchiveTransferManager class creates an Amazon Simple Notification Service\n(Amazon SNS) topic, and an Amazon Simple Queue Service (Amazon SQS) queue that is\nsubscribed to that topic. It then initiates the archive retrieval job and polls the queue for\nDownloading an Archive Using .NET API Version 2012-06-01 159",
      "start_idx": 289794,
      "end_idx": 291233,
      "metadata": {
        "num_sentences": 5,
        "num_words": 196,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET",
            "Download method",
            "archive retrieval job",
            "high-level API",
            "low-level API",
            "archiveSizeInBytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Notification Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download archives from Amazon S3 Glacier using the high-level and low-level APIs of the AWS SDK for .NET, including code snippets and service interactions with Amazon SNS and SQS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use the AWS SDK for .NET to download archives from Amazon S3 Glacier?",
            "What is the role of Amazon SNS and SQS in archive retrieval jobs?",
            "What are the differences between high-level and low-level APIs for archive downloads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval job",
          "Amazon SQS",
          "AWS SDK for .NET",
          "Amazon SNS",
          "ArchiveTransferManager",
          "Amazon S3 Glacier",
          "archiveSizeInBytes",
          "Download method",
          "low-level API",
          "high-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_169",
      "text": "Amazon S3 Glacier Developer Guide\nthe archive to be available. When the archive is available, download begins. For information\nabout retrieval times, see Archive Retrieval Options\nExample: Downloading an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from a vault (examplevault) in the US\nWest (Oregon) Region.\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need\nto update the code as shown with an existing archive ID and the local file path where you want to\nsave the downloaded archive.\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string downloadFilePath = \"*** Provide the file name and path to where to\nstore the download ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nvar options = new DownloadOptions();\noptions.StreamTransferProgress += ArchiveDownloadHighLevel.progress;\n// Download an archive.\nConsole.WriteLine(\"Intiating the archive retrieval job and then polling SQS\nqueue for the archive to be available.\");\nConsole.WriteLine(\"Once the archive is available, downloading will begin.\");\nmanager.Download(vaultName, archiveId, downloadFilePath, options);\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\nDownloading an Archive Using .NET API Version 2012-06-01 160",
      "start_idx": 291235,
      "end_idx": 292834,
      "metadata": {
        "num_sentences": 9,
        "num_words": 210,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Archive Retrieval",
            "High-Level API",
            "C#",
            "ArchiveTransferManager",
            "DownloadOptions",
            "RegionEndpoint",
            "SQS Queue",
            "Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "US West (Oregon) Region",
            "ArchiveTransferManager",
            "DownloadOptions"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Programming with AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of downloading an archive from Amazon S3 Glacier using the AWS SDK for .NET High-Level API, including setup instructions and sample C# code.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using C#?",
            "What is the process for setting up ArchiveTransferManager in .NET?",
            "What are the required parameters for downloading an archive using the AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "US West (Oregon) Region",
          "Vault",
          "Archive Retrieval",
          "High-Level API",
          "RegionEndpoint",
          "DownloadOptions",
          "C#",
          "SQS Queue",
          "Amazon S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_170",
      "text": "Amazon S3 Glacier Developer Guide\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic int currentPercentage = -1;\nstatic void progress(object sender, StreamTransferProgressArgs args)\n{\nif (args.PercentDone != currentPercentage)\n{\ncurrentPercentage = args.PercentDone;\nConsole.WriteLine(\"Downloaded {0}%\", args.PercentDone);\n}\n}\n}\n}\nDownloading an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following are the steps for downloading an Amazon S3 Glacier (S3 Glacier) archive using the\nlow-level API of the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region from where you want to download the archive. All\noperations you perform using this client apply to that AWS Region.\n2. Initiate an archive-retrieval job by executing the InitiateJob method.\nYou provide job information, such as the archive ID of the archive you want to download and the\noptional Amazon SNS topic to which you want S3 Glacier to post a job completion message, by\ncreating an instance of the InitiateJobRequest class. S3 Glacier returns a job ID in response.\nThe response is available in an instance of the InitiateJobResponse class.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nDownloading an Archive Using .NET API Version 2012-06-01 161",
      "start_idx": 292836,
      "end_idx": 294477,
      "metadata": {
        "num_sentences": 11,
        "num_words": 226,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "archive-retrieval job",
            "StreamTransferProgressArgs",
            "AmazonServiceException",
            "AWS Region",
            "InitiateJobResponse",
            "Amazon SNS topic"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "Amazon SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide for downloading an Amazon S3 Glacier archive using the low-level API of the AWS SDK for .NET, including initiating a retrieval job and handling progress updates.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an Amazon S3 Glacier archive using .NET?",
            "What is the purpose of the InitiateJobRequest class in AWS SDK for .NET?",
            "How can I monitor download progress for an S3 Glacier archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InitiateJobResponse",
          "AWS SDK for .NET",
          "Amazon SNS",
          "StreamTransferProgressArgs",
          "InitiateJobRequest",
          "AWS Region",
          "AmazonServiceException",
          "Amazon S3 Glacier",
          "Amazon SNS topic",
          "AmazonGlacierClient",
          "archive-retrieval job"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_171",
      "text": "Amazon S3 Glacier Developer Guide\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\nYou can optionally specify a byte range to request S3 Glacier to prepare only a portion of the\narchive as shown in the following request. The request specifies S3 Glacier to prepare only the 1\nMB to 2 MB portion of the archive.\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nInitiateJobRequest initJobRequest = new InitiateJobRequest()\n{\nVaultName = vaultName,\nJobParameters = new JobParameters()\n{\nType = \"archive-retrieval\",\nArchiveId = \"*** Provide archive id ***\",\nSNSTopic = \"*** Provide Amazon SNS topic ARN ***\",\n}\n};\n// Specify byte range.\nint ONE_MEG = 1048576;\ninitJobRequest.JobParameters.RetrievalByteRange = string.Format(\"{0}-{1}\", ONE_MEG, 2\n* ONE_MEG -1);\nInitiateJobResponse initJobResponse = client.InitiateJob(initJobRequest);\nstring jobId = initJobResponse.JobId;\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you have either set a\nnotification configuration on the vault identifying an Amazon Simple Notification Service\n(Amazon SNS) topic or specified an Amazon SNS topic when you initiated a job, S3 Glacier sends\nDownloading an Archive Using .NET API Version 2012-06-01 162",
      "start_idx": 294479,
      "end_idx": 295987,
      "metadata": {
        "num_sentences": 7,
        "num_words": 210,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "InitiateJobRequest",
            "Amazon SNS",
            "byte range",
            "AmazonGlacierClient",
            "JobParameters",
            "vault",
            "job output",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AmazonGlacierClient",
            "InitiateJobRequest",
            "JobParameters"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural example for initiating an archive retrieval job in Amazon S3 Glacier using the .NET API, including specifying a byte range and handling job completion notifications via Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an archive retrieval job in Amazon S3 Glacier using .NET?",
            "What is the process for specifying a byte range in an archive retrieval request?",
            "How can Amazon SNS be used to notify job completion in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "byte range",
          "Amazon SNS",
          "vault",
          "InitiateJobRequest",
          "JobParameters",
          "job output",
          "notification configuration",
          "Amazon S3 Glacier",
          "AmazonGlacierClient"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_172",
      "text": "Amazon S3 Glacier Developer Guide\na message to that topic after it completes the job. The code example given in the following\nsection uses Amazon SNS for S3 Glacier to publish a message.\nYou can also poll S3 Glacier by calling the DescribeJob method to determine the job\ncompletion status. Although, using an Amazon SNS topic for notification is the recommended\napproach .\n4. Download the job output (archive data) by executing the GetJobOutput method.\nYou provide the request information such as the job ID and vault name by creating an instance\nof the GetJobOutputRequest class. The output that S3 Glacier returns is available in the\nGetJobOutputResponse object.\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse = client.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\nThe preceding code snippet downloads the entire job output. You can optionally retrieve only a\nportion of the output, or download the entire output in smaller chunks by specifying the byte\nrange in your GetJobOutputRequest.\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\ngetJobOutputRequest.SetRange(0, 1048575); // Download only the first 1 MB chunk of\nthe output.\nDownloading an Archive Using .NET API Version 2012-06-01 163",
      "start_idx": 295989,
      "end_idx": 297488,
      "metadata": {
        "num_sentences": 12,
        "num_words": 211,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Method Explanation",
              "Notification Workflow"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "DescribeJob",
            "GetJobOutput",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "archive data",
            "byte range",
            "job ID",
            "vault name"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "DescribeJob"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use Amazon SNS and S3 Glacier APIs to manage and retrieve archive data, including code examples for downloading job outputs in chunks using the .NET API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archive data from Amazon S3 Glacier?",
            "What is the recommended approach for job completion notifications in S3 Glacier?",
            "How can I download a portion of job output using the .NET API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetJobOutputResponse",
          "byte range",
          "DescribeJob",
          "Amazon SNS",
          "vault name",
          "archive data",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "job ID",
          "SNS topic",
          "GetJobOutputRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_173",
      "text": "Amazon S3 Glacier Developer Guide\nIn response to your GetJobOutput call, S3 Glacier returns the checksum of the portion of\nthe data you downloaded, if certain conditions are met. For more information, see Receiving\nChecksums When Downloading Data.\nTo verify there are no errors in the download, you can then compute the checksum on the client-\nside and compare it with the checksum S3 Glacier sent in the response.\nFor an archive retrieval job with the optional range specified, when you get the job description, it\nincludes the checksum of the range you are retrieving (SHA256TreeHash).You can use this value\nto further verify the accuracy of the entire byte range that you later download. For example,\nif you initiate a job to retrieve a tree-hash aligned archive range and then download output\nin chunks such that each of your GetJobOutput requests return a checksum, then you can\ncompute checksum of each portion you download on the client-side and then compute the tree\nhash. You can compare it with the checksum S3 Glacier returns in response to your describe job\nrequest to verify that the entire byte range you have downloaded is the same as the byte range\nthat is stored in S3 Glacier.\nFor a working example, see Example 2: Retrieving an Archive Using the Low-Level API of the\nAWS SDK for .NET\u2014Download Output in Chunks.\nExample 1: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# code example downloads an archive from the specified vault. After the job\ncompletes, the example downloads the entire output in a single GetJobOutput call. For an\nexample of downloading output in chunks, see Example 2: Retrieving an Archive Using the Low-\nLevel API of the AWS SDK for .NET\u2014Download Output in Chunks.\nThe example performs the following tasks:\n\u2022 Sets up an Amazon Simple Notification Service (Amazon SNS) topic\nS3 Glacier sends a notification to this topic after it completes the job.\n\u2022 Sets up an Amazon Simple Queue Service (Amazon SQS) queue.\nThe example attaches a policy to the queue to enable the Amazon SNS topic to post messages.\n\u2022 Initiates a job to download the specified archive.\nDownloading an Archive Using .NET API Version 2012-06-01 164",
      "start_idx": 297490,
      "end_idx": 299684,
      "metadata": {
        "num_sentences": 15,
        "num_words": 372,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "checksum",
            "GetJobOutput",
            "SHA256TreeHash",
            "archive retrieval",
            "Amazon SNS",
            "Amazon SQS",
            "tree hash",
            "byte range",
            "AWS SDK for .NET"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "AWS SDK for .NET",
            "SHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and verify data from Amazon S3 Glacier using checksums, including examples in C# with the AWS SDK for .NET. It also details setting up Amazon SNS and SQS for notifications and queue management.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I verify data integrity when downloading from Amazon S3 Glacier?",
            "What is the process for retrieving an archive using the AWS SDK for .NET?",
            "How do I set up Amazon SNS and SQS for S3 Glacier job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "Amazon SQS",
          "SHA256TreeHash",
          "Amazon SNS",
          "tree hash",
          "byte range",
          "AWS SDK for .NET",
          "checksum",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_174",
      "text": "Amazon S3 Glacier Developer Guide\nIn the job request, the example specifies the Amazon SNS topic so that S3 Glacier can send a\nmessage after it completes the job.\n\u2022 Periodically checks the Amazon SQS queue for a message.\nIf there is a message, parse the JSON and check if the job completed successfully. If it did,\ndownload the archive. The code example uses the JSON.NET library (see JSON.NET) to parse the\nJSON.\n\u2022 Cleans up by deleting the Amazon SNS topic and the Amazon SQS queue it created.\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSNSSQS\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveID = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\nDownloading an Archive Using .NET API Version 2012-06-01 165",
      "start_idx": 299686,
      "end_idx": 301114,
      "metadata": {
        "num_sentences": 7,
        "num_words": 198,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            "archive download",
            "job request",
            "queue policy",
            "vault",
            ".NET API",
            "message parsing"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS",
            "JSON.NET",
            ".NET API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Services",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "JSON.NET",
            "Amazon SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using Amazon SNS and SQS for notifications and message handling, with a code example in .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I use Amazon SNS and SQS with S3 Glacier to download an archive?",
            "What is an example of using JSON.NET for parsing messages in .NET?",
            "How do I clean up resources like SNS topics and SQS queues after a job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Amazon SQS",
          "Amazon SNS",
          "queue policy",
          ".NET API Version 2012-06-01",
          "vault",
          "Amazon S3 Glacier",
          "job request",
          "message parsing",
          "JSON.NET",
          "archive download",
          ".NET API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_175",
      "text": "Amazon S3 Glacier Developer Guide\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"Service\\\" : \\\"sns.amazonaws.com\\\" },\" +\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QueueArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue.\");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Retrieving...\");\nRetrieveArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue.\nsnsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nsqsClient.DeleteQueue(new DeleteQueueRequest() { QueueUrl = queueUrl });\n}\n}\nstatic void SetupTopicAndQueue()\n{\nDownloading an Archive Using .NET API Version 2012-06-01 166",
      "start_idx": 301116,
      "end_idx": 302383,
      "metadata": {
        "num_sentences": 4,
        "num_words": 156,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "SQS queue",
            "AmazonGlacierClient",
            "Amazon.RegionEndpoint",
            "ArnLike",
            "SendMessage",
            "DeleteQueue",
            "RetrieveArchive",
            "SetupTopicAndQueue"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS",
            "AmazonGlacierClient",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Services",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS"
          ],
          "mentioned_tools": [
            ".NET API"
          ]
        },
        "semantic": {
          "summary": "This guide explains how to set up an SNS topic and SQS queue for Amazon S3 Glacier using the .NET API, including handling errors and cleaning up resources.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up an SNS topic and SQS queue for Amazon S3 Glacier?",
            "What is the process for retrieving an archive using the .NET API?",
            "How can I handle errors when working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SNS",
          "RetrieveArchive",
          "SetupTopicAndQueue",
          "Amazon S3 Glacier",
          "ArnLike",
          "SQS",
          "SendMessage",
          "SNS topic",
          "AmazonGlacierClient",
          "DeleteQueue",
          "SQS queue",
          "Amazon.RegionEndpoint",
          "Amazon.RegionEndpoint.USWest2"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_178",
      "text": "Amazon S3 Glacier Developer Guide\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, client); // Save job output to the specified file\nlocation.\n}\nelse if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive.\");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, AmazonGlacierClient client)\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nusing (Stream fileToSave = File.OpenWrite(fileName))\n{\nCopyStream(webStream, fileToSave);\n}\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nDownloading an Archive Using .NET API Version 2012-06-01 169",
      "start_idx": 305339,
      "end_idx": 306691,
      "metadata": {
        "num_sentences": 3,
        "num_words": 129,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DownloadOutput",
            "GetJobOutputRequest",
            "job output",
            "StatusCode",
            "VaultName",
            "JsonConvert",
            "streaming",
            "archive",
            "DeleteMessageRequest"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "GetJobOutputRequest",
            "GlacierUtils",
            "DeleteMessageRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "File Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET API",
            "JsonConvert"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for downloading archive data from Amazon S3 Glacier using the .NET API. It includes handling job statuses and saving the output to a file.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier using .NET?",
            "What steps are involved in handling job output for S3 Glacier?",
            "How can I handle job status responses in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "streaming",
          "archive",
          "DownloadOutput",
          "JsonConvert",
          "DeleteMessageRequest",
          "job output",
          "Amazon S3 Glacier",
          "GlacierUtils",
          "AmazonGlacierClient",
          "StatusCode",
          "GetJobOutputRequest",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_179",
      "text": "Amazon S3 Glacier Developer Guide\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nExample 2: Retrieving an Archive Using the Low-Level API of the AWS SDK for .NET\u2014Download\nOutput in Chunks\nThe following C# code example retrieves an archive from S3 Glacier. The code example downloads\nthe job output in chunks by specifying the byte range in a GetJobOutputRequest object.\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nusing Amazon.SimpleNotificationService;\nusing Amazon.SimpleNotificationService.Model;\nusing Amazon.SQS;\nusing Amazon.SQS.Model;\nusing Newtonsoft.Json;\nusing System.Collections.Specialized;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDownloadLowLevelUsingSQLSNSOutputUsingRange\n{\nstatic string topicArn;\nstatic string queueUrl;\nstatic string queueArn;\nstatic string vaultName = \"*** Provide vault name ***\";\nstatic string archiveId = \"*** Provide archive ID ***\";\nstatic string fileName = \"*** Provide the file name and path to where to store\ndownloaded archive ***\";\nstatic AmazonSimpleNotificationServiceClient snsClient;\nstatic AmazonSQSClient sqsClient;\nconst string SQS_POLICY =\nDownloading an Archive Using .NET API Version 2012-06-01 170",
      "start_idx": 306693,
      "end_idx": 308065,
      "metadata": {
        "num_sentences": 3,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "GetJobOutputRequest",
            "archive retrieval",
            "byte range",
            "job output",
            "C# code",
            "Amazon SNS",
            "Amazon SQS",
            "vault name"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Amazon SNS",
            "Amazon SQS",
            "GetJobOutputRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Amazon SQS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#",
            "Newtonsoft.Json"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to retrieve an archive from Amazon S3 Glacier by downloading job output in chunks through a GetJobOutputRequest object.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier using .NET?",
            "What is the process to download job output in chunks in AWS SDK for .NET?",
            "What AWS services are involved in archive retrieval from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "byte range",
          "AWS SDK for .NET",
          "archive retrieval",
          "Amazon SNS",
          "Amazon SQS",
          "vault name",
          "job output",
          "C# code",
          "Amazon S3 Glacier",
          "GetJobOutputRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_180",
      "text": "Amazon S3 Glacier Developer Guide\n\"{\" +\n\" \\\"Version\\\" : \\\"2012-10-17\\\",\" +\n\" \\\"Statement\\\" : [\" +\n\" {\" +\n\" \\\"Sid\\\" : \\\"sns-rule\\\",\" +\n\" \\\"Effect\\\" : \\\"Allow\\\",\" +\n\" \\\"Principal\\\" : {\\\"AWS\\\" : \\\"arn:aws:iam::123456789012:root\\\" },\"\n+\n\" \\\"Action\\\" : \\\"sqs:SendMessage\\\",\" +\n\" \\\"Resource\\\" : \\\"{QuernArn}\\\",\" +\n\" \\\"Condition\\\" : {\" +\n\" \\\"ArnLike\\\" : {\" +\n\" \\\"aws:SourceArn\\\" : \\\"{TopicArn}\\\"\" +\n\" }\" +\n\" }\" +\n\" }\" +\n\" ]\" +\n\"}\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Setup SNS topic and SQS queue.\");\nSetupTopicAndQueue();\nConsole.WriteLine(\"To continue, press Enter\"); Console.ReadKey();\nConsole.WriteLine(\"Download archive\");\nDownloadAnArchive(archiveId, client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nfinally\n{\n// Delete SNS topic and SQS queue.\nsnsClient.DeleteTopic(new DeleteTopicRequest() { TopicArn = topicArn });\nDownloading an Archive Using .NET API Version 2012-06-01 171",
      "start_idx": 308067,
      "end_idx": 309318,
      "metadata": {
        "num_sentences": 4,
        "num_words": 160,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIUsage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS",
            "IAM",
            "SendMessage",
            "AmazonGlacierClient",
            "RegionEndpoint",
            "DeleteTopicRequest",
            "archiveId",
            "TopicArn"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS topic",
            "SQS queue",
            "AmazonGlacierClient",
            "IAM Policy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Messaging Services",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS",
            "SQS"
          ],
          "mentioned_tools": [
            ".NET API",
            "AmazonGlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to use the Amazon S3 Glacier .NET API to set up SNS topics, SQS queues, and download archives while handling exceptions.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up an SNS topic and SQS queue for Amazon S3 Glacier?",
            "What is the process for downloading an archive using the .NET API?",
            "How are exceptions handled in Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM Policy",
          "SNS",
          "IAM",
          "RegionEndpoint",
          "DeleteTopicRequest",
          "archiveId",
          "TopicArn",
          "Amazon S3 Glacier",
          "SendMessage",
          "SNS topic",
          "AmazonGlacierClient",
          "SQS",
          "SQS queue"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_183",
      "text": "Amazon S3 Glacier Developer Guide\n{\nThread.Sleep(10000 * 60);\ncontinue;\n}\nConsole.WriteLine(\"Got message\");\nMessage message = receiveMessageResponse.Messages[0];\nDictionary<string, string> outerLayer =\nJsonConvert.DeserializeObject<Dictionary<string, string>>(message.Body);\nDictionary<string, object> fields =\nJsonConvert.DeserializeObject<Dictionary<string, object>>(outerLayer[\"Message\"]);\nstring statusCode = fields[\"StatusCode\"] as string;\nif (string.Equals(statusCode, GlacierUtils.JOB_STATUS_SUCCEEDED,\nStringComparison.InvariantCultureIgnoreCase))\n{\nlong archiveSize = Convert.ToInt64(fields[\"ArchiveSizeInBytes\"]);\nConsole.WriteLine(\"Downloading job output\");\nDownloadOutput(jobId, archiveSize, client); // This where we save job\noutput to the specified file location.\n}\nelse if (string.Equals(statusCode, GlacierUtils.JOB_STATUS_FAILED,\nStringComparison.InvariantCultureIgnoreCase))\nConsole.WriteLine(\"Job failed... cannot download the archive.\");\njobDone = true;\nsqsClient.DeleteMessage(new DeleteMessageRequest() { QueueUrl = queueUrl,\nReceiptHandle = message.ReceiptHandle });\n}\n}\nprivate static void DownloadOutput(string jobId, long archiveSize,\nAmazonGlacierClient client)\n{\nlong partSize = 4 * (long)Math.Pow(2, 20); // 4 MB.\nusing (Stream fileToSave = new FileStream(fileName, FileMode.Create,\nFileAccess.Write))\n{\nlong currentPosition = 0;\ndo\n{\nGetJobOutputRequest getJobOutputRequest = new GetJobOutputRequest()\n{\nJobId = jobId,\nVaultName = vaultName\n};\nDownloading an Archive Using .NET API Version 2012-06-01 174",
      "start_idx": 312175,
      "end_idx": 313709,
      "metadata": {
        "num_sentences": 4,
        "num_words": 146,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job output",
            "archive size",
            "download",
            "status code",
            "message queue",
            "GetJobOutputRequest",
            "JSON deserialization",
            "AmazonGlacierClient",
            "FileStream"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierUtils",
            "AmazonGlacierClient",
            "GetJobOutputRequest",
            "Message"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AmazonGlacierClient",
            "JsonConvert"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a .NET code example for downloading job output from Amazon S3 Glacier, including handling status codes and managing large archive sizes.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I download job output from Amazon S3 Glacier using .NET?",
            "What is the process for handling status codes in Amazon S3 Glacier jobs?",
            "How do I manage large archive sizes when downloading data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "status code",
          "FileStream",
          "JSON deserialization",
          "download",
          "archive size",
          "job output",
          "Amazon S3 Glacier",
          "Message",
          "GlacierUtils",
          "message queue",
          "AmazonGlacierClient",
          "GetJobOutputRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_184",
      "text": "Amazon S3 Glacier Developer Guide\nlong endPosition = currentPosition + partSize - 1;\nif (endPosition > archiveSize)\nendPosition = archiveSize;\ngetJobOutputRequest.SetRange(currentPosition, endPosition);\nGetJobOutputResponse getJobOutputResponse =\nclient.GetJobOutput(getJobOutputRequest);\nusing (Stream webStream = getJobOutputResponse.Body)\n{\nCopyStream(webStream, fileToSave);\n}\ncurrentPosition += partSize;\n} while (currentPosition < archiveSize);\n}\n}\npublic static void CopyStream(Stream input, Stream output)\n{\nbyte[] buffer = new byte[65536];\nint length;\nwhile ((length = input.Read(buffer, 0, buffer.Length)) > 0)\n{\noutput.Write(buffer, 0, length);\n}\n}\n}\n}\nDownloading an Archive by Using the REST API\nTo download an archive by using the REST API\nDownloading an archive is a two-step process.\n1. Initiate a job of the archive-retrieval type. For more information, see Initiate Job (POST\njobs).\n2. After the job is completed, download the archive data. For more information, see Get Job\nOutput (GET output).\nDownloading an Archive by Using REST API Version 2012-06-01 175",
      "start_idx": 313711,
      "end_idx": 314788,
      "metadata": {
        "num_sentences": 8,
        "num_words": 145,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Step-by-Step Guide"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "REST API",
            "GetJobOutput",
            "Initiate Job",
            "Stream",
            "archive data",
            "partSize",
            "buffer",
            "output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GetJobOutputRequest",
            "GetJobOutputResponse",
            "REST API Version 2012-06-01",
            "POST jobs"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for downloading archives from Amazon S3 Glacier using the REST API, including code snippets and step-by-step instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive using Amazon S3 Glacier REST API?",
            "What are the steps to retrieve archive data from Amazon S3 Glacier?",
            "How can I implement archive retrieval in code using REST API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetJobOutputResponse",
          "REST API Version 2012-06-01",
          "archive retrieval",
          "partSize",
          "Initiate Job",
          "Stream",
          "REST API",
          "buffer",
          "archive data",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "POST jobs",
          "output",
          "GetJobOutputRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_185",
      "text": "Amazon S3 Glacier Developer Guide\nDownloading an Archive in Amazon S3 Glacier Using the AWS CLI\nYou can download archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line\nInterface (AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Download an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 176",
      "start_idx": 314790,
      "end_idx": 315941,
      "metadata": {
        "num_sentences": 11,
        "num_words": 188,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Command Usage",
              "Verification"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "archive",
            "vaults",
            "list-vaults",
            "configure",
            "help command",
            "API Version 2012-06-01",
            "credentials",
            "default profile"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "list-vaults command",
            "AWS account ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download archives from Amazon S3 Glacier using the AWS CLI, including setup, command usage, and verification steps.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up the AWS CLI for Amazon S3 Glacier?",
            "What commands can I use to verify my AWS CLI configuration?",
            "How can I download an archive from Amazon S3 Glacier using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "default profile",
          "AWS CLI",
          "archive",
          "list-vaults command",
          "credentials",
          "vaults",
          "list-vaults",
          "Amazon S3 Glacier",
          "configure",
          "help command",
          "API Version 2012-06-01",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_186",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Download an Archive Using the AWS CLI\nNote\nIn order to download your archives you must know your archive ids. Steps 1-4 will retrieve\nyour archive ids. If you already know the archive ids you wish to download skip to step 5.\n1. Use the initiate-job command to start an inventory-retrieval job. The inventory report will\nlist your archive ids.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous job command.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 177",
      "start_idx": 315943,
      "end_idx": 317085,
      "metadata": {
        "num_sentences": 9,
        "num_words": 152,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Warning"
            ]
          },
          "keywords": [
            "AWS CLI",
            "Amazon S3 Glacier",
            "archive ids",
            "inventory-retrieval job",
            "initiate-job command",
            "describe-job command",
            "vault-name",
            "account-id",
            "jobId",
            "InventoryRetrievalParameters"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "vault-name",
            "account-id",
            "jobId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to download an archive from Amazon S3 Glacier using the AWS CLI, including initiating and describing inventory-retrieval jobs to retrieve archive IDs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download an archive from Amazon S3 Glacier using the AWS CLI?",
            "What are the steps to retrieve archive IDs in Amazon S3 Glacier?",
            "How can I check the status of an inventory-retrieval job in AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory-retrieval job",
          "AWS CLI",
          "jobId",
          "initiate-job command",
          "vault-name",
          "account-id",
          "Amazon S3 Glacier",
          "InventoryRetrievalParameters",
          "archive ids",
          "describe-job command"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_187",
      "text": "Amazon S3 Glacier Developer Guide\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.\n4. When it's complete, use the get-job-output command to download the retrieval job to the\nfile output.json. This file will contain your archive ids.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the initiate-job command to start the retrieval process each archive from a vault. You\nwill need to specify the job parameter as archive-retrieval as seen below.\nDownloading an Archive Using the AWS CLI API Version 2012-06-01 178",
      "start_idx": 317087,
      "end_idx": 318625,
      "metadata": {
        "num_sentences": 15,
        "num_words": 220,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "Command Line Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "job output",
            "SNS topic",
            "get-job-output",
            "initiate-job",
            "archive retrieval",
            "AWS CLI",
            "InventoryDate",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS CLI",
            "VaultARN",
            "ArchiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide on retrieving archives from Amazon S3 Glacier using the AWS CLI, including setting up notifications and downloading job outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve archives from Amazon S3 Glacier?",
            "What commands are used to download job outputs in AWS CLI?",
            "How can I configure notifications for vault events in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "InventoryDate",
          "AWS CLI",
          "Amazon SNS",
          "vault",
          "initiate-job",
          "get-job-output",
          "job output",
          "VaultARN",
          "Amazon S3 Glacier",
          "SNS topic",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_188",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333\n--job-parameters=\"{\\\"Type\\\":\\\"archive-retrieval\\\",\\\"ArchiveId\\\":\\\"*** archiveId\n***\\\"}\"\n6. Wait for the archive-retrieval job to complete. Use the describe-job command to\ncheck status of the previous command.\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\n7. When the above job is complete use the get-job-output command to download your\narchive.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output_file_name\nDeleting an Archive in Amazon S3 Glacier\nYou cannot delete an archive using the Amazon S3 Glacier (S3 Glacier) management console.\nTo delete an archive you must use the AWS Command Line Interface (CLI) or write code to make\na delete request using either the REST API directly or the AWS SDK for Java and .NET wrapper\nlibraries. The following topics explain how to use the AWS SDK for Java and .NET wrapper libraries,\nthe REST API, and the AWS CLI.\nTopics\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\n\u2022 Deleting an Amazon S3 Glacier Archive Using the REST API\n\u2022 Deleting an Archive in Amazon S3 Glacier Using the AWS Command Line Interface\nYou can delete one archive at a time from a vault. To delete the archive you must provide its\narchive ID in your delete request. You can get the archive ID by downloading the vault inventory for\nthe vault that contains the archive. For more information about downloading the vault inventory,\nsee Downloading a Vault Inventory in Amazon S3 Glacier.\nDeleting an Archive API Version 2012-06-01 179",
      "start_idx": 318627,
      "end_idx": 320395,
      "metadata": {
        "num_sentences": 13,
        "num_words": 275,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Line Instructions",
              "API Usage",
              "SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "vault inventory",
            "delete request",
            "AWS CLI",
            "REST API",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "archive ID",
            "job output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "REST API",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Command Line Operations",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural steps for retrieving and deleting archives in Amazon S3 Glacier using the AWS CLI, REST API, and SDKs for Java and .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What are the steps to delete an archive using the AWS CLI?",
            "How can I use the AWS SDK to manage Amazon S3 Glacier archives?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "archive retrieval",
          "AWS SDK for .NET",
          "delete request",
          "AWS CLI",
          "REST API",
          "vault inventory",
          "job output",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_189",
      "text": "Amazon S3 Glacier Developer Guide\nAfter you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail.\nArchive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\n\u2022 If the archive retrieval job is actively preparing the data for download when S3 Glacier receives\nthe delete archive request, then the archival retrieval operation might fail.\n\u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, then you will be able to download the output.\nFor more information about archive retrieval, see Downloading an Archive in S3 Glacier.\nThis operation is idempotent. Deleting an already-deleted archive does not result in an error.\nAfter you delete an archive, if you immediately download the vault inventory, it might include the\ndeleted archive in the list because S3 Glacier prepares vault inventory only about once a day.\nDeleting an Archive in Amazon S3 Glacier Using the AWS SDK for Java\nThe following are the steps to delete an archive using the AWS SDK for Java low-level API.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteArchiveRequest class.\nYou need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDK for Java with Amazon S3 Glacier.\n3. Run the deleteArchive method by providing the request object as a parameter.\nThe following Java code snippet illustrates the preceding steps.\nAmazonGlacierClient client;\nDeleting an Archive Using Java API Version 2012-06-01 180",
      "start_idx": 320397,
      "end_idx": 322468,
      "metadata": {
        "num_sentences": 21,
        "num_words": 341,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "delete archive",
            "vault inventory",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "DeleteArchiveRequest",
            "archive ID",
            "vault name",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "DeleteArchiveRequest",
            "Java API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to handle archive deletions in Amazon S3 Glacier, including potential outcomes for archive retrieval jobs and a step-by-step guide using the AWS SDK for Java.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What happens to archive retrieval jobs after deleting an archive in Amazon S3 Glacier?",
            "How can I delete an archive using the AWS SDK for Java?",
            "Why might a deleted archive still appear in the vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AmazonGlacierClient",
          "archive retrieval",
          "Java API Version 2012-06-01",
          "vault name",
          "vault inventory",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "account ID",
          "delete archive",
          "archive ID",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_190",
      "text": "Amazon S3 Glacier Developer Guide\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n.withVaultName(\"*** provide a vault name ***\")\n.withArchiveId(\"*** provide an archive ID ***\");\nclient.deleteArchive(request);\nNote\nFor information about the underlying REST API, see Delete Archive (DELETE archive).\nExample: Deleting an Archive Using the AWS SDK for Java\nThe following Java code example uses the AWS SDK for Java to delete an archive. For step-by-step\ninstructions on how to run this example, see Running Java Examples for Amazon S3 Glacier Using\nEclipse. You need to update the code as shown with a vault name and the archive ID of the archive\nyou want to delete.\nExample\nimport java.io.IOException;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.glacier.AmazonGlacierClient;\nimport com.amazonaws.services.glacier.model.DeleteArchiveRequest;\npublic class ArchiveDelete {\npublic static String vaultName = \"*** provide vault name ****\";\npublic static String archiveId = \"*** provide archive ID***\";\npublic static AmazonGlacierClient client;\npublic static void main(String[] args) throws IOException {\nProfileCredentialsProvider credentials = new ProfileCredentialsProvider();\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-east-1.amazonaws.com/\");\ntry {\nDeleting an Archive Using Java API Version 2012-06-01 181",
      "start_idx": 322470,
      "end_idx": 323873,
      "metadata": {
        "num_sentences": 5,
        "num_words": 168,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "AWS SDK for Java",
            "vault name",
            "archive ID",
            "REST API",
            "ProfileCredentialsProvider",
            "AmazonGlacierClient",
            "delete archive",
            "endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteArchiveRequest",
            "AmazonGlacierClient",
            "ProfileCredentialsProvider"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java code example for deleting an archive in Amazon S3 Glacier using the AWS SDK for Java, including setup instructions and references to the REST API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using Java?",
            "What is the Java code example for DeleteArchiveRequest in AWS SDK?",
            "How do I configure an endpoint for Amazon S3 Glacier in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault name",
          "REST API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "ProfileCredentialsProvider",
          "delete archive",
          "AmazonGlacierClient",
          "archive ID",
          "endpoint",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_191",
      "text": "Amazon S3 Glacier Developer Guide\n// Delete the archive.\nclient.deleteArchive(new DeleteArchiveRequest()\n.withVaultName(vaultName)\n.withArchiveId(archiveId));\nSystem.out.println(\"Deleted archive successfully.\");\n} catch (Exception e) {\nSystem.err.println(\"Archive not deleted.\");\nSystem.err.println(e);\n}\n}\n}\nDeleting an Archive in Amazon S3 Glacier Using the AWS SDK for .NET\nBoth the high-level and low-level APIs provided by the Amazon SDK for .NET provide a method to\ndelete an archive.\nTopics\n\u2022 Deleting an Archive Using the High-Level API of the AWS SDK for .NET\n\u2022 Deleting an Archive Using the Low-Level API AWS SDK for .NET\nDeleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe ArchiveTransferManager class of the high-level API provides the DeleteArchive method\nyou can use to delete an archive.\nExample: Deleting an Archive Using the High-Level API of the AWS SDK for .NET\nThe following C# code example uses the high-level API of the AWS SDK for .NET to delete an\narchive. For step-by-step instructions on how to run this example, see Running Code Examples. You\nneed to update the code as shown with the archive ID of the archive you want to delete.\nExample\nusing System;\nusing Amazon.Glacier;\nDeleting an Archive Using .NET API Version 2012-06-01 182",
      "start_idx": 323875,
      "end_idx": 325155,
      "metadata": {
        "num_sentences": 9,
        "num_words": 198,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "delete archive",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "DeleteArchive",
            "high-level API",
            "low-level API",
            "C#",
            "vaultName",
            "archiveId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "DeleteArchive",
            "C#"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Usage",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using both high-level and low-level APIs of the AWS SDK for .NET, including a code example in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the difference between high-level and low-level APIs in AWS SDK for .NET?",
            "Can you provide a C# code example for deleting an archive in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "C#",
          "vaultName",
          "archiveId",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "high-level API",
          "delete archive",
          "low-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_192",
      "text": "Amazon S3 Glacier Developer Guide\nusing Amazon.Glacier.Transfer;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteHighLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nmanager.DeleteArchive(vaultName, archiveId);\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\n}\n}\nDeleting an Archive Using the Low-Level API AWS SDK for .NET\nThe following are the steps to delete an using the AWS SDK for .NET.\n1. Create an instance of the AmazonGlacierClient class (the client).\nYou need to specify an AWS Region where the archive you want to delete is stored. All\noperations you perform using this client apply to that AWS Region.\n2. Provide request information by creating an instance of the DeleteArchiveRequest class.\nYou need to provide an archive ID, a vault name, and your account ID. If you don't provide an\naccount ID, then account ID associated with the credentials you provide to sign the request is\nassumed. For more information, see Using the AWS SDKs with Amazon S3 Glacier.\n3. Run the DeleteArchive method by providing the request object as a parameter.\nDeleting an Archive Using .NET API Version 2012-06-01 183",
      "start_idx": 325157,
      "end_idx": 326707,
      "metadata": {
        "num_sentences": 13,
        "num_words": 217,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "DeleteArchive",
            "vaultName",
            "archiveId",
            "AmazonGlacierClient",
            "DeleteArchiveRequest",
            "AWS SDK for .NET",
            "RegionEndpoint",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "DeleteArchiveRequest",
            "RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the AWS SDK for .NET, with step-by-step instructions and code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using .NET?",
            "What are the steps to use the AWS SDK for .NET to manage Glacier archives?",
            "What is the purpose of the DeleteArchiveRequest class in AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "RegionEndpoint",
          "archiveId",
          "vaultName",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "account ID",
          "RegionEndpoint.USWest2",
          "AmazonGlacierClient",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_193",
      "text": "Amazon S3 Glacier Developer Guide\nExample: Deleting an Archive Using the Low-Level API of the AWS SDK for .NET\nThe following C# example illustrates the preceding steps. The example uses the low-level API of\nthe AWS SDK for .NET to delete an archive.\nNote\nFor information about the underlying REST API, see Delete Archive (DELETE archive).\nFor step-by-step instructions on how to run this example, see Running Code Examples. You need to\nupdate the code as shown with the archive ID of the archive you want to delete.\nExample\nusing System;\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nusing Amazon.Runtime;\nnamespace glacier.amazon.com.docsamples\n{\nclass ArchiveDeleteLowLevel\n{\nstatic string vaultName = \"examplevault\";\nstatic string archiveId = \"*** Provide archive ID ***\";\npublic static void Main(string[] args)\n{\nAmazonGlacierClient client;\ntry\n{\nusing (client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2))\n{\nConsole.WriteLine(\"Deleting the archive\");\nDeleteAnArchive(client);\n}\nConsole.WriteLine(\"Operations successful. To continue, press Enter\");\nConsole.ReadKey();\n}\ncatch (AmazonGlacierException e) { Console.WriteLine(e.Message); }\ncatch (AmazonServiceException e) { Console.WriteLine(e.Message); }\nDeleting an Archive Using .NET API Version 2012-06-01 184",
      "start_idx": 326709,
      "end_idx": 327990,
      "metadata": {
        "num_sentences": 7,
        "num_words": 167,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Code"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "archive deletion",
            "low-level API",
            "C#",
            "REST API",
            "AmazonGlacierClient",
            "vaultName",
            "archiveId",
            "Amazon.RegionEndpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Delete Archive",
            "AmazonGlacierClient",
            "Amazon.RegionEndpoint.USWest2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Programming Languages"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to delete an archive from Amazon S3 Glacier using the low-level API of the AWS SDK for .NET in C#.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive using AWS SDK for .NET?",
            "What is the low-level API example for Amazon S3 Glacier in C#?",
            "What are the steps to delete an archive in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Delete Archive",
          "archive deletion",
          "REST API",
          "C#",
          "vaultName",
          "archiveId",
          "Amazon S3 Glacier",
          "Amazon.RegionEndpoint.USWest2",
          "AmazonGlacierClient",
          "low-level API",
          "Amazon.RegionEndpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_194",
      "text": "Amazon S3 Glacier Developer Guide\ncatch (Exception e) { Console.WriteLine(e.Message); }\nConsole.WriteLine(\"To continue, press Enter\");\nConsole.ReadKey();\n}\nstatic void DeleteAnArchive(AmazonGlacierClient client)\n{\nDeleteArchiveRequest request = new DeleteArchiveRequest()\n{\nVaultName = vaultName,\nArchiveId = archiveId\n};\nDeleteArchiveResponse response = client.DeleteArchive(request);\n}\n}\n}\nDeleting an Amazon S3 Glacier Archive Using the REST API\nYou can use the Delete Archive API to delete an archive.\n\u2022 For information about the Delete Archive API, see Delete Archive (DELETE archive).\n\u2022 For information about using the REST API, see API Reference for Amazon S3 Glacier.\nDeleting an Archive in Amazon S3 Glacier Using the AWS Command\nLine Interface\nYou can delete archives in Amazon S3 Glacier (S3 Glacier) using the AWS Command Line Interface\n(AWS CLI).\nTopics\n\u2022 (Prerequisite) Setting Up the AWS CLI\n\u2022 Example: Deleting an Archive Using the AWS CLI\n(Prerequisite) Setting Up the AWS CLI\n1. Download and configure the AWS CLI. For instructions, see the following topics in the AWS\nCommand Line Interface User Guide:\nDeleting an Archive Using REST API Version 2012-06-01 185",
      "start_idx": 327992,
      "end_idx": 329171,
      "metadata": {
        "num_sentences": 7,
        "num_words": 175,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "CLI Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Delete Archive API",
            "AWS CLI",
            "REST API",
            "DeleteArchiveRequest",
            "DeleteArchiveResponse",
            "vaultName",
            "archiveId",
            "AmazonGlacierClient",
            "2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Delete Archive API",
            "DeleteArchiveRequest",
            "DeleteArchiveResponse"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Integration",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "REST API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the Delete Archive API, REST API, and AWS CLI, providing code examples and setup instructions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using the AWS CLI?",
            "What is the Delete Archive API and how is it used?",
            "What are the prerequisites for setting up the AWS CLI to manage S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CLI",
          "DeleteArchiveResponse",
          "REST API",
          "archiveId",
          "vaultName",
          "Amazon S3 Glacier",
          "2012-06-01",
          "Delete Archive API",
          "AmazonGlacierClient",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_195",
      "text": "Amazon S3 Glacier Developer Guide\nInstalling the AWS Command Line Interface\nConfiguring the AWS Command Line Interface\n2. Verify your AWS CLI setup by entering the following commands at the command prompt.\nThese commands don't provide credentials explicitly, so the credentials of the default profile\nare used.\n\u2022 Try using the help command.\naws help\n\u2022 To get a list of S3 Glacier vaults on the configured account, use the list-vaults\ncommand. Replace 123456789012 with your AWS account ID.\naws glacier list-vaults --account-id 123456789012\n\u2022 To see the current configuration data for the AWS CLI, use the aws configure list\ncommand.\naws configure list\nExample: Deleting an Archive Using the AWS CLI\n1. Use the initiate-job command to start an inventory retrieval job.\naws glacier initiate-job --vault-name awsexamplevault --account-id 111122223333 --\njob-parameters=\"{\\\"Type\\\":\\\"inventory-retrieval\\\"}\"\nExpected output:\n{\n\"location\": \"/111122223333/vaults/awsexamplevault/jobs/*** jobid ***\",\n\"jobId\": \"*** jobid ***\"\n}\n2. Use the describe-job command to check status of the previous retrieval job.\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 186",
      "start_idx": 329173,
      "end_idx": 330336,
      "metadata": {
        "num_sentences": 12,
        "num_words": 168,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Setup",
              "Command Usage",
              "Example Workflow"
            ]
          },
          "keywords": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "inventory retrieval",
            "job parameters",
            "describe-job",
            "list-vaults",
            "credentials",
            "account ID",
            "configuration"
          ],
          "entities": [
            "AWS CLI",
            "S3 Glacier",
            "vaults",
            "AWS account ID",
            "inventory retrieval"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Command Line Tools",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS CLI to manage Amazon S3 Glacier vaults and delete archives, including setup, configuration, and example commands for specific tasks.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure the AWS CLI for S3 Glacier?",
            "What commands can I use to list S3 Glacier vaults?",
            "How can I delete an archive using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "describe-job",
          "AWS CLI",
          "credentials",
          "vaults",
          "list-vaults",
          "configuration",
          "Amazon S3 Glacier",
          "account ID",
          "AWS account ID",
          "S3 Glacier",
          "job parameters"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_196",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier describe-job --vault-name awsexamplevault --account-id 111122223333 --\njob-id *** jobid ***\nExpected output:\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"*** vault arn ***\",\n\"Completed\": false,\n\"JobId\": \"*** jobid ***\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"*** job creation date ***\",\n\"StatusCode\": \"InProgress\"\n}\n3. Wait for the job to complete.\nYou must wait until the job output is ready for you to download. If you set a notification\nconfiguration on the vault or specified an Amazon Simple Notification Service (Amazon SNS)\ntopic when you initiated the job, S3 Glacier sends a message to the topic after it completes the\njob.\nYou can set notification configuration for specific events on the vault. For more information,\nsee Configuring Vault Notifications in Amazon S3 Glacier. S3 Glacier sends a message to the\nspecified SNS topic anytime the specific event occurs.\n4. When it's complete, use the get-job-output command to download the retrieval job to the file\noutput.json.\naws glacier get-job-output --vault-name awsexamplevault --account-id 111122223333\n--job-id *** jobid *** output.json\nThis command produces a file with the following fields.\n{\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 187",
      "start_idx": 330338,
      "end_idx": 331641,
      "metadata": {
        "num_sentences": 11,
        "num_words": 191,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "job output",
            "InventoryRetrieval",
            "SNS topic",
            "get-job-output",
            "describe-job",
            "retrieval job",
            "notification configuration",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SNS topic",
            "VaultARN",
            "InventoryRetrievalParameters"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS CLI commands to manage Amazon S3 Glacier retrieval jobs, including setting notifications and downloading job outputs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the AWS CLI to describe a job in Amazon S3 Glacier?",
            "What is the process for retrieving job output from Amazon S3 Glacier?",
            "How can I configure notifications for an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "describe-job",
          "AWS CLI",
          "Amazon SNS",
          "vault",
          "retrieval job",
          "get-job-output",
          "job output",
          "notification configuration",
          "VaultARN",
          "Amazon S3 Glacier",
          "InventoryRetrieval",
          "InventoryRetrievalParameters",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_197",
      "text": "Amazon S3 Glacier Developer Guide\n\"VaultARN\":\"arn:aws:glacier:region:111122223333:vaults/awsexamplevault\",\n\"InventoryDate\":\"*** job completion date ***\",\n\"ArchiveList\":[\n{\"ArchiveId\":\"*** archiveid ***\",\n\"ArchiveDescription\":*** archive description (if set) ***,\n\"CreationDate\":\"*** archive creation date ***\",\n\"Size\":\"*** archive size (in bytes) ***\",\n\"SHA256TreeHash\":\"*** archive hash ***\"\n}\n{\"ArchiveId\":\n...\n]}\n5. Use the delete-archive command to delete each archive from a vault until none remain.\naws glacier delete-archive --vault-name awsexamplevault --account-id 111122223333\n--archive-id *** archiveid ***\nDeleting an Archive Using the AWS CLI API Version 2012-06-01 188",
      "start_idx": 331643,
      "end_idx": 332325,
      "metadata": {
        "num_sentences": 3,
        "num_words": 77,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "InventoryDate",
            "ArchiveList",
            "ArchiveId",
            "CreationDate",
            "SHA256TreeHash",
            "delete-archive",
            "AWS CLI",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "AWS CLI",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide on managing archives in Amazon S3 Glacier, including deleting archives using the AWS CLI.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What is the structure of the ArchiveList in Amazon S3 Glacier?",
            "What command is used to delete an archive using the AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "SHA256TreeHash",
          "AWS CLI",
          "delete-archive",
          "VaultARN",
          "Amazon S3 Glacier",
          "ArchiveList",
          "InventoryDate",
          "API Version 2012-06-01",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_198",
      "text": "Amazon S3 Glacier Developer Guide\nUsing the AWS SDKs with Amazon S3 Glacier\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. The SDK libraries wrap\nthe underlying S3 Glacier API, simplifying your programming tasks. For example, for each request\nsent to S3 Glacier, you must include a signature to authenticate your requests. When you use the\nSDK libraries, you need to provide only your AWS security credentials in your code and the libraries\ncompute the necessary signature and include it in the request sent to S3 Glacier. The AWS SDKs\nprovide libraries that map to the underlying REST API and provide objects that you can use to\neasily construct requests and process responses.\nTopics\n\u2022 AWS SDK Libraries for Java and .NET\n\u2022 Using S3 Glacier with an AWS SDK\n\u2022 Using the AWS SDK for Java with Amazon S3 Glacier\n\u2022 Using the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS Command Line Interface (AWS CLI) is a unified tool to manage your AWS services,\nincluding S3 Glacier. For information about downloading the AWS CLI, see AWS Command Line\nInterface. For a list of the S3 Glacier CLI commands, see the AWS CLI Command Reference.\nAWS SDK Libraries for Java and .NET\nThe AWS SDKs for Java and .NET offer high-level and low-level wrapper libraries.\nYou can find examples of working with Amazon S3 Glacier by using the AWS SDK for Java and the\nAWS SDK for .NET throughout this developer guide.\nWhat Is the Low-Level API?\nThe low-level wrapper libraries map closely the underlying REST API (API Reference for Amazon\nS3 Glacier) supported by S3 Glacier. For each S3 Glacier REST operations, the low-level API\nprovides a corresponding method, a request object for you to provide request information and\na response object for you to process S3 Glacier response. The low-level wrapper libraries are the\nmost complete implementation of the underlying S3 Glacier operations.\nFor information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier.\nAWS SDK Libraries for Java and .NET API Version 2012-06-01 189",
      "start_idx": 332327,
      "end_idx": 334432,
      "metadata": {
        "num_sentences": 16,
        "num_words": 361,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Overview",
              "Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "REST API",
            "AWS CLI",
            "Low-Level API",
            "Java SDK",
            "NET SDK",
            "Request Signature",
            "High-Level Libraries",
            "Response Object"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "SDK Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the usage of AWS SDKs and AWS CLI to interact with Amazon S3 Glacier, including details on high-level and low-level APIs for Java and .NET SDKs. It highlights the role of SDK libraries in simplifying REST API interactions and request authentication.",
          "intents": [
            "Reference",
            "How-To",
            "Compare"
          ],
          "potential_questions": [
            "How do AWS SDKs simplify interaction with Amazon S3 Glacier?",
            "What is the difference between high-level and low-level APIs in AWS SDKs?",
            "What tools are available to manage Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "AWS SDK for .NET",
          "AWS CLI",
          "Request Signature",
          "REST API",
          "Response Object",
          "Low-Level API",
          "Java SDK",
          "NET SDK",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "API Version 2012-06-01",
          "High-Level Libraries"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_199",
      "text": "Amazon S3 Glacier Developer Guide\nWhat Is the High-Level API?\nTo further simplify application development, these libraries offer a higher-level abstraction for\nsome of the operations. For example:\n\u2022 Uploading an archive\u2014To upload an archive using the low-level API in addition to the file\nname and the vault name where you want to save the archive, You need to provide a checksum\n(SHA-256 tree hash) of the payload. However, the high-level API computes the checksum for you.\n\u2022 Downloading an archive or vault inventory\u2014To download an archive using the low-level API\nyou first initiate a job, wait for the job to complete, and then get the job output. You need to\nwrite additional code to set up an Amazon Simple Notification Service (Amazon SNS) topic for S3\nGlacier to notify you when the job is complete. You also need some polling mechanism to check\nif a job completion message was posted to the topic. The high-level API provides a method to\ndownload an archive that takes care of all these steps. You only specify an archive ID and a folder\npath where you want to save the downloaded data.\nFor information about these SDK libraries, see Using the AWS SDK for Java with Amazon S3 Glacier\nand Using the AWS SDK for .NET with Amazon S3 Glacier.\nWhen to Use the High-Level and Low-Level API\nIn general, if the high-level API provides methods you need to perform an operation, you should\nuse the high-level API because of the simplicity it provides. However, if the high-level API does\nnot offer the functionality, you can use the low-level API. Additionally, the low-level API allows\ngranular control of the operation such as retry logic in the event of a failure. For example, when\nuploading an archive the high-level API uses the file size to determine whether to upload the\narchive in a single operation or use the multipart upload API. The API also has built-in retry logic in\ncase an upload fails. However, your application might need granular control over these decisions, in\nwhich case you can use the low-level API.\nUsing S3 Glacier with an AWS SDK\nAWS software development kits (SDKs) are available for many popular programming languages.\nEach SDK provides an API, code examples, and documentation that make it easier for developers to\nbuild applications in their preferred language.\nWhat Is the High-Level API? API Version 2012-06-01 190",
      "start_idx": 334434,
      "end_idx": 336782,
      "metadata": {
        "num_sentences": 20,
        "num_words": 398,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "High-Level API",
            "Low-Level API",
            "Amazon S3 Glacier",
            "SDK libraries",
            "checksum",
            "multipart upload",
            "retry logic",
            "archive ID",
            "AWS SDK",
            "Amazon SNS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "Amazon SNS",
            "SHA-256 tree hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the differences between the high-level and low-level APIs for Amazon S3 Glacier, highlighting their use cases and functionalities for application development. It also introduces AWS SDKs for simplifying development tasks.",
          "intents": [
            "How-To",
            "Compare",
            "Reference"
          ],
          "potential_questions": [
            "What are the benefits of using the high-level API in Amazon S3 Glacier?",
            "How does the low-level API provide granular control for archive uploads?",
            "What SDKs can be used with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Amazon SNS",
          "SHA-256 tree hash",
          "multipart upload",
          "retry logic",
          "High-Level API",
          "Low-Level API",
          "checksum",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AWS SDK",
          "archive ID",
          "SDK libraries"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_201",
      "text": "Amazon S3 Glacier Developer Guide\nUsing the AWS SDK for Java with Amazon S3 Glacier\nThe AWS SDK for Java provides both high-level and low-level APIs for Amazon S3 Glacier (S3\nGlacier) as described in Using the AWS SDKs with Amazon S3 Glacier. For information about\ndownloading the AWS SDK for Java, see Amazon SDK for Java.\nNote\nThe AWS SDK for Java provides thread-safe clients for accessing S3 Glacier. As a best\npractice, your applications should create one client and reuse the client between threads.\nTopics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\n\u2022 Running Java Examples for Amazon S3 Glacier Using Eclipse\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of S3 Glacier ( API Reference for Amazon S3 Glacier). When calling any of these\nmethods, you must create a corresponding request object and provide a response object in which\nthe method can return the S3 Glacier response to the operation.\nFor example, the AmazonGlacierClient class provides the createVault method to create a\nvault. This method maps to the underlying Create Vault REST operation (see Create Vault (PUT\nvault)). To use this method, you must create instances of the CreateVaultResult object that\nreceives the S3 Glacier response as shown in the following Java code snippet:\nAmazonGlacierClient client = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"https://glacier.us-west-2.amazonaws.com/\");\nCreateVaultRequest request = new CreateVaultRequest()\n.withAccountId(\"-\")\n.withVaultName(vaultName);\nUsing the AWS SDK for Java API Version 2012-06-01 192",
      "start_idx": 337823,
      "end_idx": 339478,
      "metadata": {
        "num_sentences": 9,
        "num_words": 248,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult",
            "thread-safe clients",
            "REST operations",
            "endpoint",
            "vault",
            "credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AmazonGlacierClient",
            "CreateVaultRequest",
            "CreateVaultResult"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Eclipse"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to interact with Amazon S3 Glacier, including both high-level and low-level APIs, and provides example code for creating a vault using the low-level API.",
          "intents": [
            "How-To",
            "Reference",
            "Example"
          ],
          "potential_questions": [
            "How do I use the low-level API of AWS SDK for Java with Amazon S3 Glacier?",
            "What is the process for creating a vault in Amazon S3 Glacier using Java?",
            "What are the best practices for using thread-safe clients with AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "credentials",
          "CreateVaultResult",
          "vault",
          "thread-safe clients",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "AmazonGlacierClient",
          "REST operations",
          "endpoint",
          "CreateVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_202",
      "text": "Amazon S3 Glacier Developer Guide\nCreateVaultResult result = client.createVault(createVaultRequest);\nAll the low-level samples in the guide use this pattern.\nNote\nThe preceding code segment specifies AccountID when creating the request. However,\nwhen using the AWS SDK for Java, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request. You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor Java, if you don't provide the account ID, the library sets the account ID to '-'.\nUsing the High-Level API\nTo further simplify your application development, the AWS SDK for Java provides the\nArchiveTransferManager class that implements a higher-level abstraction for the some of\nthe methods in the low-level API. It provides useful methods, such as the upload and download\nmethods for archive operations.\nFor example, the following Java code snippet uses the upload high-level method to upload an\narchive.\nString vaultName = \"examplevault\";\nString archiveToUpload = \"c:/folder/exampleArchive.zip\";\nArchiveTransferManager atm = new ArchiveTransferManager(client, credentials);\nString archiveId = atm.upload(vaultName, \"Tax 2012 documents\", new\nFile(archiveToUpload)).getArchiveId();\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. If you don't specify any AWS Region, the AWS SDK for Java\nsets us-east-1 as the default AWS Region.\nAll the high-level examples in this guide use this pattern.\nUsing the High-Level API API Version 2012-06-01 193",
      "start_idx": 339480,
      "end_idx": 341387,
      "metadata": {
        "num_sentences": 15,
        "num_words": 288,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "SDK Usage",
              "API Interaction"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountID",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "upload method",
            "createVaultRequest",
            "AWS Region",
            "archive operations",
            "low-level API",
            "high-level API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "ArchiveTransferManager",
            "createVaultRequest",
            "us-east-1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Java to interact with Amazon S3 Glacier, including both low-level and high-level APIs for operations like creating vaults and uploading archives. It also highlights the optional use of AccountID and default region settings.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the AWS SDK for Java?",
            "What is the difference between the low-level and high-level APIs for S3 Glacier?",
            "How do I upload an archive using the ArchiveTransferManager in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "us-east-1",
          "ArchiveTransferManager",
          "upload method",
          "archive operations",
          "AWS Region",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "createVaultRequest",
          "AccountID",
          "high-level API",
          "low-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_203",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nThe high-level ArchiveTransferManager class can be constructed with an\nAmazonGlacierClient instance or an AWSCredentials instance.\nRunning Java Examples for Amazon S3 Glacier Using Eclipse\nThe easiest way to get started with the Java code examples is to install the latest AWS Toolkit\nfor Eclipse. For information on installing or updating to the latest toolkit, go to http://\naws.amazon.com/eclipse. The following tasks guide you through the creation and testing of the\nJava code examples provided in this section.\nGeneral Process of Creating Java Code Examples\n1 Create a default credentials profile for your AWS credentials as described in the AWS\nSDK for Java topic Providing AWS Credentials in the Amazon SDK for Java.\n2 Create a new AWS Java project in Eclipse. The project is pre-configured with the AWS\nSDK for Java.\n3 Copy the code from the section you are reading to your project.\n4 Update the code by providing any required data. For example, if uploading a file,\nprovide the file path and the bucket name.\n5 Run the code. Verify that the object is created by using the AWS Management\nConsole. For more information about the AWS Management Console, go to http://a\nws.amazon.com/console/.\nSetting the Endpoint\nBy default, the AWS SDK for Java uses the endpoint https://glacier.us-\neast-1.amazonaws.com. You can set the endpoint explicitly as shown in the following Java code\nsnippets.\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API.\nRunning Java Examples Using Eclipse API Version 2012-06-01 194",
      "start_idx": 341389,
      "end_idx": 343003,
      "metadata": {
        "num_sentences": 17,
        "num_words": 260,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference",
              "Warning"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "AWSCredentials",
            "AWS Toolkit for Eclipse",
            "credentials profile",
            "endpoint",
            "AWS SDK for Java",
            "us-west-2",
            "Java code examples"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Toolkit for Eclipse",
            "AmazonGlacierClient",
            "AWS Management Console",
            "AWS SDK for Java"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS Toolkit for Eclipse",
            "AWS SDK for Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set up and run Java code examples for Amazon S3 Glacier using Eclipse, including configuring credentials and endpoints.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure AWS credentials for Amazon S3 Glacier in Java?",
            "What is the process for running Amazon S3 Glacier Java examples in Eclipse?",
            "How can I explicitly set the endpoint in the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWSCredentials",
          "ArchiveTransferManager",
          "credentials profile",
          "AWS Management Console",
          "AWS Toolkit for Eclipse",
          "us-west-2",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "Java code examples",
          "AmazonGlacierClient",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_204",
      "text": "Amazon S3 Glacier Developer Guide\nExample\nclient = new AmazonGlacierClient(credentials);\nclient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API.\nglacierClient = new AmazonGlacierClient(credentials);\nsqsClient = new AmazonSQSClient(credentials);\nsnsClient = new AmazonSNSClient(credentials);\nglacierClient.setEndpoint(\"glacier.us-west-2.amazonaws.com\");\nsqsClient.setEndpoint(\"sqs.us-west-2.amazonaws.com\");\nsnsClient.setEndpoint(\"sns.us-west-2.amazonaws.com\");\nArchiveTransferManager atm = new ArchiveTransferManager(glacierClient, sqsClient,\nsnsClient);\nFor a list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier.\nUsing the AWS SDK for .NET with Amazon S3 Glacier\nThe AWS SDK for .NET API is available in AWSSDK.dll. For information about downloading the\nAWS SDK for .NET, go to Sample Code Libraries. As described in Using the AWS SDKs with Amazon\nS3 Glacier, the AWS SDK for .NET provides both the high-level and low-level APIs.\nNote\nThe low-level API and high-level API provide thread-safe clients for accessing S3 Glacier.\nAs a best practice, your applications should create one client and reuse the client between\nthreads.\nTopics\n\u2022 Using the Low-Level API\n\u2022 Using the High-Level API\nUsing the AWS SDK for .NET API Version 2012-06-01 195",
      "start_idx": 343005,
      "end_idx": 344377,
      "metadata": {
        "num_sentences": 8,
        "num_words": 175,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "high-level API",
            "low-level API",
            "thread-safe clients",
            "endpoints",
            "credentials",
            "AmazonGlacierClient",
            "AWSSDK.dll"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "AmazonSQSClient",
            "AmazonSNSClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SQS",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWSSDK.dll"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to interact with Amazon S3 Glacier, including setting endpoints and creating thread-safe clients for high-level and low-level APIs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set the endpoint for Amazon S3 Glacier in the AWS SDK for .NET?",
            "What are the best practices for creating thread-safe clients with S3 Glacier?",
            "What tools and APIs are available for interacting with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Amazon SQS",
          "Amazon SNS",
          "ArchiveTransferManager",
          "credentials",
          "AmazonSNSClient",
          "AWSSDK.dll",
          "thread-safe clients",
          "endpoints",
          "Amazon S3 Glacier",
          "AmazonSQSClient",
          "high-level API",
          "AmazonGlacierClient",
          "low-level API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_205",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Running Code Examples\n\u2022 Setting the Endpoint\nUsing the Low-Level API\nThe low-level AmazonGlacierClient class provides all the methods that map to the underlying\nREST operations of Amazon S3 Glacier (S3 Glacier) ( API Reference for Amazon S3 Glacier). When\ncalling any of these methods, you must create a corresponding request object and provide a\nresponse object in which the method can return a S3 Glacier response to the operation.\nFor example, the AmazonGlacierClient class provides the CreateVault method to create\na vault. This method maps to the underlying Create Vault REST operation (see Create Vault\n(PUT vault)). To use this method, you must create instances of the CreateVaultRequest and\nCreateVaultResponse classes to provide request information and receive a S3 Glacier response\nas shown in the following C# code snippet:\nAmazonGlacierClient client;\nclient = new AmazonGlacierClient(Amazon.RegionEndpoint.USEast1);\nCreateVaultRequest request = new CreateVaultRequest()\n{\nAccountId = \"-\",\nVaultName = \"*** Provide vault name ***\"\n};\nCreateVaultResponse response = client.CreateVault(request);\nAll the low-level samples in the guide use this pattern.\nNote\nThe preceding code segment specifies AccountId when creating the request. However,\nwhen using the AWS SDK for .NET, the AccountId in the request is optional, and therefore\nall the low-level examples in this guide don't set this value. The AccountId is the AWS\naccount ID. This value must match the AWS account ID associated with the credentials used\nto sign the request. You can specify either the AWS account ID or optionally a '-', in which\ncase S3 Glacier uses the AWS account ID associated with the credentials used to sign the\nUsing the Low-Level API API Version 2012-06-01 196",
      "start_idx": 344379,
      "end_idx": 346164,
      "metadata": {
        "num_sentences": 10,
        "num_words": 274,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Request/Response Pattern"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVault",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "AWS SDK for .NET",
            "AccountId",
            "REST operations",
            "Vault",
            "Endpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "CreateVault",
            "AWS SDK for .NET",
            "AccountId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Development",
            "Low-Level API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to use the low-level AmazonGlacierClient class to interact with S3 Glacier services, including a code example for creating a vault using the CreateVault method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using the low-level API?",
            "What is the role of AccountId in S3 Glacier requests?",
            "What classes are required to use the CreateVault method in AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "Vault",
          "CreateVaultResponse",
          "Amazon S3 Glacier",
          "AccountId",
          "CreateVault",
          "AmazonGlacierClient",
          "REST operations",
          "Endpoint",
          "CreateVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_206",
      "text": "Amazon S3 Glacier Developer Guide\nrequest. If you specify your Account ID, do not include hyphens in it. When using AWS SDK\nfor .NET, if you don't provide the account ID, the library sets the account ID to '-'.\nUsing the High-Level API\nTo further simplify your application development, the AWS SDK for .NET provides the\nArchiveTransferManager class that implements a higher-level abstraction for some of the\nmethods in the low-level API. It provides useful methods, such as Upload and Download, for the\narchive operations.\nFor example, the following C# code snippet uses the Upload high-level method to upload an\narchive.\nstring vaultName = \"examplevault\";\nstring archiveToUpload = \"c:\\folder\\exampleArchive.zip\";\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USEast1);\nstring archiveId = manager.Upload(vaultName, \"archive description\",\narchiveToUpload).ArchiveId;\nNote that any operations you perform apply to the AWS Region you specified when creating the\nArchiveTransferManager object. All the high-level examples in this guide use this pattern.\nNote\nThe high-level ArchiveTransferManager class still needs the low-level\nAmazonGlacierClient client, which you can pass either explicitly or the\nArchiveTransferManager creates the client.\nRunning Code Examples\nThe easiest way to get started with the .NET code examples is to install the AWS SDK for .NET. For\nmore information, go to Amazon SDK for .NET.\nThe following procedure outlines steps for you to test the code examples provided in this guide.\nUsing the High-Level API API Version 2012-06-01 197",
      "start_idx": 346166,
      "end_idx": 347737,
      "metadata": {
        "num_sentences": 13,
        "num_words": 227,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "Amazon S3 Glacier",
            "Upload",
            "Download",
            "archive operations",
            "AmazonGlacierClient",
            "vaultName",
            "RegionEndpoint",
            "API Version 2012-06-01"
          ],
          "entities": [
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "Amazon S3 Glacier",
            "AmazonGlacierClient",
            "RegionEndpoint.USEast1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Development",
            ".NET Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "ArchiveTransferManager"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for .NET's high-level ArchiveTransferManager class for managing Amazon S3 Glacier archive operations, including uploading archives with example code.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I upload an archive to Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the purpose of the ArchiveTransferManager class?",
            "Which AWS Region does the ArchiveTransferManager operate in?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "API Version 2012-06-01",
          "Download",
          "RegionEndpoint",
          "Upload",
          "archive operations",
          "vaultName",
          "Amazon S3 Glacier",
          "RegionEndpoint.USEast1",
          "AmazonGlacierClient"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_207",
      "text": "Amazon S3 Glacier Developer Guide\nGeneral Process of Creating .NET Code Examples (Using Visual Studio)\n1 Create a credentials profile for your AWS credentials as described in the Amazon SDK\nfor .NET topic Configuring AWS Credentials.\n2 Create a new Visual Studio project using the AWS Empty Project template.\n3 Replace the code in the project file, Program.cs , with the code in the section you\nare reading.\n4 Run the code. Verify that the object is created using the AWS Management Console.\nFor more information about AWS Management Console, go to http://aws.amazon\n.com/console/.\nSetting the Endpoint\nBy default, the AWS SDK for .NET sets the endpoint to the US West (Oregon) Region (https://\nglacier.us-west-2.amazonaws.com). You can set the endpoint to other AWS Regions as\nshown in the following C# snippets.\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region (us-\nwest-2) in the low-level API.\nExample\nAmazonGlacierClient client = new AmazonGlacierClient(Amazon.RegionEndpoint.USWest2);\nThe following snippet shows how to set the endpoint to the US West (Oregon) Region in the high-\nlevel API.\nvar manager = new ArchiveTransferManager(Amazon.RegionEndpoint.USWest2);\nFor a current list of supported AWS Regions and endpoints, see Accessing Amazon S3 Glacier.\nSetting the Endpoint API Version 2012-06-01 198",
      "start_idx": 347739,
      "end_idx": 349083,
      "metadata": {
        "num_sentences": 12,
        "num_words": 205,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Visual Studio",
            "endpoint",
            "US West (Oregon)",
            "credentials profile",
            "ArchiveTransferManager",
            "AmazonGlacierClient",
            "AWS Management Console",
            "RegionEndpoint"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AmazonGlacierClient",
            "ArchiveTransferManager",
            "US West (Oregon) Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "Visual Studio",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create .NET code examples for Amazon S3 Glacier using Visual Studio, including setting AWS credentials and endpoints for specific regions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up AWS credentials in a .NET project?",
            "What is the process for creating a Visual Studio project using AWS SDK for .NET?",
            "How do I set the endpoint for Amazon S3 Glacier in different APIs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "US West (Oregon) Region",
          "credentials profile",
          "AWS Management Console",
          "RegionEndpoint",
          "US West (Oregon)",
          "Amazon S3 Glacier",
          "Visual Studio",
          "AmazonGlacierClient",
          "endpoint"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_208",
      "text": "Amazon S3 Glacier Developer Guide\nCode examples for S3 Glacier using AWS SDKs\nThe following code examples show how to use S3 Glacier with an AWS software development kit\n(SDK).\nBasics are code examples that show you how to perform the essential operations within a service.\nActions are code excerpts from larger programs and must be run in context. While actions show you\nhow to call individual service functions, you can see actions in context in their related scenarios.\nScenarios are code examples that show you how to accomplish specific tasks by calling multiple\nfunctions within a service or combined with other AWS services.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nGet started\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nAPI Version 2012-06-01 199",
      "start_idx": 349085,
      "end_idx": 350318,
      "metadata": {
        "num_sentences": 11,
        "num_words": 200,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Getting Started"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "code examples",
            "service functions",
            "scenarios",
            "API Version",
            "AWS Code Examples Repository",
            ".NET",
            "Amazon.Glacier",
            "GlacierActions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "AWS Code Examples Repository",
            ".NET",
            "Amazon.Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            ".NET",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides code examples for using Amazon S3 Glacier with AWS SDKs, focusing on essential operations, individual actions, and specific scenarios, including a .NET example.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I get started with Amazon S3 Glacier using .NET?",
            "What are the basic operations I can perform with Amazon S3 Glacier?",
            "Where can I find more AWS SDK code examples for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version",
          "AWS Code Examples Repository",
          "Amazon.Glacier",
          "code examples",
          "scenarios",
          "Amazon S3 Glacier",
          "GlacierActions",
          "service functions",
          ".NET",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_211",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nHello Amazon S3 Glacier\nThe following code example shows how to get started using Amazon S3 Glacier.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nusing Amazon.Glacier;\nusing Amazon.Glacier.Model;\nnamespace GlacierActions;\npublic static class HelloGlacier\n{\nstatic async Task Main()\n{\nvar glacierService = new AmazonGlacierClient();\nConsole.WriteLine(\"Hello Amazon Glacier!\");\nConsole.WriteLine(\"Let's list your Glacier vaults:\");\n// You can use await and any of the async methods to get a response.\n// Let's get the vaults using a paginator.\nvar glacierVaultPaginator = glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nConsole.WriteLine($\"{vault.CreationDate}:{vault.VaultName}, ARN:\n{vault.VaultARN}\");\nHello Amazon S3 Glacier API Version 2012-06-01 202",
      "start_idx": 352947,
      "end_idx": 354024,
      "metadata": {
        "num_sentences": 7,
        "num_words": 149,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "CodeSnippet",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadArchive",
            "UploadMultipartPart",
            "AWS SDK",
            "AWS CLI",
            "ListVaults",
            "VaultARN",
            "Paginator",
            "Glacier vaults",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "Amazon.Glacier",
            "VaultARN",
            "ListVaultsRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to interact with Amazon S3 Glacier, including listing vaults and accessing their details programmatically.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier using the AWS SDK for .NET?",
            "What is the API version used for Amazon S3 Glacier?",
            "How do I use a paginator to retrieve Glacier vaults?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS SDK for .NET",
          "AWS CLI",
          "Paginator",
          "API Version 2012-06-01",
          "ListVaults",
          "Amazon.Glacier",
          "Glacier vaults",
          "VaultARN",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "AWS SDK",
          "UploadMultipartPart"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_212",
      "text": "Amazon S3 Glacier Developer Guide\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions for S3 Glacier using AWS SDKs\nThe following code examples demonstrate how to perform individual S3 Glacier actions with AWS\nSDKs. Each example includes a link to GitHub, where you can find instructions for setting up and\nrunning the code.\nThese excerpts call the S3 Glacier API and are code excerpts from larger programs that must be run\nin context. You can see actions in context in Scenarios for S3 Glacier using AWS SDKs .\nThe following examples include only the most commonly used actions. For a complete list, see the\nAmazon S3 Glacier API Reference.\nExamples\n\u2022 Use AddTagsToVault with an AWS SDK or CLI\n\u2022 Use CreateVault with an AWS SDK or CLI\n\u2022 Use DeleteArchive with an AWS SDK or CLI\n\u2022 Use DeleteVault with an AWS SDK or CLI\n\u2022 Use DeleteVaultNotifications with an AWS SDK or CLI\n\u2022 Use DescribeJob with an AWS SDK or CLI\n\u2022 Use DescribeVault with an AWS SDK or CLI\n\u2022 Use GetJobOutput with an AWS SDK or CLI\n\u2022 Use GetVaultNotifications with an AWS SDK or CLI\n\u2022 Use InitiateJob with an AWS SDK or CLI\n\u2022 Use ListJobs with an AWS SDK or CLI\n\u2022 Use ListTagsForVault with an AWS SDK or CLI\nActions API Version 2012-06-01 203",
      "start_idx": 354026,
      "end_idx": 355472,
      "metadata": {
        "num_sentences": 10,
        "num_words": 266,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Examples",
              "Conceptual"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS SDK",
            "API Reference",
            "ListVaults",
            "CreateVault",
            "DeleteArchive",
            "DescribeVault",
            "InitiateJob",
            "GetJobOutput",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "GitHub",
            "ListVaults",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides API references, code examples, and usage details for performing actions on Amazon S3 Glacier using AWS SDKs and CLI. It includes links to GitHub for setup and running instructions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I perform specific actions on S3 Glacier using AWS SDK?",
            "What are the most commonly used S3 Glacier API actions?",
            "Where can I find code examples for S3 Glacier API usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS CLI",
          "API Version 2012-06-01",
          "ListVaults",
          "GitHub",
          "InitiateJob",
          "API Reference",
          "DeleteArchive",
          "GetJobOutput",
          "DescribeVault",
          "Amazon S3 Glacier",
          "CreateVault",
          "AWS SDK",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_213",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Use ListVaults with an AWS SDK or CLI\n\u2022 Use SetVaultNotifications with an AWS SDK or CLI\n\u2022 Use UploadArchive with an AWS SDK or CLI\n\u2022 Use UploadMultipartPart with an AWS SDK or CLI\nUse AddTagsToVault with an AWS SDK or CLI\nThe following code examples show how to use AddTagsToVault.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Add tags to the items in an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to add tags to.</param>\n/// <param name=\"key\">The name of the object to tag.</param>\n/// <param name=\"value\">The tag value to add.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> AddTagsToVaultAsync(string vaultName, string key,\nstring value)\n{\nvar request = new AddTagsToVaultRequest\n{\nTags = new Dictionary<string, string>\n{\n{ key, value },\n},\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.AddTagsToVaultAsync(request);\nActions API Version 2012-06-01 204",
      "start_idx": 355474,
      "end_idx": 356626,
      "metadata": {
        "num_sentences": 5,
        "num_words": 183,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaults",
            "SetVaultNotifications",
            "UploadArchive",
            "UploadMultipartPart",
            "AddTagsToVault",
            "AWS SDK",
            "CLI",
            "AddTagsToVaultRequest",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AddTagsToVault",
            "AddTagsToVaultRequest",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS Development",
            "Tagging and Metadata"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the AWS SDK for .NET to add tags to a vault in Amazon S3 Glacier, including a code snippet and setup information.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Amazon S3 Glacier vault?",
            "What is an example of using AddTagsToVault with AWS SDK for .NET?",
            "Where can I find more code examples for AWS SDK operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS SDK for .NET",
          "AWS Code Examples Repository",
          "ListVaults",
          "Amazon S3 Glacier",
          "AddTagsToVaultRequest",
          "CLI",
          "SetVaultNotifications",
          "AWS SDK",
          "UploadMultipartPart",
          "AddTagsToVault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_214",
      "text": "Amazon S3 Glacier Developer Guide\nreturn response.HttpStatusCode == HttpStatusCode.NoContent;\n}\n\u2022 For API details, see AddTagsToVault in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command adds two tags to a vault named my-vault:\naws glacier add-tags-to-vault --account-id - --vault-name my-vault --\ntags id=1234,date=july2015\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see AddTagsToVault in AWS CLI Command Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse CreateVault with an AWS SDK or CLI\nThe following code examples show how to use CreateVault.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 205",
      "start_idx": 356628,
      "end_idx": 357708,
      "metadata": {
        "num_sentences": 8,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Usage",
              "Command",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AddTagsToVault",
            "AWS SDK",
            "AWS CLI",
            "CreateVault",
            "account ID",
            "tags",
            "vault",
            "API Reference",
            "job initiation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "AWS CLI",
            "AddTagsToVault",
            "CreateVault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Tagging",
            "AWS CLI Commands"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural details on adding tags to an Amazon S3 Glacier vault using AWS SDKs and CLI, and includes code examples for the CreateVault operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to an Amazon S3 Glacier vault?",
            "What is the syntax for the AWS CLI add-tags-to-vault command?",
            "How can I use the CreateVault operation in an AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "job initiation",
          "vault",
          "Amazon S3 Glacier",
          "API Reference",
          "account ID",
          "tags",
          "CreateVault",
          "AWS SDK",
          "AddTagsToVault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_215",
      "text": "Amazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Create an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to create.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<bool> CreateVaultAsync(string vaultName)\n{\nvar request = new CreateVaultRequest\n{\n// Setting the AccountId to \"-\" means that\n// the account associated with the current\n// account will be used.\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.CreateVaultAsync(request);\nConsole.WriteLine($\"Created {vaultName} at: {response.Location}\");\nreturn response.HttpStatusCode == HttpStatusCode.Created;\n}\n\u2022 For API details, see CreateVault in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command creates a new vault named my-vault:\nActions API Version 2012-06-01 206",
      "start_idx": 357710,
      "end_idx": 358723,
      "metadata": {
        "num_sentences": 6,
        "num_words": 146,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVaultAsync",
            "AWS SDK for .NET",
            "CreateVaultRequest",
            "vaultName",
            "AccountId",
            "HttpStatusCode",
            "AWS CLI",
            "API Reference",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "CreateVaultAsync",
            "AWS CLI",
            "CreateVaultRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on creating an Amazon S3 Glacier vault using AWS SDK for .NET and AWS CLI, including a code example and API details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using .NET?",
            "What is the purpose of the CreateVaultAsync method?",
            "What command can I use to create a vault with AWS CLI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS CLI",
          "GitHub",
          "CreateVaultAsync",
          "vaultName",
          "HttpStatusCode",
          "Amazon S3 Glacier",
          "AccountId",
          "API Reference",
          "CreateVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_216",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier create-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see CreateVault in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.CreateVaultResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class CreateVault {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName>\nWhere:\nvaultName - The name of the vault to create.\nActions API Version 2012-06-01 207",
      "start_idx": 358725,
      "end_idx": 359956,
      "metadata": {
        "num_sentences": 7,
        "num_words": 147,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVault",
            "AWS CLI",
            "Java SDK",
            "GlacierClient",
            "CreateVaultRequest",
            "CreateVaultResponse",
            "GlacierException",
            "AWS Code Examples Repository",
            "account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Java SDK",
            "GlacierClient",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Development",
            "AWS CLI Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Java SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on creating a vault in Amazon S3 Glacier using the AWS CLI and Java SDK, including code examples and setup guidance.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using AWS CLI?",
            "What is the Java SDK code for creating a vault in Amazon S3 Glacier?",
            "Where can I find more examples for working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "AWS Code Examples Repository",
          "GlacierClient",
          "CreateVaultResponse",
          "Java SDK",
          "Amazon S3 Glacier",
          "account ID",
          "GlacierException",
          "CreateVault",
          "CreateVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_218",
      "text": "Amazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate the client.\nconst { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region.\nconst REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nCreate the vault.\n// Load the SDK for JavaScript\nimport { CreateVaultCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\nconst params = { vaultName: vaultname };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new CreateVaultCommand(params));\nconsole.log(\"Success, vault created!\");\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error\");\n}\n};\nrun();\nActions API Version 2012-06-01 209",
      "start_idx": 360796,
      "end_idx": 361775,
      "metadata": {
        "num_sentences": 8,
        "num_words": 143,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "CreateVaultCommand",
            "AWS SDK",
            "vault",
            "AWS Region",
            "JavaScript",
            "command parameters",
            "unit tests",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "CreateVaultCommand",
            "AWS SDK for JavaScript",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Usage",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide to creating a vault in Amazon S3 Glacier using the AWS SDK for JavaScript (v3). It includes code examples and setup instructions for developers.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using JavaScript?",
            "What are the required parameters for the CreateVaultCommand?",
            "Where can I find complete examples for AWS SDK usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for JavaScript",
          "API Version 2012-06-01",
          "GlacierClient",
          "vault",
          "command parameters",
          "AWS Code Examples Repository",
          "CreateVaultCommand",
          "JavaScript",
          "AWS Region",
          "Amazon S3 Glacier",
          "unit tests",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_219",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference.\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n// Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\n// Call Glacier to create the vault\nglacier.createVault({ vaultName: \"YOUR_VAULT_NAME\" }, function (err) {\nif (!err) {\nconsole.log(\"Created vault!\");\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see CreateVault in AWS SDK for JavaScript API Reference.\nPowerShell\nTools for PowerShell\nExample 1: Creates a new vault for the user's account. As no value was supplied to the -\nAccountId parameter the cmdlets uses a default of \"-\" indicating the current account.\nNew-GLCVault -VaultName myvault\nOutput:\nActions API Version 2012-06-01 210",
      "start_idx": 361777,
      "end_idx": 362896,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "CreateVault",
            "API Reference",
            "PowerShell",
            "Glacier",
            "vault",
            "region",
            "AccountId",
            "cmdlets"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "CreateVault",
            "PowerShell",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development Tools",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for creating a vault in Amazon S3 Glacier using AWS SDK for JavaScript and PowerShell, including code examples and references to API documentation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using AWS SDK for JavaScript?",
            "What is the API call to create a vault in Glacier?",
            "How can I use PowerShell to create a new Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for JavaScript",
          "Glacier",
          "vault",
          "AWS Code Examples Repository",
          "region",
          "cmdlets",
          "API Reference",
          "Amazon S3 Glacier",
          "PowerShell",
          "AccountId",
          "CreateVault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_220",
      "text": "Amazon S3 Glacier Developer Guide\n/01234567812/vaults/myvault\n\u2022 For API details, see CreateVault in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\ndef create_vault(self, vault_name):\n\"\"\"\nCreates a vault.\n:param vault_name: The name to give the vault.\n:return: The newly created vault.\n\"\"\"\ntry:\nvault = self.glacier_resource.create_vault(vaultName=vault_name)\nlogger.info(\"Created vault %s.\", vault_name)\nexcept ClientError:\nlogger.exception(\"Couldn't create vault %s.\", vault_name)\nraise\nelse:\nreturn vault\nActions API Version 2012-06-01 211",
      "start_idx": 362898,
      "end_idx": 363812,
      "metadata": {
        "num_sentences": 11,
        "num_words": 116,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CreateVault",
            "AWS Tools for PowerShell",
            "Boto3",
            "vault",
            "API operations",
            "GlacierWrapper",
            "ClientError",
            "AWS Code Examples Repository",
            "Python SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CreateVault",
            "Boto3",
            "AWS Tools for PowerShell",
            "GlacierWrapper"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Python Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Tools for PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on using the Amazon S3 Glacier API to create a vault using Python (Boto3), along with references to additional tools and resources for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier using Python?",
            "What is the role of GlacierWrapper in Amazon S3 Glacier API operations?",
            "Where can I find examples for setting up Amazon S3 Glacier API operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Tools for PowerShell",
          "API operations",
          "AWS Code Examples Repository",
          "vault",
          "Boto3",
          "ClientError",
          "Python SDK",
          "Amazon S3 Glacier",
          "GlacierWrapper",
          "CreateVault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_221",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 For API details, see CreateVault in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DeleteArchive with an AWS SDK or CLI\nThe following code examples show how to use DeleteArchive.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nTo delete an archive from a vault\nThe following delete-archive example removes the specified archive from\nexample_vault.\naws glacier delete-archive \\\n--account-id 111122223333 \\\n--vault-name example_vault \\\n--archive-id Sc0u9ZP8yaWkmh-XGlIvAVprtLhaLCGnNwNl5I5x9HqPIkX5mjc0DrId3Ln-\nGi_k2HzmlIDZUz117KSdVMdMXLuFWi9PJUitxWO73edQ43eTlMWkH0pd9zVSAuV_XXZBVhKhyGhJ7w\nThis command produces no output.\n\u2022 For API details, see DeleteArchive in AWS CLI Command Reference.\nActions API Version 2012-06-01 212",
      "start_idx": 363814,
      "end_idx": 364933,
      "metadata": {
        "num_sentences": 9,
        "num_words": 158,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "CLI Command",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchive",
            "AWS CLI",
            "Vault",
            "Archive",
            "CreateVault",
            "SDK",
            "Boto3",
            "API",
            "Command Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "AWS CLI",
            "example_vault",
            "DeleteArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Usage",
            "CLI Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the DeleteArchive API or AWS CLI command to delete archives in Amazon S3 Glacier, including code examples and references to related SDKs and tools.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier using AWS CLI?",
            "What is the DeleteArchive API in AWS SDK for Python (Boto3)?",
            "Where can I find code examples for working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Vault",
          "API",
          "Boto3",
          "Command Reference",
          "AWS SDK",
          "Archive",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "example_vault",
          "CreateVault",
          "SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_222",
      "text": "Amazon S3 Glacier Developer Guide\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteArchiveRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class DeleteArchive {\npublic static void main(String[] args) {\nfinal String usage = \"\"\"\nUsage: <vaultName> <accountId> <archiveId>\nWhere:\nvaultName - The name of the vault that contains the archive to\ndelete.\naccountId - The account ID value.\narchiveId - The archive ID value.\n\"\"\";\nif (args.length != 3) {\nSystem.out.println(usage);\nSystem.exit(1);\n}\nActions API Version 2012-06-01 213",
      "start_idx": 364935,
      "end_idx": 366030,
      "metadata": {
        "num_sentences": 7,
        "num_words": 133,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Setup"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Java SDK",
            "DeleteArchive",
            "GlacierClient",
            "DeleteArchiveRequest",
            "GlacierException",
            "vaultName",
            "accountId",
            "archiveId",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Java SDK 2.x",
            "GlacierClient",
            "DeleteArchiveRequest",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java SDK",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java SDK example for deleting an archive from an Amazon S3 Glacier vault, including setup instructions and usage details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault using Java?",
            "What are the required parameters for the DeleteArchive operation?",
            "Where can I find additional AWS Java SDK examples?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Code Examples Repository",
          "GlacierClient",
          "Java SDK",
          "archiveId",
          "vaultName",
          "Java SDK 2.x",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "GlacierException",
          "accountId",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_223",
      "text": "Amazon S3 Glacier Developer Guide\nString vaultName = args[0];\nString accountId = args[1];\nString archiveId = args[2];\nGlacierClient glacier = GlacierClient.builder()\n.region(Region.US_EAST_1)\n.build();\ndeleteGlacierArchive(glacier, vaultName, accountId, archiveId);\nglacier.close();\n}\npublic static void deleteGlacierArchive(GlacierClient glacier, String\nvaultName, String accountId,\nString archiveId) {\ntry {\nDeleteArchiveRequest delArcRequest = DeleteArchiveRequest.builder()\n.vaultName(vaultName)\n.accountId(accountId)\n.archiveId(archiveId)\n.build();\nglacier.deleteArchive(delArcRequest);\nSystem.out.println(\"The archive was deleted.\");\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see DeleteArchive in AWS SDK for Java 2.x API Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nActions API Version 2012-06-01 214",
      "start_idx": 366032,
      "end_idx": 367045,
      "metadata": {
        "num_sentences": 5,
        "num_words": 113,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteArchiveRequest",
            "GlacierClient",
            "AWS SDK for Java",
            "archive deletion",
            "vaultName",
            "accountId",
            "archiveId",
            "GlacierException",
            "Boto3"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "DeleteArchiveRequest",
            "GlacierClient",
            "Boto3"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for deleting an archive in Amazon S3 Glacier using AWS SDK for Java. It includes a code example with error handling and references for further learning.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete an archive in Amazon S3 Glacier using Java?",
            "What is the proper way to handle errors when using DeleteArchiveRequest?",
            "Where can I find the complete example for this code?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive deletion",
          "GlacierClient",
          "Boto3",
          "archiveId",
          "vaultName",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "GlacierException",
          "accountId",
          "DeleteArchiveRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_224",
      "text": "Amazon S3 Glacier Developer Guide\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef delete_archive(archive):\n\"\"\"\nDeletes an archive from a vault.\n:param archive: The archive to delete.\n\"\"\"\ntry:\narchive.delete()\nlogger.info(\n\"Deleted archive %s from vault %s.\", archive.id,\narchive.vault_name\n)\nexcept ClientError:\nlogger.exception(\"Couldn't delete archive %s.\", archive.id)\nraise\n\u2022 For API details, see DeleteArchive in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DeleteVault with an AWS SDK or CLI\nThe following code examples show how to use DeleteVault.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\nActions API Version 2012-06-01 215",
      "start_idx": 367047,
      "end_idx": 368184,
      "metadata": {
        "num_sentences": 12,
        "num_words": 162,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "delete archive",
            "vault",
            "Boto3",
            "ClientError",
            "AWS SDK",
            "DeleteVault",
            "API operations",
            "logger",
            "DeleteArchive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK for Python",
            "DeleteArchive",
            "DeleteVault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK for Python"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Amazon S3 Glacier API to delete archives and vaults using the AWS SDK for Python (Boto3), including error handling and code examples.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from Amazon S3 Glacier using Boto3?",
            "What is the proper way to handle errors when deleting an archive in Glacier?",
            "Where can I find examples for using DeleteVault in AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteVault",
          "API operations",
          "vault",
          "Boto3",
          "ClientError",
          "AWS SDK",
          "AWS SDK for Python",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "delete archive",
          "logger"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_225",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command deletes a vault named my-vault:\naws glacier delete-vault --vault-name my-vault --account-id -\nThis command does not produce any output. Amazon Glacier requires an account ID\nargument when performing operations, but you can use a hyphen to specify the in-use\naccount.\n\u2022 For API details, see DeleteVault in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DeleteVaultRequest;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\nActions API Version 2012-06-01 216",
      "start_idx": 368186,
      "end_idx": 369332,
      "metadata": {
        "num_sentences": 7,
        "num_words": 144,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command",
              "Java Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DeleteVault",
            "AWS CLI",
            "SDK for Java",
            "GlacierClient",
            "DeleteVaultRequest",
            "GlacierException",
            "account ID",
            "vault",
            "Region"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SDK for Java 2.x",
            "DeleteVaultRequest",
            "GlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "AWS CLI Usage",
            "Java SDK Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an Amazon S3 Glacier vault using AWS CLI and Java SDK, including setup and code examples.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using AWS CLI?",
            "What is the Java SDK code to delete an Amazon S3 Glacier vault?",
            "What setup is required to use the AWS SDK for Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "SDK for Java 2.x",
          "AWS CLI",
          "DeleteVault",
          "SDK for Java",
          "GlacierClient",
          "vault",
          "Amazon S3 Glacier",
          "account ID",
          "GlacierException",
          "Region",
          "DeleteVaultRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_227",
      "text": "Amazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef delete_vault(vault):\n\"\"\"\nDeletes a vault.\n:param vault: The vault to delete.\n\"\"\"\ntry:\nvault.delete()\nlogger.info(\"Deleted vault %s.\", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't delete vault %s.\", vault.name)\nraise\n\u2022 For API details, see DeleteVault in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 218",
      "start_idx": 370267,
      "end_idx": 371245,
      "metadata": {
        "num_sentences": 12,
        "num_words": 138,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Operation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "delete_vault",
            "AWS SDK",
            "Python",
            "GlacierWrapper",
            "ClientError",
            "vault",
            "API Reference",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK",
            "DeleteVault",
            "GlacierWrapper"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Python Development",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Python example using Boto3 to delete a vault in Amazon S3 Glacier, along with references to additional resources and API details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier using Boto3?",
            "What is the purpose of the GlacierWrapper class?",
            "Where can I find more examples for using Amazon S3 Glacier with Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DeleteVault",
          "vault",
          "Boto3",
          "GitHub",
          "ClientError",
          "delete_vault",
          "Amazon S3 Glacier",
          "GlacierWrapper",
          "API Reference",
          "AWS SDK",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_228",
      "text": "Amazon S3 Glacier Developer Guide\nUse DeleteVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use DeleteVaultNotifications.\nCLI\nAWS CLI\nTo remove the SNS notifications for a vault\nThe following delete-vault-notifications example removes notifications sent by\nAmazon Simple Notification Service (Amazon SNS) for the specified vault.\naws glacier delete-vault-notifications \\\n--account-id 111122223333 \\\n--vault-name example_vault\nThis command produces no output.\n\u2022 For API details, see DeleteVaultNotifications in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 219",
      "start_idx": 371247,
      "end_idx": 372229,
      "metadata": {
        "num_sentences": 9,
        "num_words": 133,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "DeleteVaultNotifications",
            "Amazon S3 Glacier",
            "AWS CLI",
            "Boto3",
            "SNS notifications",
            "vault",
            "API operations",
            "GlacierWrapper",
            "AWS Code Examples Repository",
            "account-id"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Amazon SNS",
            "Boto3",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Operations",
            "Notification Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of using DeleteVaultNotifications to remove SNS notifications for an Amazon S3 Glacier vault, including CLI and Python SDK (Boto3) implementations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I remove SNS notifications for an Amazon S3 Glacier vault using AWS CLI?",
            "What is the Python SDK (Boto3) implementation for DeleteVaultNotifications?",
            "Where can I find complete examples for Glacier API operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "SNS notifications",
          "AWS CLI",
          "Amazon SNS",
          "DeleteVaultNotifications",
          "API operations",
          "vault",
          "Boto3",
          "AWS Code Examples Repository",
          "account-id",
          "Amazon S3 Glacier",
          "GlacierWrapper"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_229",
      "text": "Amazon S3 Glacier Developer Guide\n@staticmethod\ndef stop_notifications(notification):\n\"\"\"\nStops notifications to the configured Amazon SNS topic.\n:param notification: The notification configuration to remove.\n\"\"\"\ntry:\nnotification.delete()\nlogger.info(\"Notifications stopped.\")\nexcept ClientError:\nlogger.exception(\"Couldn't stop notifications.\")\nraise\n\u2022 For API details, see DeleteVaultNotifications in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DescribeJob with an AWS SDK or CLI\nThe following code examples show how to use DescribeJob.\nCLI\nAWS CLI\nThe following command retrieves information about an inventory retrieval job on a vault\nnamed my-vault:\naws glacier describe-job --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\nOutput:\n{\nActions API Version 2012-06-01 220",
      "start_idx": 372231,
      "end_idx": 373304,
      "metadata": {
        "num_sentences": 9,
        "num_words": 136,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "DeleteVaultNotifications",
            "DescribeJob",
            "AWS CLI",
            "SNS topic",
            "vault",
            "inventory retrieval",
            "job ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "AWS CLI",
            "SNS"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK Usage",
            "Notification Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to stop Amazon SNS notifications for an Amazon S3 Glacier vault and retrieve job details using the AWS CLI or SDKs, including Python's Boto3.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop Amazon SNS notifications for an S3 Glacier vault?",
            "What is the AWS CLI command to describe a Glacier job?",
            "Where can I find API details for DeleteVaultNotifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "DescribeJob",
          "AWS CLI",
          "SNS",
          "Amazon SNS",
          "DeleteVaultNotifications",
          "vault",
          "Boto3",
          "AWS SDK for Python",
          "Amazon S3 Glacier",
          "job ID",
          "SNS topic"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_230",
      "text": "Amazon S3 Glacier Developer Guide\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-vault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"InProgress\"\n}\nThe job ID can be found in the output of aws glacier initiate-job and aws glacier\nlist-jobs. Amazon Glacier requires an account ID argument when performing operations,\nbut you can use a hyphen to specify the in-use account.\n\u2022 For API details, see DescribeJob in AWS CLI Command Reference.\nPowerShell\nTools for PowerShell\nExample 1: Returns details of the specified job. When the job completes successfully the\nRead-GCJobOutput cmdlet can be used to retrieve the contents of the job (an archive or\ninventory list) to the local file system.\nGet-GLCJob -VaultName myvault -JobId \"op1x...JSbthM\"\nOutput:\nAction : ArchiveRetrieval\nArchiveId : o9O9j...X-TpIhQJw\nArchiveSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nArchiveSizeInBytes : 38034480\nCompleted : False\nCompletionDate : 1/1/0001 12:00:00 AM\nCreationDate : 12/13/2018 11:00:14 AM\nInventoryRetrievalParameters :\nInventorySizeInBytes : 0\nJobDescription :\nJobId : op1x...JSbthM\nJobOutputPath :\nActions API Version 2012-06-01 221",
      "start_idx": 373306,
      "end_idx": 374675,
      "metadata": {
        "num_sentences": 6,
        "num_words": 161,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Command Output Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InventoryRetrievalParameters",
            "VaultARN",
            "JobId",
            "Action",
            "CreationDate",
            "StatusCode",
            "ArchiveRetrieval",
            "AWS CLI",
            "PowerShell"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "JobId",
            "AWS CLI",
            "PowerShell"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on retrieving job outputs and inventory lists from Amazon S3 Glacier using AWS CLI and PowerShell commands, including example outputs and parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I retrieve job details from Amazon S3 Glacier?",
            "What are the parameters for InventoryRetrieval in AWS Glacier?",
            "How do I use PowerShell to get job outputs from Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "AWS CLI",
          "JobId",
          "Action",
          "VaultARN",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "PowerShell",
          "InventoryRetrievalParameters",
          "StatusCode"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_231",
      "text": "Amazon S3 Glacier Developer Guide\nOutputLocation :\nRetrievalByteRange : 0-38034479\nSelectParameters :\nSHA256TreeHash : 79f3ea754c02f58...dc57bf4395b\nSNSTopic :\nStatusCode : InProgress\nStatusMessage :\nTier : Standard\nVaultARN : arn:aws:glacier:us-west-2:012345678912:vaults/test\n\u2022 For API details, see DescribeJob in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef get_job_status(job):\n\"\"\"\nGets the status of a job.\n:param job: The job to query.\n:return: The current status of the job.\n\"\"\"\ntry:\njob.load()\nActions API Version 2012-06-01 222",
      "start_idx": 374677,
      "end_idx": 375606,
      "metadata": {
        "num_sentences": 9,
        "num_words": 124,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "RetrievalByteRange",
            "SHA256TreeHash",
            "VaultARN",
            "Boto3",
            "Python SDK",
            "SNSTopic",
            "Job Status",
            "Actions API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Tools for PowerShell",
            "Boto3",
            "AWS Code Examples Repository",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Tools for PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a reference for Amazon S3 Glacier operations, including API details, code examples, and job status retrieval using the Boto3 Python SDK.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve the status of a job in Amazon S3 Glacier?",
            "What is the format of the SHA256TreeHash in Glacier?",
            "Where can I find complete code examples for Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Tools for PowerShell",
          "SHA256TreeHash",
          "Job Status",
          "SNSTopic",
          "AWS Code Examples Repository",
          "Boto3",
          "Python SDK",
          "VaultARN",
          "Developer Guide",
          "Actions API",
          "Amazon S3 Glacier",
          "RetrievalByteRange"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_232",
      "text": "Amazon S3 Glacier Developer Guide\nlogger.info(\n\"Job %s is performing action %s and has status %s.\",\njob.id,\njob.action,\njob.status_code,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get status for job %s.\", job.id)\nraise\nelse:\nreturn job.status_code\n\u2022 For API details, see DescribeJob in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse DescribeVault with an AWS SDK or CLI\nThe following code examples show how to use DescribeVault.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Describe an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to describe.</param>\n/// <returns>The Amazon Resource Name (ARN) of the vault.</returns>\npublic async Task<string> DescribeVaultAsync(string vaultName)\n{\nActions API Version 2012-06-01 223",
      "start_idx": 375608,
      "end_idx": 376701,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeJob",
            "DescribeVault",
            "AWS SDK",
            "Boto3",
            "ClientError",
            "vaultName",
            "status_code",
            "API Version 2012-06-01",
            "ARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "AWS SDK for .NET",
            "AWS Code Examples Repository",
            "Amazon Resource Name (ARN)"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference information and code examples for using the Amazon S3 Glacier service, including how to describe jobs and vaults using AWS SDKs and APIs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I describe an Amazon S3 Glacier vault using an AWS SDK?",
            "What is the API reference for DescribeJob in AWS SDK for Python?",
            "Where can I find complete examples for Amazon S3 Glacier in GitHub?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "DescribeJob",
          "ARN",
          "API Version 2012-06-01",
          "AWS Code Examples Repository",
          "Boto3",
          "ClientError",
          "vaultName",
          "Amazon S3 Glacier",
          "status_code",
          "DescribeVault",
          "AWS SDK for Python (Boto3)",
          "AWS SDK",
          "Amazon Resource Name (ARN)"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_233",
      "text": "Amazon S3 Glacier Developer Guide\nvar request = new DescribeVaultRequest\n{\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.DescribeVaultAsync(request);\n// Display the information about the vault.\nConsole.WriteLine($\"{response.VaultName}\\tARN: {response.VaultARN}\");\nConsole.WriteLine($\"Created on: {response.CreationDate}\\tNumber\nof Archives: {response.NumberOfArchives}\\tSize (in bytes):\n{response.SizeInBytes}\");\nif (response.LastInventoryDate != DateTime.MinValue)\n{\nConsole.WriteLine($\"Last inventory: {response.LastInventoryDate}\");\n}\nreturn response.VaultARN;\n}\n\u2022 For API details, see DescribeVault in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command retrieves data about a vault named my-vault:\naws glacier describe-vault --vault-name my-vault --account-id -\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see DescribeVault in AWS CLI Command Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 224",
      "start_idx": 376703,
      "end_idx": 377955,
      "metadata": {
        "num_sentences": 7,
        "num_words": 157,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "CLI Command"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "DescribeVault",
            "VaultARN",
            "AWS SDK",
            "CLI Command",
            "Account ID",
            "VaultName",
            "NumberOfArchives",
            "SizeInBytes",
            "LastInventoryDate"
          ],
          "entities": [
            "DescribeVaultRequest",
            "DescribeVaultAsync",
            "VaultARN",
            "AWS SDK for .NET",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS CLI"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve information about an Amazon S3 Glacier vault using the AWS SDK for .NET and AWS CLI, including code examples and CLI commands.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve information about an S3 Glacier vault using AWS SDK for .NET?",
            "What is the CLI command to describe a vault in Amazon Glacier?",
            "What details can I obtain about a vault in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "DescribeVaultAsync",
          "AWS CLI",
          "SizeInBytes",
          "CLI Command",
          "Account ID",
          "NumberOfArchives",
          "LastInventoryDate",
          "VaultARN",
          "Amazon S3 Glacier",
          "DescribeVault",
          "DescribeVaultRequest",
          "AWS SDK",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_234",
      "text": "Amazon S3 Glacier Developer Guide\nUse GetJobOutput with an AWS SDK or CLI\nThe following code examples show how to use GetJobOutput.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Get archive content and delete the archive\nCLI\nAWS CLI\nThe following command saves the output from a vault inventory job to a file in the current\ndirectory named output.json:\naws glacier get-job-output --account-id - --vault-name my-\nvault --job-id zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW output.json\nThe job-id is available in the output of aws glacier list-jobs. Note that the output\nfile name is a positional argument that is not prefixed by an option name. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account.\nOutput:\n{\n\"status\": 200,\n\"acceptRanges\": \"bytes\",\n\"contentType\": \"application/json\"\n}\noutput.json:\n{\"VaultARN\":\"arn:aws:glacier:us-west-2:0123456789012:vaults/\nmy-vault\",\"InventoryDate\":\"2015-04-07T00:26:18Z\",\"ArchiveList\":\n[{\"ArchiveId\":\"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\"ArchiveDescription\":\"multipart\nActions API Version 2012-06-01 225",
      "start_idx": 377957,
      "end_idx": 379333,
      "metadata": {
        "num_sentences": 6,
        "num_words": 161,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Instructions",
              "Example Code",
              "Output Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GetJobOutput",
            "AWS SDK",
            "AWS CLI",
            "vault inventory",
            "job-id",
            "account ID",
            "output.json",
            "archive content",
            "InventoryDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "GetJobOutput",
            "my-vault",
            "output.json"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS CLI Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This guide provides procedural instructions for using the AWS CLI to retrieve and save output from a vault inventory job in Amazon S3 Glacier. It includes example code and details about required parameters and output formatting.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use GetJobOutput with AWS CLI?",
            "What parameters are required for retrieving vault inventory in Amazon S3 Glacier?",
            "How is the output from a vault inventory job saved to a file?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "my-vault",
          "AWS CLI",
          "job-id",
          "vault inventory",
          "output.json",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "account ID",
          "InventoryDate",
          "AWS SDK",
          "archive content"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_235",
      "text": "Amazon S3 Glacier Developer Guide\nupload\ntest\",\"CreationDate\":\"2015-04-06T22:24:34Z\",\"Size\":3145728,\"SHA256TreeHash\":\"9628195fcdbcbbe76cdde932d4646fa7de5f219fb39823836d81f0cc0e18aa67\"}]}\n\u2022 For API details, see GetJobOutput in AWS CLI Command Reference.\nPowerShell\nTools for PowerShell\nExample 1: Downloads the archive content that was scheduled for retrieval in the\nspecified job and stores the contents into a file on disk. The download validates the\nchecksum for you, if one is available. If desired the entire response including the\nchecksum can be returned by specifying -Select '*'.\nRead-GLCJobOutput -VaultName myvault -JobId \"HSWjArc...Zq2XLiW\" -FilePath \"c:\n\\temp\\blue.bin\"\n\u2022 For API details, see GetJobOutput in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 226",
      "start_idx": 379335,
      "end_idx": 380510,
      "metadata": {
        "num_sentences": 10,
        "num_words": 150,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Example",
              "Code Snippet"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GetJobOutput",
            "AWS CLI",
            "PowerShell",
            "Boto3",
            "SDK",
            "checksum",
            "archive",
            "VaultName",
            "JobId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "PowerShell",
            "Boto3",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Programming SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "PowerShell",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on how to retrieve and download archive content from Amazon S3 Glacier using AWS CLI, PowerShell, and Boto3, including example commands and code snippets.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I download an archive from Amazon S3 Glacier?",
            "What is the syntax for GetJobOutput in AWS CLI and PowerShell?",
            "How do I validate a checksum during archive retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "JobId",
          "AWS Code Examples Repository",
          "Boto3",
          "checksum",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "PowerShell",
          "SDK",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_236",
      "text": "Amazon S3 Glacier Developer Guide\n@staticmethod\ndef get_job_output(job):\n\"\"\"\nGets the output of a job, such as a vault inventory or the contents of an\narchive.\n:param job: The job to get output from.\n:return: The job output, in bytes.\n\"\"\"\ntry:\nresponse = job.get_output()\nout_bytes = response[\"body\"].read()\nlogger.info(\"Read %s bytes from job %s.\", len(out_bytes), job.id)\nif \"archiveDescription\" in response:\nlogger.info(\n\"These bytes are described as '%s'\",\nresponse[\"archiveDescription\"]\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get output for job %s.\", job.id)\nraise\nelse:\nreturn out_bytes\n\u2022 For API details, see GetJobOutput in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse GetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use GetVaultNotifications.\nCLI\nAWS CLI\nThe following command gets a description of the notification configuration for a vault\nnamed my-vault:\nActions API Version 2012-06-01 227",
      "start_idx": 380512,
      "end_idx": 381666,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job output",
            "vault inventory",
            "archive",
            "AWS SDK",
            "Boto3",
            "GetJobOutput",
            "GetVaultNotifications",
            "AWS CLI",
            "notification configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "Boto3",
            "GetJobOutput",
            "GetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for retrieving job output, such as vault inventory or archive contents, using the AWS SDK for Python (Boto3). It also includes a CLI command for getting vault notification configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve job output from Amazon S3 Glacier using Boto3?",
            "What is the CLI command to get vault notification configurations?",
            "What are the API details for GetJobOutput in Boto3?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "Boto3",
          "vault inventory",
          "job output",
          "notification configuration",
          "GetVaultNotifications",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_237",
      "text": "Amazon S3 Glacier Developer Guide\naws glacier get-vault-notifications --account-id - --vault-name my-vault\nOutput:\n{\n\"vaultNotificationConfig\": {\n\"Events\": [\n\"InventoryRetrievalCompleted\",\n\"ArchiveRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\"\n}\n}\nIf no notifications have been configured for the vault, an error is returned. Amazon Glacier\nrequires an account ID argument when performing operations, but you can use a hyphen to\nspecify the in-use account.\n\u2022 For API details, see GetVaultNotifications in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 228",
      "start_idx": 381668,
      "end_idx": 382646,
      "metadata": {
        "num_sentences": 8,
        "num_words": 127,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "CLI Command",
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "get-vault-notifications",
            "account ID",
            "SNS topic",
            "Boto3",
            "Python SDK",
            "API operations",
            "InventoryRetrievalCompleted",
            "ArchiveRetrievalCompleted"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Boto3",
            "SNS topic",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "Command Line Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to retrieve vault notification settings for Amazon S3 Glacier using the AWS CLI and Boto3 SDK, including code examples and error handling details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve vault notifications in Amazon S3 Glacier?",
            "What are the required parameters for the get-vault-notifications command?",
            "Where can I find complete examples for using the AWS SDK for Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "AWS CLI",
          "SNS",
          "API operations",
          "AWS Code Examples Repository",
          "ArchiveRetrievalCompleted",
          "Boto3",
          "vault notifications",
          "Python SDK",
          "Amazon S3 Glacier",
          "account ID",
          "SNS topic",
          "get-vault-notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_238",
      "text": "Amazon S3 Glacier Developer Guide\n@staticmethod\ndef get_notification(vault):\n\"\"\"\nGets the currently notification configuration for a vault.\n:param vault: The vault to query.\n:return: The notification configuration for the specified vault.\n\"\"\"\ntry:\nnotification = vault.Notification()\nlogger.info(\n\"Vault %s notifies %s on %s events.\",\nvault.name,\nnotification.sns_topic,\nnotification.events,\n)\nexcept ClientError:\nlogger.exception(\"Couldn't get notification data for %s.\",\nvault.name)\nraise\nelse:\nreturn notification\n\u2022 For API details, see GetVaultNotifications in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse InitiateJob with an AWS SDK or CLI\nThe following code examples show how to use InitiateJob.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 229",
      "start_idx": 382648,
      "end_idx": 383795,
      "metadata": {
        "num_sentences": 11,
        "num_words": 167,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "notification configuration",
            "InitiateJob",
            "AWS SDK",
            "Boto3",
            "ClientError",
            "SNS topic",
            "events",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python",
            "Boto3",
            "InitiateJob",
            "GetVaultNotifications"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Development",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve notification configurations for an Amazon S3 Glacier vault using the AWS SDK for Python (Boto3) and provides code examples, including initiating jobs and handling notifications.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve notification configurations for a vault in Amazon S3 Glacier?",
            "What is the process for initiating a job using AWS SDK for Python?",
            "What are the key attributes of vault notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SNS",
          "vault",
          "Boto3",
          "InitiateJob",
          "ClientError",
          "notification configuration",
          "AWS SDK for Python",
          "GetVaultNotifications",
          "Amazon S3 Glacier",
          "API version 2012-06-01",
          "SNS topic",
          "AWS SDK",
          "events"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_239",
      "text": "Amazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nRetrieve an archive from a vault. This example uses the ArchiveTransferManager class. For\nAPI details see ArchiveTransferManager.\n/// <summary>\n/// Download an archive from an Amazon S3 Glacier vault using the Archive\n/// Transfer Manager.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault containing the object.</\nparam>\n/// <param name=\"archiveId\">The Id of the archive to download.</param>\n/// <param name=\"localFilePath\">The local directory where the file will\n/// be stored after download.</param>\n/// <returns>Async Task.</returns>\npublic async Task<bool> DownloadArchiveWithArchiveManagerAsync(string\nvaultName, string archiveId, string localFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\nvar options = new DownloadOptions\n{\nStreamTransferProgress = Progress!,\n};\n// Download an archive.\nConsole.WriteLine(\"Initiating the archive retrieval job and then\npolling SQS queue for the archive to be available.\");\nConsole.WriteLine(\"When the archive is available, downloading will\nbegin.\");\nawait manager.DownloadAsync(vaultName, archiveId, localFilePath,\noptions);\nActions API Version 2012-06-01 230",
      "start_idx": 383797,
      "end_idx": 385122,
      "metadata": {
        "num_sentences": 10,
        "num_words": 172,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "vault",
            "archive",
            "DownloadOptions",
            "SQS queue",
            "archive retrieval",
            "AWS SDK for .NET",
            "Async Task",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveTransferManager",
            "AWS SDK for .NET",
            "SQS queue",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of how to use the ArchiveTransferManager class to retrieve an archive from an Amazon S3 Glacier vault using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from an Amazon S3 Glacier vault?",
            "What is the ArchiveTransferManager class and how is it used?",
            "How do I download an archive programmatically using AWS SDK for .NET?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "AWS SDK for .NET",
          "archive",
          "ArchiveTransferManager",
          "vault",
          "DownloadOptions",
          "Amazon S3 Glacier",
          "Async Task",
          "API Version 2012-06-01",
          "SQS queue"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_242",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nRetrieve a vault inventory.\nimport software.amazon.awssdk.core.ResponseBytes;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.JobParameters;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport software.amazon.awssdk.services.glacier.model.InitiateJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobRequest;\nimport software.amazon.awssdk.services.glacier.model.DescribeJobResponse;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputRequest;\nimport software.amazon.awssdk.services.glacier.model.GetJobOutputResponse;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\n* For more information, see the following documentation topic:\n*\n* https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-\nstarted.html\n*/\npublic class ArchiveDownload {\npublic static void main(String[] args) {\nActions API Version 2012-06-01 233",
      "start_idx": 387606,
      "end_idx": 389105,
      "metadata": {
        "num_sentences": 6,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InitiateJob",
            "AWS CLI",
            "SDK for Java",
            "vault inventory",
            "GlacierClient",
            "JobParameters",
            "DescribeJobRequest",
            "GetJobOutputRequest",
            "AWS Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "SDK for Java",
            "GlacierClient",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Java Development",
            "AWS SDK"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Java-based example for retrieving a vault inventory from Amazon S3 Glacier using the AWS SDK for Java. It also includes instructions for setting up the development environment and links to additional resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve a vault inventory using the AWS SDK for Java?",
            "What are the prerequisites for running the vault inventory retrieval code?",
            "Where can I find additional examples for working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "DescribeJobRequest",
          "AWS CLI",
          "AWS Code Examples Repository",
          "SDK for Java",
          "GlacierClient",
          "vault inventory",
          "InitiateJob",
          "JobParameters",
          "Amazon S3 Glacier",
          "GetJobOutputRequest"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_245",
      "text": "Amazon S3 Glacier Developer Guide\nResponseBytes<GetJobOutputResponse> objectBytes =\nglacier.getJobOutputAsBytes(jobOutputRequest);\n// Write the data to a local file.\nbyte[] data = objectBytes.asByteArray();\nFile myFile = new File(path);\nOutputStream os = new FileOutputStream(myFile);\nos.write(data);\nSystem.out.println(\"Successfully obtained bytes from a Glacier\nvault\");\nos.close();\n} catch (GlacierException | InterruptedException | IOException e) {\nSystem.out.println(e.getMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see InitiateJob in AWS SDK for Java 2.x API Reference.\nPowerShell\nTools for PowerShell\nExample 1: Starts a job to retrieve an archive from the specified vault owned by the\nuser. The status of the job can be checked using the Get-GLCJob cmdlet. When the\njob completes successfully the Read-GCJobOutput cmdlet can be used to retrieve the\ncontents of the archive to the local file system.\nStart-GLCJob -VaultName myvault -JobType \"archive-retrieval\" -JobDescription\n\"archive retrieval\" -ArchiveId \"o9O9j...TX-TpIhQJw\"\nOutput:\nJobId JobOutputPath Location\n----- ------------- --------\nop1x...JSbthM /012345678912/vaults/test/jobs/\nop1xe...I4HqCHkSJSbthM\nActions API Version 2012-06-01 236",
      "start_idx": 391289,
      "end_idx": 392503,
      "metadata": {
        "num_sentences": 6,
        "num_words": 149,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Line Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "archive retrieval",
            "GlacierException",
            "GetJobOutputResponse",
            "PowerShell",
            "vault",
            "job output",
            "archive ID",
            "InitiateJob"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java 2.x",
            "PowerShell",
            "Get-GLCJob",
            "Read-GCJobOutput"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for retrieving data from an Amazon S3 Glacier vault using Java and PowerShell, including code examples and API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve data from an Amazon S3 Glacier vault programmatically?",
            "What is the process to handle job output in AWS SDK for Java?",
            "How do I use PowerShell to retrieve an archive from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GetJobOutputResponse",
          "archive retrieval",
          "vault",
          "InitiateJob",
          "job output",
          "AWS SDK for Java 2.x",
          "Get-GLCJob",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "PowerShell",
          "GlacierException",
          "archive ID",
          "Read-GCJobOutput"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_246",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 For API details, see InitiateJob in AWS Tools for PowerShell Cmdlet Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nRetrieve a vault inventory.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_inventory_retrieval(vault):\n\"\"\"\nInitiates an inventory retrieval job. The inventory describes the\ncontents\nof the vault. Standard retrievals typically complete within 3\u20145 hours.\nWhen the job completes, you can get the inventory by calling\nget_output().\n:param vault: The vault to inventory.\n:return: The inventory retrieval job.\n\"\"\"\ntry:\njob = vault.initiate_inventory_retrieval()\nlogger.info(\"Started %s job with ID %s.\", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on vault %s.\", vault.name)\nraise\nActions API Version 2012-06-01 237",
      "start_idx": 392505,
      "end_idx": 393619,
      "metadata": {
        "num_sentences": 15,
        "num_words": 149,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage",
              "SDK Integration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "inventory retrieval",
            "vault",
            "initiate_inventory_retrieval",
            "AWS Code Examples Repository",
            "SDK for Python",
            "job completion",
            "ClientError",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Tools for PowerShell",
            "AWS Code Examples Repository",
            "GlacierWrapper"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDKs",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS Tools for PowerShell",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the AWS SDK for Python (Boto3) to initiate an inventory retrieval job on Amazon S3 Glacier vaults, providing a code example and additional reference links.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in Amazon S3 Glacier using Boto3?",
            "What is the typical completion time for inventory retrieval jobs in Amazon S3 Glacier?",
            "Where can I find more code examples for AWS SDK integrations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "AWS Tools for PowerShell",
          "AWS Code Examples Repository",
          "vault",
          "Boto3",
          "SDK for Python",
          "API Version 2012-06-01",
          "initiate_inventory_retrieval",
          "ClientError",
          "Amazon S3 Glacier",
          "GlacierWrapper",
          "job completion"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_247",
      "text": "Amazon S3 Glacier Developer Guide\nelse:\nreturn job\nRetrieve an archive from a vault.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output().\n:param archive: The archive to retrieve.\n:return: The archive retrieval job.\n\"\"\"\ntry:\njob = archive.initiate_archive_retrieval()\nlogger.info(\"Started %s job with ID %s.\", job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't start job on archive %s.\", archive.id)\nraise\nelse:\nreturn job\n\u2022 For API details, see InitiateJob in AWS SDK for Python (Boto3) API Reference.\nActions API Version 2012-06-01 238",
      "start_idx": 393621,
      "end_idx": 394577,
      "metadata": {
        "num_sentences": 12,
        "num_words": 123,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "Boto3",
            "initiate_archive_retrieval",
            "ClientError",
            "get_output",
            "vault",
            "API operations",
            "job ID",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS SDK",
            "InitiateJob",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve an archive from an Amazon S3 Glacier vault using the Boto3 library, including a code example for initiating an archive retrieval job.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve an archive from Amazon S3 Glacier?",
            "What is the process for initiating an archive retrieval job using Boto3?",
            "What error handling should I implement for archive retrieval in AWS Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "API operations",
          "API Version 2012-06-01",
          "vault",
          "Boto3",
          "ClientError",
          "InitiateJob",
          "Amazon S3 Glacier",
          "job ID",
          "get_output",
          "AWS SDK",
          "initiate_archive_retrieval"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_248",
      "text": "Amazon S3 Glacier Developer Guide\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse ListJobs with an AWS SDK or CLI\nThe following code examples show how to use ListJobs.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code examples:\n\u2022 Archive a file, get notifications, and initiate a job\n\u2022 Get archive content and delete the archive\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// List Amazon S3 Glacier jobs.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to list jobs for.</param>\n/// <returns>A list of Amazon S3 Glacier jobs.</returns>\npublic async Task<List<GlacierJobDescription>> ListJobsAsync(string\nvaultName)\n{\nvar request = new ListJobsRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the current account.\nAccountId = \"-\",\nVaultName = vaultName,\n};\nActions API Version 2012-06-01 239",
      "start_idx": 394579,
      "end_idx": 395819,
      "metadata": {
        "num_sentences": 9,
        "num_words": 206,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "ListJobs",
            "CLI",
            "Vault",
            "Job Description",
            "Account ID",
            "Code Examples",
            "API Version 2012-06-01",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListJobsRequest",
            "GlacierJobDescription",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS SDK"
          ],
          "mentioned_tools": [
            "AWS CLI",
            ".NET"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the ListJobs API for Amazon S3 Glacier, providing code examples and setup details for AWS SDK for .NET and AWS CLI usage.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list jobs in Amazon S3 Glacier using AWS SDK for .NET?",
            "What is the purpose of the Account ID parameter in ListJobsRequest?",
            "Where can I find complete code examples for Amazon S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "GlacierJobDescription",
          "AWS SDK for .NET",
          "Job Description",
          "Vault",
          "API Version 2012-06-01",
          "GitHub",
          "ListJobs",
          "Account ID",
          "ListJobsRequest",
          "AWS Code Examples Repository",
          "Code Examples",
          "Amazon S3 Glacier",
          "CLI",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_250",
      "text": "Amazon S3 Glacier Developer Guide\n\"StatusCode\": \"InProgress\"\n},\n{\n\"InventoryRetrievalParameters\": {\n\"Format\": \"JSON\"\n},\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"Completed\": false,\n\"JobId\": \"zbxcm3Z_3z5UkoroF7SuZKrxgGoDc3RloGduS7Eg-\nRO47Yc6FxsdGBgf_Q2DK5Ejh18CnTS5XW4_XqlNHS61dsO4CnMW\",\n\"Action\": \"InventoryRetrieval\",\n\"CreationDate\": \"2015-07-17T20:23:41.616Z\",\n\"StatusCode\": \"\"InProgress\"\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see ListJobs in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\nActions API Version 2012-06-01 241",
      "start_idx": 397025,
      "end_idx": 398058,
      "metadata": {
        "num_sentences": 7,
        "num_words": 120,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InventoryRetrieval",
            "VaultARN",
            "JobId",
            "StatusCode",
            "Boto3",
            "SDK",
            "AWS CLI",
            "ListJobs",
            "Actions API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Boto3",
            "VaultARN",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Python Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "Boto3",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on Amazon S3 Glacier operations, including API references, code examples using Boto3, and instructions for inventory retrieval jobs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I perform an inventory retrieval job in Amazon S3 Glacier?",
            "What is the format of a VaultARN in Amazon S3 Glacier?",
            "How can I use Boto3 to interact with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "JobId",
          "GitHub",
          "Boto3",
          "ListJobs",
          "VaultARN",
          "Actions API",
          "Amazon S3 Glacier",
          "InventoryRetrieval",
          "SDK",
          "StatusCode"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_251",
      "text": "Amazon S3 Glacier Developer Guide\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault.\n:param vault: The vault to query.\n:param job_type: The type of job to list.\n:return: The list of jobs of the requested type.\n\"\"\"\njob_list = []\ntry:\nif job_type == \"all\":\njobs = vault.jobs.all()\nelif job_type == \"in_progress\":\njobs = vault.jobs_in_progress.all()\nelif job_type == \"completed\":\njobs = vault.completed_jobs.all()\nelif job_type == \"succeeded\":\njobs = vault.succeeded_jobs.all()\nelif job_type == \"failed\":\njobs = vault.failed_jobs.all()\nelse:\njobs = []\nlogger.warning(\"%s isn't a type of job I can get.\", job_type)\nfor job in jobs:\njob_list.append(job)\nlogger.info(\"Got %s %s job %s.\", job_type, job.action, job.id)\nexcept ClientError:\nlogger.exception(\"Couldn't get %s jobs from %s.\", job_type,\nvault.name)\nraise\nelse:\nreturn job_list\n\u2022 For API details, see ListJobs in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 242",
      "start_idx": 398060,
      "end_idx": 399251,
      "metadata": {
        "num_sentences": 11,
        "num_words": 175,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "jobs",
            "job_type",
            "AWS SDK",
            "Boto3",
            "ClientError",
            "job_list",
            "logger",
            "actions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "ListJobs",
            "AWS SDK",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Python method to list jobs of a specified type from an Amazon S3 Glacier vault using the Boto3 library, including error handling and logging details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list jobs from an Amazon S3 Glacier vault?",
            "What are the different job types supported by the ListJobs method?",
            "How does error handling work when querying jobs in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "job_list",
          "jobs",
          "job_type",
          "vault",
          "Boto3",
          "ListJobs",
          "ClientError",
          "actions",
          "Amazon S3 Glacier",
          "AWS SDK",
          "logger",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_252",
      "text": "Amazon S3 Glacier Developer Guide\nUse ListTagsForVault with an AWS SDK or CLI\nThe following code examples show how to use ListTagsForVault.\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// List tags for an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the vault to list tags for.</param>\n/// <returns>A dictionary listing the tags attached to each object in the\n/// vault and its tags.</returns>\npublic async Task<Dictionary<string, string>> ListTagsForVaultAsync(string\nvaultName)\n{\nvar request = new ListTagsForVaultRequest\n{\n// Using a hyphen \"-\" for the Account Id will\n// cause the SDK to use the Account Id associated\n// with the default user.\nAccountId = \"-\",\nVaultName = vaultName,\n};\nvar response = await _glacierService.ListTagsForVaultAsync(request);\nreturn response.Tags;\n}\n\u2022 For API details, see ListTagsForVault in AWS SDK for .NET API Reference.\nActions API Version 2012-06-01 243",
      "start_idx": 399253,
      "end_idx": 400297,
      "metadata": {
        "num_sentences": 7,
        "num_words": 162,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListTagsForVault",
            "AWS SDK for .NET",
            "vault tags",
            "API Reference",
            "ListTagsForVaultAsync",
            "AccountId",
            "VaultName",
            "AWS CLI",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListTagsForVault",
            "AWS Code Examples Repository",
            "ListTagsForVaultRequest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a code example for using the ListTagsForVault API to list tags for an Amazon S3 Glacier vault using the AWS SDK for .NET.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list tags for an Amazon S3 Glacier vault using .NET?",
            "What is the function of the ListTagsForVault API in AWS SDK for .NET?",
            "Where can I find a complete example of using ListTagsForVault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for .NET",
          "AWS CLI",
          "AWS Code Examples Repository",
          "GitHub",
          "ListTagsForVault",
          "API Reference",
          "Amazon S3 Glacier",
          "ListTagsForVaultAsync",
          "AccountId",
          "ListTagsForVaultRequest",
          "VaultName",
          "vault tags"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_253",
      "text": "Amazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command lists the tags applied to a vault named my-vault:\naws glacier list-tags-for-vault --account-id - --vault-name my-vault\nOutput:\n{\n\"Tags\": {\n\"date\": \"july2015\",\n\"id\": \"1234\"\n}\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see ListTagsForVault in AWS CLI Command Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse ListVaults with an AWS SDK or CLI\nThe following code examples show how to use ListVaults.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 244",
      "start_idx": 400299,
      "end_idx": 401282,
      "metadata": {
        "num_sentences": 7,
        "num_words": 161,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CLI Command",
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "ListTagsForVault",
            "ListVaults",
            "account ID",
            "vault",
            "tags",
            "AWS SDK",
            "API",
            "job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "ListTagsForVault",
            "ListVaults",
            "AWS SDK"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command Line Tools",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides instructions on listing tags for an Amazon S3 Glacier vault using the AWS CLI, alongside details about related APIs and SDK examples for managing vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list tags for a vault in Amazon S3 Glacier using AWS CLI?",
            "What is the purpose of the account ID argument in Amazon S3 Glacier operations?",
            "Where can I find code examples for using ListVaults in AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "API",
          "ListVaults",
          "vault",
          "ListTagsForVault",
          "job",
          "Amazon S3 Glacier",
          "account ID",
          "tags",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_254",
      "text": "Amazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// List the Amazon S3 Glacier vaults associated with the current account.\n/// </summary>\n/// <returns>A list containing information about each vault.</returns>\npublic async Task<List<DescribeVaultOutput>> ListVaultsAsync()\n{\nvar glacierVaultPaginator = _glacierService.Paginators.ListVaults(\nnew ListVaultsRequest { AccountId = \"-\" });\nvar vaultList = new List<DescribeVaultOutput>();\nawait foreach (var vault in glacierVaultPaginator.VaultList)\n{\nvaultList.Add(vault);\n}\nreturn vaultList;\n}\n\u2022 For API details, see ListVaults in AWS SDK for .NET API Reference.\nCLI\nAWS CLI\nThe following command lists the vaults in the default account and region:\naws glacier list-vaults --account-id -\nOutput:\nActions API Version 2012-06-01 245",
      "start_idx": 401284,
      "end_idx": 402207,
      "metadata": {
        "num_sentences": 5,
        "num_words": 129,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "APIUsage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaultsAsync",
            "vaults",
            "AWS SDK for .NET",
            "Paginator",
            "ListVaultsRequest",
            "DescribeVaultOutput",
            "AWS CLI",
            "list-vaults",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ListVaultsAsync",
            "ListVaults",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to list Amazon S3 Glacier vaults using AWS SDK for .NET and AWS CLI, including a code example and relevant API details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list Amazon S3 Glacier vaults using AWS SDK for .NET?",
            "What is the AWS CLI command to list Glacier vaults?",
            "What are the API details for the ListVaults operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "ListVaultsAsync",
          "AWS SDK for .NET",
          "AWS CLI",
          "ListVaults",
          "vaults",
          "list-vaults",
          "ListVaultsRequest",
          "Amazon S3 Glacier",
          "AccountId",
          "Paginator",
          "DescribeVaultOutput"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_255",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"VaultList\": [\n{\n\"SizeInBytes\": 3178496,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:0123456789012:vaults/my-\nvault\",\n\"LastInventoryDate\": \"2015-04-07T00:26:19.028Z\",\n\"VaultName\": \"my-vault\",\n\"NumberOfArchives\": 1,\n\"CreationDate\": \"2015-04-06T21:23:45.708Z\"\n}\n]\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see ListVaults in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsRequest;\nimport software.amazon.awssdk.services.glacier.model.ListVaultsResponse;\nimport software.amazon.awssdk.services.glacier.GlacierClient;\nimport software.amazon.awssdk.services.glacier.model.DescribeVaultOutput;\nimport software.amazon.awssdk.services.glacier.model.GlacierException;\nimport java.util.List;\n/**\n* Before running this Java V2 code example, set up your development\n* environment, including your credentials.\n*\nActions API Version 2012-06-01 246",
      "start_idx": 402209,
      "end_idx": 403417,
      "metadata": {
        "num_sentences": 6,
        "num_words": 123,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Details",
              "Code Example",
              "SDK Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ListVaults",
            "AWS CLI",
            "SDK for Java",
            "Region",
            "GlacierClient",
            "DescribeVaultOutput",
            "GlacierException",
            "InventoryDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "AWS CLI",
            "SDK for Java 2.x",
            "GlacierClient"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Java Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CLI"
          ],
          "mentioned_tools": [
            "SDK for Java 2.x",
            "AWS Code Examples Repository",
            "GlacierClient"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on using Amazon S3 Glacier, including API references, SDK examples, and account ID usage for operations. It also includes a Java code snippet for listing vaults.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I list vaults in Amazon S3 Glacier using Java SDK?",
            "What is the format of a VaultARN in Amazon S3 Glacier?",
            "Where can I find complete code examples for AWS SDK usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SDK for Java 2.x",
          "AWS CLI",
          "DescribeVaultOutput",
          "ListVaults",
          "SDK for Java",
          "GlacierClient",
          "VaultARN",
          "Amazon S3 Glacier",
          "GlacierException",
          "InventoryDate",
          "Region"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_257",
      "text": "Amazon S3 Glacier Developer Guide\nlistComplete = true;\n}\n}\nif (totalVaults == 0) {\nSystem.out.println(\"No vaults found.\");\n}\n} catch (GlacierException e) {\nSystem.err.println(e.awsErrorDetails().errorMessage());\nSystem.exit(1);\n}\n}\n}\n\u2022 For API details, see ListVaults in AWS SDK for Java 2.x API Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\ndef list_vaults(self):\n\"\"\"\nLists vaults for the current account.\n\"\"\"\nActions API Version 2012-06-01 248",
      "start_idx": 404601,
      "end_idx": 405388,
      "metadata": {
        "num_sentences": 8,
        "num_words": 110,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ListVaults",
            "AWS SDK for Java",
            "Boto3",
            "API operations",
            "GlacierException",
            "Vaults",
            "GitHub",
            "Code Examples Repository",
            "Actions API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "Boto3",
            "GitHub",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "Boto3",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and references for using Amazon S3 Glacier APIs, including listing vaults with AWS SDKs such as Java and Python (Boto3). It includes code snippets and links to further resources.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I list vaults using Amazon S3 Glacier?",
            "What is the correct way to handle GlacierException errors?",
            "Where can I find complete examples for Amazon S3 Glacier API operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API operations",
          "AWS Code Examples Repository",
          "ListVaults",
          "Boto3",
          "GitHub",
          "Actions API",
          "Amazon S3 Glacier",
          "AWS SDK for Java",
          "GlacierException",
          "Code Examples Repository",
          "Vaults"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_258",
      "text": "Amazon S3 Glacier Developer Guide\ntry:\nfor vault in self.glacier_resource.vaults.all():\nlogger.info(\"Got vault %s.\", vault.name)\nexcept ClientError:\nlogger.exception(\"Couldn't list vaults.\")\nraise\n\u2022 For API details, see ListVaults in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse SetVaultNotifications with an AWS SDK or CLI\nThe following code examples show how to use SetVaultNotifications.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nCLI\nAWS CLI\nThe following command configures SNS notifications for a vault named my-vault:\naws glacier set-vault-notifications --account-id - --vault-name my-vault --vault-\nnotification-config file://notificationconfig.json\nnotificationconfig.json is a JSON file in the current folder that specifies an SNS topic\nand the events to publish:\n{\n\"SNSTopic\": \"arn:aws:sns:us-west-2:0123456789012:my-vault\",\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]\n}\nActions API Version 2012-06-01 249",
      "start_idx": 405390,
      "end_idx": 406701,
      "metadata": {
        "num_sentences": 8,
        "num_words": 176,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "CLI Command",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SetVaultNotifications",
            "ListVaults",
            "SNS topic",
            "vault notifications",
            "AWS CLI",
            "Boto3",
            "notificationconfig.json",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "SNS topic",
            "notificationconfig.json",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK Usage",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on using the AWS SDK and CLI to configure vault notifications in Amazon S3 Glacier, including code examples and JSON configuration details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What is the JSON structure for setting up SNS notifications?",
            "How do I use the AWS CLI to set vault notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "AWS CLI",
          "Amazon SNS",
          "ListVaults",
          "Boto3",
          "ArchiveRetrievalCompleted",
          "AWS SDK for Python (Boto3)",
          "SNS topic",
          "Amazon S3 Glacier",
          "notificationconfig.json",
          "SetVaultNotifications",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_259",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\n\u2022 For API details, see SetVaultNotifications in AWS CLI Command Reference.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications. Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events.\n:param vault: The vault to set up to publish notifications.\n:param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications.\n:return: Data about the new notification configuration.\n\"\"\"\ntry:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\nActions API Version 2012-06-01 250",
      "start_idx": 406703,
      "end_idx": 407958,
      "metadata": {
        "num_sentences": 12,
        "num_words": 169,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "SNS Topic",
            "Vault Notifications",
            "AWS CLI",
            "API Operations",
            "Notification Configuration",
            "Python SDK",
            "AWS Code Examples Repository",
            "ARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "Amazon SNS",
            "AWS CLI",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3",
            "AWS CLI",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Python example using Boto3 to configure Amazon S3 Glacier to send notifications via Amazon SNS. It includes details on API operations and links to additional resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up notifications for Amazon S3 Glacier?",
            "What is the role of Amazon SNS in Glacier notifications?",
            "Where can I find more code examples for AWS services?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "Notification Configuration",
          "Amazon SNS",
          "ARN",
          "AWS Code Examples Repository",
          "GitHub",
          "Boto3",
          "Python SDK",
          "SNS Topic",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "API Operations"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_260",
      "text": "Amazon S3 Glacier Developer Guide\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s.\",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s.\", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\n\u2022 For API details, see SetVaultNotifications in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse UploadArchive with an AWS SDK or CLI\nThe following code examples show how to use UploadArchive.\nAction examples are code excerpts from larger programs and must be run in context. You can see\nthis action in context in the following code example:\n\u2022 Archive a file, get notifications, and initiate a job\nActions API Version 2012-06-01 251",
      "start_idx": 407960,
      "end_idx": 408980,
      "metadata": {
        "num_sentences": 8,
        "num_words": 149,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Notification Setup"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SetVaultNotifications",
            "UploadArchive",
            "AWS SDK",
            "Boto3",
            "SNS Topic",
            "Vault",
            "ClientError",
            "ArchiveRetrieval",
            "InventoryRetrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "SetVaultNotifications",
            "UploadArchive",
            "SNS Topic ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "File Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines how to set up notifications for Amazon S3 Glacier vaults and demonstrates using the UploadArchive API with code examples. It includes procedural guidance and references for further SDK details.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I set up notifications for an Amazon S3 Glacier vault?",
            "What is the process for uploading archives in Amazon S3 Glacier using Boto3?",
            "What code examples are available for using the UploadArchive API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "SNS Topic ARN",
          "SNS",
          "Vault",
          "Boto3",
          "ClientError",
          "AWS SDK for Python (Boto3)",
          "SNS Topic",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "SetVaultNotifications",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_261",
      "text": "Amazon S3 Glacier Developer Guide\n.NET\nAWS SDK for .NET\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n/// <summary>\n/// Upload an object to an Amazon S3 Glacier vault.\n/// </summary>\n/// <param name=\"vaultName\">The name of the Amazon S3 Glacier vault to upload\n/// the archive to.</param>\n/// <param name=\"archiveFilePath\">The file path of the archive to upload to\nthe vault.</param>\n/// <returns>A Boolean value indicating the success of the action.</returns>\npublic async Task<string> UploadArchiveWithArchiveManager(string vaultName,\nstring archiveFilePath)\n{\ntry\n{\nvar manager = new ArchiveTransferManager(_glacierService);\n// Upload an archive.\nvar response = await manager.UploadAsync(vaultName, \"upload archive\ntest\", archiveFilePath);\nreturn response.ArchiveId;\n}\ncatch (AmazonGlacierException ex)\n{\nConsole.WriteLine(ex.Message);\nreturn string.Empty;\n}\n}\n\u2022 For API details, see UploadArchive in AWS SDK for .NET API Reference.\nActions API Version 2012-06-01 252",
      "start_idx": 408982,
      "end_idx": 410030,
      "metadata": {
        "num_sentences": 6,
        "num_words": 144,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "UploadArchive",
            "vault",
            "archive",
            "archiveFilePath",
            "AmazonGlacierException",
            "API Reference",
            "GitHub"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for .NET",
            "ArchiveTransferManager",
            "UploadArchive",
            "GitHub"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "SDK Development",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for .NET",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to an Amazon S3 Glacier vault using the AWS SDK for .NET, including error handling and code examples.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using .NET?",
            "What is the purpose of ArchiveTransferManager in AWS SDK for .NET?",
            "How can I handle errors when uploading to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS SDK for .NET",
          "ArchiveTransferManager",
          "archive",
          "vault",
          "GitHub",
          "AmazonGlacierException",
          "Amazon S3 Glacier",
          "API Reference",
          "archiveFilePath"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_262",
      "text": "Amazon S3 Glacier Developer Guide\nCLI\nAWS CLI\nThe following command uploads an archive in the current folder named archive.zip to a\nvault named my-vault:\naws glacier upload-archive --account-id - --vault-name my-vault --\nbody archive.zip\nOutput:\n{\n\"archiveId\": \"kKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--\nzM_mw6k76ZFGEIWQX-ybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\",\n\"checksum\":\n\"969fb39823836d81f0cc028195fcdbcbbe76cdde932d4646fa7de5f21e18aa67\",\n\"location\": \"/0123456789012/vaults/my-vault/archives/\nkKB7ymWJVpPSwhGP6ycSOAekp9ZYe_--zM_mw6k76ZFGEIWQX-\nybtRDvc2VkPSDtfKmQrj0IRQLSGsNuDp-\nAJVlu2ccmDSyDUmZwKbwbpAdGATGDiB3hHO0bjbGehXTcApVud_wyDw\"\n}\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\nTo retrieve an uploaded archive, initiate a retrieval job with the aws glacier initiate-job\ncommand.\n\u2022 For API details, see UploadArchive in AWS CLI Command Reference.\nJava\nSDK for Java 2.x\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nActions API Version 2012-06-01 253",
      "start_idx": 410032,
      "end_idx": 411194,
      "metadata": {
        "num_sentences": 6,
        "num_words": 129,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Command-Line Instructions",
              "API Reference",
              "Code Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "upload-archive",
            "vault",
            "archiveId",
            "checksum",
            "location",
            "account ID",
            "retrieve archive",
            "initiate-job"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "UploadArchive",
            "SDK for Java 2.x",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command-Line Tools",
            "Software Development Kits"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "SDK for Java 2.x"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload an archive to Amazon S3 Glacier using the AWS CLI and retrieve it using a retrieval job. It includes example commands, output details, and references to additional resources.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier using AWS CLI?",
            "What is the output structure of the 'upload-archive' command?",
            "How can I retrieve an uploaded archive from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "SDK for Java 2.x",
          "AWS CLI",
          "location",
          "upload-archive",
          "vault",
          "AWS Code Examples Repository",
          "retrieve archive",
          "checksum",
          "initiate-job",
          "archiveId",
          "Amazon S3 Glacier",
          "account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_265",
      "text": "Amazon S3 Glacier Developer Guide\n} catch (NoSuchAlgorithmException nsae) {\nSystem.err.format(\"Cannot locate MessageDigest algorithm for SHA-256:\n%s\", nsae.getMessage());\nSystem.exit(-1);\n}\nreturn \"\";\n}\npublic static byte[] computeSHA256TreeHash(File inputFile) throws\nIOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes an SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk, even if it's smaller than 1 MB.\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = fileStream.read(buff, 0, ONE_MB)) > 0) {\nActions API Version 2012-06-01 256",
      "start_idx": 413725,
      "end_idx": 414908,
      "metadata": {
        "num_sentences": 3,
        "num_words": 152,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Checksum Calculation"
            ]
          },
          "keywords": [
            "SHA-256",
            "MessageDigest",
            "TreeHash",
            "Amazon S3 Glacier",
            "chunk",
            "checksum",
            "FileInputStream",
            "NoSuchAlgorithmException",
            "1 MB",
            "hash computation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA-256 TreeHash",
            "MessageDigest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "File Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "MessageDigest"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA-256 TreeHash checksums for files in Amazon S3 Glacier, including handling chunk-based hashing and edge cases for smaller file sizes.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute SHA-256 TreeHash for a file?",
            "What is the process for handling file chunks smaller than 1 MB?",
            "What tools or libraries are required for checksum calculation in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "hash computation",
          "NoSuchAlgorithmException",
          "MessageDigest",
          "TreeHash",
          "chunk",
          "FileInputStream",
          "checksum",
          "Amazon S3 Glacier",
          "SHA-256 TreeHash",
          "SHA-256",
          "1 MB"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_268",
      "text": "Amazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate the client.\nconst { GlacierClient } = require(\"@aws-sdk/client-glacier\");\n// Set the AWS Region.\nconst REGION = \"REGION\";\n//Set the Redshift Service Object\nconst glacierClient = new GlacierClient({ region: REGION });\nexport { glacierClient };\nUpload the archive.\n// Load the SDK for JavaScript\nimport { UploadArchiveCommand } from \"@aws-sdk/client-glacier\";\nimport { glacierClient } from \"./libs/glacierClient.js\";\n// Set the parameters\nconst vaultname = \"VAULT_NAME\"; // VAULT_NAME\n// Create a new service object and buffer\nconst buffer = new Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nconst params = { vaultName: vaultname, body: buffer };\nconst run = async () => {\ntry {\nconst data = await glacierClient.send(new UploadArchiveCommand(params));\nconsole.log(\"Archive ID\", data.archiveId);\nreturn data; // For unit tests.\n} catch (err) {\nconsole.log(\"Error uploading archive!\", err);\n}\n};\nActions API Version 2012-06-01 259",
      "start_idx": 416708,
      "end_idx": 417837,
      "metadata": {
        "num_sentences": 8,
        "num_words": 167,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Setup Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "UploadArchiveCommand",
            "AWS SDK",
            "JavaScript",
            "buffer",
            "vaultName",
            "archiveId",
            "AWS Region",
            "Code Examples Repository"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "GlacierClient",
            "UploadArchiveCommand",
            "AWS SDK for JavaScript",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK",
            "JavaScript Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "Node.js"
          ]
        },
        "semantic": {
          "summary": "This guide provides a procedural example for using the AWS SDK for JavaScript (v3) to create a Glacier client and upload an archive to Amazon S3 Glacier.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a Glacier client using the AWS SDK for JavaScript?",
            "What is the process to upload an archive to Amazon S3 Glacier?",
            "What parameters are required for the UploadArchiveCommand?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for JavaScript",
          "GlacierClient",
          "buffer",
          "JavaScript",
          "UploadArchiveCommand",
          "vaultName",
          "archiveId",
          "Amazon S3 Glacier",
          "AWS Region",
          "Code Examples Repository",
          "AWS SDK"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_269",
      "text": "Amazon S3 Glacier Developer Guide\nrun();\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference.\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\n// Load the SDK for JavaScript\nvar AWS = require(\"aws-sdk\");\n// Set the region\nAWS.config.update({ region: \"REGION\" });\n// Create a new service object and buffer\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" });\nbuffer = Buffer.alloc(2.5 * 1024 * 1024); // 2.5MB buffer\nvar params = { vaultName: \"YOUR_VAULT_NAME\", body: buffer };\n// Call Glacier to upload the archive.\nglacier.uploadArchive(params, function (err, data) {\nif (err) {\nconsole.log(\"Error uploading archive!\", err);\n} else {\nconsole.log(\"Archive ID\", data.archiveId);\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see UploadArchive in AWS SDK for JavaScript API Reference.\nActions API Version 2012-06-01 260",
      "start_idx": 417839,
      "end_idx": 418903,
      "metadata": {
        "num_sentences": 9,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "UploadArchive",
            "API Reference",
            "AWS Code Examples Repository",
            "Glacier",
            "buffer",
            "vaultName",
            "region",
            "archiveId"
          ],
          "entities": [
            "AWS SDK for JavaScript",
            "Amazon S3 Glacier",
            "UploadArchive",
            "AWS Code Examples Repository",
            "Glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Software Development",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for using the AWS SDK for JavaScript to upload an archive to Amazon S3 Glacier, including code examples and references to additional resources.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I use AWS SDK for JavaScript to upload an archive to Amazon S3 Glacier?",
            "What is the UploadArchive API in AWS SDK for JavaScript?",
            "Where can I find more examples for working with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS SDK for JavaScript",
          "AWS Code Examples Repository",
          "Glacier",
          "buffer",
          "archiveId",
          "vaultName",
          "region",
          "Amazon S3 Glacier",
          "API Reference"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_270",
      "text": "Amazon S3 Glacier Developer Guide\nPowerShell\nTools for PowerShell\nExample 1: Uploads a single file to the specified vault, returning the archive ID and\ncomputed checksum.\nWrite-GLCArchive -VaultName myvault -FilePath c:\\temp\\blue.bin\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nExample 2: Uploads the contents of a folder hierarchy to the specified vault in the user's\naccount. For each file uploaded the cmdlet emits the filename, corresponding archive ID\nand the computed checksum of the archive.\nWrite-GLCArchive -VaultName myvault -FolderPath . -Recurse\nOutput:\nFilePath ArchiveId Checksum\n-------- --------- --------\nC:\\temp\\blue.bin o9O9jUUs...TTX-TpIhQJw 79f3e...f4395b\nC:\\temp\\green.bin qXAfOdSG...czo729UHXrw d50a1...9184b9\nC:\\temp\\lum.bin 39aNifP3...q9nb8nZkFIg 28886...5c3e27\nC:\\temp\\red.bin vp7E6rU_...Ejk_HhjAxKA e05f7...4e34f5\nC:\\temp\\Folder1\\file1.txt _eRINlip...5Sxy7dD2BaA d0d2a...c8a3ba\nC:\\temp\\Folder2\\file2.iso -Ix3jlmu...iXiDh-XfOPA 7469e...3e86f1\n\u2022 For API details, see UploadArchive in AWS Tools for PowerShell Cmdlet Reference.\nActions API Version 2012-06-01 261",
      "start_idx": 418905,
      "end_idx": 420066,
      "metadata": {
        "num_sentences": 6,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Snippet",
              "Command-Line Usage",
              "Output Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "PowerShell",
            "Write-GLCArchive",
            "VaultName",
            "FilePath",
            "FolderPath",
            "Checksum",
            "Archive ID",
            "Recurse",
            "UploadArchive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "PowerShell",
            "Write-GLCArchive",
            "AWS Tools for PowerShell",
            "UploadArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Command-Line Interfaces",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "PowerShell",
            "AWS Tools for PowerShell"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of using the Write-GLCArchive cmdlet in PowerShell to upload files or folder hierarchies to an Amazon S3 Glacier vault, along with the output details such as Archive ID and checksum.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a single file to an Amazon S3 Glacier vault using PowerShell?",
            "What is the output of the Write-GLCArchive cmdlet in PowerShell?",
            "Can I upload an entire folder hierarchy to an Amazon S3 Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "UploadArchive",
          "AWS Tools for PowerShell",
          "Recurse",
          "Write-GLCArchive",
          "Amazon S3 Glacier",
          "PowerShell",
          "FilePath",
          "VaultName",
          "Archive ID",
          "FolderPath"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_271",
      "text": "Amazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault.\n:param vault: The vault where the archive is put.\n:param archive_description: A description of the archive.\n:param archive_file: The archive file to put in the vault.\n:return: The uploaded archive.\n\"\"\"\ntry:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s.\",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\nActions API Version 2012-06-01 262",
      "start_idx": 420068,
      "end_idx": 421060,
      "metadata": {
        "num_sentences": 11,
        "num_words": 128,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "upload_archive",
            "vault",
            "archive_description",
            "archive_file",
            "Python SDK",
            "AWS Code Examples",
            "GlacierWrapper",
            "ClientError"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "GlacierWrapper",
            "AWS Code Examples Repository",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Python Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Python code example using Boto3 to interact with Amazon S3 Glacier, including uploading an archive to a vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to an Amazon S3 Glacier vault using Boto3?",
            "What is the purpose of the GlacierWrapper class in this example?",
            "Where can I find more AWS code examples for Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive_file",
          "archive_description",
          "AWS Code Examples Repository",
          "vault",
          "Boto3",
          "Python SDK",
          "ClientError",
          "Amazon S3 Glacier",
          "AWS Code Examples",
          "GlacierWrapper",
          "upload_archive"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_272",
      "text": "Amazon S3 Glacier Developer Guide\n\"Couldn't upload %s to %s.\", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n\u2022 For API details, see UploadArchive in AWS SDK for Python (Boto3) API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nUse UploadMultipartPart with an AWS SDK or CLI\nThe following code examples show how to use UploadMultipartPart.\nCLI\nAWS CLI\nThe following command uploads the first 1 MiB (1024 x 1024 bytes) part of an archive:\naws glacier upload-multipart-part --body part1 --range 'bytes\n0-1048575/*' --account-id - --vault-name my-vault --upload-\nid 19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-\nOssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ\nAmazon Glacier requires an account ID argument when performing operations, but you can\nuse a hyphen to specify the in-use account.\nThe body parameter takes a path to a part file on the local filesystem. The range parameter\ntakes an HTTP content range indicating the bytes that the part occupies in the completed\narchive. The upload ID is returned by the aws glacier initiate-multipart-upload\ncommand and can also be obtained by using aws glacier list-multipart-uploads.\nFor more information on multipart uploads to Amazon Glacier using the AWS CLI, see Using\nAmazon Glacier in the AWS CLI User Guide.\n\u2022 For API details, see UploadMultipartPart in AWS CLI Command Reference.\nActions API Version 2012-06-01 263",
      "start_idx": 421062,
      "end_idx": 422606,
      "metadata": {
        "num_sentences": 12,
        "num_words": 231,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Command Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "UploadMultipartPart",
            "AWS SDK",
            "Boto3",
            "CLI",
            "multipart upload",
            "archive",
            "vault",
            "account ID",
            "HTTP content range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "Boto3",
            "UploadMultipartPart",
            "UploadArchive"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS SDK Usage",
            "CLI Commands"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using the UploadMultipartPart API with AWS SDKs or CLI, including code examples and parameter details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the UploadMultipartPart API in Amazon S3 Glacier?",
            "What parameters are required for a multipart upload using the AWS CLI?",
            "Where can I find code examples for uploading archives to Amazon Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "AWS CLI",
          "archive",
          "multipart upload",
          "Boto3",
          "vault",
          "HTTP content range",
          "Amazon S3 Glacier",
          "account ID",
          "CLI",
          "AWS SDK",
          "UploadMultipartPart"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_273",
      "text": "Amazon S3 Glacier Developer Guide\nJavaScript\nSDK for JavaScript (v2)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate a multipart upload of 1 megabyte chunks of a Buffer object.\n// Create a new service object and some supporting variables\nvar glacier = new AWS.Glacier({ apiVersion: \"2012-06-01\" }),\nvaultName = \"YOUR_VAULT_NAME\",\nbuffer = new Buffer(2.5 * 1024 * 1024), // 2.5MB buffer\npartSize = 1024 * 1024, // 1MB chunks,\nnumPartsLeft = Math.ceil(buffer.length / partSize),\nstartTime = new Date(),\nparams = { vaultName: vaultName, partSize: partSize.toString() };\n// Compute the complete SHA-256 tree hash so we can pass it\n// to completeMultipartUpload request at the end\nvar treeHash = glacier.computeChecksums(buffer).treeHash;\n// Initiate the multipart upload\nconsole.log(\"Initiating upload to\", vaultName);\n// Call Glacier to initiate the upload.\nglacier.initiateMultipartUpload(params, function (mpErr, multipart) {\nif (mpErr) {\nconsole.log(\"Error!\", mpErr.stack);\nreturn;\n}\nconsole.log(\"Got upload ID\", multipart.uploadId);\n// Grab each partSize chunk and upload it as a part\nfor (var i = 0; i < buffer.length; i += partSize) {\nvar end = Math.min(i + partSize, buffer.length),\npartParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\nrange: \"bytes \" + i + \"-\" + (end - 1) + \"/*\",\nbody: buffer.slice(i, end),\nActions API Version 2012-06-01 264",
      "start_idx": 422608,
      "end_idx": 424053,
      "metadata": {
        "num_sentences": 6,
        "num_words": 215,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "Buffer object",
            "SHA-256 tree hash",
            "AWS SDK",
            "JavaScript",
            "vaultName",
            "partSize",
            "uploadId",
            "computeChecksums"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "SHA-256",
            "Buffer",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript",
            "GitHub",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to perform a multipart upload to Amazon S3 Glacier using the AWS SDK for JavaScript, including creating a buffer, dividing it into chunks, and uploading each part with error handling.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a large file to Amazon S3 Glacier in chunks?",
            "What is the process for initiating a multipart upload in AWS Glacier?",
            "How can I compute a SHA-256 tree hash for a buffer in JavaScript?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for JavaScript",
          "partSize",
          "SHA-256 tree hash",
          "Buffer",
          "Buffer object",
          "multipart upload",
          "AWS Code Examples Repository",
          "JavaScript",
          "vaultName",
          "Amazon S3 Glacier",
          "SHA-256",
          "AWS SDK",
          "computeChecksums",
          "uploadId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_274",
      "text": "Amazon S3 Glacier Developer Guide\n};\n// Send a single part\nconsole.log(\"Uploading part\", i, \"=\", partParams.range);\nglacier.uploadMultipartPart(partParams, function (multiErr, mData) {\nif (multiErr) return;\nconsole.log(\"Completed part\", this.request.params.range);\nif (--numPartsLeft > 0) return; // complete only when all parts uploaded\nvar doneParams = {\nvaultName: vaultName,\nuploadId: multipart.uploadId,\narchiveSize: buffer.length.toString(),\nchecksum: treeHash, // the computed tree hash\n};\nconsole.log(\"Completing upload...\");\nglacier.completeMultipartUpload(doneParams, function (err, data) {\nif (err) {\nconsole.log(\"An error occurred while uploading the archive\");\nconsole.log(err);\n} else {\nvar delta = (new Date() - startTime) / 1000;\nconsole.log(\"Completed upload in\", delta, \"seconds\");\nconsole.log(\"Archive ID:\", data.archiveId);\nconsole.log(\"Checksum: \", data.checksum);\n}\n});\n});\n}\n});\n\u2022 For more information, see AWS SDK for JavaScript Developer Guide.\n\u2022 For API details, see UploadMultipartPart in AWS SDK for JavaScript API Reference.\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nActions API Version 2012-06-01 265",
      "start_idx": 424055,
      "end_idx": 425348,
      "metadata": {
        "num_sentences": 5,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "tree hash",
            "checksum",
            "archive size",
            "vaultName",
            "uploadId",
            "AWS SDK",
            "JavaScript",
            "API Reference"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for JavaScript",
            "UploadMultipartPart",
            "completeMultipartUpload",
            "archiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Upload",
            "AWS SDK Usage"
          ],
          "mentioned_services": [
            "S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for JavaScript"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a step-by-step guide on using the AWS SDK for JavaScript to perform multipart uploads to Amazon S3 Glacier, including code examples and API references for UploadMultipartPart and completeMultipartUpload operations.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I perform a multipart upload to Amazon S3 Glacier using AWS SDK for JavaScript?",
            "What is the purpose of the tree hash checksum in multipart uploads?",
            "How do I handle errors during multipart uploads in AWS SDK?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDK for JavaScript",
          "tree hash",
          "multipart upload",
          "archive size",
          "checksum",
          "completeMultipartUpload",
          "JavaScript",
          "vaultName",
          "archiveId",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "API Reference",
          "AWS SDK",
          "UploadMultipartPart",
          "uploadId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_275",
      "text": "Amazon S3 Glacier Developer Guide\nScenarios for S3 Glacier using AWS SDKs\nThe following code examples show you how to implement common scenarios in S3 Glacier with\nAWS SDKs. These scenarios show you how to accomplish specific tasks by calling multiple functions\nwithin S3 Glacier or combined with other AWS services. Each scenario includes a link to the\ncomplete source code, where you can find instructions on how to set up and run the code.\nScenarios target an intermediate level of experience to help you understand service actions in\ncontext.\nExamples\n\u2022 Archive a file to Amazon S3 Glacier, get notifications, and initiate a job using an AWS SDK\n\u2022 Get Amazon S3 Glacier archive content and delete the archive using an AWS SDK\nArchive a file to Amazon S3 Glacier, get notifications, and initiate a job\nusing an AWS SDK\nThe following code example shows how to:\n\u2022 Create an Amazon S3 Glacier vault.\n\u2022 Configure the vault to publish notifications to an Amazon SNS topic.\n\u2022 Upload an archive file to the vault.\n\u2022 Initiate an archive retrieval job.\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate a class that wraps S3 Glacier operations.\nimport argparse\nScenarios API Version 2012-06-01 266",
      "start_idx": 425350,
      "end_idx": 426652,
      "metadata": {
        "num_sentences": 12,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "How-To"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS SDK",
            "archive retrieval",
            "SNS topic",
            "vault creation",
            "Python",
            "Boto3",
            "notifications",
            "code example",
            "job initiation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "Amazon SNS",
            "Python SDK",
            "AWS Code Examples Repository"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Programming",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "Boto3",
            "GitHub"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural examples for implementing common scenarios in Amazon S3 Glacier using AWS SDKs, including vault creation, notifications setup, and archive management with Python code snippets.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I archive a file to Amazon S3 Glacier using AWS SDK?",
            "What steps are required to configure notifications for an S3 Glacier vault?",
            "Where can I find complete code examples for S3 Glacier operations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "code example",
          "archive retrieval",
          "AWS SDKs",
          "Amazon SNS",
          "notifications",
          "job initiation",
          "AWS Code Examples Repository",
          "Boto3",
          "Python SDK",
          "Amazon S3 Glacier",
          "vault creation",
          "SNS topic",
          "AWS SDK",
          "Python"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_277",
      "text": "Amazon S3 Glacier Developer Guide\nraise\n@staticmethod\ndef upload_archive(vault, archive_description, archive_file):\n\"\"\"\nUploads an archive to a vault.\n:param vault: The vault where the archive is put.\n:param archive_description: A description of the archive.\n:param archive_file: The archive file to put in the vault.\n:return: The uploaded archive.\n\"\"\"\ntry:\narchive = vault.upload_archive(\narchiveDescription=archive_description, body=archive_file\n)\nlogger.info(\n\"Uploaded %s with ID %s to vault %s.\",\narchive_description,\narchive.id,\nvault.name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't upload %s to %s.\", archive_description, vault.name\n)\nraise\nelse:\nreturn archive\n@staticmethod\ndef initiate_archive_retrieval(archive):\n\"\"\"\nInitiates an archive retrieval job. Standard retrievals typically\ncomplete\nwithin 3\u20145 hours. When the job completes, you can get the archive\ncontents\nby calling get_output().\n:param archive: The archive to retrieve.\n:return: The archive retrieval job.\n\"\"\"\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 268",
      "start_idx": 427698,
      "end_idx": 428770,
      "metadata": {
        "num_sentences": 13,
        "num_words": 138,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "upload_archive",
            "initiate_archive_retrieval",
            "ClientError",
            "archive_description",
            "retrieval job",
            "get_output",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "ClientError",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Python SDK",
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance on uploading archives to a vault and initiating archive retrieval jobs in Amazon S3 Glacier, including error handling and logging examples.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to an Amazon S3 Glacier vault?",
            "How can I initiate an archive retrieval job in Amazon S3 Glacier?",
            "What error handling should I implement when interacting with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive",
          "archive_description",
          "API Version 2012-06-01",
          "vault",
          "retrieval job",
          "ClientError",
          "Amazon S3 Glacier",
          "get_output",
          "upload_archive",
          "initiate_archive_retrieval"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_279",
      "text": "Amazon S3 Glacier Developer Guide\ndef set_notifications(self, vault, sns_topic_arn):\n\"\"\"\nSets an Amazon Simple Notification Service (Amazon SNS) topic as a target\nfor notifications. Amazon S3 Glacier publishes messages to this topic for\nthe configured list of events.\n:param vault: The vault to set up to publish notifications.\n:param sns_topic_arn: The Amazon Resource Name (ARN) of the topic that\nreceives notifications.\n:return: Data about the new notification configuration.\n\"\"\"\ntry:\nnotification = self.glacier_resource.Notification(\"-\", vault.name)\nnotification.set(\nvaultNotificationConfig={\n\"SNSTopic\": sns_topic_arn,\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\",\n],\n}\n)\nlogger.info(\n\"Notifications will be sent to %s for events %s from %s.\",\nnotification.sns_topic,\nnotification.events,\nnotification.vault_name,\n)\nexcept ClientError:\nlogger.exception(\n\"Couldn't set notifications to %s on %s.\", sns_topic_arn,\nvault.name\n)\nraise\nelse:\nreturn notification\nCall functions on the wrapper class to create a vault and upload a file, then configure the\nvault to publish notifications and initiate a job to retrieve the archive.\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 270",
      "start_idx": 429948,
      "end_idx": 431185,
      "metadata": {
        "num_sentences": 9,
        "num_words": 160,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "notifications",
            "vault",
            "ARN",
            "events",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "ClientError",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "vaultNotificationConfig",
            "ClientError",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Notification Systems",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Python",
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure Amazon S3 Glacier vaults to publish notifications to an Amazon SNS topic, including handling errors and specifying events to monitor.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I set up notifications for an Amazon S3 Glacier vault?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "How can errors be handled when configuring notifications for a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "Amazon SNS",
          "notifications",
          "ARN",
          "vault",
          "ArchiveRetrievalCompleted",
          "ClientError",
          "Amazon S3 Glacier",
          "SNS topic",
          "API Version 2012-06-01",
          "vaultNotificationConfig",
          "events"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_280",
      "text": "Amazon S3 Glacier Developer Guide\ndef upload_demo(glacier, vault_name, topic_arn):\n\"\"\"\nShows how to:\n* Create a vault.\n* Configure the vault to publish notifications to an Amazon SNS topic.\n* Upload an archive.\n* Start a job to retrieve the archive.\n:param glacier: A Boto3 Amazon S3 Glacier resource.\n:param vault_name: The name of the vault to create.\n:param topic_arn: The ARN of an Amazon SNS topic that receives notification\nof\nAmazon S3 Glacier events.\n\"\"\"\nprint(f\"\\nCreating vault {vault_name}.\")\nvault = glacier.create_vault(vault_name)\nprint(\"\\nList of vaults in your account:\")\nglacier.list_vaults()\nprint(f\"\\nUploading glacier_basics.py to {vault.name}.\")\nwith open(\"glacier_basics.py\", \"rb\") as upload_file:\narchive = glacier.upload_archive(vault, \"glacier_basics.py\", upload_file)\nprint(\n\"\\nStarting an archive retrieval request to get the file back from the \"\n\"vault.\"\n)\nglacier.initiate_archive_retrieval(archive)\nprint(\"\\nListing in progress jobs:\")\nglacier.list_jobs(vault, \"in_progress\")\nprint(\n\"\\nBecause Amazon S3 Glacier is intended for infrequent retrieval, an \"\n\"archive request with Standard retrieval typically completes within 3\u20135 \"\n\"hours.\"\n)\nif topic_arn:\nnotification = glacier.set_notifications(vault, topic_arn)\nprint(\nf\"\\nVault {vault.name} is configured to notify the \"\nf\"{notification.sns_topic} topic when {notification.events} \"\nf\"events occur. You can subscribe to this topic to receive \"\nf\"a message when the archive retrieval completes.\\n\"\n)\nelse:\nprint(\nArchive a file, get notifications, and initiate a job API Version 2012-06-01 271",
      "start_idx": 431187,
      "end_idx": 432761,
      "metadata": {
        "num_sentences": 13,
        "num_words": 204,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "How-To",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive",
            "SNS topic",
            "notifications",
            "retrieval",
            "jobs",
            "upload",
            "Boto3",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Boto3",
            "vault_name",
            "topic_arn"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notifications",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation demonstrates how to create and configure an Amazon S3 Glacier vault, upload an archive, initiate a retrieval job, and set up notifications using Amazon SNS topics.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create and configure an Amazon S3 Glacier vault?",
            "How can I set up notifications for Amazon S3 Glacier events?",
            "What is the process for retrieving an archive from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "jobs",
          "Amazon SNS",
          "notifications",
          "archive",
          "retrieval",
          "vault",
          "Boto3",
          "topic_arn",
          "Amazon S3 Glacier",
          "upload",
          "vault_name",
          "SNS topic",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_281",
      "text": "Amazon S3 Glacier Developer Guide\nf\"\\nVault {vault.name} is not configured to notify an Amazon SNS\ntopic \"\nf\"when the archive retrieval completes so wait a few hours.\"\n)\nprint(\"\\nRetrieve your job output by running this script with the --retrieve\nflag.\")\n\u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference.\n\u2022 CreateVault\n\u2022 InitiateJob\n\u2022 ListJobs\n\u2022 ListVaults\n\u2022 SetVaultNotifications\n\u2022 UploadArchive\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nGet Amazon S3 Glacier archive content and delete the archive using an\nAWS SDK\nThe following code example shows how to:\n\u2022 List jobs for an Amazon S3 Glacier vault and get job status.\n\u2022 Get the output of a completed archive retrieval job.\n\u2022 Delete an archive.\n\u2022 Delete a vault.\nGet archive content and delete the archive API Version 2012-06-01 272",
      "start_idx": 432763,
      "end_idx": 433749,
      "metadata": {
        "num_sentences": 10,
        "num_words": 165,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference",
              "Guidance"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "archive retrieval",
            "SNS topic",
            "Boto3 API",
            "CreateVault",
            "InitiateJob",
            "ListJobs",
            "UploadArchive",
            "SetVaultNotifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "API Version 2012-06-01",
            "SNS topic",
            "AWS SDK Developer Guides"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "SDK Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "AWS Developer Guides"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a procedural guide for interacting with Amazon S3 Glacier using AWS SDK for Python (Boto3), including managing vaults, retrieving archive content, and deleting archives and vaults.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve archive content from Amazon S3 Glacier?",
            "What are the API methods available for managing S3 Glacier vaults?",
            "How do I delete an archive and vault using AWS SDK for Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "UploadArchive",
          "archive retrieval",
          "AWS SDK Developer Guides",
          "Amazon SNS",
          "Boto3 API",
          "SetVaultNotifications",
          "vault",
          "ListJobs",
          "InitiateJob",
          "AWS SDK for Python (Boto3)",
          "Amazon S3 Glacier",
          "CreateVault",
          "SNS topic",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_282",
      "text": "Amazon S3 Glacier Developer Guide\nPython\nSDK for Python (Boto3)\nNote\nThere's more on GitHub. Find the complete example and learn how to set up and run\nin the AWS Code Examples Repository.\nCreate a class that wraps S3 Glacier operations.\nimport argparse\nimport logging\nimport os\nimport boto3\nfrom botocore.exceptions import ClientError\nlogger = logging.getLogger(__name__)\nclass GlacierWrapper:\n\"\"\"Encapsulates Amazon S3 Glacier API operations.\"\"\"\ndef __init__(self, glacier_resource):\n\"\"\"\n:param glacier_resource: A Boto3 Amazon S3 Glacier resource.\n\"\"\"\nself.glacier_resource = glacier_resource\n@staticmethod\ndef list_jobs(vault, job_type):\n\"\"\"\nLists jobs by type for the specified vault.\n:param vault: The vault to query.\n:param job_type: The type of job to list.\n:return: The list of jobs of the requested type.\n\"\"\"\njob_list = []\ntry:\nif job_type == \"all\":\nGet archive content and delete the archive API Version 2012-06-01 273",
      "start_idx": 433751,
      "end_idx": 434679,
      "metadata": {
        "num_sentences": 10,
        "num_words": 136,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "Python SDK",
            "GlacierWrapper",
            "list_jobs",
            "vault",
            "job_type",
            "AWS",
            "ClientError",
            "API operations"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "AWS Code Examples Repository",
            "GlacierWrapper",
            "ClientError"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Python Development",
            "AWS SDKs"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3",
            "Python",
            "AWS Code Examples Repository"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a Python example using Boto3 to encapsulate Amazon S3 Glacier operations, including listing jobs by type for a specified vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list jobs in an Amazon S3 Glacier vault using Python?",
            "What is the GlacierWrapper class in this example?",
            "How can I handle exceptions when working with Amazon S3 Glacier in Python?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "list_jobs",
          "job_type",
          "API operations",
          "AWS Code Examples Repository",
          "vault",
          "Boto3",
          "Python SDK",
          "ClientError",
          "Amazon S3 Glacier",
          "GlacierWrapper"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_285",
      "text": "Amazon S3 Glacier Developer Guide\nShows how to:\n* List jobs for a vault and get job status.\n* Get the output of a completed archive retrieval job.\n* Delete an archive.\n* Delete a vault.\n:param glacier: A Boto3 Amazon S3 Glacier resource.\n:param vault_name: The name of the vault to query for jobs.\n\"\"\"\nvault = glacier.glacier_resource.Vault(\"-\", vault_name)\ntry:\nvault.load()\nexcept ClientError as err:\nif err.response[\"Error\"][\"Code\"] == \"ResourceNotFoundException\":\nprint(\nf\"\\nVault {vault_name} doesn't exist. You must first run this\nscript \"\nf\"with the --upload flag to create the vault.\"\n)\nreturn\nelse:\nraise\nprint(f\"\\nGetting completed jobs for {vault.name}.\")\njobs = glacier.list_jobs(vault, \"completed\")\nif not jobs:\nprint(\"\\nNo completed jobs found. Give it some time and try again\nlater.\")\nreturn\nretrieval_job = None\nfor job in jobs:\nif job.action == \"ArchiveRetrieval\" and job.status_code == \"Succeeded\":\nretrieval_job = job\nbreak\nif retrieval_job is None:\nprint(\n\"\\nNo ArchiveRetrieval jobs found. Give it some time and try again \"\n\"later.\"\n)\nreturn\nprint(f\"\\nGetting output from job {retrieval_job.id}.\")\narchive_bytes = glacier.get_job_output(retrieval_job)\nGet archive content and delete the archive API Version 2012-06-01 276",
      "start_idx": 436749,
      "end_idx": 437991,
      "metadata": {
        "num_sentences": 15,
        "num_words": 177,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "CodeExample",
              "ErrorHandling",
              "APIInteraction"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Boto3",
            "vault",
            "archive retrieval",
            "list jobs",
            "completed jobs",
            "ClientError",
            "ResourceNotFoundException",
            "API Version 2012-06-01",
            "job output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Boto3",
            "Vault",
            "ClientError",
            "ResourceNotFoundException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Boto3"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to interact with Amazon S3 Glacier using Boto3, including listing jobs, retrieving job outputs, and handling errors such as missing vaults.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I list completed jobs for a vault in Amazon S3 Glacier?",
            "What steps are needed to retrieve the output of an archive retrieval job?",
            "How should errors like ResourceNotFoundException be handled in this context?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "list jobs",
          "archive retrieval",
          "completed jobs",
          "Vault",
          "vault",
          "Boto3",
          "ClientError",
          "job output",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "ResourceNotFoundException"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_286",
      "text": "Amazon S3 Glacier Developer Guide\narchive_str = archive_bytes.decode(\"utf-8\")\nprint(\"\\nGot archive data. Printing the first 10 lines.\")\nprint(os.linesep.join(archive_str.split(os.linesep)[:10]))\nprint(f\"\\nDeleting the archive from {vault.name}.\")\narchive = glacier.glacier_resource.Archive(\n\"-\", vault.name, retrieval_job.archive_id\n)\nglacier.delete_archive(archive)\nprint(f\"\\nDeleting {vault.name}.\")\nglacier.delete_vault(vault)\n\u2022 For API details, see the following topics in AWS SDK for Python (Boto3) API Reference.\n\u2022 DeleteArchive\n\u2022 DeleteVault\n\u2022 GetJobOutput\n\u2022 ListJobs\nFor a complete list of AWS SDK developer guides and code examples, see Using S3 Glacier with an\nAWS SDK. This topic also includes information about getting started and details about previous\nSDK versions.\nGet archive content and delete the archive API Version 2012-06-01 277",
      "start_idx": 437993,
      "end_idx": 438842,
      "metadata": {
        "num_sentences": 8,
        "num_words": 102,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "API Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "vault",
            "retrieval_job",
            "API",
            "AWS SDK",
            "Boto3",
            "DeleteArchive",
            "DeleteVault",
            "GetJobOutput"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Python (Boto3)",
            "vault.name",
            "retrieval_job.archive_id",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Python (Boto3)",
            "os.linesep"
          ]
        },
        "semantic": {
          "summary": "This documentation provides procedural guidance and code examples for interacting with Amazon S3 Glacier, including retrieving archive data and deleting archives and vaults using AWS SDK for Python (Boto3).",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve archive data from Amazon S3 Glacier?",
            "What are the steps to delete a vault in Amazon S3 Glacier?",
            "Where can I find API details for AWS SDK for Python (Boto3)?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "retrieval_job.archive_id",
          "archive",
          "DeleteVault",
          "API",
          "vault",
          "Boto3",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "DeleteArchive",
          "GetJobOutput",
          "AWS SDK for Python (Boto3)",
          "AWS SDK",
          "retrieval_job",
          "vault.name"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_287",
      "text": "Amazon S3 Glacier Developer Guide\nSecurity in Amazon S3 Glacier\nCloud security at AWS is the highest priority. As an AWS customer, you benefit from a data center\nand network architecture that are built to meet the requirements of the most security-sensitive\norganizations.\nSecurity is a shared responsibility between AWS and you. The shared responsibility model describes\nthis as security of the cloud and security in the cloud:\n\u2022 Security of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS\nservices in the AWS Cloud. AWS also provides you with services that you can use securely. The\neffectiveness of our security is regularly tested and verified by third-party auditors as part of the\nAWS compliance programs. To learn about the compliance programs that apply to Amazon S3\nGlacier (S3 Glacier), see AWS Services in Scope by Compliance Program.\n\u2022 Security in the cloud \u2013 Your responsibility is determined by the AWS service that you use. You\nare also responsible for other factors including the sensitivity of your data, your organization\u2019s\nrequirements, and applicable laws and regulations.\nThis documentation will help you understand how to apply the shared responsibility model when\nusing S3 Glacier. The following topics show you how to configure S3 Glacier to meet your security\nand compliance objectives. You'll also learn how to use other AWS services that can help you to\nmonitor and secure your S3 Glacier resources.\nTopics\n\u2022 Data Protection in Amazon S3 Glacier\n\u2022 Identity and Access Management for Amazon S3 Glacier\n\u2022 Logging and Monitoring in Amazon S3 Glacier\n\u2022 Compliance Validation for Amazon S3 Glacier\n\u2022 Resilience in Amazon S3 Glacier\n\u2022 Infrastructure Security in Amazon S3 Glacier\nData Protection in Amazon S3 Glacier\nAmazon S3 Glacier (S3 Glacier) provides highly durable cloud storage for data archiving and long-\nterm backup. S3 Glacier is designed to deliver 99.999999999 percent durability and provides\nData Protection API Version 2012-06-01 278",
      "start_idx": 438844,
      "end_idx": 440845,
      "metadata": {
        "num_sentences": 14,
        "num_words": 320,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Compliance",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS Cloud",
            "Shared Responsibility Model",
            "Compliance Programs",
            "Data Protection",
            "Identity and Access Management",
            "Logging and Monitoring",
            "Resilience",
            "Infrastructure Security",
            "Durability"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "Data Protection API",
            "AWS Compliance Programs",
            "Identity and Access Management"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Data Protection",
            "Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Cloud"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the shared responsibility model for security in Amazon S3 Glacier, detailing how to configure and secure S3 Glacier resources to meet compliance and security objectives. It also covers related topics such as data protection, monitoring, and infrastructure resilience.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the shared responsibility model in AWS?",
            "How can I secure and monitor Amazon S3 Glacier resources?",
            "What compliance programs apply to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Security]",
        "tf_idf_keywords": [
          "Infrastructure Security",
          "AWS",
          "Logging and Monitoring",
          "AWS Compliance Programs",
          "Durability",
          "Resilience",
          "Identity and Access Management",
          "Amazon S3 Glacier",
          "Data Protection",
          "Shared Responsibility Model",
          "Data Protection API",
          "AWS Cloud",
          "Compliance Programs"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_288",
      "text": "Amazon S3 Glacier Developer Guide\ncomprehensive security and compliance capabilities that can help you meet stringent regulatory\nrequirements. S3 Glacier redundantly stores data in multiple AWS Availability Zones (AZ) and on\nmultiple devices within each AZ. To increase durability, S3 Glacier synchronously stores your data\nacross multiple AZs before confirming a successful upload.\nFor more information about the AWS global cloud infrastructure, see Global Infrastructure.\nFor data protection purposes, we recommend that you protect AWS account credentials and give\nindividual users, groups, or roles only the permissions necessary to fulfill their job duties.\nIf you require FIPS 140-2 validated cryptographic modules when accessing AWS through a\ncommand line interface or an API, use a FIPS endpoint. For more information about the available\nFIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2.\nTopics\n\u2022 Data Encryption\n\u2022 Key Management\n\u2022 Internetwork Traffic Privacy\nData Encryption\nData protection refers to protecting data while in-transit (as it travels to and from Amazon S3\nGlacier) and at rest (while it is stored in AWS data centers). You can protect data in transit that is\nuploaded directly to S3 Glacier using Secure Sockets Layer (SSL) or client-side encryption.\nYou can also access S3 Glacier through Amazon S3. Amazon S3 supports lifecycle configuration on\nan Amazon S3 bucket, which enables you to transition objects to the S3 Glacier storage class for\narchival. Data in transit between Amazon S3 and S3 Glacier via lifecycle policies is encrypted using\nSSL.\nData at rest stored in S3 Glacier is automatically server-side encrypted using 256-bit Advanced\nEncryption Standard (AES-256) with keys maintained by AWS. If you prefer to manage your\nown keys, you can also use client-side encryption before storing data in S3 Glacier. For more\ninformation about how to setup default encryption for Amazon S3, see Amazon S3 Default\nEncryption in the Amazon Simple Storage Service User Guide.\nData Encryption API Version 2012-06-01 279",
      "start_idx": 440847,
      "end_idx": 442912,
      "metadata": {
        "num_sentences": 16,
        "num_words": 315,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Compliance",
              "Encryption"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "data encryption",
            "FIPS 140-2",
            "AWS Availability Zones",
            "SSL",
            "AES-256",
            "client-side encryption",
            "server-side encryption",
            "lifecycle configuration",
            "data protection"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Availability Zones",
            "FIPS 140-2",
            "Advanced Encryption Standard (AES-256)",
            "Amazon S3"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "Data Encryption",
            "Regulatory Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon S3",
            "AWS"
          ],
          "mentioned_tools": [
            "FIPS endpoints"
          ]
        },
        "semantic": {
          "summary": "The documentation explains Amazon S3 Glacier's security and compliance capabilities, including data encryption methods for data in transit and at rest, as well as lifecycle configuration for transitioning data between S3 and S3 Glacier.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier ensure data encryption?",
            "What are the compliance features of Amazon S3 Glacier?",
            "How can I manage encryption keys for data stored in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "Advanced Encryption Standard (AES-256)",
          "AWS",
          "SSL",
          "FIPS 140-2",
          "client-side encryption",
          "data encryption",
          "Amazon S3",
          "AWS Availability Zones",
          "AES-256",
          "lifecycle configuration",
          "data protection",
          "Amazon S3 Glacier",
          "server-side encryption",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_289",
      "text": "Amazon S3 Glacier Developer Guide\nKey Management\nServer-side encryption addresses data encryption at rest\u2014that is, Amazon S3 Glacier encrypts your\ndata as it writes it to its data centers and decrypts it for you when you access it. As long as you\nauthenticate your request and you have access permissions, there is no difference in the way you\naccess encrypted or unencrypted data.\nData at rest stored in S3 Glacier is automatically server-side encrypted using AES-256, using keys\nmaintained by AWS. As an additional safeguard, AWS encrypts the key itself with a root key that we\nregularly rotate.\nInternetwork Traffic Privacy\nAccess to Amazon S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2. We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS), such as Ephemeral Diffie-Hellman (DHE) or\nElliptic Curve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later\nsupport these modes. Additionally, you must sign requests using an access key ID and a secret\naccess key that are associated with an IAM principal, or you can use the AWS Security Token Service\n(AWS STS) to generate temporary security credentials to sign requests.\nVPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon Simple Storage Service\n(Amazon S3) VPC endpoints if you access S3 Glacier as a storage tier integrated with Amazon S3.\nFor more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide.\nIdentity and Access Management for Amazon S3 Glacier\nAWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely\ncontrol access to AWS resources. IAM administrators control who can be authenticated (signed in)\nKey Management API Version 2012-06-01 280",
      "start_idx": 442914,
      "end_idx": 445273,
      "metadata": {
        "num_sentences": 16,
        "num_words": 369,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Security",
              "Configuration",
              "Networking"
            ]
          },
          "keywords": [
            "server-side encryption",
            "AES-256",
            "TLS 1.2",
            "Perfect Forward Secrecy",
            "IAM",
            "VPC endpoints",
            "Amazon S3 Glacier",
            "AWS PrivateLink",
            "AWS STS",
            "root key rotation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management (IAM)",
            "AWS Security Token Service (AWS STS)",
            "Amazon VPC",
            "Amazon Simple Storage Service (Amazon S3)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "Networking",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management (IAM)",
            "Amazon VPC"
          ],
          "mentioned_tools": [
            "Java 7",
            "AWS Security Token Service (AWS STS)"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide discusses key management, internetwork traffic privacy, VPC endpoints, and IAM for secure access and encryption of data at rest and in transit. It covers encryption standards like AES-256, TLS, and Perfect Forward Secrecy, as well as access control through IAM and VPC integration.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier handle server-side encryption?",
            "What are the network security requirements for accessing Amazon S3 Glacier?",
            "Can VPC endpoints be used with Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "Amazon VPC",
          "IAM",
          "Amazon Simple Storage Service (Amazon S3)",
          "TLS 1.2",
          "AWS Security Token Service (AWS STS)",
          "VPC endpoints",
          "AWS PrivateLink",
          "Perfect Forward Secrecy",
          "AES-256",
          "AWS STS",
          "Amazon S3 Glacier",
          "server-side encryption",
          "root key rotation",
          "AWS Identity and Access Management (IAM)"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_290",
      "text": "Amazon S3 Glacier Developer Guide\nand authorized (have permissions) to use S3 Glacier resources. IAM is an AWS service that you can\nuse with no additional charge.\nTopics\n\u2022 Audience\n\u2022 Authenticating with identities\n\u2022 Managing access using policies\n\u2022 How Amazon S3 Glacier works with IAM\n\u2022 Identity-based policy examples for Amazon S3 Glacier\n\u2022 Resource-based policy examples for Amazon S3 Glacier\n\u2022 Troubleshooting Amazon S3 Glacier identity and access\n\u2022 API Permissions Reference\nAudience\nHow you use AWS Identity and Access Management (IAM) differs, depending on the work that you\ndo in S3 Glacier.\nService user \u2013 If you use the S3 Glacier service to do your job, then your administrator provides you\nwith the credentials and permissions that you need. As you use more S3 Glacier features to do your\nwork, you might need additional permissions. Understanding how access is managed can help you\nrequest the right permissions from your administrator. If you cannot access a feature in S3 Glacier,\nsee Troubleshooting Amazon S3 Glacier identity and access.\nService administrator \u2013 If you're in charge of S3 Glacier resources at your company, you probably\nhave full access to S3 Glacier. It's your job to determine which S3 Glacier features and resources\nyour service users should access. You must then submit requests to your IAM administrator to\nchange the permissions of your service users. Review the information on this page to understand\nthe basic concepts of IAM. To learn more about how your company can use IAM with S3 Glacier, see\nHow Amazon S3 Glacier works with IAM.\nIAM administrator \u2013 If you're an IAM administrator, you might want to learn details about how\nyou can write policies to manage access to S3 Glacier. To view example S3 Glacier identity-based\npolicies that you can use in IAM, see Identity-based policy examples for Amazon S3 Glacier.\nAudience API Version 2012-06-01 281",
      "start_idx": 445275,
      "end_idx": 447169,
      "metadata": {
        "num_sentences": 15,
        "num_words": 312,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Audience",
              "IAM Integration",
              "Policy Examples",
              "Troubleshooting"
            ]
          },
          "keywords": [
            "IAM",
            "S3 Glacier",
            "permissions",
            "identity-based policies",
            "resource-based policies",
            "API",
            "troubleshooting",
            "access management",
            "administrators",
            "credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Identity and Access Management (IAM)",
            "IAM administrator",
            "Service user",
            "Service administrator"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage and Access Management",
          "secondary_categories": [
            "IAM Policies",
            "AWS Services"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage access and permissions for Amazon S3 Glacier using AWS Identity and Access Management (IAM), including examples of identity-based and resource-based policies, troubleshooting tips, and roles for different users such as service users, administrators, and IAM administrators.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can IAM be used to manage access to Amazon S3 Glacier?",
            "What are examples of identity-based policies for S3 Glacier?",
            "How do I troubleshoot access issues in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage and Access Management]",
        "tf_idf_keywords": [
          "troubleshooting",
          "IAM",
          "permissions",
          "API",
          "credentials",
          "IAM administrator",
          "Service user",
          "Service administrator",
          "identity-based policies",
          "Amazon S3 Glacier",
          "administrators",
          "resource-based policies",
          "AWS Identity and Access Management (IAM)",
          "access management",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_291",
      "text": "Amazon S3 Glacier Developer Guide\nAuthenticating with identities\nAuthentication is how you sign in to AWS using your identity credentials. You must be\nauthenticated (signed in to AWS) as the AWS account root user, as an IAM user, or by assuming an\nIAM role.\nYou can sign in to AWS as a federated identity by using credentials provided through an identity\nsource. AWS IAM Identity Center (IAM Identity Center) users, your company's single sign-on\nauthentication, and your Google or Facebook credentials are examples of federated identities.\nWhen you sign in as a federated identity, your administrator previously set up identity federation\nusing IAM roles. When you access AWS by using federation, you are indirectly assuming a role.\nDepending on the type of user you are, you can sign in to the AWS Management Console or the\nAWS access portal. For more information about signing in to AWS, see How to sign in to your AWS\naccount in the AWS Sign-In User Guide.\nIf you access AWS programmatically, AWS provides a software development kit (SDK) and a\ncommand line interface (CLI) to cryptographically sign your requests by using your credentials. If\nyou don't use AWS tools, you must sign requests yourself. For more information about using the\nrecommended method to sign requests yourself, see AWS Signature Version 4 for API requests in\nthe IAM User Guide.\nRegardless of the authentication method that you use, you might be required to provide additional\nsecurity information. For example, AWS recommends that you use multi-factor authentication\n(MFA) to increase the security of your account. To learn more, see Multi-factor authentication in\nthe AWS IAM Identity Center User Guide and AWS Multi-factor authentication in IAM in the IAM User\nGuide.\nAWS account root user\nWhen you create an AWS account, you begin with one sign-in identity that has complete access to\nall AWS services and resources in the account. This identity is called the AWS account root user and\nis accessed by signing in with the email address and password that you used to create the account.\nWe strongly recommend that you don't use the root user for your everyday tasks. Safeguard your\nroot user credentials and use them to perform the tasks that only the root user can perform. For\nthe complete list of tasks that require you to sign in as the root user, see Tasks that require root\nuser credentials in the IAM User Guide.\nAuthenticating with identities API Version 2012-06-01 282",
      "start_idx": 447171,
      "end_idx": 449627,
      "metadata": {
        "num_sentences": 20,
        "num_words": 409,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Authentication",
              "Security",
              "Identity Management"
            ]
          },
          "keywords": [
            "authentication",
            "AWS account root user",
            "IAM user",
            "federated identity",
            "IAM roles",
            "multi-factor authentication",
            "AWS SDK",
            "AWS CLI",
            "AWS Signature Version 4",
            "identity federation"
          ],
          "entities": [
            "AWS IAM Identity Center",
            "AWS account root user",
            "IAM roles",
            "AWS SDK",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Security",
            "Cloud Computing"
          ],
          "mentioned_services": [
            "AWS IAM Identity Center",
            "AWS Management Console",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This section explains how to authenticate with AWS using various identity credentials, including IAM users, federated identities, and the AWS account root user, while emphasizing security best practices like MFA.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the authentication methods available for AWS?",
            "How can I use federated identities to access AWS?",
            "Why is multi-factor authentication recommended for AWS accounts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "multi-factor authentication",
          "AWS CLI",
          "AWS IAM Identity Center",
          "IAM",
          "federated identity",
          "AWS Management Console",
          "IAM roles",
          "authentication",
          "AWS account root user",
          "identity federation",
          "AWS SDK",
          "IAM user"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_292",
      "text": "Amazon S3 Glacier Developer Guide\nFederated identity\nAs a best practice, require human users, including users that require administrator access, to use\nfederation with an identity provider to access AWS services by using temporary credentials.\nA federated identity is a user from your enterprise user directory, a web identity provider, the AWS\nDirectory Service, the Identity Center directory, or any user that accesses AWS services by using\ncredentials provided through an identity source. When federated identities access AWS accounts,\nthey assume roles, and the roles provide temporary credentials.\nFor centralized access management, we recommend that you use AWS IAM Identity Center. You can\ncreate users and groups in IAM Identity Center, or you can connect and synchronize to a set of users\nand groups in your own identity source for use across all your AWS accounts and applications. For\ninformation about IAM Identity Center, see What is IAM Identity Center? in the AWS IAM Identity\nCenter User Guide.\nIAM users and groups\nAn IAM user is an identity within your AWS account that has specific permissions for a single person\nor application. Where possible, we recommend relying on temporary credentials instead of creating\nIAM users who have long-term credentials such as passwords and access keys. However, if you have\nspecific use cases that require long-term credentials with IAM users, we recommend that you rotate\naccess keys. For more information, see Rotate access keys regularly for use cases that require long-\nterm credentials in the IAM User Guide.\nAn IAM group is an identity that specifies a collection of IAM users. You can't sign in as a group. You\ncan use groups to specify permissions for multiple users at a time. Groups make permissions easier\nto manage for large sets of users. For example, you could have a group named IAMAdmins and give\nthat group permissions to administer IAM resources.\nUsers are different from roles. A user is uniquely associated with one person or application, but\na role is intended to be assumable by anyone who needs it. Users have permanent long-term\ncredentials, but roles provide temporary credentials. To learn more, see Use cases for IAM users in\nthe IAM User Guide.\nIAM roles\nAn IAM role is an identity within your AWS account that has specific permissions. It is similar to an\nIAM user, but is not associated with a specific person. To temporarily assume an IAM role in the\nAWS Management Console, you can switch from a user to an IAM role (console). You can assume a\nAuthenticating with identities API Version 2012-06-01 283",
      "start_idx": 449629,
      "end_idx": 452216,
      "metadata": {
        "num_sentences": 24,
        "num_words": 425,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Best Practice",
              "Guidance",
              "Definition"
            ]
          },
          "keywords": [
            "federated identity",
            "temporary credentials",
            "IAM Identity Center",
            "IAM user",
            "IAM group",
            "IAM role",
            "access keys",
            "identity provider",
            "AWS Directory Service",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS IAM Identity Center",
            "AWS Directory Service",
            "IAM User Guide",
            "AWS Management Console"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Security",
            "AWS Services"
          ],
          "mentioned_services": [
            "AWS IAM Identity Center",
            "AWS Directory Service",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "IAM User Guide",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "The document provides best practices and guidance on using federated identities, IAM users, groups, and roles for managing access to AWS services. It emphasizes the use of temporary credentials and centralized access management using AWS IAM Identity Center.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the best practices for managing federated identities in AWS?",
            "When should IAM users be used instead of roles?",
            "How can IAM Identity Center simplify centralized access management?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "AWS IAM Identity Center",
          "federated identity",
          "AWS Directory Service",
          "IAM group",
          "permissions",
          "AWS Management Console",
          "IAM Identity Center",
          "temporary credentials",
          "Amazon S3 Glacier",
          "access keys",
          "IAM role",
          "IAM user",
          "identity provider"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_293",
      "text": "Amazon S3 Glacier Developer Guide\nrole by calling an AWS CLI or AWS API operation or by using a custom URL. For more information\nabout methods for using roles, see Methods to assume a role in the IAM User Guide.\nIAM roles with temporary credentials are useful in the following situations:\n\u2022 Federated user access \u2013 To assign permissions to a federated identity, you create a role\nand define permissions for the role. When a federated identity authenticates, the identity\nis associated with the role and is granted the permissions that are defined by the role. For\ninformation about roles for federation, see Creating a role for a third-party Identity Provider\nin the IAM User Guide. If you use IAM Identity Center, you configure a permission set. To control\nwhat your identities can access after they authenticate, IAM Identity Center correlates the\npermission set to a role in IAM. For information about permissions sets, see Permission sets in\nthe AWS IAM Identity Center User Guide.\n\u2022 Temporary IAM user permissions \u2013 An IAM user or role can assume an IAM role to temporarily\ntake on different permissions for a specific task.\n\u2022 Cross-account access \u2013 You can use an IAM role to allow someone (a trusted principal) in a\ndifferent account to access resources in your account. Roles are the primary way to grant cross-\naccount access. However, with some AWS services, you can attach a policy directly to a resource\n(instead of using a role as a proxy). To learn the difference between roles and resource-based\npolicies for cross-account access, see Cross account resource access in IAM in the IAM User Guide.\n\u2022 Cross-service access \u2013 Some AWS services use features in other AWS services. For example, when\nyou make a call in a service, it's common for that service to run applications in Amazon EC2 or\nstore objects in Amazon S3. A service might do this using the calling principal's permissions,\nusing a service role, or using a service-linked role.\n\u2022 Forward access sessions (FAS) \u2013 When you use an IAM user or role to perform actions in\nAWS, you are considered a principal. When you use some services, you might perform an\naction that then initiates another action in a different service. FAS uses the permissions of the\nprincipal calling an AWS service, combined with the requesting AWS service to make requests\nto downstream services. FAS requests are only made when a service receives a request that\nrequires interactions with other AWS services or resources to complete. In this case, you must\nhave permissions to perform both actions. For policy details when making FAS requests, see\nForward access sessions.\n\u2022 Service role \u2013 A service role is an IAM role that a service assumes to perform actions on your\nbehalf. An IAM administrator can create, modify, and delete a service role from within IAM. For\nmore information, see Creating a role to delegate permissions to an AWS service in the IAM\nUser Guide.\nAuthenticating with identities API Version 2012-06-01 284",
      "start_idx": 452218,
      "end_idx": 455189,
      "metadata": {
        "num_sentences": 26,
        "num_words": 503,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Role-based Access Control",
              "IAM Permissions",
              "Cross-Service Operations"
            ]
          },
          "keywords": [
            "IAM roles",
            "temporary credentials",
            "federated user access",
            "cross-account access",
            "service role",
            "permission set",
            "Forward access sessions",
            "resource-based policies",
            "service-linked role",
            "cross-service access"
          ],
          "entities": [
            "Amazon S3",
            "Amazon EC2",
            "AWS IAM",
            "IAM Identity Center",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Security",
            "AWS Service Integration"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon EC2",
            "IAM Identity Center"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the use of IAM roles in AWS for managing temporary credentials, federated user access, cross-account access, and cross-service operations. It also details service-linked roles and forward access sessions for secure and efficient resource access.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can IAM roles be used for cross-account access in AWS?",
            "What are Forward Access Sessions (FAS) in AWS IAM?",
            "What is the difference between roles and resource-based policies for cross-account access?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "Amazon EC2",
          "cross-service access",
          "AWS CLI",
          "Amazon S3",
          "service role",
          "Forward access sessions",
          "temporary credentials",
          "IAM roles",
          "service-linked role",
          "permission set",
          "IAM Identity Center",
          "federated user access",
          "resource-based policies",
          "AWS IAM",
          "cross-account access"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_294",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Service-linked role \u2013 A service-linked role is a type of service role that is linked to an AWS\nservice. The service can assume the role to perform an action on your behalf. Service-linked\nroles appear in your AWS account and are owned by the service. An IAM administrator can\nview, but not edit the permissions for service-linked roles.\n\u2022 Applications running on Amazon EC2 \u2013 You can use an IAM role to manage temporary\ncredentials for applications that are running on an EC2 instance and making AWS CLI or AWS API\nrequests. This is preferable to storing access keys within the EC2 instance. To assign an AWS role\nto an EC2 instance and make it available to all of its applications, you create an instance profile\nthat is attached to the instance. An instance profile contains the role and enables programs that\nare running on the EC2 instance to get temporary credentials. For more information, see Using\nan IAM role to grant permissions to applications running on Amazon EC2 instances in the IAM\nUser Guide.\nManaging access using policies\nYou control access in AWS by creating policies and attaching them to AWS identities or resources.\nA policy is an object in AWS that, when associated with an identity or resource, defines their\npermissions. AWS evaluates these policies when a principal (user, root user, or role session) makes\na request. Permissions in the policies determine whether the request is allowed or denied. Most\npolicies are stored in AWS as JSON documents. For more information about the structure and\ncontents of JSON policy documents, see Overview of JSON policies in the IAM User Guide.\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nBy default, users and roles have no permissions. To grant users permission to perform actions on\nthe resources that they need, an IAM administrator can create IAM policies. The administrator can\nthen add the IAM policies to roles, and users can assume the roles.\nIAM policies define permissions for an action regardless of the method that you use to perform the\noperation. For example, suppose that you have a policy that allows the iam:GetRole action. A\nuser with that policy can get role information from the AWS Management Console, the AWS CLI, or\nthe AWS API.\nIdentity-based policies\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role. These policies control what actions users and roles can\nManaging access using policies API Version 2012-06-01 285",
      "start_idx": 455191,
      "end_idx": 457848,
      "metadata": {
        "num_sentences": 25,
        "num_words": 444,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Definition",
              "Explanation"
            ]
          },
          "keywords": [
            "IAM role",
            "service-linked role",
            "temporary credentials",
            "instance profile",
            "IAM policies",
            "JSON policies",
            "permissions",
            "principal",
            "access control",
            "AWS API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon EC2",
            "IAM User Guide",
            "AWS Management Console",
            "AWS CLI"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "Cloud Security",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon EC2",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API",
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the use of IAM roles and policies for managing access in AWS, including service-linked roles, instance profiles, and JSON-based identity policies.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are service-linked roles in AWS?",
            "How can IAM roles be used with Amazon EC2 instances?",
            "What is the structure of AWS JSON policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Amazon EC2",
          "AWS CLI",
          "access control",
          "IAM",
          "permissions",
          "AWS Management Console",
          "temporary credentials",
          "AWS API",
          "service-linked role",
          "Amazon S3 Glacier",
          "instance profile",
          "IAM role",
          "principal",
          "JSON policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_295",
      "text": "Amazon S3 Glacier Developer Guide\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide.\nIdentity-based policies can be further categorized as inline policies or managed policies. Inline\npolicies are embedded directly into a single user, group, or role. Managed policies are standalone\npolicies that you can attach to multiple users, groups, and roles in your AWS account. Managed\npolicies include AWS managed policies and customer managed policies. To learn how to choose\nbetween a managed policy or an inline policy, see Choose between managed policies and inline\npolicies in the IAM User Guide.\nResource-based policies\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions. You must specify a principal\nin a resource-based policy. Principals can include accounts, users, roles, federated users, or AWS\nservices.\nResource-based policies are inline policies that are located in that service. You can't use AWS\nmanaged policies from IAM in a resource-based policy.\nAccess control lists (ACLs)\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format.\nAmazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. To learn more\nabout ACLs, see Access control list (ACL) overview in the Amazon Simple Storage Service Developer\nGuide.\nOther policy types\nAWS supports additional, less-common policy types. These policy types can set the maximum\npermissions granted to you by the more common policy types.\n\u2022 Permissions boundaries \u2013 A permissions boundary is an advanced feature in which you set\nthe maximum permissions that an identity-based policy can grant to an IAM entity (IAM user\nor role). You can set a permissions boundary for an entity. The resulting permissions are the\nManaging access using policies API Version 2012-06-01 286",
      "start_idx": 457850,
      "end_idx": 460316,
      "metadata": {
        "num_sentences": 24,
        "num_words": 379,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Types",
              "Access Control"
            ]
          },
          "keywords": [
            "identity-based policies",
            "managed policies",
            "inline policies",
            "resource-based policies",
            "access control lists",
            "permissions boundaries",
            "IAM",
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC"
          ],
          "entities": [
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC",
            "IAM",
            "permissions boundaries"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control Policies",
          "secondary_categories": [
            "IAM Policies",
            "Resource Permissions"
          ],
          "mentioned_services": [
            "Amazon S3",
            "AWS WAF",
            "Amazon VPC"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation explains different types of AWS policies, including identity-based, resource-based, and access control lists (ACLs), along with their use cases and distinctions.",
          "intents": [
            "Reference",
            "Compare",
            "How-To"
          ],
          "potential_questions": [
            "What are the differences between managed and inline policies?",
            "How do resource-based policies work in AWS?",
            "What services support access control lists (ACLs)?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control Policies]",
        "tf_idf_keywords": [
          "inline policies",
          "Amazon VPC",
          "permissions boundaries",
          "Amazon S3",
          "IAM",
          "access control lists",
          "AWS WAF",
          "identity-based policies",
          "resource-based policies",
          "managed policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_296",
      "text": "Amazon S3 Glacier Developer Guide\nintersection of an entity's identity-based policies and its permissions boundaries. Resource-based\npolicies that specify the user or role in the Principal field are not limited by the permissions\nboundary. An explicit deny in any of these policies overrides the allow. For more information\nabout permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide.\n\u2022 Service control policies (SCPs) \u2013 SCPs are JSON policies that specify the maximum permissions\nfor an organization or organizational unit (OU) in AWS Organizations. AWS Organizations is a\nservice for grouping and centrally managing multiple AWS accounts that your business owns. If\nyou enable all features in an organization, then you can apply service control policies (SCPs) to\nany or all of your accounts. The SCP limits permissions for entities in member accounts, including\neach AWS account root user. For more information about Organizations and SCPs, see Service\ncontrol policies in the AWS Organizations User Guide.\n\u2022 Session policies \u2013 Session policies are advanced policies that you pass as a parameter when you\nprogrammatically create a temporary session for a role or federated user. The resulting session's\npermissions are the intersection of the user or role's identity-based policies and the session\npolicies. Permissions can also come from a resource-based policy. An explicit deny in any of these\npolicies overrides the allow. For more information, see Session policies in the IAM User Guide.\nMultiple policy types\nWhen multiple types of policies apply to a request, the resulting permissions are more complicated\nto understand. To learn how AWS determines whether to allow a request when multiple policy\ntypes are involved, see Policy evaluation logic in the IAM User Guide.\nHow Amazon S3 Glacier works with IAM\nBefore you use IAM to manage access to S3 Glacier, learn what IAM features are available to use\nwith S3 Glacier.\nIAM features you can use with Amazon S3 Glacier\nIAM feature S3 Glacier support\nIdentity-based policies Yes\nResource-based policies Yes\nPolicy actions Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 287",
      "start_idx": 460318,
      "end_idx": 462500,
      "metadata": {
        "num_sentences": 18,
        "num_words": 342,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "IAM",
            "permissions boundaries",
            "service control policies",
            "session policies",
            "identity-based policies",
            "resource-based policies",
            "Amazon S3 Glacier",
            "AWS Organizations",
            "policy evaluation logic",
            "temporary session"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Organizations",
            "SCPs",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Identity and Access Management (IAM)",
          "secondary_categories": [
            "AWS Organizations",
            "Amazon S3 Glacier"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Organizations",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier integrates with AWS IAM policies, including identity-based, resource-based, service control, and session policies. It also outlines how permissions are evaluated when multiple policy types are involved.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier work with IAM policies?",
            "What are permissions boundaries in IAM?",
            "What are the differences between session policies and identity-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [AWS Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "policy evaluation logic",
          "AWS Organizations",
          "permissions boundaries",
          "IAM",
          "session policies",
          "SCPs",
          "identity-based policies",
          "Amazon S3 Glacier",
          "resource-based policies",
          "API Version 2012-06-01",
          "temporary session",
          "service control policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_297",
      "text": "Amazon S3 Glacier Developer Guide\nIAM feature S3 Glacier support\nPolicy resources Yes\nPolicy condition keys (service-specific) Yes\nACLs No\nABAC (tags in policies) No\nTemporary credentials Yes\nPrincipal permissions No\nService roles No\nService-linked roles No\nTo get a high-level view of how S3 Glacier and other AWS services work with most IAM features,\nsee AWS services that work with IAM in the IAM User Guide.\nIdentity-based policies for S3 Glacier\nSupports identity-based policies: Yes\nIdentity-based policies are JSON permissions policy documents that you can attach to an identity,\nsuch as an IAM user, group of users, or role. These policies control what actions users and roles can\nperform, on which resources, and under what conditions. To learn how to create an identity-based\npolicy, see Define custom IAM permissions with customer managed policies in the IAM User Guide.\nWith IAM identity-based policies, you can specify allowed or denied actions and resources as well\nas the conditions under which actions are allowed or denied. You can't specify the principal in an\nidentity-based policy because it applies to the user or role to which it is attached. To learn about all\nof the elements that you can use in a JSON policy, see IAM JSON policy elements reference in the\nIAM User Guide.\nIdentity-based policy examples for S3 Glacier\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 288",
      "start_idx": 462502,
      "end_idx": 464022,
      "metadata": {
        "num_sentences": 9,
        "num_words": 245,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "IAM",
            "identity-based policies",
            "permissions",
            "JSON policy",
            "ACLs",
            "ABAC",
            "temporary credentials",
            "service roles",
            "policy condition keys"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS services",
            "identity-based policies",
            "JSON policy elements"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier integrates with IAM, focusing on identity-based policies, permissions, and related features like temporary credentials and condition keys.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What IAM features does Amazon S3 Glacier support?",
            "How do identity-based policies work with S3 Glacier?",
            "Where can I find examples of identity-based policies for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Management]",
        "tf_idf_keywords": [
          "JSON policy",
          "ACLs",
          "IAM",
          "permissions",
          "policy condition keys",
          "service roles",
          "temporary credentials",
          "JSON policy elements",
          "Amazon S3 Glacier",
          "identity-based policies",
          "AWS services",
          "ABAC"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_298",
      "text": "Amazon S3 Glacier Developer Guide\nResource-based policies within S3 Glacier\nSupports resource-based policies: Yes\nResource-based policies are JSON policy documents that you attach to a resource. Examples of\nresource-based policies are IAM role trust policies and Amazon S3 bucket policies. In services that\nsupport resource-based policies, service administrators can use them to control access to a specific\nresource. For the resource where the policy is attached, the policy defines what actions a specified\nprincipal can perform on that resource and under what conditions. You must specify a principal\nin a resource-based policy. Principals can include accounts, users, roles, federated users, or AWS\nservices.\nTo enable cross-account access, you can specify an entire account or IAM entities in another\naccount as the principal in a resource-based policy. Adding a cross-account principal to a resource-\nbased policy is only half of establishing the trust relationship. When the principal and the resource\nare in different AWS accounts, an IAM administrator in the trusted account must also grant\nthe principal entity (user or role) permission to access the resource. They grant permission by\nattaching an identity-based policy to the entity. However, if a resource-based policy grants access\nto a principal in the same account, no additional identity-based policy is required. For more\ninformation, see Cross account resource access in IAM in the IAM User Guide.\nThe S3 Glacier service supports only one type of resource-based policy called a vault policy, which\nis attached to a vault. This policy defines which principals can perform actions on the vault.\nS3 Glacier vault policies manage permissions in the following ways:\n\u2022 Manage user permissions in an account using a single vault policy, instead of more than one\nindividual user policies.\n\u2022 Manage cross-account permissions as an alternative to using IAM roles.\nResource-based policy examples within S3 Glacier\nTo view examples of S3 Glacier resource-based policies, see Resource-based policy examples for\nAmazon S3 Glacier.\nPolicy actions for S3 Glacier\nSupports policy actions: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 289",
      "start_idx": 464024,
      "end_idx": 466232,
      "metadata": {
        "num_sentences": 18,
        "num_words": 336,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Access Management"
            ]
          },
          "keywords": [
            "resource-based policies",
            "IAM",
            "vault policy",
            "cross-account access",
            "principal",
            "permissions",
            "identity-based policy",
            "S3 Glacier",
            "trust relationship",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "vault policy",
            "AWS accounts",
            "IAM roles"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Management",
          "secondary_categories": [
            "IAM Policies",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains resource-based policies in Amazon S3 Glacier, focusing on vault policies for managing permissions and enabling cross-account access. It also highlights the relationship between resource-based and identity-based policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are resource-based policies in Amazon S3 Glacier?",
            "How can I use a vault policy to manage permissions in S3 Glacier?",
            "What is the difference between resource-based and identity-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Access Management]",
        "tf_idf_keywords": [
          "AWS accounts",
          "IAM",
          "permissions",
          "vault",
          "vault policy",
          "IAM roles",
          "cross-account access",
          "identity-based policy",
          "Amazon S3 Glacier",
          "resource-based policies",
          "trust relationship",
          "principal",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_299",
      "text": "Amazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nThe Action element of a JSON policy describes the actions that you can use to allow or deny\naccess in a policy. Policy actions usually have the same name as the associated AWS API operation.\nThere are some exceptions, such as permission-only actions that don't have a matching API\noperation. There are also some operations that require multiple actions in a policy. These\nadditional actions are called dependent actions.\nInclude actions in a policy to grant permissions to perform the associated operation.\nTo see a list of S3 Glacier actions, see Actions defined by Amazon S3 Glacier in the Service\nAuthorization Reference.\nPolicy actions in S3 Glacier use the following prefix before the action:\nglacier\nTo specify multiple actions in a single statement, separate them with commas.\n\"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n]\nYou can specify multiple actions using wildcards (*). For example, to specify all actions that begin\nwith the word Describe, include the following action:\n\"Action\": \"glacier:GetVault*\"\nTo view examples of S3 Glacier identity-based policies, see Identity-based policy examples for\nAmazon S3 Glacier.\nPolicy resources for S3 Glacier\nSupports policy resources: Yes\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 290",
      "start_idx": 466234,
      "end_idx": 467727,
      "metadata": {
        "num_sentences": 13,
        "num_words": 227,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Actions",
              "IAM Integration",
              "Examples"
            ]
          },
          "keywords": [
            "AWS JSON policies",
            "Action element",
            "dependent actions",
            "glacier prefix",
            "policy resources",
            "identity-based policies",
            "wildcards",
            "S3 Glacier actions",
            "IAM API",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS JSON policies",
            "Service Authorization Reference",
            "IAM API Version 2012-06-01",
            "Action element"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "IAM Integration",
            "AWS Permissions"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "AWS JSON policies"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use AWS JSON policies to define access permissions for Amazon S3 Glacier, including policy actions, dependent actions, and resources. It also provides examples and guidelines for specifying multiple actions and using wildcards.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I specify actions in an S3 Glacier policy?",
            "What is the prefix used for S3 Glacier policy actions?",
            "Where can I find examples of S3 Glacier identity-based policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "Service Authorization Reference",
          "dependent actions",
          "glacier prefix",
          "Action element",
          "permissions",
          "S3 Glacier actions",
          "identity-based policies",
          "AWS JSON policies",
          "IAM API",
          "Amazon S3 Glacier",
          "AWS IAM",
          "wildcards",
          "policy resources",
          "IAM API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_300",
      "text": "Amazon S3 Glacier Developer Guide\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nThe Resource JSON policy element specifies the object or objects to which the action applies.\nStatements must include either a Resource or a NotResource element. As a best practice,\nspecify a resource using its Amazon Resource Name (ARN). You can do this for actions that support\na specific resource type, known as resource-level permissions.\nFor actions that don't support resource-level permissions, such as listing operations, use a wildcard\n(*) to indicate that the statement applies to all resources.\n\"Resource\": \"*\"\nTo see a list of S3 Glacier resource types and their ARNs, see Resources defined by Amazon S3\nGlacier in the Service Authorization Reference. To learn which actions you can specify the ARN of\neach resource, see Actions defined by Amazon S3 Glacier.\nIn S3 Glacier, the primary resource is a vault. S3 Glacier supports policies only at the vault level.\nThat is, in an IAM policy, the Resource value that you specify can be a specific vault or a set of\nvaults in a specific AWS Region. S3 Glacier doesn't support archive-level permissions.\nFor all S3 Glacier actions, Resource specifies the vault on which you want to grant the\npermissions. These resources have unique Amazon Resource Names (ARNs) associated with them\nas shown in the following table, and you can use a wildcard character (*) in the ARN to match vault\nnames that start with the same prefix.\nS3 Glacier provides a set of operations to work with the S3 Glacier resources. For information on\nthe available operations, see API Reference for Amazon S3 Glacier.\nSome S3 Glacier API actions support multiple resources. For example, glacier:AddTagsToVault\naccesses examplevault1 and examplevault2, so a principal must have permissions to access both\nresources. To specify multiple resources in a single statement, separate the ARNs with commas.\n\"Resource\": [\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault1\",\",\n\"\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault2\",\"\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 291",
      "start_idx": 467729,
      "end_idx": 469961,
      "metadata": {
        "num_sentences": 21,
        "num_words": 341,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Resource-Level Permissions",
              "IAM Integration"
            ]
          },
          "keywords": [
            "AWS JSON policies",
            "Amazon Resource Name",
            "resource-level permissions",
            "S3 Glacier",
            "vault",
            "IAM policy",
            "wildcard",
            "API actions",
            "Resource element",
            "ARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "ARN",
            "IAM",
            "vaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS JSON policies"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use AWS JSON policies for managing access to Amazon S3 Glacier resources, focusing on vault-level permissions and the use of ARNs for resource identification.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I specify permissions for S3 Glacier vaults using IAM policies?",
            "What is the role of ARNs in S3 Glacier resource-level permissions?",
            "Which actions support resource-level permissions in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM policy",
          "API actions",
          "ARN",
          "vault",
          "Resource element",
          "Amazon Resource Name",
          "IAM",
          "vaults",
          "AWS Region",
          "Amazon S3 Glacier",
          "resource-level permissions",
          "AWS JSON policies",
          "wildcard",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_301",
      "text": "Amazon S3 Glacier Developer Guide\n]\nPolicy condition keys for S3 Glacier\nSupports service-specific policy condition keys: Yes\nAdministrators can use AWS JSON policies to specify who has access to what. That is, which\nprincipal can perform actions on what resources, and under what conditions.\nThe Condition element (or Condition block) lets you specify conditions in which a statement\nis in effect. The Condition element is optional. You can create conditional expressions that use\ncondition operators, such as equals or less than, to match the condition in the policy with values in\nthe request.\nIf you specify multiple Condition elements in a statement, or multiple keys in a single\nCondition element, AWS evaluates them using a logical AND operation. If you specify multiple\nvalues for a single condition key, AWS evaluates the condition using a logical OR operation. All of\nthe conditions must be met before the statement's permissions are granted.\nYou can also use placeholder variables when you specify conditions. For example, you can grant\nan IAM user permission to access a resource only if it is tagged with their IAM user name. For more\ninformation, see IAM policy elements: variables and tags in the IAM User Guide.\nAWS supports global condition keys and service-specific condition keys. To see all AWS global\ncondition keys, see AWS global condition context keys in the IAM User Guide.\nTo see a list of S3 Glacier condition keys, see Condition keys for Amazon S3 Glacier in the Service\nAuthorization Reference. To learn with which actions and resources you can use a condition key, see\nActions defined by Amazon S3 Glacier.\nFor examples of using the glacier\u2013specific condition keys, see Vault Lock Policies.\nACLs in S3 Glacier\nSupports ACLs: No\nAccess control lists (ACLs) control which principals (account members, users, or roles) have\npermissions to access a resource. ACLs are similar to resource-based policies, although they do not\nuse the JSON policy document format.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 292",
      "start_idx": 469963,
      "end_idx": 472014,
      "metadata": {
        "num_sentences": 19,
        "num_words": 331,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Example"
            ]
          },
          "keywords": [
            "policy condition keys",
            "AWS JSON policies",
            "Condition element",
            "IAM user",
            "global condition keys",
            "service-specific condition keys",
            "Vault Lock Policies",
            "ACLs",
            "Amazon S3 Glacier",
            "IAM API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "AWS global condition context keys",
            "Vault Lock Policies",
            "Service Authorization Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Policy Management",
          "secondary_categories": [
            "IAM Policies",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use policy condition keys and access control mechanisms in Amazon S3 Glacier, including global and service-specific keys, IAM integration, and Vault Lock Policies. It also clarifies that ACLs are not supported in S3 Glacier.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the policy condition keys supported by Amazon S3 Glacier?",
            "How does Amazon S3 Glacier work with IAM policies?",
            "Are ACLs supported in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policy Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Service Authorization Reference",
          "Vault Lock Policies",
          "ACLs",
          "policy condition keys",
          "IAM",
          "AWS global condition context keys",
          "service-specific condition keys",
          "Amazon S3 Glacier",
          "AWS JSON policies",
          "IAM API",
          "global condition keys",
          "IAM user",
          "Condition element"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_302",
      "text": "Amazon S3 Glacier Developer Guide\nABAC with S3 Glacier\nSupports ABAC (tags in policies): No\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions based\non attributes. In AWS, these attributes are called tags. You can attach tags to IAM entities (users or\nroles) and to many AWS resources. Tagging entities and resources is the first step of ABAC. Then\nyou design ABAC policies to allow operations when the principal's tag matches the tag on the\nresource that they are trying to access.\nABAC is helpful in environments that are growing rapidly and helps with situations where policy\nmanagement becomes cumbersome.\nTo control access based on tags, you provide tag information in the condition element of a policy\nusing the aws:ResourceTag/key-name, aws:RequestTag/key-name, or aws:TagKeys\ncondition keys.\nIf a service supports all three condition keys for every resource type, then the value is Yes for the\nservice. If a service supports all three condition keys for only some resource types, then the value is\nPartial.\nFor more information about ABAC, see Define permissions with ABAC authorization in the IAM User\nGuide. To view a tutorial with steps for setting up ABAC, see Use attribute-based access control\n(ABAC) in the IAM User Guide.\nUsing temporary credentials with S3 Glacier\nSupports temporary credentials: Yes\nSome AWS services don't work when you sign in using temporary credentials. For additional\ninformation, including which AWS services work with temporary credentials, see AWS services that\nwork with IAM in the IAM User Guide.\nYou are using temporary credentials if you sign in to the AWS Management Console using\nany method except a user name and password. For example, when you access AWS using your\ncompany's single sign-on (SSO) link, that process automatically creates temporary credentials. You\nalso automatically create temporary credentials when you sign in to the console as a user and then\nswitch roles. For more information about switching roles, see Switch from a user to an IAM role\n(console) in the IAM User Guide.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 293",
      "start_idx": 472016,
      "end_idx": 474164,
      "metadata": {
        "num_sentences": 18,
        "num_words": 342,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Authorization",
              "Access Control",
              "Credentials"
            ]
          },
          "keywords": [
            "ABAC",
            "tags",
            "policies",
            "temporary credentials",
            "IAM",
            "condition keys",
            "aws:ResourceTag",
            "aws:RequestTag",
            "aws:TagKeys",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Management Console",
            "AWS services",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Access Control and Authorization",
          "secondary_categories": [
            "Cloud Storage",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier supports attribute-based access control (ABAC) and temporary credentials, detailing conditions for tag-based policies and the use of temporary credentials for access management.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "Does Amazon S3 Glacier support ABAC?",
            "How can I use temporary credentials with Amazon S3 Glacier?",
            "What are the condition keys for tag-based policies in AWS?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Access Control and Authorization]",
        "tf_idf_keywords": [
          "aws:ResourceTag",
          "aws:RequestTag",
          "IAM",
          "aws:TagKeys",
          "AWS Management Console",
          "temporary credentials",
          "policies",
          "Amazon S3 Glacier",
          "tags",
          "AWS services",
          "API Version 2012-06-01",
          "ABAC",
          "S3 Glacier",
          "condition keys"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_303",
      "text": "Amazon S3 Glacier Developer Guide\nYou can manually create temporary credentials using the AWS CLI or AWS API. You can then use\nthose temporary credentials to access AWS. AWS recommends that you dynamically generate\ntemporary credentials instead of using long-term access keys. For more information, see\nTemporary security credentials in IAM.\nCross-service principal permissions for S3 Glacier\nSupports forward access sessions (FAS): No\nWhen you use an IAM user or role to perform actions in AWS, you are considered a principal.\nWhen you use some services, you might perform an action that then initiates another action in a\ndifferent service. FAS uses the permissions of the principal calling an AWS service, combined with\nthe requesting AWS service to make requests to downstream services. FAS requests are only made\nwhen a service receives a request that requires interactions with other AWS services or resources to\ncomplete. In this case, you must have permissions to perform both actions. For policy details when\nmaking FAS requests, see Forward access sessions.\nService roles for S3 Glacier\nSupports service roles: No\nA service role is an IAM role that a service assumes to perform actions on your behalf. An IAM\nadministrator can create, modify, and delete a service role from within IAM. For more information,\nsee Creating a role to delegate permissions to an AWS service in the IAM User Guide.\nWarning\nChanging the permissions for a service role might break S3 Glacier functionality. Edit\nservice roles only when S3 Glacier provides guidance to do so.\nService-linked roles for S3 Glacier\nSupports service-linked roles: No\nA service-linked role is a type of service role that is linked to an AWS service. The service can\nassume the role to perform an action on your behalf. Service-linked roles appear in your AWS\naccount and are owned by the service. An IAM administrator can view, but not edit the permissions\nfor service-linked roles.\nHow Amazon S3 Glacier works with IAM API Version 2012-06-01 294",
      "start_idx": 474166,
      "end_idx": 476175,
      "metadata": {
        "num_sentences": 20,
        "num_words": 326,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Warning"
            ]
          },
          "keywords": [
            "temporary credentials",
            "IAM user",
            "service roles",
            "service-linked roles",
            "forward access sessions",
            "permissions",
            "AWS CLI",
            "AWS API",
            "S3 Glacier",
            "security credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CLI",
            "AWS API",
            "IAM",
            "Forward Access Sessions (FAS)"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management (IAM)",
          "secondary_categories": [
            "AWS Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how Amazon S3 Glacier interacts with IAM, including the use of temporary credentials, forward access sessions, service roles, and service-linked roles, with associated permissions and warnings.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier use IAM roles and permissions?",
            "What are forward access sessions (FAS) in the context of S3 Glacier?",
            "What are the risks of modifying service roles for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Identity and Access Management (IAM)]",
        "tf_idf_keywords": [
          "AWS CLI",
          "security credentials",
          "permissions",
          "IAM",
          "service-linked roles",
          "service roles",
          "forward access sessions",
          "temporary credentials",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "AWS API",
          "Forward Access Sessions (FAS)",
          "IAM user"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_304",
      "text": "Amazon S3 Glacier Developer Guide\nFor details about creating or managing service-linked roles, see AWS services that work with IAM.\nFind a service in the table that includes a Yes in the Service-linked role column. Choose the Yes\nlink to view the service-linked role documentation for that service.\nIdentity-based policy examples for Amazon S3 Glacier\nBy default, users and roles don't have permission to create or modify S3 Glacier resources. They\nalso can't perform tasks by using the AWS Management Console, AWS Command Line Interface\n(AWS CLI), or AWS API. To grant users permission to perform actions on the resources that they\nneed, an IAM administrator can create IAM policies. The administrator can then add the IAM\npolicies to roles, and users can assume the roles.\nTo learn how to create an IAM identity-based policy by using these example JSON policy\ndocuments, see Create IAM policies (console) in the IAM User Guide.\nFor details about actions and resource types defined by S3 Glacier, including the format of the\nARNs for each of the resource types, see Actions, resources, and condition keys for Amazon S3\nGlacier in the Service Authorization Reference.\nThe following is an example policy that grants permissions for three S3 Glacier vault-related\nactions (glacier:CreateVault, glacier:DescribeVault and glacier:ListVaults) on\na resource, using the Amazon Resource Name (ARN) that identifies all of the vaults in the us-\nwest-2 AWS Region. ARNs uniquely identify AWS resources. For more information about ARNs\nused with S3 Glacier, see Policy resources for S3 Glacier.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:CreateVault\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"\n],\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\"\n}\n]\n}\nIdentity-based policy examples API Version 2012-06-01 295",
      "start_idx": 476177,
      "end_idx": 478032,
      "metadata": {
        "num_sentences": 13,
        "num_words": 276,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Example",
              "Permission Management",
              "Resource Identification"
            ]
          },
          "keywords": [
            "IAM policies",
            "S3 Glacier",
            "service-linked roles",
            "ARN",
            "vaults",
            "permissions",
            "AWS CLI",
            "AWS Management Console",
            "JSON policy",
            "identity-based policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "Service Authorization Reference",
            "ARN",
            "AWS Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "IAM Policy Management",
          "secondary_categories": [
            "AWS Resource Permissions",
            "Cloud Storage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS Management Console"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "The document provides guidance on creating IAM policies to manage permissions for Amazon S3 Glacier, including examples of JSON policies granting specific actions on vault resources using ARNs.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I create an IAM policy for Amazon S3 Glacier?",
            "What are the required permissions for managing S3 Glacier vaults?",
            "What is the format of ARNs used with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [IAM Policy Management]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Service Authorization Reference",
          "JSON policy",
          "AWS CLI",
          "ARN",
          "permissions",
          "AWS Management Console",
          "vaults",
          "service-linked roles",
          "IAM",
          "AWS Region",
          "identity-based policy",
          "Amazon S3 Glacier",
          "S3 Glacier",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_305",
      "text": "Amazon S3 Glacier Developer Guide\nThe policy grants permissions to create, list, and obtain descriptions of vaults in the us-west-2\nRegion. The wildcard character (*) at the end of the ARN means that this statement can match any\nvault name.\nImportant\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) because you don't know the vault name\nuntil after you create the vault.\nTopics\n\u2022 Policy best practices\n\u2022 Using the S3 Glacier console\n\u2022 Allow users to view their own permissions\n\u2022 Customer Managed Policy Examples\nPolicy best practices\nIdentity-based policies determine whether someone can create, access, or delete S3 Glacier\nresources in your account. These actions can incur costs for your AWS account. When you create or\nedit identity-based policies, follow these guidelines and recommendations:\n\u2022 Get started with AWS managed policies and move toward least-privilege permissions \u2013 To\nget started granting permissions to your users and workloads, use the AWS managed policies\nthat grant permissions for many common use cases. They are available in your AWS account. We\nrecommend that you reduce permissions further by defining AWS customer managed policies\nthat are specific to your use cases. For more information, see AWS managed policies or AWS\nmanaged policies for job functions in the IAM User Guide.\n\u2022 Apply least-privilege permissions \u2013 When you set permissions with IAM policies, grant only the\npermissions required to perform a task. You do this by defining the actions that can be taken on\nspecific resources under specific conditions, also known as least-privilege permissions. For more\ninformation about using IAM to apply permissions, see Policies and permissions in IAM in the\nIAM User Guide.\n\u2022 Use conditions in IAM policies to further restrict access \u2013 You can add a condition to your\npolicies to limit access to actions and resources. For example, you can write a policy condition to\nIdentity-based policy examples API Version 2012-06-01 296",
      "start_idx": 478034,
      "end_idx": 480074,
      "metadata": {
        "num_sentences": 14,
        "num_words": 324,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "Policy Guidelines",
              "Best Practices"
            ]
          },
          "keywords": [
            "AWS managed policies",
            "least-privilege permissions",
            "identity-based policies",
            "IAM policies",
            "S3 Glacier",
            "vault",
            "glacier:CreateVault",
            "policy conditions",
            "permissions",
            "wildcard character"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS managed policies",
            "us-west-2 Region",
            "glacier:CreateVault"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Security Best Practices"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS managed policies"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidelines and best practices for configuring identity-based policies for Amazon S3 Glacier, including the use of least-privilege permissions, wildcard characters in vault creation, and IAM policy conditions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure least-privilege permissions for S3 Glacier?",
            "What is the purpose of the wildcard character in glacier:CreateVault?",
            "How can I apply conditions to IAM policies for S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Identity and Access Management]",
        "tf_idf_keywords": [
          "least-privilege permissions",
          "us-west-2 Region",
          "IAM",
          "glacier:CreateVault",
          "vault",
          "permissions",
          "wildcard character",
          "identity-based policies",
          "Amazon S3 Glacier",
          "policy conditions",
          "AWS managed policies",
          "S3 Glacier",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_306",
      "text": "Amazon S3 Glacier Developer Guide\nspecify that all requests must be sent using SSL. You can also use conditions to grant access to\nservice actions if they are used through a specific AWS service, such as AWS CloudFormation. For\nmore information, see IAM JSON policy elements: Condition in the IAM User Guide.\n\u2022 Use IAM Access Analyzer to validate your IAM policies to ensure secure and functional\npermissions \u2013 IAM Access Analyzer validates new and existing policies so that the policies\nadhere to the IAM policy language (JSON) and IAM best practices. IAM Access Analyzer provides\nmore than 100 policy checks and actionable recommendations to help you author secure and\nfunctional policies. For more information, see Validate policies with IAM Access Analyzer in the\nIAM User Guide.\n\u2022 Require multi-factor authentication (MFA) \u2013 If you have a scenario that requires IAM users or\na root user in your AWS account, turn on MFA for additional security. To require MFA when API\noperations are called, add MFA conditions to your policies. For more information, see Secure API\naccess with MFA in the IAM User Guide.\nFor more information about best practices in IAM, see Security best practices in IAM in the IAM User\nGuide.\nUsing the S3 Glacier console\nTo access the Amazon S3 Glacier console, you must have a minimum set of permissions. These\npermissions must allow you to list and view details about the S3 Glacier resources in your AWS\naccount. If you create an identity-based policy that is more restrictive than the minimum required\npermissions, the console won't function as intended for entities (users or roles) with that policy.\nYou don't need to allow minimum console permissions for users that are making calls only to the\nAWS CLI or the AWS API. Instead, allow access to only the actions that match the API operation\nthat they're trying to perform.\nThe S3 Glacier console provides an integrated environment for you to create and manage S3\nGlacier vaults. At a minimum IAM identities that you create must be granted permissions for the\nglacier:ListVaults action to view the S3 Glacier console as shown in the following example.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Action\": [\nIdentity-based policy examples API Version 2012-06-01 297",
      "start_idx": 480076,
      "end_idx": 482322,
      "metadata": {
        "num_sentences": 18,
        "num_words": 371,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Best Practices",
              "Policy Guidance",
              "Permissions"
            ]
          },
          "keywords": [
            "IAM policies",
            "IAM Access Analyzer",
            "multi-factor authentication",
            "S3 Glacier console",
            "permissions",
            "IAM best practices",
            "MFA conditions",
            "identity-based policy",
            "API operations",
            "glacier:ListVaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM Access Analyzer",
            "AWS CloudFormation",
            "IAM User Guide",
            "AWS CLI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Identity and Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM Access Analyzer",
            "AWS CloudFormation"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "IAM Access Analyzer"
          ]
        },
        "semantic": {
          "summary": "This documentation provides guidance on using IAM policies and best practices for securely managing access to Amazon S3 Glacier, including using IAM Access Analyzer, enabling MFA, and setting minimum permissions for the S3 Glacier console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the best practices for securing access to Amazon S3 Glacier?",
            "How can I validate IAM policies using IAM Access Analyzer?",
            "What permissions are required to access the S3 Glacier console?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Identity and Access Management]",
        "tf_idf_keywords": [
          "IAM best practices",
          "IAM User Guide",
          "multi-factor authentication",
          "MFA conditions",
          "AWS CLI",
          "glacier:ListVaults",
          "S3 Glacier console",
          "permissions",
          "IAM Access Analyzer",
          "API operations",
          "identity-based policy",
          "Amazon S3 Glacier",
          "AWS CloudFormation",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_307",
      "text": "Amazon S3 Glacier Developer Guide\n\"glacier:ListVaults\"\n],\n\"Effect\": \"Allow\",\n\"Resource\": \"*\"\n}\n]\n}\nAWS addresses many common use cases by providing standalone IAM policies that are created\nand administered by AWS. Managed policies grant necessary permissions for common use cases so\nyou can avoid having to investigate what permissions are needed. For more information, see AWS\nManaged Policies in the IAM User Guide.\nThe following AWS managed policies, which you can attach to users in your account, are specific to\nS3 Glacier:\n\u2022 AmazonGlacierReadOnlyAccess \u2013 Grants read only access to S3 Glacier through the AWS\nManagement Console.\n\u2022 AmazonGlacierFullAccess \u2013 Grants full access to S3 Glacier through the AWS Management\nConsole.\nYou can also create your own custom IAM policies to allow permissions for S3 Glacier API actions\nand resources. You can attach these custom policies to the custom IAM roles that you create for\nyour S3 Glacier vaults.\nBoth of the S3 Glacier AWS Managed policies discussed in the next section grant permissions for\nglacier:ListVaults.\nFor more information, see Adding permissions to a user in the IAM User Guide.\nAllow users to view their own permissions\nThis example shows how you might create a policy that allows IAM users to view the inline and\nmanaged policies that are attached to their user identity. This policy includes permissions to\ncomplete this action on the console or programmatically using the AWS CLI or AWS API.\n{\nIdentity-based policy examples API Version 2012-06-01 298",
      "start_idx": 482324,
      "end_idx": 483843,
      "metadata": {
        "num_sentences": 12,
        "num_words": 243,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "IAM Policies",
              "Permissions",
              "API Actions"
            ]
          },
          "keywords": [
            "IAM policies",
            "S3 Glacier",
            "permissions",
            "managed policies",
            "custom policies",
            "glacier:ListVaults",
            "AmazonGlacierReadOnlyAccess",
            "AmazonGlacierFullAccess",
            "AWS CLI",
            "AWS API"
          ],
          "entities": [
            "AWS",
            "S3 Glacier",
            "IAM",
            "AmazonGlacierReadOnlyAccess",
            "AmazonGlacierFullAccess"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Permissions",
          "secondary_categories": [
            "IAM Policy Management",
            "AWS API Usage"
          ],
          "mentioned_services": [
            "S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "AWS Management Console",
            "AWS API"
          ]
        },
        "semantic": {
          "summary": "This documentation details IAM policies for Amazon S3 Glacier, including managed and custom policies, and provides an example policy for viewing user permissions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the AWS managed policies for S3 Glacier?",
            "How can I create custom IAM policies for S3 Glacier?",
            "What permissions does the glacier:ListVaults action require?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Permissions]",
        "tf_idf_keywords": [
          "IAM policies",
          "AWS",
          "AWS CLI",
          "glacier:ListVaults",
          "IAM",
          "permissions",
          "AmazonGlacierReadOnlyAccess",
          "AWS API",
          "AmazonGlacierFullAccess",
          "managed policies",
          "S3 Glacier",
          "custom policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_308",
      "text": "Amazon S3 Glacier Developer Guide\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ViewOwnUserInfo\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetUserPolicy\",\n\"iam:ListGroupsForUser\",\n\"iam:ListAttachedUserPolicies\",\n\"iam:ListUserPolicies\",\n\"iam:GetUser\"\n],\n\"Resource\": [\"arn:aws:iam::*:user/${aws:username}\"]\n},\n{\n\"Sid\": \"NavigateInConsole\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetGroupPolicy\",\n\"iam:GetPolicyVersion\",\n\"iam:GetPolicy\",\n\"iam:ListAttachedGroupPolicies\",\n\"iam:ListGroupPolicies\",\n\"iam:ListPolicyVersions\",\n\"iam:ListPolicies\",\n\"iam:ListUsers\"\n],\n\"Resource\": \"*\"\n}\n]\n}\nCustomer Managed Policy Examples\nIn this section, you can find example user policies that grant permissions for various S3 Glacier\nactions. These policies work when you are using S3 Glacier REST API, the Amazon SDKs, the AWS\nCLI, or, if applicable, the S3 Glacier management console.\nNote\nAll examples use the US West (Oregon) Region (us-west-2) and contain fictitious account\nIDs.\nIdentity-based policy examples API Version 2012-06-01 299",
      "start_idx": 483845,
      "end_idx": 484860,
      "metadata": {
        "num_sentences": 4,
        "num_words": 114,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Example",
              "IAM Permissions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "IAM Policy",
            "Permissions",
            "Resource ARN",
            "Actions",
            "Identity-based Policy",
            "REST API",
            "AWS CLI",
            "SDKs",
            "us-west-2"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS CLI",
            "US West (Oregon)",
            "ARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs"
          ]
        },
        "semantic": {
          "summary": "The documentation provides example IAM policies for managing permissions related to Amazon S3 Glacier actions using various tools, including REST API, AWS CLI, and SDKs. It includes sample code snippets and uses the US West (Oregon) region for illustration purposes.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are example IAM policies for Amazon S3 Glacier?",
            "How can I use IAM policies to manage permissions for S3 Glacier?",
            "What tools are compatible with these example policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM Policy",
          "AWS CLI",
          "Resource ARN",
          "IAM",
          "ARN",
          "REST API",
          "Permissions",
          "Actions",
          "Identity-based Policy",
          "us-west-2",
          "SDKs",
          "Amazon S3 Glacier",
          "US West (Oregon)"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_309",
      "text": "Amazon S3 Glacier Developer Guide\nExamples\n\u2022 Example 1: Allow a User to Download Archives from a Vault\n\u2022 Example 2: Allow a User to Create a Vault and Configure Notifications\n\u2022 Example 3: Allow a User to Upload Archives to a Specific Vault\n\u2022 Example 4: Allow a User Full Permissions on a Specific Vault\nExample 1: Allow a User to Download Archives from a Vault\nTo download an archive, you first initiate a job to retrieve the archive. After the retrieval job\nis complete, you can download the data. The following example policy grants permissions\nfor the glacier:InitiateJob action to initiate a job (which allows the user to retrieve an\narchive or a vault inventory from the vault), and permissions for the glacier:GetJobOutput\naction to download the retrieved data. The policy also grants permissions to perform the\nglacier:DescribeJob action so that the user can get the job status. For more information, see\nInitiate Job (POST jobs).\nThe policy grants these permissions on a vault named examplevault. You can get the vault ARN\nfrom the Amazon S3 Glacier console, or programmatically by calling either the Describe Vault (GET\nvault) or the List Vaults (GET vaults) API actions.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:InitiateJob\",\n\"glacier:GetJobOutput\",\n\"glacier:DescribeJob\"]\n}\n]\n}\nExample 2: Allow a User to Create a Vault and Configure Notifications\nThe following example policy grants permissions to create a vault in the us-west-2 Region as\nspecified in the Resource element and configure notifications. For more information about\nIdentity-based policy examples API Version 2012-06-01 300",
      "start_idx": 484862,
      "end_idx": 486576,
      "metadata": {
        "num_sentences": 9,
        "num_words": 260,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Configuration",
              "Permission Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "InitiateJob",
            "DescribeJob",
            "GetJobOutput",
            "ARN",
            "notifications",
            "Region",
            "permissions",
            "policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "us-west-2",
            "ARN",
            "123456789012"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policies",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Console",
            "API Actions"
          ]
        },
        "semantic": {
          "summary": "This documentation provides example IAM policies for managing user permissions in Amazon S3 Glacier, including downloading archives, creating vaults, and configuring notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can a user download archives from an Amazon S3 Glacier vault?",
            "What permissions are needed to create a vault and configure notifications in Amazon S3 Glacier?",
            "What API actions are associated with retrieving data from a Glacier vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "123456789012",
          "DescribeJob",
          "notifications",
          "examplevault",
          "ARN",
          "permissions",
          "vault",
          "policy",
          "InitiateJob",
          "us-west-2",
          "Amazon S3 Glacier",
          "GetJobOutput",
          "Region"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_310",
      "text": "Amazon S3 Glacier Developer Guide\nworking with notifications, see Configuring Vault Notifications in Amazon S3 Glacier. The policy\nalso grants permissions to list vaults in the AWS Region and get a specific vault description.\nImportant\nWhen you grant permissions to create a vault using the glacier:CreateVault\noperation, you must specify a wildcard character (*) in the Resource value because you\ndon't know the vault name until after you create the vault.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/*\",\n\"Action\":[\"glacier:CreateVault\",\n\"glacier:SetVaultNotifications\",\n\"glacier:GetVaultNotifications\",\n\"glacier:DeleteVaultNotifications\",\n\"glacier:DescribeVault\",\n\"glacier:ListVaults\"]\n}\n]\n}\nExample 3: Allow a User to Upload Archives to a Specific Vault\nThe following example policy grants permissions to upload archives to a specific vault in the\nus-west-2 Region. These permissions allow a user to upload an archive all at once using the\nUpload Archive (POST archive) API operation or in parts using the Initiate Multipart Upload (POST\nmultipart-uploads) API operation.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\nIdentity-based policy examples API Version 2012-06-01 301",
      "start_idx": 486578,
      "end_idx": 487924,
      "metadata": {
        "num_sentences": 6,
        "num_words": 167,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy",
              "Permissions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "CreateVault",
            "Resource value",
            "Wildcard character",
            "Upload Archive",
            "Multipart Upload",
            "us-west-2 Region",
            "Identity-based policy",
            "API operation"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vaults",
            "Resource ARN",
            "us-west-2 Region",
            "AWS Identity and Access Management (IAM)"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "IAM Policy Configuration",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": [
            "API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of IAM policies for configuring permissions in Amazon S3 Glacier, including creating vaults and uploading archives using specific API operations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure vault notifications in Amazon S3 Glacier?",
            "What IAM policy is required to upload archives to a specific vault?",
            "Why is a wildcard necessary when creating a vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Upload Archive",
          "us-west-2 Region",
          "Resource ARN",
          "Wildcard character",
          "Multipart Upload",
          "Vaults",
          "Resource value",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "Identity-based policy",
          "AWS Identity and Access Management (IAM)",
          "AWS IAM",
          "CreateVault",
          "API operation"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_311",
      "text": "Amazon S3 Glacier Developer Guide\n\"Action\":[\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:UploadMultipartPart\",\n\"glacier:ListParts\",\n\"glacier:ListMultipartUploads\",\n\"glacier:CompleteMultipartUpload\"]\n}\n]\n}\nExample 4: Allow a User Full Permissions on a Specific Vault\nThe following example policy grants permissions for all S3 Glacier actions on a vault named\nexamplevault.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:glacier:us-west-2:123456789012:vaults/\nexamplevault\",\n\"Action\":[\"glacier:*\"]\n}\n]\n}\nResource-based policy examples for Amazon S3 Glacier\nA S3 Glacier vault can have one vault access policy and one Vault Lock policy associated with it.\nA Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault. A Vault Lock policy is vault access policy that can be locked. After you\nlock a Vault Lock policy, the policy can't be changed. You can use a Vault Lock Policy to enforce\ncompliance controls.\nTopics\n\u2022 Vault Access Policies\n\u2022 Vault Lock Policies\nResource-based policy examples API Version 2012-06-01 302",
      "start_idx": 487926,
      "end_idx": 489062,
      "metadata": {
        "num_sentences": 7,
        "num_words": 152,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy Examples",
              "Permissions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "Vault Lock policy",
            "permissions",
            "compliance controls",
            "resource-based policy",
            "API Version 2012-06-01",
            "glacier:UploadArchive",
            "vaults",
            "glacier:*"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "vault access policy",
            "Vault Lock policy",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Control",
            "Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of resource-based policies for Amazon S3 Glacier, including vault access policies and Vault Lock policies for managing permissions and enforcing compliance controls.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I grant full permissions to a specific Amazon S3 Glacier vault?",
            "What is the difference between a vault access policy and a Vault Lock policy?",
            "How can I enforce compliance controls using Vault Lock policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "glacier:*",
          "Vault Lock policy",
          "permissions",
          "vaults",
          "glacier:UploadArchive",
          "Amazon S3 Glacier",
          "resource-based policy",
          "vault access policy",
          "API Version 2012-06-01",
          "compliance controls",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_312",
      "text": "Amazon S3 Glacier Developer Guide\nVault Access Policies\nAn Amazon S3 Glacier vault access policy is a resource-based policy that you can use to manage\npermissions to your vault.\nYou can create one vault access policy for each vault to manage permissions. You can modify\npermissions in a vault access policy at any time. S3 Glacier also supports a Vault Lock policy on\neach vault that, after you lock it, cannot be altered. For more information about working with Vault\nLock policies, see Vault Lock Policies.\nExamples\n\u2022 Example 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\n\u2022 Example 2: Grant Cross-Account Permissions for MFA Delete Operations\nExample 1: Grant Cross-Account Permissions for Specific Amazon S3 Glacier Actions\nThe following example policy grants cross-account permissions to two AWS accounts for a set of S3\nGlacier operations on a vault named examplevault.\nNote\nThe account that owns the vault is billed for all costs associated with the vault. All requests,\ndata transfer, and retrieval costs made by allowed external accounts are billed to the\naccount that owns the vault.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\":\"cross-account-upload\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\",\n\"arn:aws:iam::444455556666:root\"\n]\n},\n\"Effect\":\"Allow\",\n\"Action\": [\nResource-based policy examples API Version 2012-06-01 303",
      "start_idx": 489064,
      "end_idx": 490440,
      "metadata": {
        "num_sentences": 9,
        "num_words": 203,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Policy",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "Vault Lock policy",
            "cross-account permissions",
            "AWS accounts",
            "MFA Delete",
            "IAM",
            "resource-based policy",
            "permissions",
            "examplevault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Access Policies",
            "Vault Lock Policies",
            "AWS accounts",
            "IAM"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Management",
            "Security Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains vault access policies and provides examples of granting cross-account permissions for specific operations. It also discusses Vault Lock policies and their immutability after locking.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I grant cross-account permissions for Amazon S3 Glacier vaults?",
            "What is a Vault Lock policy in Amazon S3 Glacier?",
            "Can I modify a Vault Lock policy after it is locked?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS accounts",
          "Vault Lock Policies",
          "Vault Lock policy",
          "IAM",
          "permissions",
          "examplevault",
          "MFA Delete",
          "Amazon S3 Glacier",
          "resource-based policy",
          "vault access policy",
          "cross-account permissions",
          "Vault Access Policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_313",
      "text": "Amazon S3 Glacier Developer Guide\n\"glacier:UploadArchive\",\n\"glacier:InitiateMultipartUpload\",\n\"glacier:AbortMultipartUpload\",\n\"glacier:CompleteMultipartUpload\"\n],\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n]\n}\n]\n}\nExample 2: Grant Cross-Account Permissions for MFA Delete Operations\nYou can use multi-factor authentication (MFA) to protect your S3 Glacier resources. To provide\nan extra level of security, MFA requires users to prove physical possession of an MFA device by\nproviding a valid MFA code. For more information about configuring MFA access, see Configuring\nMFA-Protected API Access in the IAM User Guide.\nThe example policy grants an AWS account with temporary credentials permission to delete\narchives from a vault named examplevault, provided the request is authenticated with an MFA\ndevice. The policy uses the aws:MultiFactorAuthPresent condition key to specify this\nadditional requirement. For more information, see Available Keys for Conditions in the IAM User\nGuide.\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"add-mfa-delete-requirement\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::123456789012:root\"\n]\n},\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glacier:Delete*\"\n],\nResource-based policy examples API Version 2012-06-01 304",
      "start_idx": 490442,
      "end_idx": 491712,
      "metadata": {
        "num_sentences": 7,
        "num_words": 160,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Example",
              "Cross-Account Permissions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "MFA Delete",
            "IAM User Guide",
            "glacier:UploadArchive",
            "glacier:Delete*",
            "aws:MultiFactorAuthPresent",
            "vaults",
            "temporary credentials",
            "Resource-based policy",
            "MFA device"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MFA device",
            "IAM User Guide",
            "examplevault",
            "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Security",
          "secondary_categories": [
            "IAM Policies",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an example of configuring cross-account permissions with MFA Delete for Amazon S3 Glacier using IAM policies. It includes a policy example that requires MFA authentication to delete archives from a specific vault.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I configure MFA Delete for S3 Glacier?",
            "What are the permissions required for cross-account access to S3 Glacier?",
            "How does aws:MultiFactorAuthPresent work in IAM policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Security]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "examplevault",
          "IAM",
          "MFA Delete",
          "vaults",
          "glacier:UploadArchive",
          "temporary credentials",
          "arn:aws:glacier:us-west-2:999999999999:vaults/examplevault",
          "MFA device",
          "Amazon S3 Glacier",
          "aws:MultiFactorAuthPresent",
          "glacier:Delete*",
          "Resource-based policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_314",
      "text": "Amazon S3 Glacier Developer Guide\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/\nexamplevault\"\n],\n\"Condition\": {\n\"Bool\": {\n\"aws:MultiFactorAuthPresent\": true\n}\n}\n}\n]\n}\nVault Lock Policies\nAn Amazon S3 Glacier (S3 Glacier) vault can have one resource-based vault access policy and one\nVault Lock policy attached to it. A Vault Lock policy is a vault access policy that you can lock. Using\na Vault Lock policy can help you enforce regulatory and compliance requirements. Amazon S3\nGlacier provides a set of API operations for you to manage the Vault Lock policies, see Locking a\nVault by Using the S3 Glacier API.\nAs an example of a Vault Lock policy, suppose that you are required to retain archives for one\nyear before you can delete them. To implement this requirement, you can create a Vault Lock\npolicy that denies users permissions to delete an archive until the archive has existed for one\nyear. You can test this policy before locking it down. After you lock the policy, the policy becomes\nimmutable. For more information about the locking process, see Vault Lock Policies. If you want to\nmanage other user permissions that can be changed, you can use the vault access policy (see Vault\nAccess Policies).\nYou can use the S3 Glacier API, Amazon SDKs, AWS CLI, or the S3 Glacier console to create and\nmanage Vault Lock policies. For a list of S3 Glacier actions allowed for vault resource-based\npolicies, see API Permissions Reference.\nExamples\n\u2022 Example 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\n\u2022 Example 2: Deny Deletion Permissions Based on a Tag\nResource-based policy examples API Version 2012-06-01 305",
      "start_idx": 491714,
      "end_idx": 493364,
      "metadata": {
        "num_sentences": 13,
        "num_words": 272,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Management",
              "Compliance Enforcement"
            ]
          },
          "keywords": [
            "Vault Lock policy",
            "S3 Glacier API",
            "vault access policy",
            "archive retention",
            "regulatory compliance",
            "resource-based policy",
            "AWS CLI",
            "Amazon SDKs",
            "immutability",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS CLI",
            "Amazon SDKs",
            "API Permissions Reference"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Compliance Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "Amazon SDKs",
            "S3 Glacier console"
          ]
        },
        "semantic": {
          "summary": "The document explains Vault Lock policies in Amazon S3 Glacier, which enforce compliance by locking access policies and preventing archive deletion based on specific conditions, such as retention duration or tags.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do Vault Lock policies enforce compliance in Amazon S3 Glacier?",
            "What tools can be used to manage Vault Lock policies?",
            "What are examples of conditions for Vault Lock policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "API Permissions Reference",
          "AWS CLI",
          "S3 Glacier API",
          "Vault Lock policy",
          "permissions",
          "immutability",
          "archive retention",
          "Vault Lock",
          "regulatory compliance",
          "Amazon S3 Glacier",
          "resource-based policy",
          "vault access policy",
          "Amazon SDKs"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_315",
      "text": "Amazon S3 Glacier Developer Guide\nExample 1: Deny Deletion Permissions for Archives Less Than 365 Days Old\nSuppose that you have a regulatory requirement to retain archives for up to one year before you\ncan delete them. You can enforce that requirement by implementing the following Vault Lock\npolicy. The policy denies the glacier:DeleteArchive action on the examplevault vault if the\narchive being deleted is less than one year old. The policy uses the S3 Glacier-specific condition key\nArchiveAgeInDays to enforce the one-year retention requirement.\n{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\": \"deny-based-on-archive-age\",\n\"Principal\": \"*\",\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:123456789012:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThan\" : {\n\"glacier:ArchiveAgeInDays\" : \"365\"\n}\n}\n}\n]\n}\nExample 2: Deny Deletion Permissions Based on a Tag\nSuppose that you have a time-based retention rule that an archive can be deleted if it is less than a\nyear old. At the same time, suppose that you need to place a legal hold on your archives to prevent\ndeletion or modification for an indefinite duration during a legal investigation. In this case, the\nlegal hold takes precedence over the time-based retention rule specified in the Vault Lock policy.\nTo put these two rules in place, the following example policy has two statements:\n\u2022 The first statement denies deletion permissions for everyone, locking the vault. This lock is\nperformed by using the LegalHold tag.\nResource-based policy examples API Version 2012-06-01 306",
      "start_idx": 493366,
      "end_idx": 494954,
      "metadata": {
        "num_sentences": 10,
        "num_words": 235,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Policy Implementation",
              "Access Control"
            ]
          },
          "keywords": [
            "Vault Lock policy",
            "glacier:DeleteArchive",
            "ArchiveAgeInDays",
            "S3 Glacier",
            "regulatory requirement",
            "retention rule",
            "LegalHold tag",
            "time-based retention",
            "deletion permissions",
            "condition key"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "glacier:DeleteArchive",
            "examplevault",
            "LegalHold"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Policies",
          "secondary_categories": [
            "Access Management",
            "Data Retention"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of Vault Lock policies for Amazon S3 Glacier to enforce retention rules and prevent archive deletions based on conditions like age or legal holds.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I enforce a one-year retention policy in Amazon S3 Glacier?",
            "What is the purpose of the ArchiveAgeInDays condition key?",
            "How can I use tags to prevent archive deletion in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage Policies]",
        "tf_idf_keywords": [
          "time-based retention",
          "ArchiveAgeInDays",
          "Vault Lock policy",
          "glacier:DeleteArchive",
          "condition key",
          "examplevault",
          "retention rule",
          "deletion permissions",
          "Vault Lock",
          "regulatory requirement",
          "Amazon S3 Glacier",
          "LegalHold tag",
          "LegalHold",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_317",
      "text": "Amazon S3 Glacier Developer Guide\n}\n}\n}\n]\n}\nTroubleshooting Amazon S3 Glacier identity and access\nUse the following information to help you diagnose and fix common issues that you might\nencounter when working with S3 Glacier and IAM.\nTopics\n\u2022 I am not authorized to perform an action in S3 Glacier\n\u2022 I am not authorized to perform iam:PassRole\n\u2022 I want to allow people outside of my AWS account to access my S3 Glacier resources\nI am not authorized to perform an action in S3 Glacier\nIf you receive an error that you're not authorized to perform an action, your policies must be\nupdated to allow you to perform the action.\nThe following example error occurs when the mateojackson IAM user tries to use the console\nto view details about a fictional my-example-widget resource but doesn't have the fictional\nglacier:GetWidget permissions.\nUser: arn:aws:iam::123456789012:user/mateojackson is not authorized to perform:\nglacier:GetWidget on resource: my-example-widget\nIn this case, the policy for the mateojackson user must be updated to allow access to the my-\nexample-widget resource by using the glacier:GetWidget action.\nIf you need help, contact your AWS administrator. Your administrator is the person who provided\nyou with your sign-in credentials.\nI am not authorized to perform iam:PassRole\nIf you receive an error that you're not authorized to perform the iam:PassRole action, your\npolicies must be updated to allow you to pass a role to S3 Glacier.\nTroubleshooting API Version 2012-06-01 308",
      "start_idx": 495890,
      "end_idx": 497390,
      "metadata": {
        "num_sentences": 8,
        "num_words": 241,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Troubleshooting",
            "subtypes": [
              "Error Diagnosis",
              "Policy Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "IAM",
            "identity and access",
            "glacier:GetWidget",
            "iam:PassRole",
            "AWS administrator",
            "policies",
            "permissions",
            "API Version 2012-06-01",
            "resource access"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "glacier:GetWidget",
            "iam:PassRole",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Identity and Access Management",
          "secondary_categories": [
            "Cloud Storage",
            "Policy Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides troubleshooting guidance for common identity and access issues in Amazon S3 Glacier, including resolving unauthorized action errors and updating policies for specific permissions.",
          "intents": [
            "Debug",
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I resolve unauthorized access errors in Amazon S3 Glacier?",
            "What permissions are required to perform the glacier:GetWidget action?",
            "How can I update policies to allow iam:PassRole in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Troubleshooting] [Cloud Identity and Access Management]",
        "tf_idf_keywords": [
          "AWS administrator",
          "AWS",
          "glacier:GetWidget",
          "IAM",
          "permissions",
          "resource access",
          "Amazon S3 Glacier",
          "identity and access",
          "iam:PassRole",
          "policies",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_318",
      "text": "Amazon S3 Glacier Developer Guide\nSome AWS services allow you to pass an existing role to that service instead of creating a new\nservice role or service-linked role. To do this, you must have permissions to pass the role to the\nservice.\nThe following example error occurs when an IAM user named marymajor tries to use the console\nto perform an action in S3 Glacier. However, the action requires the service to have permissions\nthat are granted by a service role. Mary does not have permissions to pass the role to the service.\nUser: arn:aws:iam::123456789012:user/marymajor is not authorized to perform:\niam:PassRole\nIn this case, Mary's policies must be updated to allow her to perform the iam:PassRole action.\nIf you need help, contact your AWS administrator. Your administrator is the person who provided\nyou with your sign-in credentials.\nI want to allow people outside of my AWS account to access my S3 Glacier\nresources\nYou can create a role that users in other accounts or people outside of your organization can use to\naccess your resources. You can specify who is trusted to assume the role. For services that support\nresource-based policies or access control lists (ACLs), you can use those policies to grant people\naccess to your resources.\nTo learn more, consult the following:\n\u2022 To learn whether S3 Glacier supports these features, see How Amazon S3 Glacier works with IAM.\n\u2022 To learn how to provide access to your resources across AWS accounts that you own, see\nProviding access to an IAM user in another AWS account that you own in the IAM User Guide.\n\u2022 To learn how to provide access to your resources to third-party AWS accounts, see Providing\naccess to AWS accounts owned by third parties in the IAM User Guide.\n\u2022 To learn how to provide access through identity federation, see Providing access to externally\nauthenticated users (identity federation) in the IAM User Guide.\n\u2022 To learn the difference between using roles and resource-based policies for cross-account access,\nsee Cross account resource access in IAM in the IAM User Guide.\nTroubleshooting API Version 2012-06-01 309",
      "start_idx": 497392,
      "end_idx": 499490,
      "metadata": {
        "num_sentences": 17,
        "num_words": 350,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "IAM",
            "PassRole",
            "S3 Glacier",
            "service role",
            "identity federation",
            "resource-based policies",
            "access control lists",
            "cross-account access",
            "AWS administrator",
            "permissions"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS",
            "Mary",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Access Management",
          "secondary_categories": [
            "IAM Policies",
            "Cross-Account Access"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM",
            "AWS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to manage roles and permissions in Amazon S3 Glacier, including cross-account access, identity federation, and troubleshooting permission errors like iam:PassRole.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I allow cross-account access in Amazon S3 Glacier?",
            "What permissions are required for the iam:PassRole action?",
            "How do I troubleshoot access issues in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Access Management]",
        "tf_idf_keywords": [
          "AWS administrator",
          "PassRole",
          "AWS",
          "Mary",
          "IAM",
          "service role",
          "access control lists",
          "permissions",
          "API Version 2012-06-01",
          "Amazon S3 Glacier",
          "resource-based policies",
          "identity federation",
          "cross-account access",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_319",
      "text": "Amazon S3 Glacier Developer Guide\nAPI Permissions Reference\nWhen you are setting up How Amazon S3 Glacier works with IAM and writing a permissions policy\nthat you can attach to an IAM identity (identity-based policies) or a resource (resource-based\npolicies), you can use the following table as a reference. The list includes each S3 Glacier API\noperation, the corresponding actions for which you can grant permissions to perform the action,\nand the AWS resource for which you can grant the permissions.\nYou specify the actions in the policy's Action element, and you specify the resource value in the\npolicy's Resource element. Also, you can use the IAM policy language Condition element to\nspecify when a policy should take effect.\nTo specify an action, use the glacier: prefix followed by the API operation name (for example,\nglacier:CreateVault). For most S3 Glacier actions, Resource is the vault on which you want\nto grant the permissions. You specify a vault as the Resource value by using the vault ARN. To\nexpress conditions, you use predefined condition keys. For more information, see Resource-based\npolicies within S3 Glacier.\nThe following table lists actions that can be used with identity-based policies and resource-based\npolicies.\nNote\nSome actions can only be used with identity-based policies. These actions are marked by an\nasterisk (*) after the name of the API operation in the first column.\nS3 Glacier API and Required Permissions for Actions\nAbort Multipart Upload (DELETE uploadID)\nRequired Permissions (API Actions): glacier:AbortMultipartUpload\nResources: arn:aws:glacier:region:account-id:vaults/vault-\nname, arn:aws:glacier:region:account-id:vaults/example*,\narn:aws:glacier:region:account-id:vaults/*\nS3 Glacier Condition Keys:\nAmazon S3 Glacier API Permissions Reference API Version 2012-06-01 310",
      "start_idx": 499492,
      "end_idx": 501320,
      "metadata": {
        "num_sentences": 13,
        "num_words": 264,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Permissions",
              "IAM Policies",
              "API Operations"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "IAM policies",
            "API operations",
            "permissions",
            "vault ARN",
            "resource-based policies",
            "identity-based policies",
            "condition keys",
            "Action element",
            "Resource element"
          ],
          "entities": [
            "glacier:CreateVault",
            "glacier:AbortMultipartUpload",
            "vault ARN",
            "IAM",
            "AWS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Identity and Access Management",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS IAM"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for setting up permissions policies for Amazon S3 Glacier using IAM, detailing API operations, required permissions, and resource specifications.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What permissions are required for S3 Glacier API operations?",
            "How do I specify a vault ARN in an IAM policy?",
            "What are predefined condition keys in S3 Glacier policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "Action element",
          "API operations",
          "permissions",
          "condition keys",
          "Resource element",
          "glacier:CreateVault",
          "IAM",
          "Amazon S3 Glacier",
          "identity-based policies",
          "vault ARN",
          "resource-based policies",
          "AWS IAM",
          "glacier:AbortMultipartUpload",
          "IAM policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_327",
      "text": "Amazon S3 Glacier Developer Guide\nLogging and Monitoring in Amazon S3 Glacier\nMonitoring is an important part of maintaining the reliability, availability, and performance of\nAmazon S3 Glacier (S3 Glacier) and your AWS solutions. You should collect monitoring data from\nall of the parts of your AWS solution so that you can more easily identify and debug the source of a\nfailure if one occurs. AWS provides the following tools for monitoring your S3 Glacier resources and\nresponding to potential incidents:\nAmazon CloudWatch Alarms\nWhen using S3 Glacier via Amazon S3, you can use Amazon CloudWatch alarms to watch a\nsingle metric over a time period that you specify. If the metric exceeds a given threshold, a\nnotification is sent to an Amazon SNS topic or AWS Auto Scaling policy. CloudWatch alarms do\nnot invoke actions because they are in a particular state. Rather the state must have changed\nand been maintained for a specified number of periods. For more information, see Monitoring\nMetrics with Amazon CloudWatch.\nAWS CloudTrail Logs\nCloudTrail provides a record of actions taken by a user, role, or an AWS service in S3 Glacier.\nCloudTrail captures all API calls for S3 Glacier as events, including calls from the S3 Glacier\nconsole and from code calls to the S3 Glacier APIs. For more information, see Logging Amazon\nS3 Glacier API Calls with AWS CloudTrail.\nAWS Trusted Advisor\nTrusted Advisor draws upon best practices learned from serving hundreds of thousands of AWS\ncustomers. Trusted Advisor inspects your AWS environment and then makes recommendations\nwhen opportunities exist to save money, improve system availability and performance, or help\nclose security gaps. All AWS customers have access to five Trusted Advisor checks. Customers\nwith a Business or Enterprise support plan can view all Trusted Advisor checks.\nFor more information, see AWS Trusted Advisor in the AWS Support User Guide.\nLogging and Monitoring API Version 2012-06-01 318",
      "start_idx": 510130,
      "end_idx": 512091,
      "metadata": {
        "num_sentences": 16,
        "num_words": 315,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Monitoring",
              "Logging",
              "Best Practices"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CloudWatch alarms",
            "AWS CloudTrail",
            "Trusted Advisor",
            "monitoring",
            "logging",
            "metrics",
            "API calls",
            "SNS topic",
            "Auto Scaling policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon CloudWatch",
            "AWS CloudTrail",
            "AWS Trusted Advisor",
            "AWS Auto Scaling"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Monitoring and Logging",
          "secondary_categories": [
            "AWS Best Practices",
            "Cloud Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon CloudWatch",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "AWS Trusted Advisor",
            "SNS topic",
            "Auto Scaling policy"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the logging and monitoring tools available for Amazon S3 Glacier, including CloudWatch alarms, CloudTrail logs, and AWS Trusted Advisor, to help ensure reliability, availability, and performance of AWS solutions.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How can I monitor Amazon S3 Glacier resources?",
            "What is the role of CloudWatch alarms in S3 Glacier monitoring?",
            "How does AWS Trusted Advisor assist with S3 Glacier best practices?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Monitoring and Logging]",
        "tf_idf_keywords": [
          "logging",
          "Auto Scaling policy",
          "AWS Auto Scaling",
          "Trusted Advisor",
          "API calls",
          "metrics",
          "AWS Trusted Advisor",
          "Amazon CloudWatch",
          "Amazon S3 Glacier",
          "SNS topic",
          "AWS CloudTrail",
          "CloudWatch alarms",
          "monitoring"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_328",
      "text": "Amazon S3 Glacier Developer Guide\nCompliance Validation for Amazon S3 Glacier\nThe security and compliance of Amazon S3 Glacier (S3 Glacier) is assessed by third-party auditors\nas part of multiple AWS compliance programs, including the following:\n\u2022 System and Organization Controls (SOC)\n\u2022 Payment Card Industry Data Security Standard (PCI DSS)\n\u2022 Federal Risk and Authorization Management Program (FedRAMP)\n\u2022 Health Insurance Portability and Accountability Act (HIPAA)\nAWS provides a frequently updated list of AWS services in scope of specific compliance programs at\nAWS Services in Scope by Compliance Program.\nThird-party audit reports are available for you to download using AWS Artifact. For more\ninformation, see Downloading Reports in AWS Artifact in the AWS Artifact User Guide.\nFor more information about AWS compliance programs, see AWS Compliance Programs.\nYour compliance responsibility when using S3 Glacier is determined by the sensitivity of your\ndata, your organization\u2019s compliance objectives, and applicable laws and regulations. If your use\nof S3 Glacier is subject to compliance with standards like HIPAA, PCI, or FedRAMP, AWS provides\nresources to help:\n\u2022 S3 Glacier Vault Lock allows you to easily deploy and enforce compliance controls for individual\nS3 Glacier vaults with a vault lock policy. You can specify controls such as \u201cwrite once read\nmany\u201d (WORM) in a vault lock policy and lock the policy from future edits. After the policy is\nlocked, it can no longer be changed. Vault lock policies can help you comply with regulatory\nframeworks such as SEC17a-4 and HIPAA.\n\u2022 Security and Compliance Quick Start Guides discuss architectural considerations and steps for\ndeploying security- and compliance-focused baseline environments on AWS.\n\u2022 Architecting for HIPAA Security and Compliance outlines how companies use AWS to help them\nmeet HIPAA requirements.\n\u2022 The AWS Well-Architected Tool (AWS WA Tool) is a service in the cloud that provides a consistent\nprocess for you to review and measure your architecture using AWS best practices. The AWS WA\nTool provides recommendations for making your workloads more reliable, secure, efficient, and\ncost-effective.\nCompliance Validation API Version 2012-06-01 319",
      "start_idx": 512093,
      "end_idx": 514324,
      "metadata": {
        "num_sentences": 14,
        "num_words": 339,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Compliance",
              "Security",
              "Best Practices"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Compliance Validation",
            "Vault Lock",
            "HIPAA",
            "AWS Artifact",
            "SOC",
            "PCI DSS",
            "FedRAMP",
            "WORM",
            "Well-Architected Tool"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Artifact",
            "Vault Lock",
            "AWS Compliance Programs",
            "AWS Well-Architected Tool"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security and Compliance",
          "secondary_categories": [
            "Cloud Storage",
            "Regulatory Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Artifact",
            "AWS Well-Architected Tool"
          ],
          "mentioned_tools": [
            "Vault Lock",
            "AWS WA Tool"
          ]
        },
        "semantic": {
          "summary": "The document outlines compliance validation for Amazon S3 Glacier, detailing AWS compliance programs and tools to help users meet regulatory standards like HIPAA and PCI DSS. It also highlights features like Vault Lock and the AWS Well-Architected Tool for security and compliance enforcement.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What compliance programs are supported by Amazon S3 Glacier?",
            "How does Vault Lock enforce compliance controls?",
            "What tools does AWS provide for HIPAA compliance?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Security and Compliance]",
        "tf_idf_keywords": [
          "HIPAA",
          "SOC",
          "PCI DSS",
          "AWS Compliance Programs",
          "AWS Well-Architected Tool",
          "Compliance Validation",
          "Vault Lock",
          "WORM",
          "Amazon S3 Glacier",
          "FedRAMP",
          "Well-Architected Tool",
          "AWS Artifact"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_330",
      "text": "Amazon S3 Glacier Developer Guide\nResilience in Amazon S3 Glacier\nThe AWS global infrastructure is built around Regions and Availability Zones. AWS Regions provide\nmultiple, physically separated and isolated Availability Zones that are connected with low latency,\nhigh throughput, and highly redundant networking. These Availability Zones offer you an effective\nway to design and operate applications and databases. They are more highly available, fault\ntolerant, and scalable than traditional single data center infrastructures or multi-data center\ninfrastructures. S3 Glacier redundantly stores data in multiple devices spanning a minimum of\nthree Availability Zones. To increase durability, S3 Glacier synchronously stores your data across\nmultiple AZs before confirming a successful upload.\nFor more information about AWS Regions and Availability Zones, see AWS Global Infrastructure.\nResilience API Version 2012-06-01 321",
      "start_idx": 514854,
      "end_idx": 515780,
      "metadata": {
        "num_sentences": 8,
        "num_words": 127,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Infrastructure",
              "Resilience"
            ]
          },
          "keywords": [
            "AWS Regions",
            "Availability Zones",
            "S3 Glacier",
            "durability",
            "fault tolerance",
            "scalability",
            "redundant networking",
            "synchronous storage",
            "data centers",
            "AWS Global Infrastructure"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Regions",
            "Availability Zones",
            "AWS Global Infrastructure",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cloud Infrastructure",
            "Data Resilience"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Global Infrastructure"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document explains the resilience and durability mechanisms of Amazon S3 Glacier, focusing on its use of AWS Regions and Availability Zones for fault tolerance and scalability. It highlights how data is redundantly stored across multiple Availability Zones to ensure durability during uploads.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How does Amazon S3 Glacier ensure data durability?",
            "What role do AWS Regions and Availability Zones play in S3 Glacier's resilience?",
            "What is the minimum number of Availability Zones used by S3 Glacier for data storage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "redundant networking",
          "AWS Regions",
          "fault tolerance",
          "synchronous storage",
          "Availability Zones",
          "Amazon S3 Glacier",
          "AWS Global Infrastructure",
          "data centers",
          "durability",
          "API Version 2012-06-01",
          "S3 Glacier",
          "scalability"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_331",
      "text": "Amazon S3 Glacier Developer Guide\nInfrastructure Security in Amazon S3 Glacier\nAs a managed service, Amazon S3 Glacier (S3 Glacier) is protected by the AWS global network\nsecurity procedures that are described in the Amazon Web Services: Overview of Security\nProcesses.\nAccess to S3 Glacier via the network is through AWS published APIs. Clients must support\nTransport Layer Security (TLS) 1.2. We recommend TLS 1.3 or later. Clients must also support\ncipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic\nCurve Diffie-Hellman Ephemeral (ECDHE). Most modern systems such as Java 7 and later support\nthese modes. Additionally, requests must be signed using an access key ID and a secret access key\nthat is associated with an IAM principal, or you can use the AWS Security Token Service (AWS STS)\nto generate temporary security credentials to sign requests.\nVPC Endpoints\nA virtual private cloud (VPC) endpoint enables you to privately connect your VPC to supported\nAWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet\ngateway, NAT device, VPN connection, or AWS Direct Connect connection. Although S3 Glacier does\nnot support VPC endpoints directly, you can take advantage of Amazon S3 VPC endpoints if you\naccess S3 Glacier as a storage tier integrated with Amazon S3.\nFor more information about Amazon S3 lifecycle configuration and transitioning objects to the S3\nGlacier storage class, see Object Lifecycle Management and Transitioning Objects in the Amazon\nSimple Storage Service User Guide. For more information about VPC endpoints, see VPC Endpoints\nin the Amazon VPC User Guide.\nInfrastructure Security API Version 2012-06-01 322",
      "start_idx": 515782,
      "end_idx": 517507,
      "metadata": {
        "num_sentences": 12,
        "num_words": 267,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Security",
              "Networking",
              "Storage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Infrastructure Security",
            "TLS 1.2",
            "Perfect Forward Secrecy",
            "VPC Endpoints",
            "AWS PrivateLink",
            "IAM principal",
            "AWS STS",
            "Object Lifecycle Management",
            "Ephemeral Diffie-Hellman"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Security Token Service",
            "Amazon VPC",
            "Amazon S3",
            "AWS PrivateLink"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Security",
          "secondary_categories": [
            "Networking",
            "Storage Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Security Token Service",
            "Amazon VPC"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines infrastructure security for Amazon S3 Glacier, including TLS requirements, VPC endpoints, and credential signing methods. It also discusses integration with Amazon S3 for lifecycle management and storage transitions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What security protocols are required to access Amazon S3 Glacier?",
            "How can VPC endpoints be used with Amazon S3 Glacier?",
            "What are the requirements for signing requests to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Security]",
        "tf_idf_keywords": [
          "Infrastructure Security",
          "VPC Endpoints",
          "Amazon VPC",
          "Amazon S3",
          "TLS 1.2",
          "IAM principal",
          "AWS PrivateLink",
          "Perfect Forward Secrecy",
          "AWS STS",
          "Object Lifecycle Management",
          "Amazon S3 Glacier",
          "AWS Security Token Service",
          "Ephemeral Diffie-Hellman"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_332",
      "text": "Amazon S3 Glacier Developer Guide\nS3 Glacier Data Retrieval Policies\nWith Amazon S3 Glacier data retrieval policies, you can easily set data retrieval quotas and manage\nthe data retrieval activities across your AWS account in each AWS Region. For more information\nabout S3 Glacier data retrieval charges, see S3 Glacier pricing.\nImportant\nA data retrieval policy applies only to Standard retrievals and manages retrieval requests\nmade directly to S3 Glacier.\nFor more information about the S3 Glacier storage classes, see Storage classes for archiving\nobjects and Transitioning objects in the Amazon Simple Storage Service User Guide.\nTopics\n\u2022 Choosing an S3 Glacier Data Retrieval Policy\n\u2022 Using the S3 Glacier Console to Set Up a Data Retrieval Policy\n\u2022 Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy\nChoosing an S3 Glacier Data Retrieval Policy\nYou can choose from three types of S3 Glacier data retrieval policies: No Retrieval Limit, Free Tier\nOnly, and Max Retrieval Rate.\nNo Retrieval Limit is the default data retrieval policy that's used for retrievals. If you use the No\nRetrieval Limit policy, no retrieval quota is set, and all valid data retrieval requests are accepted.\nBy using a Free Tier Only policy, you can keep your retrievals within your daily AWS Free Tier\nallowance and not incur any data retrieval costs. If you want to retrieve more data than is in your\nAWS Free Tier allowance, you can use a Max Retrieval Rate policy to set a bytes-per-hour retrieval-\nrate quota. The Max Retrieval Rate policy ensures that the peak retrieval rate from all retrieval jobs\nacross your account in an AWS Region does not exceed the bytes-per-hour quota that you set.\nWith both the Free Tier Only and Max Retrieval Rate policies, data retrieval requests that exceed\nthe retrieval quotas that you specified are not accepted. If you use a Free Tier Only policy, S3\nGlacier synchronously rejects retrieval requests that exceed your AWS Free Tier allowance. If you\nChoosing an S3 Glacier Data Retrieval Policy API Version 2012-06-01 323",
      "start_idx": 517509,
      "end_idx": 519566,
      "metadata": {
        "num_sentences": 13,
        "num_words": 341,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "data retrieval policies",
            "retrieval quotas",
            "AWS Free Tier",
            "Max Retrieval Rate",
            "No Retrieval Limit",
            "Standard retrievals",
            "retrieval charges",
            "storage classes",
            "retrieval requests"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "AWS Region",
            "S3 Glacier Console",
            "Amazon S3 Glacier API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "Amazon Simple Storage Service"
          ],
          "mentioned_tools": [
            "S3 Glacier Console",
            "Amazon S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains Amazon S3 Glacier data retrieval policies, their types, and how to configure them via the console or API to manage retrieval quotas and costs effectively.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the types of S3 Glacier data retrieval policies?",
            "How can I set up a data retrieval policy using the S3 Glacier Console?",
            "What happens if data retrieval requests exceed the specified quota?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "data retrieval policies",
          "retrieval quotas",
          "No Retrieval Limit",
          "retrieval charges",
          "S3 Glacier Console",
          "Amazon Simple Storage Service",
          "AWS Free Tier",
          "Standard retrievals",
          "AWS Region",
          "Amazon S3 Glacier",
          "Max Retrieval Rate",
          "Amazon S3 Glacier API",
          "storage classes",
          "S3 Glacier",
          "retrieval requests"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_333",
      "text": "Amazon S3 Glacier Developer Guide\nuse a Max Retrieval Rate policy, S3 Glacier rejects retrieval requests that cause the peak retrieval\nrate of the in-progress jobs to exceed the bytes-per-hour quota set by the policy. These policies\nhelp you simplify data retrieval cost management.\nThe following are some useful facts about data retrieval policies:\n\u2022 Data retrieval policy settings do not change the 3- to 5-hour period that it takes to retrieve data\nfrom S3 Glacier by using Standard retrievals.\n\u2022 Setting a new data retrieval policy does not affect previously accepted retrieval jobs that are\nalready in progress.\n\u2022 If a retrieval job request is rejected because of a data retrieval policy, you are not charged for the\njob or the request.\n\u2022 You can set one data retrieval policy for each AWS Region, which will govern all data retrieval\nactivities in the AWS Region under your account. A data retrieval policy is specific to a particular\nAWS Region because data retrieval costs vary across AWS Regions. For more information, see\nAmazon S3 Glacier pricing.\nFree Tier Only Policy\nYou can set a data retrieval policy to Free Tier Only to ensure that your retrievals always stay within\nyour AWS Free Tier allowance, so that you don't incur data retrieval charges. If a retrieval request is\nrejected, you receive an error message stating that the request has been denied by the current data\nretrieval policy.\nYou can set the data retrieval policy to Free Tier Only on a per-Region basis. After the policy is set,\nyou cannot retrieve more data in a day than your prorated daily AWS Free Tier retrieval allowance\nfor that AWS Region. You also do not incur data retrieval fees.\nYou can also switch to a Free Tier Only policy after you have incurred data retrieval charges within\na month. In that case, the Free Tier Only policy takes effect for new retrieval requests, but does not\naffect past requests. You will be billed for the previously incurred charges.\nMax Retrieval Rate Policy\nYou can set your data retrieval policy to Max Retrieval Rate to control the peak retrieval rate by\nspecifying a data retrieval quota that has a bytes-per-hour maximum. When you set the data\nretrieval policy to Max Retrieval Rate, a new retrieval request is rejected if it would cause the peak\nFree Tier Only Policy API Version 2012-06-01 324",
      "start_idx": 519568,
      "end_idx": 521890,
      "metadata": {
        "num_sentences": 18,
        "num_words": 397,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Cost Management",
              "Region-Specific Behavior"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "data retrieval policy",
            "Max Retrieval Rate",
            "Free Tier Only",
            "AWS Region",
            "retrieval requests",
            "bytes-per-hour quota",
            "retrieval charges",
            "AWS Free Tier",
            "retrieval allowance"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Free Tier",
            "AWS Region",
            "Max Retrieval Rate policy",
            "Free Tier Only policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cost Optimization",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains data retrieval policies such as Free Tier Only and Max Retrieval Rate, which help manage retrieval costs and regulate data access per AWS Region. It highlights key behaviors of these policies and their impact on retrieval requests and charges.",
          "intents": [
            "How-To",
            "Reference",
            "Compare"
          ],
          "potential_questions": [
            "What are the differences between Free Tier Only and Max Retrieval Rate policies?",
            "How does a data retrieval policy affect retrieval requests in Amazon S3 Glacier?",
            "Can I change my data retrieval policy after incurring charges?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "Free Tier Only",
          "retrieval charges",
          "data retrieval policy",
          "AWS Free Tier",
          "bytes-per-hour quota",
          "retrieval allowance",
          "Max Retrieval Rate policy",
          "AWS Region",
          "Amazon S3 Glacier",
          "Free Tier Only policy",
          "Max Retrieval Rate",
          "S3 Glacier",
          "retrieval requests"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_334",
      "text": "Amazon S3 Glacier Developer Guide\nretrieval rate of the in-progress jobs to exceed the bytes-per-hour quota that's specified by the\npolicy. If a retrieval job request is rejected, you receive an error message stating that the request\nhas been denied by the current data retrieval policy.\nSetting your data retrieval policy to the Max Retrieval Rate policy can affect how much of your\nAWS Free Tier allowance that you can use in a day. For example, suppose you set Max Retrieval Rate\nto 1 MB per hour. This is less than the AWS Free Tier policy rate. To ensure that you make good use\nof the daily AWS Free Tier allowance, you can first set your policy to Free Tier Only, and then switch\nto the Max Retrieval Rate policy later if you need to. For more information about how your retrieval\nallowance is calculated, go to Amazon S3 Glacier FAQs.\nNo Retrieval Limit Policy\nIf your data retrieval policy is set to No Retrieval Limit, all valid data retrieval requests are accepted\nand your data retrieval costs will vary based on your usage.\nUsing the S3 Glacier Console to Set Up a Data Retrieval Policy\nTo create a data retrieval policy by using the Amazon S3 Glacier console\n1. Sign in to the AWS Management Console and open the S3 Glacier console at https://\nconsole.aws.amazon.com/glacier/home.\n2. Under Select a Region, choose an AWS Region from the dropdown menu. You can configure a\ndata retrieval policy for each AWS Region.\n3. In the left navigation pane, choose Data retrieval settings.\n4. Choose Edit. The Edit data retrieval policies page appears.\n5. Under Data retrieval policies, choose a policy.\nYou can select one of the three data retrieval policies: No retrieval limit, Free Tier only, or\nSpecify a max retrieval rate.\n\u2022 If you choose No retrieval limit, all valid data retrieval requests are accepted.\n\u2022 If you choose Free Tier only, data retrieval requests that exceed the AWS Free Tier are not\naccepted.\n\u2022 If you choose Specify a max retrieval rate, data retrieval requests are rejected if they would\ncause the peak retrieval rate of the in-progress jobs to exceed the max retrieval rate that\nyou specify. You must specify a gigabytes (GB) per hour value in the GB/hour box under Max\nNo Retrieval Limit Policy API Version 2012-06-01 325",
      "start_idx": 521892,
      "end_idx": 524144,
      "metadata": {
        "num_sentences": 25,
        "num_words": 391,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Configuration",
              "Policy Management"
            ]
          },
          "keywords": [
            "data retrieval policy",
            "AWS Free Tier",
            "Max Retrieval Rate",
            "No Retrieval Limit",
            "S3 Glacier console",
            "AWS Region",
            "retrieval rate",
            "data retrieval costs",
            "gigabytes per hour",
            "retrieval allowance"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Management Console",
            "AWS Free Tier",
            "S3 Glacier FAQs",
            "Edit data retrieval policies page"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "Data Retrieval Policies",
            "AWS Console Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Free Tier"
          ],
          "mentioned_tools": [
            "AWS Management Console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure data retrieval policies for Amazon S3 Glacier, including the Free Tier Only, Max Retrieval Rate, and No Retrieval Limit options, using the AWS Management Console.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up a data retrieval policy in Amazon S3 Glacier?",
            "What are the differences between Free Tier Only, Max Retrieval Rate, and No Retrieval Limit policies?",
            "How does the Max Retrieval Rate policy affect AWS Free Tier usage?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "Edit data retrieval policies page",
          "No Retrieval Limit",
          "gigabytes per hour",
          "data retrieval policy",
          "S3 Glacier console",
          "AWS Free Tier",
          "retrieval rate",
          "AWS Management Console",
          "S3 Glacier FAQs",
          "retrieval allowance",
          "AWS Region",
          "Amazon S3 Glacier",
          "Max Retrieval Rate",
          "data retrieval costs"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_335",
      "text": "Amazon S3 Glacier Developer Guide\nretrieval rate. When you enter a value for GB/hour, the console calculates an estimated cost\nfor you.\n6. Choose Save changes.\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval\nPolicy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API or by using\nthe AWS SDKs.\nUsing the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy\nYou can view and set a data retrieval policy by using the Amazon S3 Glacier REST API. You can view\nan existing data retrieval policy by using the Get Data Retrieval Policy (GET policy) operation. You\nset a data retrieval policy by using the Set Data Retrieval Policy (PUT policy) operation.\nWhen using the PUT policy operation, you select the data retrieval policy type by setting the JSON\nStrategy field value to BytesPerHour, FreeTier, or None. BytesPerHour is equivalent to\nchoosing Specify a max retrieval rate in the console, FreeTier to choosing Free Tier only, and\nNone to choosing No retrieval limit.\nWhen you use the Initiate Job (POST jobs) operation to initiate a data retrieval job that will exceed\nthe maximum retrieval rate set in your data retrieval policy, the Initiate Job operation stops\nand throws an exception.\nUsing the AWS SDKs to Set Up a Data Retrieval Policy\nAWS provides SDKs for you to develop applications for Amazon S3 Glacier. These SDKs provide\nlibraries that map to the underlying REST API and provide objects that enable you to easily\nconstruct requests and process responses. For more information, see Using the AWS SDKs with\nAmazon S3 Glacier.\nUsing the Amazon S3 Glacier API to Set Up a Data Retrieval Policy API Version 2012-06-01 326",
      "start_idx": 524146,
      "end_idx": 525825,
      "metadata": {
        "num_sentences": 15,
        "num_words": 291,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "REST API",
            "AWS SDKs",
            "Set Data Retrieval Policy",
            "Get Data Retrieval Policy",
            "Initiate Job",
            "BytesPerHour",
            "FreeTier",
            "No retrieval limit"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDKs",
            "Get Data Retrieval Policy",
            "Set Data Retrieval Policy",
            "Initiate Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "APIs",
            "Development Tools"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDKs"
          ]
        },
        "semantic": {
          "summary": "This section explains how to set up and manage data retrieval policies in Amazon S3 Glacier using the REST API or AWS SDKs. It covers operations like Get Data Retrieval Policy and Set Data Retrieval Policy, along with policy types and their configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I set up a data retrieval policy in Amazon S3 Glacier?",
            "What are the different policy types available in Amazon S3 Glacier?",
            "How does the Initiate Job operation handle retrieval rate limits?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS SDKs",
          "data retrieval policy",
          "BytesPerHour",
          "Get Data Retrieval Policy",
          "Initiate Job",
          "REST API",
          "No retrieval limit",
          "Amazon S3 Glacier",
          "FreeTier",
          "Set Data Retrieval Policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_336",
      "text": "Amazon S3 Glacier Developer Guide\nTagging Amazon S3 Glacier Resources\nA tag is a label that you assign to an AWS resource. Each tag consists of a key and a value, both of\nwhich you define. You can assign the tags that you define to Amazon S3 Glacier (S3 Glacier) vault\nresources. Using tags is a simple yet powerful way to manage AWS resources and organize data,\nincluding billing data.\nTopics\n\u2022 Tagging Basics\n\u2022 Tag Restrictions\n\u2022 Tracking Costs Using Tagging\n\u2022 Managing Access Control with Tagging\n\u2022 Related Sections\nTagging Basics\nYou use the S3 Glacier console, AWS Command Line Interface (AWS CLI), or S3 Glacier API to\ncomplete the following tasks:\n\u2022 Adding tags to a vault\n\u2022 Listing the tags for a vault\n\u2022 Removing tags from a vault\nFor information about how to add, list, and remove tags, see Tagging Your S3 Glacier Vaults.\nYou can use tags to categorize your vaults. For example, you can categorize vaults by purpose,\nowner, or environment. Because you define the key and value for each tag, you can create a custom\nset of categories to meet your specific needs. For example, you might define a set of tags that\nhelps you track vaults by owner and purpose for the vault. Following are a few examples of tags:\n\u2022 Owner: Name\n\u2022 Purpose: Video archives\n\u2022 Environment: Production\nTagging Basics API Version 2012-06-01 327",
      "start_idx": 525827,
      "end_idx": 527153,
      "metadata": {
        "num_sentences": 10,
        "num_words": 235,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Procedural",
              "Reference"
            ]
          },
          "keywords": [
            "tagging",
            "vault",
            "S3 Glacier",
            "AWS CLI",
            "API",
            "access control",
            "billing",
            "environment",
            "owner",
            "categories"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "S3 Glacier API",
            "Tagging Basics",
            "Tagging Your S3 Glacier Vaults"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "AWS Resource Management",
          "secondary_categories": [
            "Cloud Storage",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI",
            "S3 Glacier API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use tags to organize and manage Amazon S3 Glacier vaults, including adding, listing, and removing tags via the console, AWS CLI, or API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I add tags to an Amazon S3 Glacier vault?",
            "What are the use cases for tagging S3 Glacier resources?",
            "How do tags help in managing access control and tracking costs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [AWS Resource Management]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Tagging Your S3 Glacier Vaults",
          "AWS CLI",
          "tagging",
          "billing",
          "owner",
          "API",
          "vault",
          "S3 Glacier API",
          "Tagging Basics",
          "Amazon S3 Glacier",
          "environment",
          "access control",
          "S3 Glacier",
          "categories"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_337",
      "text": "Amazon S3 Glacier Developer Guide\nTag Restrictions\nBasic tag restrictions are as follows:\n\u2022 The maximum number of tags for a resource (vault) is 50.\n\u2022 Tag keys and values are case-sensitive.\nTag key restrictions are as follows:\n\u2022 Within a set of tags for a vault, each tag key must be unique. If you add a tag with a key that's\nalready in use, your new tag overwrites the existing key-value pair.\n\u2022 Tag keys cannot start with aws: because this prefix is reserved for use by AWS. AWS can create\ntags that begin with this prefix on your behalf, but you can't edit or delete them.\n\u2022 Tag keys must be from 1 to 128 Unicode characters in length.\n\u2022 Tag keys must consist of the following characters: Unicode letters, digits, spaces, and the\nfollowing special characters: _ . / = + - @.\nTag value restrictions are as follows:\n\u2022 Tag values must be from 0 to 255 Unicode characters in length.\n\u2022 Tag values can be blank. Otherwise, they must consist of the following characters: Unicode\nletters, digits, spaces, and any of the following special characters: _ . / = + - @.\nTracking Costs Using Tagging\nYou can use tags to categorize and track your AWS costs. When you apply tags to any AWS\nresources, including vaults, your AWS cost allocation report includes usage and costs aggregated\nby tags. You can apply tags that represent business categories (such as cost centers, application\nnames, and owners) to organize your costs across multiple services. For more information, see Use\nCost Allocation Tags for Custom Billing Reports in the AWS Billing User Guide.\nManaging Access Control with Tagging\nYou can use tags as a condition in an access policy statement. For example, you can set up a legal\nhold tag and include it as a condition in a data retention policy that states that \u201carchive deletion\nTag Restrictions API Version 2012-06-01 328",
      "start_idx": 527155,
      "end_idx": 528986,
      "metadata": {
        "num_sentences": 19,
        "num_words": 324,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Restrictions",
              "Usage",
              "Access Control"
            ]
          },
          "keywords": [
            "tags",
            "vault",
            "AWS",
            "cost allocation",
            "access policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Billing User Guide",
            "Cost Allocation Tags",
            "Unicode characters",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Tagging and Metadata Management",
          "secondary_categories": [
            "Cost Tracking",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Billing"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the restrictions and usage of tags in Amazon S3 Glacier, including their role in cost tracking and access control policies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the restrictions for tag keys and values in Amazon S3 Glacier?",
            "How can tags be used to track AWS costs?",
            "Can tags be used as conditions in access policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Tagging and Metadata Management]",
        "tf_idf_keywords": [
          "AWS",
          "AWS Billing User Guide",
          "Unicode characters",
          "vault",
          "access policy",
          "cost allocation",
          "Cost Allocation Tags",
          "Amazon S3 Glacier",
          "AWS Billing",
          "tags",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_338",
      "text": "Amazon S3 Glacier Developer Guide\nfrom everyone will be denied if the legal hold tag value is set to True.\u201d You can deploy the data\nretention policy and set the legal hold tag to False under normal conditions. If your data must be\nput on hold to assist an investigation, you can easily turn on the legal hold by setting the tag value\nto True and removing the hold in a similar way later on. For more information, see Controlling\nAccess Using Tags in the IAM User Guide.\nRelated Sections\n\u2022 Tagging Your S3 Glacier Vaults\nRelated Sections API Version 2012-06-01 329",
      "start_idx": 528988,
      "end_idx": 529551,
      "metadata": {
        "num_sentences": 4,
        "num_words": 102,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Policy Explanation",
              "Tagging"
            ]
          },
          "keywords": [
            "legal hold",
            "data retention policy",
            "S3 Glacier",
            "tags",
            "IAM",
            "investigation",
            "access control",
            "tag value",
            "vaults",
            "Controlling Access"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "IAM User Guide",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Access Control",
            "Data Governance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "IAM"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to use the legal hold tag in Amazon S3 Glacier to enforce data retention policies and assist investigations by toggling the tag value between True and False. It references IAM for controlling access via tags.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I enable a legal hold on Amazon S3 Glacier data?",
            "What is the purpose of the legal hold tag in S3 Glacier?",
            "How can tags be used to control access in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "Controlling Access",
          "IAM",
          "API Version 2012-06-01",
          "vaults",
          "tags",
          "tag value",
          "Amazon S3 Glacier",
          "data retention policy",
          "access control",
          "S3 Glacier",
          "legal hold",
          "investigation"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_339",
      "text": "Amazon S3 Glacier Developer Guide\nLogging Amazon S3 Glacier API Calls with AWS\nCloudTrail\nAmazon S3 Glacier (S3 Glacier) is integrated with AWS CloudTrail, a service that provides a record\nof actions taken by a user, role, or an AWS service in S3 Glacier. CloudTrail captures all API calls\nfor S3 Glacier as events, including calls from the S3 Glacier console and from code calls to the S3\nGlacier APIs. If you create a trail, you can enable continuous delivery of CloudTrail events to an\nAmazon S3 bucket, including events for S3 Glacier. If you don't configure a trail, you can still view\nthe most recent events in the CloudTrail console in Event history. Using the information collected\nby CloudTrail, you can determine the request that was made to S3 Glacier, the IP address from\nwhich the request was made, who made the request, when it was made, and additional details.\nTo learn more about CloudTrail, see the AWS CloudTrail User Guide.\nAmazon S3 Glacier Information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs in\nS3 Glacier, that activity is recorded in a CloudTrail event along with other AWS service events in\nEvent history. You can view, search, and download recent events in your AWS account. For more\ninformation, see Viewing Events with CloudTrail Event History.\nFor an ongoing record of events in your AWS account, including events for S3 Glacier, create a\ntrail. A trail enables CloudTrail to deliver log files to an Amazon S3 bucket. By default, when you\ncreate a trail in the console, the trail applies to all AWS Regions. The trail logs events from all AWS\nRegions in the AWS partition and delivers the log files to the Amazon S3 bucket that you specify.\nAdditionally, you can configure other AWS services to further analyze and act upon the event data\ncollected in CloudTrail logs. For more information, see:\n\u2022 Overview for Creating a Trail\n\u2022 CloudTrail Supported Services and Integrations\n\u2022 Configuring Amazon SNS Notifications for CloudTrail\n\u2022 Receiving CloudTrail Log Files from Multiple Regions and Receiving CloudTrail Log Files from\nMultiple Accounts\nAmazon S3 Glacier Information in CloudTrail API Version 2012-06-01 330",
      "start_idx": 529553,
      "end_idx": 531761,
      "metadata": {
        "num_sentences": 16,
        "num_words": 367,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Integration",
              "Logging",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "API calls",
            "Event history",
            "CloudTrail logs",
            "Amazon S3 bucket",
            "AWS Regions",
            "trail",
            "log files",
            "notifications"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "Amazon S3 bucket",
            "AWS Regions",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Service Logging",
          "secondary_categories": [
            "AWS Services",
            "Data Analysis"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "CloudTrail console"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier integrates with AWS CloudTrail to log API calls and events, enabling users to track actions and analyze logs through trails and S3 buckets. It also provides details about configuring trails and additional AWS services for enhanced event data analysis.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I log API calls for Amazon S3 Glacier?",
            "What information does AWS CloudTrail capture for S3 Glacier?",
            "How do I configure a trail for logging events in AWS CloudTrail?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Service Logging]",
        "tf_idf_keywords": [
          "Amazon SNS",
          "AWS Regions",
          "CloudTrail logs",
          "notifications",
          "API calls",
          "log files",
          "Amazon S3 bucket",
          "Amazon S3 Glacier",
          "Event history",
          "trail",
          "AWS CloudTrail"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_340",
      "text": "Amazon S3 Glacier Developer Guide\nAll S3 Glacier actions are logged by CloudTrail and are documented in the API Reference for\nAmazon S3 Glacier. For example, calls to the Create Vault (PUT vault), Delete Vault (DELETE vault),\nand List Vaults (GET vaults) actions generate entries in the CloudTrail log files.\nEvery event or log entry contains information about who generated the request. The identity\ninformation helps you determine the following:\n\u2022 Whether the request was made with root user or other credentials.\n\u2022 Whether the request was made with temporary security credentials for a role or federated user.\n\u2022 Whether the request was made by another AWS service.\nFor more information, see the CloudTrail userIdentity Element.\nUnderstanding Amazon S3 Glacier Log File Entries\nA trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket that\nyou specify. CloudTrail log files contain one or more log entries. An event represents a single\nrequest from any source and includes information about the requested action, the date and time of\nthe action, request parameters, and so on. CloudTrail log files are not an ordered stack trace of the\npublic API calls, so they do not appear in any specific order.\nThe following example shows a CloudTrail log entry that demonstrates the Create Vault (PUT\nvault), Delete Vault (DELETE vault), List Vaults (GET vaults), and Describe Vault (GET vault) actions.\n{\n\"Records\": [\n{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"52f8c821-002e-4549-857f-8193a15246fa\",\n\"eventName\": \"CreateVault\",\n\"eventSource\": \"glacier.amazonaws.com\",\n\"eventTime\": \"2014-12-10T19:05:15Z\",\n\"eventType\": \"AwsApiCall\",\n\"eventVersion\": \"1.02\",\n\"recipientAccountId\": \"999999999999\",\n\"requestID\": \"HJiLgvfXCY88QJAC6rRoexS9ThvI21Q1Nqukfly02hcUPPo\",\n\"requestParameters\": {\n\"accountId\": \"-\",\n\"vaultName\": \"myVaultName\"\n},\nUnderstanding Amazon S3 Glacier Log File Entries API Version 2012-06-01 331",
      "start_idx": 531763,
      "end_idx": 533694,
      "metadata": {
        "num_sentences": 13,
        "num_words": 273,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Reference",
              "Log Analysis"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CloudTrail",
            "Create Vault",
            "Delete Vault",
            "List Vaults",
            "Describe Vault",
            "log entries",
            "event source",
            "request parameters",
            "userIdentity"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CloudTrail",
            "Create Vault",
            "Delete Vault",
            "List Vaults"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Logging and Monitoring",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "CloudTrail"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how Amazon S3 Glacier actions are logged in CloudTrail, providing details on log file entries and user identity information for requests. It also includes an example of a CloudTrail log entry for various S3 Glacier actions.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How are Amazon S3 Glacier actions logged in CloudTrail?",
            "What information is included in a CloudTrail log entry for S3 Glacier?",
            "How can I analyze user identity details in S3 Glacier logs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "List Vaults",
          "request parameters",
          "Create Vault",
          "userIdentity",
          "log entries",
          "Amazon S3 Glacier",
          "event source",
          "Describe Vault",
          "CloudTrail",
          "Delete Vault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_344",
      "text": "Amazon S3 Glacier Developer Guide\nAPI Reference for Amazon S3 Glacier\nAmazon S3 Glacier supports a set of operations\u2014specifically, a set of RESTful API calls\u2014that\nenable you to interact with the service.\nYou can use any programming library that can send HTTP requests to send your REST requests\nto S3 Glacier. When sending a REST request, S3 Glacier requires that you authenticate every\nrequest by signing the request. Additionally, when uploading an archive, you must also compute\nthe checksum of the payload and include it in your request. For more information, see Signing\nRequests.\nIf an error occurs, you need to know what S3 Glacier sends in an error response so that you\ncan process it. This section provides all this information, in addition to documenting the REST\noperations, so that you can make REST API calls directly.\nYou can either use the REST API calls directly or use the Amazon SDKs that provide wrapper\nlibraries. These libraries sign each request you send and compute the checksum of the payload in\nyour request. Therefore, using the Amazon SDKs simplifies your coding task. This developer guide\nprovides working examples of basic S3 Glacier operations using the AWS SDK for Java and .NET. For\nmore information see, Using the AWS SDKs with Amazon S3 Glacier.\nTopics\n\u2022 Common Request Headers\n\u2022 Common Response Headers\n\u2022 Signing Requests\n\u2022 Computing Checksums\n\u2022 Error Responses\n\u2022 Vault Operations\n\u2022 Archive Operations\n\u2022 Multipart Upload Operations\n\u2022 Job Operations\n\u2022 Data Types Used in Job Operations\n\u2022 Data Retrieval Operations\nAPI Version 2012-06-01 335",
      "start_idx": 536835,
      "end_idx": 538409,
      "metadata": {
        "num_sentences": 13,
        "num_words": 259,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Usage Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "REST API",
            "Checksum",
            "Authentication",
            "Error Response",
            "Vault Operations",
            "Archive Operations",
            "Multipart Upload",
            "Job Operations",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS SDK for Java",
            "AWS SDK for .NET",
            "RESTful API",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Error Handling",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK for Java",
            "AWS SDK for .NET"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an API reference for Amazon S3 Glacier, detailing REST API operations, request signing, checksum computation, error handling, and usage examples with AWS SDKs.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How do I sign requests for Amazon S3 Glacier REST API?",
            "What are the common headers used in S3 Glacier API requests?",
            "How can I handle error responses from S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Checksum",
          "Error Response",
          "AWS SDKs",
          "AWS SDK for .NET",
          "RESTful API",
          "REST API",
          "Multipart Upload",
          "Vault Operations",
          "Amazon S3 Glacier",
          "Job Operations",
          "AWS SDK for Java",
          "API Version 2012-06-01",
          "Archive Operations",
          "Authentication"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_345",
      "text": "Amazon S3 Glacier Developer Guide\nCommon Request Headers\nAmazon S3 Glacier (S3 Glacier) REST requests include headers that contain basic information about\nthe request. The following table describes headers that can be used by all S3 Glacier REST requests.\nHeader Name Description Required\nAuthorization The header that is required to sign requests. S3 Yes\nGlacier requires Signature Version 4. For more\ninformation, see Signing Requests.\nType: String\nContent-Length The length of the request body (without the Conditional\nheaders).\nType: String\nCondition: Required only for the Upload Archive\n(POST archive) API.\nDate The date that can be used to create the signature Conditional\ncontained in the Authorization header. If the\nDate header is to be used for signing it must be\nspecified in the ISO 8601 basic format. In this\ncase, the x-amz-date header is not needed.\nNote that when x-amz-date is present, it\nalways overrides the value of the Date header.\nIf the Date header is not used for signing, it can\nbe one of the full date formats specified by RFC\n2616, section 3.3. For example, the following\ndate/time W ed, 10 Feb 2017 12:00:00\nGMT is a valid date/time header for use with S3\nGlacier.\nIf you are using the Date header for signing, then\nit must be in the ISO 8601 basic YYYYMMDD'\nT'HHMMSS'Z' format.\nCommon Request Headers API Version 2012-06-01 336",
      "start_idx": 538411,
      "end_idx": 539768,
      "metadata": {
        "num_sentences": 15,
        "num_words": 225,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Header Description",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "REST requests",
            "Authorization",
            "Signature Version 4",
            "Content-Length",
            "Date header",
            "ISO 8601 format",
            "RFC 2616",
            "x-amz-date",
            "Upload Archive API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Authorization header",
            "Content-Length header",
            "Date header",
            "Upload Archive API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation describes common request headers used in Amazon S3 Glacier REST requests, including their requirements and formats such as the Authorization header and Date header for signing requests.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the common headers for S3 Glacier REST requests?",
            "How is the Authorization header used in S3 Glacier?",
            "What is the required format for the Date header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "Signature Version 4",
          "Authorization header",
          "Content-Length",
          "Date header",
          "Upload Archive API",
          "REST requests",
          "Amazon S3 Glacier",
          "x-amz-date",
          "RFC 2616",
          "ISO 8601 format",
          "Content-Length header"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_346",
      "text": "Amazon S3 Glacier Developer Guide\nHeader Name Description Required\nType: String\nCondition: If Date is specified but is not in ISO\n8601 basic format, then you must also include\nthe x-amz-date header. If D ate is specified\nin ISO 8601 basic format, then this is sufficien\nt for signing requests and you do not need the\nx-amz-date header. For more information,\nsee Handling Dates in Signature Version 4 in the\nAmazon Web Services Glossary.\nHost This header specifies the service endpoint to Yes\nwhich you send your requests. The value must\nbe of the form \"glacier.region.amazonaw\ns.com \", where region is replaced with an AWS\nRegion designation such as u s-west-2 .\nType: String\nx-amz-content-sha2 The computed SHA256 checksum of an entire Conditional\n56 payload that is uploaded with either Upload\nArchive (POST archive) or Upload Part (PUT\nuploadID). This header is not the same as the x-\namz-sha256-tree-hash header, though,\nfor some small payloads the values are the same.\nWhen x -amz-content-sha256 is required,\nboth x-amz-content-sha256 and x -amz-\nsha256-tree-hash must be specified.\nType: String\nCondition: Required for streaming API, Upload\nArchive (POST archive) and Upload Part (PUT\nuploadID).\nCommon Request Headers API Version 2012-06-01 337",
      "start_idx": 539770,
      "end_idx": 541021,
      "metadata": {
        "num_sentences": 10,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Header Description",
              "Conditions",
              "API Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-date",
            "ISO 8601",
            "x-amz-content-sha256",
            "SHA256 checksum",
            "Signature Version 4",
            "AWS Region",
            "Upload Archive",
            "Upload Part",
            "streaming API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-date",
            "x-amz-content-sha256",
            "AWS Region",
            "Signature Version 4"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API Documentation",
          "secondary_categories": [
            "AWS API Usage",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation snippet provides details on request headers for interacting with the Amazon S3 Glacier service, including conditions for using specific headers and checksum requirements.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the conditions for using the x-amz-date header?",
            "How is the x-amz-content-sha256 header used in Amazon S3 Glacier?",
            "What is the required format for the Host header in S3 Glacier requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API Documentation]",
        "tf_idf_keywords": [
          "ISO 8601",
          "Upload Archive",
          "Signature Version 4",
          "AWS Region",
          "Amazon S3 Glacier",
          "Upload Part",
          "x-amz-date",
          "SHA256 checksum",
          "x-amz-content-sha256",
          "streaming API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_347",
      "text": "Amazon S3 Glacier Developer Guide\nHeader Name Description Required\nx-amz-date The date used to create the signature in the Conditional\nAuthorization header. The format must be ISO\n8601 basic in the YYYYMMDD'T'HHMMSS'Z'\nformat. For example, the following date/time\n20170210T120000Z is a valid x -amz-date\nfor use with S3 Glacier.\nType: String\nCondition: x-amz-date is optional for all\nrequests; it can be used to override the date\nused for signing requests. If the Date header is\nspecified in the ISO 8601 basic format, then x -\namz-date is not needed. When x-amz-date\nis present, it always overrides the value of the\nDate header. For more information, see Handling\nDates in Signature Version 4 in the Amazon Web\nServices Glossary.\nx-amz-glacier-vers The S3 Glacier API version to use. The current Yes\nion version is 2012-06-01 .\nType: String\nx-amz-sha256-tree- The computed SHA256 tree-hash checksum for an Conditional\nhash uploaded archive (Upload Archive (POST archive))\nor archive part (Upload Part (PUT uploadID)\n). For more information about calculating this\nchecksum, see Computing Checksums.\nType: String\nDefault: None\nCondition: Required for Upload Archive (POST\narchive) and Upload Part (PUT uploadID).\nCommon Request Headers API Version 2012-06-01 338",
      "start_idx": 541023,
      "end_idx": 542284,
      "metadata": {
        "num_sentences": 13,
        "num_words": 193,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "API Documentation"
            ]
          },
          "keywords": [
            "x-amz-date",
            "ISO 8601",
            "S3 Glacier",
            "Signature Version 4",
            "x-amz-glacier-version",
            "SHA256 tree-hash",
            "Upload Archive",
            "Upload Part",
            "Date header",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-date",
            "x-amz-glacier-version",
            "SHA256 tree-hash",
            "ISO 8601 format"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on key headers used in Amazon S3 Glacier API requests, including x-amz-date, x-amz-glacier-version, and x-amz-sha256-tree-hash, along with their formats, conditions, and usage.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the format of the x-amz-date header in S3 Glacier?",
            "When is the x-amz-sha256-tree-hash header required?",
            "What API version should be used with S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "ISO 8601",
          "Upload Archive",
          "SHA256 tree-hash",
          "Signature Version 4",
          "Date header",
          "API version",
          "ISO 8601 format",
          "Upload Part",
          "Amazon S3 Glacier",
          "x-amz-date",
          "x-amz-glacier-version",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_348",
      "text": "Amazon S3 Glacier Developer Guide\nCommon Response Headers\nThe following table describes response headers that are common to most API responses.\nName Description\nContent-L The length in bytes of the response body.\nength\nType: String\nDate The date and time Amazon S3 Glacier (S3 Glacier) responded, for example,\nWed, 10 Feb 2017 12:00:00 GMT. The format of the date must be\none of the full date formats specified by RFC 2616, section 3.3. Note that\nDate returned may drift slightly from other dates, so for example, the date\nreturned from an Upload Archive (POST archive) request may not match\nthe date shown for the archive in an inventory list for the vault.\nType: String\nx-amzn-Re A value created by S3 Glacier that uniquely identifies your request. In the\nquestId event that you have a problem with S3 Glacier, AWS can use this value to\ntroubleshoot the problem. It is recommended that you log these values.\nType: String\nx-amz-sha The SHA256 tree-hash checksum of the archive or inventory body. For\n256-tree- more information about calculating this checksum, see Computing\nhash Checksums.\nType: String\nSigning Requests\nS3 Glacier requires that you authenticate every request you send by signing the request. To sign a\nrequest, you calculate a digital signature using a cryptographic hash function. A cryptographic hash\nis a function that returns a unique hash value based on the input. The input to the hash function\nincludes the text of your request and your secret access key. The hash function returns a hash value\nCommon Response Headers API Version 2012-06-01 339",
      "start_idx": 542286,
      "end_idx": 543856,
      "metadata": {
        "num_sentences": 15,
        "num_words": 259,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "response headers",
            "SHA256 tree-hash",
            "cryptographic hash",
            "API request",
            "RFC 2616",
            "Signing Requests",
            "Checksum",
            "Upload Archive",
            "inventory list"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "x-amz-sha256-tree-hash",
            "Content-Length",
            "Date"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Authentication",
            "Checksum Computation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Cryptographic Hash Function"
          ]
        },
        "semantic": {
          "summary": "This documentation describes common response headers for Amazon S3 Glacier API responses and explains the signing process for requests using cryptographic hash functions.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the common response headers for Amazon S3 Glacier API?",
            "How is a request signed in S3 Glacier?",
            "What is the purpose of the x-amz-sha256-tree-hash header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "Upload Archive",
          "SHA256 tree-hash",
          "Date",
          "cryptographic hash",
          "Content-Length",
          "response headers",
          "Amazon S3 Glacier",
          "inventory list",
          "Signing Requests",
          "RFC 2616",
          "API request",
          "x-amz-sha256-tree-hash",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_349",
      "text": "Amazon S3 Glacier Developer Guide\nthat you include in the request as your signature. The signature is part of the Authorization\nheader of your request.\nAfter receiving your request, S3 Glacier recalculates the signature using the same hash function\nand input that you used to sign the request. If the resulting signature matches the signature in the\nrequest, S3 Glacier processes the request. Otherwise, the request is rejected.\nS3 Glacier supports authentication using AWS Signature Version 4. The process for calculating a\nsignature can be broken into three tasks:\n\u2022 Task 1: Create a Canonical Request\nRearrange your HTTP request into a canonical format. Using a canonical form is necessary\nbecause S3 Glacier uses the same canonical form when it recalculates a signature to compare\nwith the one you sent.\n\u2022 Task 2: Create a String to Sign\nCreate a string that you will use as one of the input values to your cryptographic hash function.\nThe string, called the string to sign, is a concatenation of the name of the hash algorithm, the\nrequest date, a credential scope string, and the canonicalized request from the previous task. The\ncredential scope string itself is a concatenation of date, AWS Region, and service information.\n\u2022 Task 3: Create a Signature\nCreate a signature for your request by using a cryptographic hash function that accepts two\ninput strings: your string to sign and a derived key. The derived key is calculated by starting with\nyour secret access key and using the credential scope string to create a series of hash-based\nmessage authentication codes (HMACs). Note that the hash function used in this signing step is\nnot the tree-hash algorithm used in S3 Glacier APIs that upload data.\nTopics\n\u2022 Example Signature Calculation\n\u2022 Calculating Signatures for the Streaming Operations\nSigning Requests API Version 2012-06-01 340",
      "start_idx": 543858,
      "end_idx": 545707,
      "metadata": {
        "num_sentences": 15,
        "num_words": 303,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Authentication",
              "Signature Calculation",
              "Request Signing"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "AWS Signature Version 4",
            "Canonical Request",
            "String to Sign",
            "Signature",
            "Authorization header",
            "Hash function",
            "Credential scope",
            "HMAC",
            "Secret access key"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Signature Version 4",
            "Authorization header",
            "Credential scope string",
            "HMAC"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Authentication",
          "secondary_categories": [
            "Cryptographic Hashing",
            "API Request Signing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to authenticate requests to Amazon S3 Glacier using AWS Signature Version 4, detailing the process to create a canonical request, a string to sign, and a signature using cryptographic hash functions.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I authenticate requests to Amazon S3 Glacier?",
            "What is the process for calculating a signature using AWS Signature Version 4?",
            "What are the components of a canonical request in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Authentication]",
        "tf_idf_keywords": [
          "AWS Signature Version 4",
          "HMAC",
          "Credential scope",
          "Authorization header",
          "Secret access key",
          "String to Sign",
          "Canonical Request",
          "Hash function",
          "Amazon S3 Glacier",
          "Signature",
          "Credential scope string",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_350",
      "text": "Amazon S3 Glacier Developer Guide\nExample Signature Calculation\nThe following example walks you through the details of creating a signature for Create Vault (PUT\nvault). The example could be used as a reference to check your signature calculation method. For\nmore information, see Signing AWS API requests in the IAM User Guide.\nThe example assumes the following:\n\u2022 The time stamp of the request is Fri, 25 May 2012 00:24:53 GMT.\n\u2022 The endpoint is US East (N. Virginia) Region us-east-1.\nThe general request syntax (including the JSON body) is:\nPUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Fri, 25 May 2012 00:24:53 GMT\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is:\nPUT\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-date:20120525T002453Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-date;x-amz-glacier-version\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nThe last line of the canonical request is the hash of the request body. Also, note the empty third\nline in the canonical request. This is because there are no query parameters for this API.\nThe string to sign for Task 2: Create a String to Sign is:\nAWS4-HMAC-SHA256\n20120525T002453Z\nExample Signature Calculation API Version 2012-06-01 341",
      "start_idx": 545709,
      "end_idx": 547092,
      "metadata": {
        "num_sentences": 9,
        "num_words": 185,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Signature Calculation",
              "Canonical Request",
              "String to Sign"
            ]
          },
          "keywords": [
            "signature calculation",
            "Create Vault",
            "canonical request",
            "string to sign",
            "AWS API",
            "IAM User Guide",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "hash",
            "query parameters"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "US East (N. Virginia)",
            "IAM User Guide",
            "AWS4-HMAC-SHA256",
            "2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "AWS API Authentication",
          "secondary_categories": [
            "Cloud Storage",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "IAM"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This example demonstrates how to calculate a signature for an AWS API request, specifically for the 'Create Vault' operation in Amazon S3 Glacier. It includes details on canonical requests and strings to sign for authentication.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a signature for AWS API requests?",
            "What is a canonical request in AWS Signature Version 4?",
            "What are the required headers for the Create Vault operation in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [AWS API Authentication]",
        "tf_idf_keywords": [
          "IAM User Guide",
          "hash",
          "string to sign",
          "AWS4-HMAC-SHA256",
          "signature calculation",
          "query parameters",
          "IAM",
          "Create Vault",
          "US East (N. Virginia)",
          "Amazon S3 Glacier",
          "canonical request",
          "AWS API",
          "x-amz-glacier-version",
          "2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_351",
      "text": "Amazon S3 Glacier Developer Guide\n20120525/us-east-1/glacier/aws4_request\n5f1da1a2d0feb614dd03d71e87928b8e449ac87614479332aced3a701f916743\nThe first line of the string to sign is the algorithm, the second line is the time stamp, the third line\nis the credential scope, and the last line is a hash of the canonical request from Task 1: Create a\nCanonical Request. The service name to use in the credential scope is glacier.\nFor Task 3: Create a Signature, the derived key can be represented as:\nderived key = HMAC(HMAC(HMAC(HMAC(\"AWS4\" + YourSecretAccessKey,\"20120525\"),\"us-\neast-1\"),\"glacier\"),\"aws4_request\")\nIf the secret access key, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY, is used, then the\ncalculated signature is:\n3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nThe final step is to construct the Authorization header. For the demonstration access key\nAKIAIOSFODNN7EXAMPLE, the header (with line breaks added for readability) is:\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/us-east-1/\nglacier/aws4_request,\nSignedHeaders=host;x-amz-date;x-amz-glacier-version,\nSignature=3ce5b2f2fffac9262b4da9256f8d086b4aaf42eba5f111c21681a65a127b7c2a\nCalculating Signatures for the Streaming Operations\nUpload Archive (POST archive) and Upload Part (PUT uploadID) are streaming operations that\nrequire you to include an additional header x-amz-content-sha256 when signing and sending\nyour request. The signing steps for the streaming operations are exactly the same as those for\nother operations, with the addition of the streaming header.\nThe calculation of the streaming header x-amz-content-sha256 is based on the SHA256 hash\nof the entire content (payload) that is to be uploaded. Note that this calculation is different from\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 342",
      "start_idx": 547094,
      "end_idx": 548939,
      "metadata": {
        "num_sentences": 7,
        "num_words": 221,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Authentication",
              "Signature Calculation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "canonical request",
            "signature calculation",
            "HMAC",
            "x-amz-content-sha256",
            "Authorization header",
            "streaming operations",
            "SHA256 hash",
            "credential scope",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HMAC",
            "AWS4-HMAC-SHA256",
            "x-amz-content-sha256",
            "Authorization header"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Authentication",
          "secondary_categories": [
            "AWS Services",
            "API Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HMAC"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to calculate signatures for Amazon S3 Glacier operations, including streaming uploads, using the AWS4-HMAC-SHA256 algorithm and constructing the Authorization header.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a signature for Amazon S3 Glacier operations?",
            "What is the process for constructing the Authorization header in AWS?",
            "How do streaming operations differ in signature calculation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Authentication]",
        "tf_idf_keywords": [
          "SHA256 hash",
          "AWS4-HMAC-SHA256",
          "signature calculation",
          "HMAC",
          "Authorization header",
          "streaming operations",
          "Amazon S3 Glacier",
          "canonical request",
          "credential scope",
          "x-amz-content-sha256"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_352",
      "text": "Amazon S3 Glacier Developer Guide\nthe SHA256 tree hash (Computing Checksums). Besides trivial cases, the SHA 256 hash value of the\npayload data will be different from the SHA256 tree hash of the payload data.\nIf the payload data is specified as a byte array, you can use the following Java code snippet to\ncalculate the SHA256 hash.\npublic static byte[] computePayloadSHA256Hash2(byte[] payload) throws\nNoSuchAlgorithmException, IOException {\nBufferedInputStream bis =\nnew BufferedInputStream(new ByteArrayInputStream(payload));\nMessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\nbyte[] buffer = new byte[4096];\nint bytesRead = -1;\nwhile ( (bytesRead = bis.read(buffer, 0, buffer.length)) != -1 ) {\nmessageDigest.update(buffer, 0, bytesRead);\n}\nreturn messageDigest.digest();\n}\nSimilarly, in C# you can calculate the SHA256 hash of the payload data as shown in the following\ncode snippet.\npublic static byte[] CalculateSHA256Hash(byte[] payload)\n{\nSHA256 sha256 = System.Security.Cryptography.SHA256.Create();\nbyte[] hash = sha256.ComputeHash(payload);\nreturn hash;\n}\nExample Signature Calculation for Streaming API\nThe following example walks you through the details of creating a signature for Upload Archive\n(POST archive), one of the two streaming APIs in S3 Glacier. The example assumes the following:\n\u2022 The time stamp of the request is Mon, 07 May 2012 00:00:00 GMT.\n\u2022 The endpoint is the US East (N. Virginia) Region, us-east-1.\n\u2022 The content payload is a string \"Welcome to S3 Glacier.\"\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 343",
      "start_idx": 548941,
      "end_idx": 550531,
      "metadata": {
        "num_sentences": 9,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Snippet",
              "Example"
            ]
          },
          "keywords": [
            "SHA256",
            "tree hash",
            "payload data",
            "signature calculation",
            "streaming API",
            "S3 Glacier",
            "Java",
            "C#",
            "MessageDigest",
            "cryptography"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "Streaming API",
            "US East Region",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Cryptography",
            "Software Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA256 hashes for payload data in Java and C#, and provides an example of signature calculation for the Amazon S3 Glacier Streaming API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a SHA256 hash in Java or C#?",
            "What is the process for creating a signature for the S3 Glacier Streaming API?",
            "What is the difference between SHA256 hash and SHA256 tree hash?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "tree hash",
          "cryptography",
          "signature calculation",
          "US East Region",
          "MessageDigest",
          "Streaming API",
          "C#",
          "payload data",
          "SHA256",
          "Amazon S3 Glacier",
          "Java",
          "API Version 2012-06-01",
          "S3 Glacier",
          "streaming API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_353",
      "text": "Amazon S3 Glacier Developer Guide\nThe general request syntax (including the JSON body) is shown in the example below. Note that\nthe x-amz-content-sha256 header is included. In this simplified example, the x-amz-sha256-\ntree-hash and x-amz-content-sha256 are the same value. However, for archive uploads\ngreater than 1 MB, this is not the case.\nPOST /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-east-1.amazonaws.com\nDate: Mon, 07 May 2012 00:00:00 GMT\nx-amz-archive-description: my archive\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 payload hash\nAuthorization: SignatureToBeCalculated\nx-amz-glacier-version: 2012-06-01\nThe canonical form of the request calculated for Task 1: Create a Canonical Request is shown\nbelow. Note that the streaming header x-amz-content-sha256 is included with its value. This\nmeans you must read the payload and calculate the SHA256 hash first and then compute the\nsignature.\nPOST\n/-/vaults/examplevault\nhost:glacier.us-east-1.amazonaws.com\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-date:20120507T000000Z\nx-amz-glacier-version:2012-06-01\nhost;x-amz-content-sha256;x-amz-date;x-amz-glacier-version\n726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nThe remainder of the signature calculation follows the steps outlined in Example Signature\nCalculation. The Authorization header using the secret access key wJalrXUtnFEMI/K7MDENG/\nbPxRfiCYEXAMPLEKEY and the access key AKIAIOSFODNN7EXAMPLE is shown below (with line\nbreaks added for readability):\nAuthorization=AWS4-HMAC-SHA256\nCredential=AKIAIOSFODNN7EXAMPLE/20120507/us-east-1/glacier/aws4_request,\nSignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-glacier-version,\nCalculating Signatures for the Streaming Operations API Version 2012-06-01 344",
      "start_idx": 550533,
      "end_idx": 552355,
      "metadata": {
        "num_sentences": 9,
        "num_words": 184,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-content-sha256",
            "x-amz-sha256-tree-hash",
            "canonical request",
            "SHA256 hash",
            "Authorization header",
            "AWS4-HMAC-SHA256",
            "streaming operations",
            "secret access key",
            "access key"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "AWS4-HMAC-SHA256",
            "Authorization header",
            "x-amz-content-sha256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create and sign requests for Amazon S3 Glacier, including an example of a canonical request and the use of SHA256 hashes for signature calculation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a signature for Amazon S3 Glacier requests?",
            "What is the purpose of the x-amz-content-sha256 header?",
            "How do I create a canonical request for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "access key",
          "SHA256 hash",
          "AWS4-HMAC-SHA256",
          "Authorization header",
          "streaming operations",
          "Amazon S3 Glacier",
          "secret access key",
          "canonical request",
          "SHA256",
          "x-amz-content-sha256",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_354",
      "text": "Amazon S3 Glacier Developer Guide\nSignature=b092397439375d59119072764a1e9a144677c43d9906fd98a5742c57a2855de6\nComputing Checksums\nWhen uploading an archive, you must include both the x-amz-sha256-tree-hash and x-\namz-content-sha256 headers. The x-amz-sha256-tree-hash header is a checksum of the\npayload in your request body. This topic describes how to calculate the x-amz-sha256-tree-\nhash header. The x-amz-content-sha256 header is a hash of the entire payload and is required\nfor authorization. For more information, see Example Signature Calculation for Streaming API.\nThe payload of your request can be an:\n\u2022 Entire archive\u2014 When uploading an archive in a single request using the Upload Archive API,\nyou send the entire archive in the request body. In this case, you must include the checksum of\nthe entire archive.\n\u2022 Archive part\u2014 When uploading an archive in parts using the multipart upload API, you send\nonly a part of the archive in the request body. In this case, you include the checksum of the\narchive part. And after you upload all the parts, you send a Complete Multipart Upload request,\nwhich must include the checksum of the entire archive.\nThe checksum of the payload is a SHA-256 tree hash. It is called a tree hash because in the process\nof computing the checksum you compute a tree of SHA-256 hash values. The hash value at the\nroot is the checksum for the entire archive.\nNote\nThis section describes a way to compute the SHA-256 tree hash. However, you may use any\nprocedure as long as it produces the same result.\nYou compute the SHA-256 tree hash as follows:\n1. For each 1 MB chunk of payload data, compute the SHA-256 hash. The last chunk of data can be\nless than 1 MB. For example, if you are uploading a 3.2 MB archive, you compute the SHA-256\nComputing Checksums API Version 2012-06-01 345",
      "start_idx": 552357,
      "end_idx": 554175,
      "metadata": {
        "num_sentences": 19,
        "num_words": 298,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Instructional",
              "Technical Explanation"
            ]
          },
          "keywords": [
            "SHA-256 tree hash",
            "checksum",
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "multipart upload",
            "archive",
            "payload",
            "Upload Archive API",
            "Complete Multipart Upload",
            "hash values"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Upload Archive API",
            "Complete Multipart Upload",
            "SHA-256",
            "Streaming API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Security",
          "secondary_categories": [
            "Cloud Storage",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to compute the SHA-256 tree hash for checksums when uploading archives, either as single requests or multipart uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How is the SHA-256 tree hash computed for Amazon S3 Glacier?",
            "What headers are required when uploading an archive to Amazon S3 Glacier?",
            "What is the difference between single and multipart archive uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity and Security]",
        "tf_idf_keywords": [
          "archive",
          "SHA-256 tree hash",
          "multipart upload",
          "Streaming API",
          "Complete Multipart Upload",
          "checksum",
          "Upload Archive API",
          "Amazon S3 Glacier",
          "payload",
          "SHA-256",
          "x-amz-content-sha256",
          "x-amz-sha256-tree-hash",
          "hash values"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_355",
      "text": "Amazon S3 Glacier Developer Guide\nhash values for each of the first three 1 MB chunks of data, and then compute the SHA-256 hash\nof the remaining 0.2 MB data. These hash values form the leaf nodes of the tree.\n2. Build the next level of the tree.\na. Concatenate two consecutive child node hash values and compute the SHA-256 hash of the\nconcatenated hash values. This concatenation and generation of the SHA-256 hash produces\na parent node for the two child nodes.\nb. If only one child node remains, promote that hash value to the next level in the tree.\n3. Repeat step 2 until the resulting tree has a root. The root of the tree provides a hash of the\nentire archive and a root of the appropriate subtree provides the hash for the part in a multipart\nupload.\nTopics\n\u2022 Tree Hash Example 1: Uploading an archive in a single request\n\u2022 Tree Hash Example 2: Uploading an archive using a multipart upload\n\u2022 Computing the Tree Hash of a File\n\u2022 Receiving Checksums When Downloading Data\nTree Hash Example 1: Uploading an archive in a single request\nWhen you upload an archive in a single request using the Upload Archive API (see Upload Archive\n(POST archive)), the request payload includes the entire archive. Accordingly, you must include\nthe tree hash of the entire archive in the x-amz-sha256-tree-hash request header. Suppose\nyou want to upload a 6.5 MB archive. The following diagram illustrates the process of creating\nthe SHA-256 hash of the archive. You read the archive and compute the SHA-256 hash for each\n1 MB chunk. You also compute the hash for the remaining 0.5 MB data and then build the tree as\noutlined in the preceding procedure.\nTree Hash Example 1: Uploading an archive in a single request API Version 2012-06-01 346",
      "start_idx": 554177,
      "end_idx": 555908,
      "metadata": {
        "num_sentences": 18,
        "num_words": 307,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "multipart upload",
            "archive",
            "checksums",
            "x-amz-sha256-tree-hash",
            "hash values",
            "Amazon S3 Glacier",
            "Upload Archive API",
            "chunk"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Upload Archive API",
            "SHA-256",
            "x-amz-sha256-tree-hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Integrity and Storage",
          "secondary_categories": [
            "Cloud Storage",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA-256 hashing"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of creating a tree hash using SHA-256 for archives in Amazon S3 Glacier, including single and multipart upload scenarios. It details hash computation and its role in ensuring data integrity during uploads.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How is a tree hash computed for an archive in Amazon S3 Glacier?",
            "What is the process for uploading an archive using the Upload Archive API?",
            "How does the x-amz-sha256-tree-hash header work in a single archive upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Data Integrity and Storage]",
        "tf_idf_keywords": [
          "tree hash",
          "checksums",
          "archive",
          "multipart upload",
          "chunk",
          "Upload Archive API",
          "Amazon S3 Glacier",
          "SHA-256",
          "hash values",
          "API Version 2012-06-01",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_356",
      "text": "Amazon S3 Glacier Developer Guide\nTree Hash Example 2: Uploading an archive using a multipart upload\nThe process of computing the tree hash when uploading an archive using multipart upload is the\nsame when uploading the archive in a single request. The only difference is that in a multipart\nupload you upload only a part of the archive in each request (using the Upload Part (PUT uploadID)\nAPI), and therefore you provide the checksum of only the part in the x-amz-sha256-tree-hash\nrequest header. However, after you upload all parts, you must send the Complete Multipart Upload\n(see Complete Multipart Upload (POST uploadID)) request with a tree hash of the entire archive in\nthe x-amz-sha256-tree-hash request header.\nTree Hash Example 2: Uploading an archive using a multipart upload API Version 2012-06-01 347",
      "start_idx": 555910,
      "end_idx": 556724,
      "metadata": {
        "num_sentences": 4,
        "num_words": 131,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Multipart Upload",
              "Tree Hash"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Tree Hash",
            "Multipart Upload",
            "Checksum",
            "x-amz-sha256-tree-hash",
            "Upload Part",
            "Complete Multipart Upload",
            "API",
            "Archive",
            "POST uploadID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-sha256-tree-hash",
            "Upload Part API",
            "Complete Multipart Upload API",
            "Archive"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to compute and use a tree hash while uploading archives to Amazon S3 Glacier via multipart upload, including handling checksums for individual parts and the complete archive.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a tree hash for multipart uploads in Amazon S3 Glacier?",
            "What is the role of x-amz-sha256-tree-hash in multipart uploads?",
            "How do I complete a multipart upload in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "Tree Hash",
          "API",
          "Complete Multipart Upload",
          "Multipart Upload",
          "POST uploadID",
          "Archive",
          "Amazon S3 Glacier",
          "Upload Part",
          "Upload Part API",
          "Complete Multipart Upload API",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_357",
      "text": "Amazon S3 Glacier Developer Guide\nComputing the Tree Hash of a File\nThe algorithms shown here are selected for demonstration purposes. You can optimize the code\nas needed for your implementation scenario. If you are using an Amazon SDK to program against\nAmazon S3 Glacier (S3 Glacier), the tree hash calculation is done for you and you only need to\nprovide the file reference.\nExample 1: Java Example\nThe following example shows how to calculate the SHA256 tree hash of a file using Java. You\ncan run this example by either supplying a file location as an argument or you can use the\nTreeHashExample.computeSHA256TreeHash method directly from your code.\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nComputing the Tree Hash of a File API Version 2012-06-01 348",
      "start_idx": 556726,
      "end_idx": 557522,
      "metadata": {
        "num_sentences": 6,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Code"
            ]
          },
          "keywords": [
            "Tree Hash",
            "SHA256",
            "Amazon S3 Glacier",
            "Java",
            "File Hashing",
            "SDK",
            "API Version",
            "Compute",
            "File Reference",
            "Optimization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256",
            "TreeHashExample.computeSHA256TreeHash"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Programming"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "Amazon SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute the SHA256 tree hash of a file using Java and provides example code for implementation. It highlights that using the Amazon SDK simplifies this process by automating the tree hash calculation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute the SHA256 tree hash of a file in Java?",
            "What is the purpose of tree hash calculation in Amazon S3 Glacier?",
            "Does the Amazon SDK handle tree hash computation automatically?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Tree Hash",
          "File Hashing",
          "API Version",
          "Optimization",
          "TreeHashExample.computeSHA256TreeHash",
          "SHA256",
          "Amazon S3 Glacier",
          "Java",
          "File Reference",
          "SDK",
          "Compute"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_359",
      "text": "Amazon S3 Glacier Developer Guide\n* @return a byte[] containing the SHA-256 tree hash\n* @throws IOException\n* Thrown if there's an issue reading the input file\n* @throws NoSuchAlgorithmException\n*/\npublic static byte[] computeSHA256TreeHash(File inputFile) throws IOException,\nNoSuchAlgorithmException {\nbyte[][] chunkSHA256Hashes = getChunkSHA256Hashes(inputFile);\nreturn computeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB.\n*\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1 MB chunk\n* @throws IOException\n* Thrown if there's an IOException when reading the file\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\npublic static byte[][] getChunkSHA256Hashes(File file) throws IOException,\nNoSuchAlgorithmException {\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\nlong numChunks = file.length() / ONE_MB;\nif (file.length() % ONE_MB > 0) {\nnumChunks++;\n}\nif (numChunks == 0) {\nreturn new byte[][] { md.digest() };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int) numChunks][];\nFileInputStream fileStream = null;\ntry {\nfileStream = new FileInputStream(file);\nbyte[] buff = new byte[ONE_MB];\nComputing the Tree Hash of a File API Version 2012-06-01 350",
      "start_idx": 558648,
      "end_idx": 560039,
      "metadata": {
        "num_sentences": 3,
        "num_words": 199,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Error Handling",
              "API Usage"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "checksum",
            "chunk",
            "IOException",
            "NoSuchAlgorithmException",
            "MessageDigest",
            "FileInputStream",
            "1 MB",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "SHA-256",
            "Amazon S3 Glacier",
            "IOException",
            "NoSuchAlgorithmException",
            "MessageDigest"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Hashing and Cryptographic Functions",
          "secondary_categories": [
            "Cloud Storage",
            "File Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "MessageDigest",
            "FileInputStream"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA-256 tree hashes for files, including handling 1 MB chunks and potential exceptions during the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute a SHA-256 tree hash for a file?",
            "What exceptions should be handled when calculating file checksums?",
            "What is the process for handling 1 MB chunks in hashing?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Hashing and Cryptographic Functions]",
        "tf_idf_keywords": [
          "tree hash",
          "NoSuchAlgorithmException",
          "MessageDigest",
          "chunk",
          "FileInputStream",
          "checksum",
          "IOException",
          "Amazon S3 Glacier",
          "SHA-256",
          "1 MB"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_360",
      "text": "Amazon S3 Glacier Developer Guide\nint bytesRead;\nint idx = 0;\nint offset = 0;\nwhile ((bytesRead = fileStream.read(buff, offset, ONE_MB)) > 0) {\nmd.reset();\nmd.update(buff, 0, bytesRead);\nchunkSHA256Hashes[idx++] = md.digest();\noffset += bytesRead;\n}\nreturn chunkSHA256Hashes;\n} finally {\nif (fileStream != null) {\ntry {\nfileStream.close();\n} catch (IOException ioe) {\nSystem.err.printf(\"Exception while closing %s.\\n %s\",\nfile.getName(),\nioe.getMessage());\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1 MB chunk\n* checksums.\n*\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level. Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level.\n*\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n* @throws NoSuchAlgorithmException\n* Thrown if SHA-256 MessageDigest can't be found\n*/\nComputing the Tree Hash of a File API Version 2012-06-01 351",
      "start_idx": 560041,
      "end_idx": 561264,
      "metadata": {
        "num_sentences": 5,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Algorithm Explanation"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "chunk checksums",
            "file stream",
            "hash computation",
            "digest",
            "IOException",
            "MessageDigest",
            "byte array",
            "1 MB chunks"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA-256",
            "IOException",
            "MessageDigest",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Hashing Algorithms",
            "File Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java",
            "MessageDigest"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute the SHA-256 tree hash for a file using iterative hashing of 1 MB chunks. It includes a code snippet and details the algorithm's implementation and exception handling.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I compute the SHA-256 tree hash for a file?",
            "What is the purpose of using 1 MB chunks in hash computation?",
            "How can I handle exceptions while closing file streams in Java?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "hash computation",
          "chunk checksums",
          "tree hash",
          "file stream",
          "MessageDigest",
          "byte array",
          "IOException",
          "1 MB chunks",
          "Amazon S3 Glacier",
          "digest",
          "SHA-256",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_362",
      "text": "Amazon S3 Glacier Developer Guide\n* @return A String containing Hex characters\n*/\npublic static String toHex(byte[] data) {\nStringBuilder sb = new StringBuilder(data.length * 2);\nfor (int i = 0; i < data.length; i++) {\nString hex = Integer.toHexString(data[i] & 0xFF);\nif (hex.length() == 1) {\n// Append leading zero.\nsb.append(\"0\");\n}\nsb.append(hex);\n}\nreturn sb.toString().toLowerCase();\n}\n}\nExample 2: C# .NET Example\nThe following example shows how to calculate the SHA256 tree hash of a file. You can run this\nexample by supplying a file location as an argument.\nusing System;\nusing System.IO;\nusing System.Security.Cryptography;\nnamespace ExampleTreeHash\n{\nclass Program\n{\nstatic int ONE_MB = 1024 * 1024;\n/**\n* Compute the Hex representation of the SHA-256 tree hash for the\n* specified file\n*\n* @param args\n* args[0]: a file to compute a SHA-256 tree hash for\n*/\npublic static void Main(string[] args)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 353",
      "start_idx": 562307,
      "end_idx": 563279,
      "metadata": {
        "num_sentences": 4,
        "num_words": 159,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Implementation",
              "Hash Calculation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256",
            "tree hash",
            "file",
            "Hex",
            "byte array",
            "hash function",
            "C#",
            ".NET",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Cryptography"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            ".NET Framework",
            "C#"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples in Java and C# to compute the SHA256 tree hash of a file for use with Amazon S3 Glacier, demonstrating how to convert data to a Hex string and calculate file hashes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I calculate a SHA256 tree hash for a file in C#?",
            "What is the process to convert data to Hex format in Java?",
            "Which API version is used for computing the tree hash in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "tree hash",
          "file",
          "byte array",
          ".NET",
          "C#",
          "SHA256",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "Hex",
          "API Version 2012-06-01",
          "hash function"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_364",
      "text": "Amazon S3 Glacier Developer Guide\nreturn ComputeSHA256TreeHash(chunkSHA256Hashes);\n}\n/**\n* Computes a SHA256 checksum for each 1 MB chunk of the input file. This\n* includes the checksum for the last chunk even if it is smaller than 1 MB.\n*\n* @param file\n* A file to compute checksums on\n* @return a byte[][] containing the checksums of each 1MB chunk\n*/\npublic static byte[][] GetChunkSHA256Hashes(FileStream file)\n{\nlong numChunks = file.Length / ONE_MB;\nif (file.Length % ONE_MB > 0)\n{\nnumChunks++;\n}\nif (numChunks == 0)\n{\nreturn new byte[][] { CalculateSHA256Hash(null, 0) };\n}\nbyte[][] chunkSHA256Hashes = new byte[(int)numChunks][];\ntry\n{\nbyte[] buff = new byte[ONE_MB];\nint bytesRead;\nint idx = 0;\nwhile ((bytesRead = file.Read(buff, 0, ONE_MB)) > 0)\n{\nchunkSHA256Hashes[idx++] = CalculateSHA256Hash(buff, bytesRead);\n}\nreturn chunkSHA256Hashes;\n}\nfinally\n{\nif (file != null)\n{\ntry\nComputing the Tree Hash of a File API Version 2012-06-01 355",
      "start_idx": 564437,
      "end_idx": 565385,
      "metadata": {
        "num_sentences": 3,
        "num_words": 151,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Implementation",
              "Checksum Calculation"
            ]
          },
          "keywords": [
            "SHA256",
            "Tree Hash",
            "chunk",
            "checksum",
            "1MB",
            "FileStream",
            "Amazon S3 Glacier",
            "API Version 2012-06-01",
            "hash computation",
            "byte array"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256TreeHash",
            "FileStream",
            "ONE_MB",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "File Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "FileStream",
            "SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute SHA256 tree hashes for files in Amazon S3 Glacier by processing 1 MB chunks and generating a checksum for each chunk, including smaller chunks.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How is a SHA256 tree hash computed for files in Amazon S3 Glacier?",
            "What is the process for handling chunks smaller than 1 MB during checksum calculation?",
            "What role does FileStream play in reading file data for hash computation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Tree Hash",
          "hash computation",
          "FileStream",
          "SHA256TreeHash",
          "byte array",
          "chunk",
          "1MB",
          "checksum",
          "SHA256",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "ONE_MB"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_365",
      "text": "Amazon S3 Glacier Developer Guide\n{\nfile.Close();\n}\ncatch (IOException ioe)\n{\nthrow ioe;\n}\n}\n}\n}\n/**\n* Computes the SHA-256 tree hash for the passed array of 1MB chunk\n* checksums.\n*\n* This method uses a pair of arrays to iteratively compute the tree hash\n* level by level. Each iteration takes two adjacent elements from the\n* previous level source array, computes the SHA-256 hash on their\n* concatenated value and places the result in the next level's destination\n* array. At the end of an iteration, the destination array becomes the\n* source array for the next level.\n*\n* @param chunkSHA256Hashes\n* An array of SHA-256 checksums\n* @return A byte[] containing the SHA-256 tree hash for the input chunks\n*/\npublic static byte[] ComputeSHA256TreeHash(byte[][] chunkSHA256Hashes)\n{\nbyte[][] prevLvlHashes = chunkSHA256Hashes;\nwhile (prevLvlHashes.GetLength(0) > 1)\n{\nint len = prevLvlHashes.GetLength(0) / 2;\nif (prevLvlHashes.GetLength(0) % 2 != 0)\n{\nlen++;\n}\nbyte[][] currLvlHashes = new byte[len][];\nint j = 0;\nfor (int i = 0; i < prevLvlHashes.GetLength(0); i = i + 2, j++)\n{\nComputing the Tree Hash of a File API Version 2012-06-01 356",
      "start_idx": 565387,
      "end_idx": 566528,
      "metadata": {
        "num_sentences": 5,
        "num_words": 193,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Code Example",
              "Algorithm Explanation"
            ]
          },
          "keywords": [
            "SHA-256",
            "tree hash",
            "hash computation",
            "chunk checksums",
            "byte array",
            "iteration",
            "concatenation",
            "hash levels",
            "Amazon S3 Glacier",
            "IOException"
          ],
          "entities": [
            "SHA-256",
            "Amazon S3 Glacier",
            "IOException"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Development"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Java"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to compute a SHA-256 tree hash for a file using an iterative algorithm with Java code. It is part of the Amazon S3 Glacier Developer Guide for ensuring data integrity.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I compute a SHA-256 tree hash for file chunks?",
            "What is the algorithm for generating a tree hash in Amazon S3 Glacier?",
            "How does the provided Java code handle hash computation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "hash computation",
          "chunk checksums",
          "tree hash",
          "iteration",
          "hash levels",
          "byte array",
          "concatenation",
          "IOException",
          "Amazon S3 Glacier",
          "SHA-256"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_367",
      "text": "Amazon S3 Glacier Developer Guide\nReceiving Checksums When Downloading Data\nWhen you retrieve an archive using the Initiate Job API (see Initiate Job (POST jobs)), you can\noptionally specify a range to retrieve of the archive. Similarly, when you download your data using\nthe Get Job Output API (see Get Job Output (GET output)), you can optionally specify a range of\ndata to download. There are two characteristics of these ranges that are important to understand\nwhen you are retrieving and downloading your archive's data. The range to retrieve is required to\nbe megabyte aligned to the archive. Both the range to retrieve and the range to download must be\ntree hash aligned in order to receive checksum values when you download your data. The definition\nof these two types of range alignments are as follows:\n\u2022 Megabyte aligned - A range [StartByte, EndBytes] is megabyte (1024*1024) aligned when\nStartBytes is divisible by 1 MB and EndBytes plus 1 is divisible by 1 MB or is equal to the end of\nthe archive specified (archive byte size minus 1). A range used in the Initiate Job API, if specified,\nis required to be megabyte aligned.\n\u2022 Tree-hash aligned - A range [StartBytes, EndBytes] is tree hash aligned with respect to an archive\nif and only if the root of the tree hash built over the range is equivalent to a node in the tree\nhash of the whole archive. Both the range to retrieve and range to download must be tree hash\naligned in order to receive checksum values for the data you download. For an example of ranges\nand their relationship to the archive tree hash, see Tree Hash Example: Retrieving an archive\nrange that is tree-hash aligned.\nNote that a range that is tree-hash aligned is also megabyte aligned. However, a megabyte\naligned range is not necessarily tree-hash aligned.\nThe following cases describe when you receive a checksum value when you download your archive\ndata:\n\u2022 If you do not specify a range to retrieve in the Initiate Job request and you download the whole\narchive in the Get Job Request.\n\u2022 If you do not specify a range to retrieve in the Initiate Job request and you do specify a tree-hash\naligned range to download in the Get Job Request.\n\u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you download\nthe whole range in the Get Job Request.\nReceiving Checksums When Downloading Data API Version 2012-06-01 358",
      "start_idx": 567514,
      "end_idx": 569903,
      "metadata": {
        "num_sentences": 16,
        "num_words": 418,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Definition",
              "Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Initiate Job API",
            "Get Job Output API",
            "checksum",
            "megabyte aligned",
            "tree-hash aligned",
            "archive",
            "range",
            "data retrieval",
            "tree hash"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job API",
            "Get Job Output API",
            "Tree Hash",
            "Checksum"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and download data from Amazon S3 Glacier, focusing on checksum receipt and the required range alignments for data integrity. It details megabyte and tree-hash alignments and provides conditions for receiving checksum values.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the difference between megabyte aligned and tree-hash aligned ranges?",
            "When do I receive checksum values during data retrieval in Amazon S3 Glacier?",
            "How do I ensure data integrity when downloading archives from Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "Tree Hash",
          "tree hash",
          "archive",
          "Get Job Output API",
          "megabyte aligned",
          "range",
          "checksum",
          "data retrieval",
          "Amazon S3 Glacier",
          "Initiate Job API",
          "tree-hash aligned"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_368",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 If you specify a tree-hash aligned range to retrieve in the Initiate Job request and you specify a\ntree-hash aligned range to download in the Get Job Request.\nIf you specify a range to retrieve in the Initiate Job request that is not tree hash aligned, then you\ncan still get your archive data but no checksum values are returned when you download data in the\nGet Job Request.\nTree Hash Example: Retrieving an archive range that is tree-hash aligned\nSuppose you have a 6.5 MB archive in your vault and you want to retrieve 2 MB of the archive. How\nyou specify the 2 MB range in the Initiate Job request determines if you receive data checksum\nvalues when you download your data. The following diagram illustrates two 2 MB ranges for the\n6.5 MB archive that you could download. Both ranges are megabyte aligned, but only one is tree-\nhash aligned.\nTree-Hash Aligned Range Specification\nThis section gives the exact specification for what constitutes a tree-hash aligned range. Tree-hash\naligned ranges are important when you are downloading a portion of an archive and you specify\nReceiving Checksums When Downloading Data API Version 2012-06-01 359",
      "start_idx": 569905,
      "end_idx": 571089,
      "metadata": {
        "num_sentences": 8,
        "num_words": 202,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Conceptual",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "tree-hash",
            "aligned range",
            "checksum",
            "Initiate Job request",
            "Get Job Request",
            "archive",
            "vault",
            "6.5 MB",
            "2 MB range",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "tree-hash aligned range",
            "Initiate Job request",
            "Get Job Request",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains the concept of tree-hash aligned ranges in Amazon S3 Glacier and how they affect the retrieval of archive data and checksum validation when using the Initiate Job and Get Job requests.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is a tree-hash aligned range in Amazon S3 Glacier?",
            "How do tree-hash aligned ranges affect checksum validation?",
            "What happens if the range specified is not tree-hash aligned?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Conceptual] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive",
          "6.5 MB",
          "vault",
          "checksum",
          "2 MB range",
          "tree-hash",
          "Amazon S3 Glacier",
          "Get Job Request",
          "tree-hash aligned range",
          "Initiate Job request",
          "aligned range",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_369",
      "text": "Amazon S3 Glacier Developer Guide\nthe range of data to retrieve and the range to download from the retrieved data. If both of these\nranges are tree-hash aligned, then you will receive checksum data when you download the data.\nA range [A, B] is tree-hash aligned with respect to an archive if and only if when a new tree hash\nis built over [A, B], the root of the tree hash of that range is equivalent to a node in the tree hash\nof the whole archive. You can see this shown in the diagram in Tree Hash Example: Retrieving an\narchive range that is tree-hash aligned. In this section, we provide the specification for tree-hash\nalignment.\nConsider [P, Q) as the range query for an archive of N megabytes (MB) and P and Q are multiples of\none MB. Note that the actual inclusive range is [P MB, Q MB \u2013 1 byte], but for simplicity, we show it\nas [P, Q). With these considerations, then\n\u2022 If P is an odd number, there is only one possible tree-hash aligned range\u2014that is [P, P + 1 MB).\n\u2022 If P is an even number and k is the maximum number, where P can be written as 2k * X, then\nthere are at most k tree-hash aligned ranges that start with P. X is an integer greater than 0. The\ntree-hash aligned ranges fall in the following categories:\n\u2022 i i\nFor each i, where (0 <= i <= k) and where P + 2 < N, then [P, Q + 2) is a tree-hash aligned\nrange.\n\u2022 P = 0 is the special case where A = 2[lgN]*0\nError Responses\nIn the event of an error, the API returns one of the following exceptions:\nCode Description HTTP Status Type\nCode\nAccessDeniedException Returned if there was an attempt 403 Client\nto access a resource not allowed Forbidden\nby an AWS Identity and Access\nManagement (IAM) policy, or the\nincorrect AWS account ID was\nused in the request URI. For more\ninformation, see Identity and\nError Responses API Version 2012-06-01 360",
      "start_idx": 571091,
      "end_idx": 572910,
      "metadata": {
        "num_sentences": 12,
        "num_words": 351,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Specification",
              "Error Handling"
            ]
          },
          "keywords": [
            "tree-hash alignment",
            "range query",
            "archive",
            "checksum",
            "API",
            "AccessDeniedException",
            "IAM policy",
            "HTTP status",
            "AWS account ID",
            "megabytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Tree Hash",
            "AccessDeniedException",
            "AWS Identity and Access Management",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Identity and Access Management"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains tree-hash alignment for data retrieval and error responses for API requests, including conditions for alignment and handling AccessDeniedException errors.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is tree-hash alignment in Amazon S3 Glacier?",
            "How does Amazon S3 Glacier handle AccessDeniedException errors?",
            "What are the specifications for range queries in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Tree Hash",
          "megabytes",
          "IAM policy",
          "archive",
          "API",
          "checksum",
          "range query",
          "AccessDeniedException",
          "Amazon S3 Glacier",
          "tree-hash alignment",
          "HTTP status",
          "API Version 2012-06-01",
          "AWS Identity and Access Management",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_370",
      "text": "Amazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nAccess Management for Amazon\nS3 Glacier.\nBadRequest Returned if the request cannot 400 Bad Client\nbe processed. Request\nExpiredTokenException Returned if the security token 403 Client\nused in the request has expired. Forbidden\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process the expedited Unavailab\nrequest. This error only applies le\nto expedited retrievals and not\nto standard or bulk retrievals.\nInvalidParameterVa Returned if a parameter of the 400 Bad Client\nlueException request is incorrectly specified. Request\nInvalidSignatureEx Returned if the request signature 403 Client\nception is invalid. Forbidden\nLimitExceededException Returned if the request results in 400 Bad Client\none of the following limits being Request\nexceeded, a vault limit, a tags\nlimit, or the provisioned capacity\nlimit.\nMissingAuthenticat Returned if no authentication 400 Bad Client\nionTokenException data is found for the request. Request\nMissingParameterVa Returned if a required header or 400 Bad Client\nlueException parameter is missing from the Request\nrequest.\nError Responses API Version 2012-06-01 361",
      "start_idx": 572912,
      "end_idx": 574133,
      "metadata": {
        "num_sentences": 11,
        "num_words": 173,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "HTTP Status"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "BadRequest",
            "ExpiredTokenException",
            "InsufficientCapacityException",
            "InvalidParameterValueException",
            "InvalidSignatureException",
            "LimitExceededException",
            "MissingAuthenticationTokenException",
            "MissingParameterValueException",
            "HTTP Status Codes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ExpiredTokenException",
            "InvalidParameterValueException",
            "InsufficientCapacityException",
            "LimitExceededException"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Reference"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines error codes and HTTP status responses for Amazon S3 Glacier, including scenarios like expired tokens, invalid parameters, and insufficient capacity for expedited requests.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the error codes for Amazon S3 Glacier API?",
            "What does the InsufficientCapacityException mean in Amazon S3 Glacier?",
            "How does Amazon S3 Glacier handle invalid request parameters?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "MissingParameterValueException",
          "MissingAuthenticationTokenException",
          "HTTP Status Codes",
          "InvalidParameterValueException",
          "ExpiredTokenException",
          "BadRequest",
          "Amazon S3 Glacier",
          "InsufficientCapacityException",
          "LimitExceededException",
          "InvalidSignatureException"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_371",
      "text": "Amazon S3 Glacier Developer Guide\nCode Description HTTP Status Type\nCode\nPolicyEnforcedExce Returned if a retrieval job will 400 Bad Client\nption exceed the current data policy's Request\nretrieval rate limit. For more\ninformation about data retrieval\npolicies, see S3 Glacier Data\nRetrieval Policies.\nResourceNotFoundEx Returned if the specified 404 Not Client\nception resource such as a vault, upload Found\nID, or job ID does not exist.\nRequestTimeoutExce Returned if uploading an archive 408 Request Client\nption and Amazon S3 Glacier (S3 Timeout\nGlacier) times out while receiving\nthe upload.\nSerializationException Returned if the body of the 400 Bad Client\nrequest is invalid. If including a Request\nJSON payload, check that it is\nwell-formed.\nServiceUnavailable Returned if the service cannot 500 Server\nException complete the request. Internal\nServer\nError\nThrottlingException Returned if you need to reduce 400 Bad Client\nyour rate of requests to S3 Request\nGlacier.\nUnrecognizedClient Returned if the Access Key ID or 400 Bad Client\nException security token is invalid. Request\nVarious S3 Glacier APIs return the same exception, but with different exception messages to help\nyou troubleshoot the specific error encountered.\nError Responses API Version 2012-06-01 362",
      "start_idx": 574135,
      "end_idx": 575410,
      "metadata": {
        "num_sentences": 11,
        "num_words": 191,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "HTTP Status"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "retrieval job",
            "data policy",
            "HTTP status",
            "vault",
            "upload ID",
            "job ID",
            "serialization",
            "throttling",
            "Access Key ID"
          ],
          "entities": [
            "S3 Glacier",
            "Amazon S3",
            "HTTP Status Codes",
            "Error Responses",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "JSON"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference information about error codes and HTTP status types returned by Amazon S3 Glacier APIs, including conditions for each error and troubleshooting tips.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What do specific error codes in S3 Glacier APIs mean?",
            "How can I troubleshoot errors related to S3 Glacier retrieval jobs?",
            "What are the HTTP status codes associated with S3 Glacier API errors?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Access Key ID",
          "upload ID",
          "Amazon S3",
          "HTTP Status Codes",
          "retrieval job",
          "vault",
          "Error Responses",
          "API Version 2012-06-01",
          "data policy",
          "serialization",
          "Amazon S3 Glacier",
          "job ID",
          "HTTP status",
          "throttling",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_372",
      "text": "Amazon S3 Glacier Developer Guide\nS3 Glacier returns error information in the response body. The following examples show some of\nthe error responses.\nExample 1: Describe Job request with a job ID that does not exist\nSuppose you send a Describe Job (GET JobID) request for a job that does not exist. That is, you\nspecify a job ID that does not exist.\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nIn response, S3 Glacier returns the following error response.\nHTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABaZ9N92Iiyv4N7sru3ABEpSQkuFtmH3NP6aAC51ixfjg\nContent-Type: application/json\nContent-Length: 185\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"The job ID was not found: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVEXAMPLEbadJobID\",\n\"type\": \"Client\"\n}\nWhere:\nCode\nOne of the general exceptions.\nType: String\nMessage\nA generic description of the error condition specific to the API that returns the error.\nExample 1: Describe Job request with a job ID that does not exist API Version 2012-06-01 363",
      "start_idx": 575412,
      "end_idx": 576900,
      "metadata": {
        "num_sentences": 8,
        "num_words": 161,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Error Response",
              "API Request"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Describe Job request",
            "ResourceNotFoundException",
            "job ID",
            "GET request",
            "HTTP response",
            "404 Not Found",
            "error response",
            "API version",
            "Client error"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ResourceNotFoundException",
            "job ID",
            "HTTP/1.1",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Error Handling",
            "API Design"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of an error response from Amazon S3 Glacier when a Describe Job request is made with a non-existent job ID, including the returned HTTP status and JSON error details.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What happens if I send a Describe Job request with an invalid job ID?",
            "What is the error response format for Amazon S3 Glacier?",
            "How does Amazon S3 Glacier handle ResourceNotFoundException errors?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "error response",
          "Client error",
          "404 Not Found",
          "API version",
          "Amazon S3 Glacier",
          "job ID",
          "HTTP/1.1",
          "HTTP response",
          "ResourceNotFoundException",
          "GET request",
          "Describe Job request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_373",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nType\nThe source of the error. The field can be one of the following values: Client, Server, or\nUnknown.\nType: String.\nNote the following in the preceding response:\n\u2022 For the error response, S3 Glacier returns status code values of 4xx and 5xx. In this example, the\nstatus code is 404 Not Found.\n\u2022 The Content-Type header value application/json indicates JSON in the body\n\u2022 The JSON in the body provides the error information.\nIn the previous request, instead of a bad job ID, suppose you specify a vault that does not exist. The\nresponse returns a different message.\nHTTP/1.1 404 Not Found\nx-amzn-RequestId: AAABBeC9Zw0rp_5D0L8VfB3FA_WlTupqTKAUehMcPhdgni0\nContent-Type: application/json\nContent-Length: 154\nDate: Wed, 10 Feb 2017 12:00:00 GMT\n{\n\"code\": \"ResourceNotFoundException\",\n\"message\": \"Vault not found for ARN: arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault\",\n\"type\": \"Client\"\n}\nExample 2: List Jobs request with an invalid value for the request\nparameter\nIn this example you send a List Jobs (GET jobs) request to retrieve vault jobs with a specific\nstatuscode, and you provide an incorrect statuscode value finished, instead of the\nacceptable values InProgress, Succeeded, or Failed.\nGET /-/vaults/examplevault/jobs?statuscode=finished HTTP/1.1\nExample 2: List Jobs request with an invalid value for the request parameter API Version 2012-06-01 364",
      "start_idx": 576902,
      "end_idx": 578320,
      "metadata": {
        "num_sentences": 10,
        "num_words": 206,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Handling",
              "API Response Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "error response",
            "status code",
            "Content-Type",
            "JSON body",
            "ResourceNotFoundException",
            "vault",
            "List Jobs",
            "statuscode",
            "HTTP/1.1"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ResourceNotFoundException",
            "ARN",
            "vaults",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "API Error Handling",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides examples of error handling in Amazon S3 Glacier, including responses for invalid requests and missing resources, along with HTTP status codes and JSON error messages.",
          "intents": [
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What error codes does Amazon S3 Glacier return for invalid requests?",
            "How does Amazon S3 Glacier handle a request with a nonexistent vault?",
            "What is the correct format for the List Jobs request in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "status code",
          "Content-Type",
          "ARN",
          "vault",
          "statuscode",
          "vaults",
          "error response",
          "List Jobs",
          "Amazon S3 Glacier",
          "JSON body",
          "API Version 2012-06-01",
          "ResourceNotFoundException",
          "HTTP/1.1"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_375",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Initiate Vault Lock (POST lock-policy)\n\u2022 List Tags For Vault (GET tags)\n\u2022 List Vaults (GET vaults)\n\u2022 Remove Tags From Vault (POST tags remove)\n\u2022 Set Vault Access Policy (PUT access-policy)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\nAbort Vault Lock (DELETE lock-policy)\nDescription\nThis operation stops the vault locking process if the vault lock is not in the Locked state. If the\nvault lock is in the Locked state when this operation is requested, the operation returns an\nAccessDeniedException error. Stopping the vault locking process removes the vault lock policy\nfrom the specified vault.\nA vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can get\nthe state of a vault lock by calling Get Vault Lock (GET lock-policy). For more information about the\nvault locking process, see S3 Glacier Vault Lock. For more information about vault lock policies, see\nVault Lock Policies.\nThis operation is idempotent. You can successfully invoke this operation multiple times, if the vault\nlock is in the InProgress state or if there is no policy associated with the vault.\nRequests\nTo delete the vault lock policy, send an HTTP DELETE request to the URI of the vault's lock-\npolicy subresource.\nSyntax\nDELETE /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nAbort Vault Lock API Version 2012-06-01 366",
      "start_idx": 579652,
      "end_idx": 581258,
      "metadata": {
        "num_sentences": 12,
        "num_words": 245,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "REST Request Syntax"
            ]
          },
          "keywords": [
            "vault lock",
            "lock-policy",
            "InProgress state",
            "Locked state",
            "AccessDeniedException",
            "idempotent",
            "vault lock policy",
            "HTTP DELETE request",
            "S3 Glacier",
            "vault locking process"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AccessDeniedException",
            "lock-policy",
            "vaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Data Security",
            "REST API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Abort Vault Lock operation in Amazon S3 Glacier, which stops the vault locking process if the vault is not in the Locked state. It provides details on the operation's idempotency, syntax, and related vault lock states.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I stop the vault locking process in Amazon S3 Glacier?",
            "What happens if I try to abort a vault lock in the Locked state?",
            "What is the HTTP syntax for the Abort Vault Lock operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Locked state",
          "HTTP DELETE request",
          "vault lock",
          "idempotent",
          "vault locking process",
          "AccessDeniedException",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "Vault Lock",
          "vaultName",
          "InProgress state",
          "vault lock policy",
          "lock-policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_376",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the policy is successfully deleted, S3 Glacier returns an HTTP 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nAbort Vault Lock API Version 2012-06-01 367",
      "start_idx": 581260,
      "end_idx": 582453,
      "metadata": {
        "num_sentences": 13,
        "num_words": 189,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details",
              "Headers Information"
            ]
          },
          "keywords": [
            "AWS account ID",
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "HTTP 204 No Content",
            "Vault Lock",
            "Request Parameters",
            "Abort Vault Lock",
            "API Version 2012-06-01",
            "Common Request Headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "HTTP/1.1",
            "Vault Lock",
            "x-amzn-RequestId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Abort Vault Lock API operation in Amazon S3 Glacier, detailing its request and response structure, including headers and status codes, for deleting policies successfully.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the HTTP response code for a successful policy deletion in S3 Glacier?",
            "What headers are used in the Abort Vault Lock operation?",
            "Can I specify my AWS account ID with hyphens in the request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Common Request Headers",
          "Response Headers",
          "HTTP 204 No Content",
          "Vault Lock",
          "Amazon S3 Glacier",
          "HTTP/1.1",
          "Request Parameters",
          "x-amzn-RequestId",
          "Request Headers",
          "API Version 2012-06-01",
          "Abort Vault Lock",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_378",
      "text": "Amazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nAdd Tags To Vault (POST tags add)\nThis operation adds the specified tags to a vault. Each tag is composed of a key and a value. Each\nvault can have up to 50 tags. If your request would cause the tag limit for the vault to be exceeded,\nthe operation throws the LimitExceededException error.\nIf a tag already exists on the vault under a specified key, the existing key value will be overwritten.\nFor more information about tags, see Tagging Amazon S3 Glacier Resources.\nRequest Syntax\nTo add tags to a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example.\nPOST /AccountId/vaults/vaultName/tags?operation=add HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"string\": \"string\",\n\"string\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\nAdd Tags To Vault API Version 2012-06-01 369",
      "start_idx": 583620,
      "end_idx": 584859,
      "metadata": {
        "num_sentences": 10,
        "num_words": 199,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Request Syntax"
            ]
          },
          "keywords": [
            "tags",
            "vault",
            "LimitExceededException",
            "AWS account ID",
            "POST request",
            "Tagging",
            "Authorization",
            "Content-Length",
            "x-amz-glacier-version",
            "URI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AccountId",
            "vaultName",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Tagging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Add Tags To Vault API operation in Amazon S3 Glacier to add tags to a vault, including request syntax and error handling details.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I add tags to a vault in Amazon S3 Glacier?",
            "What is the syntax for a POST request to add tags to a vault?",
            "What happens if the tag limit for a vault is exceeded?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS Command Line Interface",
          "POST request",
          "vault",
          "URI",
          "Content-Length",
          "vaultName",
          "Amazon S3 Glacier",
          "AccountId",
          "Tagging",
          "tags",
          "LimitExceededException",
          "x-amz-glacier-version",
          "Region",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_379",
      "text": "Amazon S3 Glacier Developer Guide\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nName Description Required\noperation=add A single query string parameter operation with a value Yes\nof add to distinguish it from Remove Tags From Vault (POST\ntags remove).\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nTags\nThe tags to add to the vault. Each tag is composed of a key and a value. The value can be an\nempty string.\nType: String to String map\nLength constraints: Minimum length of 1. Maximum length 10.\nRequired: Yes\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nAdd Tags To Vault API Version 2012-06-01 370",
      "start_idx": 584861,
      "end_idx": 585947,
      "metadata": {
        "num_sentences": 13,
        "num_words": 181,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "Parameter Description",
              "Response Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "account ID",
            "request parameters",
            "tags",
            "HTTP 204"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Add Tags To Vault API",
            "JSON",
            "HTTP"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the Add Tags To Vault API operation in Amazon S3 Glacier, including request parameters, headers, body structure, and expected responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What parameters are required for the Add Tags To Vault API?",
            "What is the expected response for a successful Add Tags To Vault API request?",
            "How should tags be formatted in the request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP 204",
          "HTTP",
          "request parameters",
          "JSON",
          "Amazon S3 Glacier",
          "account ID",
          "tags",
          "Add Tags To Vault API",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_380",
      "text": "Amazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP POST request with the tags to add to the vault.\nPOST /-/vaults/examplevault/tags?operation=add HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"Tags\":\n{\n\"examplekey1\": \"examplevalue1\",\n\"examplekey2\": \"examplevalue2\"\n}\n}\nExample Response\nIf the request was successful S3 Glacier returns a HTTP 204 No Content as shown in the\nfollowing example.\nAdd Tags To Vault API Version 2012-06-01 371",
      "start_idx": 585949,
      "end_idx": 587128,
      "metadata": {
        "num_sentences": 7,
        "num_words": 130,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Body",
            "Error Responses",
            "HTTP POST",
            "Tags",
            "Vault",
            "Authorization",
            "API Version",
            "Signature"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "HTTP 204 No Content"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Error Handling",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP POST"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the Add Tags to Vault operation in Amazon S3 Glacier, including request headers, error responses, and example requests and responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I add tags to a vault in Amazon S3 Glacier?",
            "What headers are required for the Add Tags to Vault operation?",
            "What is the expected response for a successful Add Tags to Vault request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "API Version",
          "AWS4-HMAC-SHA256",
          "HTTP 204 No Content",
          "Vault",
          "Error Responses",
          "HTTP POST",
          "Amazon S3 Glacier",
          "Response Body",
          "Request Headers",
          "Signature",
          "x-amz-glacier-version",
          "Tags",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_381",
      "text": "Amazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 List Tags For Vault (GET tags)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nCreate Vault (PUT vault)\nDescription\nThis operation creates a new vault with the specified name. The name of the vault must be unique\nwithin an AWS Region for an AWS account. You can create up to 1,000 vaults per account. For\ninformation on creating more vaults, go to the Amazon S3 Glacier product detail page.\nYou must use the following guidelines when naming a vault.\n\u2022 Names can be between 1 and 255 characters long.\n\u2022 Allowed characters are a\u2013z, A\u2013Z, 0\u20139, '_' (underscore), '-' (hyphen), and '.' (period).\nThis operation is idempotent, you can send the same request multiple times and it has no further\neffect after the first time Amazon S3 Glacier (S3 Glacier) creates the specified vault.\nCreate Vault API Version 2012-06-01 372",
      "start_idx": 587130,
      "end_idx": 588263,
      "metadata": {
        "num_sentences": 10,
        "num_words": 185,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Guidelines"
            ]
          },
          "keywords": [
            "vault",
            "Amazon S3 Glacier",
            "API",
            "idempotent",
            "AWS Region",
            "SDKs",
            "tags",
            "HTTP/1.1",
            "Command Line Interface",
            "Create Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "Create Vault API",
            "AWS Command Line Interface",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface"
          ],
          "mentioned_tools": [
            "AWS SDKs",
            "Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "The documentation describes the Create Vault API operation for Amazon S3 Glacier, including guidelines for naming vaults and idempotency behavior. It also references related tools and SDKs for implementation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a new vault in Amazon S3 Glacier?",
            "What are the naming guidelines for vaults in AWS?",
            "Is the Create Vault operation idempotent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Create Vault API",
          "AWS Command Line Interface",
          "idempotent",
          "API",
          "vault",
          "Create Vault",
          "AWS Region",
          "SDKs",
          "Amazon S3 Glacier",
          "tags",
          "Command Line Interface",
          "HTTP/1.1"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_382",
      "text": "Amazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo create a vault, send an HTTP PUT request to the URI of the vault to be created.\nPUT /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body for this operation must be empty (0 bytes).\nResponses\nSyntax\nHTTP/1.1 201 Created\nCreate Vault API Version 2012-06-01 373",
      "start_idx": 588265,
      "end_idx": 589371,
      "metadata": {
        "num_sentences": 10,
        "num_words": 170,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "Request-Response Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "HTTP PUT request",
            "AccountId",
            "Authorization",
            "request headers",
            "request body",
            "responses",
            "API version",
            "URI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultName",
            "AccountId",
            "glacier.Region.amazonaws.com",
            "SignatureValue"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to create a vault in Amazon S3 Glacier using an HTTP PUT request, including syntax, headers, and response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I create a vault in Amazon S3 Glacier?",
            "What is the syntax for an HTTP PUT request to Amazon S3 Glacier?",
            "What headers are required for a vault creation request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "HTTP PUT request",
          "request headers",
          "vault",
          "VaultName",
          "responses",
          "URI",
          "glacier.Region.amazonaws.com",
          "API version",
          "SignatureValue",
          "Amazon S3 Glacier",
          "AccountId",
          "request body"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_383",
      "text": "Amazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation The relative URI path of the vault that was created.\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP PUT request to create a vault named examplevault.\nPUT /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nContent-Length: 0\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nCreate Vault API Version 2012-06-01 374",
      "start_idx": 589373,
      "end_idx": 590495,
      "metadata": {
        "num_sentences": 7,
        "num_words": 122,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Headers",
              "Example Request"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "response headers",
            "error responses",
            "HTTP PUT",
            "Authorization",
            "x-amz-glacier-version",
            "URI path",
            "API version",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP PUT",
            "examplevault",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the API reference for creating a vault in Amazon S3 Glacier, including response headers, errors, and an example HTTP PUT request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the response headers for creating a vault in Amazon S3 Glacier?",
            "How do I send an HTTP PUT request to create a vault?",
            "What is the authorization format for the Create Vault API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "HTTP PUT",
          "AWS4-HMAC-SHA256",
          "vault",
          "API version",
          "response headers",
          "Amazon S3 Glacier",
          "error responses",
          "URI path",
          "x-amz-glacier-version",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_384",
      "text": "Amazon S3 Glacier Developer Guide\nExample Response\nS3 Glacier creates the vault and returns the relative URI path of the vault in the Location header.\nThe account ID is always displayed in the Location header regardless of whether the account ID or\na hyphen ('-') was specified in the request.\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nLocation: /111122223333/vaults/examplevault\nRelated Sections\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nComplete Vault Lock (POST lockId)\nDescription\nThis operation completes the vault locking process by transitioning the vault lock from\nthe InProgress state to the Locked state, which causes the vault lock policy to become\nunchangeable. A vault lock is put into the InProgress state by calling Initiate Vault Lock (POST\nlock-policy). You can obtain the state of the vault lock by calling Get Vault Lock (GET lock-policy).\nFor more information about the vault locking process, see S3 Glacier Vault Lock.\nThis operation is idempotent. This request is always successful if the vault lock is in the Locked\nstate and the provided lock ID matches the lock ID originally used to lock the vault.\nComplete Vault Lock API Version 2012-06-01 375",
      "start_idx": 590497,
      "end_idx": 591963,
      "metadata": {
        "num_sentences": 9,
        "num_words": 229,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Operation Description"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault",
            "vault lock",
            "Location header",
            "idempotent",
            "lock ID",
            "InProgress state",
            "Locked state",
            "vault locking process",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Complete Vault Lock",
            "Initiate Vault Lock",
            "Get Vault Lock"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Identity and Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of creating a vault in Amazon S3 Glacier, describes the Complete Vault Lock operation, and provides related API references. It outlines how to transition a vault lock to the Locked state and mentions the idempotent nature of the operation.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I complete the vault locking process in S3 Glacier?",
            "What does the Location header contain after creating a vault?",
            "What is the purpose of the Complete Vault Lock operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Locked state",
          "AWS Command Line Interface",
          "vault lock",
          "idempotent",
          "lock ID",
          "vault",
          "Complete Vault Lock",
          "Initiate Vault Lock",
          "vault locking process",
          "API version",
          "Amazon S3 Glacier",
          "Location header",
          "Get Vault Lock",
          "InProgress state",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_385",
      "text": "Amazon S3 Glacier Developer Guide\nIf an invalid lock ID is passed in the request when the vault lock is in the Locked state, the\noperation returns an AccessDeniedException error. If an invalid lock ID is passed in the request\nwhen the vault lock is in the InProgress state, the operation throws an InvalidParameter\nerror.\nRequests\nTo complete the vault locking process, send an HTTP POST request to the URI of the vault's lock-\npolicy subresource with a valid lock ID.\nSyntax\nPOST /AccountId/vaults/vaultName/lock-policy/lockId HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nThe lockId value is the lock ID obtained from a Initiate Vault Lock (POST lock-policy) request.\nRequest Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nComplete Vault Lock API Version 2012-06-01 376",
      "start_idx": 591965,
      "end_idx": 593435,
      "metadata": {
        "num_sentences": 12,
        "num_words": 229,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling"
            ]
          },
          "keywords": [
            "vault lock",
            "lock ID",
            "AccessDeniedException",
            "InvalidParameter",
            "HTTP POST",
            "URI",
            "AWS account ID",
            "lock-policy",
            "x-amz-glacier-version",
            "Date"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS account ID",
            "AccessDeniedException",
            "InvalidParameter"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Error Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on completing the vault locking process in Amazon S3 Glacier, including API syntax, error handling for invalid lock IDs, and request parameters.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "What happens if an invalid lock ID is passed during the vault lock process?",
            "How do I complete the vault locking process in Amazon S3 Glacier?",
            "What is the correct syntax for the Complete Vault Lock API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault lock",
          "Date",
          "lock ID",
          "HTTP POST",
          "URI",
          "lock-policy",
          "AccessDeniedException",
          "Vault Lock",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "InvalidParameter",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_386",
      "text": "Amazon S3 Glacier Developer Guide\nResponses\nIf the operation request is successful, the service returns an HTTP 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP POST request with the lock ID to complete the vault locking\nprocess.\nPOST /-/vaults/examplevault/lock-policy/AE863rKkWZU53SLW5be4DUcW HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 204 No Content\nresponse, as shown in the following example.\nComplete Vault Lock API Version 2012-06-01 377",
      "start_idx": 593437,
      "end_idx": 594744,
      "metadata": {
        "num_sentences": 8,
        "num_words": 147,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Syntax",
              "Headers",
              "Body",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "HTTP 204 No Content",
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "Error Responses",
            "Vault Locking",
            "Authorization",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "Example Request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP 204 No Content",
            "Vault Lock Policy",
            "AWS4-HMAC-SHA256 Credential",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the response structure and examples for completing the vault locking process in Amazon S3 Glacier, including HTTP 204 responses and associated headers.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What is the HTTP response for a successful vault locking operation?",
            "What headers are included in the response for Amazon S3 Glacier operations?",
            "How do I send a request to complete a vault locking process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS4-HMAC-SHA256",
          "HTTP 204 No Content",
          "Response Headers",
          "Vault Locking",
          "AWS4-HMAC-SHA256 Credential",
          "Error Responses",
          "Vault Lock Policy",
          "Amazon S3 Glacier",
          "Example Request",
          "Request Headers",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_387",
      "text": "Amazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Get Vault Lock (GET lock-policy)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault (DELETE vault)\nDescription\nThis operation deletes a vault. Amazon S3 Glacier (S3 Glacier) will delete a vault only if there are no\narchives in the vault as per the last inventory and there have been no writes to the vault since the\nlast inventory. If either of these conditions is not satisfied, the vault deletion fails (that is, the vault\nis not removed) and S3 Glacier returns an error.\nYou can use the Describe Vault (GET vault) operation that provides vault information, including\nthe number of archives in the vault; however, the information is based on the vault inventory S3\nGlacier last generated.\nThis operation is idempotent.\nDelete Vault API Version 2012-06-01 378",
      "start_idx": 594746,
      "end_idx": 595872,
      "metadata": {
        "num_sentences": 6,
        "num_words": 177,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Delete Vault",
            "Vault Lock",
            "API Version 2012-06-01",
            "idempotent",
            "vault inventory",
            "archives",
            "Describe Vault",
            "AWS CLI",
            "lock-policy"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Delete Vault",
            "Vault Lock",
            "AWS Command Line Interface",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Operations",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Delete Vault operation in Amazon S3 Glacier, including its requirements, idempotent behavior, and related API operations for managing vaults.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the conditions for deleting a vault in Amazon S3 Glacier?",
            "How does the Delete Vault operation handle errors?",
            "What related API operations are available for managing vault locks?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "idempotent",
          "AWS CLI",
          "archives",
          "vault inventory",
          "Vault Lock",
          "Amazon S3 Glacier",
          "Describe Vault",
          "API Version 2012-06-01",
          "lock-policy",
          "Delete Vault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_388",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nWhen you delete a vault, the vault access policy attached to the vault is also deleted. For\nmore information about vault access policies, see Vault Access Policies.\nRequests\nTo delete a vault, send a DELETE request to the vault resource URI.\nSyntax\nDELETE /AccountId/vaults/VaultName HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nDelete Vault API Version 2012-06-01 379",
      "start_idx": 595874,
      "end_idx": 596991,
      "metadata": {
        "num_sentences": 11,
        "num_words": 173,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Reference",
              "Request Syntax",
              "Request Details"
            ]
          },
          "keywords": [
            "vault",
            "DELETE request",
            "vault access policy",
            "AccountId",
            "AWS account ID",
            "request headers",
            "request body",
            "Amazon S3 Glacier",
            "URI",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "x-amz-glacier-version",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to delete a vault in Amazon S3 Glacier using a DELETE request, including syntax, headers, and key considerations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier?",
            "What is the syntax for the DELETE request to remove a vault?",
            "What happens to the vault access policy when a vault is deleted?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "request headers",
          "vault",
          "VaultName",
          "URI",
          "glacier.Region.amazonaws.com",
          "Amazon S3 Glacier",
          "AccountId",
          "vault access policy",
          "DELETE request",
          "x-amz-glacier-version",
          "request body",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_389",
      "text": "Amazon S3 Glacier Developer Guide\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example deletes a vault named examplevault. The example request is a DELETE\nrequest to the URI of the resource (the vault) to delete.\nDELETE /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nDelete Vault API Version 2012-06-01 380",
      "start_idx": 596993,
      "end_idx": 598173,
      "metadata": {
        "num_sentences": 7,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Response",
              "Error Handling",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP/1.1 204 No Content",
            "response headers",
            "response body",
            "error messages",
            "vault",
            "DELETE request",
            "x-amz-glacier-version",
            "Authorization",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "glacier.us-west-2.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocols",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the Delete Vault operation in Amazon S3 Glacier, including the HTTP request, response headers, and error handling. An example request and response are provided for reference.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I delete a vault in Amazon S3 Glacier?",
            "What is the HTTP response for a successful Delete Vault operation?",
            "What are the required headers for a DELETE request in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS4-HMAC-SHA256",
          "error messages",
          "response body",
          "vault",
          "HTTP/1.1 204 No Content",
          "response headers",
          "Amazon S3 Glacier",
          "glacier.us-west-2.amazonaws.com",
          "DELETE request",
          "x-amz-glacier-version",
          "examplevault",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_390",
      "text": "Amazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDelete Vault Access Policy (DELETE access-policy)\nDescription\nThis operation deletes the access policy associated with the specified vault. The operation is\neventually consistent\u2014that is, it might take some time for Amazon S3 Glacier (S3 Glacier) to\ncompletely remove the access policy, and you might still see the effect of the policy for a short\ntime after you send the delete request.\nThis operation is idempotent. You can invoke delete multiple times, even if there is no policy\nassociated with the vault. For more information about vault access policies, see Vault Access\nPolicies.\nRequests\nTo delete the current vault access policy, send an HTTP DELETE request to the URI of the vault's\naccess-policy subresource.\nSyntax\nDELETE /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nDelete Vault Access Policy API Version 2012-06-01 381",
      "start_idx": 598175,
      "end_idx": 599420,
      "metadata": {
        "num_sentences": 7,
        "num_words": 186,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "HTTP Method"
            ]
          },
          "keywords": [
            "Delete Vault Access Policy",
            "Amazon S3 Glacier",
            "access policy",
            "HTTP DELETE",
            "vault",
            "idempotent",
            "eventually consistent",
            "URI",
            "AWS SDKs",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Vault Access Policies",
            "HTTP DELETE",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This section explains how to delete the access policy of a vault in Amazon S3 Glacier using the HTTP DELETE method. It highlights the idempotency and eventual consistency of the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete a vault access policy in Amazon S3 Glacier?",
            "What is the HTTP request syntax for deleting an access policy?",
            "Is the delete vault access policy operation idempotent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS SDKs",
          "idempotent",
          "AWS CLI",
          "vault",
          "URI",
          "access policy",
          "Amazon S3 Glacier",
          "eventually consistent",
          "Delete Vault Access Policy",
          "API Version 2012-06-01",
          "HTTP DELETE",
          "Vault Access Policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_391",
      "text": "Amazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn response, S3 Glacier returns 204 No Content if the policy is successfully deleted.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nDelete Vault Access Policy API Version 2012-06-01 382",
      "start_idx": 599422,
      "end_idx": 600584,
      "metadata": {
        "num_sentences": 12,
        "num_words": 181,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "vault",
            "request headers",
            "response headers",
            "204 No Content",
            "AWS account ID",
            "Delete Vault Access Policy",
            "API version",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Delete Vault Access Policy",
            "x-amz-glacier-version",
            "x-amzn-RequestId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Reference"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Delete Vault Access Policy API operation for Amazon S3 Glacier, detailing its request and response structure, including headers and expected status codes.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the Delete Vault Access Policy API in Amazon S3 Glacier?",
            "What response does the Delete Vault Access Policy API return upon success?",
            "What headers are used in the Delete Vault Access Policy API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "request headers",
          "vault",
          "API version",
          "response headers",
          "Amazon S3 Glacier",
          "AccountId",
          "Delete Vault Access Policy",
          "x-amzn-RequestId",
          "204 No Content",
          "x-amz-glacier-version",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_393",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nDelete Vault Notifications (DELETE notification-configuration)\nDescription\nThis operation deletes the notification configuration set for a vault Set Vault Notification\nConfiguration (PUT notification-configuration). The operation is eventually consistent\u2014that is, it\nmight take some time for Amazon S3 Glacier (S3 Glacier) to completely disable the notifications,\nand you might still receive some notifications for a short time after you send the delete request.\nRequests\nTo delete a vault's notification configuration, send a DELETE request to the vault's\nnotification-configuration subresource.\nSyntax\nDELETE /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nDelete Vault Notifications API Version 2012-06-01 384",
      "start_idx": 601855,
      "end_idx": 603334,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Request Syntax",
              "Request Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "DELETE request",
            "notification-configuration",
            "AccountId",
            "AWS CLI",
            "authorization",
            "x-amz-glacier-version",
            "eventual consistency",
            "HTTP/1.1"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AccountId",
            "VaultName",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete the notification configuration of an Amazon S3 Glacier vault using the DELETE notification-configuration API operation. It includes syntax, headers, and notes on eventual consistency.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I delete a vault's notification configuration in Amazon S3 Glacier?",
            "What is the syntax for the DELETE notification-configuration request?",
            "What headers are required for this API operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS CLI",
          "Region",
          "notification-configuration",
          "VaultName",
          "eventual consistency",
          "authorization",
          "Amazon S3 Glacier",
          "AccountId",
          "DELETE request",
          "x-amz-glacier-version",
          "HTTP/1.1",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_394",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to remove notification configuration for a vault.\nExample Request\nIn this example, a DELETE request is sent to the notification-configuration subresource of\nthe vault called examplevault.\nDELETE /111122223333/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Vault Notifications API Version 2012-06-01 385",
      "start_idx": 603336,
      "end_idx": 604546,
      "metadata": {
        "num_sentences": 8,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Syntax",
              "Headers",
              "Error Messages",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Notifications",
            "DELETE request",
            "Response Headers",
            "Error Responses",
            "Notification Configuration",
            "HTTP/1.1 204 No Content",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "notification-configuration",
            "AWS4-HMAC-SHA256",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "HTTP Protocol",
            "AWS Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to remove notification configurations for a vault in Amazon S3 Glacier using the DELETE request method. It includes syntax, headers, and an example request for the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I remove notification configurations for a vault in Amazon S3 Glacier?",
            "What headers are required for a DELETE request in Amazon S3 Glacier?",
            "What is the response format for the Delete Vault Notifications API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS4-HMAC-SHA256",
          "Response Headers",
          "Notification Configuration",
          "Error Responses",
          "notification-configuration",
          "HTTP/1.1 204 No Content",
          "us-west-2",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "DELETE request",
          "x-amz-glacier-version",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_395",
      "text": "Amazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nDescribe Vault (GET vault)\nDescription\nThis operation returns information about a vault, including the vault Amazon Resource Name\n(ARN), the date the vault was created, the number of archives contained within the vault, and the\ntotal size of all the archives in the vault. The number of archives and their total size are as of the\nlast vault inventory Amazon S3 Glacier (S3 Glacier) generated (see Working with Vaults in Amazon\nS3 Glacier). S3 Glacier generates vault inventories approximately daily. This means that if you\nadd or remove an archive from a vault, and then immediately send a Describe Vault request, the\nresponse might not reflect the changes.\nRequests\nTo get information about a vault, send a GET request to the URI of the specific vault resource.\nSyntax\nGET /AccountId/vaults/VaultName HTTP/1.1\nDescribe Vault API Version 2012-06-01 386",
      "start_idx": 604548,
      "end_idx": 605925,
      "metadata": {
        "num_sentences": 6,
        "num_words": 205,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Response Example",
              "Operation Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Describe Vault",
            "vault inventory",
            "vault ARN",
            "HTTP/1.1 204 No Content",
            "GET request",
            "vault resource",
            "archives",
            "vault notification configuration",
            "AWS SDKs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Describe Vault API",
            "AWS Command Line Interface",
            "vault ARN",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the 'Describe Vault' operation in Amazon S3 Glacier, which retrieves metadata about a specific vault, including its ARN, creation date, archive count, and total size. It also provides example HTTP request and response syntax for developers.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I retrieve metadata about a vault in Amazon S3 Glacier?",
            "What details are included in the Describe Vault response?",
            "What is the syntax for the Describe Vault API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS SDKs",
          "vault resource",
          "archives",
          "HTTP/1.1 204 No Content",
          "vault inventory",
          "Describe Vault API",
          "Amazon S3 Glacier",
          "HTTP/1.1",
          "vault ARN",
          "Describe Vault",
          "vault notification configuration",
          "GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_396",
      "text": "Amazon S3 Glacier Developer Guide\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"CreationDate\" : String,\n\"LastInventoryDate\" : String,\n\"NumberOfArchives\" : Number,\n\"SizeInBytes\" : Number,\nDescribe Vault API Version 2012-06-01 387",
      "start_idx": 605927,
      "end_idx": 606991,
      "metadata": {
        "num_sentences": 8,
        "num_words": 153,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "Request Headers",
            "Request Parameters",
            "Describe Vault API",
            "SignatureValue",
            "x-amz-glacier-version",
            "Content-Type",
            "CreationDate",
            "NumberOfArchives"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Vault",
            "RequestId",
            "Describe Vault API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "API Gateway"
          ]
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier Describe Vault API, including headers, responses, and account ID usage guidelines.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What headers are required for the Describe Vault API?",
            "How does Amazon S3 Glacier handle account IDs in API requests?",
            "What information is returned in the Describe Vault API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "CreationDate",
          "RequestId",
          "Content-Type",
          "Vault",
          "NumberOfArchives",
          "Describe Vault API",
          "SignatureValue",
          "Amazon S3 Glacier",
          "AccountId",
          "Request Parameters",
          "Request Headers",
          "x-amz-glacier-version",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_397",
      "text": "Amazon S3 Glacier Developer Guide\n\"VaultARN\" : String,\n\"VaultName\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nCreationDate\nThe UTC date when the vault was created.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nLastInventoryDate\nThe UTC date when S3 Glacier completed the last vault inventory. For information about\ninitiating an inventory for a vault, see Initiate Job (POST jobs).\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nNumberOfArchives\nThe number of archives in the vault as per the last vault inventory. This field will return null if\nan inventory has not yet run on the vault, for example, if you just created the vault.\nType: Number\nSizeInBytes\nThe total size in bytes of the archives in the vault including any per-archive overhead, as of the\nlast inventory date. This field will return null if an inventory has not yet run on the vault, for\nexample, if you just created the vault.\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault.\nDescribe Vault API Version 2012-06-01 388",
      "start_idx": 606993,
      "end_idx": 608304,
      "metadata": {
        "num_sentences": 14,
        "num_words": 208,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details"
            ]
          },
          "keywords": [
            "VaultARN",
            "VaultName",
            "Response Headers",
            "Response Body",
            "CreationDate",
            "LastInventoryDate",
            "NumberOfArchives",
            "SizeInBytes",
            "ISO 8601",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "VaultName",
            "Response Headers",
            "Describe Vault API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the Describe Vault API response for Amazon S3 Glacier, including response headers and JSON fields such as CreationDate, LastInventoryDate, NumberOfArchives, SizeInBytes, and VaultARN.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the format of the CreationDate field in the Describe Vault API response?",
            "What information does the LastInventoryDate field provide?",
            "What does the SizeInBytes field represent in the vault details?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "ISO 8601",
          "Response Headers",
          "SizeInBytes",
          "NumberOfArchives",
          "LastInventoryDate",
          "VaultARN",
          "Describe Vault API",
          "Amazon S3 Glacier",
          "Response Body",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_398",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nVaultName\nThe vault name that was specified at creation time. The vault name is also included in the\nvault's ARN.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example demonstrates how to get information about the vault named\nexamplevault.\nGET /-/vaults/examplevault HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 260\n{\n\"CreationDate\" : \"2012-02-20T17:01:45.198Z\",\n\"LastInventoryDate\" : \"2012-03-20T17:03:43.221Z\",\n\"NumberOfArchives\" : 192,\n\"SizeInBytes\" : 78088912,\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"VaultName\" : \"examplevault\"\nDescribe Vault API Version 2012-06-01 389",
      "start_idx": 608306,
      "end_idx": 609548,
      "metadata": {
        "num_sentences": 5,
        "num_words": 116,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultName",
            "ARN",
            "Error Responses",
            "GET Request",
            "HTTP Response",
            "CreationDate",
            "LastInventoryDate",
            "NumberOfArchives",
            "SizeInBytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultName",
            "examplevault",
            "ARN",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the Amazon S3 Glacier Describe Vault API, including an example request and response for retrieving information about a specific vault.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve information about a specific vault in Amazon S3 Glacier?",
            "What is the format of the Describe Vault API request and response?",
            "What metadata is included in the Describe Vault API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "examplevault",
          "ARN",
          "Error Responses",
          "SizeInBytes",
          "GET Request",
          "NumberOfArchives",
          "HTTP Response",
          "LastInventoryDate",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_399",
      "text": "Amazon S3 Glacier Developer Guide\n}\nRelated Sections\n\u2022 Create Vault (PUT vault)\n\u2022 List Vaults (GET vaults)\n\u2022 Delete Vault (DELETE vault)\n\u2022 Initiate Job (POST jobs)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Access Policy (GET access-policy)\nDescription\nThis operation retrieves the access-policy subresource set on the vault\u2014for more information\non setting this subresource, see Set Vault Access Policy (PUT access-policy). If there is no access\npolicy set on the vault, the operation returns a 404 Not found error. For more information about\nvault access policies, see Vault Access Policies.\nRequests\nTo return the current vault access policy, send an HTTP GET request to the URI of the vault's\naccess-policy subresource.\nSyntax\nGET /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nGet Vault Access Policy API Version 2012-06-01 390",
      "start_idx": 609550,
      "end_idx": 610661,
      "metadata": {
        "num_sentences": 5,
        "num_words": 161,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Request Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "GET access-policy",
            "HTTP GET request",
            "AWS Command Line Interface",
            "vault",
            "subresource",
            "authorization",
            "x-amz-glacier-version",
            "404 Not Found"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "GET access-policy",
            "vault access policies",
            "AccountId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Identity and Access Management",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This section describes the 'Get Vault Access Policy' operation in Amazon S3 Glacier, which retrieves the access-policy subresource of a vault. It provides details on HTTP request syntax and error handling for this operation.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve the access policy of a vault in Amazon S3 Glacier?",
            "What is the HTTP request syntax for the Get Vault Access Policy operation?",
            "What happens if there is no access policy set on the vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "subresource",
          "vault",
          "authorization",
          "404 Not Found",
          "Amazon S3 Glacier",
          "AccountId",
          "vault access policy",
          "x-amz-glacier-version",
          "GET access-policy",
          "HTTP GET request",
          "vault access policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_400",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response.\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nGet Vault Access Policy API Version 2012-06-01 391",
      "start_idx": 610663,
      "end_idx": 611829,
      "metadata": {
        "num_sentences": 11,
        "num_words": 183,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Specification"
            ]
          },
          "keywords": [
            "AWS account ID",
            "vault access policy",
            "Amazon S3 Glacier",
            "request headers",
            "response headers",
            "JSON format",
            "API Version 2012-06-01",
            "HTTP syntax",
            "Policy string",
            "credentials"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Get Vault Access Policy API",
            "Common Request Headers",
            "Common Response Headers"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the Get Vault Access Policy API operation in Amazon S3 Glacier, including its syntax, headers, and response structure in JSON format.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the syntax for the Get Vault Access Policy API?",
            "What response does the Get Vault Access Policy API return?",
            "How do I specify an AWS account ID in the request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Common Request Headers",
          "request headers",
          "Policy string",
          "credentials",
          "response headers",
          "Amazon S3 Glacier",
          "JSON format",
          "Common Response Headers",
          "vault access policy",
          "HTTP syntax",
          "API Version 2012-06-01",
          "AWS account ID",
          "Get Vault Access Policy API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_401",
      "text": "Amazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields.\nPolicy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to get a vault access policy.\nExample Request\nIn this example, a GET request is sent to the URI of a vault's access-policy subresource.\nGET /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nSet Vault Access Policy (PUT access-policy) examples. However, the following example shows the\nreturned JSON string without escape characters for readability.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nGet Vault Access Policy API Version 2012-06-01 392",
      "start_idx": 611831,
      "end_idx": 613270,
      "metadata": {
        "num_sentences": 9,
        "num_words": 172,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "JSON string",
            "GET request",
            "URI",
            "Authorization",
            "x-amz-glacier-version",
            "Signature",
            "Error Responses",
            "HTTP response"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault access policy",
            "AWS4-HMAC-SHA256",
            "examplevault",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on retrieving a vault access policy in Amazon S3 Glacier using a GET request and describes the structure of the response body and examples for implementation.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve a vault access policy in Amazon S3 Glacier?",
            "What is the format of the response body for a vault access policy request?",
            "What are the required headers for making a GET request to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS4-HMAC-SHA256",
          "examplevault",
          "Error Responses",
          "URI",
          "JSON string",
          "Amazon S3 Glacier",
          "vault access policy",
          "HTTP response",
          "Signature",
          "x-amz-glacier-version",
          "GET request",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_403",
      "text": "Amazon S3 Glacier Developer Guide\nGet Vault Lock (GET lock-policy)\nDescription\nThis operation retrieves the following attributes from the lock-policy subresource set on the\nspecified vault:\n\u2022 The vault lock policy set on the vault.\n\u2022 The state of the vault lock, which is either InProgess or Locked.\n\u2022 When the lock ID expires. The lock ID is used to complete the vault locking process.\n\u2022 When the vault lock was initiated and put into the InProgress state.\nA vault lock is put into the InProgress state by calling Initiate Vault Lock (POST lock-policy). A\nvault lock is put into the Locked state by calling Complete Vault Lock (POST lockId). You can stop\nthe vault locking process by calling Abort Vault Lock (DELETE lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock.\nIf there is no vault lock policy set on the vault, the operation returns a 404 Not found error. For\nmore information about vault lock policies, see Vault Lock Policies.\nRequests\nTo return the current vault lock policy and other attributes, send an HTTP GET request to the URI\nof the vault's lock-policy subresource as shown in the following syntax example.\nSyntax\nGET /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nGet Vault Lock API Version 2012-06-01 394",
      "start_idx": 613991,
      "end_idx": 615547,
      "metadata": {
        "num_sentences": 14,
        "num_words": 250,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Syntax",
              "Error Handling"
            ]
          },
          "keywords": [
            "vault lock",
            "lock-policy",
            "InProgress",
            "Locked",
            "lock ID",
            "vault locking process",
            "Initiate Vault Lock",
            "Complete Vault Lock",
            "Abort Vault Lock",
            "S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault lock policy",
            "HTTP GET",
            "AccountId",
            "lock-policy subresource"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The 'Get Vault Lock' operation retrieves the current vault lock policy and related attributes, such as state and expiration, for a specified Amazon S3 Glacier vault. It requires an HTTP GET request to the lock-policy subresource and may return errors if no policy is set.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve the vault lock policy for an Amazon S3 Glacier vault?",
            "What attributes are returned by the Get Vault Lock operation?",
            "What happens if there is no vault lock policy set on the vault?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP GET",
          "vault lock",
          "Locked",
          "lock ID",
          "Complete Vault Lock",
          "lock-policy subresource",
          "Initiate Vault Lock",
          "vault locking process",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "AccountId",
          "Abort Vault Lock",
          "vault lock policy",
          "InProgress",
          "lock-policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_404",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns the vault access policy in JSON format in the\nbody of the response.\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"string\",\n\"State\": \"string\",\n\"ExpirationDate\": \"string\",\n\"CreationDate\":\"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nGet Vault Lock API Version 2012-06-01 395",
      "start_idx": 615549,
      "end_idx": 616603,
      "metadata": {
        "num_sentences": 10,
        "num_words": 154,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Format"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "request headers",
            "vault access policy",
            "JSON response",
            "RequestId",
            "ExpirationDate",
            "CreationDate",
            "response body",
            "Get Vault Lock API"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "Get Vault Lock API",
            "Policy",
            "RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the Amazon S3 Glacier Get Vault Lock API, including its request and response structure, headers, and response body format in JSON.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the response format for the Get Vault Lock API?",
            "Does the Get Vault Lock API require request parameters?",
            "What headers are used in the Get Vault Lock API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON response",
          "RequestId",
          "CreationDate",
          "response body",
          "request headers",
          "ExpirationDate",
          "Amazon S3 Glacier",
          "vault access policy",
          "Policy",
          "AWS account ID",
          "Get Vault Lock API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_405",
      "text": "Amazon S3 Glacier Developer Guide\nResponse Body\nThe response body contains the following JSON fields.\nPolicy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nState\nThe state of the vault lock.\nType: String\nValid values: InProgress|Locked\nExpirationDate\nThe UTC date and time at which the lock ID expires. This value can be null if the vault lock is in\na Locked state.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nCreationDate\nThe UTC date and time at which the vault lock was put into the InProgress state.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to get a vault lock policy.\nExample Request\nIn this example, a GET request is sent to the URI of a vault's lock-policy subresource.\nGet Vault Lock API Version 2012-06-01 396",
      "start_idx": 616605,
      "end_idx": 617624,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Field Documentation",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault lock",
            "JSON fields",
            "Policy",
            "State",
            "ExpirationDate",
            "CreationDate",
            "ISO 8601",
            "Error Responses",
            "GET request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault lock policy",
            "UTC",
            "ISO 8601",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the JSON response fields for the Amazon S3 Glacier vault lock API, including information on policy, state, expiration date, and creation date.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What fields are included in the Amazon S3 Glacier vault lock response body?",
            "What is the format of the ExpirationDate field in the vault lock response?",
            "What are the valid values for the State field in the vault lock response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "UTC",
          "ISO 8601",
          "vault lock",
          "Error Responses",
          "ExpirationDate",
          "JSON fields",
          "State",
          "GET request",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "vault lock policy",
          "Policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_406",
      "text": "Amazon S3 Glacier Developer Guide\nGET /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, S3 Glacier returns the vault access policy as a JSON string in the\nbody of the response. The returned JSON string uses \"\\\" as an escape character, as shown in the\nInitiate Vault Lock (POST lock-policy) example request. However, the following example shows the\nreturned JSON string without escape characters for readability.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\": \"\n{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Define-vault-lock\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::999999999999:root\"\n},\n\"Effect\": \"Deny\",\n\"Action\": \"glacier:DeleteArchive\",\n\"Resource\": [\n\"arn:aws:glacier:us-west-2:999999999999:vaults/examplevault\"\n],\n\"Condition\": {\n\"NumericLessThanEquals\": {\n\"glacier:ArchiveAgeInDays\": \"365\"\n}\n}\n}\nGet Vault Lock API Version 2012-06-01 397",
      "start_idx": 617626,
      "end_idx": 618984,
      "metadata": {
        "num_sentences": 4,
        "num_words": 134,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "API Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault lock",
            "access policy",
            "JSON",
            "AWS4-HMAC-SHA256",
            "glacier:DeleteArchive",
            "glacier:ArchiveAgeInDays",
            "API version",
            "IAM",
            "vaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "arn:aws:iam",
            "arn:aws:glacier"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS IAM"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the process of retrieving a vault lock policy from Amazon S3 Glacier, including an example API request and response.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I retrieve a vault lock policy in Amazon S3 Glacier?",
            "What does the API response for a vault lock policy look like?",
            "What is the format of a vault access policy in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault lock",
          "AWS4-HMAC-SHA256",
          "arn:aws:iam",
          "glacier:DeleteArchive",
          "IAM",
          "vaults",
          "access policy",
          "glacier:ArchiveAgeInDays",
          "arn:aws:glacier",
          "API version",
          "Amazon S3 Glacier",
          "JSON",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_407",
      "text": "Amazon S3 Glacier Developer Guide\n]\n}\n\",\n\"State\": \"InProgress\",\n\"ExpirationDate\": \"exampledate\",\n\"CreationDate\": \"exampledate\"\n}\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\n\u2022 Initiate Vault Lock (POST lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nGet Vault Notifications (GET notification-configuration)\nDescription\nThis operation retrieves the notification-configuration subresource set on the vault (see\nSet Vault Notification Configuration (PUT notification-configuration). If notification configuration\nfor a vault is not set, the operation returns a 404 Not Found error. For more information about\nvault notifications, see Configuring Vault Notifications in Amazon S3 Glacier.\nRequests\nTo retrieve the notification configuration information, send a GET request to the URI of a vault's\nnotification-configuration subresource.\nGet Vault Notifications API Version 2012-06-01 398",
      "start_idx": 618986,
      "end_idx": 620026,
      "metadata": {
        "num_sentences": 5,
        "num_words": 139,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "notification-configuration",
            "API Version 2012-06-01",
            "vault notifications",
            "GET request",
            "subresource",
            "404 Not Found",
            "AWS SDKs",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS Command Line Interface",
            "notification-configuration",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the API operations related to retrieving vault notification configurations for Amazon S3 Glacier, including error handling and related commands.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I retrieve vault notification configurations in Amazon S3 Glacier?",
            "What errors are returned if a vault notification configuration is not set?",
            "Which API operations are related to Vault Lock in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "AWS SDKs",
          "AWS CLI",
          "subresource",
          "notification-configuration",
          "404 Not Found",
          "Vault Lock",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "GET request",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_408",
      "text": "Amazon S3 Glacier Developer Guide\nSyntax\nGET /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\nGet Vault Notifications API Version 2012-06-01 399",
      "start_idx": 620028,
      "end_idx": 621068,
      "metadata": {
        "num_sentences": 8,
        "num_words": 146,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Syntax",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GET request",
            "AccountId",
            "vault",
            "notification-configuration",
            "request headers",
            "request body",
            "responses",
            "x-amz-glacier-version",
            "HTTP/1.1"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "x-amz-glacier-version",
            "AWS account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for the Amazon S3 Glacier 'Get Vault Notifications' API, detailing its syntax, headers, and response structure.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the syntax for the Get Vault Notifications API in Amazon S3 Glacier?",
            "What headers are required for the Get Vault Notifications API?",
            "Does the Get Vault Notifications API require a request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "request headers",
          "notification-configuration",
          "vault",
          "VaultName",
          "request body",
          "responses",
          "Amazon S3 Glacier",
          "AccountId",
          "HTTP/1.1",
          "x-amz-glacier-version",
          "GET request",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_409",
      "text": "Amazon S3 Glacier Developer Guide\n\"Events\": [\nString,\n...\n],\n\"SNSTopic\": String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nEvents\nA list of one or more events for which Amazon S3 Glacier (S3 Glacier) will send a notification\nto the specified Amazon SNS topic. For information about vault events for which you can\nconfigure a vault to publish notifications, see Set Vault Notification Configuration (PUT\nnotification-configuration).\nType: Array\nSNSTopic\nThe Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN).\nFor more information, see Getting Started with Amazon SNS in the Amazon Simple Notification\nService Getting Started Guide.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to retrieve the notification configuration for a vault.\nGet Vault Notifications API Version 2012-06-01 400",
      "start_idx": 621070,
      "end_idx": 622195,
      "metadata": {
        "num_sentences": 10,
        "num_words": 164,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Headers",
              "Response Body",
              "Error Handling",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS Topic",
            "Vault Notifications",
            "JSON Fields",
            "Error Responses",
            "ARN",
            "Events",
            "Notification Configuration",
            "API Version",
            "Amazon SNS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notification Configuration",
            "ARN",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure and retrieve vault notification settings for Amazon S3 Glacier, including the use of Amazon SNS topics for event notifications and error handling details.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "What events can Amazon S3 Glacier publish to an Amazon SNS topic?",
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What error responses are associated with vault notification configurations?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Events",
          "API Version",
          "Notification Configuration",
          "Amazon SNS",
          "ARN",
          "Error Responses",
          "Vault Notification Configuration",
          "SNS Topic",
          "Amazon S3 Glacier",
          "Vault Notifications",
          "JSON Fields",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_410",
      "text": "Amazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to the notification-configuration subresource of a\nvault.\nGET /-/vaults/examplevault/notification-configuration HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the audit logging configuration document in the body of the response\nin JSON format. In this example, the configuration shows that notifications for two events\n(ArchiveRetrievalCompleted and InventoryRetrievalCompleted) are sent to the Amazon\nSNS topic arn:aws:sns:us-west-2:012345678901:mytopic.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 150\n{\n\"Events\": [\n\"ArchiveRetrievalCompleted\",\n\"InventoryRetrievalCompleted\"\n],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nRelated Sections\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Set Vault Notification Configuration (PUT notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Vault Notifications API Version 2012-06-01 401",
      "start_idx": 622197,
      "end_idx": 623646,
      "metadata": {
        "num_sentences": 4,
        "num_words": 134,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "JSON"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "notification-configuration",
            "GET request",
            "audit logging",
            "SNS topic",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "x-amz-glacier-version",
            "API version 2012-06-01",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "API version 2012-06-01",
            "SNS topic",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Notification Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of a GET request to retrieve the notification configuration of an Amazon S3 Glacier vault and the corresponding JSON response showing audit logging settings.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve the notification configuration for an Amazon S3 Glacier vault?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "What is the format of the response for a notification configuration request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalCompleted",
          "AWS4-HMAC-SHA256",
          "Amazon SNS",
          "notification-configuration",
          "ArchiveRetrievalCompleted",
          "Amazon S3 Glacier",
          "API version 2012-06-01",
          "SNS topic",
          "x-amz-glacier-version",
          "GET request",
          "audit logging"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_411",
      "text": "Amazon S3 Glacier Developer Guide\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nInitiate Vault Lock (POST lock-policy)\nDescription\nThis operation initiates the vault locking process by doing the following:\n\u2022 Installing a vault lock policy on the specified vault.\n\u2022 Setting the lock state of vault lock to InProgress.\n\u2022 Returning a lock ID, which is used to complete the vault locking process.\nYou can set one vault lock policy for each vault and this policy can be up to 20 KB in size. For more\ninformation about vault lock policies, see Vault Lock Policies.\nYou must complete the vault locking process within 24 hours after the vault lock enters the\nInProgress state. After the 24 hour window ends, the lock ID expires, the vault automatically\nexits the InProgress state, and the vault lock policy is removed from the vault. You call Complete\nVault Lock (POST lockId) to complete the vault locking process by setting the state of the vault lock\nto Locked.\nNote\nAfter a vault lock is in the Locked state, you cannot initiate a new vault lock for the vault.\nYou can stop the vault locking process by calling Abort Vault Lock (DELETE lock-policy). You can\nget the state of the vault lock by calling Get Vault Lock (GET lock-policy). For more information\nabout the vault locking process, see S3 Glacier Vault Lock.\nIf this operation is called when the vault lock is in the InProgress state, the operation returns an\nAccessDeniedException error. When the vault lock is in the InProgress state you must call\nAbort Vault Lock (DELETE lock-policy) before you can initiate a new vault lock policy.\nInitiate Vault Lock API Version 2012-06-01 402",
      "start_idx": 623648,
      "end_idx": 625382,
      "metadata": {
        "num_sentences": 15,
        "num_words": 296,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Step-by-Step"
            ]
          },
          "keywords": [
            "vault lock",
            "InProgress state",
            "lock ID",
            "vault lock policy",
            "Complete Vault Lock",
            "Abort Vault Lock",
            "Get Vault Lock",
            "AccessDeniedException",
            "S3 Glacier",
            "Locked state"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS Command Line Interface",
            "AccessDeniedException",
            "Vault Lock Policy"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of initiating a vault lock in Amazon S3 Glacier, including setting a vault lock policy, transitioning the lock state to InProgress, and completing or aborting the process.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault lock in Amazon S3 Glacier?",
            "What happens if the vault locking process is not completed within 24 hours?",
            "How can I abort the vault locking process?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Locked state",
          "AWS Command Line Interface",
          "vault lock",
          "lock ID",
          "Complete Vault Lock",
          "Vault Lock Policy",
          "AccessDeniedException",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "Vault Lock",
          "Get Vault Lock",
          "InProgress state",
          "vault lock policy",
          "Abort Vault Lock"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_412",
      "text": "Amazon S3 Glacier Developer Guide\nRequests\nTo initiate the vault locking process, send an HTTP POST request to the URI of the lock-policy\nsubresource of the vault, as shown in the following syntax example.\nSyntax\nPOST /AccountId/vaults/vaultName/lock-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nInitiate Vault Lock API Version 2012-06-01 403",
      "start_idx": 625384,
      "end_idx": 626567,
      "metadata": {
        "num_sentences": 10,
        "num_words": 177,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "Syntax",
              "Headers",
              "Body"
            ]
          },
          "keywords": [
            "Vault Locking",
            "HTTP POST",
            "lock-policy",
            "AccountId",
            "Authorization",
            "x-amz-glacier-version",
            "AWS account ID",
            "Glacier",
            "Request Headers",
            "JSON fields"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "lock-policy",
            "x-amz-glacier-version",
            "HTTP POST"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate the vault locking process in Amazon S3 Glacier using an HTTP POST request, including the required syntax, headers, and JSON fields.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a vault lock in Amazon S3 Glacier?",
            "What is the syntax for the lock-policy HTTP POST request?",
            "What headers and body fields are required for initiating a vault lock?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "Vault Locking",
          "Glacier",
          "HTTP POST",
          "JSON fields",
          "Amazon S3 Glacier",
          "AccountId",
          "Request Headers",
          "x-amz-glacier-version",
          "lock-policy",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_413",
      "text": "Amazon S3 Glacier Developer Guide\nPolicy\nThe vault lock policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nRequired: Yes\nResponses\nAmazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created response, if the policy is accepted.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-lock-id: lockId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nx-amz-lock-\nThe lock ID, which is used to complete the vault locking process.\nid\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nInitiate Vault Lock API Version 2012-06-01 404",
      "start_idx": 626569,
      "end_idx": 627468,
      "metadata": {
        "num_sentences": 8,
        "num_words": 134,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details"
            ]
          },
          "keywords": [
            "vault lock policy",
            "JSON string",
            "HTTP 201 Created",
            "x-amz-lock-id",
            "response headers",
            "Amazon S3 Glacier",
            "lock ID",
            "error responses",
            "Initiate Vault Lock",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault lock policy",
            "lock ID",
            "API Version 2012-06-01",
            "HTTP 201 Created"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the vault lock policy for Amazon S3 Glacier, including its syntax, response headers, and potential errors when using the Initiate Vault Lock API Version 2012-06-01.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the vault lock policy format for Amazon S3 Glacier?",
            "What response headers are included in a successful vault lock operation?",
            "What errors might occur during the Initiate Vault Lock API call?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "lock ID",
          "x-amz-lock-id",
          "JSON string",
          "Initiate Vault Lock",
          "response headers",
          "Amazon S3 Glacier",
          "error responses",
          "API Version 2012-06-01",
          "vault lock policy",
          "HTTP 201 Created"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_414",
      "text": "Amazon S3 Glacier Developer Guide\nExamples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's lock-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character.\nPUT /-/vaults/examplevault/lock-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-vault-\nlock\\\",\\\"Effect\\\":\\\"Deny\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\",\\\"Condition\\\":{\\\"NumericLessThanEquals\\\":\n{\\\"glacier:ArchiveAgeinDays\\\":\\\"365\\\"}}}]}\"}\nExample Response\nIf the request was successful, S3 Glacier returns an HTTP 201 Created response, as shown in the\nfollowing example.\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-lock-id: AE863rKkWZU53SLW5be4DUcW\nRelated Sections\n\u2022 Abort Vault Lock (DELETE lock-policy)\n\u2022 Complete Vault Lock (POST lockId)\nInitiate Vault Lock API Version 2012-06-01 405",
      "start_idx": 627470,
      "end_idx": 628890,
      "metadata": {
        "num_sentences": 4,
        "num_words": 111,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault lock",
            "lock-policy",
            "HTTP PUT",
            "Policy JSON",
            "glacier:DeleteArchive",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "vaults",
            "Condition"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "us-west-2",
            "arn:aws:iam",
            "glacier:ArchiveAgeinDays"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "IAM Policies"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using an HTTP PUT request to set a lock-policy on an Amazon S3 Glacier vault, along with the corresponding response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a lock-policy on an Amazon S3 Glacier vault?",
            "What is the structure of a Policy JSON for a vault lock?",
            "What is the expected response for a successful vault lock request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP PUT",
          "vault lock",
          "AWS4-HMAC-SHA256",
          "arn:aws:iam",
          "examplevault",
          "glacier:DeleteArchive",
          "Policy JSON",
          "vaults",
          "Condition",
          "us-west-2",
          "Amazon S3 Glacier",
          "glacier:ArchiveAgeinDays",
          "x-amz-glacier-version",
          "lock-policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_415",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Get Vault Lock (GET lock-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Tags For Vault (GET tags)\nThis operation lists all the tags attached to a vault. The operation returns an empty map if there\nare no tags. For more information about tags, see Tagging Amazon S3 Glacier Resources.\nRequest Syntax\nTo list the tags for a vault, send an HTTP GET request to the tags URI as shown in the following\nsyntax example.\nGET /AccountId/vaults/vaultName/tags HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nList Tags For Vault API Version 2012-06-01 406",
      "start_idx": 628892,
      "end_idx": 630134,
      "metadata": {
        "num_sentences": 10,
        "num_words": 201,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Request",
              "Syntax Example"
            ]
          },
          "keywords": [
            "Vault Lock",
            "GET lock-policy",
            "List Tags",
            "HTTP GET",
            "AccountId",
            "tags URI",
            "AWS account ID",
            "Authorization",
            "x-amz-glacier-version",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "Vault",
            "AccountId",
            "tags URI"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the 'List Tags For Vault' operation in Amazon S3 Glacier to retrieve tags associated with a vault via an HTTP GET request. It includes syntax, authorization details, and notes about the AccountId parameter.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I list tags for a vault in Amazon S3 Glacier?",
            "What is the syntax for the 'List Tags For Vault' API request?",
            "What does the AccountId parameter represent in Amazon S3 Glacier API requests?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP GET",
          "Authorization",
          "AWS Command Line Interface",
          "List Tags",
          "Vault",
          "Vault Lock",
          "Amazon S3 Glacier",
          "AccountId",
          "tags URI",
          "x-amz-glacier-version",
          "AWS account ID",
          "GET lock-policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_416",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the operation is successful, the service sends back an HTTP 200 OK response.\nResponse Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Tags\":\n{\n\"string\" : \"string\",\n\"string\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nTags\nThe tags attached to the vault. Each tag is composed of a key and a value.\nType: String to String map\nRequired: Yes\nList Tags For Vault API Version 2012-06-01 407",
      "start_idx": 630136,
      "end_idx": 631078,
      "metadata": {
        "num_sentences": 10,
        "num_words": 144,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "Response Syntax",
              "Response Body"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Syntax",
            "Response Body",
            "Tags",
            "HTTP 200 OK",
            "Content-Type",
            "JSON fields",
            "Vault",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "Tags",
            "Vault API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the request and response structure for the List Tags For Vault API in Amazon S3 Glacier, including headers, syntax, and JSON fields for tags.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What headers are required for the List Tags For Vault API?",
            "What is the response syntax for the List Tags For Vault operation?",
            "What JSON fields are included in the response body for this API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP 200 OK",
          "Vault API",
          "Content-Type",
          "Vault",
          "JSON fields",
          "Amazon S3 Glacier",
          "HTTP/1.1",
          "Response Body",
          "Request Headers",
          "API Version 2012-06-01",
          "Response Syntax",
          "Tags",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_418",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 Remove Tags From Vault (POST tags remove)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nList Vaults (GET vaults)\nDescription\nThis operation lists all vaults owned by the calling user\u2019s account. The list returned in the response\nis ASCII-sorted by vault name.\nBy default, this operation returns up to 10 items per request. If there are more vaults to list, the\nmarker field in the response body contains the vault Amazon Resource Name (ARN) at which to\ncontinue the list with a new List Vaults request; otherwise, the marker field is null. In your next\nList Vaults request you set the marker parameter to the value Amazon S3 Glacier (S3 Glacier)\nreturned in the responses to your previous List Vaults request. You can also limit the number of\nvaults returned in the response by specifying the limit parameter in the request.\nRequests\nTo get a list of vaults, you send a GET request to the vaults resource.\nSyntax\nGET /AccountId/vaults HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nList Vaults API Version 2012-06-01 409",
      "start_idx": 632272,
      "end_idx": 633533,
      "metadata": {
        "num_sentences": 8,
        "num_words": 205,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Operational Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vaults",
            "List Vaults",
            "marker field",
            "limit parameter",
            "API",
            "GET request",
            "HTTP syntax",
            "authorization",
            "AWS SDK"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vaults resource",
            "marker field",
            "AccountId",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation describes the List Vaults API operation for Amazon S3 Glacier, including syntax, parameters, and request details for retrieving a sorted list of vaults owned by the user's account.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier?",
            "What parameters are available for the List Vaults API?",
            "How does the marker field work in paginated responses?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Region",
          "List Vaults",
          "API",
          "vaults",
          "authorization",
          "Amazon S3 Glacier",
          "AccountId",
          "marker field",
          "limit parameter",
          "HTTP syntax",
          "AWS SDK",
          "vaults resource",
          "GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_419",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation uses the following request parameters.\nName Description Required\nlimit No\nThe maximum number of vaults to be returned. The default\nlimit is 10. The number of vaults returned might be fewer\nthan the specified limit, but the number of returned vaults\nnever exceeds the limit.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 10.\nmarker No\nA string used for pagination. marker specifies the vault ARN\nafter which the listing of vaults should begin. (The vault\nspecified by marker is not included in the returned list.) Get\nthe marker value from a previous List Vaults response. You\nneed to include the m arker only if you are continuing the\npagination of results started in a previous List Vaults request.\nSpecifying an empty value (\"\") for the marker returns a list of\nvaults starting from the first vault.\nType: String\nConstraints: None\nList Vaults API Version 2012-06-01 410",
      "start_idx": 633535,
      "end_idx": 634922,
      "metadata": {
        "num_sentences": 16,
        "num_words": 235,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Explanation",
              "Usage Notes"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "AWS account ID",
            "vault",
            "limit",
            "marker",
            "pagination",
            "List Vaults",
            "request parameters",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "vault ARN",
            "List Vaults API",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the request parameters for the Amazon S3 Glacier List Vaults API, including details on the 'limit' and 'marker' parameters for pagination and specifying account IDs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the request parameters for the List Vaults API in Amazon S3 Glacier?",
            "How do I use the 'marker' parameter for pagination in the List Vaults API?",
            "What does the 'limit' parameter do in the List Vaults API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "List Vaults",
          "marker",
          "request parameters",
          "vault",
          "Amazon S3 Glacier",
          "AccountId",
          "limit",
          "pagination",
          "vault ARN",
          "API Version 2012-06-01",
          "List Vaults API",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_420",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Marker\": String\n\"VaultList\": [\n{\n\"CreationDate\": String,\n\"LastInventoryDate\": String,\n\"NumberOfArchives\": Number,\n\"SizeInBytes\": Number,\n\"VaultARN\": String,\n\"VaultName\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nList Vaults API Version 2012-06-01 411",
      "start_idx": 634924,
      "end_idx": 635782,
      "metadata": {
        "num_sentences": 7,
        "num_words": 114,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "Request Body",
            "Response Body",
            "VaultList",
            "API Version",
            "CreationDate",
            "NumberOfArchives",
            "VaultARN"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultList",
            "API Version 2012-06-01",
            "x-amzn-RequestId",
            "VaultARN"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocols",
            "JSON Syntax"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the request and response structure for the List Vaults API in Amazon S3 Glacier, including headers, syntax, and JSON fields in the response body.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What headers are required for the List Vaults API?",
            "What JSON fields are included in the response body?",
            "What is the syntax for the List Vaults API response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "CreationDate",
          "API Version",
          "Response Headers",
          "VaultList",
          "NumberOfArchives",
          "VaultARN",
          "Request Body",
          "Amazon S3 Glacier",
          "Response Body",
          "Request Headers",
          "API Version 2012-06-01",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_421",
      "text": "Amazon S3 Glacier Developer Guide\nCreationDate\nThe date the vault was created, in Coordinated Universal Time (UTC).\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nLastInventoryDate\nThe date of the last vault inventory, in Coordinated Universal Time (UTC). This field can be\nnull if an inventory has not yet run on the vault, for example, if you just created the vault. For\ninformation about initiating an inventory for a vault, see Initiate Job (POST jobs).\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nMarker\nThe vaultARN that represents where to continue pagination of the results. You use the marker\nin another List Vaults request to obtain more vaults in the list. If there are no more vaults, this\nvalue is null.\nType: String\nNumberOfArchives\nThe number of archives in the vault as of the last inventory date.\nType: Number\nSizeInBytes\nThe total size, in bytes, of all the archives in the vault including any per-archive overhead, as of\nthe last inventory date.\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) of the vault.\nType: String\nVaultList\nAn array of objects, with each object providing a description of a vault.\nType: Array\nList Vaults API Version 2012-06-01 412",
      "start_idx": 635784,
      "end_idx": 637074,
      "metadata": {
        "num_sentences": 15,
        "num_words": 208,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "CreationDate",
            "LastInventoryDate",
            "Marker",
            "NumberOfArchives",
            "SizeInBytes",
            "VaultARN",
            "ISO 8601",
            "List Vaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ISO 8601",
            "List Vaults API",
            "Inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides field descriptions for the Amazon S3 Glacier List Vaults API, including details about vault metadata such as creation date, inventory date, and size in bytes.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What metadata fields are available for an Amazon S3 Glacier vault?",
            "How is the vault creation date represented in the API?",
            "What does the Marker field signify in the List Vaults API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "ISO 8601",
          "List Vaults",
          "SizeInBytes",
          "vault",
          "NumberOfArchives",
          "LastInventoryDate",
          "VaultARN",
          "Amazon S3 Glacier",
          "Inventory",
          "List Vaults API",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_422",
      "text": "Amazon S3 Glacier Developer Guide\nVaultName\nThe vault name.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample: List All Vaults\nThe following example lists vaults. Because the marker and limit parameters are not specified in\nthe request, up to 10 vaults are returned.\nExample Request\nGET /-/vaults HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe Marker is null indicating there are no more vaults to list.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: 497\n{\n\"Marker\": null,\n\"VaultList\": [\n{\n\"CreationDate\": \"2012-03-16T22:22:47.214Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\nList Vaults API Version 2012-06-01 413",
      "start_idx": 637076,
      "end_idx": 638211,
      "metadata": {
        "num_sentences": 6,
        "num_words": 115,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Error Handling"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultName",
            "Error Responses",
            "List Vaults",
            "Marker",
            "limit parameters",
            "HTTP request",
            "Authorization",
            "x-amz-glacier-version",
            "VaultList"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultName",
            "Marker",
            "VaultList",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides a reference for listing vaults in Amazon S3 Glacier, including request and response examples, error handling, and key parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list all vaults in Amazon S3 Glacier?",
            "What is the Marker field in the List Vaults response?",
            "What are the required headers for making a List Vaults API call?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "List Vaults",
          "Error Responses",
          "VaultName",
          "VaultList",
          "Amazon S3 Glacier",
          "limit parameters",
          "HTTP request",
          "x-amz-glacier-version",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_423",
      "text": "Amazon S3 Glacier Developer Guide\n\"NumberOfArchives\": 2,\n\"SizeInBytes\": 12334,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault1\",\n\"VaultName\": \"examplevault1\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-21T22:06:51.218Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault2\",\n\"VaultName\": \"examplevault2\"\n},\n{\n\"CreationDate\": \"2012-03-19T22:06:51.218Z\",\n\"LastInventoryDate\": \"2012-03-25T12:14:31.121Z\",\n\"NumberOfArchives\": 0,\n\"SizeInBytes\": 0,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault3\",\n\"VaultName\": \"examplevault3\"\n}\n]\n}\nExample: Partial List of Vaults\nThe following example returns two vaults starting at the vault specified by the marker.\nExample Request\nGET /-/vaults?limit=2&marker=arn:aws:glacier:us-west-2:012345678901:vaults/\nexamplevault1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nTwo vaults are returned in the list. The Marker contains the vault ARN to continue pagination in\nanother List Vaults request.\nList Vaults API Version 2012-06-01 414",
      "start_idx": 638213,
      "end_idx": 639638,
      "metadata": {
        "num_sentences": 4,
        "num_words": 109,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Request",
              "API Response",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Vault",
            "ARN",
            "Inventory Date",
            "API Version",
            "Pagination",
            "Request",
            "Response",
            "SignedHeaders",
            "Authorization"
          ],
          "entities": [
            "VaultARN",
            "VaultName",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of listing vaults in Amazon S3 Glacier, including request and response details for pagination purposes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I list vaults in Amazon S3 Glacier?",
            "What is the API request structure for listing Glacier vaults?",
            "How does pagination work in the List Vaults API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "Response",
          "Authorization",
          "API Version",
          "AWS4-HMAC-SHA256",
          "ARN",
          "Vault",
          "SignedHeaders",
          "VaultARN",
          "Amazon S3 Glacier",
          "Inventory Date",
          "Pagination",
          "Request",
          "API Version 2012-06-01",
          "x-amz-glacier-version",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_425",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 AWS Command Line Interface\nRemove Tags From Vault (POST tags remove)\nThis operation removes one or more tags from the set of tags attached to a vault. For more\ninformation about tags, see Tagging Amazon S3 Glacier Resources.\nThis operation is idempotent. The operation will be successful, even if there are no tags attached to\nthe vault.\nRequest Syntax\nTo remove tags from a vault, send an HTTP POST request to the tags URI as shown in the following\nsyntax example.\nPOST /AccountId/vaults/vaultName/tags?operation=remove HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagKeys\": [\n\"string\",\n\"string\"\n]\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRemove Tags From Vault API Version 2012-06-01 416",
      "start_idx": 640737,
      "end_idx": 641938,
      "metadata": {
        "num_sentences": 10,
        "num_words": 190,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "HTTP Request Syntax",
              "Tag Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Remove Tags",
            "Vault",
            "API Version 2012-06-01",
            "HTTP POST",
            "TagKeys",
            "AccountId",
            "Authorization",
            "x-amz-glacier-version",
            "AWS CLI"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "AccountId",
            "TagKeys",
            "vaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Tag Management",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to use the Remove Tags From Vault API operation to delete one or more tags from a vault using an HTTP POST request.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I remove tags from a vault in Amazon S3 Glacier?",
            "What is the syntax for the Remove Tags From Vault API operation?",
            "Can I remove tags from a vault if no tags are currently attached?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS Command Line Interface",
          "AWS CLI",
          "Vault",
          "HTTP POST",
          "Remove Tags",
          "TagKeys",
          "vaultName",
          "Amazon S3 Glacier",
          "AccountId",
          "API Version 2012-06-01",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_426",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\noperation A single query string parameter operation with a value of Yes\n=remove remove to distinguish it from Add Tags To Vault (POST tags\nadd).\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nTagKeys\nA list of tag keys. Each corresponding tag is removed from the vault.\nType: array of Strings\nLength constraint: Minimum of 1 item in the list. Maximum of 10 items in the list.\nRequired: Yes\nResponses\nIf the action is successful, the service sends back an HTTP 204 No Content response with an\nempty HTTP body.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nRemove Tags From Vault API Version 2012-06-01 417",
      "start_idx": 641940,
      "end_idx": 642839,
      "metadata": {
        "num_sentences": 10,
        "num_words": 143,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Parameters",
            "Request Headers",
            "Request Body",
            "TagKeys",
            "HTTP 204 No Content"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Remove Tags From Vault API",
            "TagKeys"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Tag Management",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the 'Remove Tags From Vault' API operation in Amazon S3 Glacier, including request parameters, headers, body structure, and response details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the required parameters for the Remove Tags From Vault API?",
            "What is the response format for a successful Remove Tags From Vault API call?",
            "What constraints apply to the TagKeys field in the request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Remove Tags From Vault API",
          "HTTP 204 No Content",
          "TagKeys",
          "Request Body",
          "Amazon S3 Glacier",
          "Request Parameters",
          "Request Headers"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_427",
      "text": "Amazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP POST request to remove the specified tags.\nPOST /-/vaults/examplevault/tags?operation=remove HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\n\"TagsKeys\": [\n\"examplekey1\",\n\"examplekey2\"\n]\n}\nExample Response\nIf the request was successful Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example.\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nRemove Tags From Vault API Version 2012-06-01 418",
      "start_idx": 642841,
      "end_idx": 644057,
      "metadata": {
        "num_sentences": 7,
        "num_words": 130,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Errors",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "response headers",
            "error messages",
            "HTTP POST request",
            "tags",
            "x-amz-glacier-version",
            "Authorization",
            "TagsKeys",
            "HTTP 204 No Content",
            "Remove Tags From Vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-glacier-version",
            "TagsKeys",
            "HTTP 204 No Content",
            "Remove Tags From Vault API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document provides reference details on the 'Remove Tags From Vault' operation in Amazon S3 Glacier, including headers, errors, and example requests and responses.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I remove tags from an Amazon S3 Glacier vault?",
            "What response headers are used in the Remove Tags From Vault operation?",
            "What is the expected response for a successful tag removal request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "Remove Tags From Vault API",
          "error messages",
          "HTTP 204 No Content",
          "x-amz-glacier-version",
          "response headers",
          "Amazon S3 Glacier",
          "TagsKeys",
          "Remove Tags From Vault",
          "tags",
          "HTTP POST request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_428",
      "text": "Amazon S3 Glacier Developer Guide\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Add Tags To Vault (POST tags add)\n\u2022 List Tags For Vault (GET tags)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Access Policy (PUT access-policy)\nDescription\nThis operation configures an access policy for a vault and will overwrite an existing policy. To\nconfigure a vault access policy, send a PUT request to the access-policy subresource of the\nvault. You can set one access policy per vault and the policy can be up to 20 KB in size. For more\ninformation about vault access policies, see Vault Access Policies.\nRequests\nSyntax\nTo set a vault access policy, send an HTTP PUT request to the URI of the vault's access-policy\nsubresource as shown in the following syntax example.\nPUT /AccountId/vaults/vaultName/access-policy HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\nSet Vault Access Policy API Version 2012-06-01 419",
      "start_idx": 644059,
      "end_idx": 645174,
      "metadata": {
        "num_sentences": 6,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "vault access policy",
            "Amazon S3 Glacier",
            "PUT request",
            "access-policy subresource",
            "x-amz-glacier-version",
            "AWS SDK",
            "HTTP syntax",
            "Content-Length",
            "Authorization",
            "policy size"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "vault",
            "access-policy",
            "AccountId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "API Configuration",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This document explains how to configure an access policy for a vault in Amazon S3 Glacier using a PUT request. It includes syntax, requirements, and related API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a vault access policy in Amazon S3 Glacier?",
            "What is the syntax for a PUT request to configure a vault access policy?",
            "What are the size limitations for a vault access policy?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "Authorization",
          "policy size",
          "AWS Command Line Interface",
          "access-policy",
          "vault",
          "access-policy subresource",
          "Content-Length",
          "Amazon S3 Glacier",
          "AccountId",
          "vault access policy",
          "HTTP syntax",
          "PUT request",
          "AWS SDK",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_429",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"Policy\": \"string\"\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nPolicy\nThe vault access policy as a JSON string, which uses \"\\\" as an escape character.\nType: String\nRequired: Yes\nResponses\nIn response, S3 Glacier returns 204 No Content if the policy is accepted.\nSyntax\nHTTP/1.1 204 No Content\nSet Vault Access Policy API Version 2012-06-01 420",
      "start_idx": 645176,
      "end_idx": 646157,
      "metadata": {
        "num_sentences": 10,
        "num_words": 164,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "Request and Response Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault access policy",
            "AWS account ID",
            "request headers",
            "JSON string",
            "escape character",
            "Set Vault Access Policy",
            "204 No Content",
            "API Version 2012-06-01",
            "request body"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "vault",
            "Set Vault Access Policy",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to use the Set Vault Access Policy operation in Amazon S3 Glacier, including details on request headers, body structure, and response behavior.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a vault access policy in Amazon S3 Glacier?",
            "What is the expected response for the Set Vault Access Policy operation?",
            "What parameters and headers are required for this API call?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "escape character",
          "request headers",
          "vault",
          "JSON string",
          "Set Vault Access Policy",
          "Amazon S3 Glacier",
          "vault access policy",
          "API Version 2012-06-01",
          "204 No Content",
          "request body",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_430",
      "text": "Amazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example sends an HTTP PUT request to the URI of the vault's access-policy\nsubresource. The Policy JSON string uses \"\\\" as an escape character.\nPUT /-/vaults/examplevault/access-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\n{\"Policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Define-owner-access-\nrights\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::999999999999:root\n\\\"},\\\"Action\\\":\\\"glacier:DeleteArchive\\\",\\\"Resource\\\":\\\"arn:aws:glacier:us-\nwest-2:999999999999:vaults/examplevault\\\"}]}\"}\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 204 No Content as\nshown in the following example.\nSet Vault Access Policy API Version 2012-06-01 421",
      "start_idx": 646159,
      "end_idx": 647648,
      "metadata": {
        "num_sentences": 8,
        "num_words": 138,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Error Handling",
              "Example Request",
              "Example Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP PUT request",
            "access-policy",
            "Policy JSON",
            "escape character",
            "x-amz-glacier-version",
            "Authorization",
            "Response Headers",
            "Error Responses",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "Policy JSON",
            "HTTP 204 No Content"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "HTTP Protocol",
            "IAM Policy Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on setting a vault access policy in Amazon S3 Glacier, including example requests, response headers, and error handling information.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I set a vault access policy in Amazon S3 Glacier?",
            "What are the common response headers for this operation?",
            "What does a successful response look like for this API call?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "escape character",
          "Response Headers",
          "AWS4-HMAC-SHA256",
          "HTTP PUT request",
          "access-policy",
          "Error Responses",
          "Policy JSON",
          "vault",
          "HTTP 204 No Content",
          "Amazon S3 Glacier",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_431",
      "text": "Amazon S3 Glacier Developer Guide\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nRelated Sections\n\u2022 Delete Vault Access Policy (DELETE access-policy)\n\u2022 Get Vault Access Policy (GET access-policy)\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nSet Vault Notification Configuration (PUT notification-configuration)\nDescription\nRetrieving an archive and a vault inventory are asynchronous operations in Amazon S3 Glacier\n(S3 Glacier) for which you must first initiate a job and wait for the job to complete before you\ncan download the job output. You can configure a vault to post a message to an Amazon Simple\nNotification Service (Amazon SNS) topic when these jobs complete. You can use this operation\nto set notification configuration on the vault. For more information, see Configuring Vault\nNotifications in Amazon S3 Glacier.\nTo configure vault notifications, send a PUT request to the notification-configuration\nsubresource of the vault. A notification configuration is specific to a vault; therefore, it is also\nreferred to as a vault subresource. The request should include a JSON document that provides an\nAmazon Simple Notification Service (Amazon SNS) topic and the events for which you want S3\nGlacier to send notifications to the topic.\nYou can configure a vault to publish a notification for the following vault events:\nSet Vault Notification Configuration API Version 2012-06-01 422",
      "start_idx": 647650,
      "end_idx": 649221,
      "metadata": {
        "num_sentences": 8,
        "num_words": 235,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "notification configuration",
            "Amazon SNS topic",
            "JSON document",
            "vault events",
            "PUT request",
            "asynchronous operations",
            "job output",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "AWS Command Line Interface",
            "vault subresource",
            "notification-configuration"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using a PUT request to the notification-configuration subresource, enabling messages to be published to an Amazon SNS topic for specific vault events.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What events can trigger notifications in Amazon S3 Glacier vaults?",
            "What is the format of the JSON document required for notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "Amazon SNS",
          "notification-configuration",
          "vault",
          "JSON document",
          "job output",
          "notification configuration",
          "vault events",
          "Amazon S3 Glacier",
          "asynchronous operations",
          "Amazon SNS topic",
          "PUT request",
          "API Version 2012-06-01",
          "vault subresource"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_432",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 ArchiveRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\narchive retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can be\nSucceeded or Failed. The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID).\n\u2022 InventoryRetrievalCompleted\u2014 This event occurs when a job that was initiated for an\ninventory retrieval is completed (Initiate Job (POST jobs)). The status of the completed job can\nbe Succeeded or Failed. The notification sent to the SNS topic is the same output as returned\nfrom Describe Job (GET JobID).\nAmazon SNS topics must grant permission to the vault to be allowed to publish notifications to the\ntopic.\nRequests\nTo set notification configuration on your vault, send a PUT request to the URI of the vault's\nnotification-configuration subresource. You specify the configuration in the request\nbody. The configuration includes the Amazon SNS topic name and an array of events that trigger\nnotification to each topic.\nSyntax\nPUT /AccountId/vaults/VaultName/notification-configuration HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\n{\n\"SNSTopic\": String,\n\"Events\":[String, ...]\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nSet Vault Notification Configuration API Version 2012-06-01 423",
      "start_idx": 649223,
      "end_idx": 650926,
      "metadata": {
        "num_sentences": 14,
        "num_words": 261,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Interaction",
              "Event Notification"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS topic",
            "vault",
            "notification configuration",
            "PUT request",
            "archive retrieval",
            "inventory retrieval",
            "AccountId",
            "SignatureValue",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS Topic",
            "Vault",
            "AccountId",
            "Region"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Event Notification",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure notifications for Amazon S3 Glacier vaults using Amazon SNS topics and describes the events triggered by archive and inventory retrieval jobs. It includes syntax and details for making PUT requests to set notification configurations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure notifications for an Amazon S3 Glacier vault?",
            "What events trigger notifications in Amazon S3 Glacier?",
            "What is the syntax for the Set Vault Notification Configuration API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "archive retrieval",
          "Amazon SNS",
          "PUT request",
          "Vault",
          "vault",
          "notification configuration",
          "SNS Topic",
          "SignatureValue",
          "Amazon S3 Glacier",
          "AccountId",
          "SNS topic",
          "x-amz-glacier-version",
          "Region"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_433",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe JSON in the request body contains the following fields.\nEvents\nAn array of one or more events for which you want S3 Glacier to send notification.\nValid Values: ArchiveRetrievalCompleted | InventoryRetrievalCompleted\nRequired: yes\nType: Array\nSNSTopic\nThe Amazon SNS topic ARN. For more information, go to Getting Started with Amazon SNS in\nthe Amazon Simple Notification Service Getting Started Guide.\nRequired: yes\nType: String\nResponses\nIn response, Amazon S3 Glacier (S3 Glacier) returns 204 No Content if the notification\nconfiguration is accepted.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nSet Vault Notification Configuration API Version 2012-06-01 424",
      "start_idx": 650928,
      "end_idx": 651905,
      "metadata": {
        "num_sentences": 9,
        "num_words": 140,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request and Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Parameters",
            "Request Headers",
            "Request Body",
            "JSON",
            "Events",
            "SNSTopic",
            "Amazon SNS",
            "204 No Content",
            "Set Vault Notification Configuration"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Set Vault Notification Configuration",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about configuring notifications for Amazon S3 Glacier using the Set Vault Notification Configuration API, including required request body fields and response details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What parameters are required for configuring notifications in Amazon S3 Glacier?",
            "What is the response format for the Set Vault Notification Configuration API?",
            "What events can trigger notifications in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Events",
          "InventoryRetrievalCompleted",
          "Amazon SNS",
          "SNSTopic",
          "ArchiveRetrievalCompleted",
          "Set Vault Notification Configuration",
          "Request Body",
          "Amazon S3 Glacier",
          "Request Parameters",
          "Request Headers",
          "204 No Content",
          "JSON"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_434",
      "text": "Amazon S3 Glacier Developer Guide\nResponse Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to configure vault notification.\nExample Request\nThe following request sets the examplevault notification configuration so that notifications for\ntwo events (ArchiveRetrievalCompleted and InventoryRetrievalCompleted ) are sent to\nthe Amazon SNS topic arn:aws:sns:us-west-2:012345678901:mytopic.\nPUT /-/vaults/examplevault/notification-policy HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Events\": [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"],\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\"\n}\nExample Response\nA successful response returns a 204 No Content.\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nSet Vault Notification Configuration API Version 2012-06-01 425",
      "start_idx": 651907,
      "end_idx": 653389,
      "metadata": {
        "num_sentences": 8,
        "num_words": 143,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Error Handling",
              "API Request/Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notification",
            "SNS topic",
            "ArchiveRetrievalCompleted",
            "InventoryRetrievalCompleted",
            "PUT request",
            "HTTP/1.1",
            "x-amz-glacier-version",
            "Authorization",
            "Error Responses"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "arn:aws:sns",
            "x-amz-glacier-version",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Notification Configuration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to configure vault notifications in Amazon S3 Glacier using API requests, including examples of request and response formats, and references to error handling.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure vault notifications in Amazon S3 Glacier?",
            "What events can trigger notifications in Amazon S3 Glacier?",
            "What is the response format for a successful vault notification configuration?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "arn:aws:sns",
          "Authorization",
          "InventoryRetrievalCompleted",
          "Amazon SNS",
          "PUT request",
          "Error Responses",
          "ArchiveRetrievalCompleted",
          "vault notification",
          "Amazon S3 Glacier",
          "SNS topic",
          "x-amz-glacier-version",
          "HTTP/1.1"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_435",
      "text": "Amazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Get Vault Notifications (GET notification-configuration)\n\u2022 Delete Vault Notifications (DELETE notification-configuration)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nSee Also\nFor more information about using this API in one of the language-specific Amazon SDKs, see the\nfollowing:\n\u2022 AWS Command Line Interface\nArchive Operations\nThe following are the archive operations available for use in S3 Glacier.\nTopics\n\u2022 Delete Archive (DELETE archive)\n\u2022 Upload Archive (POST archive)\nDelete Archive (DELETE archive)\nDescription\nThis operation deletes an archive from a vault. You can delete one archive at a time from a vault.\nTo delete the archive you must provide its archive ID in the delete request. You can get the archive\nID by downloading the vault inventory for the vault that contains the archive. For more information\nabout downloading the vault inventory, see Downloading a Vault Inventory in Amazon S3 Glacier.\nAfter you delete an archive, you might still be able to make a successful request to initiate a job to\nretrieve the deleted archive, but the archive retrieval job will fail.\nArchive retrievals that are in progress for an archive ID when you delete the archive might or might\nnot succeed according to the following scenarios:\nArchive Operations API Version 2012-06-01 426",
      "start_idx": 653391,
      "end_idx": 654740,
      "metadata": {
        "num_sentences": 8,
        "num_words": 212,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Deletion Process"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault notifications",
            "archive ID",
            "delete archive",
            "vault inventory",
            "archive retrieval",
            "API version",
            "job initiation",
            "AWS CLI",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Command Line Interface",
            "API Version 2012-06-01",
            "vault inventory",
            "archive ID"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Management",
          "secondary_categories": [
            "API Operations",
            "Access Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Command Line Interface"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the process of deleting an archive from an Amazon S3 Glacier vault using the DELETE archive operation, including prerequisites and potential outcomes of the operation.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault?",
            "What happens if I try to retrieve an archive after it has been deleted?",
            "How can I find the archive ID needed for deletion?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Management]",
        "tf_idf_keywords": [
          "AWS Command Line Interface",
          "archive retrieval",
          "AWS CLI",
          "job initiation",
          "API Version 2012-06-01",
          "vault",
          "vault inventory",
          "API version",
          "Amazon S3 Glacier",
          "delete archive",
          "archive ID",
          "vault notifications"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_436",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 If the archive retrieval job is actively preparing the data for download when Amazon S3 Glacier\n(S3 Glacier) receives the delete archive request, the archival retrieval operation might fail.\n\u2022 If the archive retrieval job has successfully prepared the archive for download when S3 Glacier\nreceives the delete archive request, you will be able to download the output.\nFor more information about archive retrieval, see Downloading an Archive in S3 Glacier.\nThis operation is idempotent. Attempting to delete an already-deleted archive does not result in an\nerror.\nRequests\nTo delete an archive you send a DELETE request to the archive resource URI.\nSyntax\nDELETE /AccountId/vaults/VaultName/archives/ArchiveID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nx-amz-Date: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nDelete Archive API Version 2012-06-01 427",
      "start_idx": 654742,
      "end_idx": 656230,
      "metadata": {
        "num_sentences": 13,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Error Handling"
            ]
          },
          "keywords": [
            "archive retrieval",
            "delete archive",
            "S3 Glacier",
            "idempotent",
            "DELETE request",
            "archive resource URI",
            "AWS account ID",
            "authorization",
            "request headers",
            "HTTP syntax"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "glacier.Region.amazonaws.com",
            "DELETE request",
            "ArchiveID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Data Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to delete an archive in Amazon S3 Glacier using the DELETE request, including conditions for success and idempotency behavior.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I delete an archive in Amazon S3 Glacier?",
            "What happens if I delete an archive during an active retrieval operation?",
            "What headers are required for the DELETE archive request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "HTTP syntax",
          "archive retrieval",
          "idempotent",
          "request headers",
          "ArchiveID",
          "glacier.Region.amazonaws.com",
          "authorization",
          "archive resource URI",
          "Amazon S3 Glacier",
          "DELETE request",
          "delete archive",
          "S3 Glacier",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_437",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to delete an archive from the vault named\nexamplevault.\nExample Request\nThe ID of the archive to be deleted is specified as a subresource of archives.\nDELETE /-/vaults/examplevault/archives/NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nDelete Archive API Version 2012-06-01 428",
      "start_idx": 656232,
      "end_idx": 657504,
      "metadata": {
        "num_sentences": 8,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Methods",
              "Error Handling",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Body",
            "Response Headers",
            "Error Responses",
            "Delete Archive",
            "HTTP/1.1 204 No Content",
            "x-amz-glacier-version",
            "Authorization",
            "Archive ID",
            "Common Response Headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "Delete Archive API",
            "AWS4-HMAC-SHA256",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "HTTP Protocol",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Delete Archive operation in Amazon S3 Glacier, detailing the request and response structure, headers, and an example usage for deleting an archive from a vault.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I delete an archive from an Amazon S3 Glacier vault?",
            "What is the HTTP response for a successful Delete Archive operation?",
            "What headers are used in the Delete Archive API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS4-HMAC-SHA256",
          "Response Headers",
          "Delete Archive",
          "Error Responses",
          "HTTP/1.1 204 No Content",
          "Request Body",
          "Amazon S3 Glacier",
          "Common Response Headers",
          "Delete Archive API",
          "x-amz-glacier-version",
          "examplevault",
          "x-amzn-RequestId",
          "Archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_438",
      "text": "Amazon S3 Glacier Developer Guide\nExample Response\nIf the request is successful, S3 Glacier responds with 204 No Content to indicate that the archive\nis deleted.\nHTTP/1.1 204 No Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Archive (POST archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Archive (POST archive)\nDescription\nThis operation adds an archive to a vault. For a successful upload, your data is durably persisted. In\nresponse, Amazon S3 Glacier (S3 Glacier) returns the archive ID in the x-amz-archive-id header\nof the response. You should save the archive ID returned so that you can access the archive later.\nYou must provide a SHA256 tree hash of the data you are uploading. For information about\ncomputing a SHA256 tree hash, see Computing Checksums.\nNote\nThe SHA256 tree hash is only required for the Upload Archive (POST archive) action when\nusing the API. It is not required when using the AWS CLI.\nWhen uploading an archive, you can optionally specify an archive description of up to 1,024\nprintable ASCII characters. S3 Glacier returns the archive description when you either retrieve the\narchive or get the vault inventory. S3 Glacier does not interpret the description in any way. An\narchive description does not need to be unique. You cannot use the description to retrieve or sort\nthe archive list.\nUpload Archive API Version 2012-06-01 429",
      "start_idx": 657506,
      "end_idx": 659032,
      "metadata": {
        "num_sentences": 15,
        "num_words": 240,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Response",
              "Operation Description",
              "Best Practices"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive",
            "vault",
            "SHA256 tree hash",
            "multipart upload",
            "archive ID",
            "AWS CLI",
            "HTTP/1.1 204 No Content",
            "x-amz-archive-id",
            "checksum"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "AWS CLI",
            "archive ID",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the Upload Archive operation in Amazon S3 Glacier, detailing the process of adding an archive to a vault, the use of SHA256 tree hashes, and the structure of API responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What is the purpose of the SHA256 tree hash in S3 Glacier?",
            "What does the HTTP 204 No Content response indicate in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS CLI",
          "archive",
          "vault",
          "multipart upload",
          "HTTP/1.1 204 No Content",
          "checksum",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "HTTP/1.1",
          "archive ID",
          "S3 Glacier",
          "x-amz-archive-id"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_439",
      "text": "Amazon S3 Glacier Developer Guide\nExcept for the optional archive description, S3 Glacier does not support any additional metadata\nfor the archives. The archive ID is an opaque sequence of characters from which you cannot infer\nany meaning about the archive. So you might maintain metadata about the archives on the client-\nside. For more information, see Working with Archives in Amazon S3 Glacier.\nArchives are immutable. After you upload an archive, you cannot edit the archive or its description.\nRequests\nTo upload an archive, you use the HTTP POST method and scope the request to the archives\nsubresource of the vault in which you want to save the archive. The request must include the\narchive payload size, checksum (SHA256 tree hash), and can optionally include a description of the\narchive.\nSyntax\nPOST /AccountId/vaults/VaultName/archives\nHost: glacier.Region.amazonaws.com\nx-amz-glacier-version: 2012-06-01\nDate: Date\nAuthorization: SignatureValue\nx-amz-archive-description: Description\nx-amz-sha256-tree-hash: SHA256 tree hash\nx-amz-content-sha256: SHA256 linear hash\nContent-Length: Length\n<Request body.>\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis implementation of the operation does not use request parameters.\nUpload Archive API Version 2012-06-01 430",
      "start_idx": 659034,
      "end_idx": 660628,
      "metadata": {
        "num_sentences": 13,
        "num_words": 239,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Syntax",
              "Request Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive",
            "metadata",
            "HTTP POST",
            "vault",
            "checksum",
            "SHA256 tree hash",
            "x-amz-glacier-version",
            "AccountId",
            "immutable"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS",
            "HTTP POST",
            "SHA256 tree hash",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to upload archives to Amazon S3 Glacier using the HTTP POST method, including required parameters like payload size and checksum, while noting that archives are immutable and lack additional metadata support.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload an archive to Amazon S3 Glacier?",
            "What metadata is supported for archives in Amazon S3 Glacier?",
            "What are the required parameters for the Upload Archive API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS",
          "archive",
          "HTTP POST",
          "vault",
          "checksum",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "AccountId",
          "immutable",
          "metadata",
          "x-amz-glacier-version"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_440",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nContent-Length Yes\nThe size of the object, in bytes. For more information, go\nto h ttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.\nhtml#sec14.13.\nType: Number\nDefault: None\nConstraints: None\nx-amz-archive- No\nThe optional description of the archive you are uploading\ndescription\n. It can be a plain language description or some identifier\nyou choose to assign. The description need not be unique\nacross archives. When you retrieve a vault inventory (see\nInitiate Job (POST jobs)), it includes this description for\neach of the archives it returns in response.\nType: String\nDefault: None\nConstraints: The description must be less than or equal to\n1,024 characters. The allowable characters are 7-bit ASCII\nwithout control codes, specifically ASCII values 32\u2014126 de\ncimal or 0x20\u20140x7E hexadecimal.\nx-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the payload. This\nsha256\nis not the same value as you specify in the x-amz-sha\n256-tree-hash header.\nUpload Archive API Version 2012-06-01 431",
      "start_idx": 660630,
      "end_idx": 661907,
      "metadata": {
        "num_sentences": 14,
        "num_words": 189,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "API Documentation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Content-Length",
            "x-amz-archive-description",
            "x-amz-content-sha256",
            "SHA256 checksum",
            "vault inventory",
            "archives",
            "RFC2616",
            "ASCII characters"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Content-Length",
            "x-amz-archive-description",
            "x-amz-content-sha256",
            "Upload Archive API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocols",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the request headers used in the Amazon S3 Glacier Upload Archive API, including details about Content-Length, x-amz-archive-description, and x-amz-content-sha256 headers.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the required headers for the Upload Archive API in Amazon S3 Glacier?",
            "What is the purpose of the x-amz-archive-description header?",
            "How is the SHA256 checksum used in the Amazon S3 Glacier API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "x-amz-archive-description",
          "archives",
          "Content-Length",
          "vault inventory",
          "Upload Archive API",
          "Amazon S3 Glacier",
          "ASCII characters",
          "RFC2616",
          "SHA256 checksum",
          "Request Headers",
          "x-amz-content-sha256"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_441",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nThe user-computed checksum, SHA256 tree hash, of the\ntree-hash\npayload. For information on computing the SHA256 tree\nhash, see Computing Checksums. If S3 Glacier computes a\ndifferent checksum of the payload, it will reject the reque\nst.\nType: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload.\nResponses\nIn response, S3 Glacier durably stores the archive and returns a URI path to the archive ID.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nLocation: Location\nx-amz-archive-id: ArchiveId\nUpload Archive API Version 2012-06-01 432",
      "start_idx": 661909,
      "end_idx": 662694,
      "metadata": {
        "num_sentences": 6,
        "num_words": 107,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Checksum Information"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "Request Body",
            "URI path",
            "Archive ID",
            "Checksum",
            "HTTP/1.1",
            "201 Created",
            "Upload Archive",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "Archive ID",
            "URI path",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the Upload Archive API for Amazon S3 Glacier, including checksum validation, request body requirements, and response details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I compute the SHA256 tree hash for an Amazon S3 Glacier payload?",
            "What is the response structure for the Upload Archive API?",
            "What happens if the checksum computed by S3 Glacier differs from the user-provided checksum?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "Upload Archive",
          "201 Created",
          "Request Body",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "URI path",
          "API Version 2012-06-01",
          "HTTP/1.1",
          "Archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_442",
      "text": "Amazon S3 Glacier Developer Guide\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation\nThe relative URI path of the newly added archive resource.\nType: String\nx-amz-arc\nThe ID of the archive. This value is also included as part of the Location\nhive-id\nheader.\nType: String\nx-amz-sha\nThe checksum of the archive computed by S3 Glacier.\n256-tree-\nhash\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample Request\nThe following example shows a request to upload an archive.\nPOST /-/vaults/examplevault/archives HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nUpload Archive API Version 2012-06-01 433",
      "start_idx": 662696,
      "end_idx": 663753,
      "metadata": {
        "num_sentences": 10,
        "num_words": 139,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Headers",
              "Errors",
              "Request Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Response Headers",
            "Checksum",
            "Archive ID",
            "URI Path",
            "Error Responses",
            "Upload Archive",
            "API Version",
            "x-amz-sha256-tree-hash",
            "vaults"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Location Header",
            "x-amz-archive-id",
            "x-amz-sha256-tree-hash",
            "Error Responses"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Archiving"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "API"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the response headers, errors, and request example for uploading archives in Amazon S3 Glacier, along with details about specific headers and checksum values.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the response headers for uploading an archive in Amazon S3 Glacier?",
            "How is the checksum of an archive computed in S3 Glacier?",
            "What does a request to upload an archive in S3 Glacier look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Checksum",
          "Upload Archive",
          "URI Path",
          "Response Headers",
          "API Version",
          "x-amz-archive-id",
          "Error Responses",
          "vaults",
          "Amazon S3 Glacier",
          "Location Header",
          "x-amz-sha256-tree-hash",
          "Archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_444",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\nAbort Multipart Upload (DELETE uploadID)\nDescription\nThis command for multipart upload operation stops a multipart upload identified by the upload ID.\nAfter the Abort Multipart Upload request succeeds, you cannot use the upload ID to upload\nany more parts or perform any other operations. Stopping a completed multipart upload fails.\nHowever, stopping an already-stopped upload will succeed, for a short time.\nThis operation is idempotent.\nFor information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload).\nRequests\nTo stop a multipart upload, send an HTTP DELETE request to the URI of the multipart-uploads\nsubresource of the vault and identify the specific multipart upload ID as part of the URI.\nSyntax\nDELETE /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAbort Multipart Upload API Version 2012-06-01 435",
      "start_idx": 665357,
      "end_idx": 666736,
      "metadata": {
        "num_sentences": 9,
        "num_words": 196,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Reference",
              "HTTP Request",
              "Idempotency"
            ]
          },
          "keywords": [
            "Abort Multipart Upload",
            "multipart upload",
            "upload ID",
            "HTTP DELETE",
            "AWS account ID",
            "vault",
            "subresource",
            "x-amz-glacier-version",
            "idempotent",
            "multipart-uploads"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Abort Multipart Upload",
            "multipart-uploads",
            "upload ID",
            "AWS account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "AWS API",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to abort a multipart upload in Amazon S3 Glacier using an HTTP DELETE request, including syntax, behavior, and idempotency considerations.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I stop a multipart upload in Amazon S3 Glacier?",
            "What is the syntax for the Abort Multipart Upload API?",
            "What happens after aborting a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "upload ID",
          "idempotent",
          "Abort Multipart Upload",
          "subresource",
          "multipart upload",
          "vault",
          "multipart-uploads",
          "Amazon S3 Glacier",
          "HTTP DELETE",
          "x-amz-glacier-version",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_445",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExample\nExample Request\nIn the following example, a DELETE request is sent to the URI of a multipart upload ID resource.\nAbort Multipart Upload API Version 2012-06-01 436",
      "start_idx": 666738,
      "end_idx": 667821,
      "metadata": {
        "num_sentences": 12,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "Response Headers",
              "Syntax",
              "Errors",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "request headers",
            "response headers",
            "multipart upload",
            "API version",
            "DELETE request",
            "Request Parameters",
            "Error Responses",
            "Abort Multipart Upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "multipart upload ID",
            "Abort Multipart Upload API",
            "Error Responses"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier Abort Multipart Upload API, including headers, parameters, and responses.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What are the request headers used for the Abort Multipart Upload operation?",
            "What is the response syntax for the Abort Multipart Upload API?",
            "What errors can occur when using the Amazon S3 Glacier API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Abort Multipart Upload",
          "request headers",
          "Error Responses",
          "multipart upload",
          "API version",
          "response headers",
          "Amazon S3 Glacier",
          "Request Parameters",
          "DELETE request",
          "multipart upload ID",
          "AWS account ID",
          "Abort Multipart Upload API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_447",
      "text": "Amazon S3 Glacier Developer Guide\nAfter assembling and saving the archive to the vault, S3 Glacier returns the archive ID of the newly\ncreated archive resource. After you upload an archive, you should save the archive ID returned to\nretrieve the archive at a later point.\nIn the request, you must include the computed SHA256 tree hash of the entire archive you have\nuploaded. For information about computing a SHA256 tree hash, see Computing Checksums.\nOn the server side, S3 Glacier also constructs the SHA256 tree hash of the assembled archive. If\nthe values match, S3 Glacier saves the archive to the vault; otherwise, it returns an error, and the\noperation fails. The List Parts (GET uploadID) operation returns list of parts uploaded for a specific\nmultipart upload. It includes checksum information for each uploaded part that can be used to\ndebug a bad checksum issue.\nAdditionally, S3 Glacier also checks for any missing content ranges. When uploading parts, you\nspecify range values identifying where each part fits in the final assembly of the archive. When\nassembling the final archive S3 Glacier checks for any missing content ranges and if there are any\nmissing content ranges, S3 Glacier returns an error and the Complete Multipart Upload operation\nfails.\nComplete Multipart Upload is an idempotent operation. After your first successful complete\nmultipart upload, if you call the operation again within a short period, the operation will succeed\nand return the same archive ID. This is useful in the event you experience a network issue or receive\na 500 server error, in which case you can repeat your Complete Multipart Upload request and get\nthe same archive ID without creating duplicate archives. Note, however, that after the multipart\nupload completes, you cannot call the List Parts operation and the multipart upload will not\nappear in List Multipart Uploads response, even if idempotent complete is possible.\nRequests\nTo complete a multipart upload, you send an HTTP POST request to the URI of the upload ID that\nS3 Glacier created in response to your Initiate Multipart Upload request. This is the same URI you\nused when uploading parts. In addition to the common required headers, you must include the\nresult of the SHA256 tree hash of the entire archive and the total size of the archive in bytes.\nSyntax\nPOST /AccountId/vaults/VaultName/multipart-uploads/uploadID\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: SignatureValue\nx-amz-sha256-tree-hash: SHA256 tree hash of the archive\nComplete Multipart Upload API Version 2012-06-01 438",
      "start_idx": 669219,
      "end_idx": 671795,
      "metadata": {
        "num_sentences": 19,
        "num_words": 407,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Error Handling",
              "Checksum Validation"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive ID",
            "SHA256 tree hash",
            "multipart upload",
            "checksum",
            "content ranges",
            "Complete Multipart Upload",
            "List Parts",
            "HTTP POST request",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "archive ID",
            "SHA256 tree hash",
            "Complete Multipart Upload",
            "List Parts"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA256 tree hash computation"
          ]
        },
        "semantic": {
          "summary": "The documentation explains the process for completing a multipart upload in Amazon S3 Glacier, including checksum validation, error handling, and idempotent operations. It also provides the syntax for the HTTP POST request required to finalize the upload.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I complete a multipart upload in Amazon S3 Glacier?",
            "What is the role of SHA256 tree hash in S3 Glacier uploads?",
            "How can I handle errors during multipart upload assembly?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "multipart upload",
          "Complete Multipart Upload",
          "checksum",
          "List Parts",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "content ranges",
          "archive ID",
          "HTTP POST request",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_448",
      "text": "Amazon S3 Glacier Developer Guide\nx-amz-archive-size: ArchiveSize in bytes\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nx-amz-arc Yes\nThe total size, in bytes, of the entire archive. This value should\nhive-size\nbe the sum of all the sizes of the individual parts that you\nuploaded.\nType: String\nDefault: None\nConstraints: None\nx-amz-sha Yes\nThe SHA256 tree hash of the entire archive. It is the tree hash\n256-tree-\nof SHA256 tree hash of the individual parts. If the value you\nhash\nspecify in the request does not match the SHA256 tree hash\nof the final assembled archive as computed by S3 Glacier, S3\nGlacier returns an error and the request fails.\nComplete Multipart Upload API Version 2012-06-01 439",
      "start_idx": 671797,
      "end_idx": 673146,
      "metadata": {
        "num_sentences": 12,
        "num_words": 222,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-archive-size",
            "x-amz-glacier-version",
            "Request Headers",
            "SHA256 tree hash",
            "AccountId",
            "AWS account ID",
            "Multipart Upload",
            "Common Request Headers",
            "ArchiveSize"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "x-amz-archive-size",
            "x-amz-sha256-tree-hash",
            "Complete Multipart Upload"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on request headers and parameters for the Complete Multipart Upload API in Amazon S3 Glacier, including archive size and SHA256 tree hash validation.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the x-amz-archive-size header?",
            "How does Amazon S3 Glacier validate the SHA256 tree hash?",
            "What is the significance of the AccountId parameter?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Common Request Headers",
          "x-amz-archive-size",
          "x-amz-sha256-tree-hash",
          "Complete Multipart Upload",
          "Multipart Upload",
          "ArchiveSize",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "AccountId",
          "Request Headers",
          "x-amz-glacier-version",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_449",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nType: String\nDefault: None\nConstraints: None\nRequest Elements\nThis operation does not use request elements.\nResponses\nAmazon S3 Glacier (S3 Glacier) creates a SHA256 tree hash of the entire archive. If the value\nmatches the SHA256 tree hash of the entire archive you specified in the request, S3 Glacier adds\nthe archive to the vault. In response it returns the HTTP Location header with the URL path of\nthe newly added archive resource. If the archive size or SHA256 that you sent in the request does\nnot match, S3 Glacier will return an error and the upload remains in the incomplete state. It is\npossible to retry the Complete Multipart Upload operation later with correct values, at which point\nyou can successfully create an archive. If a multipart upload does not complete, then eventually S3\nGlacier will reclaim the upload ID.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-archive-id: ArchiveId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation\nComplete Multipart Upload API Version 2012-06-01 440",
      "start_idx": 673148,
      "end_idx": 674474,
      "metadata": {
        "num_sentences": 10,
        "num_words": 204,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "archive",
            "multipart upload",
            "HTTP Location header",
            "incomplete state",
            "error response",
            "upload ID",
            "Response Headers",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256 tree hash",
            "HTTP Location header",
            "x-amz-archive-id",
            "Complete Multipart Upload"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response behavior of the Complete Multipart Upload operation in Amazon S3 Glacier, including details about headers, error handling, and archive validation using SHA256 tree hashes.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What happens if the SHA256 tree hash does not match during a multipart upload?",
            "What headers are included in a successful Complete Multipart Upload response?",
            "How can I retry an incomplete multipart upload in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload ID",
          "Response Headers",
          "archive",
          "HTTP Location header",
          "x-amz-archive-id",
          "multipart upload",
          "Complete Multipart Upload",
          "error response",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "API Version 2012-06-01",
          "incomplete state"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_450",
      "text": "Amazon S3 Glacier Developer Guide\nName Description\nThe relative URI path of the newly created archive. This URL includes the\narchive ID that is generated by S3 Glacier.\nType: String\nx-amz-arc\nThe ID of the archive. This value is also included as part of the Location\nhive-id\nheader.\nType: String\nResponse Fields\nThis operation does not return a response body.\nExample\nExample Request\nIn this example, an HTTP POST request is sent to the URI that was returned by an Initiate Multipart\nUpload request. The request specifies both the SHA256 tree hash of the entire archive and the\ntotal archive size.\nPOST /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nz-amz-Date: 20170210T120000Z\nx-amz-sha256-tree-hash:1ffc0f54dd5fdd66b62da70d25edacd0\nx-amz-archive-size:8388608\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following example response shows that S3 Glacier successfully created an archive from the\nparts you uploaded. The response includes the archive ID with complete path.\nComplete Multipart Upload API Version 2012-06-01 441",
      "start_idx": 674476,
      "end_idx": 675881,
      "metadata": {
        "num_sentences": 10,
        "num_words": 154,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Example Request",
              "Example Response"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive ID",
            "SHA256 tree hash",
            "multipart upload",
            "HTTP POST",
            "x-amz-archive-size",
            "Location header",
            "AWS4-HMAC-SHA256",
            "vault",
            "API Version 2012-06-01"
          ],
          "entities": [
            "S3 Glacier",
            "archive ID",
            "vaults/examplevault",
            "AWS4-HMAC-SHA256 Credential",
            "glacier.us-west-2.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Security"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP API"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the process for completing multipart uploads in Amazon S3 Glacier, including example requests and responses with archive ID details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I complete a multipart upload in S3 Glacier?",
            "What is the format of the HTTP POST request for multipart uploads?",
            "What information is included in the response after creating an archive in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "AWS4-HMAC-SHA256 Credential",
          "x-amz-archive-size",
          "HTTP POST",
          "multipart upload",
          "vault",
          "glacier.us-west-2.amazonaws.com",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "Location header",
          "API Version 2012-06-01",
          "archive ID",
          "S3 Glacier",
          "vaults/examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_451",
      "text": "Amazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/archives/\nNkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nx-amz-archive-id: NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\nYou can now send HTTP requests to the URI of the newly added resource/archive. For example, you\ncan send a GET request to retrieve the archive.\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Multipart Upload (POST multipart-uploads)\nDescription\nThis operation initiates a multipart upload (see Uploading Large Archives in Parts (Multipart\nUpload)). Amazon S3 Glacier (S3 Glacier) creates a multipart upload resource and returns its ID in\nthe response. You use this Upload ID in subsequent multipart upload operations.\nWhen you initiate a multipart upload, you specify the part size in number of bytes. The part size\nmust be a mebibyte (MiB) (1024 kibibytes [KiB]) multiplied by a power of 2\u2014for example, 1048576\n(1 MiB), 2097152 (2 MiB), 4194304 (4 MiB), 8388608 (8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 gibibytes (GiB).\nInitiate Multipart Upload API Version 2012-06-01 442",
      "start_idx": 675883,
      "end_idx": 677632,
      "metadata": {
        "num_sentences": 9,
        "num_words": 219,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "HTTP Response Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Archive ID",
            "HTTP Request",
            "Upload ID",
            "Mebibyte",
            "API Version",
            "Multipart Operations",
            "Large Archives",
            "Identity and Access Management"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Archive ID",
            "Upload ID",
            "HTTP Response",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "File Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate and manage multipart uploads in Amazon S3 Glacier, including details on HTTP responses and archive handling.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What is the minimum and maximum part size for multipart uploads?",
            "How can I retrieve an archive using its URI?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP Request",
          "API Version",
          "Upload ID",
          "Large Archives",
          "Mebibyte",
          "Multipart Operations",
          "Multipart Upload",
          "HTTP Response",
          "Identity and Access Management",
          "Amazon S3 Glacier",
          "API Version 2012-06-01",
          "Archive ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_452",
      "text": "Amazon S3 Glacier Developer Guide\nEvery part you upload using this upload ID, except the last one, must have the same size. The last\none can be the same size or smaller. For example, suppose you want to upload a 16.2 MiB file. If\nyou initiate the multipart upload with a part size of 4 MiB, you will upload four parts of 4 MiB each\nand one part of 0.2 MiB.\nNote\nYou don't need to know the size of the archive when you start a multipart upload because\nS3 Glacier does not require you to specify the overall archive size.\nAfter you complete the multipart upload, S3 Glacier removes the multipart upload resource\nreferenced by the ID. S3 Glacier will also remove the multipart upload resource if you cancel the\nmultipart upload or it may be removed if there is no activity for a period of 24 hours. The ID may\nstill be available after 24 hours, but applications should not expect this behavior.\nRequests\nTo initiate a multipart upload, you send an HTTP POST request to the URI of the multipart-\nuploads subresource of the vault in which you want to save the archive. The request must include\nthe part size and can optionally include a description of the archive.\nSyntax\nPOST /AccountId/vaults/VaultName/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nx-amz-archive-description: ArchiveDescription\nx-amz-part-size: PartSize\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nInitiate Multipart Upload API Version 2012-06-01 443",
      "start_idx": 677634,
      "end_idx": 679434,
      "metadata": {
        "num_sentences": 14,
        "num_words": 299,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Example",
              "Reference"
            ]
          },
          "keywords": [
            "multipart upload",
            "S3 Glacier",
            "archive size",
            "part size",
            "HTTP POST request",
            "vault",
            "AccountId",
            "x-amz-glacier-version",
            "x-amz-part-size",
            "multipart-uploads subresource"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload",
            "AccountId",
            "VaultName",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "HTTP POST"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the multipart upload feature in Amazon S3 Glacier, detailing part size requirements, upload initiation, and resource management behavior.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What are the part size requirements for multipart uploads?",
            "What happens to multipart upload resources after completion or inactivity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart upload",
          "vault",
          "archive size",
          "x-amz-part-size",
          "x-amz-glacier-version",
          "VaultName",
          "part size",
          "Amazon S3 Glacier",
          "AccountId",
          "multipart-uploads subresource",
          "HTTP POST request",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_453",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nx-amz-part-size Yes\nThe size of each part except the last, in\nbytes. The last part can be smaller than this\npart size.\nType: String\nDefault: None\nConstraints: The part size must be a\nmebibyte (1024 KiB) multiplied by a power\nof 2\u2014for example, 1048576 (1 MiB),\n2097152 (2 MiB), 4194304 (4 MiB), 8388608\n(8 MiB), and so on. The minimum allowable\npart size is 1 MiB, and the maximum is 4 GiB\n(4096 MiB).\nx-amz-archive-desc No\nArchive description you are uploading in\nription\nparts. It can be a plain-language description\nor some unique identifier you choose to\nassign. When you retrieve a vault inventory\n(see Initiate Job (POST jobs) ), the inventory\nincludes this description for each of the\narchives it returns in response. Leading\nspaces in archive descriptions are removed.\nType: String\nInitiate Multipart Upload API Version 2012-06-01 444",
      "start_idx": 679436,
      "end_idx": 680624,
      "metadata": {
        "num_sentences": 12,
        "num_words": 190,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Request Headers",
              "Request Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-part-size",
            "x-amz-archive-desc",
            "multipart upload",
            "request headers",
            "part size constraints",
            "vault inventory",
            "archive description",
            "mebibyte",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-part-size",
            "x-amz-archive-desc",
            "Initiate Multipart Upload",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Multipart Upload"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides details on request headers and parameters for the Initiate Multipart Upload API, including constraints for part size and optional archive descriptions.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the constraints for the x-amz-part-size header?",
            "Is the x-amz-archive-desc header required for multipart uploads?",
            "What is the minimum and maximum part size for multipart uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive description",
          "request headers",
          "multipart upload",
          "x-amz-part-size",
          "vault inventory",
          "Initiate Multipart Upload",
          "Amazon S3 Glacier",
          "part size constraints",
          "API Version 2012-06-01",
          "mebibyte",
          "x-amz-archive-desc"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_454",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: The description must be less\nthan or equal to 1024 bytes. The allowable\ncharacters are 7 bit ASCII without control\ncodes, specifically ASCII values 32-126\ndecimal or 0x20-0x7E hexadecimal.\nRequest Body\nThis operation does not have a request body.\nResponses\nIn the response, S3 Glacier creates a multipart upload resource identified by an ID and returns the\nrelative URI path of the multipart upload ID.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nx-amz-multipart-upload-id: multiPartUploadId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nLocation\nThe relative URI path of the multipart upload ID S3 Glacier created. You use\nthis URI path to scope your requests to upload parts, and to complete the\nmultipart upload.\nInitiate Multipart Upload API Version 2012-06-01 445",
      "start_idx": 680626,
      "end_idx": 681733,
      "metadata": {
        "num_sentences": 9,
        "num_words": 161,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "URI path",
            "response headers",
            "ASCII constraints",
            "HTTP/1.1",
            "RequestId",
            "Location header",
            "API version",
            "upload ID"
          ],
          "entities": [
            "S3 Glacier",
            "multipart upload resource",
            "x-amzn-RequestId",
            "x-amz-multipart-upload-id",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "HTTP Protocols",
            "Data Upload Methods"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains the initiation of a multipart upload in Amazon S3 Glacier, detailing the constraints, response structure, and headers returned by the API.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the constraints for the description field in S3 Glacier?",
            "What headers are included in the response of a multipart upload initiation?",
            "How does S3 Glacier handle multipart upload resource creation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "RequestId",
          "upload ID",
          "x-amz-multipart-upload-id",
          "multipart upload resource",
          "multipart upload",
          "API version",
          "response headers",
          "Amazon S3 Glacier",
          "S3 Glacier",
          "Location header",
          "URI path",
          "ASCII constraints",
          "HTTP/1.1",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_455",
      "text": "Amazon S3 Glacier Developer Guide\nName Description\nType: String\nx-amz-mul\nThe ID of the multipart upload. This value is also included as part of the\ntipart-up\nLocation header.\nload-id\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExample\nExample Request\nThe following example initiates a multipart upload by sending an HTTP POST request to the URI\nof the multipart-uploads subresource of a vault named examplevault. The request includes\nheaders to specify the part size of 4 MiB (4194304 bytes) and the optional archive description.\nPOST /-/vaults/examplevault/multipart-uploads\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-archive-description: MyArchive-101\nx-amz-part-size: 4194304\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nS3 Glacier creates a multipart upload resource and adds it to the multipart-uploads\nsubresource of the vault. The Location response header includes the relative URI path to the\nmultipart upload ID.\nInitiate Multipart Upload API Version 2012-06-01 446",
      "start_idx": 681735,
      "end_idx": 683109,
      "metadata": {
        "num_sentences": 9,
        "num_words": 159,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "vault",
            "archive description",
            "HTTP POST",
            "Location header",
            "response body",
            "error messages",
            "part size",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart-uploads subresource",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "Location response header"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to initiate a multipart upload in Amazon S3 Glacier, including request headers, example code, and response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I initiate a multipart upload in Amazon S3 Glacier?",
            "What headers are required for a multipart upload request?",
            "What is included in the response for initiating a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "AWS4-HMAC-SHA256",
          "error messages",
          "archive description",
          "response body",
          "Location response header",
          "multipart upload",
          "HTTP POST",
          "vault",
          "part size",
          "Amazon S3 Glacier",
          "Location header",
          "multipart-uploads subresource",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_456",
      "text": "Amazon S3 Glacier Developer Guide\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nx-amz-multipart-upload-id:\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\nFor information about uploading individual parts, see Upload Part (PUT uploadID).\nRelated Sections\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Delete Archive (DELETE archive)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Parts (GET uploadID)\nDescription\nThis multipart upload operation lists the parts of an archive that have been uploaded in a\nspecific multipart upload identified by an upload ID. For information about multipart upload, see\nUploading Large Archives in Parts (Multipart Upload).\nYou can make this request at any time during an in-progress multipart upload before you complete\nthe multipart upload. S3 Glacier returns the part list sorted by range you specified in each part\nupload. If you send a List Parts request after completing the multipart upload, Amazon S3 Glacier\n(S3 Glacier) returns an error.\nList Parts API Version 2012-06-01 447",
      "start_idx": 683111,
      "end_idx": 684624,
      "metadata": {
        "num_sentences": 7,
        "num_words": 189,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Error Handling",
              "Workflow Explanation"
            ]
          },
          "keywords": [
            "multipart upload",
            "Amazon S3 Glacier",
            "upload ID",
            "List Parts",
            "archive",
            "HTTP/1.1",
            "x-amz-multipart-upload-id",
            "identity and access management",
            "range",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "multipart upload",
            "upload ID",
            "List Parts API",
            "HTTP/1.1"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "File Upload Management",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the 'List Parts' operation in Amazon S3 Glacier, detailing how to retrieve a list of uploaded parts during a multipart upload using an upload ID.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list the parts of an archive uploaded in a multipart upload?",
            "What happens if I send a List Parts request after completing a multipart upload?",
            "What is the API version for the List Parts operation in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "upload ID",
          "x-amz-multipart-upload-id",
          "archive",
          "multipart upload",
          "range",
          "identity and access management",
          "List Parts",
          "Amazon S3 Glacier",
          "List Parts API",
          "API version 2012-06-01",
          "HTTP/1.1"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_457",
      "text": "Amazon S3 Glacier Developer Guide\nThe List Parts operation supports pagination. You should always check the Marker field in\nthe response body for a marker at which to continue the list. if there are no more items the\nmarker field is null. If the marker is not null, to fetch the next set of parts you sent another List\nParts request with the marker request parameter set to the marker value S3 Glacier returned in\nresponse to your previous List Parts request.\nYou can also limit the number of parts returned in the response by specifying the limit parameter\nin the request.\nRequests\nSyntax\nTo list the parts of an in-progress multipart upload, you send a GET request to the URI of the\nmultipart upload ID resource. The multipart upload ID is returned when you initiate a multipart\nupload (Initiate Multipart Upload (POST multipart-uploads)). You may optionally specify marker\nand limit parameters.\nGET /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nName Description Required\nlimit No\nThe maximum number of parts to be returned. The default\nlimit is 50. The number of parts returned might be fewer than\nList Parts API Version 2012-06-01 448",
      "start_idx": 684626,
      "end_idx": 686256,
      "metadata": {
        "num_sentences": 14,
        "num_words": 263,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Pagination",
              "Request Syntax"
            ]
          },
          "keywords": [
            "List Parts",
            "pagination",
            "marker",
            "limit parameter",
            "multipart upload",
            "GET request",
            "AccountId",
            "vaults",
            "x-amz-glacier-version",
            "Amazon S3 Glacier"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Parts operation",
            "multipart upload ID",
            "AccountId",
            "AWS account ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "AWS Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The documentation explains the List Parts operation in Amazon S3 Glacier, detailing its support for pagination, request syntax, and parameters like marker and limit for fetching multipart upload parts.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I use the List Parts operation in Amazon S3 Glacier?",
            "What does the marker field indicate in the List Parts response?",
            "How can I limit the number of parts returned in a List Parts request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "marker",
          "multipart upload",
          "vaults",
          "List Parts operation",
          "List Parts",
          "pagination",
          "AccountId",
          "limit parameter",
          "Amazon S3 Glacier",
          "multipart upload ID",
          "x-amz-glacier-version",
          "GET request",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_458",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nthe specified limit, but the number of returned parts never\nexceeds the limit.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies\nthe part at which the listing of parts should begin. Get the\nmarker value from the response of a previous List Parts\nresponse. You need only include the marker if you are\ncontinuing the pagination of results started in a previous List\nParts request.\nType: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Parts API Version 2012-06-01 449",
      "start_idx": 686258,
      "end_idx": 687224,
      "metadata": {
        "num_sentences": 10,
        "num_words": 146,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameters",
              "Response Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "pagination",
            "marker",
            "List Parts",
            "request headers",
            "response headers",
            "constraints",
            "HTTP/1.1",
            "Content-Type",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Parts API",
            "HTTP/1.1",
            "x-amzn-RequestId",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Services",
            "API Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the List Parts API for Amazon S3 Glacier, including its parameters, constraints, request headers, and response syntax.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the parameters for the List Parts API in Amazon S3 Glacier?",
            "How does pagination work in the List Parts API?",
            "What response headers are included in the List Parts API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "API Version",
          "marker",
          "request headers",
          "Content-Type",
          "constraints",
          "response headers",
          "List Parts",
          "Amazon S3 Glacier",
          "pagination",
          "List Parts API",
          "API Version 2012-06-01",
          "HTTP/1.1",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_459",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : String,\n\"CreationDate\" : String,\n\"Marker\": String,\n\"MultipartUploadId\" : String,\n\"PartSizeInBytes\" : Number,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : String,\n\"SHA256TreeHash\" : String\n},\n...\n],\n\"VaultARN\" : String\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation.\nType: String\nCreationDate\nThe UTC time that the multipart upload was initiated.\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Parts request to obtain more jobs in the list. If there are no more parts,\nthis value is null.\nList Parts API Version 2012-06-01 450",
      "start_idx": 687226,
      "end_idx": 688378,
      "metadata": {
        "num_sentences": 12,
        "num_words": 174,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Response Fields",
              "API Documentation",
              "JSON Structure"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "VaultARN",
            "ISO 8601",
            "SHA256TreeHash",
            "ArchiveDescription",
            "CreationDate",
            "Marker",
            "Pagination",
            "List Parts"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "VaultARN",
            "SHA256TreeHash",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Management",
            "Cloud Computing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the JSON structure and response fields for the Amazon S3 Glacier API's multipart upload operation, including metadata such as archive descriptions, creation dates, and pagination markers.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What JSON fields are included in the response body of a multipart upload operation?",
            "How is the creation date formatted in the Amazon S3 Glacier API?",
            "What is the purpose of the Marker field in pagination?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "CreationDate",
          "ISO 8601",
          "SHA256TreeHash",
          "ArchiveDescription",
          "Multipart Upload",
          "VaultARN",
          "Amazon S3 Glacier",
          "List Parts",
          "Pagination",
          "MultipartUploadId",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_460",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nMultipartUploadId\nThe ID of the upload to which the parts are associated.\nType: String\nPartSizeInBytes\nThe part size in bytes. This is the same value that you specified in the Initiate Multipart Upload\nrequest.\nType: Number\nParts\nA list of the part sizes of the multipart upload. Each object in the array contains a RangeBytes\nand sha256-tree-hash name/value pair.\nType: Array\nRangeInBytes\nThe byte range of a part, inclusive of the upper value of the range.\nType: String\nSHA256TreeHash\nThe SHA256 tree hash value that S3 Glacier calculated for the part. This field is never null.\nType: String\nVaultARN\nThe Amazon Resource Name (ARN) of the vault to which the multipart upload was initiated.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nList Parts API Version 2012-06-01 451",
      "start_idx": 688380,
      "end_idx": 689268,
      "metadata": {
        "num_sentences": 11,
        "num_words": 143,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "MultipartUploadId",
            "PartSizeInBytes",
            "Parts",
            "RangeInBytes",
            "SHA256TreeHash",
            "VaultARN",
            "Amazon S3 Glacier",
            "Error Responses",
            "API Version",
            "Byte Range"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "SHA256TreeHash",
            "MultipartUploadId",
            "PartSizeInBytes"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Design"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides detailed reference information about multipart uploads in Amazon S3 Glacier, including field descriptions and error handling guidance.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the MultipartUploadId in Amazon S3 Glacier?",
            "How is the SHA256 tree hash calculated for parts?",
            "What are the error responses for multipart uploads in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Byte Range",
          "API Version",
          "SHA256TreeHash",
          "PartSizeInBytes",
          "Error Responses",
          "VaultARN",
          "Amazon S3 Glacier",
          "MultipartUploadId",
          "RangeInBytes",
          "Parts"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_461",
      "text": "Amazon S3 Glacier Developer Guide\nExamples\nExample: List Parts of a Multipart Upload\nThe following example lists all the parts of an upload. The example sends an HTTP GET request to\nthe URI of the specific multipart upload ID of an in-progress multipart upload and returns up to\n1,000 parts.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts associated with the specified multipart\nupload ID. In this example, there are only two parts. The returned Marker field is null indicating\nthat there are no more parts of the multipart upload.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 412\n{\n\"ArchiveDescription\" : \"archive description\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": null,\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\nList Parts API Version 2012-06-01 452",
      "start_idx": 689270,
      "end_idx": 690809,
      "metadata": {
        "num_sentences": 6,
        "num_words": 156,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "HTTP Request",
              "HTTP Response",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "HTTP GET request",
            "URI",
            "upload ID",
            "Authorization",
            "x-amz-glacier-version",
            "Content-Length",
            "Marker",
            "PartSizeInBytes"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "x-amz-glacier-version",
            "AWS4-HMAC-SHA256",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of listing parts of a multipart upload in Amazon S3 Glacier using an HTTP GET request and includes a sample request and response.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list parts of a multipart upload in Amazon S3 Glacier?",
            "What is the structure of an HTTP GET request for listing multipart upload parts?",
            "What fields are included in the response of a multipart upload listing?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "upload ID",
          "Authorization",
          "AWS4-HMAC-SHA256",
          "PartSizeInBytes",
          "multipart upload",
          "x-amzn-RequestId",
          "URI",
          "Content-Length",
          "Amazon S3 Glacier",
          "MultipartUploadId",
          "x-amz-glacier-version",
          "Marker",
          "HTTP GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_462",
      "text": "Amazon S3 Glacier Developer Guide\n\"RangeInBytes\" : \"0-4194303\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n},\n{\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"0195875365afda349fc21c84c099987164\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nExample: List Parts of a Multipart Upload (Specify the Marker and the Limit Request\nParameters)\nThe following example demonstrates how to use pagination to get a limited number of results.\nThe example sends an HTTP GET request to the URI of the specific multipart upload ID of an in-\nprogress multipart upload to return one part. A starting marker parameter specifies at which part\nto start the part list. You can get the marker value from the response of a previous request for a\npart list. Furthermore, in this example, the limit parameter is set to 1 and returns one part. Note\nthat the Marker field is not null, indicating that there is at least one more part to obtain.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE?marker=1001&limit=1 HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, S3 Glacier returns a list of uploaded parts that are associated with the specified in-\nprogress multipart upload ID.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: text/json\nContent-Length: 412\nList Parts API Version 2012-06-01 453",
      "start_idx": 690811,
      "end_idx": 692651,
      "metadata": {
        "num_sentences": 8,
        "num_words": 208,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "HTTP Request",
              "API Response",
              "Multipart Upload",
              "Pagination"
            ]
          },
          "keywords": [
            "RangeInBytes",
            "SHA256TreeHash",
            "VaultARN",
            "multipart upload",
            "Marker",
            "limit parameter",
            "pagination",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "List Parts"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "multipart upload ID",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to use the Amazon S3 Glacier API to list parts of an in-progress multipart upload with pagination, using marker and limit parameters. It includes example HTTP requests and responses for reference.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list parts of a multipart upload in Amazon S3 Glacier?",
            "What is the purpose of the marker and limit parameters in the List Parts API?",
            "Can I see an example HTTP request for listing multipart upload parts?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage API]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "SHA256TreeHash",
          "multipart upload",
          "x-amz-glacier-version",
          "VaultARN",
          "List Parts",
          "pagination",
          "Amazon S3 Glacier",
          "limit parameter",
          "multipart upload ID",
          "RangeInBytes",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_463",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"ArchiveDescription\" : \"archive description 1\",\n\"CreationDate\" : \"2012-03-20T17:03:43.221Z\",\n\"Marker\": \"MfgsKHVjbQ6EldVl72bn3_n5h2TaGZQUO-Qb3B9j3TITf7WajQ\",\n\"MultipartUploadId\" :\n\"OW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE\",\n\"PartSizeInBytes\" : 4194304,\n\"Parts\" :\n[ {\n\"RangeInBytes\" : \"4194304-8388607\",\n\"SHA256TreeHash\" : \"01d34dabf7be316472c93b1ef80721f5d4\"\n}],\n\"VaultARN\" : \"arn:aws:glacier:us-west-2:012345678901:vaults/demo1-vault\"\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Multipart Uploads (GET multipart-uploads)\nDescription\nThis multipart upload operation lists in-progress multipart uploads for the specified vault. An in-\nprogress multipart upload is a multipart upload that has been initiated by an Initiate Multipart\nUpload (POST multipart-uploads) request, but has not yet been completed or stopped. The list\nreturned in the List Multipart Upload response has no guaranteed order.\nThe List Multipart Uploads operation supports pagination. By default, this operation returns up to\n50 multipart uploads in the response. You should always check the marker field in the response\nList Multipart Uploads API Version 2012-06-01 454",
      "start_idx": 692653,
      "end_idx": 694188,
      "metadata": {
        "num_sentences": 6,
        "num_words": 183,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Operation Details",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "VaultARN",
            "Marker",
            "PartSizeInBytes",
            "SHA256TreeHash",
            "Initiate Multipart Upload",
            "List Multipart Uploads",
            "Pagination",
            "Identity and Access Management"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "Marker",
            "SHA256TreeHash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the List Multipart Uploads operation in Amazon S3 Glacier, including its functionality, pagination support, and related multipart upload operations.",
          "intents": [
            "Reference",
            "How-To",
            "Debug"
          ],
          "potential_questions": [
            "How can I list in-progress multipart uploads in Amazon S3 Glacier?",
            "What is the default pagination limit for List Multipart Uploads?",
            "What fields are included in the List Multipart Uploads response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SHA256TreeHash",
          "PartSizeInBytes",
          "Multipart Upload",
          "VaultARN",
          "Identity and Access Management",
          "Initiate Multipart Upload",
          "Amazon S3 Glacier",
          "List Multipart Uploads",
          "Pagination",
          "MultipartUploadId",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_464",
      "text": "Amazon S3 Glacier Developer Guide\nbody for a marker at which to continue the list; if there are no more items the marker field is\nnull.\nIf the marker is not null, to fetch the next set of multipart uploads you sent another List Multipart\nUploads request with the marker request parameter set to the marker value Amazon S3 Glacier\n(S3 Glacier) returned in response to your previous List Multipart Uploads request.\nNote the difference between this operation and the List Parts (GET uploadID)) operation. The List\nMultipart Uploads operation lists all multipart uploads for a vault. The List Parts operation returns\nparts of a specific multipart upload identified by an Upload ID.\nFor information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload).\nRequests\nSyntax\nTo list multipart uploads, send a GET request to the URI of the multipart-uploads subresource\nof the vault. You may optionally specify marker and limit parameters.\nGET /AccountId/vaults/VaultName/multipart-uploads HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nName Description Required\nlimit No\nList Multipart Uploads API Version 2012-06-01 455",
      "start_idx": 694190,
      "end_idx": 695763,
      "metadata": {
        "num_sentences": 12,
        "num_words": 244,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Syntax",
              "Parameter Details"
            ]
          },
          "keywords": [
            "multipart uploads",
            "List Multipart Uploads",
            "List Parts",
            "Upload ID",
            "vault",
            "AWS account ID",
            "marker",
            "limit",
            "subresource",
            "x-amz-glacier-version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "multipart-uploads subresource",
            "Upload ID",
            "vault"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "REST API"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the 'List Multipart Uploads' operation in Amazon S3 Glacier, detailing how to retrieve active multipart uploads for a vault using a GET request with optional parameters like marker and limit.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I list multipart uploads in Amazon S3 Glacier?",
            "What is the difference between List Multipart Uploads and List Parts operations?",
            "What parameters can be used in a List Multipart Uploads request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart uploads",
          "Upload ID",
          "marker",
          "subresource",
          "vault",
          "List Parts",
          "List Multipart Uploads",
          "limit",
          "Amazon S3 Glacier",
          "multipart-uploads subresource",
          "x-amz-glacier-version",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_465",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nSpecifies the maximum number of uploads returned in the\nresponse body. If not specified, the List Uploads operation\nreturns up to 50 uploads.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 5 0.\nmarker No\nAn opaque string used for pagination. marker specifies the\nupload at which the listing of uploads should begin. Get\nthe marker value from a previous List Uploads response.\nYou need only include the marker if you are continuing\nthe pagination of results started in a previous List Uploads\nrequest.\nType: String\nConstraints: None\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\nList Multipart Uploads API Version 2012-06-01 456",
      "start_idx": 695765,
      "end_idx": 696798,
      "metadata": {
        "num_sentences": 11,
        "num_words": 154,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "List Uploads",
            "pagination",
            "marker",
            "response headers",
            "request body",
            "constraints",
            "maximum uploads",
            "multipart uploads",
            "API version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Uploads operation",
            "marker",
            "HTTP/1.1 200 OK",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Management",
            "Data Transfer"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the List Uploads operation in Amazon S3 Glacier, including parameters, constraints, headers, and response syntax.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the maximum number of uploads returned by the List Uploads operation?",
            "How is the marker parameter used for pagination in List Uploads?",
            "What is the response syntax for the List Multipart Uploads API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart uploads",
          "List Uploads operation",
          "HTTP/1.1 200 OK",
          "List Uploads",
          "marker",
          "constraints",
          "response headers",
          "Amazon S3 Glacier",
          "pagination",
          "API version",
          "maximum uploads",
          "API Version 2012-06-01",
          "request body"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_466",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"Marker\": String,\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"MultipartUploadId\": String,\n\"PartSizeInBytes\": Number,\n\"VaultARN\": String\n},\n...\n]\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nArchiveDescription\nThe description of the archive that was specified in the Initiate Multipart Upload request. This\nfield is null if no archive description was specified in the Initiate Multipart Upload operation.\nType: String\nCreationDate\nThe UTC time that the multipart upload was initiated.\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker in a new List Multipart Uploads request to obtain more uploads in the list. If there are\nno more uploads, this value is null.\nList Multipart Uploads API Version 2012-06-01 457",
      "start_idx": 696800,
      "end_idx": 697930,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Structure"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "ArchiveDescription",
            "CreationDate",
            "VaultARN",
            "Marker",
            "Response Headers",
            "Response Body",
            "ISO 8601",
            "Pagination"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "MultipartUploadId",
            "VaultARN",
            "Marker",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the JSON response structure for the List Multipart Uploads API in Amazon S3 Glacier, including fields like ArchiveDescription, CreationDate, and Marker for pagination.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the format of the CreationDate field in the List Multipart Uploads API?",
            "How is the Marker used for pagination in Amazon S3 Glacier?",
            "What information is included in the UploadsList array?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "ISO 8601",
          "Response Headers",
          "ArchiveDescription",
          "Multipart Upload",
          "VaultARN",
          "Amazon S3 Glacier",
          "Response Body",
          "Pagination",
          "MultipartUploadId",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_467",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nPartSizeInBytes\nThe part size specified in the Initiate Multipart Upload (POST multipart-uploads) request. This is\nthe size of all the parts in the upload except the last part, which may be smaller than this size.\nType: Number\nMultipartUploadId\nThe ID of the multipart upload.\nType: String\nUploadsList\nA list of metadata about multipart upload objects. Each item in the list contains a set of name-\nvalue pairs for the corresponding upload, including ArchiveDescription, CreationDate,\nMultipartUploadId, PartSizeInBytes, and VaultARN.\nType: Array\nVaultARN\nThe Amazon Resource Name (ARN) of the vault that contains the archive.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nExample: List All Multipart Uploads\nThe following example lists all the multipart uploads in progress for the vault. The example shows\nan HTTP GET request to the URI of the multipart-uploads subresource of a specified vault.\nBecause the marker and limit parameters are not specified in the request, up to 1,000 in-\nprogress multipart uploads are returned.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads HTTP/1.1\nList Multipart Uploads API Version 2012-06-01 458",
      "start_idx": 697932,
      "end_idx": 699202,
      "metadata": {
        "num_sentences": 11,
        "num_words": 186,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Description",
              "Example Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "VaultARN",
            "PartSizeInBytes",
            "MultipartUploadId",
            "UploadsList",
            "ArchiveDescription",
            "Error Responses",
            "HTTP GET",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "UploadsList",
            "ArchiveDescription"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the parameters and usage of the Amazon S3 Glacier multipart upload API, including examples of listing uploads and error handling.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the purpose of the PartSizeInBytes parameter?",
            "How can I list all multipart uploads in progress for a vault?",
            "What metadata is included in the UploadsList object?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP GET",
          "PartSizeInBytes",
          "ArchiveDescription",
          "Error Responses",
          "UploadsList",
          "Multipart Upload",
          "VaultARN",
          "Amazon S3 Glacier",
          "MultipartUploadId",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_469",
      "text": "Amazon S3 Glacier Developer Guide\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nExample: Partial List of Multipart Uploads\nThe following example demonstrates how to use pagination to get a limited number of results. The\nexample shows an HTTP GET request to the URI of the multipart-uploads subresource for a\nspecified vault. In this example, the limit parameter is set to 1, which means that only one upload\nis returned in the list, and the marker parameter indicates the multipart upload ID at which the\nreturned list begins.\nExample Request\nGET /-/vaults/examplevault/multipart-uploads?\nlimit=1&marker=xsQdFIRsfJr20CW2AbZBKpRZAFTZSJIMtL2hYf8mvp8dM0m4RUzlaqoEye6g3h3ecqB_zqwB7zLDMeSWhwo65re4C4Ev\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIn the response, Amazon S3 Glacier (S3 Glacier) returns a list of no more than two in-progress\nmultipart uploads for the specified vault, starting at the specified marker and returning two results.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 470\n{\n\"Marker\": \"qt-RBst_7yO8gVIonIBsAxr2t-db0pE4s8MNeGjKjGdNpuU-\ncdSAcqG62guwV9r5jh5mLyFPzFEitTpNE7iQfHiu1XoV\",\n\"UploadsList\" : [\n{\n\"ArchiveDescription\": \"archive 2\",\nList Multipart Uploads API Version 2012-06-01 460",
      "start_idx": 700863,
      "end_idx": 702533,
      "metadata": {
        "num_sentences": 6,
        "num_words": 170,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "HTTP Request",
              "HTTP Response",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "multipart uploads",
            "pagination",
            "HTTP GET request",
            "limit parameter",
            "marker parameter",
            "AWS4-HMAC-SHA256",
            "Authorization header",
            "API version"
          ],
          "entities": [
            "VaultARN",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "S3 Glacier",
            "multipart upload ID"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP Protocol"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using pagination with the multipart-uploads subresource in Amazon S3 Glacier, including an HTTP GET request and response structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use pagination with Amazon S3 Glacier multipart uploads?",
            "What does the limit parameter do in a multipart upload request?",
            "How is the marker parameter used in Amazon S3 Glacier pagination?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "multipart uploads",
          "AWS4-HMAC-SHA256",
          "marker parameter",
          "Authorization header",
          "VaultARN",
          "API version",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "pagination",
          "limit parameter",
          "multipart upload ID",
          "examplevault",
          "HTTP GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_470",
      "text": "Amazon S3 Glacier Developer Guide\n\"CreationDate\": \"2012-04-01T15:00:00.000Z\",\n\"MultipartUploadId\": \"nPyGOnyFcx67qqX7E-0tSGiRi88hHMOwOxR-\n_jNyM6RjVMFfV29lFqZ3rNsSaWBugg6OP92pRtufeHdQH7ClIpSF6uJc\",\n\"PartSizeInBytes\": 4194304,\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\n]\n}\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nUpload Part (PUT uploadID)\nDescription\nThis multipart upload operation uploads a part of an archive. You can upload archive parts in any\norder because in your Upload Part request you specify the range of bytes in the assembled archive\nthat will be uploaded in this part. You can also upload these parts in parallel. You can upload up to\n10,000 parts for a multipart upload.\nFor information about multipart upload, see Uploading Large Archives in Parts (Multipart Upload).\nAmazon S3 Glacier (S3 Glacier) rejects your upload part request if any of the following conditions is\ntrue:\n\u2022 SHA256 tree hash does not match\u2014To ensure that part data is not corrupted in transmission,\nyou compute a SHA256 tree hash of the part and include it in your request. Upon receiving the\npart data, S3 Glacier also computes a SHA256 tree hash. If the two hash values don't match,\nUpload Part API Version 2012-06-01 461",
      "start_idx": 702535,
      "end_idx": 704059,
      "metadata": {
        "num_sentences": 8,
        "num_words": 217,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Multipart Upload",
              "API Operation",
              "Error Handling"
            ]
          },
          "keywords": [
            "Multipart Upload",
            "Upload Part",
            "SHA256 tree hash",
            "archive",
            "Amazon S3 Glacier",
            "VaultARN",
            "range of bytes",
            "parallel upload",
            "multipart-uploads",
            "abort upload"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "MultipartUploadId",
            "SHA256 tree hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Transfer",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the process of uploading parts of an archive using the Multipart Upload API in Amazon S3 Glacier, including error handling and validation through SHA256 tree hashes.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I upload a part of an archive in Amazon S3 Glacier?",
            "What is the role of SHA256 tree hash in multipart uploads?",
            "What are the conditions under which a multipart upload part is rejected?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "abort upload",
          "archive",
          "multipart-uploads",
          "Multipart Upload",
          "VaultARN",
          "Upload Part",
          "SHA256 tree hash",
          "Amazon S3 Glacier",
          "range of bytes",
          "parallel upload",
          "MultipartUploadId",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_471",
      "text": "Amazon S3 Glacier Developer Guide\nthe operation fails. For information about computing a SHA256 tree hash, see Computing\nChecksums.\n\u2022 SHA256 linear hash does not match\u2014Required for authorization, you compute a SHA256\nlinear hash of the entire uploaded payload and include it in your request. For information about\ncomputing a SHA256 linear hash, see Computing Checksums.\n\u2022 Part size does not match\u2014The size of each part except the last must match the size that is\nspecified in the corresponding Initiate Multipart Upload (POST multipart-uploads) request. The\nsize of the last part must be the same size as, or smaller than, the specified size.\nNote\nIf you upload a part whose size is smaller than the part size you specified in your initiate\nmultipart upload request and that part is not the last part, then the upload part request\nwill succeed. However, the subsequent Complete Multipart Upload request will fail.\n\u2022 Range does not align\u2014The byte range value in the request does not align with the part size\nspecified in the corresponding initiate request. For example, if you specify a part size of 4194304\nbytes (4 MB), then 0 to 4194303 bytes (4 MB \u20141) and 4194304 (4 MB) to 8388607 (8 MB \u20141)\nare valid part ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align\nwith the part size and the upload will fail.\nThis operation is idempotent. If you upload the same part multiple times, the data included in the\nmost recent request overwrites the previously uploaded data.\nRequests\nYou send this HTTP PUT request to the URI of the upload ID that was returned by your Initiate\nMultipart Upload request. S3 Glacier uses the upload ID to associate part uploads with a specific\nmultipart upload. The request must include a SHA256 tree hash of the part data (x-amz-SHA256-\ntree-hash header), a SHA256 linear hash of the entire payload (x-amz-content-sha256\nheader), the byte range (Content-Range header), and the length of the part in bytes (Content-\nLength header).\nSyntax\nPUT /AccountId/vaults/VaultName/multipart-uploads/uploadID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nUpload Part API Version 2012-06-01 462",
      "start_idx": 704061,
      "end_idx": 706209,
      "metadata": {
        "num_sentences": 17,
        "num_words": 352,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Error Handling",
              "API Request Syntax"
            ]
          },
          "keywords": [
            "SHA256 tree hash",
            "SHA256 linear hash",
            "multipart upload",
            "byte range",
            "Content-Range header",
            "Content-Length header",
            "Initiate Multipart Upload",
            "Complete Multipart Upload",
            "idempotent",
            "x-amz-content-sha256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP PUT request",
            "Initiate Multipart Upload",
            "Complete Multipart Upload",
            "Upload Part API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Error Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the requirements and error conditions for performing a multipart upload in Amazon S3 Glacier, including hash computations, part size constraints, and byte range alignment.",
          "intents": [
            "How-To",
            "Debug",
            "Reference"
          ],
          "potential_questions": [
            "How do I compute a SHA256 tree hash for S3 Glacier multipart uploads?",
            "What are the valid byte ranges for multipart upload parts in S3 Glacier?",
            "What happens if the part size does not match the specified size in a multipart upload?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SHA256 linear hash",
          "byte range",
          "idempotent",
          "HTTP PUT request",
          "multipart upload",
          "Content-Range header",
          "Complete Multipart Upload",
          "Initiate Multipart Upload",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "Upload Part API",
          "x-amz-content-sha256",
          "Content-Length header"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_472",
      "text": "Amazon S3 Glacier Developer Guide\nAuthorization: SignatureValue\nContent-Range: ContentRange\nContent-Length: PayloadSize\nContent-Type: application/octet-stream\nx-amz-sha256-tree-hash: Checksum of the part\nx-amz-content-sha256: Checksum of the entire payload\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nContent-Length No\nIdentifies the length of the part in bytes.\nType: String\nDefault: None\nConstraints: None\nContent-Range Yes\nIdentifies the range of bytes in the assembled\narchive that will be uploaded in this part. S3\nUpload Part API Version 2012-06-01 463",
      "start_idx": 706211,
      "end_idx": 707417,
      "metadata": {
        "num_sentences": 9,
        "num_words": 177,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Authorization",
            "Content-Range",
            "Content-Length",
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "x-amz-glacier-version",
            "AWS account ID",
            "Request Headers",
            "PayloadSize"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "x-amz-sha256-tree-hash",
            "x-amz-content-sha256",
            "Content-Range"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about Amazon S3 Glacier's API headers, including required and optional fields, checksum calculations, and account ID usage in requests.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What headers are required for an Amazon S3 Glacier API request?",
            "How is the AWS account ID specified in a request?",
            "What is the purpose of the x-amz-sha256-tree-hash header?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "Request Headers",
          "Content-Length",
          "Content-Range",
          "x-amz-glacier-version",
          "Amazon S3 Glacier",
          "PayloadSize",
          "x-amz-content-sha256",
          "x-amz-sha256-tree-hash",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_473",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nGlacier uses this information to assemble the\narchive in the proper sequence. The format of this\nheader follows RFC 2616. An example header is\nContent-Range:bytes 0-4194303/* .\nType: String\nDefault: None\nConstraints: The range cannot be greater than the\npart size that you specified when you initiated the\nmultipart upload.\nx-amz-content- Yes\nThe SHA256 checksum (a linear hash) of the\nsha256\nuploaded payload. This is not the same value as\nyou specify in the x-amz-sha256-tree-hash\nheader.\nType: String\nDefault: None\nConstraints: None\nx-amz-sha256- Yes\nSpecifies a SHA256 tree hash of the data being\ntree-hash\nuploaded. For information about computing a\nSHA256 tree hash, see Computing Checksums.\nType: String\nDefault: None\nConstraints: None\nRequest Body\nThe request body contains the data to upload.\nUpload Part API Version 2012-06-01 464",
      "start_idx": 707419,
      "end_idx": 708319,
      "metadata": {
        "num_sentences": 10,
        "num_words": 136,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Header Description",
              "Constraints",
              "Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "RFC 2616",
            "Content-Range",
            "SHA256 checksum",
            "SHA256 tree hash",
            "multipart upload",
            "header",
            "payload",
            "constraints",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "RFC 2616",
            "x-amz-content-sha256",
            "x-amz-sha256-tree-hash",
            "Upload Part API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SHA256 checksum",
            "SHA256 tree hash"
          ]
        },
        "semantic": {
          "summary": "This documentation explains the headers and constraints for uploading data to Amazon S3 Glacier, including checksum requirements and multipart upload details.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the Content-Range header in Amazon S3 Glacier?",
            "How do I compute a SHA256 tree hash for data upload?",
            "What constraints apply to multipart uploads in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "header",
          "multipart upload",
          "Content-Range",
          "RFC 2616",
          "constraints",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "payload",
          "SHA256 checksum",
          "x-amz-content-sha256",
          "Upload Part API",
          "API Version 2012-06-01",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_474",
      "text": "Amazon S3 Glacier Developer Guide\nResponses\nUpon a successful part upload, S3 Glacier returns a 204 No Content response.\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nName Description\nx-amz-sha256-\nThe SHA256 tree hash that S3 Glacier computed for the uploaded part.\ntree-hash\nType: String\nResponse Body\nThis operation does not return a response body.\nExample\nThe following request uploads a 4 MB part. The request sets the byte range to make this the first\npart in the archive.\nExample Request\nThe example sends an HTTP PUT request to upload a 4 MB part. The request is sent to the URI of\nthe Upload ID that was returned by the Initiate Multipart Upload request. The Content-Range\nheader identifies the part as the first 4 MB data part of the archive.\nUpload Part API Version 2012-06-01 465",
      "start_idx": 708321,
      "end_idx": 709431,
      "metadata": {
        "num_sentences": 11,
        "num_words": 172,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Syntax",
              "Response Headers",
              "Example"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "204 No Content",
            "x-amz-sha256-tree-hash",
            "response headers",
            "multipart upload",
            "HTTP PUT",
            "Content-Range",
            "Upload ID",
            "SHA256 tree hash",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "HTTP/1.1",
            "SHA256 tree hash",
            "Upload ID",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocols",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the response structure, headers, and example request for uploading a part to Amazon S3 Glacier using the multipart upload API.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the response structure for a successful part upload in S3 Glacier?",
            "What headers are included in the response of a multipart upload?",
            "How do I upload a 4 MB part to Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "HTTP PUT",
          "Upload ID",
          "archive",
          "multipart upload",
          "Content-Range",
          "response headers",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "HTTP/1.1",
          "API Version 2012-06-01",
          "204 No Content",
          "x-amz-sha256-tree-hash",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_475",
      "text": "Amazon S3 Glacier Developer Guide\nPUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 0-4194303/*\nx-amz-sha256-tree-hash:c06f7cd4baacb087002a99a5f48bf953\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nContent-Length: 4194304\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-\nversion,Signature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nTo upload the next part, the procedure is the same; however, you must calculate a new SHA256\ntree hash of the part you are uploading and also specify a new byte range to indicate where the\npart will go in the final assembly. The following request uploads another part using the same\nupload ID. The request specifies the next 4 MB of the archive after the previous request and a part\nsize of 4 MB.\nPUT /-/vaults/examplevault/multipart-uploads/\nOW2fM5iVylEpFEMM9_HpKowRapC3vn5sSL39_396UW9zLFUWVrnRHaPjUJddQ5OxSHVXjYtrN47NBZ-\nkhxOjyEXAMPLE HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range:bytes 4194304-8388607/*\nContent-Length: 4194304\nx-amz-sha256-tree-hash:f10e02544d651e2c3ce90a4307427493\nx-amz-content-sha256:726e392cb4d09924dbad1cc0ba3b00c3643d03d14cb4b823e2f041cff612a628\nx-amz-glacier-version: 2012-06-01\nAuthorization: Authorization=AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20120525/\nus-west-2/glacier/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-\namz-glacier-version,\nSignature=16b9a9e220a37e32f2e7be196b4ebb87120ca7974038210199ac5982e792cace\nThe parts can be uploaded in any order; S3 Glacier uses the range specification for each part to\ndetermine the order in which to assemble them.\nExample Response\nHTTP/1.1 204 No Content\nUpload Part API Version 2012-06-01 466",
      "start_idx": 709433,
      "end_idx": 711508,
      "metadata": {
        "num_sentences": 5,
        "num_words": 173,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "Multipart Upload",
              "Technical Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "multipart upload",
            "SHA256 tree hash",
            "Content-Range",
            "Authorization",
            "AWS4-HMAC-SHA256",
            "archive assembly",
            "byte range",
            "API version",
            "HTTP request"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "SHA256 tree hash",
            "HTTP/1.1",
            "us-west-2"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "File Upload Protocols",
            "AWS Authentication"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP API"
          ]
        },
        "semantic": {
          "summary": "The documentation explains how to perform multipart uploads to Amazon S3 Glacier, including setting byte ranges, calculating SHA256 tree hashes, and assembling archives using the API's PUT method.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I upload a multipart file to Amazon S3 Glacier?",
            "What is the process for calculating a SHA256 tree hash for uploads?",
            "How does Amazon S3 Glacier handle archive assembly for multipart uploads?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "byte range",
          "AWS4-HMAC-SHA256",
          "multipart upload",
          "archive assembly",
          "Content-Range",
          "API version",
          "us-west-2",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "HTTP request",
          "HTTP/1.1"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_476",
      "text": "Amazon S3 Glacier Developer Guide\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nx-amz-sha256-tree-hash: c06f7cd4baacb087002a99a5f48bf953\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nRelated Sections\n\u2022 Initiate Multipart Upload (POST multipart-uploads)\n\u2022 Upload Part (PUT uploadID)\n\u2022 Complete Multipart Upload (POST uploadID)\n\u2022 Abort Multipart Upload (DELETE uploadID)\n\u2022 List Multipart Uploads (GET multipart-uploads)\n\u2022 List Parts (GET uploadID)\n\u2022 Uploading Large Archives in Parts (Multipart Upload)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nJob Operations\nThe following are the job operations available in S3 Glacier.\nTopics\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Initiate Job (POST jobs)\n\u2022 List Jobs (GET jobs)\nDescribe Job (GET JobID)\nDescription\nThis operation returns information about a job you previously initiated, including the job initiation\ndate, the user who initiated the job, the job status code/message, and the Amazon Simple\nNotification Service (Amazon SNS) topic to notify after Amazon S3 Glacier (S3 Glacier) completes\nthe job. For more information about initiating a job, see Initiate Job (POST jobs).\nJob Operations API Version 2012-06-01 467",
      "start_idx": 711510,
      "end_idx": 712717,
      "metadata": {
        "num_sentences": 4,
        "num_words": 171,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Operations",
              "Multipart Upload"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Multipart Upload",
            "Job Operations",
            "Initiate Job",
            "Describe Job",
            "List Jobs",
            "Complete Multipart Upload",
            "Abort Multipart Upload",
            "Amazon SNS",
            "JobID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "JobID",
            "Multipart Upload",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "API Operations",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an overview of Amazon S3 Glacier job operations and multipart upload processes, including API details for initiating, completing, and aborting uploads, as well as job management features.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I initiate a multipart upload in Amazon S3 Glacier?",
            "What are the job operations available in Amazon S3 Glacier?",
            "How can I retrieve information about a specific job in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "Amazon SNS",
          "Abort Multipart Upload",
          "Describe Job",
          "Initiate Job",
          "Complete Multipart Upload",
          "Multipart Upload",
          "List Jobs",
          "Amazon S3 Glacier",
          "Job Operations",
          "JobID",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_477",
      "text": "Amazon S3 Glacier Developer Guide\nNote\nThis operation enables you to check the status of your job. However, we strongly\nrecommend that you set up an Amazon SNS topic and specify it in your initiate job request\nso that S3 Glacier can notify the topic after it completes the job.\nA job ID will not expire for at least 24 hours after S3 Glacier completes the job.\nRequests\nSyntax\nTo obtain information about a job, you use the HTTP GET method and scope the request to the\nspecific job. Note that the relative URI path is the same one that S3 Glacier returned to you when\nyou initiated the job.\nGET /AccountID/vaults/VaultName/jobs/JobID HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: date\nAuthorization: signatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nNote\nIn the request, if you omit the JobID, the response returns a list of all active jobs on the\nspecified vault. For more information about listing jobs, see List Jobs (GET jobs).\nDescribe Job API Version 2012-06-01 468",
      "start_idx": 712719,
      "end_idx": 714038,
      "metadata": {
        "num_sentences": 11,
        "num_words": 225,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Request Syntax",
              "Best Practices"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job status",
            "SNS topic",
            "HTTP GET",
            "URI path",
            "AccountId",
            "JobID",
            "vault",
            "AWS account ID",
            "List Jobs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SNS topic",
            "AWS account ID",
            "JobID",
            "VaultName"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to check the status of a job in Amazon S3 Glacier using the Describe Job API, including the required HTTP GET request syntax and best practices such as setting up an SNS topic for notifications.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I check the status of a job in Amazon S3 Glacier?",
            "What is the HTTP syntax for the Describe Job API?",
            "Why should I set up an SNS topic for job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP GET",
          "Amazon SNS",
          "vault",
          "List Jobs",
          "Amazon S3 Glacier",
          "job status",
          "AccountId",
          "JobID",
          "URI path",
          "SNS topic",
          "VaultName",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_478",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\nDescribe Job API Version 2012-06-01 469",
      "start_idx": 714040,
      "end_idx": 715001,
      "metadata": {
        "num_sentences": 5,
        "num_words": 107,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "HTTP/1.1",
            "201 Created",
            "Response Body",
            "InventoryRetrievalParameters",
            "ArchiveId",
            "JobId",
            "OutputLocation",
            "Content-Type"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InventoryRetrievalParameters",
            "ArchiveId",
            "JobId",
            "OutputLocation"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "HTTP Protocol",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the response syntax and parameters for an Amazon S3 Glacier API operation, including headers, response body structure, and metadata fields such as ArchiveId and JobId.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the response structure for an Amazon S3 Glacier operation?",
            "What headers are required for this API call?",
            "What metadata fields are included in the response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "JobId",
          "Content-Type",
          "ArchiveId",
          "Amazon S3 Glacier",
          "Response Body",
          "Request Headers",
          "InventoryRetrievalParameters",
          "OutputLocation",
          "HTTP/1.1",
          "201 Created"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_480",
      "text": "Amazon S3 Glacier Developer Guide\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nAction\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select.\nType: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null.\nType: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval job. For inventory retrieval\njobs, this field is null.\nType: String\nDescribe Job API Version 2012-06-01 471",
      "start_idx": 715849,
      "end_idx": 716833,
      "metadata": {
        "num_sentences": 10,
        "num_words": 129,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Structure"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SHA256TreeHash",
            "SNSTopic",
            "RecordDelimiter",
            "QuoteCharacter",
            "FieldDelimiter",
            "VaultARN",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Select"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "SHA256TreeHash",
            "SNSTopic",
            "VaultARN",
            "ArchiveId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Reference",
            "Data Processing"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier API, including response headers, JSON fields, and job types such as ArchiveRetrieval, InventoryRetrieval, and Select.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the JSON fields in the Amazon S3 Glacier API response?",
            "How does the ArchiveRetrieval job type work?",
            "What is the purpose of the SHA256TreeHash in the API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "SHA256TreeHash",
          "SNSTopic",
          "QuoteCharacter",
          "VaultARN",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "Select",
          "RecordDelimiter",
          "FieldDelimiter",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_481",
      "text": "Amazon S3 Glacier Developer Guide\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null.\nType: Number\nCompleted\nThe job status. When an archive or inventory retrieval job is completed, you get the job's output\nusing the Get Job Output (GET output).\nType: Boolean\nCompletionDate\nThe Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null.\nType: String\nCreationDate\nThe UTC time that the job was created.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval.\nType: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null.\nType: Number\nJobDescription\nThe job description you provided when you initiated the job.\nType: String\nDescribe Job API Version 2012-06-01 472",
      "start_idx": 716835,
      "end_idx": 717956,
      "metadata": {
        "num_sentences": 13,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Job Description",
            "CompletionDate",
            "CreationDate",
            "InventorySizeInBytes",
            "ArchiveSizeInBytes",
            "InventoryRetrievalParameters",
            "Get Job Output",
            "ISO 8601"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveRetrieval job",
            "InventoryRetrieval job",
            "GET output",
            "ISO 8601 date format"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Reference",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains fields and parameters for jobs in Amazon S3 Glacier, including ArchiveRetrieval and InventoryRetrieval jobs, detailing their types, statuses, and related metadata.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the ArchiveSizeInBytes field used for?",
            "How is the CompletionDate field formatted?",
            "What parameters are required for an InventoryRetrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "ISO 8601",
          "Job Description",
          "ArchiveRetrieval job",
          "GET output",
          "InventorySizeInBytes",
          "ArchiveSizeInBytes",
          "CompletionDate",
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "Amazon S3 Glacier",
          "InventoryRetrievalParameters",
          "Get Job Output",
          "ISO 8601 date format",
          "InventoryRetrieval job"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_482",
      "text": "Amazon S3 Glacier Developer Guide\nJobId\nThe ID that identifies the job in S3 Glacier.\nType: String\nJobOutputPath\nContains the job output location.\nType: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored.\nType: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If you don't specify a range in the archive retrieval, then\nthe whole archive is retrieved; also StartByteValue equals 0, and EndByteValue equals the size of\nthe archive minus 1. For inventory retrieval or select jobs, this field is null.\nType: String\nSelectParameters\nAn object that contains information about the parameters used for a select.\nType: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value.\nFor more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data.\nFor the specific case when the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value.\nThis field is null in the following situations:\nDescribe Job API Version 2012-06-01 473",
      "start_idx": 717958,
      "end_idx": 719292,
      "metadata": {
        "num_sentences": 12,
        "num_words": 200,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Technical Definitions",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JobId",
            "JobOutputPath",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SHA256TreeHash",
            "archive retrieval",
            "tree-hash alignment",
            "checksums"
          ],
          "entities": [
            "S3 Glacier",
            "OutputLocation object",
            "SelectParameters object",
            "SHA256TreeHash",
            "ArchiveSHA256TreeHash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Checksum Verification"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details about job-related fields and their types in Amazon S3 Glacier, including job output locations, retrieval byte ranges, and checksum properties.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the JobId field in S3 Glacier?",
            "How is the SHA256TreeHash used in archive retrieval?",
            "What does the RetrievalByteRange field represent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "SHA256TreeHash",
          "JobId",
          "checksums",
          "ArchiveSHA256TreeHash",
          "JobOutputPath",
          "OutputLocation object",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "tree-hash alignment",
          "OutputLocation",
          "SelectParameters object",
          "SelectParameters",
          "RetrievalByteRange"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_484",
      "text": "Amazon S3 Glacier Developer Guide\nExamples\nThe following example shows the request for a job that retrieves an archive.\nExample Request: Get job description\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe response body includes JSON that describes the specified job. Note that for both the inventory\nretrieval and archive retrieval jobs, the JSON fields are the same. However, when a field doesn't\napply to the type of job, its value is null. The following is an example response for an archive\nretrieval job. Note the following:\n\u2022 The Action field value is ArchiveRetrieval.\n\u2022 The ArchiveSizeInBytes field shows the size of the archive requested in the archive retrieval\njob.\n\u2022 The ArchiveSHA256TreeHash field shows the SHA256 tree hash for the entire archive.\n\u2022 The RetrievalByteRange field shows the range requested in the Initiate Job request. In this\nexample, the whole archive is requested.\n\u2022 The SHA256TreeHash field shows the SHA256 tree hash for the range requested in the Initiate\nJob request. In this example, it is the same as the ArchiveSHA256TreeHash field, which means\nthat the whole archive was requested.\n\u2022 The InventorySizeInBytes field value is null because it does not apply to an archive\nretrieval job.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nDescribe Job API Version 2012-06-01 475",
      "start_idx": 720183,
      "end_idx": 722037,
      "metadata": {
        "num_sentences": 14,
        "num_words": 228,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "job description",
            "archive retrieval",
            "SHA256 tree hash",
            "RetrievalByteRange",
            "InventorySizeInBytes",
            "API version",
            "HTTP request",
            "JSON response",
            "AWS4-HMAC-SHA256"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveRetrieval",
            "SHA256TreeHash",
            "AWS4-HMAC-SHA256",
            "Describe Job API"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS Signature Version 4"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of a request and response for retrieving an archive using the Amazon S3 Glacier API, including details on the job description and associated metadata.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve an archive using Amazon S3 Glacier?",
            "What is the structure of a job description response in Amazon S3 Glacier?",
            "What does the SHA256 tree hash represent in archive retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "JSON response",
          "archive retrieval",
          "AWS4-HMAC-SHA256",
          "SHA256TreeHash",
          "job description",
          "Describe Job API",
          "API version",
          "InventorySizeInBytes",
          "Amazon S3 Glacier",
          "SHA256 tree hash",
          "ArchiveRetrieval",
          "HTTP request",
          "RetrievalByteRange"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_485",
      "text": "Amazon S3 Glacier Developer Guide\nContent-Length: 419\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"NkbByEejwEggmBz2fTHgJrg0XBoDfjP4q6iu87-\nTjhqG6eGoOY9Z8i1_AUyUsuhPAdTqLHy8pTl5nfCFJmDl2yEZONi5L26Omw12vcs01MNGntHEQL8MBfGlqrEXAMPLEArchiveId\",\n\"ArchiveSizeInBytes\": 16777216,\n\"ArchiveSHA256TreeHash\":\n\"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"Completed\": false,\n\"CompletionDate\": null,\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"InventorySizeInBytes\": null,\n\"JobDescription\": \"My ArchiveRetrieval Job\",\n\"JobId\": \"HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\",\n\"RetrievalByteRange\": \"0-16777215\",\n\"SHA256TreeHash\": \"beb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:012345678901:mytopic\",\n\"StatusCode\": \"InProgress\",\n\"StatusMessage\": \"Operation in progress.\",\n\"Tier\": \"Bulk\",\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\"\n}\nThe following is an example response for an inventory retrieval job. Note the following:\n\u2022 The Action field value is InventoryRetrieval.\n\u2022 The ArchiveSizeInBytes, ArchiveSHA256TreeHash, and RetrievalByteRange field\nvalues are null because these fields do not apply to an inventory retrieval job.\n\u2022 The InventorySizeInBytes field value is null because the job is still in progress, and has\nnot fully prepared the inventory for download. If the job was completed before your describe job\nrequest, this field would give you the size of the output.\n{\n\"Action\": \"InventoryRetrieval\",\n\"ArchiveId\": null,\n\"ArchiveSizeInBytes\": null,\n\"ArchiveSHA256TreeHash\": null,\n\"Completed\": false,\n\"CompletionDate\": null,\nDescribe Job API Version 2012-06-01 476",
      "start_idx": 722039,
      "end_idx": 723757,
      "metadata": {
        "num_sentences": 7,
        "num_words": 153,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "JobId",
            "VaultARN",
            "SHA256TreeHash",
            "SNSTopic",
            "StatusCode",
            "Tier",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "VaultARN",
            "SNSTopic"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples and details about Amazon S3 Glacier jobs, including ArchiveRetrieval and InventoryRetrieval actions, along with their associated fields and statuses.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What fields are included in an ArchiveRetrieval job response?",
            "How is an InventoryRetrieval job different from an ArchiveRetrieval job?",
            "What does the StatusCode field indicate in a Glacier job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version",
          "SHA256TreeHash",
          "JobId",
          "SNSTopic",
          "Tier",
          "VaultARN",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "InventoryRetrieval",
          "StatusCode"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_487",
      "text": "Amazon S3 Glacier Developer Guide\n\"Marker\":\n\"vyS0t2jHQe5qbcDggIeD50chS1SXwYMrkVKo0KHiTUjEYxBGCqRLKaiySzdN7QXGVVV5XZpNVG67pCZ_uykQXFMLaxOSu2hO_-5C0AtWMDrfo7LgVOyfnveDRuOSecUo3Ueq7K0\"\n},\n}\nRelated Sections\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nGet Job Output (GET output)\nDescription\nThis operation downloads the output of the job you initiated using Initiate Job (POST jobs).\nDepending on the job type you specified when you initiated the job, the output will be either the\ncontent of an archive or a vault inventory.\nYou can download all the job output or download a portion of the output by specifying a byte\nrange. For both archive and inventory retrieval jobs, you should verify the downloaded size against\nthe size returned in the headers from the Get Job Output response.\nFor archive retrieval jobs, you should also verify that the size is what you expected. If you download\na portion of the output, the expected size is based on the range of bytes you specified. For\nexample, if you specify a range of bytes=0-1048575, you should verify your download size is\n1,048,576 bytes. If you download an entire archive, the expected size is the size of the archive\nwhen you uploaded it to Amazon S3 Glacier (S3 Glacier). The expected size is also returned in the\nheaders from the Get Job Output response.\nIn the case of an archive retrieval job, depending on the byte range you specify, S3 Glacier returns\nthe checksum for the portion of the data. To ensure the portion you downloaded is the correct\ndata, compute the checksum on the client, verify that the values match, and verify that the size is\nwhat you expected.\nA job ID does not expire for at least 24 hours after S3 Glacier completes the job. That is, you can\ndownload the job output within the 24-hour period after S3 Glacier completes the job.\nGet Job Output API Version 2012-06-01 478",
      "start_idx": 725269,
      "end_idx": 727159,
      "metadata": {
        "num_sentences": 14,
        "num_words": 309,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Usage",
              "Data Validation",
              "Download Instructions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Get Job Output",
            "archive retrieval",
            "vault inventory",
            "byte range",
            "checksum",
            "job ID",
            "headers",
            "download size",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Get Job Output",
            "Initiate Job",
            "archive",
            "vault inventory"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Operations",
          "secondary_categories": [
            "Data Retrieval",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section explains how to use the 'Get Job Output' operation in Amazon S3 Glacier to download job outputs, including archives or vault inventories, with instructions for validating size and checksums.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I use the 'Get Job Output' operation in Amazon S3 Glacier?",
            "What steps are required to validate the downloaded data from an archive retrieval job?",
            "What is the expected size for a partial archive download?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage Operations]",
        "tf_idf_keywords": [
          "byte range",
          "archive retrieval",
          "download size",
          "archive",
          "Initiate Job",
          "checksum",
          "vault inventory",
          "API version 2012-06-01",
          "Amazon S3 Glacier",
          "job ID",
          "headers",
          "Get Job Output"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_488",
      "text": "Amazon S3 Glacier Developer Guide\nRequests\nSyntax\nTo retrieve a job output, you send the HTTP GET request to the URI of the output of the specific\njob.\nGET /AccountId/vaults/VaultName/jobs/JobID/output HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nRange: ByteRangeToRetrieve\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses the following request headers, in addition to the request headers that are\ncommon to all operations. For more information about the common request headers, see Common\nRequest Headers.\nName Description Required\nRange No\nThe range of bytes to retrieve from the output. For example,\nif you want to download the first 1,048,576 bytes, specify\nthe range as bytes=0-1048575 . For more information,\ngo to Range Header Field Definition. The range is relative to\nGet Job Output API Version 2012-06-01 479",
      "start_idx": 727161,
      "end_idx": 728452,
      "metadata": {
        "num_sentences": 11,
        "num_words": 200,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "HTTP Syntax",
              "Request Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP GET",
            "AccountId",
            "vault",
            "JobID",
            "output",
            "Range",
            "x-amz-glacier-version",
            "Authorization",
            "request headers"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "VaultName",
            "JobID",
            "ByteRangeToRetrieve"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve job output from Amazon S3 Glacier using an HTTP GET request, detailing the syntax, headers, and optional parameters.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I retrieve job output from Amazon S3 Glacier?",
            "What headers are required for the Get Job Output API call?",
            "What is the syntax for the HTTP GET request in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "HTTP GET",
          "Authorization",
          "request headers",
          "vault",
          "Range",
          "ByteRangeToRetrieve",
          "Amazon S3 Glacier",
          "JobID",
          "AccountId",
          "output",
          "x-amz-glacier-version",
          "VaultName"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_489",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nany range specified in the Initiate Job request. By default,\nthis operation downloads the entire output.\nIf the job output is large, then you can use the Range request\nheader to retrieve a portion of the output. This allows you\nto download the entire output in smaller chunks of bytes.\nFor example, suppose you have 1 GB job output you want\nto download and you decide to download 128 MB chunks of\ndata at a time, a total of eight Get Job Output requests. You\nwill use the following process to download the job output:\n1. Download a 128 MB chunk of output by specifying the\nappropriate byte range using the R ange header. Verify\nthat all 128 MB of data was received.\n2. Along with the data, the response will include a checksum\nof the payload. You compute the checksum of the\npayload on the client and compare it with the checksum\nyou received in the response to ensure you received all\nthe expected data.\n3. Repeat steps 1 and 2 for all the eight 128 MB chunks of\noutput data, each time specifying the appropriate byte\nrange.\n4. After downloading all the parts of the job output, you\nhave a list of eight checksum values. Compute the tree\nhash of these values to find the checksum of the entire\noutput. Using the Describe Job (GET JobID) operation,\nobtain job information of the job that provided you the\noutput. The response includes the checksum of the entire\narchive stored in S3 Glacier. You compare this value\nwith the checksum you computed to ensure you have\ndownloaded the entire archive content with no errors.\nType: String\nGet Job Output API Version 2012-06-01 480",
      "start_idx": 728454,
      "end_idx": 730087,
      "metadata": {
        "num_sentences": 20,
        "num_words": 291,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Step-by-Step Instructions",
              "Validation Process"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Initiate Job",
            "Range header",
            "checksum",
            "tree hash",
            "GET JobID",
            "job output",
            "128 MB chunks",
            "payload",
            "archive"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Range header",
            "GET JobID",
            "checksum",
            "tree hash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Integrity",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to download large job outputs from Amazon S3 Glacier in smaller chunks using the Range header and verify data integrity through checksums and tree hashes.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I download large job outputs from Amazon S3 Glacier in chunks?",
            "What is the process for verifying data integrity during downloads from S3 Glacier?",
            "How can I use the Range header in the Get Job Output API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "tree hash",
          "archive",
          "Initiate Job",
          "checksum",
          "job output",
          "Amazon S3 Glacier",
          "GET JobID",
          "128 MB chunks",
          "payload",
          "Range header"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_490",
      "text": "Amazon S3 Glacier Developer Guide\nName Description Required\nDefault: None\nConstraints: None\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nFor a retrieval request that returns all of the job data, the job output response returns a 200 OK\nresponse code. When partial content is requested, for example, if you specified the Range header\nin the request, then the response code 206 Partial Content is returned.\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: ContentType\nContent-Length: Length\nx-amz-sha256-tree-hash: ChecksumComputedByAmazonGlacier\n[Body containing job output.]\nResponse Headers\nHeader Description\nContent-Range\nThe range of bytes returned by S3 Glacier. If only partial output is\ndownloaded, the response provides the range of bytes S3 Glacier\nreturned.\nFor example, bytes 0-1048575/8388608 returns the first 1 MB\nfrom 8 MB.\nFor more information about the Content-Range header, go to\nContent-Range Header Field Definition.\nGet Job Output API Version 2012-06-01 481",
      "start_idx": 730089,
      "end_idx": 731124,
      "metadata": {
        "num_sentences": 9,
        "num_words": 148,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response",
              "Headers",
              "HTTP Status Codes"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Body",
            "Response Headers",
            "Content-Range",
            "HTTP/1.1 200 OK",
            "206 Partial Content",
            "Range header",
            "x-amz-sha256-tree-hash",
            "job output",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Content-Range",
            "x-amzn-RequestId",
            "x-amz-sha256-tree-hash",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocol",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation segment describes the response structure for the Amazon S3 Glacier Get Job Output API, including HTTP status codes, headers, and the Content-Range specification for partial data retrieval.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What response codes are returned by the Amazon S3 Glacier Get Job Output API?",
            "What does the Content-Range header indicate in the response?",
            "What metadata is included in the response headers for a job output?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "HTTP/1.1 200 OK",
          "Response Headers",
          "x-amz-sha256-tree-hash",
          "Content-Range",
          "job output",
          "Request Body",
          "Amazon S3 Glacier",
          "206 Partial Content",
          "API Version 2012-06-01",
          "Range header",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_491",
      "text": "Amazon S3 Glacier Developer Guide\nHeader Description\nType: String\nContent-Type\nThe Content-Type depends on whether the job output is an archive or\na vault inventory.\n\u2022\nFor archive data, the Content-Type is application/octet-\nstream .\n\u2022\nFor vault inventory, if you requested CSV format when you initiated\nthe job, the Content-Type is text/csv. Otherwise, by default,\nvault inventory is returned as JSON, and the Content-Type is\napplication/json .\nType: String\nGet Job Output API Version 2012-06-01 482",
      "start_idx": 731126,
      "end_idx": 731626,
      "metadata": {
        "num_sentences": 5,
        "num_words": 77,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Format Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Content-Type",
            "archive data",
            "vault inventory",
            "application/octet-stream",
            "text/csv",
            "application/json",
            "API Version",
            "job output",
            "CSV format"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Content-Type",
            "API Version 2012-06-01",
            "vault inventory",
            "archive data"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Formats",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation describes the Content-Type values for job outputs in Amazon S3 Glacier, depending on whether the output is archive data or vault inventory, and provides details on the associated formats (CSV or JSON).",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the Content-Type values for job outputs in Amazon S3 Glacier?",
            "How is vault inventory data formatted in Amazon S3 Glacier?",
            "What API version is associated with the Get Job Output operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "application/json",
          "API Version",
          "Content-Type",
          "API Version 2012-06-01",
          "CSV format",
          "vault inventory",
          "job output",
          "archive data",
          "Amazon S3 Glacier",
          "application/octet-stream",
          "text/csv"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_492",
      "text": "Amazon S3 Glacier Developer Guide\nHeader Description\nx-amz-sha256-\nThe checksum of the data in the response. This header is returned only\ntree-hash\nwhen retrieving the output for an archive retrieval job. Furthermore,\nthis header appears when the retrieved data range requested in the\nInitiate Job request is tree hash aligned and the range to download\nin the Get Job Output is also tree hash aligned. For more informati\non about tree hash aligned ranges, see Receiving Checksums When\nDownloading Data.\nFor example, if in your Initiate Job request you specified a tree hash\naligned range to retrieve (which includes the whole archive), then\nyou will receive the checksum of the data you download under the\nfollowing conditions:\n\u2022\nYou get the entire range of the retrieved data.\n\u2022\nYou request a byte range of the retrieved data that has a size of a\nmegabyte (1024 KB) multiplied by a power of 2 and that starts and\nends on a multiple of the size of the requested range. For example,\nif you have 3.1 MB of retrieved data and you specify a range to\nreturn that starts at 1 MB and ends at 2 MB, then the x-amz-sha\n256-tree-hash is returned as a response header.\n\u2022\nYou request a range to return of the retrieved data that goes to the\nend of the data, and the start of the range is a multiple of the size\nof the range to retrieve rounded up to the next power of two but\nnot smaller than one megabyte (1024 KB). For example, if you have\n3.1 MB of retrieved data and you specify a range that starts at 2\nMB and ends at 3.1 MB (the end of the data), then the x-amz-sha\n256-tree-hash is returned as a response header.\nType: String\nGet Job Output API Version 2012-06-01 483",
      "start_idx": 731628,
      "end_idx": 733290,
      "metadata": {
        "num_sentences": 10,
        "num_words": 305,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Header Description"
            ]
          },
          "keywords": [
            "x-amz-sha256-tree-hash",
            "checksum",
            "archive retrieval job",
            "tree hash aligned",
            "byte range",
            "Initiate Job request",
            "Get Job Output",
            "megabyte",
            "Amazon S3 Glacier",
            "data range"
          ],
          "entities": [
            "x-amz-sha256-tree-hash",
            "Amazon S3 Glacier",
            "Initiate Job request",
            "Get Job Output",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Integrity"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains the x-amz-sha256-tree-hash header, detailing the conditions under which it is returned for archive retrieval jobs and describing tree hash aligned ranges.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the x-amz-sha256-tree-hash header used for?",
            "Under what conditions is the x-amz-sha256-tree-hash header returned?",
            "How are tree hash aligned ranges defined?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval job",
          "byte range",
          "data range",
          "API Version 2012-06-01",
          "checksum",
          "Amazon S3 Glacier",
          "megabyte",
          "Initiate Job request",
          "Get Job Output",
          "tree hash aligned",
          "x-amz-sha256-tree-hash"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_493",
      "text": "Amazon S3 Glacier Developer Guide\nResponse Body\nS3 Glacier returns the job output in the response body. Depending on the job type, the output can\nbe the archive contents or the vault inventory. In case of a vault inventory, by default the inventory\nlist is returned as the following JSON body.\n{\n\"VaultARN\": String,\n\"InventoryDate\": String,\n\"ArchiveList\": [\n{\"ArchiveId\": String,\n\"ArchiveDescription\": String,\n\"CreationDate\": String,\n\"Size\": Number,\n\"SHA256TreeHash\": String\n},\n...\n]\n}\nIf you requested the comma-separated values (CSV) output format when you initiated the vault\ninventory job, then the vault inventory is returned in CSV format in the body. The CSV format has\nfive columns \"ArchiveId\", \"ArchiveDescription\", \"CreationDate\", \"Size\", and \"SHA256TreeHash\" with\nthe same definitions as the corresponding JSON fields.\nNote\nIn the returned CSV format, fields may be returned with the whole field enclosed in double-\nquotes. Fields that contain a comma or double-quotes are always returned enclosed in\ndouble-quotes. For example, my archive description,1 is returned as \"my archive\ndescription,1\". Double-quote characters that are within returned double-quote\nenclosed fields are escaped by preceding them with a backslash character. For example, my\narchive description,1\"2 is returned as \"my archive description,1\\\"2\" and my\narchive description,1\\\"2 is returned as \"my archive description,1\\\\\"2\". The\nbackslash character is not escaped.\nThe JSON response body contains the following JSON fields.\nGet Job Output API Version 2012-06-01 484",
      "start_idx": 733292,
      "end_idx": 734840,
      "metadata": {
        "num_sentences": 13,
        "num_words": 224,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response Format",
              "Data Structure",
              "Output Specification"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "vault inventory",
            "JSON body",
            "CSV format",
            "ArchiveId",
            "SHA256TreeHash",
            "Response Body",
            "API Version 2012-06-01",
            "double-quotes escaping",
            "CreationDate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveList",
            "Get Job Output API",
            "JSON fields"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Serialization",
            "File Inventory Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains the response body format for job outputs, including JSON and CSV formats, and details the structure and escaping rules for fields.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the vault inventory response in S3 Glacier?",
            "How are special characters handled in the CSV output of S3 Glacier?",
            "What fields are included in the JSON response for a vault inventory job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "CreationDate",
          "SHA256TreeHash",
          "Get Job Output API",
          "CSV format",
          "vault inventory",
          "double-quotes escaping",
          "VaultARN",
          "JSON fields",
          "S3 Glacier",
          "JSON body",
          "Amazon S3 Glacier",
          "Response Body",
          "ArchiveList",
          "API Version 2012-06-01",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_494",
      "text": "Amazon S3 Glacier Developer Guide\nArchiveDescription\nThe description of an archive.\nType: String\nArchiveId\nThe ID of an archive.\nType: String\nArchiveList\nAn array of archive metadata. Each object in the array represents metadata for one archive\ncontained in the vault.\nType: Array\nCreationDate\nThe UTC date and time the archive was created.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nInventoryDate\nThe UTC date and time of the last inventory for the vault that was completed after changes\nto the vault. Even though S3 Glacier prepares a vault inventory once a day, the inventory date\nis only updated if there have been archive additions or deletions to the vault since the last\ninventory.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nSHA256TreeHash\nThe tree hash of the archive.\nType: String\nSize\nThe size in bytes of the archive.\nGet Job Output API Version 2012-06-01 485",
      "start_idx": 734842,
      "end_idx": 735820,
      "metadata": {
        "num_sentences": 12,
        "num_words": 156,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Metadata Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "ArchiveDescription",
            "ArchiveId",
            "ArchiveList",
            "CreationDate",
            "InventoryDate",
            "SHA256TreeHash",
            "ISO 8601",
            "vault inventory",
            "metadata"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveDescription",
            "ArchiveId",
            "SHA256TreeHash",
            "ISO 8601"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Archiving",
            "Metadata Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides metadata details for archives in Amazon S3 Glacier, including descriptions, IDs, creation dates, inventory dates, and tree hashes.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What metadata fields are available for an archive in Amazon S3 Glacier?",
            "What is the format of the CreationDate and InventoryDate fields?",
            "What does the SHA256TreeHash represent in an archive?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "ISO 8601",
          "SHA256TreeHash",
          "ArchiveDescription",
          "vault inventory",
          "Amazon S3 Glacier",
          "ArchiveList",
          "InventoryDate",
          "metadata",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_495",
      "text": "Amazon S3 Glacier Developer Guide\nType: Number\nVaultARN\nThe Amazon Resource Name (ARN) resource from which the archive retrieval was requested.\nType: String\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example shows the request for a job that retrieves an archive.\nExample 1: Download output\nThis example retrieves data prepared by S3 Glacier in response to your initiate archive retrieval job\nrequest.\nExample Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following is an example response of an archive retrieval job. Note that the Content-Type\nheader is application/octet-stream and that x-amz-sha256-tree-hash header is included\nin the response, which means that all the job data is returned.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nGet Job Output API Version 2012-06-01 486",
      "start_idx": 735822,
      "end_idx": 737177,
      "metadata": {
        "num_sentences": 7,
        "num_words": 139,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "VaultARN",
            "archive retrieval",
            "Error Responses",
            "HTTP request",
            "API version",
            "application/octet-stream",
            "x-amz-sha256-tree-hash",
            "AWS4-HMAC-SHA256",
            "Authorization header"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "x-amz-glacier-version",
            "HTTP/1.1",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "HTTP"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on retrieving archives from Amazon S3 Glacier, including example API requests and responses, error handling, and authentication methods.",
          "intents": [
            "How-To",
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "How do I retrieve an archive from Amazon S3 Glacier?",
            "What does a successful archive retrieval response look like?",
            "What headers are required for an Amazon S3 Glacier API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "AWS4-HMAC-SHA256",
          "Error Responses",
          "Authorization header",
          "x-amz-glacier-version",
          "VaultARN",
          "API version",
          "Amazon S3 Glacier",
          "application/octet-stream",
          "HTTP request",
          "x-amz-sha256-tree-hash",
          "HTTP/1.1"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_496",
      "text": "Amazon S3 Glacier Developer Guide\nx-amz-sha256-tree-hash:\nbeb0fe31a1c7ca8c6c04d574ea906e3f97b31fdca7571defb5b44dca89b5af60\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/octet-stream\nContent-Length: 1048576\n[Archive data.]\nThe following is an example response of an inventory retrieval job. Note that the Content-Type\nheader is application/json. Also note that the response does not include the x-amz-sha256-\ntree-hash header.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 906\n{\n\"VaultARN\": \"arn:aws:glacier:us-west-2:012345678901:vaults/examplevault\",\n\"InventoryDate\": \"2011-12-12T14:19:01Z\",\n\"ArchiveList\": [\n{\n\"ArchiveId\": \"DMTmICA2n5Tdqq5BV2z7og-\nA20xnpAPKt3UXwWxdWsn_D6auTUrW6kwy5Qyj9xd1MCE1mBYvMQ63LWaT8yTMzMaCxB_9VBWrW4Jw4zsvg5kehAPDVKcppUD1X7b24JukOr4mMAq-\noA\",\n\"ArchiveDescription\": \"my archive1\",\n\"CreationDate\": \"2012-05-15T17:19:46.700Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"6b9d4cf8697bd3af6aa1b590a0b27b337da5b18988dbcc619a3e608a554a1e62\"\n},\n{\n\"ArchiveId\": \"2lHzwhKhgF2JHyvCS-\nZRuF08IQLuyB4265Hs3AXj9MoAIhz7tbXAvcFeHusgU_hViO1WeCBe0N5lsYYHRyZ7rrmRkNRuYrXUs_sjl2K8ume_7mKO_0i7C-\nuHE1oHqaW9d37pabXrSA\",\n\"ArchiveDescription\": \"my archive2\",\n\"CreationDate\": \"2012-05-15T17:21:39.339Z\",\n\"Size\": 2140123,\n\"SHA256TreeHash\":\n\"7f2fe580edb35154041fa3d4b41dd6d3adaef0c85d2ff6309f1d4b520eeecda3\"\n}\n]\nGet Job Output API Version 2012-06-01 487",
      "start_idx": 737179,
      "end_idx": 738656,
      "metadata": {
        "num_sentences": 5,
        "num_words": 111,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response Example",
              "Metadata Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "x-amz-sha256-tree-hash",
            "VaultARN",
            "InventoryDate",
            "ArchiveId",
            "ArchiveDescription",
            "CreationDate",
            "SHA256TreeHash",
            "Content-Type",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "VaultARN",
            "ArchiveId",
            "SHA256TreeHash",
            "x-amzn-RequestId"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "AWS Services",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an example response of an inventory retrieval job in Amazon S3 Glacier, including metadata such as archive details and hash values.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What metadata is included in an Amazon S3 Glacier inventory retrieval job response?",
            "How is the x-amz-sha256-tree-hash used in Amazon S3 Glacier?",
            "What is the structure of an archive list in the inventory response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "API Version",
          "SHA256TreeHash",
          "Content-Type",
          "ArchiveDescription",
          "VaultARN",
          "Amazon S3 Glacier",
          "InventoryDate",
          "x-amz-sha256-tree-hash",
          "ArchiveId",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_497",
      "text": "Amazon S3 Glacier Developer Guide\n}\nExample 2: Download only partial output\nThis example retrieves only a portion of the archive prepared by S3 Glacier in response to your\ninitiate archive retrieval job request. The request uses the optional Range header to retrieve only\nthe first 1,024 bytes.\nExample Request\nGET /-/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/output\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nRange: bytes=0-1023\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following successful response shows the 206 Partial Content response. In this case, the\nresponse also includes a Content-Range header that specifies the range of bytes S3 Glacier\nreturns.\nHTTP/1.1 206 Partial Content\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Range: bytes 0-1023/8388608\nContent-Type: application/octet-stream\nContent-Length: 1024\n[Archive data.]\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Initiate Job (POST jobs)\nGet Job Output API Version 2012-06-01 488",
      "start_idx": 738658,
      "end_idx": 740029,
      "metadata": {
        "num_sentences": 6,
        "num_words": 139,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Code Example",
              "API Request",
              "API Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "archive retrieval",
            "Range header",
            "Partial Content",
            "Content-Range",
            "HTTP GET request",
            "x-amz-glacier-version",
            "Authorization",
            "Content-Length",
            "API version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Range header",
            "Partial Content",
            "AWS4-HMAC-SHA256",
            "x-amzn-RequestId"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocol",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve a partial archive from Amazon S3 Glacier using an HTTP GET request with the Range header. It includes example requests, responses, and related API references.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a partial archive from Amazon S3 Glacier?",
            "What is the purpose of the Range header in an archive retrieval request?",
            "What does a successful partial content response from S3 Glacier look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Authorization",
          "archive retrieval",
          "AWS4-HMAC-SHA256",
          "x-amzn-RequestId",
          "x-amz-glacier-version",
          "Content-Range",
          "Content-Length",
          "Amazon S3 Glacier",
          "API version 2012-06-01",
          "Partial Content",
          "Range header",
          "HTTP GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_498",
      "text": "Amazon S3 Glacier Developer Guide\n\u2022 Identity and Access Management for Amazon S3 Glacier\nInitiate Job (POST jobs)\nThis operation initiates the following types of Amazon S3 Glacier (S3 Glacier) jobs:\n\u2022 archive-retrieval\u2014 Retrieve an archive\n\u2022 inventory-retrieval\u2014 Inventory a vault\nTopics\n\u2022 Initializing an Archive or Vault Inventory Retrieval Job\n\u2022 Requests\n\u2022 Responses\n\u2022 Examples\n\u2022 Related Sections\nInitializing an Archive or Vault Inventory Retrieval Job\nRetrieving an archive or a vault inventory are asynchronous operations that require you to initiate a\njob. Once started, job cannot be cancelled. Retrieval is a two-step process:\n1. Initiate a retrieval job by using the Initiate Job (POST jobs) operation.\nImportant\nA data retrieval policy can cause your initiate retrieval job request to fail with\na PolicyEnforcedException. For more information about data retrieval\npolicies, see S3 Glacier Data Retrieval Policies. For more information about the\nPolicyEnforcedException exception, see Error Responses.\n2. After the job completes, download the bytes using the Get Job Output (GET output) operation.\nThe retrieval request is ran asynchronously. When you initiate a retrieval job, S3 Glacier creates\na job and returns a job ID in the response. When S3 Glacier completes the job, you can get the\nInitiate Job API Version 2012-06-01 489",
      "start_idx": 740031,
      "end_idx": 741372,
      "metadata": {
        "num_sentences": 12,
        "num_words": 206,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Operation",
              "Error Handling",
              "Data Retrieval"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Initiate Job",
            "archive-retrieval",
            "inventory-retrieval",
            "PolicyEnforcedException",
            "data retrieval policy",
            "vault inventory",
            "asynchronous operations",
            "job ID",
            "GET output"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job (POST jobs)",
            "Get Job Output (GET output)",
            "PolicyEnforcedException",
            "S3 Glacier Data Retrieval Policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to initiate Amazon S3 Glacier jobs for archive or vault inventory retrieval, detailing the steps and potential errors like PolicyEnforcedException.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate a retrieval job in Amazon S3 Glacier?",
            "What is a PolicyEnforcedException in S3 Glacier?",
            "What are the steps for retrieving a vault inventory?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive-retrieval",
          "PolicyEnforcedException",
          "data retrieval policy",
          "Initiate Job",
          "Initiate Job (POST jobs)",
          "vault inventory",
          "S3 Glacier Data Retrieval Policies",
          "inventory-retrieval",
          "Amazon S3 Glacier",
          "job ID",
          "asynchronous operations",
          "GET output",
          "Get Job Output (GET output)"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_499",
      "text": "Amazon S3 Glacier Developer Guide\njob output (archive or inventory data). For information about getting job output, see the Get Job\nOutput (GET output) operation.\nThe job must complete before you can get its output. To determine when a job is complete, you\nhave the following options:\n\u2022 Use an Amazon SNS notification\u2014 You can specify an Amazon SNS topic to which S3 Glacier\ncan post a notification after the job is completed. You can specify an SNS topic per job request.\nThe notification is sent only after S3 Glacier completes the job. In addition to specifying an SNS\ntopic per job request, you can configure vault notifications for a vault so that job notifications\nare sent for all retrievals. For more information, see Set Vault Notification Configuration (PUT\nnotification-configuration).\n\u2022 Get job details\u2014 You can make a Describe Job (GET JobID) request to obtain job status\ninformation while a job is in progress. However, it is more efficient to use an Amazon SNS\nnotification to determine when a job is complete.\nNote\nThe information you get via notification is same that you get by calling Describe Job (GET\nJobID).\nIf for a specific event, you add both the notification configuration on the vault and also specify an\nSNS topic in your initiate job request, S3 Glacier sends both notifications. For more information,\nsee Set Vault Notification Configuration (PUT notification-configuration).\nThe Vault Inventory\nS3 Glacier updates a vault inventory approximately once a day, starting on the day you first upload\nan archive to the vault. If there have been no archive additions or deletions to the vault since the\nlast inventory, the inventory date is not updated. When you initiate a job for a vault inventory, S3\nGlacier returns the last inventory it generated, which is a point-in-time snapshot and not real-time\ndata.\nAfter S3 Glacier creates the first inventory for the vault, it typically takes half a day and up to a day\nbefore that inventory is available for retrieval.\nInitiate Job API Version 2012-06-01 490",
      "start_idx": 741374,
      "end_idx": 743404,
      "metadata": {
        "num_sentences": 18,
        "num_words": 337,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "Notification Handling",
              "Job Status Retrieval",
              "Inventory Management"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "SNS notification",
            "vault inventory",
            "Describe Job",
            "Initiate Job",
            "GET JobID",
            "PUT notification-configuration",
            "archive",
            "inventory snapshot",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Amazon SNS",
            "Vault Notification Configuration",
            "Describe Job",
            "Initiate Job API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Notification Systems",
            "API Operations"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Vault Notification Configuration"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines how to retrieve job output and manage vault inventory in Amazon S3 Glacier, including using Amazon SNS notifications and Describe Job API for status tracking.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I determine when a job in Amazon S3 Glacier is complete?",
            "What is the process for retrieving a vault inventory in S3 Glacier?",
            "How does Amazon SNS integrate with S3 Glacier for job notifications?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "SNS notification",
          "Amazon SNS",
          "archive",
          "Describe Job",
          "API Version 2012-06-01",
          "Initiate Job",
          "vault inventory",
          "Vault Notification Configuration",
          "Amazon S3 Glacier",
          "inventory snapshot",
          "GET JobID",
          "PUT notification-configuration",
          "Initiate Job API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_500",
      "text": "Amazon S3 Glacier Developer Guide\nYou might not find it useful to retrieve a vault inventory for each archive upload. However, suppose\nthat you maintain a database on the client-side associating metadata about the archives you\nupload to S3 Glacier. Then, you might find the vault inventory useful to reconcile information, as\nneeded, in your database with the actual vault inventory. For more information about the data\nfields returned in an inventory job output, see Response Body.\nRange Inventory Retrieval\nYou can limit the number of inventory items retrieved by filtering on the archive creation date or\nby setting a limit.\nFiltering by Archive Creation Date\nYou can retrieve inventory items for archives created between StartDate and EndDate by\nspecifying values for these parameters in the Initiate Job request. Archives created on or after the\nStartDate and before the EndDate are returned. If you provide only the StartDate without\nthe EndDate, you retrieve the inventory for all archives created on or after the StartDate. If you\nprovide only the EndDate without the StartDate, you get back the inventory for all archives\ncreated before the EndDate.\nLimiting Inventory Items per Retrieval\nYou can limit the number of inventory items returned by setting the Limit parameter in the\nInitiate Job request. The inventory job output contains inventory items up to the specified Limit.\nIf there are more inventory items available, the result is paginated. After a job is complete, you can\nuse the Describe Job (GET JobID) operation to get a marker that you use in a subsequent Initiate\nJob request. The marker indicates the starting point to retrieve the next set of inventory items.\nYou can page through your entire inventory by repeatedly making Initiate Job requests with the\nmarker from the previous Describe Job output. You do so until you get a marker from Describe Job\nthat returns null, indicating that there are no more inventory items available.\nYou can use the Limit parameter together with the date range parameters.\nRanged Archive Retrieval\nYou can initiate archive retrieval for the whole archive or a range of the archive. In the case of\nranged archive retrieval, you specify a byte range to return or the whole archive. The range\nspecified must be megabyte (MB) aligned. In other words, the range start value must be divisible\nby 1 MB and the range end value plus 1 must be divisible by 1 MB or equal the end of the archive.\nIf the ranged archive retrieval is not megabyte-aligned, this operation returns a 400 response.\nInitiate Job API Version 2012-06-01 491",
      "start_idx": 743406,
      "end_idx": 745984,
      "metadata": {
        "num_sentences": 23,
        "num_words": 427,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural"
            ]
          },
          "keywords": [
            "vault inventory",
            "archive retrieval",
            "Initiate Job",
            "StartDate",
            "EndDate",
            "Limit parameter",
            "Describe Job",
            "marker",
            "byte range",
            "megabyte alignment"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Initiate Job API",
            "Response Body",
            "Describe Job",
            "Inventory Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "API Usage"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve and filter inventory items from Amazon S3 Glacier, including options for ranged archive retrieval and paginated results using the Initiate Job API.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I filter inventory retrieval by archive creation date?",
            "What is the Limit parameter in an inventory retrieval job?",
            "How do I perform ranged archive retrieval in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive retrieval",
          "byte range",
          "megabyte alignment",
          "Limit parameter",
          "Describe Job",
          "marker",
          "Inventory Job",
          "Initiate Job",
          "StartDate",
          "vault inventory",
          "Amazon S3 Glacier",
          "Response Body",
          "EndDate",
          "Initiate Job API"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_501",
      "text": "Amazon S3 Glacier Developer Guide\nFurthermore, to ensure that you get checksum values for data you download using Get Job Output\n(Get Job Output (GET output)), the range must be tree-hash aligned. For more information about\ntree-hash aligned ranges, see Receiving Checksums When Downloading Data.\nExpedited, Standard, and Bulk Tiers\nWhen initiating an archive retrieval job, you can specify one of the following options in the Tier\nfield of the request body:\n\u2022 Expedited \u2013 Expedited allows you to quickly access your data when occasional urgent requests\nfor restoring archives are required. For all but the largest archives (250 MB+), data accessed using\nthe Expedited tier is typically made available within 1\u20135 minutes.\n\u2022 Standard \u2013 Standard allows you to access any of your archives within several hours. Data\naccessed using the Standard tier typically made available within 3\u20135 hours. This option is the\ndefault one for job requests that don't specify the tier option.\n\u2022 Bulk \u2013 Bulk is the lowest-cost tier for S3 Glacier, enabling you to retrieve large amounts, even\npetabytes, of data inexpensively in a day. Data accessed using the Bulk tier is typically made\navailable within 5\u201312 hours.\nFor more information about expedited and bulk retrievals, see Retrieving S3 Glacier Archives Using\nAWS Console.\nRequests\nTo initiate a job, you use the HTTP POST method and scope the request to the vault's jobs\nsubresource. You specify details of the job request in the JSON document of your request. The job\ntype is specified with the Type field. Optionally, you can specify an SNSTopic field to indicate an\nAmazon SNS topic to which S3 Glacier can post notification after it completes the job.\nNote\nTo post a notification to Amazon SNS, you must create the topic yourself if it doesn't\nalready exist. S3 Glacier doesn't create the topic for you. The topic must have permissions\nto receive publications from a S3 Glacier vault. S3 Glacier doesn't verify if the vault has\npermission to publish to the topic. If the permissions are not configured appropriately, you\nmight not receive notification even after the job completes.\nInitiate Job API Version 2012-06-01 492",
      "start_idx": 745986,
      "end_idx": 748147,
      "metadata": {
        "num_sentences": 20,
        "num_words": 354,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Conceptual",
              "Procedural",
              "Warning"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "archive retrieval",
            "Expedited tier",
            "Standard tier",
            "Bulk tier",
            "tree-hash aligned",
            "checksum",
            "Amazon SNS",
            "job request",
            "vault"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Expedited tier",
            "Standard tier",
            "Bulk tier",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide explains how to retrieve archives using different tiers (Expedited, Standard, Bulk), the importance of tree-hash alignment for checksums, and the process of initiating jobs with optional notifications via Amazon SNS.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "What are the differences between Expedited, Standard, and Bulk retrieval tiers in S3 Glacier?",
            "How do I initiate a job request in S3 Glacier?",
            "What is tree-hash alignment, and why is it important for downloading data?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Expedited tier",
          "archive retrieval",
          "Amazon SNS",
          "vault",
          "checksum",
          "Amazon S3 Glacier",
          "job request",
          "Bulk tier",
          "S3 Glacier",
          "tree-hash aligned",
          "Standard tier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_503",
      "text": "Amazon S3 Glacier Developer Guide\n\"Tagging\": {\n\"string\" : \"string\"\n},\n\"UserMetadata\": {\n\"string\" : \"string\"\n}\n}\n},\n\"RetrievalByteRange\": \"string\",\n\"SelectParameters\": {\n\"Expression\": \"string\",\n\"ExpressionType\": \"string\",\n\"InputSerialization\": {\n\"csv\": {\n\"Comments\": \"string\",\n\"FieldDelimiter\": \"string\",\n\"FileHeaderInfo\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n},\n\"OutputSerialization\": {\n\"csv\": {\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SNSTopic\": \"string\",\n\"Tier\": \"string\",\n\"Type\": \"string\"\n}\n}\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nInitiate Job API Version 2012-06-01 494",
      "start_idx": 749037,
      "end_idx": 749923,
      "metadata": {
        "num_sentences": 2,
        "num_words": 109,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Serialization"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Tagging",
            "UserMetadata",
            "RetrievalByteRange",
            "SelectParameters",
            "InputSerialization",
            "OutputSerialization",
            "SNSTopic",
            "Tier",
            "AWS Account ID"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Account ID",
            "SNSTopic",
            "Initiate Job API",
            "CSV Serialization"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Processing",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for Amazon S3 Glacier API parameters, including tagging, user metadata, data serialization, and job initiation details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the parameters for initiating a job in Amazon S3 Glacier?",
            "How is data serialized for input and output in Amazon S3 Glacier?",
            "What is the role of the AWS Account ID in the API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS Account ID",
          "CSV Serialization",
          "InputSerialization",
          "SNSTopic",
          "Tier",
          "Amazon S3 Glacier",
          "Tagging",
          "OutputSerialization",
          "UserMetadata",
          "Initiate Job API",
          "SelectParameters",
          "RetrievalByteRange"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_504",
      "text": "Amazon S3 Glacier Developer Guide\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nRequest Body\nThe request accepts the following data in JSON format in the body of the request.\njobParameters\nProvides options for specifying job information.\nType: jobParameters object\nRequired: Yes\nResponses\nS3 Glacier creates the job. In the response, it returns the URI of the job.\nSyntax\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: location\nx-amz-job-id: jobId\nx-amz-job-output-path: jobOutputPath\nResponse Headers\nHeader Description\nLocation\nThe relative URI path of the job. You can use this URI path to find the job\nstatus. For more information, see Describe Job (GET JobID).\nType: String\nDefault: None\nInitiate Job API Version 2012-06-01 495",
      "start_idx": 749925,
      "end_idx": 750812,
      "metadata": {
        "num_sentences": 10,
        "num_words": 137,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "jobParameters",
            "AWS account ID",
            "URI",
            "Request Body",
            "Response Headers",
            "job status",
            "Initiate Job",
            "JSON format",
            "API Version"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "jobParameters",
            "URI path",
            "Initiate Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Archival"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the Amazon S3 Glacier API for initiating jobs, including request body parameters, response structure, and headers.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the required parameters for initiating a job in Amazon S3 Glacier?",
            "What does the response of an initiated job in S3 Glacier include?",
            "How can I find the status of a job in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version",
          "Response Headers",
          "jobParameters",
          "Initiate Job",
          "URI",
          "Request Body",
          "JSON format",
          "Amazon S3 Glacier",
          "job status",
          "URI path",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_505",
      "text": "Amazon S3 Glacier Developer Guide\nHeader Description\nx-amz-job-id\nThe ID of the job. This value is also included as part of the Location\nheader.\nType: String\nDefault: None\nx-amz-job-\nThe path to the location of where the select results are stored.\noutput-path\nType: String\nDefault: None\nResponse Body\nThis operation does not return a response body.\nErrors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses.\nCode Description HTTP Status Type\nCode\nInsufficientCapaci Returned if there is insufficient 503 Service Server\ntyException capacity to process this exped Unavailab\nited request. This error only le\napplies to expedited retrieval\ns and not to standard or bulk\nretrievals.\nInitiate Job API Version 2012-06-01 496",
      "start_idx": 750814,
      "end_idx": 751708,
      "metadata": {
        "num_sentences": 9,
        "num_words": 140,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "API Parameters"
            ]
          },
          "keywords": [
            "x-amz-job-id",
            "x-amz-job-output-path",
            "Amazon S3 Glacier",
            "Error Responses",
            "InsufficientCapacityException",
            "Initiate Job",
            "API Version 2012-06-01",
            "Location header",
            "HTTP Status Code",
            "expedited retrievals"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amz-job-id",
            "x-amz-job-output-path",
            "InsufficientCapacityException",
            "Initiate Job API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Error Handling",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier API, including job parameters, error codes, and specific behaviors for expedited retrievals.",
          "intents": [
            "Reference",
            "Debug"
          ],
          "potential_questions": [
            "What is the purpose of the x-amz-job-id parameter?",
            "What errors can occur during expedited retrievals in Amazon S3 Glacier?",
            "How is the x-amz-job-output-path parameter used?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Error Responses",
          "Initiate Job",
          "HTTP Status Code",
          "Amazon S3 Glacier",
          "InsufficientCapacityException",
          "Location header",
          "expedited retrievals",
          "API Version 2012-06-01",
          "Initiate Job API",
          "x-amz-job-output-path",
          "x-amz-job-id"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_507",
      "text": "Amazon S3 Glacier Developer Guide\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nExample Request: Initiate an inventory retrieval job\nThe following request initiates an inventory retrieval job to get a list of archives from the\nexamplevault vault. The Format set to CSV in the body of the request indicates that the\ninventory is returned in CSV format.\nPOST /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nContent-Type: application/x-www-form-urlencoded\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\n{\n\"Type\": \"inventory-retrieval\",\n\"Description\": \"My inventory job\",\n\"Format\": \"CSV\",\n\"SNSTopic\": \"arn:aws:sns:us-west-2:111111111111:Glacier-InventoryRetrieval-topic-\nExample\"\n}\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nInitiate Job API Version 2012-06-01 498",
      "start_idx": 753214,
      "end_idx": 754804,
      "metadata": {
        "num_sentences": 3,
        "num_words": 111,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "API Request",
              "API Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "inventory retrieval",
            "vault",
            "CSV format",
            "job initiation",
            "API request",
            "API response",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "SNSTopic"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "examplevault",
            "AWS4-HMAC-SHA256",
            "SNSTopic",
            "Glacier-InventoryRetrieval-topic-Example"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of initiating an inventory retrieval job in Amazon S3 Glacier, including the API request and response details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I initiate an inventory retrieval job in Amazon S3 Glacier?",
            "What is the API request format for inventory retrieval in Glacier?",
            "What does the response of an inventory retrieval job initiation look like?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "AWS4-HMAC-SHA256",
          "job initiation",
          "SNSTopic",
          "Glacier-InventoryRetrieval-topic-Example",
          "vault",
          "CSV format",
          "Amazon S3 Glacier",
          "API response",
          "API request",
          "x-amz-glacier-version",
          "examplevault"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_509",
      "text": "Amazon S3 Glacier Developer Guide\nExample Response\nHTTP/1.1 202 Accepted\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nLocation: /111122223333/vaults/examplevault/jobs/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-id: HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID\nx-amz-job-output-path: test/HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID/\nRelated Sections\n\u2022 Describe Job (GET JobID)\n\u2022 Get Job Output (GET output)\n\u2022 Identity and Access Management for Amazon S3 Glacier\nList Jobs (GET jobs)\nDescription\nThis operation lists jobs for a vault, including jobs that are in-progress and jobs that have recently\nfinished.\nNote\nAmazon S3 Glacier (S3 Glacier) retains recently completed jobs for a period before deleting\nthem; however, it eventually removes completed jobs. The output of completed jobs can be\nretrieved. Retaining completed jobs for a period of time after they have completed enables\nyou to get a job output in the event you miss the job completion notification, or your first\nattempt to download it fails. For example, suppose that you start an archive retrieval job\nto download an archive. After the job completes, you start to download the archive but\nencounter a network error. In this scenario, you can retry and download the archive while\nthe job exists.\nList Jobs API Version 2012-06-01 500",
      "start_idx": 755995,
      "end_idx": 757509,
      "metadata": {
        "num_sentences": 8,
        "num_words": 188,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Response Example",
              "Operational Information"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault",
            "job",
            "archive retrieval",
            "job output",
            "API Version 2012-06-01",
            "completed jobs",
            "job completion notification",
            "List Jobs",
            "network error"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "x-amzn-RequestId",
            "x-amz-job-id",
            "x-amz-job-output-path",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides an example response and explanation for the 'List Jobs' operation in Amazon S3 Glacier, which lists jobs for a vault, including in-progress and recently completed jobs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I list jobs in an Amazon S3 Glacier vault?",
            "What is the format of the API response for the List Jobs operation?",
            "How long are completed jobs retained in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "x-amz-job-id",
          "completed jobs",
          "archive retrieval",
          "vault",
          "List Jobs",
          "job output",
          "x-amz-job-output-path",
          "job",
          "Amazon S3 Glacier",
          "job completion notification",
          "API Version 2012-06-01",
          "network error",
          "x-amzn-RequestId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_510",
      "text": "Amazon S3 Glacier Developer Guide\nThe List Jobs operation supports pagination. You should always check the response Marker\nfield. If there are no more jobs to list, the Marker field is set to null. If there are more jobs to list,\nthe Marker field is set to a non-null value, which you can use to continue the pagination of the\nlist. To return a list of jobs that begins at a specific job, set the marker request parameter to the\nMarker value for that job that you obtained from a previous List Jobs request.\nYou can set a maximum limit for the number of jobs returned in the response by specifying the\nlimit parameter in the request. The default limit is 50. The number of jobs returned might be\nfewer than the limit, but the number of returned jobs never exceeds the limit.\nAdditionally, you can filter the jobs list returned by specifying the optional statuscode parameter\nor completed parameter, or both. Using the statuscode parameter, you can specify to\nreturn only jobs that match either the InProgress, Succeeded, or Failed status. Using the\ncompleted parameter, you can specify to return only jobs that were completed (true) or jobs that\nwere not completed (false).\nRequests\nSyntax\nTo return a list of jobs of all types, send a GET request to the URI of the vault's jobs subresource.\nGET /AccountId/vaults/VaultName/jobs HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID of the account that owns the vault. You\ncan either specify an AWS account ID or optionally a single '-' (hyphen), in which case\nAmazon S3 Glacier uses the AWS account ID associated with the credentials used to sign\nthe request. If you use an account ID, do not include any hyphens ('-') in the ID.\nList Jobs API Version 2012-06-01 501",
      "start_idx": 757511,
      "end_idx": 759340,
      "metadata": {
        "num_sentences": 16,
        "num_words": 309,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Pagination",
              "Filtering"
            ]
          },
          "keywords": [
            "List Jobs",
            "pagination",
            "Marker field",
            "limit parameter",
            "statuscode parameter",
            "completed parameter",
            "Amazon S3 Glacier",
            "vault",
            "GET request",
            "AccountId"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs operation",
            "Marker field",
            "statuscode parameter",
            "completed parameter"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the List Jobs operation in Amazon S3 Glacier, including pagination, filtering, and request syntax for retrieving job lists from a vault's jobs subresource.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I paginate through the List Jobs operation in Amazon S3 Glacier?",
            "What parameters can I use to filter jobs in Amazon S3 Glacier?",
            "What is the syntax for making a List Jobs GET request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "completed parameter",
          "vault",
          "List Jobs",
          "List Jobs operation",
          "Amazon S3 Glacier",
          "pagination",
          "AccountId",
          "statuscode parameter",
          "limit parameter",
          "Marker field",
          "GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_511",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Parameters\nName Description Required\ncompleted No\nThe state of the jobs to return. You can specify true or\nfalse.\nType: Boolean\nConstraints: None\nlimit No\nThe maximum number of jobs to be returned. The default limit\nis 50. The number of jobs returned might be fewer than the\nspecified limit, but the number of returned jobs never exceeds\nthe limit.\nType: String\nConstraints: Minimum integer value of 1. Maximum integer\nvalue of 50.\nmarker No\nAn opaque string used for pagination that specifies the job at\nwhich the listing of jobs should begin. You get the marker\nvalue from a previous List Jobs response. You only need to\ninclude the marker if you are continuing the pagination of\nthe results started in a previous List Jobs request.\nType: String\nConstraints: None\nstatuscode No\nThe type of job status to return.\nType: String\nConstraints: One of the values InProgress , Succeeded ,\nor Failed.\nList Jobs API Version 2012-06-01 502",
      "start_idx": 759342,
      "end_idx": 760314,
      "metadata": {
        "num_sentences": 12,
        "num_words": 165,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Parameters",
              "Constraints",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Parameters",
            "completed",
            "limit",
            "marker",
            "statuscode",
            "Boolean",
            "String",
            "pagination",
            "List Jobs"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs API",
            "marker",
            "statuscode",
            "limit"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "AWS Documentation",
            "API Reference"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the request parameters for the List Jobs API in Amazon S3 Glacier, including their descriptions, types, and constraints.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the request parameters for the List Jobs API in Amazon S3 Glacier?",
            "What constraints apply to the 'limit' parameter in the List Jobs API?",
            "How is the 'marker' parameter used for pagination in the List Jobs API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "List Jobs API",
          "marker",
          "statuscode",
          "List Jobs",
          "completed",
          "limit",
          "Amazon S3 Glacier",
          "Request Parameters",
          "pagination",
          "Boolean",
          "String"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_512",
      "text": "Amazon S3 Glacier Developer Guide\nRequest Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nLocation: Location\nContent-Type: application/json\nContent-Length: Length\n{\n\"JobList\": [\n{\n\"Action\": \"string\",\n\"ArchiveId\": \"string\",\n\"ArchiveSHA256TreeHash\": \"string\",\n\"ArchiveSizeInBytes\": number,\n\"Completed\": boolean,\n\"CompletionDate\": \"string\",\n\"CreationDate\": \"string\",\n\"InventoryRetrievalParameters\": {\n\"EndDate\": \"string\",\n\"Format\": \"string\",\n\"Limit\": \"string\",\n\"Marker\": \"string\",\n\"StartDate\": \"string\"\n},\n\"InventorySizeInBytes\": number,\n\"JobDescription\": \"string\",\n\"JobId\": \"string\",\n\"JobOutputPath\": \"string\",\n\"OutputLocation\": {\n\"S3\": {\n\"AccessControlList\": [\nList Jobs API Version 2012-06-01 503",
      "start_idx": 760316,
      "end_idx": 761262,
      "metadata": {
        "num_sentences": 4,
        "num_words": 105,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Syntax",
              "Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Request Headers",
            "Response Headers",
            "Request Body",
            "JobList",
            "Action",
            "ArchiveId",
            "InventoryRetrievalParameters",
            "OutputLocation",
            "Content-Type"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "JobList",
            "InventoryRetrievalParameters",
            "OutputLocation",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "HTTP Protocol",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides reference information on request headers, response syntax, and the structure of responses for a specific API operation.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the response headers for this Amazon S3 Glacier API operation?",
            "What is the structure of the JobList response object?",
            "Does this operation require a request body?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "Response Headers",
          "Content-Type",
          "API Version 2012-06-01",
          "JobList",
          "Action",
          "Request Body",
          "Amazon S3 Glacier",
          "Request Headers",
          "InventoryRetrievalParameters",
          "OutputLocation",
          "ArchiveId"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_514",
      "text": "Amazon S3 Glacier Developer Guide\n\"FieldDelimiter\": \"string\",\n\"QuoteCharacter\": \"string\",\n\"QuoteEscapeCharacter\": \"string\",\n\"QuoteFields\": \"string\",\n\"RecordDelimiter\": \"string\"\n}\n}\n},\n\"SHA256TreeHash\": \"string\",\n\"SNSTopic\": \"string\",\n\"StatusCode\": \"string\",\n\"StatusMessage\": \"string\",\n\"Tier\": \"string\",\n\"VaultARN\": \"string\"\n}\n],\n\"Marker\": \"string\"\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nJobList\nA list of job objects. Each job object contains metadata describing the job.\nType: Array of GlacierJobDescription objects\nMarker\nAn opaque string that represents where to continue pagination of the results. You use the\nmarker value in a new List Jobs request to obtain more jobs in the list. If there are no more\njobs to list, this value is null.\nType: String\nList Jobs API Version 2012-06-01 505",
      "start_idx": 762093,
      "end_idx": 763085,
      "metadata": {
        "num_sentences": 9,
        "num_words": 139,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Structure"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "FieldDelimiter",
            "QuoteCharacter",
            "Response Headers",
            "Response Body",
            "SHA256TreeHash",
            "SNSTopic",
            "VaultARN",
            "Marker",
            "GlacierJobDescription"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "List Jobs API",
            "GlacierJobDescription",
            "VaultARN",
            "SNSTopic"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Serialization",
            "API Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for the Amazon S3 Glacier List Jobs API, including response headers, JSON fields, and pagination mechanisms.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What fields are included in the response body of the List Jobs API?",
            "How does pagination work in the List Jobs API?",
            "What is the purpose of the Marker field in the response?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "List Jobs API",
          "GlacierJobDescription",
          "Response Headers",
          "SHA256TreeHash",
          "SNSTopic",
          "QuoteCharacter",
          "VaultARN",
          "Amazon S3 Glacier",
          "Response Body",
          "FieldDelimiter",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_515",
      "text": "Amazon S3 Glacier Developer Guide\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following examples demonstrate how to return information about vault jobs. The first example\nreturns a list of two jobs, and the second example returns a subset of jobs.\nExample: Return All Jobs\nExample Request\nThe following GET request returns the jobs for a vault.\nGET /-/vaults/examplevault/jobs HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response includes an archive retrieval job and an inventory retrieval job that contains\na marker used to continue pagination of the vault inventory retrieval. The response also shows the\nMarker field set to null, which indicates there are no more jobs to list.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1444\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"BDfaUQul0dVzYwAMr8YSa_6_8abbhZq-\ni1oT69g8ByClfJyBgAGBkWl2QbF5os851P7Y7KdZDOHWJIn4rh1ZHaOYD3MgFhK_g0oDPesW34uHQoVGwoIqubf6BgUEfQm_wrU4Jlm3cA\",\n\"ArchiveSizeInBytes\": 1048576,\nList Jobs API Version 2012-06-01 506",
      "start_idx": 763087,
      "end_idx": 764607,
      "metadata": {
        "num_sentences": 7,
        "num_words": 159,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault jobs",
            "GET request",
            "x-amz-glacier-version",
            "Authorization",
            "archive retrieval",
            "inventory retrieval",
            "pagination",
            "Marker",
            "JobList"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault",
            "archive retrieval job",
            "inventory retrieval job",
            "HTTP/1.1"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation provides examples of API requests and responses for listing vault jobs in Amazon S3 Glacier, including archive and inventory retrieval jobs with pagination details.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a list of vault jobs in Amazon S3 Glacier?",
            "What does the response for an archive retrieval job look like?",
            "How is pagination handled in vault job listings?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "Authorization",
          "archive retrieval",
          "archive retrieval job",
          "inventory retrieval job",
          "vault jobs",
          "vault",
          "JobList",
          "Marker",
          "Amazon S3 Glacier",
          "pagination",
          "HTTP/1.1",
          "x-amz-glacier-version",
          "GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_517",
      "text": "Amazon S3 Glacier Developer Guide\n],\n\"Marker\": null\n}\nExample: Return a Partial List of Jobs\nExample Request\nThe following GET request returns the job specified by the marker parameter. Setting the limit\nparameter as 2 specifies that up to two jobs are returned.\nGET /-/vaults/examplevault/jobs?marker=HkF9p6o7yjhFx-\nK3CGl6fuSm6VzW9T7esGQfco8nUXVYwS0jlb5gq1JZ55yHgt5vP54ZShjoQzQVVh7vEXAMPLEjobID&limit=2\nHTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nThe following response shows two jobs returned and the Marker field set to a non-null value that\ncan be used to continue pagination of the job list.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 1744\n{\n\"JobList\": [\n{\n\"Action\": \"ArchiveRetrieval\",\n\"ArchiveId\": \"58-3KpZfcMPUznvMZNPaKyJx9wODCsWTnqcjtx2CjKZ6b-\nXgxEuA8yvZOYTPQfd7gWR4GRm2XR08gcnWbLV4VPV_kDWtZJKi0TFhKKVPzwrZnA4-\nFXuIBfViYUIVveeiBE51FO4bvg\",\n\"ArchiveSizeInBytes\": 8388608,\n\"ArchiveSHA256TreeHash\":\n\"106086b256ddf0fedf3d9e72f461d5983a2566247ebe7e1949246bc61359b4f4\",\n\"Completed\": true,\nList Jobs API Version 2012-06-01 508",
      "start_idx": 766204,
      "end_idx": 767670,
      "metadata": {
        "num_sentences": 4,
        "num_words": 126,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "API Usage",
              "Pagination"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "GET request",
            "Marker",
            "limit parameter",
            "job list",
            "ArchiveRetrieval",
            "SHA256TreeHash",
            "API Version",
            "pagination"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Marker",
            "ArchiveId",
            "x-amz-Date",
            "Authorization"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Data Retrieval",
            "Pagination"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "API Gateway"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of using the Amazon S3 Glacier API to retrieve a partial list of jobs with pagination support using the Marker parameter and limit specification.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve a partial list of jobs in Amazon S3 Glacier?",
            "What is the purpose of the Marker parameter in the Amazon S3 Glacier API?",
            "How do I specify a limit for the number of jobs returned in a GET request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "API Version",
          "SHA256TreeHash",
          "ArchiveId",
          "x-amz-Date",
          "Developer Guide",
          "GET request",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "pagination",
          "limit parameter",
          "job list",
          "Marker"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_520",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nRequired: no\nFieldDelimiter\nA single character used to separate individual fields from each other within a record. The\ncharacter must be a \\n, \\r, or an ASCII character in the range 32\u2013126. The default is a comma\n(,).\nType: String\nDefault: ,\nRequired: no\nFileHeaderInfo\nA value that describes what to do with the first line of the input.\nType: String\nValid Values: Use | Ignore | None\nRequired: no\nQuoteCharacter\nA single character used as an escape character where the field delimiter is part of the value.\nType: String\nRequired: no\nQuoteEscapeCharacter\nA single character used for escaping the quotation-mark character inside an already escaped\nvalue.\nType: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other.\nCSVInput API Version 2012-06-01 511",
      "start_idx": 770012,
      "end_idx": 770862,
      "metadata": {
        "num_sentences": 8,
        "num_words": 135,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Specification"
            ]
          },
          "keywords": [
            "FieldDelimiter",
            "FileHeaderInfo",
            "QuoteCharacter",
            "QuoteEscapeCharacter",
            "RecordDelimiter",
            "CSVInput",
            "Amazon S3 Glacier",
            "API Version",
            "ASCII character",
            "Valid Values"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CSVInput",
            "API Version 2012-06-01",
            "FieldDelimiter",
            "FileHeaderInfo"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Data Processing",
          "secondary_categories": [
            "Cloud Storage",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "CSVInput"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines configuration options for handling CSV input with Amazon S3 Glacier, including field delimiters, file headers, and escape characters.",
          "intents": [
            "Reference",
            "Configuration"
          ],
          "potential_questions": [
            "What is the default field delimiter in CSVInput?",
            "How can I configure the FileHeaderInfo for Amazon S3 Glacier?",
            "What characters are valid for the RecordDelimiter setting?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Data Processing]",
        "tf_idf_keywords": [
          "API Version",
          "API Version 2012-06-01",
          "Valid Values",
          "QuoteCharacter",
          "Amazon S3 Glacier",
          "ASCII character",
          "FileHeaderInfo",
          "CSVInput",
          "RecordDelimiter",
          "FieldDelimiter",
          "QuoteEscapeCharacter"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_522",
      "text": "Amazon S3 Glacier Developer Guide\nValid Values: ALWAYS | ASNEEDED\nType: String\nRequired: no\nRecordDelimiter\nA single character used to separate individual records from each other.\nType: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nEncryption\nContains information about the encryption used to store the job results in Amazon S3.\nContents\nEncryption\nThe server-side encryption algorithm used when storing job results in Amazon S3. The default is\nno encryption.\nType: String\nValid Values: aws:kms | AES256\nRequired: no\nKMSContext\nOptional. If the encryption type is aws:kms, you can use this value to specify the encryption\ncontext for the job results.\nType: String\nEncryption API Version 2012-06-01 513",
      "start_idx": 771636,
      "end_idx": 772348,
      "metadata": {
        "num_sentences": 7,
        "num_words": 109,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Parameters",
              "Encryption"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "encryption",
            "RecordDelimiter",
            "KMSContext",
            "server-side encryption",
            "aws:kms",
            "AES256",
            "job results",
            "API Version",
            "ALWAYS"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Encryption API",
            "KMSContext",
            "aws:kms",
            "AES256"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Security",
            "API Configuration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides reference details for configuring encryption and record delimiters when working with Amazon S3 Glacier jobs. It specifies valid values, types, and optional parameters for API usage.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the valid encryption types for Amazon S3 Glacier job results?",
            "What is the purpose of the KMSContext parameter?",
            "How do I configure record delimiters in Amazon S3 Glacier jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "API Version",
          "Encryption API",
          "aws:kms",
          "RecordDelimiter",
          "Amazon S3 Glacier",
          "AES256",
          "encryption",
          "server-side encryption",
          "job results",
          "ALWAYS",
          "KMSContext"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_523",
      "text": "Amazon S3 Glacier Developer Guide\nRequired: no\nKMSKeyId\nThe AWS Key Management Service (AWS KMS) key ID to use for object encryption.\nType: String\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nGlacierJobDescription\nContains the description of an Amazon S3 Glacier (S3 Glacier) job.\nContents\nAction\nThe job type. It is either ArchiveRetrieval, InventoryRetrieval, or Select.\nType: String\nArchiveId\nThe archive ID requested for a select or archive retrieval job. Otherwise, this field is null.\nType: String\nArchiveSHA256TreeHash\nThe SHA256 tree hash of the entire archive for an archive retrieval. For inventory retrieval jobs,\nthis field is null.\nType: String\nArchiveSizeInBytes\nFor an ArchiveRetrieval job, this is the size in bytes of the archive being requested for\ndownload. For the InventoryRetrieval job, the value is null.\nGlacierJobDescription API Version 2012-06-01 514",
      "start_idx": 772350,
      "end_idx": 773231,
      "metadata": {
        "num_sentences": 11,
        "num_words": 132,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS KMS",
            "object encryption",
            "ArchiveRetrieval",
            "InventoryRetrieval",
            "Select",
            "SHA256 tree hash",
            "ArchiveId",
            "ArchiveSizeInBytes",
            "GlacierJobDescription"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Key Management Service",
            "GlacierJobDescription",
            "ArchiveRetrieval",
            "InventoryRetrieval"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Encryption",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS Key Management Service"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about Amazon S3 Glacier's job description, including parameters for encryption and job types such as ArchiveRetrieval, InventoryRetrieval, and Select.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the job types available in Amazon S3 Glacier?",
            "How is object encryption handled in Amazon S3 Glacier?",
            "What parameters are included in GlacierJobDescription?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "GlacierJobDescription",
          "AWS Key Management Service",
          "ArchiveSizeInBytes",
          "Amazon S3 Glacier",
          "ArchiveRetrieval",
          "SHA256 tree hash",
          "InventoryRetrieval",
          "Select",
          "AWS KMS",
          "ArchiveId",
          "object encryption"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_524",
      "text": "Amazon S3 Glacier Developer Guide\nType: Number\nCompleted\ntrue if the job is completed; false otherwise.\nType: Boolean\nCompletionDate\nThe date when the job completed.\nThe Universal Coordinated Time (UTC) time that the job request completed. While the job is in\nprogress, the value is null.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nCreationDate\nThe Universal Coordinated Time (UTC) date the job started.\nType: A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval.\nType: InventoryRetrievalJobInput object\nInventorySizeInBytes\nFor an InventoryRetrieval job, this is the size in bytes of the inventory requested for\ndownload. For the ArchiveRetrieval or Select job, the value is null.\nType: Number\nJobDescription\nThe job description that you provided when you initiated the job.\nType: String\nJobId\nThe ID that identifies the job in S3 Glacier.\nGlacierJobDescription API Version 2012-06-01 515",
      "start_idx": 773233,
      "end_idx": 774297,
      "metadata": {
        "num_sentences": 13,
        "num_words": 152,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Descriptions"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JobId",
            "CompletionDate",
            "CreationDate",
            "InventoryRetrievalParameters",
            "InventorySizeInBytes",
            "ISO 8601",
            "UTC",
            "Boolean",
            "String"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InventoryRetrievalJobInput",
            "GlacierJobDescription",
            "JobId",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides detailed descriptions of fields and parameters related to job management in Amazon S3 Glacier, including job completion status, timestamps, and inventory retrieval details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What does the CompletionDate field represent in S3 Glacier jobs?",
            "What is the format for specifying dates in S3 Glacier job fields?",
            "What input parameters are used for inventory retrieval jobs in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "CreationDate",
          "UTC",
          "ISO 8601",
          "InventoryRetrievalJobInput",
          "GlacierJobDescription",
          "JobId",
          "InventorySizeInBytes",
          "Amazon S3 Glacier",
          "CompletionDate",
          "InventoryRetrievalParameters",
          "API Version 2012-06-01",
          "Boolean",
          "String"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_525",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nJobOutputPath\nContains the job output location.\nType: String\nOutputLocation\nAn object that contains information about the location where the select job results and errors\nare stored.\nType: OutputLocation object\nRetrievalByteRange\nThe retrieved byte range for archive retrieval jobs in the form\n\"StartByteValue-EndByteValue.\" If no range was specified in the archive retrieval, then the\nwhole archive is retrieved and StartByteValue equals 0 and EndByteValue equals the size of the\narchive minus 1. For inventory retrieval jobs, this field is null.\nType: String\nSelectParameters\nAn object that contains information about the parameters used for a select.\nType: SelectParameters object\nSHA256TreeHash\nThe SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST\njobs) request for an archive specified a tree-hash aligned range, then this field returns a value.\nFor more information about tree-hash alignment for archive range retrievals, see Receiving\nChecksums When Downloading Data.\nFor the specific case in which the whole archive is retrieved, this value is the same as the\nArchiveSHA256TreeHash value.\nThis field is null in the following situations:\n\u2022 Archive retrieval jobs that specify a range that is not tree-hash aligned.\n\u2022 Archival jobs that specify a range that is equal to the whole archive and the job status is\nInProgress.\nGlacierJobDescription API Version 2012-06-01 516",
      "start_idx": 774299,
      "end_idx": 775761,
      "metadata": {
        "num_sentences": 13,
        "num_words": 220,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Description",
              "Field Explanation"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "JobOutputPath",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SHA256TreeHash",
            "archive retrieval",
            "tree-hash alignment",
            "inventory retrieval",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "OutputLocation object",
            "SelectParameters object",
            "SHA256TreeHash",
            "ArchiveSHA256TreeHash"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage APIs",
          "secondary_categories": [
            "Data Retrieval",
            "Checksum Validation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides a reference for various parameters and fields associated with Amazon S3 Glacier jobs, including output locations, byte ranges, and checksum details.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the JobOutputPath field?",
            "How is the SHA256 tree hash value used in archive retrieval jobs?",
            "What does the RetrievalByteRange field represent?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage APIs]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "archive retrieval",
          "SHA256TreeHash",
          "ArchiveSHA256TreeHash",
          "JobOutputPath",
          "OutputLocation object",
          "Amazon S3 Glacier",
          "tree-hash alignment",
          "API Version 2012-06-01",
          "OutputLocation",
          "SelectParameters object",
          "SelectParameters",
          "RetrievalByteRange"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_529",
      "text": "Amazon S3 Glacier Developer Guide\nContents\nCSV\nAn object that describes the serialization of a CSV-encoded object.\nType: CSVInput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nInventoryRetrievalJobInput\nProvides options for specifying a range inventory retrieval job.\nContents\nEndDate\nThe end of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated before this date.\nValid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nType: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nRequired: no\nFormat\nThe output format for the vault inventory list, which is set by the Initiate Job (POST jobs)\nrequest when initiating a job to retrieve a vault inventory.\nValid Values: CSV | JSON\nRequired: no\nInventoryRetrievalJobInput API Version 2012-06-01 520",
      "start_idx": 777493,
      "end_idx": 778449,
      "metadata": {
        "num_sentences": 8,
        "num_words": 138,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CSVInput",
            "InventoryRetrievalJobInput",
            "vault inventory",
            "ISO 8601 date format",
            "Initiate Job",
            "POST jobs",
            "end date",
            "output format",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CSVInput",
            "InventoryRetrievalJobInput",
            "ISO 8601",
            "Initiate Job"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Serialization",
            "API Design"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This section of the Amazon S3 Glacier Developer Guide provides reference details for the CSVInput and InventoryRetrievalJobInput objects, including their parameters and valid values.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the valid values for the InventoryRetrievalJobInput end date?",
            "What output formats are supported for vault inventory retrieval?",
            "How to specify a date range for an inventory retrieval job?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalJobInput",
          "ISO 8601",
          "Initiate Job",
          "vault inventory",
          "output format",
          "Amazon S3 Glacier",
          "POST jobs",
          "CSVInput",
          "API Version 2012-06-01",
          "ISO 8601 date format",
          "end date"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_530",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nLimit\nThe maximum number of inventory items that can be returned for each vault inventory retrieval\nrequest.\nValid Values: An integer value greater than or equal to 1.\nType: String\nRequired: no\nMarker\nAn opaque string that represents where to continue pagination of the vault inventory retrieval\nresults. You use this marker in a new Initiate Job request to obtain additional inventory\nitems. If there are no more inventory items, this value is null.\nType: String\nRequired: no\nStartDate\nThe start of the date range, in UTC time, for a vault inventory retrieval that includes archives\ncreated on or after this date.\nValid Values: A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nType: String. A string representation in the ISO 8601 date format (YYYY-MM-DDThh:mm:ssTZD)\nin seconds, for example 2013-03-20T17:03:43Z.\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\njobParameters\nProvides options for defining a job.\njobParameters API Version 2012-06-01 521",
      "start_idx": 778451,
      "end_idx": 779528,
      "metadata": {
        "num_sentences": 11,
        "num_words": 164,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "vault inventory",
            "Initiate Job",
            "pagination",
            "ISO 8601",
            "UTC time",
            "inventory retrieval",
            "jobParameters",
            "POST jobs",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "vault inventory",
            "Initiate Job",
            "ISO 8601",
            "jobParameters"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the parameters and options available for vault inventory retrieval in Amazon S3 Glacier, including pagination, date ranges, and job initiation.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the maximum number of inventory items that can be retrieved in a single request?",
            "How can I continue pagination for vault inventory retrieval results?",
            "What is the required date format for specifying a date range in inventory retrieval?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "ISO 8601",
          "jobParameters",
          "Initiate Job",
          "vault inventory",
          "UTC time",
          "Amazon S3 Glacier",
          "pagination",
          "POST jobs",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_531",
      "text": "Amazon S3 Glacier Developer Guide\nContents\nArchiveId\nThe ID of the archive that you want. This field is required if the Type field is set to select or\narchive-retrieval. An error occurs if you specify this field for an inventory retrieval job\nrequest.\nValid Values: Must be a valid archive ID that you obtained from a previous request to Amazon S3\nGlacier (S3 Glacier).\nType: String\nRequired: Yes when Type is set to select or archive-retrieval.\nDescription\nThe optional description for the job.\nValid Values: The description must be less than or equal to 1,024 bytes. The allowable\ncharacters are 7-bit ASCII without control codes\u2014specifically, ASCII values 32\u2013126 decimal or\n0x20\u20130x7E hexadecimal.\nType: String\nRequired: no\nFormat\n(Optional) The output format, when initiating a job to retrieve a vault inventory. If you are\ninitiating an inventory job and don't specify a Format field, JSON is the default format.\nValid Values: CSV | JSON\nType: String\nRequired: no\nInventoryRetrievalParameters\nInput parameters used for a range inventory retrieval.\nType: InventoryRetrievalJobInput object\njobParameters API Version 2012-06-01 522",
      "start_idx": 779530,
      "end_idx": 780662,
      "metadata": {
        "num_sentences": 12,
        "num_words": 174,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Field Description",
              "Parameter Specification"
            ]
          },
          "keywords": [
            "ArchiveId",
            "Type",
            "Description",
            "Format",
            "InventoryRetrievalParameters",
            "vault inventory",
            "Amazon S3 Glacier",
            "jobParameters",
            "JSON",
            "CSV"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "ArchiveId",
            "InventoryRetrievalParameters",
            "InventoryRetrievalJobInput",
            "jobParameters"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the parameters required for initiating specific jobs in Amazon S3 Glacier, including archive retrieval, inventory retrieval, and job descriptions.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the valid format for the ArchiveId field?",
            "What are the valid output formats for a vault inventory retrieval job?",
            "Is the Description field required for job initiation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "InventoryRetrievalJobInput",
          "CSV",
          "jobParameters",
          "Description",
          "vault inventory",
          "Amazon S3 Glacier",
          "Type",
          "Format",
          "InventoryRetrievalParameters",
          "ArchiveId",
          "JSON"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_532",
      "text": "Amazon S3 Glacier Developer Guide\nRequired: no\nOutputLocation\nAn object that contains information about the location where the select job results are stored.\nType: OutputLocation object\nRequired: Yes, for select jobs.\nRetrievalByteRange\nThe byte range to retrieve for an archive-retrieval, in the form\n\"StartByteValue-EndByteValue\". If this field isn't specified, the whole archive is retrieved.\nIf this field is specified, the byte range must be megabyte (1024*1024) aligned. Megabyte-\naligned means that StartByteValue must be divisible by 1 MB, and EndByteValue plus 1 must be\ndivisible by 1 MB or be the end of the archive specified as the archive byte size value minus 1. If\nRetrievalByteRange is not megabyte-aligned, this operation returns a 400 response.\nAn error occurs if you specify this field for an inventory-retrieval or select job request.\nType: String\nRequired: no\nSelectParameters\nAn object that contains information about the parameters used for a select.\nType: SelectParameters object\nRequired: no\nSNSTopic\nThe Amazon Resource Name (ARN) of the Amazon SNS topic where S3 Glacier sends a\nnotification when the job is completed and output is ready for you to download. The specified\ntopic publishes the notification to its subscribers.\nThe SNS topic must exist. If it doesn't, S3 Glacier doesn't create it for you. Additionally, the\nSNS topic must have a policy that allows the account that created the job to publish messages\nto the topic. For information about SNS topic names, see CreateTopic in the Amazon Simple\nNotification Service API Reference.\njobParameters API Version 2012-06-01 523",
      "start_idx": 780664,
      "end_idx": 782274,
      "metadata": {
        "num_sentences": 16,
        "num_words": 249,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Retrieval"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "OutputLocation",
            "RetrievalByteRange",
            "SelectParameters",
            "SNSTopic",
            "ARN",
            "megabyte-aligned",
            "archive-retrieval",
            "notification",
            "job parameters"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "OutputLocation",
            "SelectParameters",
            "SNSTopic",
            "Amazon SNS"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Notification Systems"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "Amazon SNS"
          ],
          "mentioned_tools": [
            "Amazon Simple Notification Service API"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details about the parameters and configurations for jobs in Amazon S3 Glacier, including retrieval byte ranges, output locations, and SNS topic notifications.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of the OutputLocation object in Amazon S3 Glacier?",
            "How should RetrievalByteRange be formatted for archive-retrieval jobs?",
            "What are the requirements for specifying an SNS topic in job parameters?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "archive-retrieval",
          "Amazon SNS",
          "SNSTopic",
          "ARN",
          "Amazon S3 Glacier",
          "megabyte-aligned",
          "job parameters",
          "OutputLocation",
          "SelectParameters",
          "notification",
          "RetrievalByteRange"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_533",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nRequired: no\nTier\nThe tier to use for a select or an archive retrieval job. Standard is the default value used.\nValid Values: Expedited | Standard | Bulk\nType: String\nRequired: no\nType\nThe job type. You can initiate a job to perform a select query on an archive, retrieve an archive,\nor get an inventory of a vault.\nValid Values: select | archive-retrieval | inventory-retrieval\nType: String\nRequired: yes\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputLocation\nContains information about the location where the job results and errors are stored.\nContents\nS3\nAn object that describes an Amazon S3 location to receive the results of the restore request.\nType: S3Location\nRequired: yes\nOutputLocation API Version 2012-06-01 524",
      "start_idx": 782276,
      "end_idx": 783044,
      "metadata": {
        "num_sentences": 7,
        "num_words": 125,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Documentation",
              "API Parameters",
              "Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Tier",
            "Job Type",
            "OutputLocation",
            "S3Location",
            "archive retrieval",
            "inventory retrieval",
            "select query",
            "Expedited",
            "Standard"
          ],
          "entities": [
            "Amazon S3",
            "S3Location",
            "API Version 2012-06-01",
            "vault",
            "POST jobs"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "API"
          ]
        },
        "semantic": {
          "summary": "This documentation describes parameters and options for initiating jobs in Amazon S3 Glacier, including job types, retrieval tiers, and output locations for results.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the valid values for the tier in an Amazon S3 Glacier job?",
            "What job types can be initiated in Amazon S3 Glacier?",
            "Where are the results of an Amazon S3 Glacier job stored?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "inventory retrieval",
          "archive retrieval",
          "select query",
          "Expedited",
          "Amazon S3",
          "vault",
          "Tier",
          "S3Location",
          "Job Type",
          "Amazon S3 Glacier",
          "POST jobs",
          "API Version 2012-06-01",
          "OutputLocation",
          "Standard"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_534",
      "text": "Amazon S3 Glacier Developer Guide\nMore Info\n\u2022 Initiate Job (POST jobs)\nOutputSerialization\nDescribes how the output is serialized.\nContents\nCSV\nAn object that describes the serialization of the comma-separated values (CSV)-encoded query\nresults.\nType: CSVOutput object\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nS3Location\nContains information about the location in Amazon S3 where the job results are stored.\nContents\nAccessControlList\nA list of grants that control access to the stored results.\nType: Array of Grant objects\nRequired: no\nBucketName\nThe name of the Amazon S3 bucket where the job results are stored. The bucket must be in the\nsame AWS Region as the vault that contains the input archive object.\nOutputSerialization API Version 2012-06-01 525",
      "start_idx": 783046,
      "end_idx": 783811,
      "metadata": {
        "num_sentences": 7,
        "num_words": 118,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Data Serialization",
              "Storage Configuration"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "OutputSerialization",
            "CSVOutput",
            "S3Location",
            "AccessControlList",
            "BucketName",
            "Grant objects",
            "AWS Region",
            "vault",
            "job results"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CSVOutput object",
            "S3Location",
            "Grant objects",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Serialization",
            "Access Control"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains the serialization of query results in Amazon S3 Glacier and details the storage configuration for job results, including access control and bucket requirements.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "How are query results serialized in Amazon S3 Glacier?",
            "What is the configuration for storing job results in Amazon S3?",
            "What access controls are available for stored results?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "BucketName",
          "vault",
          "Grant objects",
          "S3Location",
          "AWS Region",
          "Amazon S3 Glacier",
          "job results",
          "OutputSerialization",
          "AccessControlList",
          "CSVOutput",
          "CSVOutput object"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_535",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nRequired: yes\nCannedACL\nThe canned access control list (ACL) to apply to the job results.\nType: String\nValid Values: private | public-read | public-read-write | aws-exec-read |\nauthenticated-read | bucket-owner-read | bucket-owner-full-control\nRequired: no\nEncryption\nAn object that contains information about the encryption used to store the job results in\nAmazon S3.\nType: Encryption object\nRequired: no\nPrefix\nThe prefix that is prepended to the results for this request. The maximum length for the prefix\nis 512 bytes.\nType: String\nRequired: yes\nStorageClass\nThe class of storage used to store the job results.\nType: String\nValid Values: STANDARD | REDUCED_REDUNDANCY | STANDARD_IA\nRequired: no\nTagging\nThe tag set that is applied to the job results.\nS3Location API Version 2012-06-01 526",
      "start_idx": 783813,
      "end_idx": 784652,
      "metadata": {
        "num_sentences": 7,
        "num_words": 127,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Configuration",
              "Parameters"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "CannedACL",
            "Encryption",
            "Prefix",
            "StorageClass",
            "Tagging",
            "job results",
            "access control list",
            "valid values",
            "S3Location API"
          ],
          "entities": [
            "Amazon S3",
            "S3 Glacier",
            "CannedACL",
            "Encryption object",
            "S3Location API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Configuration",
          "secondary_categories": [
            "Access Control",
            "Data Encryption"
          ],
          "mentioned_services": [
            "Amazon S3",
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on configuring job results in Amazon S3 Glacier, including parameters like access control lists, encryption, and storage class options.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the valid values for the CannedACL parameter in Amazon S3 Glacier?",
            "How can I apply encryption to job results in Amazon S3?",
            "What is the maximum length allowed for the prefix in a request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Configuration]",
        "tf_idf_keywords": [
          "StorageClass",
          "S3Location API",
          "Encryption",
          "Amazon S3",
          "access control list",
          "Encryption object",
          "CannedACL",
          "Prefix",
          "Amazon S3 Glacier",
          "job results",
          "Tagging",
          "valid values",
          "S3 Glacier"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_536",
      "text": "Amazon S3 Glacier Developer Guide\nType: String to string map\nRequired: no\nUserMetadata\nA map of metadata to store with the job results in Amazon S3.\nType: String to string map\nRequired: no\nMore Info\n\u2022 Initiate Job (POST jobs)\nSelectParameters\nContains information about the parameters used for the select.\nContents\nExpression\nThe expression that is used to select the object. The expression must not exceed the quota of\n128,000 characters.\nType: String\nRequired: yes\nExpressionType\nThe type of the provided expression, for example SQL.\nValid Values: SQL\nType: String\nRequired: yes\nSelectParameters API Version 2012-06-01 527",
      "start_idx": 784654,
      "end_idx": 785278,
      "metadata": {
        "num_sentences": 6,
        "num_words": 97,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Parameter Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "UserMetadata",
            "SelectParameters",
            "Expression",
            "ExpressionType",
            "SQL",
            "API Version",
            "POST jobs",
            "metadata"
          ],
          "entities": [
            "Amazon S3",
            "S3 Glacier",
            "API Version 2012-06-01",
            "ExpressionType",
            "SelectParameters"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Selection",
            "Metadata Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "SQL"
          ]
        },
        "semantic": {
          "summary": "This documentation outlines the parameters and metadata options for initiating jobs and selecting data in Amazon S3 Glacier using API calls, including expressions and metadata mapping.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What metadata can be stored with job results in Amazon S3 Glacier?",
            "What are the valid values for ExpressionType in SelectParameters?",
            "How do I initiate a job in Amazon S3 Glacier using POST jobs?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Expression",
          "API Version",
          "ExpressionType",
          "Amazon S3",
          "API Version 2012-06-01",
          "Developer Guide",
          "S3 Glacier",
          "Amazon S3 Glacier",
          "POST jobs",
          "UserMetadata",
          "SQL",
          "metadata",
          "SelectParameters"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_537",
      "text": "Amazon S3 Glacier Developer Guide\nInputSerialization\nDescribes the serialization format of the object in the select.\nType: InputSerialization object\nRequired: no\nOutputSerialization\nDescribes how the results of the select job are serialized.\nRequired: no\nType: OutputSerialization object\nMore Info\n\u2022 Initiate Job (POST jobs)\nData Retrieval Operations\nThe following are the data retrieval\u2013related operations available in S3 Glacier.\nTopics\n\u2022 Get Data Retrieval Policy (GET policy)\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\n\u2022 Set Data Retrieval Policy (PUT policy)\nGet Data Retrieval Policy (GET policy)\nDescription\nThis operation returns the current data retrieval policy for the AWS account and AWS Region\nspecified in the GET request. For more information about data retrieval policies, see S3 Glacier Data\nRetrieval Policies.\nData Retrieval Operations API Version 2012-06-01 528",
      "start_idx": 785280,
      "end_idx": 786233,
      "metadata": {
        "num_sentences": 6,
        "num_words": 132,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Operation Description",
              "Serialization"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "InputSerialization",
            "OutputSerialization",
            "data retrieval policy",
            "provisioned capacity",
            "Initiate Job",
            "GET policy",
            "POST provisioned-capacity",
            "PUT policy",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "InputSerialization object",
            "OutputSerialization object",
            "AWS account",
            "AWS Region"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "Data Serialization",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This document provides details on data retrieval operations and serialization formats for Amazon S3 Glacier, including descriptions of InputSerialization and OutputSerialization objects and related API operations.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the purpose of InputSerialization and OutputSerialization in S3 Glacier?",
            "How can I retrieve the data retrieval policy for my AWS account?",
            "What operations are available for managing provisioned capacity in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage API]",
        "tf_idf_keywords": [
          "AWS account",
          "InputSerialization",
          "data retrieval policy",
          "provisioned capacity",
          "Initiate Job",
          "InputSerialization object",
          "AWS Region",
          "Amazon S3 Glacier",
          "OutputSerialization",
          "POST provisioned-capacity",
          "GET policy",
          "API Version 2012-06-01",
          "OutputSerialization object",
          "PUT policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_538",
      "text": "Amazon S3 Glacier Developer Guide\nRequests\nTo return the current data retrieval policy, send an HTTP GET request to the data retrieval policy\nURI as shown in the following syntax example.\nSyntax\nGET /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nSyntax\nHTTP/1.1 200 OK\nGet Data Retrieval Policy API Version 2012-06-01 529",
      "start_idx": 786235,
      "end_idx": 787379,
      "metadata": {
        "num_sentences": 10,
        "num_words": 174,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Documentation",
              "HTTP Request Syntax"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "HTTP GET request",
            "AccountId",
            "request headers",
            "request parameters",
            "request body",
            "response syntax",
            "x-amz-glacier-version",
            "Authorization"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AccountId",
            "AWS account ID",
            "SignatureValue",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "HTTP Protocol"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to retrieve the current data retrieval policy from Amazon S3 Glacier using an HTTP GET request, including syntax, headers, and response structure.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How can I retrieve the data retrieval policy from Amazon S3 Glacier?",
            "What is the syntax for an HTTP GET request to Amazon S3 Glacier?",
            "What headers are required for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "data retrieval policy",
          "request headers",
          "request parameters",
          "glacier.Region.amazonaws.com",
          "response syntax",
          "Amazon S3 Glacier",
          "AccountId",
          "SignatureValue",
          "AWS account ID",
          "x-amz-glacier-version",
          "request body",
          "HTTP GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_539",
      "text": "Amazon S3 Glacier Developer Guide\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: length\n{\n\"Policy\":\n{\n\"Rules\":[\n{\n\"BytesPerHour\": Number,\n\"Strategy\": String\n}\n]\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nBytesPerHour\nThe maximum number of bytes that can be retrieved in an hour.\nThis field will be present only if the value of the Strategy field is BytesPerHour.\nType: Number\nRules\nThe policy rule. Although this is a list type, currently there will be only one rule, which contains\na Strategy field and optionally a BytesPerHour field.\nType: Array\nStrategy\nThe type of data retrieval policy.\nGet Data Retrieval Policy API Version 2012-06-01 530",
      "start_idx": 787381,
      "end_idx": 788271,
      "metadata": {
        "num_sentences": 9,
        "num_words": 134,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Response Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Developer Guide",
            "Response Headers",
            "Response Body",
            "BytesPerHour",
            "Strategy",
            "Policy",
            "Rules",
            "Data Retrieval",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Policy",
            "Rules",
            "BytesPerHour",
            "Strategy"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about the Get Data Retrieval Policy API for Amazon S3 Glacier, including response headers and JSON fields in the response body that define retrieval policies and strategies.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the structure of the Get Data Retrieval Policy API response?",
            "What does the BytesPerHour field represent in Amazon S3 Glacier?",
            "How is the Strategy field used in data retrieval policies?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Strategy",
          "Response Headers",
          "BytesPerHour",
          "Data Retrieval",
          "Developer Guide",
          "Amazon S3 Glacier",
          "Response Body",
          "Rules",
          "API Version 2012-06-01",
          "Policy"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_540",
      "text": "Amazon S3 Glacier Developer Guide\nType: String\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console. FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example demonstrates how to get a data retrieval policy.\nExample Request\nIn this example, a GET request is sent to the URI of a policy's location.\nGET /-/policies/data-retrieval HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nA successful response shows the data retrieval policy in the body of the response in JSON format.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:00:00 GMT\nContent-Type: application/json\nContent-Length: 85\n{\n\"Policy\":\n{\nGet Data Retrieval Policy API Version 2012-06-01 531",
      "start_idx": 788273,
      "end_idx": 789681,
      "metadata": {
        "num_sentences": 10,
        "num_words": 163,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Example",
              "Procedural"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "data retrieval policy",
            "BytesPerHour",
            "FreeTier",
            "None",
            "GET request",
            "API version 2012-06-01",
            "Error Responses",
            "JSON format",
            "Max Retrieval Rate"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "BytesPerHour",
            "FreeTier",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Usage",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS SDK",
            "AWS CLI"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to configure data retrieval policies in Amazon S3 Glacier, including examples of API requests and responses.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I configure a data retrieval policy in Amazon S3 Glacier?",
            "What are the valid values for data retrieval policies?",
            "How do I send a GET request to retrieve a policy in Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "AWS4-HMAC-SHA256",
          "BytesPerHour",
          "data retrieval policy",
          "Error Responses",
          "None",
          "JSON format",
          "Amazon S3 Glacier",
          "FreeTier",
          "API version 2012-06-01",
          "Max Retrieval Rate",
          "x-amz-glacier-version",
          "GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_541",
      "text": "Amazon S3 Glacier Developer Guide\n\"Rules\":[\n{\n\"BytesPerHour\":10737418240,\n\"Strategy\":\"BytesPerHour\"\n}\n]\n}\n}\nRelated Sections\n\u2022 Set Data Retrieval Policy (PUT policy)\n\u2022 Initiate Job (POST jobs)\nList Provisioned Capacity (GET provisioned-capacity)\nThis operation lists the provisioned capacity units for the specified AWS account. For more\ninformation about provisioned capacity, see Archive Retrieval Options.\nA provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date. The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second.\nIf the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28. You can see this functionality in the Example\nResponse.\nRequest Syntax\nTo list the provisioned retrieval capacity for an account, send an HTTP GET request to the\nprovisioned-capacity URI as shown in the following syntax example.\nGET /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nList Provision Capacity API Version 2012-06-01 532",
      "start_idx": 789683,
      "end_idx": 790975,
      "metadata": {
        "num_sentences": 10,
        "num_words": 198,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Syntax Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "provisioned capacity",
            "retrieval policy",
            "BytesPerHour",
            "HTTP GET request",
            "provisioned-capacity URI",
            "expiration date",
            "Archive Retrieval Options",
            "SignatureValue",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "provisioned capacity",
            "AWS account",
            "Archive Retrieval Options",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "API Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to list provisioned capacity units in Amazon S3 Glacier using an HTTP GET request, including details on expiration rules and example syntax.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I list provisioned capacity units in Amazon S3 Glacier?",
            "What is the expiration rule for provisioned capacity units?",
            "What is the syntax for the provisioned-capacity API request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "BytesPerHour",
          "retrieval policy",
          "provisioned capacity",
          "provisioned-capacity URI",
          "SignatureValue",
          "Amazon S3 Glacier",
          "Archive Retrieval Options",
          "expiration date",
          "API Version 2012-06-01",
          "AWS account",
          "HTTP GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_542",
      "text": "Amazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the operation is successful, the service sends back an HTTP 200 OK response.\nResponse Syntax\nHTTP/1.1 200 OK\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nContent-Type: application/json\nContent-Length: Length\n{\n\"ProvisionedCapacityList\":\n{\n\"CapacityId\" : \"string\",\nList Provision Capacity API Version 2012-06-01 533",
      "start_idx": 790977,
      "end_idx": 792079,
      "metadata": {
        "num_sentences": 10,
        "num_words": 166,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "AWS account ID",
            "request headers",
            "request body",
            "HTTP 200 OK",
            "x-amzn-RequestId",
            "ProvisionedCapacityList",
            "API version",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "x-amzn-RequestId",
            "HTTP 200 OK",
            "ProvisionedCapacityList"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage Services",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the API details for interacting with Amazon S3 Glacier, including headers, response format, and account ID requirements.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What is the required format for the AccountId parameter in Amazon S3 Glacier API?",
            "What headers are used in Amazon S3 Glacier API requests?",
            "What is the response structure for a successful Amazon S3 Glacier API operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage Services]",
        "tf_idf_keywords": [
          "HTTP 200 OK",
          "request headers",
          "ProvisionedCapacityList",
          "Content-Length",
          "API version",
          "Amazon S3 Glacier",
          "AccountId",
          "x-amzn-RequestId",
          "request body",
          "AWS account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_543",
      "text": "Amazon S3 Glacier Developer Guide\n\"StartDate\" : \"string\"\n\"ExpirationDate\" : \"string\"\n}\n}\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThe response body contains the following JSON fields.\nCapacityId\nThe ID that identifies the provisioned capacity unit.\nType: String.\nStartDate\nThe date that the provisioned capacity unit was purchased, in Coordinated Universal Time\n(UTC).\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nExpirationDate\nThe date that the provisioned capacity unit expires, in Coordinated Universal Time (UTC).\nType: String. A string representation in the ISO 8601 date format, for example\n2013-03-20T17:03:43.221Z.\nErrors\nFor information about Amazon S3 Glacier exceptions and error messages, see Error Responses.\nExamples\nThe following example lists the provisioned capacity units for an account.\nList Provision Capacity API Version 2012-06-01 534",
      "start_idx": 792081,
      "end_idx": 793141,
      "metadata": {
        "num_sentences": 14,
        "num_words": 148,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Specification",
              "Response Structure",
              "Error Handling",
              "Examples"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "provisioned capacity",
            "response headers",
            "ISO 8601",
            "StartDate",
            "ExpirationDate",
            "CapacityId",
            "UTC",
            "error messages",
            "JSON fields"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Documentation",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details on the response structure for listing provisioned capacity units in Amazon S3 Glacier, including JSON fields, response headers, and examples.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the format of the StartDate and ExpirationDate fields in Amazon S3 Glacier?",
            "How can I list provisioned capacity units for an account in Amazon S3 Glacier?",
            "What are the common response headers used in this API operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "UTC",
          "ISO 8601",
          "error messages",
          "provisioned capacity",
          "ExpirationDate",
          "StartDate",
          "JSON fields",
          "response headers",
          "Amazon S3 Glacier",
          "CapacityId",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_544",
      "text": "Amazon S3 Glacier Developer Guide\nExample Request\nIn this example, a GET request is sent to retrieve a list of the provisioned capacity units for the\nspecified account.\nGET /123456789012/priority-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nx-amz-glacier-version: 2012-06-01\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns a HTTP 200 OK with a list of\nprovisioned capacity units for the account as shown in the following example.\nThe provisioned capacity unit listed first is an example of a unit with a start date of January 31,\n2017 and expiration date of February 28, 2017. As stated earlier, if the start date is on the 31st day\nof a month, the expiration date is the last day of the next month.\nHTTP/1.1 200 OK\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nContent-Type: application/json\nContent-Length: length\n{\n\"ProvisionedCapacityList\",\n{\n\"CapacityId\": \"zSaq7NzHFQDANTfQkDen4V7z\",\n\"StartDate\": \"2017-01-31T14:26:33.031Z\",\n\"ExpirationDate\": \"2017-02-28T14:26:33.000Z\",\n},\n{\n\"CapacityId\": \"yXaq7NzHFQNADTfQkDen4V7z\",\n\"StartDate\": \"2016-12-13T20:11:51.095Z\"\",\n\"ExpirationDate\": \"2017-01-13T20:11:51.000Z\" \",\n},\n...\n}\nList Provision Capacity API Version 2012-06-01 535",
      "start_idx": 793143,
      "end_idx": 794683,
      "metadata": {
        "num_sentences": 5,
        "num_words": 172,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Example",
            "subtypes": [
              "Request",
              "Response",
              "API Usage"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "GET request",
            "provisioned capacity units",
            "HTTP 200 OK",
            "x-amz-glacier-version",
            "Authorization",
            "CapacityId",
            "StartDate",
            "ExpirationDate",
            "ProvisionedCapacityList"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS4-HMAC-SHA256",
            "x-amz-glacier-version",
            "HTTP 200 OK",
            "ProvisionedCapacityList"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage API",
          "secondary_categories": [
            "AWS Services",
            "API Integration"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides an example of a GET request to retrieve provisioned capacity units for an Amazon S3 Glacier account, along with the corresponding response format.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I retrieve provisioned capacity units in Amazon S3 Glacier?",
            "What is the response format for a successful GET request in S3 Glacier?",
            "What headers are required for a GET request to S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Example] [Cloud Storage API]",
        "tf_idf_keywords": [
          "Authorization",
          "HTTP 200 OK",
          "AWS4-HMAC-SHA256",
          "provisioned capacity units",
          "ExpirationDate",
          "ProvisionedCapacityList",
          "StartDate",
          "CapacityId",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "GET request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_545",
      "text": "Amazon S3 Glacier Developer Guide\nRelated Sections\n\u2022 Purchase Provisioned Capacity (POST provisioned-capacity)\nPurchase Provisioned Capacity (POST provisioned-capacity)\nThis operation purchases a provisioned capacity unit for an AWS account.\nA provisioned capacity unit lasts for one month starting at the date and time of purchase, which is\nthe start date. The unit expires on the expiration date, which is exactly one month after the start\ndate to the nearest second.\nIf the start date is on the 31st day of a month, the expiration date is the last day of the next\nmonth. For example, if the start date is August 31, the expiration date is September 30. If the start\ndate is January 31, the expiration date is February 28.\nProvisioned capacity helps ensure that your retrieval capacity for expedited retrievals is available\nwhen you need it. Each unit of capacity ensures that at least three expedited retrievals can be\nperformed every five minutes and provides up to 150 MB/s of retrieval throughput. For more\ninformation about provisioned capacity, see Archive Retrieval Options.\nNote\nThere is a limit of two provisioned capacity units per AWS account.\nRequests\nTo purchase provisioned capacity unit for an AWS account send an HTTP POST request to the\nprovisioned-capacity URI.\nSyntax\nPOST /AccountId/provisioned-capacity HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nPurchase Provisioned Capacity API Version 2012-06-01 536",
      "start_idx": 794685,
      "end_idx": 796175,
      "metadata": {
        "num_sentences": 12,
        "num_words": 225,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Request",
              "Usage Explanation"
            ]
          },
          "keywords": [
            "provisioned capacity",
            "AWS account",
            "retrieval capacity",
            "expedited retrievals",
            "provisioned-capacity URI",
            "HTTP POST request",
            "retrieval throughput",
            "start date",
            "expiration date",
            "Archive Retrieval Options"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account",
            "provisioned-capacity URI",
            "HTTP POST",
            "API Version 2012-06-01"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Operations",
            "Performance Optimization"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation explains how to purchase a provisioned capacity unit in Amazon S3 Glacier to ensure expedited retrieval capacity, including its duration, limits, and usage requirements.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I purchase provisioned capacity in Amazon S3 Glacier?",
            "What is the duration and limit of a provisioned capacity unit?",
            "What is the syntax for the HTTP POST request to purchase provisioned capacity?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "retrieval capacity",
          "start date",
          "provisioned capacity",
          "HTTP POST",
          "provisioned-capacity URI",
          "retrieval throughput",
          "Amazon S3 Glacier",
          "Archive Retrieval Options",
          "expedited retrievals",
          "expiration date",
          "API Version 2012-06-01",
          "AWS account",
          "HTTP POST request"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_546",
      "text": "Amazon S3 Glacier Developer Guide\nx-amz-glacier-version: 2012-06-01\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThis operation does not have a request body.\nResponses\nIf the operation request is successful, the service returns an HTTP 201 Created response.\nSyntax\nHTTP/1.1 201 Created\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nx-amz-capacity-id: CapacityId\nResponse Headers\nA successful response includes the following response headers, in addition to the response headers\nthat are common to all operations. For more information about common response headers, see\nCommon Response Headers.\nPurchase Provisioned Capacity API Version 2012-06-01 537",
      "start_idx": 796177,
      "end_idx": 797395,
      "metadata": {
        "num_sentences": 11,
        "num_words": 183,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Headers",
              "Responses"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AccountId",
            "AWS account ID",
            "Request Headers",
            "Request Parameters",
            "Response Headers",
            "HTTP 201 Created",
            "x-amz-glacier-version",
            "x-amzn-RequestId",
            "Provisioned Capacity"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS account ID",
            "x-amz-glacier-version",
            "x-amzn-RequestId",
            "Provisioned Capacity API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "AWS Services"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation outlines the request and response structure for the Amazon S3 Glacier API, specifically focusing on headers, parameters, and response codes for operations like purchasing provisioned capacity.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the required headers for an Amazon S3 Glacier API request?",
            "What does the HTTP 201 Created response indicate in this context?",
            "How should the AccountId be formatted when making a request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Provisioned Capacity",
          "Response Headers",
          "Provisioned Capacity API",
          "Amazon S3 Glacier",
          "AccountId",
          "Request Parameters",
          "x-amzn-RequestId",
          "Request Headers",
          "x-amz-glacier-version",
          "AWS account ID",
          "HTTP 201 Created"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_547",
      "text": "Amazon S3 Glacier Developer Guide\nName Description\nx-amz-capacity-id The ID that identifies the provisioned capacity unit.\nType: String\nResponse Body\nThis operation does not return a response body.\nErrors\nThis operation includes the following error or errors, in addition to the possible errors common\nto all Amazon S3 Glacier operations. For information about Amazon S3 Glacier errors and a list of\nerror codes, see Error Responses.\nCode Description HTTP Status Type\nCode\nLimitExceededException Returned if the given request 400 Bad Client\nwould exceed the account's limit Request\nof provisioned capacity units.\nExamples\nThe following example purchases provisioned capacity for an account.\nExample Request\nThe following example sends an HTTP POST request to purchase a provisioned capacity unit.\nPOST /123456789012/provisioned-capacity HTTP/1.1\nHost: glacier.us-west-2.amazonaws.com\nx-amz-Date: 20170210T120000Z\nAuthorization: AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20141123/\nus-west-2/glacier/aws4_request,SignedHeaders=host;x-amz-date;x-amz-glacier-\nversion,Signature=9257c16da6b25a715ce900a5b45b03da0447acf430195dcb540091b12966f2a2\nContent-Length: length\nx-amz-glacier-version: 2012-06-01\nPurchase Provisioned Capacity API Version 2012-06-01 538",
      "start_idx": 797397,
      "end_idx": 798656,
      "metadata": {
        "num_sentences": 8,
        "num_words": 140,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Error Codes",
              "API Request Example"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "provisioned capacity",
            "x-amz-capacity-id",
            "LimitExceededException",
            "HTTP POST",
            "error codes",
            "Authorization",
            "x-amz-glacier-version",
            "API Version",
            "Content-Length"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "LimitExceededException",
            "x-amz-capacity-id",
            "HTTP POST request",
            "AWS4-HMAC-SHA256"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Error Handling"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "AWS4-HMAC-SHA256"
          ]
        },
        "semantic": {
          "summary": "This documentation provides details on purchasing provisioned capacity for Amazon S3 Glacier, including error codes and an example API request.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What is the x-amz-capacity-id parameter used for?",
            "How can I purchase provisioned capacity in Amazon S3 Glacier?",
            "What errors might occur when exceeding provisioned capacity limits?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "API Version",
          "AWS4-HMAC-SHA256",
          "error codes",
          "provisioned capacity",
          "HTTP POST",
          "Content-Length",
          "Amazon S3 Glacier",
          "LimitExceededException",
          "x-amz-glacier-version",
          "HTTP POST request",
          "x-amz-capacity-id"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_548",
      "text": "Amazon S3 Glacier Developer Guide\nExample Response\nIf the request was successful, Amazon S3 Glacier (S3 Glacier) returns an HTTP 201 Created\nresponse, as shown in the following example.\nHTTP/1.1 201 Created\nx-amzn-RequestId: AAABZpJrTyioDC_HsOmHae8EZp_uBSJr6cnGOLKp_XJCl-Q\nDate: Wed, 10 Feb 2017 12:02:00 GMT\nx-amz-capacity-id: zSaq7NzHFQDANTfQkDen4V7z\nRelated Sections\n\u2022 List Provisioned Capacity (GET provisioned-capacity)\nSet Data Retrieval Policy (PUT policy)\nDescription\nThis operation sets and then enacts a data retrieval policy in the AWS Region specified in the PUT\nrequest. You can set one policy per AWS Region for an AWS account. The policy is enacted within a\nfew minutes of a successful PUT operation.\nThe set policy operation does not affect retrieval jobs that were in progress before the policy was\nenacted. For more information about data retrieval policies, see S3 Glacier Data Retrieval Policies.\nRequests\nSyntax\nTo set a data retrieval policy, send an HTTP PUT request to the data retrieval policy URI as shown in\nthe following syntax example.\nPUT /AccountId/policies/data-retrieval HTTP/1.1\nHost: glacier.Region.amazonaws.com\nDate: Date\nAuthorization: SignatureValue\nContent-Length: Length\nx-amz-glacier-version: 2012-06-01\n{\n\"Policy\":\nSet Data Retrieval Policy API Version 2012-06-01 539",
      "start_idx": 798658,
      "end_idx": 799968,
      "metadata": {
        "num_sentences": 8,
        "num_words": 182,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Procedural",
            "subtypes": [
              "API Interaction",
              "HTTP Response",
              "Policy Setting"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "HTTP PUT request",
            "data retrieval policy",
            "AWS Region",
            "x-amzn-RequestId",
            "x-amz-glacier-version",
            "201 Created response",
            "Authorization",
            "Content-Length",
            "provisioned capacity"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Region",
            "x-amzn-RequestId",
            "x-amz-capacity-id",
            "glacier.Region.amazonaws.com"
          ],
          "has_code": true
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Development",
            "Data Management"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": [
            "Authorization Signature",
            "HTTP Protocol"
          ]
        },
        "semantic": {
          "summary": "This documentation explains how to set and enact a data retrieval policy in Amazon S3 Glacier using an HTTP PUT request and provides an example of a successful response.",
          "intents": [
            "How-To",
            "Reference"
          ],
          "potential_questions": [
            "How do I set a data retrieval policy in Amazon S3 Glacier?",
            "What is the HTTP response for a successful policy enactment?",
            "What are the required headers for the PUT request?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Procedural] [Cloud Storage]",
        "tf_idf_keywords": [
          "Authorization",
          "data retrieval policy",
          "HTTP PUT request",
          "provisioned capacity",
          "Content-Length",
          "x-amz-capacity-id",
          "glacier.Region.amazonaws.com",
          "AWS Region",
          "Amazon S3 Glacier",
          "x-amz-glacier-version",
          "x-amzn-RequestId",
          "201 Created response"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_549",
      "text": "Amazon S3 Glacier Developer Guide\n{\n\"Rules\":[\n{\n\"Strategy\": String,\n\"BytesPerHour\": Number\n}\n]\n}\n}\nNote\nThe AccountId value is the AWS account ID. This value must match the AWS account ID\nassociated with the credentials used to sign the request. You can either specify an AWS\naccount ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the\nAWS account ID associated with the credentials used to sign the request. If you specify your\naccount ID, do not include any hyphens ('-') in the ID.\nRequest Parameters\nThis operation does not use request parameters.\nRequest Headers\nThis operation uses only request headers that are common to all operations. For information about\ncommon request headers, see Common Request Headers.\nRequest Body\nThe request body contains the following JSON fields.\nBytesPerHour\nThe maximum number of bytes that can be retrieved in an hour.\nThis field is required only if the value of the Strategy field is BytesPerHour. Your PUT\noperation will be rejected if the Strategy field is not set to BytesPerHour and you set this\nfield.\nType: Number\nSet Data Retrieval Policy API Version 2012-06-01 540",
      "start_idx": 799970,
      "end_idx": 801112,
      "metadata": {
        "num_sentences": 12,
        "num_words": 191,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Request Parameters",
              "Request Headers"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS Account ID",
            "Strategy",
            "BytesPerHour",
            "Request Parameters",
            "Request Headers",
            "API Version",
            "Data Retrieval Policy",
            "PUT Operation",
            "JSON Fields"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS Account ID",
            "Strategy Field",
            "BytesPerHour Field",
            "Set Data Retrieval Policy API"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Integration",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation provides details about setting data retrieval policies for Amazon S3 Glacier, including the use of account IDs, request headers, and JSON fields such as Strategy and BytesPerHour.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How do I set a data retrieval policy in Amazon S3 Glacier?",
            "What is the significance of the Strategy field in the API request?",
            "What headers are required for this operation?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Set Data Retrieval Policy API",
          "API Version",
          "Strategy",
          "Request Headers",
          "JSON Fields",
          "BytesPerHour",
          "Strategy Field",
          "Data Retrieval Policy",
          "Amazon S3 Glacier",
          "Request Parameters",
          "BytesPerHour Field",
          "PUT Operation",
          "AWS Account ID"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_550",
      "text": "Amazon S3 Glacier Developer Guide\nRequired: Yes, if the Strategy field is set to BytesPerHour. Otherwise, no.\nValid Values: Minimum integer value of 1. Maximum integer value of 2^63 - 1 inclusive.\nRules\nThe policy rule. Although this is a list type, currently there must be only one rule, which\ncontains a Strategy field and optionally a BytesPerHour field.\nType: Array\nRequired: Yes\nStrategy\nThe type of data retrieval policy to set.\nType: String\nRequired: Yes\nValid values: BytesPerHour|FreeTier|None. BytesPerHour is equivalent to selecting\nMax Retrieval Rate in the console. FreeTier is equivalent to selecting Free Tier Only in\nthe console. None is equivalent to selecting No Retrieval Policy in the console. For more\ninformation about selecting data retrieval policies in the console, see S3 Glacier Data Retrieval\nPolicies.\nResponses\nSyntax\nHTTP/1.1 204 No Content\nx-amzn-RequestId: x-amzn-RequestId\nDate: Date\nResponse Headers\nThis operation uses only response headers that are common to most responses. For information\nabout common response headers, see Common Response Headers.\nResponse Body\nThis operation does not return a response body.\nSet Data Retrieval Policy API Version 2012-06-01 541",
      "start_idx": 801114,
      "end_idx": 802316,
      "metadata": {
        "num_sentences": 16,
        "num_words": 181,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "API Documentation",
              "Field Description",
              "Response Details"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "BytesPerHour",
            "FreeTier",
            "No Retrieval Policy",
            "Strategy field",
            "data retrieval policy",
            "response headers",
            "Max Retrieval Rate",
            "HTTP/1.1 204 No Content",
            "API Version 2012-06-01"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Strategy field",
            "BytesPerHour",
            "FreeTier",
            "API Version 2012-06-01"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "API Design",
            "Data Retrieval"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "This documentation details the data retrieval policy settings for Amazon S3 Glacier, including valid values, required fields, and response details for the Set Data Retrieval Policy API.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the valid values for the Strategy field in Amazon S3 Glacier?",
            "How do I set a data retrieval policy using the API?",
            "What is the response format for the Set Data Retrieval Policy API?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "BytesPerHour",
          "data retrieval policy",
          "HTTP/1.1 204 No Content",
          "Strategy field",
          "No Retrieval Policy",
          "response headers",
          "Amazon S3 Glacier",
          "FreeTier",
          "Max Retrieval Rate",
          "API Version 2012-06-01"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_554",
      "text": "Amazon S3 Glacier Developer Guide\nDocument History\n\u2022 Current product version: 2012-06-01\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide from July 5, 2018, onward. For notification about updates to this documentation,\nyou can subscribe to an RSS feed.\nChange Description Date\nImproved start times for Standard retrievals for restore August 9, 2023\nStandard restore requests requests that are made\nmade through S3 Batch through S3 Batch Operations\nOperations now can start within minutes.\nFor more information, see\nArchive Retrieval Options.\nAmazon S3 supports higher Amazon S3 supports restore November 15, 2022\nrestore request rates for S3 requests at a rate of up\nGlacier Flexible Retrieval and to 1,000 transactions per\nS3 Glacier Deep Archive second, per AWS account\nfor the S3 Glacier Flexible\nRetrieval and S3 Glacier Deep\nArchive storage classes.\nAmazon Glacier name change Amazon Glacier is now November 20, 2018\nAmazon S3 Glacier to better\nreflect Glacier's integration\nwith Amazon S3.\nUpdates now available over You can now subscribe to an July 5, 2018\nRSS RSS feed to receive notificat\nions about updates to the\nAmazon S3 Glacier Developer\nGuide guide.\nAPI Version 2012-06-01 545",
      "start_idx": 804665,
      "end_idx": 805916,
      "metadata": {
        "num_sentences": 8,
        "num_words": 197,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Change Log",
              "Feature Updates"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "Standard retrievals",
            "S3 Batch Operations",
            "restore requests",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "transactions per second",
            "RSS feed",
            "API version",
            "archive retrieval"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "S3 Batch Operations",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive",
            "AWS account"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "AWS Documentation"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "S3 Glacier Flexible Retrieval",
            "S3 Glacier Deep Archive"
          ],
          "mentioned_tools": [
            "RSS feed"
          ]
        },
        "semantic": {
          "summary": "This document provides a history of updates to the Amazon S3 Glacier Developer Guide, including performance improvements, feature changes, and subscription options for update notifications.",
          "intents": [
            "Reference"
          ],
          "potential_questions": [
            "What are the recent updates to Amazon S3 Glacier retrieval options?",
            "How can I subscribe to notifications for updates to the Amazon S3 Glacier Developer Guide?",
            "What is the current API version for Amazon S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "S3 Batch Operations",
          "archive retrieval",
          "RSS feed",
          "transactions per second",
          "S3 Glacier Flexible Retrieval",
          "Standard retrievals",
          "API version",
          "Amazon S3 Glacier",
          "restore requests",
          "AWS account",
          "S3 Glacier Deep Archive"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_555",
      "text": "Amazon S3 Glacier Developer Guide\nEarlier Updates\nThe following table describes the important changes in each release of the Amazon S3 Glacier\nDeveloper Guide before July 5, 2018.\nChange Description Release Date\nExpedited S3 Glacier now supports Expedited and Bulk data November 21,\nand Bulk Data retrievals in addition to Standard retrievals. For more 2016\nRetrievals information, see Archive Retrieval Options.\nVault Lock S3 Glacier now supports Vault Lock, which allows you July 8, 2015\nto easily deploy and enforce compliance controls on\nindividual S3 Glacier vaults with a Vault Lock policy.\nFor more information, see S3 Glacier Vault Lock and\nVault Lock Policies.\nVault tagging S3 Glacier now allows you to tag your S3 Glacier June 22, 2015\nvaults for easier resource and cost management.\nTags are labels that you can define and associate\nwith your vaults, and using tags adds filtering\ncapabilities to operations such as AWS cost reports.\nFor more information, see Tagging Amazon S3 Glacier\nResources and Tagging Your S3 Glacier Vaults.\nVault access S3 Glacier now supports managing access to your April 27, 2015\npolicies individual S3 Glacier vaults by using vault access\npolicies. You can now define an access policy directly\non a vault, making it easier to grant vault access to\nusers and business groups internal to your organizat\nion, as well as to your external business partners. For\nmore information, see Vault Access Policies.\nData retrieval S3 Glacier now supports data retrieval policies and December 11,\npolicies and audit audit logging. Data retrieval policies allow you to 2014\nlogging easily set data retrieval limits and simplify data\nretrieval cost management. You can define your own\ndata retrieval limits with a few clicks in the AWS\nEarlier Updates API Version 2012-06-01 546",
      "start_idx": 805918,
      "end_idx": 807720,
      "metadata": {
        "num_sentences": 14,
        "num_words": 289,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Feature Updates",
              "Release Notes"
            ]
          },
          "keywords": [
            "S3 Glacier",
            "Vault Lock",
            "Vault Tagging",
            "Vault Access Policies",
            "Data Retrieval Policies",
            "Expedited Retrievals",
            "Bulk Retrievals",
            "Audit Logging",
            "AWS Cost Reports",
            "Compliance Controls"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "Vault Lock",
            "AWS cost reports",
            "Archive Retrieval Options",
            "Vault Access Policies"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Management",
            "Compliance"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier"
          ],
          "mentioned_tools": []
        },
        "semantic": {
          "summary": "The document outlines key updates to Amazon S3 Glacier features, including retrieval options, vault tagging, access policies, and compliance controls, up to July 5, 2018.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "What are the retrieval options available in Amazon S3 Glacier?",
            "How can compliance controls be enforced using Vault Lock policies?",
            "What is the process for tagging S3 Glacier vaults for cost management?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "Audit Logging",
          "AWS Cost Reports",
          "Compliance Controls",
          "Bulk Retrievals",
          "Vault Lock",
          "Vault Tagging",
          "Amazon S3 Glacier",
          "Archive Retrieval Options",
          "Data Retrieval Policies",
          "AWS cost reports",
          "S3 Glacier",
          "Expedited Retrievals",
          "Vault Access Policies"
        ]
      }
    },
    {
      "chunk_id": "86f66c58-06cb-4f32-9d96-d5ccb8ad5a82_chunk_556",
      "text": "Amazon S3 Glacier Developer Guide\nChange Description Release Date\nManagement Console or by using the S3 Glacier API.\nFor more information, see S3 Glacier Data Retrieval\nPolicies.\nIn addition, S3 Glacier now supports audit logging\nwith AWS CloudTrail, which records S3 Glacier API\ncalls for your account and delivers the log files to\nan Amazon S3 bucket that you specify. For more\ninformation, see Logging Amazon S3 Glacier API Calls\nwith AWS CloudTrail.\nUpdates to Java Updated the Java code examples in this guide that June 27, 2014\nsamples use the AWS SDK for Java.\nLimiting vault You can now limit the number of vault inventory December 31,\ninventory retrieval items retrieved by filtering on the archive creation 2013\ndate or by setting a limit. For more information\nabout limiting inventory retrieval, see Range Invento\nry Retrieval in the Initiate Job (POST jobs) topic.\nRemoved Removed the URLs that pointed to the old security July 26, 2013\noutdated URLs credentials page from code examples.\nSupport for range S3 Glacier now supports retrieval of specific ranges November 13,\nretrievals of your archives. You can initiate a job requesting 2012\nS3 Glacier to prepare an entire archive or a portion\nof the archive for subsequent download. When an\narchive is very large, you may find it cost effective\nto initiate several sequential jobs to prepare your\narchive.\nFor more information, see Downloading an Archive in\nS3 Glacier.\nNew Guide This is the first release of the A mazon S3 Glacier August 20, 2012\nDeveloper Guide.\nEarlier Updates API Version 2012-06-01 547",
      "start_idx": 807722,
      "end_idx": 809291,
      "metadata": {
        "num_sentences": 14,
        "num_words": 259,
        "source": "paragraph",
        "content": {
          "content_type": {
            "primary": "Reference",
            "subtypes": [
              "Update Log",
              "Feature Description"
            ]
          },
          "keywords": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "vault inventory retrieval",
            "archive range retrieval",
            "API calls",
            "audit logging",
            "Java code examples",
            "security credentials",
            "Initiate Job",
            "SDK for Java"
          ],
          "entities": [
            "Amazon S3 Glacier",
            "AWS CloudTrail",
            "Initiate Job",
            "Range Inventory Retrieval",
            "SDK for Java"
          ],
          "has_code": false
        },
        "technical": {
          "primary_category": "Cloud Storage",
          "secondary_categories": [
            "Data Retrieval",
            "Audit Logging"
          ],
          "mentioned_services": [
            "Amazon S3 Glacier",
            "AWS CloudTrail"
          ],
          "mentioned_tools": [
            "SDK for Java"
          ]
        },
        "semantic": {
          "summary": "The document outlines updates and features of Amazon S3 Glacier, including audit logging with AWS CloudTrail, inventory retrieval limits, and archive range retrievals, along with updates to Java code examples and removal of outdated URLs.",
          "intents": [
            "Reference",
            "How-To"
          ],
          "potential_questions": [
            "How can I enable audit logging for S3 Glacier using AWS CloudTrail?",
            "What are the options for limiting vault inventory retrieval in S3 Glacier?",
            "How does range retrieval work for archives in S3 Glacier?"
          ]
        }
      },
      "embedding_enhancement": {
        "contextual_prefix": "[Reference] [Cloud Storage]",
        "tf_idf_keywords": [
          "vault inventory retrieval",
          "archive range retrieval",
          "security credentials",
          "API calls",
          "Initiate Job",
          "SDK for Java",
          "Amazon S3 Glacier",
          "Java code examples",
          "Range Inventory Retrieval",
          "AWS CloudTrail",
          "audit logging"
        ]
      }
    }
  ],
  "metadata": {
    "total_chunks": 462,
    "avg_chunk_size": 212.74891774891776,
    "chunking_method": "NaiveChunker",
    "processed_at": "2025-05-04T18:45:19.336103",
    "total_paragraphs": 559,
    "total_sentences": 4863,
    "total_words": 109977,
    "chunking_strategy": "naive_paragraph",
    "enrichment": {
      "method": "llm",
      "model": "VARELab-GPT4o",
      "enriched_at": "2025-05-05 07:00:21"
    }
  }
}